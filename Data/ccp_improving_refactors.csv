commit,repo_name,message
c099c25a8c791620df13071fc97823bfe9ccf34c,h2o/h2o,"Merge pull request #1430 from h2o/i110/http-request-with-no-content-response

make mruby handler handle empty body properly"
1e65db0eb37de0f3207683a3760f2afbdec2140b,h2o/h2o,"rewrite Location: header from upstream (merge branch 'kazuho/issues/65', close #65)
"
27f9fe2cd8ed2a57a20ae42ab0a8336b5e78ea37,h2o/h2o,"Merge pull request #1122 from iceb0y/patch-1

Remove duplicate compress.c from CMakeLists.txt"
7a96a068f82e0661bb2b39712b7ac735eeda38c1,lxc/lxc,"confile: lxc.rootfs --> lxc.rootfs.path

Signed-off-by: Christian Brauner <48455ab3070520a2d174545c7239d6d0fabd9a83@ubuntu.com>
"
8777796839ab754e22b088dbf4e681d903c68ce8,lxc/lxc,"cgroups: cgfsng_set: handle unified hierarchy

Signed-off-by: Christian Brauner <48455ab3070520a2d174545c7239d6d0fabd9a83@ubuntu.com>
"
0a886c56a76768bc5f4efb418209159e22ab9c6b,lxc/lxc,"Merge pull request #2671 from brauner/2018-10-03/syscall_wrappers

syscalls: move wrappers and raw syscalls to appropriate files"
38683db41204cb221892beeb88d67a1df4a07287,lxc/lxc,"Split bdev into modules: overlay

With this commit we start to split bdev.{c,h} into modules located in the
subfolder bdev. We start by creating a module for overlay: overlay.{c,h}.

- The functions:

	- overlayfs_detect()
	- overlayfs_mount()
	- overlayfs_umount()
	- overlayfs_clonepaths()
	- overlayfs_destroy()
	- overlayfs_create()

  move from bdev.{c,h} to overlay.{c,h}. The only thing that remains in bdev.c
  is the static definition of

	- static const struct bdev_ops overlayfs_ops

- The functions:

	- update_ovl_paths()
	- overlay_getlower()

  move from lxccontainer.c to overlay.{c,h}. update_ovl_paths() is used to
  update absolute paths for overlay lxc.mount.entry entries but it seems to fit
  more here than into lxccontainer.c.
  The Function overlay_getlower() is used to extract the lower directory for
  overlay (and aufs) rootfs. It should at some point become a common helper.

- The functions:

	- do_rsync()
	- dir_new_path()

   remain in bdev.c for now but become extern. We declare them extern in
   overlay.c to be able to call them. As the comment to them correctly notices,
   they should at some point become common helpers and probably move to
   utils.{c,h} or some other more appropriate place.

- The structs:

	- struct bdev; /* defined in bdev.h */
	- struct bdev_specs; /* defined in lxccontainer.h */
	- struct lxc_conf; /* defined conf.h */

  are forward declared/put as incomplete types in overlay.h so that the
  functions have access to it.

- The header overlay.h is *not* included in bdev.h but only in bdev.c so that
  when bdev.h is included the public functions in overlay.h cannot be accessed,
  i.e. if an implementation wants to call functions from overlay.h they need to
  explicitly include it. (As is e.g. done in the case of lxccontainer.c.)

- The header

	- lxc-btrfs.h

  also moves to the bdev subfolder.

- Adapt Makefile.am to the new bdev layout.

Signed-off-by: Christian Brauner <48455ab3070520a2d174545c7239d6d0fabd9a83@mailbox.org>
"
c2aed66d0ff8440cae33b5c08ca055a234197c88,lxc/lxc,"cgroups: cgfsng_attach: handle unified hierarchy

Signed-off-by: Christian Brauner <48455ab3070520a2d174545c7239d6d0fabd9a83@ubuntu.com>
"
7fa3f2e9eb31f574662a98041d1373c9af709bd1,lxc/lxc,"replace all lxc.network* with lxc.net*

This patch wipe all references to lxc.network{[i]}.*
and replace with lxc.net.{[i]}.* in templates, documentation
and configuration files.

Signed-off-by: 0x0916 <aff024fe4ab0fece4091de044c58c9ae4233383a@laoqinren.net>
"
aa5233a6769926944d5f056484d4796f5b3a4eb0,lxc/lxc,"Remove unused functions

After 95ee490bbdb97ab2b4f1dfa63a0a26e0dd1c2f17 they are not in public
API and are not used throughout the lxc codebase.
This has a bonus of removing workaround for bionic.

Signed-off-by: Andrey Mazo <0e24aa1e260ded045c3aee3b86be34f21dfd00fa@telum.ru>
Acked-by: St√©phane Graber <089afc6d81f66f1168a9849e15660feae286e024@ubuntu.com>
"
ca3f49ca1f0723f506f710e6d3815c854341807d,ACP3/cms,"- refactored the validation classes a bit
- did some more work to get the installer running again"
29db68c5535f368b4fb6b72a898f8e3a99f66970,ACP3/cms,"- new feature:
  -> allow additional method parameters to be issued when calling controller actions (mainly for sidebar actions)
- added ""latest articles"" sidebar action
- added ""single"" article sidebar action"
86bfacd253aa50f1fdc67c527b435f15e19da24a,Jguer/yay,"Remove unneeded vars and fix missing err check
"
74ef0beaed47da95ac4ceefcaf1780caf9a74e40,Jguer/yay,"Fix error when cacheHome does not exist

And refactor initYay out into smaller parts
"
461515e66c64050a561429ff6a62109fd72217c5,cylc/cylc,"scheduler, task_pool, task_proxy refactor

Move task event handler logic in `cylc.scheulder` to the new
`cylc.task_events_mgr` module.
"
57323f7a321ab625d8871ed087f8398e9bbec293,cylc/cylc,"Merge pull request #2157 from matthewrmshin/refactor-task-proxy

scheduler, task_pool, task_proxy refactor"
59490f7cc799996290ffc238d1a727da120699e3,cylc/cylc,"scheduler, task_pool, task_proxy refactor

Run time database management moved from scheduler and task_pool to
own module.
"
b1e0a418e78e98cabb722e02adf10aae6a6d48f2,cylc/cylc,"Separate remote log directory.
"
847e6ce13c6e74316ab044d6ed5927f57090231b,cylc/cylc,"split and merge views into single GUI.
"
05ca98be073af3f1d26639fd6c18c4c3ad4b601b,cylc/cylc,"Squashed commit from private branch.

Some streamlining of command option parsing and ssh command
reinvocation for (a) remote control and (b) pseudo cylc-version backward
compatibility.

1) All commands now use the same simplified option parser.
2) Pseudo backward compatibility now works for running (and remote) suites.
3) Remote ssh invocation for all commands, including (optionally) those
that normally connect to remote suites via Pyro.

And some minor changes:
3) Removed the central suite database.
4) Moved lockserver from the control command category to utility.
5) Renamed the maxrunahead command to set-runahead.
"
ccdf3151b1bcee9f4a5f7114e11853220affe55c,cylc/cylc,"Improve stall logic in presence of clock trigger

Before this change, if the suite has any clock triggered tasks, the
suite will wait for all clock triggered times to reach before considering
the suite as stalled, even if the clock triggered tasks can never be
triggered due to dependencies issues.

With this change, the suite will treat waiting clock triggered tasks
with unsatisfied dependencies the same as other waiting tasks with
unsatisfied dependencies. However, it will consider a clock triggered
task as an *active* task if it has its dependencies satisfied but is
only waiting for the clock triggered time.

The change allows the stalled event to be raised as soon as the
following conditions are satisfied:
* There is no activity after one main loop.
* The task pool is left with only inactive tasks.
  * Active tasks are those that are not pending outputs of other tasks.
* The task pool has inactive tasks with unsatisfied dependencies.

Fix test UTC
"
e97a9efdc7463927db895639546dd6ebf06bf0e4,cylc/cylc,"cylc scan: minor improve

Unify logic with `cylc gscan` - get list of running suites via file
system by default.

Check regular expressions in `--name=PATTERN` and `--suite-owner=PATTERN`
before use.

Use object attr instead of `global` to configure callable in `bin/cylc-scan`.
"
37a26a3ac303937df7374d504ffc27ed6ab049e6,cylc/cylc,"Clean up use of pyro connection timeouts, and default to None.
"
ec4a877ec620c319f6d9a42db180c9deae1bc9ee,cylc/cylc,"Moving % to variable first pass.
"
18a2e95fe80843e8dfbb03d3ae97cf137b5d233f,cylc/cylc,"Improvements to the db commands and reg code.
"
a371810e2a9bb3c572dcb19ecb1a7476a8a61605,cylc/cylc,"TaskTrigger refactor.
"
c8e3cddcbab5719f5ce5335c5b02d0cf0e894bc1,cylc/cylc,"Improve suite events handlers

Add built-in event email configurations.
Add general suite event handlers.
Allow flexible event handlers.
Run event handlers in process pool where possible.
"
5ca5df3302228173c29c9611a4a1c3e0c4052138,cylc/cylc,"Generalized cycling, with examples; almost complete.

(squash merge from a private feature branch).
Squashed commit of the following:

commit 8f5699f20e98f7bb2cca38d6ff1a89f3ae19272a
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Sat Mar 24 13:46:41 2012 +1300

    multiple cyclers at once

commit c2194de8a2edf562fe63ccc93f44aa5a3a606698
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Sat Mar 24 13:13:23 2012 +1300

    Yearly -> Anniversary with stride; other changes.

commit 2f77baea26e5a44914fe85e783b69f9056e01a7f
Merge: dc43cfb... c72c5d9...
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Sat Mar 24 12:13:38 2012 +1300

    Merge branch 'master' into cycler

commit dc43cfb4f2d752cb1ca060a170301a2bc3073a21
Merge: d4c91cf... 49e4f66...
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Wed Mar 21 17:03:46 2012 +1300

    Merge branch 'master' into cycler

    Conflicts:
    	lib/cylc/config.py

commit d4c91cfa66751d552b15d38dc2fd480cf52bb9cb
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Wed Mar 21 11:10:45 2012 +1300

    working with async oneoffs

commit fa8107cd60f3dc2f447bf1c44fa1c952a4e3aa50
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Wed Mar 21 10:52:41 2012 +1300

    incremental

commit 6e99b4d3598a894bc1b5c1ef8e0645cf5b9da2be
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Wed Mar 21 09:57:52 2012 +1300

    working?

commit 4f2641a55b73f3f33389936629774e355738f44c
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Wed Mar 21 00:39:55 2012 +1300

    converting to suite cycler and cycler class offset.

commit cd5c48b7eb8a9994c7d94788941b5884b7382f49
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 20 16:46:02 2012 +1300

    Updated cycler README.

commit 93fc0e0b26c345dc609862e9c6ccd1034782a713
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 20 16:34:12 2012 +1300

    Temporarily disabled conditional trigger check.

commit 7b3888d04459ae2b02efcd3775b8e9fc0631fb87
Merge: 5812ed3... 602b95f...
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 20 16:25:55 2012 +1300

    Merge branch 'master' into cycler

commit 5812ed36260a70aa191316da97792dd8aab3f265
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 20 16:11:02 2012 +1300

    cold start tasks display in gui properly.

commit 6aa3941822a522867975e8cd1b488b2934cdf115
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 20 11:34:59 2012 +1300

    working with conditional prereqs.

commit 558c5d3ef407ccc00094524f2ee9bb5cae6ff57f
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 20 09:40:38 2012 +1300

    Fix config graph limits for cyclers.

commit 4683bf3fbc4509eba434c5be99b23fb9793c0011
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 20 09:31:12 2012 +1300

    Added trigger class.

commit 62f38da74a9fafc5a3fcda1c7086b5141685205d
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 20 08:24:13 2012 +1300

    more...

commit 71a772ab2e199f32bfe55cdf419f953cfb9e4ad0
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 20 00:49:05 2012 +1300

    graphing working.

commit 3d488387686462a2d03764dc069cbd965d4922f6
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Mon Mar 19 07:30:35 2012 +1300

    started with container.

commit 6fa42e77bbaecd4eaecefd5a768433ded7a6369f
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Wed Mar 14 00:41:21 2012 +1300

    more ...

commit 79cacd5082906c3d08c208e879e50f739677160f
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Fri Mar 9 11:38:19 2012 +1300

    incremental...

commit bc128f8e1235c535ddef235755dd9758b3ebece6
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Tue Mar 6 00:03:36 2012 +1300

    minor...

commit 9900fce7aaea732e2c4be3895fad5a580531ea63
Merge: e67cd29... 62fb8ab...
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Mon Mar 5 23:51:48 2012 +1300

    Merge branch 'master' into cycler

commit e67cd2979f5216d668117fff73b02795d87c30a3
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Mon Mar 5 23:42:04 2012 +1300

    minor change.

commit 29ffd3d4785046c1453ee96bdcfff123c9b35036
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Mon Feb 27 00:13:50 2012 +1300

    in prog: offsets not working?

commit 741cde1371bad372276ede75f7806ae52ad15169
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Wed Feb 22 11:30:22 2012 +1300

    Restored original NWP hour cycling notation.

commit 6acba172bb480eefa0de3eca56c5a3a395e70a44
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Wed Feb 22 11:24:22 2012 +1300

    Got cold-start tasks working.

commit f7be16d4833ad6f9396dc30164d3d5a554233ccb
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Mon Feb 20 23:03:08 2012 +1300

    Graph working, I think.

commit 52a4958c7faaec256aef82aaa81404470c9626a2
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Mon Feb 20 00:10:48 2012 +1300

    Progress no.3: sub-dirs.

commit 8d4c7412eca52e8955af32ea4353177b4ea0b135
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Mon Feb 20 00:01:15 2012 +1300

    Progress no.2: yearly cycling working (no graphing).

commit 587b7979dae611e1299538b85708e9a1b66858f2
Author: Hilary James Oliver <h.oliver@niwa.co.nz>
Date:   Sun Feb 19 23:14:22 2012 +1300

    In progress no.1
"
544d967fafe977e2799802539b9775ef938e6915,eciis/web,"Merge pull request #204 from eciis/refactoring-post-deleted

Refact delete post"
97d64311a1603dec57c88b2610b975bfeacb8f07,eciis/web,"Extracting user's email constant
"
c9660e46bfbf21ef011f8e11e048f2fd46d0d350,eciis/web,"Refactoring the set_admin function in institution.py and add_institution_admin in user.py
"
7c636d02f70104bd7fd34d1759f38ed6e143262f,eciis/web,"refactoring comment.html
"
71465f1acdbb0822084c618c1c9b0f5d804727bf,eciis/web,"Merge into master, adding doc to explain variable MAXIMUM_CSV_SIZE, improving 'select()' function and message in 'inviteUser()'
"
11dc086e54715c3e46f48cf5199beb860c600e79,eciis/web,"remove unused template from request processing dialog, add made institution parent to made request, and solved bug when selecting dialog to show
"
8899300e1614c02c8b1a51d325cf1e782e5e6959,eciis/web,"Merge pull request #1017 from eciis/move-remove-inst-to-the-queue

Moving the institution's removal to the queue."
18449619d06eab8c0347411588cdef40782dde69,epam/DLab,"[EPMCDLAB-1120]: Refactoring images for all clouds
"
a5f2729f82e91a7a5ca2736abea2c3286afda722,epam/DLab,"[EPMCDLAB-1106]: removed obsolete syntax
"
c50b1a18d953b316fc34aa88711b28dceead81aa,epam/DLab,"Refactored some code snippets
"
e08196df48e55a6610b9740073f0fde2df056a21,epam/DLab,"[EPMCDLAB-981]: refactored install additional libs scripts
"
a4ff79894776fa14c598d53d901a2ba6dee9e6e7,este/este,"Extract and refactor loading of parts of state for a user
"
2c7ef6afe504adfa47fd6c1c495e19e55ca5457f,este/este,"Merge pull request #319 from XeeD/refactor-user-state

Extract and refactor loading of parts of state for a user"
64167b16e8ecfc89199e48675086dcc6ae6cd388,este/este,"Replace ""import * as generated"" with explicit import type
"
35340aaef7441d37aa5a9fd17e079986251d58b8,gocd/gocd,"Implement grouping by environments

  - Add widget to toggle grouping schmees; needs styling, desperately
  - Move pipeline filtering and group retrieval to DashboardVM; DashboardVM now contains a reference to the Dashboard model
  - Break DashboardWidget into some smaller components
  - DashboardVM abstracts retrieval of dashboard groups based on scheme and text filtering
"
27fd7a6b6d58e7bfdb922f1bb17e8f34cb3dc74e,gocd/gocd,"API improvements to manage agents

This API is compliant with the RFC (#1100) specified at https://github.com/gocd/gocd/issues/1100

* API method for renaming agent (#958)
* API method for assigning resources to agents (part of #959)
"
0a8e0218965d1db96e97e6dfee8e51d8ccb23bb1,gocd/gocd,"Moved etag computation on object content to java making use of the xml representation (#2284).

* Deleted EntityDigest and its implenentations, added a message for stale request.
* Changed etag implementation for environment config, fixing test failures in environments controller, explicitly set the etag on response of create or update call.
* Changed the cachekey to include the domain object's class name too.
"
859c0a7efbbf106f72d410481d915f9accbd429a,gocd/gocd,"Remove more unused dependencies.
"
db104da526b8211de6e3805b03e5127bc0f8f5b7,gocd/gocd,"Agents Single Page Application (#2406)

A re-write of the agents page using the mithril js framework.

Functionally, this page is similar to the old agents page.
This commit does not support viewing of job run history.

This feature is toggled off by default."
ef0f82dddab79fbfcc128f78cab7fe78c76a5254,gocd/gocd,"Cleanup code

* extract common webhook code into superclass
* move controller classes into `WebHook` module
"
bf7393660df20318ccd9f5093d4f9b2a1123ba64,gocd/gocd,"Miscellaneous fixes to SPA ‚Äî

* Improve handing of password/encrypted fields
* Improve look and feel and feedback when saving
* Use opensans font throughout
* Refactor to improve performance based on browser profiling
* Improvements to the save feedback.
* Address some feedback around renaming labels
"
f79e678911bae3f3cdb8c08c767967364350515f,gpac/gpac,"clean up + 4 bits for delay
"
93a1c1dae72e75cf92fca985c44463d5456f515e,gpac/gpac,"Rewrite of SDL2 output and misc fixes for iOS support
"
7f3ed1eda19eaf846df93b7c4d1ab1069ab0c130,grpc/grpc,"Factor out the pollset kicking mechanism and eliminate sharding

This change pulls out a separate pollset_kick module, which currently
uses a freelist of pipes dynamically assigned to pollsets when they
enter polling rather than the previous racy sharding mechanism.

We ultimately may wish to eliminate the dynamic assignment for multipoll
sets, but this should be sufficient for the moment.
"
917af9a47f6141b897e1288a71e846f054941a39,grpc/grpc,"use finally instead of catch-throw
"
b0d33951e13312344672ba9a7b2be2f5e8fa1d63,grpc/grpc,"Merge pull request #7384 from soltanmm/import-stallion

Move Python.h include out of loader code"
24be0f79e2a1a0b8beeb6141aa5dc83804d36a0d,grpc/grpc,"Rewrite server request startup path

Stub in registered methods, cleanup to the point I understand this code
again.
"
34edebc1f5693ba4e4fadb4393904c0dd5a08985,grpc/grpc,"Merge branch 'cleaner-posix2' into cleaner-posix3
"
fe8dc883d0733a0091c6cc429e74df680749aa2d,grpc/grpc,"Reorganize Python packages

This is in preparation of moving all tests into a separate package to
enable ease of coverage checking and testing.
"
48854d20614108cf1ee9b4f0141c4b9f4eb5b233,grpc/grpc,"Change trace logging to use GPR_INFO instead of GPR_DEBUG.
"
d7ec8a3dd0ad389a37ce0dd7ed140483785b293b,grpc/grpc,"Merge pull request #1369 from ctiller/one-pass

Unify transport & channel op interfaces"
0a9ae3d23d48667d3fe915b233e4d5cab55be92f,grpc/grpc,"Merge pull request #504 from murgatroid99/node_new_core_api

Rewrite the Node library to use the new core call API"
4865c79548d4f83ebae4e10fbaf4c3ba10535c97,grpc/grpc,"Merge pull request #10613 from ctiller/framing_costs

Optimize framing a little"
6ad120e435069656af0394dc0b97744701cac51c,grpc/grpc,"Moving the google-internal security code in their own files.
Checked that the opensource version still builds.

Just addressing core for now. We will do c++ later.
	Change on 2015/01/12 by jboeuf <jboeuf@google.com>
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=83804014
"
b35cfc76e2f947b2f1a4fd37feba88f2634a4d44,grpc/grpc,"Merge pull request #8913 from markdroth/security_handshaker2

Rewrite security handshaker to use generic handshaker API."
c5ae3eb8d65287c1e4493523196e2abb5aa86d2e,grpc/grpc,"Rename grpc_server_add_http2_port to grpc_server_add_insecure_http2_port
"
09f57c17ee22e344adad9d81be5747305a02d33e,grpc/grpc,"Refactor request routing code out of client_channel.
"
e8d55cff435a9d19f30ea8965cabe6a4f7a5f81a,grpc/grpc,"Merge pull request #2051 from jcanizales/simplify-metadata

Simplify metadata usage"
12c8209c93cebc43d49db794930c044e7aed258e,grpc/grpc,"Generate dependencies when compiling the .o

If we don't have a .o, we don't need dependencies, so skip the setup
step of building them. Instead, when building the .o, we generate the
.dep and output it (to objs/ to make the rules a little easier). The
next run of make will include the dep file and any dependencies will be
picked up.

This change also disables the disabling of dependency checking if we
have zlib or openssl being compiled from third_party. Additionally it
inverts the logic for including dependencies from ONLY if we are doing a
clean to ONLY if we are NOT doing a clean.
"
2529cfe30a54503246b94a3f0e4d7c3971edf8c3,grpc/grpc,"Light refactoring of some transport code
"
3e7f2df04749720dc55a265c5ff03f9fbda2b44c,grpc/grpc,"Convert slice hash table and service config code to C++.
"
78dc6cdaeb533cb03cd8a3b3bea6e6d7847083aa,grpc/grpc,"Refactor the pipe/eventfd abstraction

This introduces the wakeup fd interface, corresponding approximately to
the existing Google version, complete with a ported giant detailed usage
comment.

The implementation has two layers, ""specialized"" and ""fallback"". The
specialized layer is intended to be a suitable platform specific
implementation like eventfd, whereas ""fallback"" is probably pipe, with
runtime detection of whether the specialized version works on this
system (currently stubbed out).
"
6e411b070ce8d9a4e370739b39703700a0a054fa,grpc/grpc,"Merge pull request #11280 from murgatroid99/node_api_docs

Refactor some code and document most of the API"
bc130daf5f78bac986cc5cdede8476896dc5f463,grpc/grpc,"Adding more pointer conversions and type renaming
"
4f2b0fdadfb1e1eb6c796c40ec5aabfbb348aa89,grpc/grpc,"Rename 'gpr++' directories to 'gprpp'.
"
acd46e571c3dd4721a21c934c4ccb983ed2f687c,grpc/grpc,"More pointer conversions, deprecated string to char *, goto crossing initializations
"
309830f6b8c09347db305acf3b05fca333030989,grpc/grpc,"Replace 'long' with 'int64_t' in public core headers
"
35479b8a80c9c47937dbda2dfe173fc2c3b91873,grpc/grpc,"Merge pull request #16358 from muxi/privatize-boringssl

Make symbols of BoringSSL private"
108cecb8264a482cc6f7e153d2791b34cb338885,grpc/grpc,"Revert ""Factor out backoff code into a separate library (to be re-used elsewhere)""
"
3f417b7e7366a71637741a98f47d7aba0515344d,grpc/grpc,"Merge branch 'delayed-write' into grand-unified-closures
"
1a277ecd93e908a47a905d323a4a1a77287cede1,grpc/grpc,"Remove libevent.

Fixed any exposed bugs across the stack.

Add a poll() based implementation. Heavily leverages pollset infrastructure to allow small polls to be the norm. Exposes a mechanism to plug in epoll/kqueue for platforms where we have them.

Simplify iomgr callbacks to return one bit of success or failure (instead of the multi valued result that was mostly unused previously). This will ease the burden on new implementations, and the previous system provided no real value anyway.

Removed timeouts on endpoint read/write routines. This simplifies porting burden by providing a more orthogonal interface, and the functionality can always be replicated when desired by using an alarm combined with endpoint_shutdown. I'm fairly certain we ended up with this interface because it was convenient to do from libevent.

Things that need attention still:
- adding an fd to a pollset is O(n^2) - but this is probably ok given that we'll not
use this for multipolling once platform specific implementations are added.
- we rely on the backup poller too often - especially for SSL handshakes and for client
connection establishment we should have a better mechanism ([] []
- Linux needs to use epoll for multiple fds, FreeBSD variants (including
Darwin) need to use kqueue. ([] []
- Linux needs to use eventfd for poll kicking. ([]
	Change on 2015/01/07 by ctiller <ctiller@google.com>
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=83461069
"
873d04bc3dfcfc8c5719210e05e5284436002d9c,grpc/grpc,"Merge pull request #4235 from jcanizales/use-boringssl

Use BoringSSL instead of OpenSSL"
332f1b35d534f6910093729e9ecc2cacf8bb9688,grpc/grpc,"Rename functions
"
878a7c2a09d01baec4df8eb99ba9cbe1dc9af7e3,grpc/grpc,"Memory usage tweaks

- Improve estimation to give a more reliable slop space in the arena
- Improve measurement by issuing sufficient throw-away calls on a channel to allow call size estimation to settle
"
81bc942cd8cd6b2571aa60ac6401f5ff7136617a,grpc/grpc,"security connector refactor
"
d082b7fc5386943c0f08c7ed2c99fbe6dc3e398a,grpc/grpc,"Merge pull request #230 from tbetbetbe/grpc_ruby_remove_the_need_for_pick_unused_port

Grpc ruby remove the need for pick unused port"
472b9327c05904f41e32a532da14364d2ced8d42,grpc/grpc,"Merge pull request #16374 from vjpai/census

Move a census file from src/cpp to src/core since core depends on it"
3b1847c5283c3776ca700fb5ee56c894e68d970b,grpc/grpc,"Merge branch 'oops-i-split-it-again' into tis-but-thy-name
"
3b2e2f77ff90d22f5e2e58b29edf313af2bdd2f7,grpc/grpc,"Merge branch 'master' into async-cleanup
"
79620aaa1052fd02539a36caa63cbe24a2087b0f,grpc/grpc,"Merge pull request #7943 from markdroth/client_channel_cleanup

Move subchannel_call_holder code into client_channel module."
545bad349cb7979a66e265b0ab8eda498c84f94e,grpc/grpc,"Misc test scripts cleanup:

- Echo commands
- Remove generated code before pod install
- Don‚Äôt ‚Äúclean‚Äù before ‚Äúbuild‚Äù"
f8ed4fa7f4b516d98daeefb0459ce1b175baa7e3,grpc/grpc,"convert connectivity_watcher to cpp file
"
c3c475fd144b3d43a775b569dad36610014e08e4,grpc/grpc,"move files to subdir and add generated files
"
337814af4f65b183896f21c4b938e882ee63fcef,grpc/grpc,"Merge branch 'master' into async-cleanup
"
5e01e2ac977655aa074faf7fde0a74298f5e4c55,grpc/grpc,"Revert ""Metadata handling rewrite""
"
abcebb07983ae4b1824cb4481462cd4b234e149a,grpc/grpc,"Merge pull request #5419 from ctiller/cleaner-posix2

Move all event handling code behind one grand unified interface"
93e84a51cc79b8144b886d52635b5c84f2c023c2,grpc/grpc,"Merge pull request #7541 from stanley-cheung/php-cleanup-dockerfile-v1_0

PHP: add PHP7 to various Jenkins tests and update dockerfile"
beb5b3d5027452c23dcfafd7f1bcba22acbbd1de,miku/span,"simplify else clause
"
8d9f32f28261d2b177f295104dc6311e7e3bf1e3,pnpm/pnpm,"chore: use commitlint instead of validate-commit-msg
"
0081d6944d48168cf65fac2b4a76804e06ffdf05,pnpm/pnpm,"refactor: move @pnpm/modules-yaml to monorepo
"
22f42b4e14f0cd32d266e7a2f54d91046095b9b8,pnpm/pnpm,"refactor: remove redundant log (dependencies_installed)
"
0cea7f3dd423a86eed8073ca6d66e7a8dce731cc,rook/rook,"Merge pull request #259 from bassam/build-reorg

build: build all dependencies from source + other changes"
981902fff6769990a00bbf445922ef614c8a8bdb,xodio/xod,"optimize(xod-arduino): toposort nodes in-place
"
73a0f4f3a86059901700b3bbcc00917865b04889,xodio/xod,"feat(xod-project, xod-client): add feature that broken project could be opened, but broken patches, nodes and links will be marked as dead (special look and etc)
Squashed commits:
[4609d47] fix(xod-client): fix React warning about empty children property (in UnknownPinWidget)
[62345a3] refactor(xod-project): add accosPatch and assocPatchList unsafe versions for surviving
[fe779e9] test(xod-project): add test cases for project surviving
[b731d1d] refactor(xod-project): rename `getPinsForPatch` to `getPinsForNode`, cause really we're getting pins for passed Node
[5485746] tweak(xod-client, xod-client-electron): show proper message for transpiling patch with broken content
[e589088] feat(xod-client): mark patches with broken content in the Project Browser with special icon
[9e7cfa5] feat(xod-client, xod-project): add creating missed pins into patches and mark links, that connected with unexistent pins, as broken
[b9d13cd] feat(xod-client): make Inspector works properly when selecting broken nodes
[29063a0] feat(xod-client): add broken style for links, that connected with broken nodes
[0b8e5ef] feat(xod-client, xod-project): make first step in project surviving: nodes that uses type of unexistent patch could be rendered with pins, that have links, with a special look
"
5fe434d0c5363b63bc7daf37b38e4fa1027b0a23,xodio/xod,"refactor(xod-client): refactor Inspector using new selectors
"
ab457d22eb6b0d96aa4365632b03116b06fde15f,xodio/xod,"Merge pull request #131 from amperka/refactor_patch

Refactor patch"
c631d75fe18586f36b40bc31ca98c37b9854bcb1,xodio/xod,"fix(pins&props): replace enum mode (pin / prop) with flag (injected), fixed bugs with IO-Nodes and PatchNodes, fixed tests
"
477672cb8dc8ca2dd4422d6e787b47af93e66bb2,xodio/xod,"refactor(xod-client): basic import/export of v2 projects
"
f8b266d9f48c9e1d3ab4a39c5f7b46f01ff62a3b,xodio/xod,"Merge pull request #696 from xodio/refactor-clean-stdlib-json-fields

Remove fields with default values from standard library JSONs"
8b3e7e5d5a96dd8f3b59fd136893ad7a88068b9b,xodio/xod,"Merge pull request #58 from amperka/link_create_delete_refactoring

Replace magic values with constants"
d275c215ba80fe5bf5772ee7c9ef804c1ed33442,xodio/xod,"refactor(drag-n-drop): move mousemove and mouseup handlers into patch, remove svgdraggable component
"
ba8bab9ab4d4a2ebb28ee8c226d9110f2f2c7323,xodio/xod,"refactor(client): extract top menu config to a separate file
"
25b74e750d52c134594ed5ccc5db9221e4b6d05d,xodio/xod,"refactor(stdlib): remove fields with default values from JSONs
"
109e28d0b3eaeaa92ef2030e2ef3b18462702e58,0xAX/emacs,"Merge: Fix minor problems found by static checking.

* image.c (PixelGetMagickColor): Declare if ImageMagick headers don't.

Make identifiers static if they are not used in other modules.
* data.c (Qcompiled_function, Qframe, Qvector):
* image.c (QimageMagick, Qsvg):
* minibuf.c (Qmetadata):
* window.c (resize_window_check, resize_root_window): Now static.
* window.h (resize_window_check, resize_root_window): Remove decls.

* window.c (window_deletion_count, delete_deletable_window):
Remove; unused.
(window_body_lines): Now static.
(Fdelete_other_windows_internal): Mark vars as initialized.
Make sure 'resize_failed' is initialized.
(run_window_configuration_change_hook): Rename local to avoid shadowing.
(resize_window_apply): Remove unused local.
* window.h (delete_deletable_window): Remove decl.

* image.c (gif_load, svg_load_image): Rename locals to avoid shadowing.
(imagemagick_load_image): Fix pointer signedness problem by changing
last arg from unsigned char * to char *.  All uses changed.
Also, fix a local for similar reasons.
Remove unused locals.  Remove locals to avoid shadowing.
(fn_rsvg_handle_free): Remove; unused.
(svg_load, svg_load_image): Fix pointer signedness problem.
(imagemagick_load_image): Don't use garbage pointer image_wand.

* ftfont.c (ftfont_get_metrics, ftfont_drive_otf): Remove unused locals.
"
e7ae8039c346fd296c49ceedb718896bf4b27d9a,0xAX/emacs,"More cleanup in handling subprocess exiting on MS-Windows.

 src/w32proc.c (reader_thread): Avoid passing NULL handles to
 SetEvent and WaitForSingleObject.
"
d3098e1ec618fc043568be481b487f3bf7689bad,0xAX/emacs,"More updates for VC documentation.

* files.texi (Misc File Ops): Mention vc-rename-file.

* maintaining.texi (Advanced C-x v v): Use fileset terminology.
(VC With A Merging VCS, VC Change Log): Add xref to VC Pull node.
(VC Pull): Mention vc-log-incoming.
(Log Buffer): Add CVS/RCS only disclaimer.

* vc1-xtra.texi (Remote Repositories): Update introduction.
(Local Version Control): Node deleted (obsolete with DVCSes).
(Remote Repositories, Version Backups): Node deleted.  Move
documentation of vc-cvs-stay-local to CVS Options.
(CVS Options): Reduce verbosity of description of obscure CVS
locking feature.
(Making Revision Tags, Revision Tag Caveats): Merge into Revision
Tags node.
(Revision Tags): Move under Miscellaneous VC subsection.
(Change Logs and VC): Note that this is wrong for DVCSs.
De-document log entry manipulating features.
(Renaming and VC): Describe how it works on modern VCSes.

* programs.texi (Custom C Indent): Add index entries.
"
6bccb19c9bef1189c8e853ff7cc16b889a3a57e3,0xAX/emacs,"Port redirect-debugging-output to non-GNU/Linux

Problem reported by Kylie McClain for musl in:
http://lists.gnu.org/archive/html/emacs-devel/2016-03/msg01592.html
* etc/DEBUG, etc/NEWS: Mention this.
* src/callproc.c (child_setup) [!MSDOS]:
* src/dispnew.c (init_display):
* src/emacs.c (main, Fdaemon_initialized):
* src/minibuf.c (read_minibuf_noninteractive):
* src/regex.c (xmalloc, xrealloc):
Prefer symbolic names like STDERR_FILENO to magic numbers like 2,
to make file-descriptor manipulation easier to follow.
* src/emacs.c (relocate_fd) [!WINDOWSNT]: Remove; no longer needed
now that we make sure stdin, stdout and stderr are open.  All uses
removed.
(main): Make sure standard FDs are OK.  Prefer symbolic names like
EXIT_FAILURE to magic numbers like 1.  Use bool for boolean.
* src/lisp.h (init_standard_fds): New decl.
* src/print.c (WITH_REDIRECT_DEBUGGING_OUTPUT) [GNU_LINUX]:
Remove; no longer needed.
(Fredirect_debugging_output): Define on all platforms, not just
GNU/Linux.  Redirect file descriptor, not stream, so that the code
works even if stderr is not an lvalue.  Report an error if the
file arg is neither a string nor nil.
(syms_of_print): Always define redirect-debugging-output.
* src/sysdep.c (force_open, init_standard_fds): New functions.
"
63dd1c6fa45357d312e1d3076e15adacf5ed6291,0xAX/emacs,"Toggle whitespace matching mode with M-s SPC.
http://lists.gnu.org/archive/html/emacs-devel/2012-09/msg00008.html

* lisp/isearch.el (search-whitespace-regexp): Doc fix.
Remove cons cell customization.
(isearch-mode-map): Bind ""\M-s "" to isearch-toggle-lax-whitespace.
(isearch-lax-whitespace, isearch-regexp-lax-whitespace):
New variables.
(isearch-forward, isearch-forward-regexp): Doc fix.
(isearch-toggle-lax-whitespace): New command.
(search-forward-lax-whitespace, search-backward-lax-whitespace)
(re-search-forward-lax-whitespace)
(re-search-backward-lax-whitespace): New functions.
(isearch-whitespace-regexp): Remove function.
(isearch-query-replace): Let-bind replace-search-function and
replace-re-search-function.
(isearch-occur): Let-bind search-spaces-regexp according to the
value of isearch-lax-whitespace and isearch-regexp-lax-whitespace.
(isearch-quote-char): Check isearch-regexp-lax-whitespace in the
condition for C-q SPC.
(isearch-search-fun-default): Use new functions mentioned above.
(isearch-search-forward, isearch-search-backward): Remove functions.
(isearch-search): Don't let-bind search-spaces-regexp.
(isearch-lazy-highlight-space-regexp): Remove variable.
(isearch-lazy-highlight-lax-whitespace)
(isearch-lazy-highlight-regexp-lax-whitespace): New variables.
(isearch-lazy-highlight-new-loop): Use them.
(isearch-lazy-highlight-search): Don't let-bind search-spaces-regexp.
"
16b0520a9e0e431cf782c01289068d8c0f812f7b,0xAX/emacs,"Tune UNEVALLED functions by using XCAR instead of Fcar, etc.

* data.c (Fsetq_default):
* eval.c (Fif, Fcond, Fprog1, Fsetq, Fquote, Ffunction, Fdefvar)
(Fdefconst, FletX, Flet, Fwhile, Fcatch, Funwind_protect)
(Fcondition_case):
Tune by taking advantage of the fact that ARGS is always a list
when a function is declared to have UNEVALLED args.
"
ae0d725005539d9259efac6a81ff8fdd45eb69a6,0xAX/emacs,"[ChangeLog]

Work around some portability problems with symlinks.
* Makefile.in (GNULIB_MODULES): Add lstat, readlink, symlink.
* configure.in (lstat, HAVE_LSTAT): Remove special hack.
* lib/lstat.c, lib/readlink.c, lib/stat.c, lib/symlink.c:
* m4/dos.m4, m4/lstat.m4, m4/readlink.m4, m4/stat.m4, m4/symlink.m4:
New files, automatically generated from gnulib.
* aclocal.m4, configure, lib/Makefile.in, lib/gnulib.mk:
* lib/stdlib.in.h, m4/gl-comp.m4, m4/stdlib_h.m4: Regenerate.

2011-02-22  Paul Eggert  <eggert@cs.ucla.edu>
[src/ChangeLog]
Work around some portability problems with symlinks.
* fileio.c (Frename_file, Fmake_symbolic_link, Ffile_symlink_p):
Simplify the code by assuming that the readlink and symlink calls
exist, even if they always fail on this host.
(Ffile_readable_p): Likewise, for fifos.
* config.in: Regenerate.
"
679f7827555eebb588131aebfcb9fdb959199904,0xAX/emacs,"Fix excessive calls to bidi_shelve_cache reported in bug #15555.

 src/xdisp.c (move_it_in_display_line_to): Save the iterator state in ppos_it
 only once per call.  Reimplement the method used to return to the
 best candidate position if all the positions found in display line
 are beyond TO_CHARPOS.  This cuts down the number of calls to
 bidi_shelve_cache, which moves a lot of stuff when lines are long
 and include bidirectional text.
"
0f4a96b5d7de244a7be6fc98f6a66d3d1e6a7569,0xAX/emacs,"nt/*.c, src/*.c: Remove unused variables.

* nt/addpm.c (main): Remove unused variable `retval'.
* nt/preprep.c (main): Remove unused variable `ptr'.
* src/dispextern.h (glyph_matric): Use #if GLYPH_DEBUG, not #ifdef.
* src/fileio.c (check_executable) [DOS_NT]: Remove unused variables `len'
  and `suffix'.
  (Fset_file_selinux_context) [HAVE_LIBSELINUX]: Move here declaration
  of variables specific to SELinux and computation of `encoded_absname'.
* src/image.c (XPutPixel): Remove unused variable `height'.
* src/keyboard.c (make_lispy_event): Remove unused variable `hpos'.
* src/unexw32.c (get_section_info): Remove unused variable `section'.
* src/w32.c (stat): Remove unused variables `drive_root' and `devtype'.
  (system_process_attributes): Remove unused variable `sess'.
  (sys_read): Remove unused variable `err'.
* src/w32fns.c (top): Wrap variables with #if GLYPH_DEBUG, not #ifdef.
  (w32_wnd_proc): Remove unused variable `isdead'.
  (unwind_create_frame): Use #if GLYPH_DEBUG, not #ifdef.
  (Fx_server_max_request_size): Remove unused variable `dpyinfo'.
  (x_create_tip_frame): Remove unused variable `tem'.
* src/w32inevt.c (w32_console_read_socket): Remove unused variable `no_events'.
* src/w32term.c (x_draw_composite_glyph_string_foreground):
  Remove unused variable `width'.
"
a7b028203499410a9f4bebe8220be8f3a9ce598b,0xAX/emacs,"Initial support for bidirectional editing.

 Makefile.in (obj): Include bidi.o.
 (bidi.o): New target.
 makefile.w32-in (OBJ1): Add $(BLD)/bidi.$(O).
 ($(BLD)/bidi.$(O)): New target.
 bidi.c: New file.
 buffer.h (struct buffer): New members bidi_display_reordering
 and bidi_paragraph_direction.
 buffer.c (init_buffer_once): Initialize bidi_display_reordering
 and bidi_paragraph_direction.
 (syms_of_buffer): Declare Lisp variables bidi-display-reordering
 and bidi-paragraph-direction.
 (Fbuffer_swap_text): Swap the values of
 bidi_display_reordering and bidi_paragraph_direction.
 dispextern.h (BIDI_MAXLEVEL, BIDI_AT_BASE_LEVEL): New macros.
 (bidi_type_t, bidi_dir_t): New types.
 (bidi_saved_info, bidi_stack, bidi_it): New structures.
 (struct it): New members bidi_p, bidi_it, paragraph_embedding,
 prev_stop, base_level_stop, and eol_pos.
 (bidi_init_it, bidi_get_next_char_visually): New prototypes.
 (IT_STACK_SIZE): Enlarge to 5.
 (struct glyph_row): New member reversed_p.
 <string_buffer_position>: Update prototype.
 (PRODUCE_GLYPHS): Set the reversed_p flag in the iterator's
 glyph_row if bidi_it.paragraph_dir == R2L.
 (struct glyph): New members resolved_level and bidi_type.
 dispnew.c (direct_output_forward_char): Give up if we need bidi
 processing or buffer's direction is right-to-left.
 (prepare_desired_row): Preserve the reversed_p flag.
 (row_equal_p): Compare the reversed_p attributes as well.
 xdisp.c (init_iterator): Initialize it->bidi_p.  Call
 bidi_init_it and set it->paragraph_embedding from the current
 buffer's value of bidi_paragraph_direction.
 (reseat_1): Initialize bidi_it.first_elt.
 (set_iterator_to_next, next_element_from_buffer): Use the value of
 paragraph_embedding to determine the paragraph direction.
 (set_iterator_to_next): Under bidi reordering, call
 bidi_get_next_char_visually.  Call bidi_paragraph_init if the
 new_paragraph flag is set in the bidi iterator.
 (next_element_from_buffer): If bidi_it.first_elt is set,
 initialize paragraph direction and find the first character to
 display in the visual order.  If reseated to a middle of a line,
 prime the bidi iterator starting at the line's beginning.  Handle
 the situation where we overstepped stop_charpos due to
 non-linearity of the bidi iteration.  Likewise for when we back up
 beyond the previous stop_charpos.  When moving across stop_charpos,
 record it in prev_stop.
 (display_line): Set row->end and it->start for the next row to the
 next character in logical order.  Always extend reversed_p rows to
 the end of line, even if they end at ZV.  Copy the reversed_p flag
 to the next glyph row.  Keep calling set_cursor_from_row for
 bidi-reordered rows even if we already have a possible candidate
 for cursor position.  Set row_end after all the row's glyphs have
 been produced, by looping over the glyphs.  Record the position
 after EOL in it->eol_pos, and use it to set end_pos of the last
 row produced for a continued line.
 <Qright_to_left, Qleft_to_right>: New variables.
 (syms_of_xdisp): Initialize and staticpro them.
 (string_buffer_position_lim): New function.
 (string_buffer_position): Most of code moved to
 string_buffer_position_lim.  Last argument and return value are
 now EMACS_INT; all callers changed.
 (set_cursor_from_row): Rewritten to support bidirectional text and
 reversed glyph rows.
 (text_outside_line_unchanged_p, try_window_id): Disable
 optimizations if we are reordering bidirectional text and the
 paragraph direction can be affected by the change.
 (append_glyph, append_composite_glyph)
 (produce_image_glyph, append_stretch_glyph): Set the
 resolved_level and bidi_type members of each glyph.
 (append_glyph): If the glyph row is reversed, prepend the glyph
 rather than appending it.
 (handle_stop_backwards): New function.
 (reseat_1, pop_it, push_it): Set prev_stop and base_level_stop.
 (reseat): call handle_stop_backwards to recompute prev_stop and
 base_level_stop for the new position.
 (handle_invisible_prop): Under bidi iteration, skip invisible text
 using bidi_get_next_char_visually.  If we are `reseat'ed, init the
 paragraph direction.  Update IT->prev_stop after skipping
 invisible text.
 (move_it_in_display_line_to): New variables prev_method
 and prev_pos.  Compare for strict equality in
 BUFFER_POS_REACHED_P.
 (try_cursor_movement): Examine all the candidate rows that occlude
 point, to return the best match.  If rows are bidi-reordered
 and point moved backwards, back up to the row that is not a
 continuation line, and start looking for a suitable row from
 there.
 term.c (append_glyph): Reverse glyphs by pre-pending them,
 rather than appending, if the glyph_row's reversed_p flag is set.
 Set the resolved_level and bidi_type members of each glyph.
 .gdbinit (pbiditype): New command.
 (pgx): Use it to display bidi level and type of the glyph.
 (pitx): Display some bidi information about the iterator.
 (prowlims, pmtxrows): New commands.
 files.el: Make bidi-display-reordering safe variable for boolean
 values.
 mule.texi (International): Mention support of bidirectional editing.
 (Bidirectional Editing): New section.
 HELLO: Reorder Arabic and Hebrew into logical order, and
 insert RLM before the opening paren, to make the display more
 reasonable.  Add setting for bidi-display-reordering in the local
 variables section.
 NEWS: Mention initial support for bidirectional editing.
"
12b1389c9039dd374951673ca43b1ddf65df400d,0xAX/emacs,"Correctly macroexpand top-level forms during eager macroexpand

* lisp/emacs-lisp/byte-run.el (eval-when-compile, eval-and-compile):
Improve docstrings.

* lisp/emacs-lisp/macroexp.el (internal-macroexpand-for-load): Add
`full-p' parameter; when nil, call `macroexpand' instead of
`macroexpand-all'.

* src/lread.c (readevalloop_eager_expand_eval): New function
that can recurse into toplevel forms.
(readevalloop): Call it.
* src/lisp.h: Declare Qprogn.
* src/callint.c (Qprogn): No longer static.

* test/automated/bytecomp-tests.el (test-byte-comp-compile-and-load):
Add compile flag.
(test-byte-comp-macro-expansion)
(test-byte-comp-macro-expansion-eval-and-compile)
(test-byte-comp-macro-expansion-eval-when-compile)
(test-byte-comp-macro-expand-lexical-override): Use it.
(test-eager-load-macro-expansion)
(test-eager-load-macro-expansion-eval-and-compile)
(test-eager-load-macro-expansion-eval-when-compile)
(test-eager-load-macro-expand-lexical-override): New tests.
"
c3153003fb0bfeef7ade4c060501c23f0556195d,0xAX/emacs,"Add system-configuration-features, summarising some configure results

* configure.ac (ACL_SUMMARY): Rename from acl_summary, for consistency.
(EMACS_CONFIG_FEATURES): New define.

* src/emacs.c (syms_of_emacs) <system-configuration-features>: New var.

* lisp/mail/emacsbug.el (report-emacs-bug):
Include system-configuration-features.

* etc/NEWS: Mention this.
"
d2aa42f8be4756cf4efc96b975bb6db9c0bdff94,0xAX/emacs,"Convert function definitions and declarations to standard C.
* src/vm-limit.c (memory_warnings):
* src/keyboard.c (modify_event_symbol):
* src/floatfns.c (rounding_driver, ceiling2, floor2, truncate2)
(round2, emacs_rint):
* src/process.c (send_process, old_sigpipe): Convert function
definitions and declarations to standard C.
"
84e2f13cd50a7ef6af736559107f0a8e6bcec6c5,0xAX/emacs,"Further reduce number of versioned files storing Emacs version number.

* configure.ac (comma_version, comma_space_version) [mingw32]:
New output variables.
(nt/emacs.rc, nt/emacsclient.rc) [mingw32]: New output files.

* make-dist: Update nt/ for *.rc -> *.rc.in changes.

* nt/emacs.rc.in, nt/emacsclient.rc.in: Rename from nt/emacs.rc, emacsclient.rc.
Let configure generate the real files, and set the version numbers.

* lib-src/Makefile.in (emacsclient.res): Update deps for nt/emacsclient.rc
now being in the build directory, not the source directory.

* nt/Makefile.in (distclean): Delete *.rc.
(emacs.res): Update deps for nt/emacsclient.rc now being in the
build directory, not the source directory.

* admin/admin.el (set-version): No more need to update nt/*.rc.

* admin/authors.el (authors-renamed-files-alist): Add .rc.in files.
"
29208e8237a91a28fc5ab30f020ddc65c9ec14b7,0xAX/emacs,"Move all DEFVAR'd globals into a structure -- threading infrastructure

	* globals.h: New file.
	* xterm.h (Vx_pixel_size_width_font_regexp): Remove declaration.
	* window.h (Vinitial_window_system, Vminibuf_scroll_window)
	(Vwindow_system_version): Remove declaration.
	* w32term.h (Vw32_enable_palette)
	(Vx_pixel_size_width_font_regexp): Remove declaration.
	* w32menu.c (Voverriding_local_map)
	(Voverriding_local_map_menu_flag): Remove declaration.
	* w32inevt.c (Vw32_alt_is_meta, Vw32_apps_modifier)
	(Vw32_capslock_is_shiftlock, Vw32_enable_caps_lock)
	(Vw32_enable_num_lock, Vw32_lwindow_modifier)
	(Vw32_pass_lwindow_to_system, Vw32_pass_rwindow_to_system)
	(Vw32_phantom_key_code, Vw32_recognize_altgr)
	(Vw32_rwindow_modifier, Vw32_scroll_lock_modifier)
	(w32_use_full_screen_buffer): Remove declaration.
	* w32.c (Vsystem_configuration, Vw32_downcase_file_names)
	(Vw32_generate_fake_inodes, Vw32_get_true_file_attributes)
	(w32_num_mouse_buttons, w32_pipe_read_delay): Remove declaration.
	* termopts.h (Vtruncate_partial_width_windows, inverse_video)
	(no_redraw_on_reenter, visible_bell): Remove declaration.
	* sysdep.c (Vsystem_name): Remove declaration.
	* syntax.h (parse_sexp_lookup_properties): Remove declaration.
	* menu.h (Vmenu_updating_frame): Remove declaration.
	* macros.h (Vexecuting_kbd_macro, executing_kbd_macro_index):
	Remove declaration.
	* lisp.h (Vafter_init_time, Vafter_load_alist)
	(Vauto_save_list_file_name, Vbefore_init_time, Vcommand_history)
	(Vcompletion_regexp_list, Vcurrent_load_list)
	(Vcurrent_prefix_arg, Vdata_directory, Vdebug_on_error)
	(Vdoc_directory, Vdoc_file_name, Vdynamic_library_alist)
	(Vexec_directory, Vexec_path, Vexec_suffixes)
	(Vface_font_rescale_alist, Vface_ignored_fonts, Vfeatures)
	(Vhelp_form, Vhistory_length, Vinhibit_field_text_motion)
	(Vinhibit_quit, Vinhibit_read_only, Vinhibit_redisplay)
	(Vinstallation_directory, Vinvocation_directory)
	(Vinvocation_name, Vload_file_rep_suffixes, Vload_history)
	(Vload_suffixes, Vmark_even_if_inactive, Vmemory_full)
	(Vmessage_log_max, Vobarray, Vprint_length, Vprint_level)
	(Vpurify_flag, Vquit_flag, Vsaved_region_selection)
	(Vscalable_fonts_allowed, Vselect_active_regions)
	(Vshell_file_name, Vstandard_input, Vstandard_output)
	(Vsystem_name, Vtemporary_file_directory, Vthrow_on_input)
	(Vtop_level, Vtty_erase_char, Vundo_outer_limit)
	(Vuser_login_name, Vwindow_scroll_functions)
	(Vwindow_system_version, Vx_no_window_manager)
	(Vx_resource_class, Vx_resource_name, baud_rate)
	(completion_ignore_case, debug_on_next_call, gc_cons_threshold)
	(history_delete_duplicates, inhibit_x_resources)
	(last_nonmenu_event, load_in_progress, max_specpdl_size)
	(minibuffer_auto_raise, print_escape_newlines, scroll_margin)
	(use_dialog_box, use_file_dialog): Remove declaration.  Include
	globals.h.
	* keymap.h (Voverriding_local_map)
	(Voverriding_local_map_menu_flag, meta_prefix_char): Remove
	declaration.
	* keyboard.h (Vdouble_click_time, Vfunction_key_map)
	(Vinput_method_function, Vkey_translation_map)
	(Vlucid_menu_bar_dirty_flag, Vthis_original_command)
	(do_mouse_tracking, extra_keyboard_modifiers)
	(num_nonmacro_input_events): Remove declaration.
	* intervals.h (Vchar_property_alias_alist)
	(Vdefault_text_properties, Vinhibit_point_motion_hooks)
	(Vtext_property_default_nonsticky): Remove declaration.
	* gtkutil.h (x_gtk_file_dialog_help_text)
	(x_gtk_show_hidden_files, x_gtk_use_old_file_dialog)
	(x_gtk_whole_detached_tool_bar): Remove declaration.
	* frame.h (Vdefault_frame_alist, Vframe_alpha_lower_limit)
	(Vmenu_bar_mode, Vmouse_highlight, Vterminal_frame)
	(Vtool_bar_mode, Vx_resource_class, Vx_resource_name)
	(focus_follows_mouse): Remove declaration.
	* fontset.h (Valternate_fontname_alist, Vfontset_alias_alist)
	(Vignore_relative_composition, Votf_script_alist)
	(Vuse_default_ascent, Vvertical_centering_font_regexp): Remove
	declaration.
	* font.h (Vfont_log): Remove declaration.
	* dosfns.h (Vdos_display_scancodes, Vdos_version)
	(Vdos_windows_version, dos_codepage, dos_country_code)
	(dos_decimal_point, dos_hyper_key, dos_keyboard_layout)
	(dos_keypad_mode, dos_super_key, dos_timezone_offset): Remove
	declaration.
	* disptab.h (Vglyph_table, Vstandard_display_table): Remove
	declaration.
	* dispextern.h (Vface_remapping_alist, Vglyphless_char_display)
	(Vmouse_autoselect_window, Voverflow_newline_into_fringe)
	(Vshow_trailing_whitespace, Vtool_bar_button_margin)
	(Vtool_bar_style, cursor_in_echo_area, display_hourglass_p)
	(inverse_video, mode_line_in_non_selected_windows)
	(tool_bar_button_relief, tool_bar_max_label_size)
	(underline_minimum_offset)
	(unibyte_display_via_language_environment, x_stretch_cursor_p):
	Remove declaration.
	* composite.h (Vauto_composition_function)
	(Vcomposition_function_table): Remove declaration.
	* commands.h (Vexecuting_kbd_macro)
	(Vminibuffer_local_completion_map)
	(Vminibuffer_local_filename_completion_map)
	(Vminibuffer_local_filename_must_match_map)
	(Vminibuffer_local_map, Vminibuffer_local_must_match_map)
	(Vminibuffer_local_ns_map, Vthis_command)
	(Vunread_command_events, cursor_in_echo_area)
	(last_command_event, last_nonmenu_event, unread_command_char):
	Remove declaration.
	* coding.h (Vcoding_system_for_read, Vcoding_system_for_write)
	(Vdefault_file_name_coding_system)
	(Vdefault_process_coding_system, Vfile_name_coding_system)
	(Vlast_coding_system_used, Vlocale_coding_system)
	(Vselect_safe_coding_system_function)
	(Vtranslation_table_for_input, coding_system_require_warning)
	(eol_mnemonic_dos, eol_mnemonic_mac, eol_mnemonic_undecided)
	(eol_mnemonic_unix, inherit_process_coding_system): Remove
	declaration.
	* charset.h (Vcharset_list, Vcurrent_iso639_language): Remove
	declaration.
	* character.h (Vauto_fill_chars, Vchar_direction_table)
	(Vchar_script_table, Vchar_width_table, Vprintable_chars)
	(Vscript_representative_chars, Vtranslation_table_vector)
	(Vunicode_category_table): Remove declaration.
	* ccl.h (Vfont_ccl_encoder_alist): Remove declaration.
	* buffer.h (Vafter_change_functions, Vbefore_change_functions)
	(Vdeactivate_mark, Vfirst_change_hook, Vtransient_mark_mode)
	(inhibit_modification_hooks): Remove declaration.
	* xterm.c (syms_of_xterm): Update.
	(Vx_alt_keysym, Vx_hyper_keysym, Vx_keysym_table)
	(Vx_meta_keysym, Vx_super_keysym, Vx_toolkit_scroll_bars)
	(x_mouse_click_focus_ignore_position)
	(x_underline_at_descent_line)
	(x_use_underline_position_properties): Remove.
	* xsmfns.c (syms_of_xsmfns): Update.
	(Vx_session_id, Vx_session_previous_id): Remove.
	* xsettings.c (syms_of_xsettings): Update.
	(Vxft_settings, use_system_font): Remove.
	* xselect.c (syms_of_xselect): Update.
	(Vselection_converter_alist, Vx_lost_selection_functions)
	(Vx_sent_selection_functions, x_selection_timeout): Remove.
	* xfns.c (syms_of_xfns): Update.
	(Vgtk_version_string, Vmotif_version_string)
	(Vx_cursor_fore_pixel, Vx_hourglass_pointer_shape)
	(Vx_max_tooltip_size, Vx_mode_pointer_shape)
	(Vx_no_window_manager, Vx_nontext_pointer_shape)
	(Vx_pixel_size_width_font_regexp, Vx_pointer_shape)
	(Vx_sensitive_text_pointer_shape)
	(Vx_window_horizontal_drag_shape, x_gtk_file_dialog_help_text)
	(x_gtk_show_hidden_files, x_gtk_use_old_file_dialog)
	(x_gtk_use_system_tooltips, x_gtk_whole_detached_tool_bar):
	Remove.
	* xfaces.c (syms_of_xfaces): Update.
	(Vface_default_stipple, Vface_font_rescale_alist)
	(Vface_ignored_fonts, Vface_new_frame_defaults)
	(Vface_remapping_alist, Vfont_list_limit)
	(Vscalable_fonts_allowed, Vtty_defined_color_alist): Remove.
	* xdisp.c (syms_of_xdisp): Update.
	(Vauto_resize_tool_bars, Vblink_cursor_alist)
	(Vdisplay_pixels_per_inch, Vfontification_functions)
	(Vframe_title_format, Vglobal_mode_string)
	(Vglyphless_char_display, Vhourglass_delay, Vhscroll_step)
	(Vicon_title_format, Vinhibit_redisplay)
	(Vline_number_display_limit, Vline_prefix)
	(Vmax_mini_window_height, Vmenu_bar_update_hook)
	(Vmenu_updating_frame, Vmessage_log_max)
	(Vmouse_autoselect_window, Vnobreak_char_display)
	(Voverlay_arrow_position, Voverlay_arrow_string)
	(Voverlay_arrow_variable_list, Vredisplay_end_trigger_functions)
	(Vresize_mini_windows, Vshow_trailing_whitespace)
	(Vtool_bar_border, Vtool_bar_button_margin, Vtool_bar_style)
	(Vtruncate_partial_width_windows, Vvoid_text_area_pointer)
	(Vwindow_scroll_functions, Vwindow_size_change_functions)
	(Vwindow_text_change_functions, Vwrap_prefix)
	(auto_raise_tool_bar_buttons_p, automatic_hscrolling_p)
	(debug_end_pos, display_hourglass_p, emacs_scroll_step)
	(highlight_nonselected_windows, hscroll_margin)
	(inhibit_eval_during_redisplay, inhibit_free_realized_faces)
	(inhibit_menubar_update, inhibit_try_cursor_movement)
	(inhibit_try_window_id, inhibit_try_window_reusing)
	(line_number_display_limit_width)
	(make_cursor_line_fully_visible_p, message_truncate_lines)
	(mode_line_inverse_video, multiple_frames, overline_margin)
	(scroll_conservatively, scroll_margin, tool_bar_button_relief)
	(tool_bar_max_label_size, underline_minimum_offset)
	(unibyte_display_via_language_environment, x_stretch_cursor_p):
	Remove.
	* window.c (syms_of_window): Update.
	(Vminibuf_scroll_window, Vother_window_scroll_buffer)
	(Vrecenter_redisplay, Vscroll_preserve_screen_position)
	(Vtemp_buffer_show_function, Vwindow_configuration_change_hook)
	(Vwindow_point_insertion_type, auto_window_vscroll_p)
	(mode_line_in_non_selected_windows, next_screen_context_lines)
	(window_min_height, window_min_width): Remove.
	(scroll_margin): Remove declaration.
	* w32term.c (syms_of_w32term): Update.
	(Vw32_capslock_is_shiftlock, Vw32_grab_focus_on_raise)
	(Vw32_recognize_altgr, Vw32_swap_mouse_buttons)
	(Vx_toolkit_scroll_bars, w32_num_mouse_buttons)
	(w32_use_visible_system_caret, x_underline_at_descent_line)
	(x_use_underline_position_properties): Remove.
	(Vcommand_line_args, Vsystem_name, extra_keyboard_modifiers):
	Remove declaration.
	* w32select.c (syms_of_w32select): Update.
	(Vnext_selection_coding_system, Vselection_coding_system): Remove.
	* w32proc.c (syms_of_ntproc): Update.
	(Vw32_downcase_file_names, Vw32_generate_fake_inodes)
	(Vw32_get_true_file_attributes, Vw32_quote_process_args)
	(Vw32_start_process_inherit_error_mode)
	(Vw32_start_process_share_console)
	(Vw32_start_process_show_window, w32_pipe_read_delay): Remove.
	(Vsystem_name): Remove declaration.
	* w32font.c (syms_of_w32font): Update.
	(Vw32_charset_info_alist): Remove.
	* w32fns.c (globals_of_w32fns, syms_of_w32fns): Update.
	(Vw32_alt_is_meta, Vw32_apps_modifier, Vw32_bdf_filename_alist)
	(Vw32_color_map, Vw32_enable_caps_lock, Vw32_enable_num_lock)
	(Vw32_enable_palette, Vw32_lwindow_modifier)
	(Vw32_pass_alt_to_system, Vw32_pass_lwindow_to_system)
	(Vw32_pass_rwindow_to_system, Vw32_phantom_key_code)
	(Vw32_rwindow_modifier, Vw32_scroll_lock_modifier)
	(Vx_cursor_fore_pixel, Vx_hourglass_pointer_shape)
	(Vx_max_tooltip_size, Vx_mode_pointer_shape)
	(Vx_no_window_manager, Vx_nontext_pointer_shape)
	(Vx_pixel_size_width_font_regexp, Vx_pointer_shape)
	(Vx_sensitive_text_pointer_shape)
	(Vx_window_horizontal_drag_shape, w32_ansi_code_page)
	(w32_enable_synthesized_fonts, w32_mouse_button_tolerance)
	(w32_mouse_move_interval)
	(w32_pass_extra_mouse_buttons_to_system)
	(w32_pass_multimedia_buttons_to_system, w32_quit_key)
	(w32_strict_fontnames, w32_strict_painting): Remove.
	(Vhourglass_delay, Vmenu_bar_mode, Vtool_bar_mode)
	(Vw32_recognize_altgr, Vwindow_system_version)
	(w32_num_mouse_buttons, w32_use_visible_system_caret): Remove
	declaration.
	* w32console.c (syms_of_ntterm): Update.
	(w32_use_full_screen_buffer): Remove.
	(Vtty_defined_color_alist): Remove declaration.
	* w16select.c (syms_of_win16select): Update.
	(Vnext_selection_coding_system, Vselection_coding_system): Remove.
	* undo.c (syms_of_undo): Update.
	(Vundo_outer_limit, Vundo_outer_limit_function)
	(undo_inhibit_record_point, undo_limit, undo_strong_limit):
	Remove.
	* textprop.c (syms_of_textprop): Update.
	(Vchar_property_alias_alist, Vdefault_text_properties)
	(Vinhibit_point_motion_hooks, Vtext_property_default_nonsticky):
	Remove.
	* terminal.c (syms_of_terminal): Update.
	(Vdelete_terminal_functions, Vring_bell_function): Remove.
	* term.c (syms_of_term): Update.
	(Vresume_tty_functions, Vsuspend_tty_functions)
	(no_redraw_on_reenter, system_uses_terminfo, visible_cursor):
	Remove.
	* syntax.c (syms_of_syntax): Update.
	(Vfind_word_boundary_function_table, multibyte_syntax_as_symbol)
	(open_paren_in_column_0_is_defun_start)
	(parse_sexp_ignore_comments, parse_sexp_lookup_properties)
	(words_include_escapes): Remove.
	* search.c (syms_of_search): Update.
	(Vinhibit_changing_match_data, Vsearch_spaces_regexp): Remove.
	* process.c (syms_of_process): Update.
	(Vprocess_adaptive_read_buffering, Vprocess_connection_type)
	(delete_exited_processes): Remove.
	* print.c (syms_of_print): Update.
	(Vfloat_output_format, Vprint_charset_text_property)
	(Vprint_circle, Vprint_continuous_numbering, Vprint_gensym)
	(Vprint_length, Vprint_level, Vprint_number_table)
	(Vstandard_output, print_escape_multibyte)
	(print_escape_newlines, print_escape_nonascii, print_quoted):
	Remove.
	* msdos.c (syms_of_msdos): Update.
	(Vdos_unsupported_char_glyph): Remove.
	(unibyte_display_via_language_environment): Remove declaration.
	* minibuf.c (syms_of_minibuf): Update.
	(Vcompletion_regexp_list, Vhistory_add_new_input)
	(Vhistory_length, Vminibuffer_completing_file_name)
	(Vminibuffer_completion_confirm)
	(Vminibuffer_completion_predicate, Vminibuffer_completion_table)
	(Vminibuffer_exit_hook, Vminibuffer_help_form)
	(Vminibuffer_history_position, Vminibuffer_history_variable)
	(Vminibuffer_prompt_properties, Vminibuffer_setup_hook)
	(Vread_buffer_function, Vread_expression_map)
	(completion_ignore_case, enable_recursive_minibuffers)
	(history_delete_duplicates, minibuffer_allow_text_properties)
	(minibuffer_auto_raise, read_buffer_completion_ignore_case):
	Remove.
	* marker.c (syms_of_marker): Update.
	(byte_debug_flag): Remove.
	* macros.c (syms_of_macros): Update.
	(Vexecuting_kbd_macro, executing_kbd_macro_index): Remove.
	* lread.c (syms_of_lread): Update.
	(Vafter_load_alist, Vbyte_boolean_vars)
	(Vbytecomp_version_regexp, Vcurrent_load_list)
	(Veval_buffer_list, Vload_file_name, Vload_file_rep_suffixes)
	(Vload_history, Vload_path, Vload_read_function)
	(Vload_source_file_function, Vload_suffixes, Vobarray)
	(Vold_style_backquotes, Vpreloaded_file_list, Vread_circle)
	(Vread_symbol_positions_list, Vread_with_symbol_positions)
	(Vsource_directory, Vstandard_input, Vuser_init_file, Vvalues)
	(force_load_messages, load_convert_to_unibyte)
	(load_dangerous_libraries, load_force_doc_strings)
	(load_in_progress): Remove.
	* keymap.c (syms_of_keymap): Update.
	(Vdefine_key_rebound_commands, Vemulation_mode_map_alists)
	(Vminibuffer_local_completion_map)
	(Vminibuffer_local_filename_completion_map)
	(Vminibuffer_local_filename_must_match_map)
	(Vminibuffer_local_map, Vminibuffer_local_must_match_map)
	(Vminibuffer_local_ns_map, Vminor_mode_map_alist)
	(Vminor_mode_overriding_map_alist, Vwhere_is_preferred_modifier):
	Remove.
	* keyboard.c (syms_of_keyboard): Update.
	(Vauto_save_timeout, Vcommand_error_function)
	(Vcommand_hook_internal, Vdeactivate_mark)
	(Vdeferred_action_function, Vdeferred_action_list)
	(Vdisable_point_adjustment, Vdouble_click_time)
	(Vecho_keystrokes, Venable_disabled_menus_and_buttons)
	(Vfunction_key_map, Vglobal_disable_point_adjustment)
	(Vhelp_char, Vhelp_event_list, Vhelp_form)
	(Vinput_method_function, Vinput_method_previous_message)
	(Vkey_translation_map, Vlast_event_frame)
	(Vlucid_menu_bar_dirty_flag, Vmenu_bar_final_items)
	(Vminibuffer_message_timeout, Voverriding_local_map)
	(Voverriding_local_map_menu_flag, Vpost_command_hook)
	(Vpre_command_hook, Vprefix_help_command)
	(Vsaved_region_selection, Vselect_active_regions)
	(Vshow_help_function, Vspecial_event_map, Vsuggest_key_bindings)
	(Vthis_command, Vthis_command_keys_shift_translated)
	(Vthis_original_command, Vthrow_on_input, Vtimer_idle_list)
	(Vtimer_list, Vtool_bar_separator_image_expression, Vtop_level)
	(Vtty_erase_char, Vunread_command_events)
	(Vunread_input_method_events, Vunread_post_input_method_events)
	(auto_save_interval, cannot_suspend, do_mouse_tracking)
	(double_click_fuzz, extra_keyboard_modifiers)
	(inhibit_local_menu_bar_menus, last_command_event)
	(last_input_event, last_nonmenu_event, menu_prompt_more_char)
	(menu_prompting, meta_prefix_char, num_input_keys)
	(num_nonmacro_input_events, polling_period, unread_command_char):
	Remove.
	* insdel.c (syms_of_insdel): Update.
	(Vcombine_after_change_calls, check_markers_debug_flag): Remove.
	* indent.c (syms_of_indent): Update.
	(indent_tabs_mode): Remove.
	* image.c (syms_of_image): Update.
	(Vimage_cache_eviction_delay, Vimage_types)
	(Vimagemagick_render_type, Vmax_image_size, Vx_bitmap_file_path)
	(cross_disabled_images): Remove.
	* fringe.c (syms_of_fringe): Update.
	(Vfringe_bitmaps, Voverflow_newline_into_fringe): Remove.
	* frame.c (syms_of_frame): Update.
	(Vdefault_frame_alist, Vdefault_frame_scroll_bars)
	(Vdelete_frame_functions, Vframe_alpha_lower_limit)
	(Vmake_pointer_invisible, Vmenu_bar_mode, Vmouse_highlight)
	(Vmouse_position_function, Vterminal_frame, Vtool_bar_mode)
	(Vx_resource_class, Vx_resource_name, focus_follows_mouse):
	Remove.
	* fontset.c (syms_of_fontset): Update.
	(Valternate_fontname_alist, Vfont_encoding_charset_alist)
	(Vfontset_alias_alist, Vignore_relative_composition)
	(Votf_script_alist, Vuse_default_ascent)
	(Vvertical_centering_font_regexp): Remove.
	* font.c (syms_of_font): Update.
	(Vfont_encoding_alist, Vfont_log, Vfont_slant_table)
	(Vfont_weight_table, Vfont_width_table): Remove.
	* fns.c (syms_of_fns): Update.
	(Vfeatures, use_dialog_box, use_file_dialog): Remove.
	* filelock.c (syms_of_filelock): Update.
	(Vtemporary_file_directory): Remove.
	* fileio.c (syms_of_fileio): Update.
	(Vafter_insert_file_functions, Vauto_save_include_big_deletions)
	(Vauto_save_list_file_name, Vauto_save_visited_file_name)
	(Vdefault_file_name_coding_system, Vfile_name_coding_system)
	(Vfile_name_handler_alist, Vinhibit_file_name_handlers)
	(Vinhibit_file_name_operation, Vset_auto_coding_function)
	(Vwrite_region_annotate_functions)
	(Vwrite_region_annotations_so_far)
	(Vwrite_region_post_annotation_function)
	(delete_by_moving_to_trash, write_region_inhibit_fsync): Remove.
	(Vw32_get_true_file_attributes): Remove declaration.
	* eval.c (syms_of_eval): Update.
	(Vdebug_ignored_errors, Vdebug_on_error, Vdebug_on_signal)
	(Vdebugger, Vinhibit_quit, Vmacro_declaration_function)
	(Vquit_flag, Vsignal_hook_function, Vstack_trace_on_error)
	(debug_on_next_call, debug_on_quit, debugger_may_continue)
	(max_lisp_eval_depth, max_specpdl_size): Remove.
	* emacs.c (syms_of_emacs): Update.
	(Vafter_init_time, Vbefore_init_time, Vcommand_line_args)
	(Vdynamic_library_alist, Vemacs_copyright, Vemacs_version)
	(Vinstallation_directory, Vinvocation_directory)
	(Vinvocation_name, Vkill_emacs_hook, Vpath_separator)
	(Vprevious_system_messages_locale, Vprevious_system_time_locale)
	(Vsystem_configuration, Vsystem_configuration_options)
	(Vsystem_messages_locale, Vsystem_time_locale, Vsystem_type)
	(inhibit_x_resources, noninteractive1): Remove.
	* editfns.c (syms_of_editfns): Update.
	(Vbuffer_access_fontified_property)
	(Vbuffer_access_fontify_functions, Vinhibit_field_text_motion)
	(Voperating_system_release, Vsystem_name, Vuser_full_name)
	(Vuser_login_name, Vuser_real_login_name): Remove.
	* dosfns.c (syms_of_dosfns): Update.
	(Vdos_display_scancodes, Vdos_version, Vdos_windows_version)
	(dos_codepage, dos_country_code, dos_decimal_point)
	(dos_hyper_key, dos_keyboard_layout, dos_keypad_mode)
	(dos_super_key, dos_timezone_offset): Remove.
	* doc.c (syms_of_doc): Update.
	(Vbuild_files, Vdoc_file_name): Remove.
	* dispnew.c (syms_of_display): Update.
	(Vglyph_table, Vinitial_window_system)
	(Vredisplay_preemption_period, Vstandard_display_table)
	(Vwindow_system_version, baud_rate, cursor_in_echo_area)
	(inverse_video, redisplay_dont_pause, visible_bell): Remove.
	* dired.c (syms_of_dired): Update.
	(Vcompletion_ignored_extensions): Remove.
	(Vw32_get_true_file_attributes): Remove declaration.
	* dbusbind.c (syms_of_dbusbind): Update.
	(Vdbus_debug, Vdbus_registered_buses)
	(Vdbus_registered_objects_table): Remove.
	* data.c (syms_of_data): Update.
	(Vmost_negative_fixnum, Vmost_positive_fixnum): Remove.
	* composite.c (syms_of_composite): Update.
	(Vauto_composition_function, Vauto_composition_mode)
	(Vcompose_chars_after_function, Vcomposition_function_table):
	Remove.
	* coding.c (syms_of_coding): Update.
	(Vcharset_revision_table, Vcoding_category_list)
	(Vcoding_system_alist, Vcoding_system_for_read)
	(Vcoding_system_for_write, Vcoding_system_list)
	(Vdefault_process_coding_system, Venable_character_translation)
	(Vfile_coding_system_alist, Vlast_code_conversion_error)
	(Vlast_coding_system_used, Vlatin_extra_code_table)
	(Vlocale_coding_system, Vnetwork_coding_system_alist)
	(Vprocess_coding_system_alist)
	(Vselect_safe_coding_system_function)
	(Vstandard_translation_table_for_decode)
	(Vstandard_translation_table_for_encode)
	(Vtranslation_table_for_input, coding_system_require_warning)
	(eol_mnemonic_dos, eol_mnemonic_mac, eol_mnemonic_undecided)
	(eol_mnemonic_unix, inherit_process_coding_system)
	(inhibit_eol_conversion, inhibit_iso_escape_detection)
	(inhibit_null_byte_detection): Remove.
	* cmds.c (syms_of_cmds): Update.
	(Vpost_self_insert_hook): Remove.
	* charset.c (syms_of_charset): Update.
	(Vcharset_list, Vcharset_map_path, Vcurrent_iso639_language)
	(inhibit_load_charset_map): Remove.
	* character.c (syms_of_character): Update.
	(Vauto_fill_chars, Vchar_direction_table, Vchar_script_table)
	(Vchar_width_table, Vprintable_chars)
	(Vscript_representative_chars, Vtranslation_table_vector)
	(Vunicode_category_table): Remove.
	* ccl.c (syms_of_ccl): Update.
	(Vcode_conversion_map_vector, Vfont_ccl_encoder_alist)
	(Vtranslation_hash_table_vector): Remove.
	* category.c (syms_of_category): Update.
	(Vword_combining_categories, Vword_separating_categories): Remove.
	* callproc.c (syms_of_callproc): Update.
	(Vconfigure_info_directory, Vdata_directory, Vdoc_directory)
	(Vexec_directory, Vexec_path, Vexec_suffixes)
	(Vinitial_environment, Vprocess_environment)
	(Vshared_game_score_directory, Vshell_file_name): Remove.
	* callint.c (syms_of_callint): Update.
	(Vcommand_debug_status, Vcommand_history, Vcurrent_prefix_arg)
	(Vmark_even_if_inactive, Vmouse_leave_buffer_hook): Remove.
	* bytecode.c (syms_of_bytecode): Update.
	(Vbyte_code_meter, byte_metering_on): Remove.
	* buffer.c (syms_of_buffer): Update.
	(Vafter_change_functions, Vbefore_change_functions)
	(Vchange_major_mode_hook, Vfirst_change_hook)
	(Vinhibit_read_only, Vkill_buffer_query_functions)
	(Vtransient_mark_mode, inhibit_modification_hooks): Remove.
	* alloc.c (syms_of_alloc): Update.
	(Vgc_cons_percentage, Vgc_elapsed, Vmemory_full)
	(Vmemory_signal_data, Vpost_gc_hook, Vpurify_flag)
	(cons_cells_consed, floats_consed, garbage_collection_messages)
	(gc_cons_threshold, gcs_done, intervals_consed)
	(misc_objects_consed, pure_bytes_used, string_chars_consed)
	(strings_consed, symbols_consed, vector_cells_consed): Remove.

	* lisp.h (DEFVAR_LISP, DEFVAR_LISP_NOPRO, DEFVAR_BOOL)
	(DEFVAR_INT): Assume global is in `globals'.
	* alloc.c (globals): Define.
"
fbb5531fa11d13854b274d28ccd329c9b6652cfc,0xAX/emacs,"More-conservative ‚Äòformat‚Äô quote restyling

Instead of restyling curved quotes for every call to ‚Äòformat‚Äô,
create a new function ‚Äòformat-message‚Äô that does the restyling,
and using the new function instead of ‚Äòformat‚Äô only in contexts
where this seems appropriate.
Problem reported by Dmitry Gutov and Andreas Schwab in:
http://lists.gnu.org/archive/html/emacs-devel/2015-08/msg00826.html
http://lists.gnu.org/archive/html/emacs-devel/2015-08/msg00827.html
* doc/lispref/commands.texi (Using Interactive):
* doc/lispref/control.texi (Signaling Errors, Signaling Errors):
* doc/lispref/display.texi (Displaying Messages, Progress):
* doc/lispref/elisp.texi:
* doc/lispref/help.texi (Keys in Documentation):
* doc/lispref/minibuf.texi (Minibuffer Misc):
* doc/lispref/strings.texi (Formatting Strings):
* etc/NEWS:
Document the changes.
* lisp/abbrev.el (expand-region-abbrevs):
* lisp/apropos.el (apropos-library):
* lisp/calc/calc-ext.el (calc-record-message)
(calc-user-function-list):
* lisp/calc/calc-help.el (calc-describe-key, calc-full-help):
* lisp/calc/calc-lang.el (math-read-big-balance):
* lisp/calc/calc-store.el (calc-edit-variable):
* lisp/calc/calc-units.el (math-build-units-table-buffer):
* lisp/calc/calc-yank.el (calc-edit-mode):
* lisp/calendar/icalendar.el (icalendar-export-region)
(icalendar--add-diary-entry):
* lisp/cedet/mode-local.el (mode-local-print-binding)
(mode-local-describe-bindings-2):
* lisp/cedet/semantic/complete.el (semantic-completion-message):
* lisp/cedet/semantic/edit.el (semantic-parse-changes-failed):
* lisp/cedet/semantic/wisent/comp.el (wisent-log):
* lisp/cedet/srecode/insert.el (srecode-insert-show-error-report):
* lisp/descr-text.el (describe-text-properties-1, describe-char):
* lisp/dframe.el (dframe-message):
* lisp/dired-aux.el (dired-query):
* lisp/emacs-lisp/byte-opt.el (byte-compile-log-lap-1):
* lisp/emacs-lisp/bytecomp.el (byte-compile-log)
(byte-compile-log-file, byte-compile-warn, byte-compile-form):
* lisp/emacs-lisp/cconv.el (cconv-convert, cconv--analyze-use)
(cconv-analyze-form):
* lisp/emacs-lisp/check-declare.el (check-declare-warn):
* lisp/emacs-lisp/checkdoc.el (checkdoc-this-string-valid-engine):
* lisp/emacs-lisp/cl-macs.el (cl-symbol-macrolet):
* lisp/emacs-lisp/edebug.el (edebug-format):
* lisp/emacs-lisp/eieio-core.el (eieio-oref):
* lisp/emacs-lisp/eldoc.el (eldoc-minibuffer-message)
(eldoc-message):
* lisp/emacs-lisp/elint.el (elint-file, elint-log):
* lisp/emacs-lisp/find-func.el (find-function-library):
* lisp/emacs-lisp/macroexp.el (macroexp--obsolete-warning):
* lisp/emacs-lisp/map-ynp.el (map-y-or-n-p):
* lisp/emacs-lisp/nadvice.el (advice--make-docstring):
* lisp/emacs-lisp/package.el (package-compute-transaction)
(package-install-button-action, package-delete-button-action)
(package-menu--list-to-prompt):
* lisp/emacs-lisp/timer.el (timer-event-handler):
* lisp/emacs-lisp/warnings.el (lwarn, warn):
* lisp/emulation/viper-cmd.el:
(viper-toggle-parse-sexp-ignore-comments)
(viper-kill-buffer, viper-brac-function):
* lisp/emulation/viper-macs.el (viper-record-kbd-macro):
* lisp/facemenu.el (facemenu-add-new-face):
* lisp/faces.el (face-documentation, read-face-name)
(face-read-string, read-face-font, describe-face):
* lisp/files.el (find-alternate-file, hack-local-variables)
(hack-one-local-variable--obsolete, write-file)
(basic-save-buffer, delete-directory):
* lisp/format.el (format-write-file, format-find-file)
(format-insert-file):
* lisp/help-fns.el (help-fns--key-bindings)
(help-fns--compiler-macro, help-fns--obsolete)
(help-fns--interactive-only, describe-function-1)
(describe-variable):
* lisp/help.el (describe-mode):
* lisp/info-xref.el (info-xref-output):
* lisp/info.el (Info-virtual-index-find-node)
(Info-virtual-index, info-apropos):
* lisp/international/kkc.el (kkc-error):
* lisp/international/mule-cmds.el:
(select-safe-coding-system-interactively)
(select-safe-coding-system, describe-input-method):
* lisp/international/mule-conf.el (code-offset):
* lisp/international/mule-diag.el (describe-character-set)
(list-input-methods-1):
* lisp/international/quail.el (quail-error):
* lisp/minibuffer.el (minibuffer-message):
* lisp/mpc.el (mpc--debug):
* lisp/msb.el (msb--choose-menu):
* lisp/net/ange-ftp.el (ange-ftp-message):
* lisp/net/gnutls.el (gnutls-message-maybe):
* lisp/net/newst-backend.el (newsticker--sentinel-work):
* lisp/net/newst-treeview.el (newsticker--treeview-load):
* lisp/net/nsm.el (nsm-query-user):
* lisp/net/rlogin.el (rlogin):
* lisp/net/soap-client.el (soap-warning):
* lisp/net/tramp.el (tramp-debug-message):
* lisp/nxml/nxml-outln.el (nxml-report-outline-error):
* lisp/nxml/nxml-parse.el (nxml-parse-error):
* lisp/nxml/rng-cmpct.el (rng-c-error):
* lisp/nxml/rng-match.el (rng-compile-error):
* lisp/nxml/rng-uri.el (rng-uri-error):
* lisp/obsolete/iswitchb.el (iswitchb-possible-new-buffer):
* lisp/org/org-ctags.el:
(org-ctags-ask-rebuild-tags-file-then-find-tag):
* lisp/proced.el (proced-log):
* lisp/progmodes/ebnf2ps.el (ebnf-log):
* lisp/progmodes/flymake.el (flymake-log):
* lisp/progmodes/vhdl-mode.el (vhdl-warning-when-idle):
* lisp/replace.el (occur-1):
* lisp/simple.el (execute-extended-command)
(undo-outer-limit-truncate, define-alternatives):
* lisp/startup.el (command-line):
* lisp/subr.el (error, user-error, add-to-list):
* lisp/tutorial.el (tutorial--describe-nonstandard-key)
(tutorial--find-changed-keys):
* src/callint.c (Fcall_interactively):
* src/editfns.c (Fmessage, Fmessage_box):
Restyle the quotes of format strings intended for use as a
diagnostic, when restyling seems appropriate.
* lisp/subr.el (format-message): New function.
* src/doc.c (Finternal__text_restyle): New function.
(syms_of_doc): Define it.
"
a123622dc48a5f0e0eb32c07ce05c85e16e09c1d,0xAX/emacs,"Merge changes made in Gnus trunk.

message.texi (Insertion Variables): Document message-cite-style.
nnimap.el (nnimap-open-connection-1): Allow `network-only', too.
gssapi.el: New file separated out from imap.el to provide a general Kerberos 5 connection facility for Emacs.
message.el (message-elide-ellipsis): Document the format spec ellipsis.
message.el (message-elide-region): Allow the ellipsis to say how many lines were removed.
gnus-win.el (gnus-configure-frame): Protect against trying to restore window configurations containing buffers that are now dead.
nnimap.el (nnimap-parse-flags): Remove all MODSEQ entries before parsing to avoid integer overflows.
 (nnimap-parse-flags): Simplify the last change.
 (nnimap-parse-flags): Store HIGHESTMODSEQ as a string, since it may be too large for 32-bit Emacsen.
gnus-art.el (gnus-article-treat-body-boundary): Fix boundary width on XEmacs, which was one character too wide.
gnus-sum.el (gnus-articles-to-read): Use gnus-large-newsgroup as default number of articles to display.
 (gnus-articles-to-read): Use pretty names for prompt.
gnus-int.el (gnus-open-server): Ditto.
gnus-start.el (gnus-activate-group): Give a backtrace if debug-on-quit is set and the user hits `C-g'.
 (gnus-read-active-file): Ditto.
gnus-group.el (gnus-group-read-ephemeral-group): Ditto.
"
14b4e657e2fd647153b336c61a220acedda8454c,0xAX/emacs,"Spelling fixes

* lisp/cedet/semantic/doc.el (semantic-documentation-comment-preceding-tag):
Rename from semantic-documentation-comment-preceeding-tag.  All
uses changed.  Leave an obsolete alias behind.
* src/lisp.h (DEFINE_NON_NIL_Q_SYMBOL_MACROS):
Rename from DEFINE_NONNIL_Q_SYMBOL_MACROS.  All uses changed.
"
406af475be236b874e3633b68999f6a099d47587,0xAX/emacs,"Use emacs_open more consistently when opening files.

This handles EINTR more consistently now, and makes it easier
to introduce other uniform changes to file descriptor handling.
* src/systdio.h: New file.
* src/buffer.c (mmap_init):
* cygw32.c (chdir_to_default_directory):
* dispnew.c (Fopen_termscript):
* emacs.c (Fdaemon_initialized):
* fileio.c (Fdo_auto_save):
* image.c (slurp_file, png_load_body, jpeg_load_body):
* keyboard.c (Fopen_dribble_file):
* lread.c (Fload):
* print.c (Fredirect_debugging_output):
* sysdep.c (get_up_time, procfs_ttyname, procfs_get_total_memory):
* termcap.c (tgetent):
* unexaix.c, unexcoff.c (unexec, adjust_lnnoptrs):
* unexcw.c, unexelf.c, unexhp9k800.c, unexmacosx.c (unexec):
* w32term.c (w32_initialize) [CYGWIN]:
* xfaces.c (Fx_load_color_file):
Use emacs_open instead of plain open, and emacs_fopen instead of
plain fopen.
* dispnew.c, fileio.c, image.c, keyboard.c, lread.c, print.c, sysdep.c:
* xfaces.c: Include sysstdio.h rather than stdio.h, for emacs_fopen.
* callproc.c (default_output_mode): New constant.
(Fcall_process): Use it to call emacs_open instead of plain creat.
* dispnew.c (Fopen_termscript): Fix minor race in opening termscript.
* sysdep.c (emacs_open): Add commentary and don't call file name ""path"".
(emacs_fopen): New function.
* unexaix.c, unexcoff.c, unexelf.c, unexhp9k800.c, unexmacosx.c:
Include <lisp.h>, for emacs_open.
* unexelf.c (fatal): Remove decl; not needed with <lisp.h> included.
"
3d798ba7dbad4bac02226959cfd82099bf11fd9f,0xAX/emacs,"Make some functions static in non-Microsoft builds.

On my platform (Fedora 19 x86-64), this shrinks the
Emacs executable (text+data) by 0.25%.
* dispextern.h (erase_phys_cursor) [!WINDOWSNT]:
(load_color) [!MSDOS]:
* gnutls.h (emacs_gnutls_transport_set_errno) [!WINDOWSNT]:
* keyboard.h (make_ctrl_char) [!WINDOWSNT]:
* lisp.h (check_existing):
* process.h (conv_sockaddr_to_lisp, network_interface_list)
(network_interface_info) [!WINDOWSNT]:
* termhooks.h (encode_terminal_code) [!WINDOWSNT]:
Remove extern decls.
* fileio.c (check_existing):
* keyboard.c (make_ctrl_char) [!WINDOWSNT]:
* process.c (conv_sockaddr_to_lisp, network_interface_list)
(network_interface_info) [!WINDOWSNT]:
* term.c (encode_terminal_code) [!WINDOWSNT]:
* xdisp.c (erase_phys_cursor) [!WINDOWSNT]:
* xfaces.c (load_color) [!MSDOS]:
Now static.
* fileio.c (check_existing, check_executable, check_writable):
* process.c (network_interface_list, network_interface_info):
Move earlier, so that we don't need forward decls.
* gnutls.c (fn_gnutls_transport_set_errno)
(emacs_gnutls_transport_set_errno) [!WINDOWNT]:
Remove; unused.
* w32.c (init_environment): Use faccessat rather than
check_existing, partly for consistency with the rest of the code
in this file, partly so that check_existing can be static.
"
c4d17d50ea180c405fc58f9ffe693b6c633571ac,0xAX/emacs,"SMIE: change indent rules format, improve smie-setup.
* lisp/emacs-lisp/smie.el (smie-precs-precedence-table)
(smie-merge-prec2s, smie-bnf-precedence-table, smie-prec2-levels):
Mark them pure so the tables gets built at compile time.
(smie-bnf-precedence-table): Store the closer-alist in the table.
(smie-prec2-levels): Preserve the closer-alist.
(smie-blink-matching-open): Be more forgiving in case of indentation.
(smie-hanging-p): Rename from smie-indent--hanging-p.
(smie-bolp): Rename from smie-indent--bolp.
(smie--parent, smie--after): New dynamic vars.
(smie-parent-p, smie-next-p, smie-prev-p): New funs.
(smie-indent-rules): Remove.
(smie-indent--offset-rule): Remove fun.
(smie-rules-function): New var.
(smie-indent--rule): New fun.
(smie-indent--offset, smie-indent-keyword, smie-indent-after-keyword)
(smie-indent-exps): Use it.
(smie-setup): Setup paren blinking; add keyword args for token
functions; extract closer-alist from op-levels.
(smie-indent-debug-log): Remove var.
(smie-indent-debug): Remove fun.
* lisp/progmodes/prolog.el (prolog-smie-indent-rules): Remove.
(prolog-smie-rules): New fun to replace it.
(prolog-mode-variables): Simplify.
* lisp/progmodes/octave-mod.el (octave-smie-closer-alist): Remove, now that
it's setup automatically.
(octave-smie-indent-rules): Remove.
(octave-smie-rules): New fun to replace it.
(octave-mode): Simplify.
"
c8ae93b0890e61c5fbc151216d9169968e532f30,0xAX/emacs,"* window.h (WINDOW_FRINGE_EXTENDED_P): New macro.
* nsterm.m (ns_set_vertical_scroll_bar): Use it.  Use convenient
bool instead of BOOL.
* w32term.h (struct scroll_bar): Convert fringe_extended_p
from Lisp_Object to bitfield.  Adjust comment.
* w32term.c (x_scroll_bar_create): Adjust user.
Use WINDOW_FRINGE_EXTENDED_P and bool for boolean.
* xterm.c (XTset_vertical_scroll_bar): Likewise.
Use bool for boolean.
* xterm.h (struct scroll_bar): Prefer commonly used `unsigned'
to `unsigned int' when defining a bitfield.
"
1ddc2bd6ff0b5071454d2591f835927ea5b85a06,0xAX/emacs,"Simplify data_start configuration.

This is a followon simplification to the fix for Bug#13650.
* admin/CPP-DEFINES (DATA_START, ORDINARY_LINK): Remove.
* configure.ac (CRT_DIR, LIB_STANDARD, START_FILES, DATA_START)
(LD_FIRSTFLAG, ORDINARY_LINK, LIB_GCC): Remove.
(AC_CHECK_HEADERS_ONCE): Remove sys/resource.h, as it's
not always needed.
(HAVE_DATA_START): New macro.
* etc/PROBLEMS (LIBS_SYSTEM, LIBS_MACHINE, LIBS_STANDARD): Remove.
Remove legacy-systems section, as this stuff is no longer
applicable with current linking strategies.
* src/Makefile.in (LD_FIRSTFLAG, LIB_GCC, CRT_DIR, LIB_STANDARD)
(START_FILES): Remove.  All uses removed.
(otherobj): Remove $(VMLIMIT_OBJ), as it's now first.
(ALLOBJS): Move here from autodeps.mk, and with VMLIMITS_OBJ first.
(buildobj.h): Use it.
($(ALLOBJS)): Depend on globals.h.
(temacs$(EXEEXT)): Use $(ALLOBJS).
* src/autodeps.mk (ALLOBJS): Move to Makefile.in.
* src/deps.mk (vm-limit.o):
* src/makefile.w32-in ($(BLD)/vm-limit.$(O)):
Do not depend on mem-limits.h.
* src/emacs.c (__do_global_ctors, __do_global_ctors_aux)
(__do_global_dtors, __CTOR_LIST__, __DTOR_LIST__)
[__GNUC__ && !ORDINARY_LINK]: Remove.
* src/mem-limits.h, src/pre-crt0.c: Remove.
* src/unexaix.c, src/unexcoff.c: Don't include mem-limits.h.
* src/unexcoff.c (etext): New decl.
(make_hdr): Use it instead of start_of_data.
* src/vm-limit.c: Move most of mem-limits.h's contents here.
(data_start): New decl.  It's OK if this is approximate,
so simplify-away some unnecessary exactness.
(POINTER): Remove; all uses removed.
(data_space_start): Now char *, to avoid casts.
(exceeds_lisp_ptr): New function, replacing the old
EXCEEDS_LISP_PTR macro.  All uses changed.
(check_memory_limits): Simplify and remove casts.
(start_of_data) [!CANNOT_DUMP || !SYSTEM_MALLOC]: Remove.
(memory_warnings): Use data_start instead of start_of_data.

Fixes: debbugs:13783
"
674728d4e3b3eed39fd2c229eda4ac7754657102,0xAX/emacs,"* lisp/emacs-lisp/smie.el: Simplify the smie-rules-function return values.
(smie-precs->prec2): Rename from smie-precs-precedence-table.
(smie-bnf->prec2): Rename from smie-bnf-precedence-table.
(smie-prec2->grammar): Rename from smie-prec2-levels.
(smie-grammar): Rename from smie-op-levels.
(smie-indent--hanging-p): Rename from smie-hanging-p.
(smie-rule-hanging-p): New alias.
(smie-indent--bolp): Rename from smie-bolp.
(smie-indent--hanging-p): New alias.
(smie--token): New dynamically bound variable.
(smie-indent--parent): New function.
(smie-rule-parent-p): Use it; rename from smie-parent-p.
(smie-rule-next-p): Rename from smie-next-p.
(smie-rule-prev-p): Rename from smie-prev-p.
(smie-rule-sibling-p, smie-rule-parent)
(smie-indent--separator-outdent, smie-rule-separator): New functions.
(smie-rule-separator-outdent): New var.
(smie-indent--rule): Merge with smie-indent--column.
(smie-indent-forward-token, smie-indent-backward-token):
Also recognize close parens.
(smie-indent-keyword): Don't use smie-indent--column any more.
(smie-indent-after-keyword): Ignore closers by default.
(smie-indent-line): Use with-demoted-errors.
* lisp/progmodes/octave-mod.el (octave-smie-grammar):
Rename from octave-smie-op-levels.
(octave-smie-rules): Adjust to new behavior.
* lisp/progmodes/prolog.el (prolog-smie-grammar):
Rename from prolog-smie-op-levels.
"
1111783029f1d7f50c348d1836ec56c62fb344c2,0xAX/emacs,"Redesign bidi-aware edge positions of glyph rows, fix bug #6036.

 dispextern.h (struct glyph_row): New members minpos and maxpos.
 (MATRIX_ROW_START_CHARPOS, MATRIX_ROW_START_BYTEPOS)
 (MATRIX_ROW_END_CHARPOS, MATRIX_ROW_END_BYTEPOS): Reference minpos
 and maxpos members instead of start.pos and end.pos, respectively.
 xdisp.c (display_line): Compare IT_CHARPOS with the position in
 row->start.pos, rather than with MATRIX_ROW_START_CHARPOS.
 (cursor_row_p): Use row->end.pos rather than MATRIX_ROW_END_CHARPOS.
 (try_window_reusing_current_matrix, try_window_id): Use
 ROW->minpos rather than ROW->start.pos.
 (init_from_display_pos, init_iterator): Use EMACS_INT for
 character and byte positions.
 (find_row_edges): Renamed from find_row_end.  Accept additional
 arguments for minimum and maximum buffer positions seen by
 display_line for this row.  Don't use iterator to find the
 position following the maximum one; instead, increment the
 position found by display_line directly.  Fix logic; eol_pos
 should be tested before the rest.  Handle the case of characters
 delivered from display vector (bug#6036).  Fix tests related to
 it->method.  Handle the truncated_on_right_p rows.
 (RECORD_MAX_MIN_POS): New macro.
 (display_line): Use it to record the minimum and maximum buffer
 positions for glyphs in the row being assembled.  Record the
 position of the newline that terminates the line.  If word wrap is
 in effect, restore minimum and maximum positions seen up to the
 wrap point, when iterator returns to it.
 (try_window_reusing_current_matrix): Give up if in bidi-reordered
 row and cursor not already at point.  Restore original pre-bidi
 code for unidirectional buffers.
 dispnew.c (increment_row_positions, check_matrix_invariants):
 Increment and check row->start.pos and row->end.pos, in addition
 to MATRIX_ROW_START_CHARPOS and MATRIX_ROW_END_CHARPOS.
 .gdbinit (prowlims): Display row->minpos and row->maxpos.
 Display truncated_on_left_p and truncated_on_right_p flags.
 Formatting fixes.
 (pmtxrows): Display the ordinal number of each row.  Don't display
 rows beyond the last one.
 bidi.c (bidi_cache_iterator_state): Don't zero out new_paragraph:
 it is not copied by bidi_copy_it.
"
3a45383a47009a5e6a15a4005ad95ecf63539182,0xAX/emacs,"Use INTERNAL_FIELD for windows.
* src/window.h (WVAR): New macro.
(struct window): Change Lisp_Object members to INTERNAL_FIELD.
* src/alloc.c, src/buffer.c, src/composite.c, src/dispextern.h:
* src/dispnew.c, src/editfns.c, src/fileio.c, src/font.c, src/fontset.c:
* src/frame.c, src/frame.h, src/fringe.c, src/indent.c, src/insdel.c:
* src/keyboard.c, src/keymap.c, src/lisp.h, src/minibuf.c, src/nsterm.m:
* src/print.c, src/textprop.c, src/w32fns.c, src/w32menu.c, src/w32term.c:
* src/window.c, src/xdisp.c, src/xfaces.c, src/xfns.c, src/xmenu.c:
* src/xterm.c: Users changed.
* admin/coccinelle/window.cocci: Semantic patch to replace direct
access to Lisp_Object members of struct window to WVAR.
"
7352c6c695db8b90b63c2601277d64a32507d2bb,0xAX/emacs,"Rework C source files to avoid ^(

Work around Bug#22884 by rewording comments and strings to avoid ‚Äò(‚Äô
at the start of a line unless it starts a function.  This change
is a short-term hack; in the longer run we plan to fix cc-mode‚Äôs
performance for C files that have ‚Äò(‚Äô at the start of a line in a
comment or string.
"
ed33337c3e0d0b1a8b140e23168421ea43d79324,0xAX/emacs,"Require method in remote file name syntax

* lisp/minibuffer.el (completion--nth-completion):
Do not bind `non-essential'.

* lisp/net/tramp-adb.el (tramp-adb-maybe-open-connection):
* lisp/net/tramp-gvfs.el (tramp-gvfs-maybe-open-connection):
* lisp/net/tramp-sh.el (tramp-maybe-open-connection):
* lisp/net/tramp-smb.el (tramp-smb-maybe-open-connection): Do not call
`tramp-check-proper-method-and-host'.

* lisp/net/tramp-sh.el (tramp-ssh-controlmaster-options): Better traces.
(tramp-maybe-open-connection): Do not use argument for
¬¥tramp-completion-mode-p'.

* lisp/net/tramp.el (tramp-default-method-marker): New defconst.
(tramp-prefix-format, tramp-postfix-method-format)
(tramp-prefix-ipv6-format, tramp-postfix-ipv6-format)
(tramp-prefix-port-format, tramp-postfix-host-format)
(tramp-file-name-regexp, tramp-completion-file-name-regexp):
Use `eq' instead of `eqal'.
(tramp-method-regexp, tramp-domain-regexp)
(tramp-remote-file-name-spec-regexp)
(tramp-file-name-regexp-unified)
(tramp-completion-file-name-regexp-unified)
(tramp-completion-file-name-regexp-separate): Adapt regexp.
(tramp-completion-file-name-handler-alist)
(tramp-run-real-handler): Autoload them.
(tramp-find-method): Handle `tramp-default-method-marker'.
(tramp-check-proper-method-and-host)
(tramp-completion-run-real-handler): Remove them.
(tramp-error-with-buffer, tramp-connectable-p): Do not use
argument for ¬¥tramp-completion-mode-p'.
(tramp-find-foreign-file-name-handler): Remove COMPLETION
argument.  Do not apply heuristic for completion.
(tramp-file-name-handler): Do not modify `non-essential'.
(tramp-completion-file-name-handler): Change implementation.
(tramp-autoload-file-name-handler)
(tramp-completion-handle-file-name-all-completions):
Call `tramp-run-real-handler'.
(tramp-completion-mode-p): Do not autoload.  Remove argument.
Do not apply heuristic for completion.
(tramp-completion-dissect-file-name): Simplify implementation.
(tramp-handle-file-name-as-directory): Call `tramp-connectable-p'.

* test/lisp/net/tramp-tests.el (tramp-test01-file-name-syntax)
(tramp-test02-file-name-dissect)
(tramp-test03-file-name-defaults)
(tramp-test06-directory-file-name): Adapt to the new syntax.
(tramp-test11-copy-file, tramp-test12-rename-file)
(tramp--test-check-files): Deactivate temporarily tests with
quoted file names.
(tramp-test16-directory-files, tramp-test17-insert-directory):
Adapt tests.
(tramp-test24-file-name-completion): Do not check for
completion mode.
(tramp-test31-make-auto-save-file-name): Deactivate temporarily
two tests.
"
a2403e3d8edc2543a2dc8968682e50bd8e7f979a,0xAX/emacs,"lisp/term/ns-win.el (x-command-line-resources): Rename from ns-... version.

(ns-initialize-window-system): Use it.  It is set in term/common-win.el
from the -xrm command line argument, but in the Nextstep port its value
is irrelevant because nsfns.m:Fx_open_connection ignores it for now.
"
200fc9496f7e2d53610e31634fdcd750d1870279,0xAX/emacs,"Simplify and cleanup character conversion stuff.
* lisp.h (multibyte_char_to_unibyte, multibyte_char_to_unibyte_safe):
Remove prototypes.
* character.c (multibyte_char_to_unibyte)
(multibyte_char_to_unibyte_safe): Remove; no longer used.
* character.h (make_char): Remove; unused.
(CHAR_TO_BYTE8, CHAR_TO_BYTE_SAFE): Simplify.
(ASCII_BYTE_P): Remove; ASCII_CHAR_P does the same thing.
* buffer.c, charset.c, charset.h, cmds.c, coding.c, editfns.c:
* fileio.c, indent.c, insdel.c, keyboard.c, lread.c, print.c:
* search.c, term.c, xdisp.c, xterm.c: Related users changed.
"
675e2c697bc8a0ff827fcb33297f63f4cc7ecad3,0xAX/emacs,"Use const char* instead of char*.
* src/xterm.c (x_create_toolkit_scroll_bar):
* src/xfont.c (xfont_list_pattern):
* src/xfns.c (x_default_scroll_bar_color_parameter)
(xic_create_fontsetname, x_default_font_parameter)
(x_screen_planes):
* src/xdisp.c (c_string_pos, number_of_chars, reseat_to_string)
(store_mode_line_string, decode_mode_spec, display_string):
* src/menu.c (digest_single_submenu):
* src/keymap.h (initial_define_key, initial_define_lispy_key):
* src/keymap.c (initial_define_key, initial_define_lispy_key):
* src/image.c (image_error, image_keyword):
* src/gtkutil.h (xg_create_widget, xg_create_scroll_bar):
* src/gtkutil.c (xg_create_widget, xg_create_scroll_bar):
* src/ftfont.c (struct fc_charset_table, ftfont_spec_pattern)
(ftfont_list, ftfont_match):
* src/frame.c (frame_parm_table):
* src/font.h (font_intern_prop, font_parse_xlfd, font_parse_fcname)
(font_unparse_fcname, font_unparse_fcname, font_open_by_name)
(font_add_log, font_deferred_log):
* src/font.c (font_intern_prop, font_parse_xlfd, font_parse_fcname)
(font_unparse_fcname, font_unparse_fcname, font_open_by_name)
(font_add_log, font_deferred_log):
* src/emacs.c (argmatch):
* src/dispextern.h (struct it):
* src/coding.c (ENCODE_DESIGNATION):
* src/charset.c (define_charset_internal): Use const.
"
ead3f58d861491ace75d3af9435454c1b467f326,0xAX/emacs,"(Standard Keymaps): Rename function-key-map to local-function-key-map.
"
088dcc3e8c2a0b8a36dd9ac5e515d51e41530bee,0xAX/emacs,"Use intern_c_string instead of intern.
* src/nsselect.m (syms_of_nsselect):
* src/nsmenu.m (syms_of_nsmenu):
* src/nsfns.m (syms_of_nsfns):
* src/msdos.c (syms_of_msdos):
* src/image.c (syms_of_image):
* src/charset.c (syms_of_charset): Use intern_c_string instead of intern.
"
b229f37d43081a2d960467ead3c5eed6a5764680,0xAX/emacs,"Improve Gnus' dribble data handling.
"
389b76fa1b4e96b7da8896cea16d57403d76a947,0xAX/emacs,"Merge changes made in Gnus trunk.

nnimap.el (nnimap-open-connection): Only send AUTHENTICATE PLAIN if LOGINDISABLED is set.
gnus.el (gnus-group-startup-message): Move point to the start of the buffer.
nndoc.el (nndoc-dissect-buffer): Reverse the order of the articles to reflect the order they're in in the digest.
gnus-sum.el (gnus-summary-select-article): Make `C-d' work reliably by checking whether the original article buffer is alive.
shr.el (shr-find-fill-point): Don't break lines between punctuation and non-punctuation (like after the apostrophe in ""'We"").
gnus-cite.el (gnus-article-fill-cited-article): Remove unused `force' parameter.
gnus-art.el (gnus-treatment-function-alist): Have gnus-treat-fill-long-lines point to gnus-article-fill-cited-long-lines.
gnus-art.el (gnus-treat-fill-long-lines): Change default to fill all text/plain sections.
gnus.el: Autoload gnus-article-fill-cited-long-lines.
gnus-art.el (gnus-mime-display-alternative): Actually pass the type on to `gnus-treat-article'.
gnus-sum.el (gnus-summary-show-article): Add `C-u C-u g' for showing the raw article, and change `C-u g' to show the article without doing treatments.
gnus.texi (Paging the Article): Document C-u g/C-u C-u g.
gnus-cite.el (gnus-article-foldable-buffer): Refactor out.
gnus-cite.el (gnus-article-foldable-buffer): Don't fold regions that have a ragged left edge.
gnus-cite.el (gnus-article-foldable-buffer): Skip past the prefix when determining raggedness.
gnus-srvr.el, nnir.el: Allow nnir searching for an entire server.
gnus-msg.el (gnus-configure-posting-styles): Permit the use of regular expression match and replace in posting styles.
gnus-art.el (gnus-treat-article): Only inhibit body washing, and leave the header washing to take place.
nnimap.el (nnimap-request-accept-article): Erase buffer before appending for easier debugging.
nnimap.el (nnimap-wait-for-connection): Take a regexp.
nnimap.el (nnimap-request-accept-article): Wait for the continuation line before sending anything unless we're streaming.
"
59f7af816e98a74abf42d724bcfdfa9bfe9964ce,0xAX/emacs,"Use declare forms, where possible, to mark obsolete functions.

* lisp/allout.el (allout-passphrase-hint-string): Likewise.
(allout-init): Use a declare form to mark obsolete.

* lisp/calendar/calendar.el (calendar-version):
* lisp/calendar/icalendar.el (icalendar-extract-ical-from-buffer)
(icalendar-convert-diary-to-ical):
* lisp/cus-edit.el (custom-mode):
* lisp/ansi-color.el (ansi-color-unfontify-region):
* lisp/international/latin1-disp.el (latin1-char-displayable-p):
* lisp/progmodes/cwarn.el (turn-on-cwarn-mode):
* lisp/progmodes/which-func.el (which-func-update-1): Use
define-obsolete-function-alias.

* lisp/bookmark.el (bookmark-jump-noselect): Use a declare form to mark
this function obsolete.

* lisp/calendar/cal-x.el (calendar-two-frame-setup)
(calendar-only-one-frame-setup, calendar-one-frame-setup):
* lisp/calendar/calendar.el (american-calendar, european-calendar)
(calendar-for-loop):
* lisp/comint.el (comint-dynamic-simple-complete)
(comint-dynamic-complete-as-filename, comint-unquote-filename):
* lisp/desktop.el (desktop-load-default):
* lisp/dired-x.el (dired-omit-here-always)
(dired-hack-local-variables, dired-default-directory):
* lisp/emacs-lisp/derived.el (derived-mode-class):
* lisp/emacs-lisp/timer.el (timer-set-time-with-usecs):
* lisp/emacs-lock.el (toggle-emacs-lock):
* lisp/epa.el (epa-display-verify-result):
* lisp/epg.el (epg-sign-keys, epg-start-sign-keys)
(epg-passphrase-callback-function):
* lisp/eshell/esh-util.el (eshell-for):
* lisp/eshell/eshell.el (eshell-remove-from-window-buffer-names)
(eshell-add-to-window-buffer-names):
* lisp/files.el (locate-file-completion):
* lisp/imenu.el (imenu-example--create-c-index)
(imenu-example--create-lisp-index)
(imenu-example--lisp-extract-index-name)
(imenu-example--name-and-position):
* lisp/international/mule-cmds.el (princ-list):
* lisp/international/mule-diag.el (decode-codepage-char):
* lisp/international/mule-util.el (detect-coding-with-priority):
* lisp/iswitchb.el (iswitchb-read-buffer):
* lisp/mail/mailalias.el (mail-complete):
* lisp/mail/sendmail.el (mail-sent-via):
* lisp/mouse.el (mouse-popup-menubar-stuff, mouse-popup-menubar)
(mouse-major-mode-menu):
* lisp/password-cache.el (password-read-and-add):
* lisp/pcomplete.el (pcomplete-parse-comint-arguments):
* lisp/progmodes/sh-script.el (sh-maybe-here-document):
* lisp/replace.el (query-replace-regexp-eval):
* lisp/savehist.el (savehist-load):
* lisp/simple.el (choose-completion-delete-max-match):
* lisp/term.el (term-dynamic-simple-complete):
* lisp/vc/ediff-init.el (ediff-check-version):
* lisp/vc/ediff-wind.el (ediff-choose-window-setup-function-automatically):
* lisp/vc/vc.el (vc-diff-switches-list):
* lisp/view.el (view-return-to-alist-update): Likewise.

* lisp/iswitchb.el (iswitchb-read-buffer): Move code of
iswitchb-define-mode-map here, and delete that obsolete function.

* lisp/subr.el (eval-next-after-load, makehash, insert-string)
(assoc-ignore-representation, assoc-ignore-case): Use declare to
mark obsolete.
(mode-line-inverse-video): Variable deleted.

* lisp/emacs-lisp/byte-run.el (make-obsolete): Doc fix; emphasize that
this applies to functions.

* lisp/erc/erc.el (erc-send-command): Use define-obsolete-function-alias.

* lisp/international/mule-util.el (string-to-sequence): Remove.

* lisp/net/newst-backend.el (newsticker-cache-filename):
* lisp/net/newst-treeview.el (newsticker-groups-filename): Fix
incorrect obsolescence declaration.

* lisp/net/snmp-mode.el (snmp-font-lock-keywords-3): Don't use obsolete
font-lock-reference-face.

* lisp/url/url-parse.el (url-recreate-url-attributes):
* lisp/url/url-util.el (url-generate-unique-filename): Use declare to mark
obsolete.

* src/xdisp.c (mode_line_inverse_video): Delete obsolete variable.
"
0c94c8d603031f6b665ae7f3136ca77fb573fd7e,0xAX/emacs,"A few more naming-convention fixes for getters and setters.

* buffer.c (set_buffer_overlays_before): Move here from buffer.h,
and rename from buffer_overlays_set_before.
(set_buffer_overlays_after): Move here from buffer.h, and rename
from buffer_overlays_set_after.
* buffer.h (buffer_intervals): Rename from buffer_get_intervals.
All uses changed.
(set_buffer_intervals): Rename from buffer_set_intervals.
* intervals.c (set_interval_object): Move here from intervals.h,
and rename from interval_set_object.
(set_interval_left): Move here from intervals.h, and rename from
interval_set_left.
(set_interval_right): Move here from intervals.h, and rename from
interval_set_right.
(copy_interval_parent): Move here from intervals.h, and rename from
interval_copy_parent.
* intervals.h (set_interval_parent): Rename from interval_set_parent.
(set_interval_plist): Rename from interval_set_plist.
Return void, not Lisp_Object, since no caller uses the result.
* lisp.h (string_intervals): Rename from string_get_intervals.
(set_string_intervals): Rename from string_set_intervals.
"
6afef3f6ca2f3009c722b84e249903b7f807b044,0xAX/emacs,"Go back to grave quoting in source-code docstrings etc.

This reverts almost all my recent changes to use curved quotes
in docstrings and/or strings used for error diagnostics.
There are a few exceptions, e.g., Bah√°‚Äô√≠ proper names.
* admin/unidata/unidata-gen.el (unidata-gen-table):
* lisp/abbrev.el (expand-region-abbrevs):
* lisp/align.el (align-region):
* lisp/allout.el (allout-mode, allout-solicit-alternate-bullet)
(outlineify-sticky):
* lisp/apropos.el (apropos-library):
* lisp/bookmark.el (bookmark-default-annotation-text):
* lisp/button.el (button-category-symbol, button-put)
(make-text-button):
* lisp/calc/calc-aent.el (math-read-if, math-read-factor):
* lisp/calc/calc-embed.el (calc-do-embedded):
* lisp/calc/calc-ext.el (calc-user-function-list):
* lisp/calc/calc-graph.el (calc-graph-show-dumb):
* lisp/calc/calc-help.el (calc-describe-key)
(calc-describe-thing, calc-full-help):
* lisp/calc/calc-lang.el (calc-c-language)
(math-parse-fortran-vector-end, math-parse-tex-sum)
(math-parse-eqn-matrix, math-parse-eqn-prime)
(calc-yacas-language, calc-maxima-language, calc-giac-language)
(math-read-giac-subscr, math-read-math-subscr)
(math-read-big-rec, math-read-big-balance):
* lisp/calc/calc-misc.el (calc-help, report-calc-bug):
* lisp/calc/calc-mode.el (calc-auto-why, calc-save-modes)
(calc-auto-recompute):
* lisp/calc/calc-prog.el (calc-fix-token-name)
(calc-read-parse-table-part, calc-user-define-invocation)
(math-do-arg-check):
* lisp/calc/calc-store.el (calc-edit-variable):
* lisp/calc/calc-units.el (math-build-units-table-buffer):
* lisp/calc/calc-vec.el (math-read-brackets):
* lisp/calc/calc-yank.el (calc-edit-mode):
* lisp/calc/calc.el (calc, calc-do, calc-user-invocation):
* lisp/calendar/appt.el (appt-display-message):
* lisp/calendar/diary-lib.el (diary-check-diary-file)
(diary-mail-entries, diary-from-outlook):
* lisp/calendar/icalendar.el (icalendar-export-region)
(icalendar--convert-float-to-ical)
(icalendar--convert-date-to-ical)
(icalendar--convert-ical-to-diary)
(icalendar--convert-recurring-to-diary)
(icalendar--add-diary-entry):
* lisp/calendar/time-date.el (format-seconds):
* lisp/calendar/timeclock.el (timeclock-mode-line-display)
(timeclock-make-hours-explicit, timeclock-log-data):
* lisp/calendar/todo-mode.el (todo-prefix, todo-delete-category)
(todo-item-mark, todo-check-format)
(todo-insert-item--next-param, todo-edit-item--next-key)
(todo-mode):
* lisp/cedet/ede/pmake.el (ede-proj-makefile-insert-dist-rules):
* lisp/cedet/mode-local.el (describe-mode-local-overload)
(mode-local-print-binding, mode-local-describe-bindings-2):
* lisp/cedet/semantic/complete.el (semantic-displayor-show-request):
* lisp/cedet/srecode/srt-mode.el (srecode-macro-help):
* lisp/cus-start.el (standard):
* lisp/cus-theme.el (describe-theme-1):
* lisp/custom.el (custom-add-dependencies, custom-check-theme)
(custom--sort-vars-1, load-theme):
* lisp/descr-text.el (describe-text-properties-1, describe-char):
* lisp/dired-x.el (dired-do-run-mail):
* lisp/dired.el (dired-log):
* lisp/emacs-lisp/advice.el (ad-read-advised-function)
(ad-read-advice-class, ad-read-advice-name, ad-enable-advice)
(ad-disable-advice, ad-remove-advice, ad-set-argument)
(ad-set-arguments, ad--defalias-fset, ad-activate)
(ad-deactivate):
* lisp/emacs-lisp/byte-opt.el (byte-compile-inline-expand)
(byte-compile-unfold-lambda, byte-optimize-form-code-walker)
(byte-optimize-while, byte-optimize-apply):
* lisp/emacs-lisp/byte-run.el (defun, defsubst):
* lisp/emacs-lisp/bytecomp.el (byte-compile-lapcode)
(byte-compile-log-file, byte-compile-format-warn)
(byte-compile-nogroup-warn, byte-compile-arglist-warn)
(byte-compile-cl-warn)
(byte-compile-warn-about-unresolved-functions)
(byte-compile-file, byte-compile--declare-var)
(byte-compile-file-form-defmumble, byte-compile-form)
(byte-compile-normal-call, byte-compile-check-variable)
(byte-compile-variable-ref, byte-compile-variable-set)
(byte-compile-subr-wrong-args, byte-compile-setq-default)
(byte-compile-negation-optimizer)
(byte-compile-condition-case--old)
(byte-compile-condition-case--new, byte-compile-save-excursion)
(byte-compile-defvar, byte-compile-autoload)
(byte-compile-lambda-form)
(byte-compile-make-variable-buffer-local, display-call-tree)
(batch-byte-compile):
* lisp/emacs-lisp/cconv.el (cconv-convert, cconv--analyze-use):
* lisp/emacs-lisp/chart.el (chart-space-usage):
* lisp/emacs-lisp/check-declare.el (check-declare-scan)
(check-declare-warn, check-declare-file)
(check-declare-directory):
* lisp/emacs-lisp/checkdoc.el (checkdoc-this-string-valid-engine)
(checkdoc-message-text-engine):
* lisp/emacs-lisp/cl-extra.el (cl-parse-integer)
(cl--describe-class):
* lisp/emacs-lisp/cl-generic.el (cl-defgeneric)
(cl--generic-describe, cl-generic-generalizers):
* lisp/emacs-lisp/cl-macs.el (cl--parse-loop-clause, cl-tagbody)
(cl-symbol-macrolet):
* lisp/emacs-lisp/cl.el (cl-unload-function, flet):
* lisp/emacs-lisp/copyright.el (copyright)
(copyright-update-directory):
* lisp/emacs-lisp/edebug.el (edebug-read-list):
* lisp/emacs-lisp/eieio-base.el (eieio-persistent-read):
* lisp/emacs-lisp/eieio-core.el (eieio--slot-override)
(eieio-oref):
* lisp/emacs-lisp/eieio-opt.el (eieio-help-constructor):
* lisp/emacs-lisp/eieio-speedbar.el:
(eieio-speedbar-child-make-tag-lines)
(eieio-speedbar-child-description):
* lisp/emacs-lisp/eieio.el (defclass, change-class):
* lisp/emacs-lisp/elint.el (elint-file, elint-get-top-forms)
(elint-init-form, elint-check-defalias-form)
(elint-check-let-form):
* lisp/emacs-lisp/ert.el (ert-get-test, ert-results-mode-menu)
(ert-results-pop-to-backtrace-for-test-at-point)
(ert-results-pop-to-messages-for-test-at-point)
(ert-results-pop-to-should-forms-for-test-at-point)
(ert-describe-test):
* lisp/emacs-lisp/find-func.el (find-function-search-for-symbol)
(find-function-library):
* lisp/emacs-lisp/generator.el (iter-yield):
* lisp/emacs-lisp/gv.el (gv-define-simple-setter):
* lisp/emacs-lisp/lisp-mnt.el (lm-verify):
* lisp/emacs-lisp/macroexp.el (macroexp--obsolete-warning):
* lisp/emacs-lisp/map-ynp.el (map-y-or-n-p):
* lisp/emacs-lisp/nadvice.el (advice--make-docstring)
(advice--make, define-advice):
* lisp/emacs-lisp/package-x.el (package-upload-file):
* lisp/emacs-lisp/package.el (package-version-join)
(package-disabled-p, package-activate-1, package-activate)
(package--download-one-archive)
(package--download-and-read-archives)
(package-compute-transaction, package-install-from-archive)
(package-install, package-install-selected-packages)
(package-delete, package-autoremove, describe-package-1)
(package-install-button-action, package-delete-button-action)
(package-menu-hide-package, package-menu--list-to-prompt)
(package-menu--perform-transaction)
(package-menu--find-and-notify-upgrades):
* lisp/emacs-lisp/pcase.el (pcase-exhaustive, pcase--u1):
* lisp/emacs-lisp/re-builder.el (reb-enter-subexp-mode):
* lisp/emacs-lisp/ring.el (ring-previous, ring-next):
* lisp/emacs-lisp/rx.el (rx-check, rx-anything)
(rx-check-any-string, rx-check-any, rx-check-not, rx-=)
(rx-repeat, rx-check-backref, rx-syntax, rx-check-category)
(rx-form):
* lisp/emacs-lisp/smie.el (smie-config-save):
* lisp/emacs-lisp/subr-x.el (internal--check-binding):
* lisp/emacs-lisp/tabulated-list.el (tabulated-list-put-tag):
* lisp/emacs-lisp/testcover.el (testcover-1value):
* lisp/emacs-lisp/timer.el (timer-event-handler):
* lisp/emulation/viper-cmd.el (viper-toggle-parse-sexp-ignore-comments)
(viper-toggle-search-style, viper-kill-buffer)
(viper-brac-function):
* lisp/emulation/viper-macs.el (viper-record-kbd-macro):
* lisp/env.el (setenv):
* lisp/erc/erc-button.el (erc-nick-popup):
* lisp/erc/erc.el (erc-cmd-LOAD, erc-handle-login, english):
* lisp/eshell/em-dirs.el (eshell/cd):
* lisp/eshell/em-glob.el (eshell-glob-regexp)
(eshell-glob-entries):
* lisp/eshell/em-pred.el (eshell-parse-modifiers):
* lisp/eshell/esh-opt.el (eshell-show-usage):
* lisp/facemenu.el (facemenu-add-new-face)
(facemenu-add-new-color):
* lisp/faces.el (read-face-name, read-face-font, describe-face)
(x-resolve-font-name):
* lisp/files-x.el (modify-file-local-variable):
* lisp/files.el (locate-user-emacs-file, find-alternate-file)
(set-auto-mode, hack-one-local-variable--obsolete)
(dir-locals-set-directory-class, write-file, basic-save-buffer)
(delete-directory, copy-directory, recover-session)
(recover-session-finish, insert-directory)
(file-modes-char-to-who, file-modes-symbolic-to-number)
(move-file-to-trash):
* lisp/filesets.el (filesets-add-buffer, filesets-remove-buffer):
* lisp/find-cmd.el (find-generic, find-to-string):
* lisp/finder.el (finder-commentary):
* lisp/font-lock.el (font-lock-fontify-buffer):
* lisp/format.el (format-write-file, format-find-file)
(format-insert-file):
* lisp/frame.el (get-device-terminal, select-frame-by-name):
* lisp/fringe.el (fringe--check-style):
* lisp/gnus/nnmairix.el (nnmairix-widget-create-query):
* lisp/help-fns.el (help-fns--key-bindings)
(help-fns--compiler-macro, help-fns--parent-mode)
(help-fns--obsolete, help-fns--interactive-only)
(describe-function-1, describe-variable):
* lisp/help.el (describe-mode)
(describe-minor-mode-from-indicator):
* lisp/image.el (image-type):
* lisp/international/ccl.el (ccl-dump):
* lisp/international/fontset.el (x-must-resolve-font-name):
* lisp/international/mule-cmds.el (prefer-coding-system)
(select-safe-coding-system-interactively)
(select-safe-coding-system, activate-input-method)
(toggle-input-method, describe-current-input-method)
(describe-language-environment):
* lisp/international/mule-conf.el (code-offset):
* lisp/international/mule-diag.el (describe-character-set)
(list-input-methods-1):
* lisp/mail/feedmail.el (feedmail-run-the-queue):
* lisp/mouse.el (minor-mode-menu-from-indicator):
* lisp/mpc.el (mpc-playlist-rename):
* lisp/msb.el (msb--choose-menu):
* lisp/net/ange-ftp.el (ange-ftp-shell-command):
* lisp/net/imap.el (imap-interactive-login):
* lisp/net/mairix.el (mairix-widget-create-query):
* lisp/net/newst-backend.el (newsticker--sentinel-work):
* lisp/net/newst-treeview.el (newsticker--treeview-load):
* lisp/net/rlogin.el (rlogin):
* lisp/obsolete/iswitchb.el (iswitchb-possible-new-buffer):
* lisp/obsolete/otodo-mode.el (todo-more-important-p):
* lisp/obsolete/pgg-gpg.el (pgg-gpg-process-region):
* lisp/obsolete/pgg-pgp.el (pgg-pgp-process-region):
* lisp/obsolete/pgg-pgp5.el (pgg-pgp5-process-region):
* lisp/org/ob-core.el (org-babel-goto-named-src-block)
(org-babel-goto-named-result):
* lisp/org/ob-fortran.el (org-babel-fortran-ensure-main-wrap):
* lisp/org/ob-ref.el (org-babel-ref-resolve):
* lisp/org/org-agenda.el (org-agenda-prepare):
* lisp/org/org-clock.el (org-clock-notify-once-if-expired)
(org-clock-resolve):
* lisp/org/org-ctags.el (org-ctags-ask-rebuild-tags-file-then-find-tag):
* lisp/org/org-feed.el (org-feed-parse-atom-entry):
* lisp/org/org-habit.el (org-habit-parse-todo):
* lisp/org/org-mouse.el (org-mouse-popup-global-menu)
(org-mouse-context-menu):
* lisp/org/org-table.el (org-table-edit-formulas):
* lisp/org/ox.el (org-export-async-start):
* lisp/proced.el (proced-log):
* lisp/progmodes/ada-mode.el (ada-get-indent-case)
(ada-check-matching-start, ada-goto-matching-start):
* lisp/progmodes/ada-prj.el (ada-prj-display-page):
* lisp/progmodes/ada-xref.el (ada-find-executable):
* lisp/progmodes/ebrowse.el (ebrowse-tags-apropos):
* lisp/progmodes/etags.el (etags-tags-apropos-additional):
* lisp/progmodes/flymake.el (flymake-parse-err-lines)
(flymake-start-syntax-check-process):
* lisp/progmodes/python.el (python-shell-get-process-or-error)
(python-define-auxiliary-skeleton):
* lisp/progmodes/sql.el (sql-comint):
* lisp/progmodes/verilog-mode.el (verilog-load-file-at-point):
* lisp/progmodes/vhdl-mode.el (vhdl-widget-directory-validate):
* lisp/recentf.el (recentf-open-files):
* lisp/replace.el (query-replace-read-from)
(occur-after-change-function, occur-1):
* lisp/scroll-bar.el (scroll-bar-columns):
* lisp/server.el (server-get-auth-key):
* lisp/simple.el (execute-extended-command)
(undo-outer-limit-truncate, list-processes--refresh)
(compose-mail, set-variable, choose-completion-string)
(define-alternatives):
* lisp/startup.el (site-run-file, tty-handle-args, command-line)
(command-line-1):
* lisp/subr.el (noreturn, define-error, add-to-list)
(read-char-choice, version-to-list):
* lisp/term/common-win.el (x-handle-xrm-switch)
(x-handle-name-switch, x-handle-args):
* lisp/term/x-win.el (x-handle-parent-id, x-handle-smid):
* lisp/textmodes/reftex-ref.el (reftex-label):
* lisp/textmodes/reftex-toc.el (reftex-toc-rename-label):
* lisp/textmodes/two-column.el (2C-split):
* lisp/tutorial.el (tutorial--describe-nonstandard-key)
(tutorial--find-changed-keys):
* lisp/type-break.el (type-break-noninteractive-query):
* lisp/wdired.el (wdired-do-renames, wdired-do-symlink-changes)
(wdired-do-perm-changes):
* lisp/whitespace.el (whitespace-report-region):
Prefer grave quoting in source-code strings used to generate help
and diagnostics.
* lisp/faces.el (face-documentation):
No need to convert quotes, since the result is a docstring.
* lisp/info.el (Info-virtual-index-find-node)
(Info-virtual-index, info-apropos):
Simplify by generating only curved quotes, since info files are
typically that ways nowadays anyway.
* lisp/international/mule-diag.el (list-input-methods):
Don‚Äôt assume text quoting style is curved.
* lisp/org/org-bibtex.el (org-bibtex-fields):
Revert my recent changes, going back to the old quoting style.
"
4b66faf3de2606b613dea58dd41e2926b6df3f10,0xAX/emacs,"Make identifiers static if they are not used in other modules.

* data.c (Qcompiled_function, Qframe, Qvector):
* image.c (QimageMagick, Qsvg):
* minibuf.c (Qmetadata):
* window.c (resize_window_check, resize_root_window): Now static.
* window.h (resize_window_check, resize_root_window): Remove decls.
"
2c6053e8387ca3d60dcc82e702f5a113ce5fb59f,0xAX/emacs,"Update docs for select-window and buffer-list-update-hook.

* buffer.c (Vbuffer_list_update_hook): Doc-string fix.
* window.c (Fselect_window): Explain NORECORD and
`buffer-list-update-hook' in doc-string.
* buffers.texi (The Buffer List): Rename node to Buffer List.
Describe `buffer-list-update-hook'.
* elisp.texi (Top): ""The Buffer List"" renamed to ""Buffer List"".
Add node for Window Dividers.
* hooks.texi (Standard Hooks): Add reference to
`buffer-list-update-hook'.
* windows.texi (Selecting Windows): Update description of
`select-window'.
"
09eabf0fa5a289a2edc68b3455d8579ae79bb40b,0xAX/emacs,"Clean up after granbbing CVS/Root info.
"
aeb1d6bdd54671a2e2b7dfbd22fcfe1aa19b36d1,0xAX/emacs,"Improve the semantic of seq-some

Update seq-some to return non-nil if the predicate returns non-nil for
any element of the seq, in which case the returned value is the one
returned by the predicate.

* lisp/emacs-lisp/seq.el (seq-some): Update the function and its
  docstring.
* test/automated/seq-tests.el (test-seq-some): Add a regression test.
* doc/lispref/sequences.texi (Sequence Functions): Update the
  documentation for seq-some.
"
b029599f767406002ea892d0bd40420de0a954f6,0xAX/emacs,"Clean up gc_sweep
"
bb75cdf9c74ab19b75532da1f953233a47eedab4,0xAX/emacs,"Cleanup terminal handling code.
* dispextern.h (get_named_tty): Remove prototype but...
* termhooks.h (get_named_terminal): ...resurrect it under
more meaningful name.
(get_terminal): Likewise, but with...
(decode_live_terminal): ...this name.
(decode_tty_terminal): Add prototype.
* term.c (get_tty_terminal): Remove.
(get_named_tty): Remove.
(Ftty_display_color_p, Ftty_display_color_cells, Ftty_type)
(Fcontrolling_tty_p, Fsuspend_tty, Fresume_tty):
Use decode_tty_terminal.
(Ftty_no_underline, Ftty_top_frame): Use decode_live_terminal.
* terminal.c (get_terminal): Refactor to...
(decode_terminal, decode_live_terminal): ...new functions.
(decode_tty_terminal): Replacement for get_tty_terminal.
(get_named_terminal): Likewise for get_named_tty.
* coding.c (Fset_terminal_coding_system_internal)
(Fterminal_coding_system, Fset_keyboard_coding_system_internal):
(Fkeyboard_coding_system):
* composite.c (Fcomposition_get_gstring):
* dispnew.c (Fsend_string_to_terminal):
* frame.c (Fmake_terminal_frame):
* nsfns.m (check_ns_display_info):
* w32fns.c, xfns.c (check_x_display_info):
* xselect.c (frame_for_x_selection): Use decode_live_terminal.
* keyboard.c (handle_interrupt_signal, handle_interrupt)
(Fset_quit_char): Use get_named_terminal.
(Fset_output_flow_control, Fset_input_meta_mode):
Use decode_tty_terminal.
"
644d3f0dbf38eca7a746e0fb5a7a0dd20d214949,0xAX/emacs,"Minor call-process cleanups.

* callproc.c (Fcall_process): Do record-unwind-protect on MSDOS
at the same time as other platforms, to simplify analysis.
No need for fd0_volatile since we have synch_process_fd.
Avoid needless emacs_close; arg is always negative.
"
302fc036e8b6305a45aca868e0001dd8fb3ed123,0xAX/emacs,"Fix bug #12082 with input of Meta-non-ASCII-characters on MS-Windows.

 src/w32fns.c (w32_wnd_proc): Pass w32_keyboard_codepage to
 w32_kbd_patch_key as the 2nd arg.
 src/w32term.c <w32_keyboard_codepage>: Renamed from
 keyboard_codepage and now external.  All users changed.
 src/w32term.h: Add declaration of w32_keyboard_codepage.
 src/w32inevt.c (w32_kbd_patch_key): Accept an additional argument --
 the codepage to translate keys to Unicode.  If this argument is
 -1, use the value returned by GetConsoleCP.  All callers changed.
"
f07a954eeb0930029104402e706165bf89853576,0xAX/emacs,"Make the effect of (defvar foo) local.
* src/eval.c (apply_lambda): Make static.  Remove eval_flag arg.
(Fsetq): Don't check declared_special.
(Fdefun, Fdefmacro): Use Ffunction.
(Fdefvar): Don't set declared_special for (defvar foo).
(FletX): Check locally-special vars.  Only do specbind once.
(Flet): Check locally-special vars.
(Feval): Don't check declared_special.
(funcall_lambda): Check locally-special vars.
* src/lisp.h (apply_lambda): Remove extern declaration.
* src/lread.c (readevalloop): CSE.
* lisp/subr.el (with-lexical-binding): Remove.
"
4a4bbad21472cc0ede4691cbdbf8117b655b574f,0xAX/emacs,"Simplify SIGIO usage.

The code that dealt with SIGIO was crufty and confusing, e.g., it
played tricks like ""#undef SIGIO"" but these tricks were not used
consistently.  Simplify mostly by not #undeffing standard symbols,
e.g., use ""defined USABLE_SIGIO"" (our symbol, which we can define
or not as we please) rather than ""defined SIGIO"" (standard symbol
that we probably shouldn't #undef).
* configure.ac (NO_TERMIO, BROKEN_FIONREAD, BROKEN_SIGAIO)
(BROKEN_SIGPOLL, BROKEN_SIGPTY): Remove.
(USABLE_FIONREAD, USABLE_SIGIO): New symbols.  All uses of
'defined SIGIO' replaced with 'defined USABLE_SIGIO', with no need
to #undef SIGIO now (which was error-prone).  Likewise, all uses
of 'defined FIONREAD' replaced with 'defined USABLE_FIONREAD'.
* src/admin/CPP_DEFINES (BROKEN_SIGAIO, BROKEN_SIGIO, BROKEN_SIGPOLL)
(BROKEN_SIGPTY, NO_TERMIO): Remove.
* src/conf_post.h [USG5_4]: Do not include <sys/wait.h> here.
Modules that need it can include it.
[USG5_4 && emacs]: Likewise, do not include the streams stuff here.
* src/dispextern.h (ignore_sigio): New decl.
* src/emacs.c (shut_down_emacs): Invoke unrequest_sigio
unconditionally, since it's now a no-op if !USABLE_SIGIO.
* src/emacs.c (shut_down_emacs):
* src/keyboard.c (kbd_buffer_store_event_hold):
Use ignore_sigio rather than invoking 'signal' directly.
* src/keyboard.c (USABLE_FIONREAD && USG5_4): Include <sys/filio.h>,
for FIONREAD.
(FIONREAD, SIGIO): Do not #undef.
(tty_read_avail_input): Use #error rather than a syntax error.
* src/process.c [USG5_4]: Include <sys/stream.h> and <sys/stropts.h>,
for I_PIPE, used by SETUP_SLAVE_PTY.
(DATAGRAM_SOCKETS): Simplify defn, based on USABLE_FIONREAD.
* src/sysdep.c (croak): Remove; no longer needed.  This bit of
temporary code, with Fred N. Fish's comment that it's temporary,
has been in Emacs since at least 1992!
(init_sigio, reset_sigio, request_sigio, unrequest_sigio):
Arrange for them to be no-ops in all cases when ! USABLE_SIGIO.
* src/syssignal.h (croak): Remove decl.
(SIGIO, SIGPOO, SIGAIO, SIGPTY): Do not #undef; that's too fragile.
* src/systty.h [!NO_TERMIO]: Do not include <termio.h>; no longer needed
now that we're termios-only.
(FIONREAD, ASYNC) [BROKEN_FIONREAD]: Do not #undef.
* src/term.c (dissociate_if_controlling_tty): Use #error rather than
a run-time error.

Fixes: debbugs:12408
"
fd5539c6de4df242b517a73ced2fc1ff1f661227,0xAX/emacs,"Improve ispell.el word completion handling. 

* ispell.el (ispell-alternate-dictionary): Use file-readable-p.
  Return nil if no word-list is found at default locations.
 (ispell-complete-word-dict): Default to nil.
 (ispell-command-loop): Use 'word-list' when using lookup-words.
 (lookup-words): Use ispell-complete-word-dict or
 ispell-alternate-dictionary.  Check for word-list availability
 and handle errors if needed with better messages (Bug#6539).
 (ispell-complete-word): Use ispell-complete-word-dict or
 ispell-alternate-dictionary.
"
55e8d9a5577d89d3dd866e43da6cd38149b62f2e,0xAX/emacs,"* startup.el (command-line-ns-option-alist): Use ignore instead of ns-ignore-0-arg.  * term/ns-win.el (ns-ignore-0-arg, mouse-extend-region) (ns-win-suspend-error, ns-yes-or-no-p, colors): Drop. (ns-alternatives-map): New variable. (x-set-up-function-keys): Use it. (global): Comment out 'put backspace ascii-character...' and friends. Move function-key-map into ns-alternatives-map.  Don't call precompute-menubar-bindings.  Don't set anything connected with browse-url. (after-make-frame-functions): Clarify comment why a hook is added.
"
cd6ef82d85dcd34f98b2ae6cec97b495f9a4e8ca,0xAX/emacs,"Move non-autoloaded define-obsolete-variable-alias calls for
defcustoms not in dumped files before the associated defcustom.
"
73dcdb9f30cb94a3183db54d9b463370c3978d4d,0xAX/emacs,"Use faccessat, not access, when checking file permissions.

This fixes a bug that has been present in Emacs since its creation.
It was reported by Chris Torek in 1983 even before GNU Emacs existed,
which must set some sort of record.  (Torek's bug report was against
a predecessor of GNU Emacs, but GNU Emacs happened to have the
same common flaw.)  See Torek's Usenet posting
""setuid/setgid programs & Emacs"" Article-I.D.: sri-arpa.858
Posted: Fri Apr  8 14:18:56 1983.
* .bzrignore: Add lib/fcntl.h.
* configure.ac (euidaccess): Remove check; gnulib does this for us now.
(gl_FCNTL_O_FLAGS): Define a dummy version.
* lib/at-func.c, lib/euidaccess.c, lib/faccessat.c, lib/fcntl.in.h:
* lib/getgroups.c, lib/group-member.c, lib/root-uid.h:
* lib/xalloc-oversized.h, m4/euidaccess.m4, m4/faccessat.m4:
* m4/fcntl_h.m4, m4/getgroups.m4, m4/group-member.m4:
New files, from gnulib.
* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
* admin/merge-gnulib (GNULIB_MODULES): Add faccessat.
(GNULIB_TOOL_FLAGS): Avoid at-internal, fchdir, malloc-posix,
openat-die, openat-h, save-cwd.  Do not avoid fcntl-h.
Omit gnulib's m4/fcntl-o.m4.
* nt/inc/ms-w32.h (AT_FDCWD, AT_EACCESS): New symbols.
(access): Remove.
(faccessat): New macro.
* src/Makefile.in (LIB_EACCESS): New macro.
(LIBES): Use it.
* src/callproc.c (init_callproc):
* src/charset.c (init_charset):
* src/fileio.c (check_existing, check_executable, check_writable)
(Ffile_readable_p):
* src/lread.c (openp, load_path_check):
* src/process.c (allocate_pty):
* src/xrdb.c (file_p):
Use effective UID when checking permissions, not real UID.
* src/callproc.c (init_callproc):
* src/charset.c (init_charset):
* src/lread.c (load_path_check, init_lread):
Test whether directories are accessible, not merely whether they exist.
* src/conf_post.h (GNULIB_SUPPORT_ONLY_AT_FDCWD): New macro.
* src/fileio.c (check_existing, check_executable, check_writable)
(Ffile_readable_p):
Use symbolic names instead of integers for the flags, as they're
portable now.
(check_writable): New arg AMODE.  All uses changed.
Set errno on failure.
(Ffile_readable_p): Use faccessat, not stat + open + close.
(Ffile_writable_p): No need to call check_existing + check_writable.
Just call check_writable and then look at errno.  This saves a syscall.
dir should never be nil; replace an unnecessary runtime check
with an eassert.  When checking the parent directory of a nonexistent
file, check that the directory is searchable as well as writable, as
we can't create files in unsearchable directories.
(file_directory_p): New function, which uses 'stat' on most platforms
but faccessat with D_OK (for efficiency) if WINDOWSNT.
(Ffile_directory_p, Fset_file_times): Use it.
(file_accessible_directory_p): New function, which uses a single
syscall for efficiency.
(Ffile_accessible_directory_p): Use it.
* src/xrdb.c (file_p): Use file_directory_p.
* src/lisp.h (file_directory_p, file_accessible_directory_p): New decls.
* src/lread.c (openp): When opening a file, use fstat rather than
stat, as that avoids a permissions race.  When not opening a file,
use file_directory_p rather than stat.
(dir_warning): First arg is now a usage string, not a format.
Use errno.  All uses changed.
* src/nsterm.m (ns_term_init): Remove unnecessary call to file-readable
that merely introduced a race.
* src/process.c, src/sysdep.c, src/term.c: All uses of '#ifdef O_NONBLOCK'
changed to '#if O_NONBLOCK', to accommodate gnulib O_* style,
and similarly for the other O_* flags.
* src/w32.c (sys_faccessat): Rename from sys_access and switch to
faccessat's API.  All uses changed.
* src/xrdb.c: Do not include <sys/stat.h>; no longer needed.
(magic_db): Rename from magic_file_p.
(magic_db, search_magic_path): Return an XrmDatabase rather than a
char *, so that we don't have to test for file existence
separately from opening the file for reading.  This removes a race
fixes a permission-checking problem, and simplifies the code.
All uses changed.
(file_p): Remove; no longer needed.

Fixes: debbugs:12632
"
4538c058d073cedeff92a50211b415a2e57c3469,0xAX/emacs,"lisp/frameset.el: Separate frame reusing from cleaning up.

* lisp/desktop.el (desktop-restore-forces-onscreen)
  (desktop-restore-reuses-frames): Use non-keyword values.
  (desktop-restore-frameset): Use CLEANUP-FRAMES arg of frameset-restore.

* lisp/frameset.el: Separate options for reusing frames and cleaning up.
  (frameset--reuse-list): Remove definition; declare.
  (frameset--action-map): Declare.
  (frameset--find-frame-if): Doc fix.
  (frameset--restore-frame): Cache frame action.
  (frameset-restore): New keyword arg CLEANUP-FRAMES, allows to select
  how to clean up the frame list after restoring.  Remove cleaning
  options from REUSE-FRAMES.  Change all keyword values to symbols.
  (frameset--jump-to-register): Simplify by using CLEANUP-FRAMES.
"
b1573a97e17b518723ab3f906eb6d521caed196d,0xAX/emacs,"Use alignas to fix GCALIGN-related bugs

Use alignas and unions to specify alignments of objects needing
addresses that are at least a multiple of GCALIGNMENT.  Using
these standard C facilities should be safer than relying on ad hoc
and poorly-understood features like GCC‚Äôs __attribute__
((aligned (N))), the root cause for recent porting bugs like
Bug#29040.  The alignas macro was standardized by C11 and Gnulib
supports alignas for pre-C11 platforms.  I have tested this on Sun
Studio 12 sparc (2007) and GCC 4.4.7 x86-64 (2012) as well as on
more recent platforms like GCC 7.2.1 (2017) on Fedora 26 (both
x86-64 and x86).
* lib-src/make-docfile.c (close_emacs_globals): lispsym is now
just an array of struct Lisp_Symbol, since struct Lisp_Symbol is
now properly aligned.  All uses changed.
* src/alloc.c (NEXT_FREE_LISP_STRING): Just use the new u.next
member; this is simpler and safer than casting a pointer that
might not be aligned properly.
(aligned_Lisp_Symbol): Remove.  No longer needed, now that struct
Lisp_Symbol is aligned properly.  All uses replaced with struct
Lisp_Symbol.
* src/lisp.h (GCALIGNED): Remove, as it does not work as expected:
it can cause the natural alignment to be ignored.  All uses
replaced by unions with a ‚Äòchar alignas (GCALIGNMENT)‚Äô member as
described below.
(struct Lisp_Symbol, struct Lisp_Cons, struct Lisp_String):
Change definition from ‚Äòstruct TAG { MEMBERS };‚Äô to
‚Äòstruct TAG { union { struct { MEMBERS } s; char alignas
(GCALIGNMENT) gcaligned; } u; };‚Äô.  This guarantees ‚Äòstruct TAG‚Äô
to have an alignment that at least max (GCALIGNMENT, N) where N is
its old alignment.  All uses like ‚ÄòPTR->MEMBER‚Äô changed to
‚ÄòPTR->u.s.MEMBER‚Äô; these uses were supposed to be mostly private
anyway.  Verify that the resulting ‚Äòstruct TAG‚Äô is properly
aligned for Emacs.
(union vectorlike_header): New member ‚Äògcaligned‚Äô to guarantee
that this type, and its containing types like ‚Äòstruct Lisp_Subr‚Äô,
‚Äòstruct buffer‚Äô and ‚Äòstruct thread_state‚Äô, are all properly
aligned for Emacs.
(struct Lisp_String): New union member ‚Äònext‚Äô, for the benefit
of NEXT_FREE_LISP_STRING.
(union Aligned_Cons, union Aligned_String): Remove.  All uses
replaced by struct Lisp_Cons and struct Lisp_String, since they
are now properly aligned.
(USE_STACK_CONS, USE_STACK_STRING): Simplify now that we can
assume struct Lisp_Cons and struct Lisp_String are properly
aligned.
"
e558436b778c0199caaff0ce40b9a279bacf640e,0xAX/emacs,"* xfaces.c (PT_PER_INCH): Remove unused macro.
* termhooks.h (struct terminal): Remove set-but-unused
member fast_clear_end_of_line.
(FRAME_FAST_CLEAR_END_OF_LINE): Remove.
* nsterm.m (ns_create_terminal):
* term.c (init_tty):
* w32term.c (w32_create_terminal):
* xterm.c (x_create_terminal): Adjust users.
"
81e0cca7bbc99dbfda898a8aaab740ae121cf045,0xAX/emacs,"Define MINGW_W64 and use it instead of _W64

... for detecting MinGW-w64. _W64 is not specific of MinGW-w64, it is
defined for compatibility with MS VC++.

	* nt/inc/ms-w32.h: Define MINGW_W64.

	* admin/CPP-DEFINES: Mention MINGW_W64.

	* nt/addpm.c: Use it.

	* nt/addsection.c: Use it.

	* nt/preprep.c: Use it.

	* src/w32.c: Use MINGW_W64 instead of _W64

	* src/w32term.c: Likewise.
"
e99a530f8cdca3ccd9e739cd092ed9865d12fe89,0xAX/emacs,"Simplify by avoiding confusing use of strncpy etc.
"
f4eb8900295d75c4afec256f75aea22494376fde,0xAX/emacs,"Limit <config.h>‚Äôs includes

This follows up on recent problems with the fact that config.h
includes stdlib.h etc.; some files need to include stdlib.h later.
config.h generally should limit itself to includes that are
universally safe; outside of MS-Windows, only stdbool.h makes
the cut among the files currently included.  So, move the
other includes to just the files that need them (Bug#24506).
* configure.ac (config_opsysfile): Remove, as this generic hook
is no longer needed.
* lib-src/etags.c, src/unexmacosx.c, src/w32.c, src/w32notify.c:
* src/w32proc.c (_GNU_SOURCE):
Remove, as it‚Äôs OK for config.h to do this now.
* src/conf_post.h: Include <ms-w32.h>, instead of the generic
config_opsysfile, for simplicity as this old way of configuring is
now done only for the MS-Windows port.  Do not include <ms-w32.h>
if DEFER_MS_W32_H, for the benefit of the few files that want its
effects later.  Do not include <alloca.h>, <string.h>, or
<stdlib.h>.  Other files modified to include these headers as
needed, or to not include headers that are no longer needed.
* src/lisp.h: Include <alloca.h> and <string.h> here, since
some of the inline functions need them.
* src/regex.c: Include <alloca.h> if not emacs.  (If emacs,
we can rely on SAFE_ALLOCA.)  There is no longer any need to
worry about HAVE_ALLOCA_H.
* src/unexmacosx.c: Rely on config.h not including stdlib.h.
* src/w32.c, src/w32notify.c, src/w32proc.c (DEFER_MS_W32_H):
Define before including <config.h> first, and include <ms-w32.h>
after the troublesome headers.
"
d1fdcab7425f36a34ddeaf304e2c6e3c471ba8db,0xAX/emacs,"Replace two copies of readlink code with single gnulib version.
"
62aba0d4973c5cba7ac7c387bbe133e0e3061c5c,0xAX/emacs,"Support x64 build on MS-Windows with MSVC.

 src/w32term.h (SCROLL_BAR_PACK, SCROLL_BAR_UNPACK): Define for x64.
 (SET_SCROLL_BAR_W32_WINDOW): Cast ID to intptr_t, for
 compatibility with x64.
 src/w32term.c (w32_draw_underwave): Don't use GCC extensions for
 defining an XRectangle structure.
 src/w32proc.c (RVA_TO_PTR, w32_executable_type): Fix pointer
 arithmetics for compatibility with x64.
 src/w32menu.c (add_menu_item): Use UINT_PTR instead of UINT, for
 compatibility with x64.
 src/w32heap.h: Adjust prototypes and declarations.
 src/w32heap.c (RVA_TO_PTR, allocate_heap, sbrk, init_heap)
 (round_heap): Use DWORD_PTR, ptrdiff_t and size_t instead of
 DWORD, long, and unsigned long, for compatibility with x64.
 (allocate_heap) [_WIN64]: Reserve 32GB of memory.
 (sbrk): Argument is now of type ptrdiff_t.
 src/w32fns.c (HMONITOR): Condition declaration on _WIN32_WINNT being
 less than 0x0500.
 (w32_msg_pump): Use WPARAM type for 'result'.
 src/w32.c (init_environment, get_emacs_configuration): Support AMD64
 architecture.
 (init_ntproc): Cast arguments of _open_osfhandle to intptr_t, for
 compatibility with x64.
 src/vm-limit.c (lim_data): Now size_t.
 (check_memory_limits): Adjust prototypes of real_morecore and
 __morecore to receive argument of type ptrdiff_t.  Use size_t for
 five_percent and data_size.
 src/unexw32.c: Use DWORD_PTR instead of DWORD for file-scope
 variables, for compatibility with x64.
 (rva_to_section, offset_to_section, relocate_offset)
 (OFFSET_TO_RVA, RVA_TO_OFFSET, RVA_TO_SECTION_OFFSET)
 (PTR_TO_RVA, RVA_TO_PTR, OFFSET_TO_PTR, get_section_info)
 (copy_executable_and_dump_data): Use DWORD_PTR instead of DWORD
 for compatibility with x64.
 src/sysdep.c (STDERR_FILENO): Define if not already defined.
 src/ralloc.c (real_morecore): Argument type is now ptrdiff_t.
 (__morecore): Argument type is now ptrdiff_t.
 (ROUNDUP, MEM_ROUNDUP): Use size_t instead of 'unsigned long'.
 (relinquish): Use ptrdiff_t type for 'excess'.
 (r_alloc_sbrk): Argument type is now ptrdiff_t.
 src/makefile.w32-in (HEAPSIZE): Get value from EMACS_HEAPSIZE.
 (bootstrap-temacs-CMD, bootstrap-temacs-SH): Use $(EMACS_PURESIZE)
 instead of a literal number.
 src/gmalloc.c [WINDOWSNT]: Include w32heap.h.
 (min): Define only if not already defined.
 src/frame.c (x_report_frame_params): Use EMACS_UINT for the return
 value of FRAME_X_WINDOW, to fit a 64-bit pointer on 64-bit Windows
 hosts.
 src/image.c (x_bitmap_pixmap): Return ptrdiff_t, not int, since
 'bitmaps' is a pointer.
 src/dispextern.h (x_bitmap_pixmap): Adjust prototype.
 src/alloc.c (gdb_make_enums_visible): Now conditional on __GNUC__.

 nt/makefile.w32-in ($(TRES)): Use $(EMACS_MANIFEST).
 nt/inc/sys/socket.h: Don't map Winsock error codes to standard ones
 that are already defined.
 nt/inc/ms-w32.h (EMACS_INT, EMACS_UINT, EMACS_INT_MAX, PRIuMAX)
 (pI, _INTPTR) [_MSC_VER]: Fix definitions for MSVC.
 [_MSC_VER]: Add pragmas to suppress some MSVC warnings.
 nt/preprep.c (pfnCheckSumMappedFile, rva_to_section)
 (offset_to_section, relocate_offset, OFFSET_TO_RVA)
 (RVA_TO_OFFSET, RVA_TO_SECTION_OFFSET, PTR_TO_RVA)
 (OFFSET_TO_PTR, ROUND_UP, ROUND_DOWN)
 (copy_executable_and_move_sections, ADJUST_IMPORT_RVA, main): Use
 DWORD_PTR instead of DWORD for compatibility with x64.
 nt/nmake.defs: Support AMD64.
 (EMACS_HEAPSIZE, EMACS_PURESIZE, EMACS_MANIFEST): New macros.
 nt/gmake.defs: (EMACS_HEAPSIZE, EMACS_PURESIZE, EMACS_MANIFEST):
 New macros.
 nt/addsection.c (pfnCheckSumMappedFile, rva_to_section)
 (offset_to_section, relocate_offset, OFFSET_TO_RVA)
 (RVA_TO_OFFSET, RVA_TO_SECTION_OFFSET, PTR_TO_RVA)
 (OFFSET_TO_PTR, ROUND_UP, ROUND_DOWN)
 (copy_executable_and_add_section, main): Use DWORD_PTR instead of
 DWORD, for compatibility with x64.
 nt/emacs-x64.manifest: New file.
 nt/emacs-x86.manifest: Renamed from emacs.manifest.

 lib-src/ntlib.c (gettimeofday): Copy from src/w32.c.  lib/gettime. 
 needs this function.
"
e27a91cddc1a66c25e09d3929c5625637ec34a49,0xAX/emacs,"Make limit on scroll-margin variable

* src/xdisp.c (maximum-scroll-margin): New variable.
* lisp/cus-start.el: Make it customizable.
* etc/NEWS: Mention it.
* doc/emacs/display.texi (Auto Scrolling):
* doc/lispref/windows.texi (Textual Scrolling): Document it.
* src/window.c (window_scroll_pixel_based): Use it instead of hardcoding
division by 4 (Bug #5718).
"
68359abba96d7ec4db8aab3d3dd9cf1105c3bab5,0xAX/emacs,"merge from trunk; clean up some issues
"
d6662694d05be03fdd070353637dd22a324c8b7a,0xAX/emacs,"Convert hex digits more systematically

This makes the code a bit smaller and presumably faster, as
it substitutes a single lookup for conditional jumps.
* src/character.c (hexdigit): New constant.
(syms_of_character) [HEXDIGIT_IS_CONST]: Initialize it.
* src/character.h (HEXDIGIT_CONST, HEXDIGIT_IS_CONST): New macros.
(hexdigit): New decl.
(char_hexdigit): New inline function.
* src/charset.c: Do not include c-ctype.h.
* src/charset.c (read_hex):
* src/editfns.c (styled_format):
* src/image.c (xbm_scan):
* src/lread.c (read_escape):
* src/regex.c (ISXDIGIT) [emacs]:
Use char_hexdigit insted of doing it by hand.
"
b7d1e1444724b4f2e47df2cac9983c4f9ac0a21a,0xAX/emacs,"Add separate key mappings for left/right control/command on Nextstep (Bug#7458).

* lisp/cus-start.el (all): Add ns-right-control-modifier and
ns-right-command-modifier.

* lisp/term/ns-win.el (ns-right-control-modifier)
(ns-right-command-modifier): Defvar them.

* src/nsterm.m (ns_right_command_modifier, ns_right_control_modifier):
Define (Bug#7458).
(NSRightCommandKeyMask, NSRightControlKeyMask): Define (Bug#7458).
(EV_MODIFIERS): Check for NSRightCommandKeyMask and
NSRightControlKeyMask also (Bug#7458).
(keyDown): Ditto (Bug#7458).
(syms_of_nsterm): Defvar ns-right-command-modifier and
ns-right-control-modifier (Bug#7458).
"
72b255c7e7856eb0abefb1149211a8be519f6fef,0xAX/emacs,"deactive->inactive, inactivate->deactivate spelling fixes (Bug#10150)

* NEWS: Document these changes.
* leim/quail/uni-input.el (ucs-input-deactivate):
Rename from ucs-input-inactivate.
* leim/quail/hangul.el (hangul-input-method-deactivate):
Rename from hangul-input-method-inactivate.
* emulation/viper-init.el (viper-deactivate-input-method-action):
Rename from viper-inactivate-input-method-action.
(viper-deactivate-input-method):
Rename from viper-inactivate-input-method.
* lisp/follow.el (follow-inactive-menu): Rename from follow-deactive-menu.
* lisp/international/mule-cmds.el (deactivate-input-method):
Rename from inactivate-input-method.
Also run input-method-deactivate-hook.
(deactivate-current-input-method-function):
Rename from inactivate-current-input-method-function.
(input-method-deactivate-hook): New hook.
(input-method-inactivate-hook): Mark obsolete.
* lisp/international/quail.el (quail-activate):
Also run quail-deactivate-hook.
(quail-deactivate): Rename from quail-inactivate.
* lisp/international/robin.el (robin-activate):
Also run robin-deactivate-hook.
(robin-deactivate): Rename from robin-inactivate.
"
7cded46f2bef23f86041cc883618ac82b6dbfe61,0xAX/emacs,"lread.c, macros.c, marker.c, menu.c, minibuf.c: Use bool for booleans.

* lread.c (load_each_byte, new_backquote_flag, readchar)
(read_filtered_event, lisp_file_lexically_bound_p)
(safe_to_load_version, Fload, complete_filename_p, openp)
(build_load_history, readevalloop, read_escape, read1)
(string_to_number, read_vector, read_list):
* macros.c (Fstart_kbd_macro):
* marker.c (CONSIDER):
* menu.c (parse_single_submenu, digest_single_submenu)
(find_and_return_menu_selection, Fx_popup_menu):
* minibuf.c (read_minibuf_noninteractive, read_minibuf)
(Ftry_completion):
* nsmenu.m (ns_update_menubar, runMenuAt:forFrame:keymaps:):
(ns_menu_show):
* xmenu.c (set_frame_menubar, create_and_show_popup_menu)
(xmenu_show, xdialog_show):
Use bool for booleans.
* lread.c (safe_to_load_version): Rename from safe_to_load_p,
as it's not a predicate.  All uses changed.  Omit unnecessary
buffer termination.
"
2f935d86fd7aa551e2c61d71c14a1c1a8b3ba707,0xAX/emacs,"* xterm.c (any_help_event_p, x_draw_glyph_string_background):
(x_display_ok): Use bool for booleans.
(x_draw_glyph_string_background, cvt_string_to_pixel):
(cvt_pixel_dtor): Drop unnecessary prototypes.
* xterm.h (x_display_ok): Adjust prototype.
"
e872d52c93433a80c4b1eb9b8179b5d30c65dcf3,0xAX/emacs,"Add vector qpattern to pcase

* doc/lispref/control.texi (Pattern matching case statement): Document vector
qpattern. 

* etc/NEWS: Mention vector qpattern for pcase.  (Bug#18327).

* lisp/emacs-lisp/pcase.el (pcase): Doc fix.
(pcase--split-vector): New function.
(pcase--q1): Support vector qpattern.  (Bug#18327)
"
65bd090d576cddb9a106ff765f4ef509121e1aa9,GNOME/glib,"Remove unused HAVE_LONG_LONG_FORMAT and HAVE_INT64_AND_I64
"
ee5a37f6576cba61b644c6ad395d7c31891eb506,GNOME/glib,"Merge branch 'threads-none' into 'master'

Remove unused THREADS_NONE

See merge request GNOME/glib!110"
54d2885e301998e5252c706161b4fa00a5be3ac6,GNOME/vala,"dova: Rename integer types
"
cabc02707224c55e526924fb3a71cdc2f9c36af4,GNOME/vala,"Remove code that references unused ByRef and InstanceByReference
"
77cb9aea10d9baaa55a6f188b686884bee918306,GNOME/vala,"Generate C code nodes only when needed for assignments to avoid

2008-10-21  J√ºrg Billeter  <j@bitron.ch>

	* gobject/valaccodeassignmentbinding.vala:
	* gobject/valaccodegenerator.vala:
	* gobject/valaccodememberaccessbinding.vala:

	Generate C code nodes only when needed for assignments to avoid
	unnecessary temporary variables

svn path=/trunk/; revision=1867
"
95883d2d9d67577282dfc53878656b50dfe38d7c,GNOME/vala,"Bug 571263 ‚Äì make yielding functions dispatch results to mainloop

2009-02-11  Ryan Lortie  <desrt@desrt.ca>

        Bug 571263 ‚Äì make yielding functions dispatch results to mainloop

        * gobject/valaccodemethodmodule.vala:
        * valagasyncmodule.vala:

        Create simple async result from _async entry function and use it when
        doing return; throw; or at the end of the function.  Fix return 
        statements for the async case.  Dispatch via idle handler in the case
        that we are returning without having yielded.


svn path=/trunk/; revision=2430
"
85cfd74faae12e90275990b2b887adc9a1f71d1d,GNOME/vala,"deprecate construct as parameter modifier, fixes bug 524138

2008-04-13  Juerg Billeter  <j@bitron.ch>

	* vala/valaparser.vala: deprecate construct as parameter modifier,
	  fixes bug 524138

	* */*.vala: port to new syntax

svn path=/trunk/; revision=1209
"
27d7d37411fb6f736ee622283193ca2dd020a6c7,Hack23/cia,"com.vaadin 8.6.3 -> 8.7.0.alpha1
org.jboss:jandex 2.1.0.Beta1 -> 2.1.0.Beta3
org.hibernate 5.4.0.CR2 -> 5.4.0.Final
com.amazonaws 1.11.467 -> 1.11.468"
6a66a46b5b54f7d98acb9a912e2459239a690dc8,Hack23/cia,pom cleanup
d0130d645c68878bda21c3a90496bb466abf1cc4,Hack23/cia,cleanup
a34fbf67351b7d313b7f42090e743606f6ca02ff,Hack23/cia,pom cleanup
72fa811af844ccd64eea52f7e6f0f5fb826a8ef6,apereo/cas,"CAS-1286: Extract the OAuth client support in its own module and upgrade to pac4j

Merge with master
"
c16b272a8a28d1a7d212fc1d31cbf01966d7561c,apereo/cas,"Clean up HZ registry config based on multiple maps and ticket metadata.
Should make it easy to provide separate maps based on OAuth tickets.
"
3057d15904117f689c9387064182b3c99aaad4bc,apereo/cas,"moving core API interfaces
"
bc713c182ac275f3cdc3db6886a27c87a21264f4,apereo/cas,"Refactor management of CAS properties & Configuration classes (#1834)

* Type-safe config model for throttling. WIP...

* Type-safe config model for throttling.

* Type-safe config model for monitor

* Polishing Jpa config

* working on transactional annotations

* Type-safe config model for events

* WIP...

* Merge branch 'jpa-transactions' into cond-beans-config

# Conflicts:
#	cas-server-core/src/main/java/org/apereo/cas/CentralAuthenticationServiceImpl.java
#	cas-server-support-jpa-service-registry/src/main/java/org/apereo/cas/services/JpaServiceRegistryDaoImpl.java
#	cas-server-support-jpa-ticket-registry/src/main/java/org/apereo/cas/ticket/registry/JpaTicketRegistry.java

* Merge branch 'jpa-transactions' into cond-beans-config

# Conflicts:
#	cas-server-core/src/main/java/org/apereo/cas/CentralAuthenticationServiceImpl.java
#	cas-server-support-jpa-service-registry/src/main/java/org/apereo/cas/services/JpaServiceRegistryDaoImpl.java
#	cas-server-support-jpa-ticket-registry/src/main/java/org/apereo/cas/ticket/registry/JpaTicketRegistry.java

* Merge branch 'jpa-transactions' into cond-beans-config

# Conflicts:
#	cas-server-core/src/main/java/org/apereo/cas/CentralAuthenticationServiceImpl.java
#	cas-server-support-jpa-service-registry/src/main/java/org/apereo/cas/services/JpaServiceRegistryDaoImpl.java
#	cas-server-support-jpa-ticket-registry/src/main/java/org/apereo/cas/ticket/registry/JpaTicketRegistry.java

* Type-safe config model for events. WIP...

* Type-safe config model for events

* Polishing

* Merge branch 'cond-beans-config' of github.com:Unicon/cas into cond-beans-config

# Conflicts:
#	cas-server-support-jpa-ticket-registry/src/main/java/org/apereo/cas/config/JpaTicketRegistryConfiguration.java

* Type-safe config model for mongo service registry

* Type-safe config model for mongo service registry

* removed unused imports

* Type-safe config model for webflow. WIP...

* Type-safe config model for webflow

* removed unused imports

* Type-safe config model for support-generic. WIP...

* Refactor abstract Config props

* Refactor abstract Config props

* removed unused imports

* Type-safe config model for support-generic(Shiro authn)

* Type-safe config model for support-generic(Shiro authn)

* removed unused imports

* Javadoc polishing

* removed unused imports

* Type-safe config model for mfa(yubikey)

* updated MDUI properties

* updated throttling

* updated docs

* added final

* fixing cs

* fixing cs

* fixing cs

* fixing cs

* fixing cs

* updated jpa service reg

* working on config

* updated docs

* doc updates

* added themes, yaml and web security props

* added themes, yaml and web security props

* added stormpath

* added audit, security config

* added wsfed

* added ntlm authN

* added google apps config

* more saml config

* REST services config

* added oidc

* updated metrics

* added views and few MFA settings

* updated saml idp

* removed all @value annotations

* fixed checkstyle rules

* added wrapper

* moving onto cas properties; the organized version

* moving onto cas properties; the organized version

* organizing props

* organizing props

* organizing props

* organizing props

* organizing props

* organizing props

* organizing props

* organizing props

* organizing props

* organizing props

* cleaning up properties and regenating values

* updated docs

* working on properties

* working on properties

* working on properties

* working on properties

* working on properties

* working on properties

* updating docs

* updated docs

* updated docs

* updated properties

* updated properties

* updated properties

* switched to autowire from resource - left a few exceptions

* switched to autowire from resource - left a few exceptions

* updated build. linting.

* switched to autowire from resource - left a few exceptions

* switched to autowire from resource - left a few exceptions

* switched to autowire from resource - left a few exceptions

* fixing configuration classes to move away from context scanning

* fixing configuration classes to move away from context scanning

* fixing configuration classes to move away from context scanning

* fixing configuration classes to move away from context scanning

* fixing configuration classes to move away from context scanning

* fixing configuration classes to move away from context scanning

* working on inheritance hierarchy of props

* working on inheritance hierarchy of props

* working on inheritance hierarchy of props

* working on inheritance hierarchy of props

* working on inheritance hierarchy of props

* fixed docs

* fixed ticket registry API to move away from embedded autowiring

* fixed ticket registry API to move away from embedded autowiring

* moving from resource to autowired

* moving from resource to autowired

* fix javadoc issue; remove dup classes

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* fixed log directory for test cases

* fixed log directory for test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* renaned property

* updated props

* updated props

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* fixed audit test cases with jpa

* updated docs

* updated docs

* working on conditional svc registry

* updated docs

* updated docs

* updated ticket registry configuration

* updated principal factory interface

* updated docs

* configured principal election strategy

* configured principal election strategy

* configured encryption and theme resolution

* configured attribute repository auto config

* configured attribute repository auto config

* configured attribute repository auto config

* configured attribute repository auto config

* configured attribute repository auto config

* configured conditional audit managers

* moved ticket registry enc to be auto configured

* configured authN throttling

* configured authN throttling

* configured attributes

* configured authN policy factory

* configured authN policy factory

* updated default credentials

* configured monitors

* updated properties for monitors

* updated properties for monitors

* updated TGT exp policy

* updated TGT exp policy

* updated TGT exp policy

* fixed import issues

* organized properties into sections; needs more clean up

* fixed JPA service registry issue with PubKey Blob Cast

* fixed import issues

* fixed import issues

* added remember me

* removed metadata populators

* Fixed checkstyle issues

* working on test cases

* working on test cases

* working on test cases

* working on test cases

* fixed styling issues

* fixed styling issues

* fixed styling issues

* working on authN handlers

* moved authn configuration around

* moved authn configuration around

* removed context wrappers

* removed custom scope configuration from tests

* cleaning up tests

* cleaning up tests

* cleaning up tests

* cleaning up tests

* cleaning up tests

* fixed dependencies with aspectj compilation issue

* fixed dependencies with aspectj compilation issue

* updated dep

* updated dep

* updated dep

* working on test cases and parallel build

* fixed cs issues, added adfs changes

* added LDAP authn handler config

* working tests

* working tests

* updated props and warnings.

added ascii art.
disable default authn mode.

* updated props and warnings.

added ascii art.
disable default authn mode.

* added jdbc authn handlers; updated docs

* updated ldap ops to handle referrals

* update LDAP util ops to handle referrals

* update LDAP util ops to handle referrals

* adding other authn methods

* adding other authn methods

* adding other authn methods

* adding other authn methods

* adding other authn methods

* adding other authn methods

* adding other authn methods

* adding other authn methods

* fixed mgmt app dependencies

* fixed javadocs

* fixed javadocs

* updated docs

* updated docs

* fixed tests

* Merge branch 'master' into cond-beans-config

# Conflicts:
#	cas-server-support-reports/src/main/java/org/apereo/cas/web/report/StatisticsController.java
#	cas-server-webapp/src/main/resources/application.properties

* fixed JPA issues

* fixed JPA issues

* fixed JPA issues

* Updated config

* added authn context class as authn method

* Fixed issue with mapping authn context method
From saml to cas

* Moved web flow config to each module. Fixed duo issues

* Changed NAS identifier to be String instead of numeric
"
c9bec3c693da29669561fad1b2fa2de5363ff6f1,apereo/cas,"Use contrusctor based injection (#2186)

* Remove setters from DefaultTicketRegistryCleaner.java and DefaultTicketRegistrySupport.java

* Making parameters final

* Remove setters from Cas20ProxyHandler.java

* Remove setters from DefaultProxyTicketFactory.java

* Remove setters from DefaultProxyGrantingTicketFactory.java

* Remove setters from DefaultServiceTicketFactory.java

* Remove unused import

* Remove setters from DefaultTicketFactory.java and move all the instantiation logic into the constructor

* Inject values instead of CasProperties
"
f60d9de571f93ee4a5df2988d07240ceefe7b9c4,apereo/cas,"clean up SAML config for ADFS
"
7ae55656432faa6f419e58b61a519d1b79b6e959,apereo/cas,"CAS-1271: Cleaning up the core module based on checkstyle rules.
"
69d181d6da4afa4a320a5ebc13c5a1968436d08e,apereo/cas,"Repackaged authn components
"
fc6f30f972cd25c542fb3da323d7361ea8d13ae8,apereo/cas,"Clean up event packaging. Added events for authn failures and policy failures
"
601a5c67da0b870c93a3ab3ed8bf9fffe6571a3e,apereo/cas,"upgrade dependencies; clean up config
"
cc03bb892c4ecf2344234d4f7b1b49133d782f41,erlang/otp,"Merge branch 'rickard/timer-optimization/OTP-12650'

* rickard/timer-optimization/OTP-12650:
  Optimized timer implementation
  Reusable red-black tree implementation

Conflicts:
	erts/emulator/beam/erl_bif_timer.c
"
966098ceb9dd9d18e9bcd37cd06b96045903e320,erlang/otp,"erts: Move new hipe ref and sdesc lists to loader state
"
e47490f83e561a45cee9e8f72f1e1f91f19c60b7,erlang/otp,"Set module_info md5 for native modules properly

Use the md5 of the native code chunk instead of the Beam code md5.
"
099c60de4033d7b397d4b3fb47f183b52fcba855,erlang/otp,"erts: Improve hipe load/upgrade/purge machinery

A step toward better integration of hipe load and purge

Highlights:

* code_server no longer needs to call hipe_unified_loader:post_beam_load/1
  Instead new internal function hipe_redirect_to_module()
  is called by loading BIFs to patch native call sites if needed.

* hipe_purge_module() is called by erts_internal:purge_module/2
  to purge any native code.

* struct hipe_mfa_info redesigned and only used for exported
  functions that are called from or implemented by native code.
  A list of native call sites (struct hipe_ref) are kept for each hipe_mfa_info.

* struct hipe_sdesc used by hipe_find_mfa_from_ra()
  to build native stack traces.
"
eae8965a58b049cef1562b4462b05d9cab5286c3,erlang/otp,"Merge branch 'sverk/fix-list-length-int/OTP-13288'

* sverk/fix-list-length-int/OTP-13288:
  erts: Fix error cases in enif_get_list_length
  erts: Use Sint instead of int for list lengths
"
19a2f17f67a221640534d6cc4c85cead8d3f5ed1,erlang/otp,"Merge branch 'maint'

* maint:
  Updated OTP version
  Prepare release
  Optimize operator '--' and yield on large inputs
"
933304e3dcce052eff6d36c37b708949e53597c3,erlang/otp,"OTP-8474 NIF improvements after R13B04

New NIF API function enif_make_new_binary
"
f4e3cd1c970cfc5ad54f2ed64832d05749c305d4,erlang/otp,"Merge branch 'rickard/time_api/OTP-11997'

* rickard/time_api/OTP-11997: (22 commits)
  Update primary bootstrap
  inets: Suppress deprecated warning on erlang:now/0
  inets: Cleanup of multiple copies of functions Add inets_lib with common functions used by multiple modules
  inets: Update comments
  Suppress deprecated warning on erlang:now/0
  Use new time API and be back-compatible in inets Remove unused functions and removed redundant test
  asn1 test SUITE: Eliminate use of now/0
  Disable deprecated warning on erlang:now/0 in diameter_lib
  Use new time API and be back-compatible in ssh
  Replace all calls to now/0 in CT with new time API functions
  test_server: Replace usage of erlang:now() with usage of new API
  Replace usage of erlang:now() with usage of new API
  Replace usage of erlang:now() with usage of new API
  Replace usage of erlang:now() with usage of new API
  Replace usage of erlang:now() with usage of new API
  otp_SUITE: Warn for calls to erlang:now/0
  Replace usage of erlang:now() with usage of new API
  Multiple timer wheels
  Erlang based BIF timer implementation for scalability
  Implement ethread events with timeout
  ...

Conflicts:
	bootstrap/bin/start.boot
	bootstrap/bin/start_clean.boot
	bootstrap/lib/compiler/ebin/beam_asm.beam
	bootstrap/lib/compiler/ebin/compile.beam
	bootstrap/lib/kernel/ebin/auth.beam
	bootstrap/lib/kernel/ebin/dist_util.beam
	bootstrap/lib/kernel/ebin/global.beam
	bootstrap/lib/kernel/ebin/hipe_unified_loader.beam
	bootstrap/lib/kernel/ebin/inet_db.beam
	bootstrap/lib/kernel/ebin/inet_dns.beam
	bootstrap/lib/kernel/ebin/inet_res.beam
	bootstrap/lib/kernel/ebin/os.beam
	bootstrap/lib/kernel/ebin/pg2.beam
	bootstrap/lib/stdlib/ebin/dets.beam
	bootstrap/lib/stdlib/ebin/dets_utils.beam
	bootstrap/lib/stdlib/ebin/erl_tar.beam
	bootstrap/lib/stdlib/ebin/escript.beam
	bootstrap/lib/stdlib/ebin/file_sorter.beam
	bootstrap/lib/stdlib/ebin/otp_internal.beam
	bootstrap/lib/stdlib/ebin/qlc.beam
	bootstrap/lib/stdlib/ebin/random.beam
	bootstrap/lib/stdlib/ebin/supervisor.beam
	bootstrap/lib/stdlib/ebin/timer.beam
	erts/aclocal.m4
	erts/emulator/beam/bif.c
	erts/emulator/beam/erl_bif_info.c
	erts/emulator/beam/erl_db_hash.c
	erts/emulator/beam/erl_init.c
	erts/emulator/beam/erl_process.h
	erts/emulator/beam/erl_thr_progress.c
	erts/emulator/beam/utils.c
	erts/emulator/sys/unix/sys.c
	erts/preloaded/ebin/erlang.beam
	erts/preloaded/ebin/erts_internal.beam
	erts/preloaded/ebin/init.beam
	erts/preloaded/src/erts_internal.erl
	lib/common_test/test/ct_hooks_SUITE_data/cth/tests/empty_cth.erl
	lib/diameter/src/base/diameter_lib.erl
	lib/kernel/src/os.erl
	lib/ssh/test/ssh_basic_SUITE.erl
	system/doc/efficiency_guide/advanced.xml
"
fde238fb52133a6c7a2a3f2a2e16f1c1bef62394,erlang/otp,"Merge branch 'bjorn/erts/on_load/ERL-240/OTP-13893' into maint

* bjorn/erts/on_load/ERL-240/OTP-13893:
  erts: Add nif_SUITE:t_on_load
  erts: Improve nif_SUITE:upgrade test
  Don't leak old code when loading a modules with an on_load function
"
64a3651b3ece1a1e3195f20e37247f929d179f61,erlang/otp,"Remove old ssl implementation and deprecated function ssl:peercert/1
"
f995d04a0575cdd110a96741bc733eb95d063113,erlang/otp,"ssl: Improve TLS 1.3 state machine

- Use internal event to transition to the first state of the
  TLS 1.3 state machine.

- Add gen_handshake_1_3/4 and gen_info_1_3/4.

Change-Id: I17f12110356c7be4a8dddf9a616df7f181b0ef37
"
a4b82870313b04a51cc2d71f6d5a420b386cec68,erlang/otp,"Merge branch 'sverk/bif-args/OTP-9662'

* sverk/bif-args/OTP-9662:
  erts,hipe: Limited support for hipe cross compilation
  erts-hipe: Change THE_NON_VALUE for HiPE enabled debug emulator
  erts-hipe: Enable debug compiled hipe-VM with lock checker
  erts-hipe: Rename fail_bif_interface_0 to standard_bif_interface_0
  erts-hipe: Deliberate leak of native fun entries
  erts-hipe: Fix new trap conventions for x86, amd64 and ppc
  Store the trap address in p->i
  Store the trap arguments in the X register array
  erts-hipe: Make some primops use new BIF calling convention
  erts-hipe: Adapt generated BIF wrappers for new calling convention
  erts-hipe: Remove obscuring macros in generated assembler code
  erts-hipe: Make hipe enabled emulator compile with new BIF calls
  Simplify the instructions for calling BIFs
  Change the calling convention for BIFs
  Use the proper macros in all BIFs

Conflicts:
	erts/emulator/beam/bif.h
	erts/emulator/beam/erl_bif_info.c
"
861454268770e05bd72312c1a46560ed29a42500,erlang/otp,"Merge branch 'rr/wa-lcnt/OTP-10051' into maint

* rr/wa-lcnt/OTP-10051:
  lcnt: Let runq locks reflect actual call location
  lcnt: Enhancement fixups
  erts: Add lcnt port and suspend options
  Increase ethr event and lock counting constants to allow at least +A 1024.
"
8d70fd874ae4da853ac79f4349fbf4a985950656,erlang/otp,"Be less eager requesting wakeup for cleanup jobs
"
2ea950f70bb3c2bee32be7f98442df8d8d2f008a,erlang/otp,"Merge branch 'egil/erts/tracing-beam-lttng/OTP-10282'

* egil/erts/tracing-beam-lttng/OTP-10282:
  erts: Don't use ratio in carrier lttng tracepoints
  Add lttng testcases
  erts: Extend erlang:system_info/1 with lttng
  Refactor and fix dtrace define in erl_message
  erts: Add lttng tracepoints for async pool queue
  erts: Add lttng tracepoints for drivers
  erts: Add lttng tracepoints for scheduler events
  erts: Add lttng tracepoints for memory carriers
  erts: Update lttng-wrapper with mfa conversion
  erts: Teach lttng to configure and build system
"
12dfe961aeaf1a826d851361a24519e54d8ef119,erlang/otp,"Revise the public_key API

Cleaned up and documented the public_key API to
make it useful for general use.
"
687eae1e86817403249f03f534a256a28c5d5251,erlang/otp,"Merge branch 'maint'

* maint:
  erts: Add nif_SUITE:t_on_load
  erts: Improve nif_SUITE:upgrade test
  Don't leak old code when loading a modules with an on_load function

Conflicts:
	erts/preloaded/ebin/erts_code_purger.beam
	erts/preloaded/ebin/erts_internal.beam
	erts/preloaded/src/erts_code_purger.erl
"
e23140cbb43c111fe9010b7f6c3a404db1aa152b,frida/glib,"Build test subdir after . Remove gdirectorymonitor.[ch]

2008-01-07  Alexander Larsson  <alexl@redhat.com>

        * Makefile.am:
	Build test subdir after .
	Remove gdirectorymonitor.[ch]
	
        * gdirectorymonitor.[ch]:
        * gfilemonitor.c:
        * gfile.[ch]:
        * gio.h:
	Remove GDirectoryMonitor and make
	GFileMonitor the baseclass for both file and
	directory monitors. Lift the more generic
	rate limiting code from GDirectoryMonitor
	into GFileMonitor.
	
        * fam/fam-helper.c:
        * fam/gfamdirectorymonitor.[ch]:
        * inotify/ginotifydirectorymonitor.[ch]:
        * inotify/inotify-helper.c:
        * glocaldirectorymonitor.[ch]:
        * glocalfile.c:
        * gvolumemonitor.c:
	Update for the removed GDirectoryMonitor.
	
        * gmemoryoutputstream.c:
	Remove ununsed variable


svn path=/trunk/; revision=6262
"
858a32879291ebb5612c7500fc195c30fb6e8496,frida/glib,"Fix futex(2) detection and use

Commit 22e7fc34c44c5ef95abf4fed429f2345410cc82c introduced a regression:
futexes were always disabled and the emulated codepath was always being
used.  That commit was in response to an originally buggy
implementationt hat wrote junk into config.h (but happened to be working
properly).

Fix up the mess and while we're at it, close bug #631231 by including
syscall.h from the correct location and using __NR_futex instead of
SYS_futex.

Closes #631231.
"
14e6377a603abd03a3c9d7130da1c1113cec4d7b,frida/glib,"Deprecate g_thread_create_full()

Replace it with g_thread_create_with_stack_size() and a real function
implementation of g_thread_create().

Modify a testcase that was calling g_thread_create_full()
inappropriately (it was using the default values anyway).
"
8621de12c043a7a7d959dbca9b70a5fa02c34781,frida/vala,"Don't derive from GObject in libvala where not necessary to improve

2008-08-14  J√ºrg Billeter  <j@bitron.ch>

	Don't derive from GObject in libvala where not necessary to improve
	compilation performance

svn path=/trunk/; revision=1757
"
95883d2d9d67577282dfc53878656b50dfe38d7c,frida/vala,"Bug 571263 ‚Äì make yielding functions dispatch results to mainloop

2009-02-11  Ryan Lortie  <desrt@desrt.ca>

        Bug 571263 ‚Äì make yielding functions dispatch results to mainloop

        * gobject/valaccodemethodmodule.vala:
        * valagasyncmodule.vala:

        Create simple async result from _async entry function and use it when
        doing return; throw; or at the end of the function.  Fix return 
        statements for the async case.  Dispatch via idle handler in the case
        that we are returning without having yielded.


svn path=/trunk/; revision=2430
"
8b57dfaf55208cad985cb6ff023aed0c3841d876,frida/vala,"Use emit instead of accept and accept_children in code generator
"
86ab9c46ee916cb8c179784986a7d68aa90c4412,hluk/CopyQ,"Handle renamed tab with other plugin if necessary
"
4f6043d63ceca9c8b86a6a05c389a7e37c87ea21,meganz/sdk,"Refactoring
"
6bc233c2ba3f6f6a3de352192641f90685c0b9e0,meganz/sdk,"Merge remote-tracking branch 'origin/develop' into feature/improve-sync-performance
"
a8e3af3e3edaf277c5a9f03dd3c75e5cea83e7ff,meganz/sdk,"Improved storage space reporting in megacli
"
5e7856bcfa8b2b0a40a4b3f9adffc0f81de57d59,nais/naisd,"Merge pull request #87 from nais/fasit_environment_rewrite

Rewrite for environment naming logic with Fasit"
753b0717be387b65edf43f1424a07724eeddb29d,ncw/rclone,"Refactor the List and ListDir interface

Gives more accurate error propagation, control of depth of recursion
and short circuit recursion where possible.

Most of the the heavy lifting is done in the ""fs"" package, making file
system implementations a bit simpler.

This commit contains some code originally by Klaus Post.

Fixes #316
"
61e23ffac006fb478598f24bc5a5c263298112de,oVirt/vdsm,"Make storage/sd.py PEP8 clean

Change-Id: I6aeef2f68759a32c2a2840fdda7991aa70f1e533
Signed-off-by: Royce Lv<9c258fe6f619f142e18f029bd1f03ffa2e8ee050@linux.vnet.ibm.com>
Reviewed-on: http://gerrit.ovirt.org/5415
Tested-by: Zhou Zheng Sheng <65b0ce20bd56bed337a28a83658db2bbcb0adacc@linux.vnet.ibm.com>
Reviewed-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
"
75fb9f443b711c58cc2ce86472761a81dedbf82e,oVirt/vdsm,"utils: janitorial: refactor utils.readMemInfo

minor cleanup in readMemInfo:
- split the actual parsing logic in a separate function;
- modernized readMemInfo, switching from file() to with/open().
- added a couple of unit tests to be sure everything still works.

PatchSet V2:
address the comments about V1:
- parseMemInfo is now _parseMemInfo, as it is not expected to be
  used outside the utils.py (and its tests)
- use os.path.dirname() to find the test data

PatchSet V3:
- registered mem_info.out as test data.

PatchSet V4:
- register mem_info.out in vdsm.spec.in and in the debian install file.

PatchSet V5:
- drop stray blank line.

Change-Id: Ife98134e4512613fb9812f3162c7cd6a4af8fc89
Signed-off-by: Francesco Romani <c7100b580e6017ef67482ace46578cdd2d2e0dfe@redhat.com>
Reviewed-on: http://gerrit.ovirt.org/22041
Reviewed-by: Antoni Segura Puimedon <e029ade6acd27fdb07af28cad0d90a72e996e7c8@redhat.com>
Reviewed-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
"
1673f994e86e19a884602650bf485bc26c9c0e6f,oVirt/vdsm,"virt: Rename vmChannels.py to vmchannels.py

Change-Id: Ic2cc66040035baa68ab5d29c483027cab97398c1
Signed-off-by: Vinzenz Feenstra <600e8a10eeff4f08c65e2cf493cd851025e86fd2@redhat.com>
Reviewed-on: http://gerrit.ovirt.org/26192
Reviewed-by: Antoni Segura Puimedon <e029ade6acd27fdb07af28cad0d90a72e996e7c8@redhat.com>
Reviewed-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
Tested-by: Francesco Romani <c7100b580e6017ef67482ace46578cdd2d2e0dfe@redhat.com>
"
df0def3d352f7ca7113ba62193102f5beca3d2e9,oVirt/vdsm,"numa: move numa related functionality to sitelib

The functionality can be nicely isolated and moved to sitelib, where
additional cleanup and optimization work can take place. This is part
of bigger series that attempts to move all numa related code to sitelib
where it makes sense.

Change-Id: I2dffad8663ca50a67f117b1c74d4459e667d9f43
Signed-off-by: Martin Polednik <864cc392241c077e6ac82cfafc3cb7cecb8321ba@redhat.com>
Reviewed-on: https://gerrit.ovirt.org/53286
Reviewed-by: Francesco Romani <c7100b580e6017ef67482ace46578cdd2d2e0dfe@redhat.com>
Continuous-Integration: Jenkins CI
"
7ac9d3069a9b0590fe7d993eb5bc016ddfe6021a,AnSyn/ansyn,"refactor(): change [] notation to property where possible, for typings
"
904c929d9f076f885f5bc1753210c43e694c66db,AnSyn/ansyn,"refactor(case-reducer): fix all unit test (SelectCaseByIdAction => SelectCaseAction)
"
ad1f804494be01356c863d6ebd57963319bede37,AnSyn/ansyn,"refactor(maps): small change to constructor logic
"
58646e555f57145ece42762702c4defd2209ee86,Bytom/bytom,"Optimize p2p transfer business layer logic (#501)

* Optimize p2p business layer logic

* Merge dev branch code

* Fix new mined block can't broadcast error

* Remove unused test file

* Del unused parameter

* Add RWMutex

* Add sent message filter

* Fix request block quite bug

* Del unused function BroadcastToPeers

* Fix new peer channel bug

* Del chainHeight from blockKeeper

* Fix sync check logic bug

* Add business protocol handshake

* Del unused code

* Optimize code format

* Del unused function

* Refactor request block by hash/height function

* Refactor tx notify handle

* Refactor BlockRequestWorker to sequential process

* Fix net bestheight error

* Refactor p2p net sync code

* Refactor p2p net sync code

* Refactor BlockRequestWorker of blockkeeper

* ValidateTx return orphan flag

* For p2p transfer test

* For p2p transfer test

* Check exist block whether orphan

* Enable peer exchange function default

* Add txpool sync when new peer connected

* Fix golint check error

* Change mine difficulty

* Fix requst genesis block bug

* Fix address compare function

* Fix blockrequest bug

* Revert ""For p2p transfer test""

This reverts commit e6a36d86d5077f6c520dbfbb6eee2ab4335012e5.

* Fix request block bug

* For test

* Fix code review problem

* Optimize log printing

* Fix ci check error
"
6e130176e5ad7826ea92f805960f03ad877a4dc1,Bytom/bytom,"set password and show tx output address (#591)

* simplify sign-submit-transaction parameters

* add address to list-transactions output

* add address to transaction inputs

* update dashboard

* correct address for tx inputs and outputs

* remove useless code to get address from db
"
2eadf2850ff44031c6b0729f968c103243ee92a6,Bytom/bytom,"Merge pull request #970 from Bytom/p2p_test

Optimize p2p code"
4e6d80b63251b05b05e9bd4761d95b9bdb64c2c3,FoalTS/foal,"Rename ModelService to IModelService.
"
6c77a1fdfc5eaccc02f7922bbfe1edb99b54157e,ILSCeV/Lara,"Refactoring of Creation-Update

"
f6c0c97003dac8f48854e599b48123356f14843e,Neamar/KISS,"Move ugly static variables to Permission class to keep Application clean
"
df780c05c1b9a9f28b37edf09744cf8b98558099,apple/swift,"IRGen: Move field type vector slot to appear before the address point
"
98ed31fb995a0844e9a3551f5e15a22d7825ed6a,apple/swift,"Make -import-underlying-module automatically export that module.

That's how everything behaved anyway. Might as well make it explicit and
stop special-casing it.

I've left in compatibility for modules built with older compilers so that
people using the OS toolchains aren't immediately unable to debug their apps.
As soon as we change the module format in a more significant way, I can take
this out.

Groundwork for rdar://problem/21254367; see next commit.

Swift SVN r29437
"
da7bb5ba36f71c5e9b2c43a19d17790cbafe8454,apple/swift,"Factor type substitution logic into Type::subst().

The type substitution still depends fairly heavily on the type
checker, which is accessed via the LazyResolver abstract
interface. That interface should get simpler, and become unnecessary
except to deal with lazy type checking, over time. At that point, it
will become optional, and Type::subst() will be usable without a type
checker around.


Swift SVN r8099
"
9fd3f3bf23515a9e6af62710628829e2c35ef08c,apple/swift,"Reimplement checking for incorrect partial applications in MiscDiagnostics (instead of
CSApply).  The code is somewhat simpler there, more correct (fixing the FIXME in the 
testcase) and doesn't run afoul of CSDiags trying to type check partial AST 
subexpressions.


Swift SVN r30425
"
09f0587da8ea1d2a9f4368bbdef7c2660e74fc11,apple/swift,"Merge pull request #11415 from davezarzycki/simplify_performMemberLookup_take2

Simplify performMemberLookup()"
18078c104e5b18ba17f3570f26f06991233ed5ba,apple/swift,"Merge pull request #10476 from huonw/cleanups

Small clean-ups"
4501e08ceee8f050d49b151a4d4528ee391f4e03,apple/swift,"Merge pull request #14373 from troughton/twowordpair-removal

[runtime] Remove TwoWordPair and use the Swift calling convention instead."
6670bb76ecc71a35ac5fa8f54cb81de6f555072f,apple/swift,"Rewrite the CMake build system

Swift SVN r24124
"
821f63fe98581f57dfcf68916eee42654e3509b4,apple/swift,"Make assignments and assignment failure diagnoses directly in the CS.
More specific diagnoses for assigning to read-only keypaths.
'computeAssignDestType' is dead code now.
ConstraintFix shouldRecordFix()
"
e8686c95609883c3c42e14203adb6c40bff70597,apple/swift,"remove Cleanups from IGF, simplify Initialization a bit. 


Swift SVN r4841
"
55a3f5398cca84d4039b4087e227ac86ee1dc978,apple/swift,"[Clang importer] Import Swift 2 ""stubs"" to improve errors in ""Swift 2"" code.

When attempting to compile Swift 2 code (or any Swift code using the
Swift 2 names) in Swift 3, the compiler diagnostics are often entirely
useless because the names have changed radically enough that one
generally gets ""no member named 'foo'"" errors rather than a helpful
""'foo' was renamed to 'bar'"" error. This makes for a very poor user
experience when (e.g.) trying to move Swift 2 code forward to Swift 3.

To improve the experience, when the Swift 2 and Swift 3 names of an
API differ, the Clang importer will produce a ""stub"" declaration that
matches the Swift 2 API. That stub will be marked with a synthesized
attribute

  @available(unavailable, renamed: ""the-swift-3-name"")

that enables better diagnostics (e.g., ""'foo' is unavailable: renamed
to 'bar') along with Fix-Its (courtesy of @jrose-apple's recent work)
that fix the Swift 2 code to compile in Swift 3.

This change addresses much of rdar://problem/25309323 (concerning QoI
of Swift 2 code compiled with a Swift 3 compiler), but some cleanup
remains.
"
fc1c256ef51def38cccb8242928bbd81824035d1,apple/swift,"Allow references to deduced associated types.

When checking a type's conformance against a protocol, we can deduce
the values of associated types. Make these associated types visible to
qualified name lookup so that (for example) VectorEnumeratorType does
not need to define the Element type. It is deduced from the signautre
of next(), and made available as, e.g.,
VectorEnumeratorType<Int>.Element through the Enumerator protocol
conformance. Fixes <rdar://problem/11510701>, but with some lingering
dependencies on lazy type resolution (<rdar://problem/12202655>).

Note that the infrastructure here is meant to be generalized to
support default implementations in protocols, but there are several
pieces still not in place.



Swift SVN r6073
"
b319a3aa322dd22b4a8a19b77edf71be0acd38d8,apple/swift,"AST: Clean up some more duplication using the new GenericContext
"
b6d5a1f1a535837389f6ba2d780d6359844cc558,apple/swift,"[code-complete] Do not insert rparen after a call pattern completion

When completing
  Foo(<here>
We will now provide
  bar: <#value#>
instead of
  bar: <#value#>)

Inserting the rparen caused some problems in practice:
* the old behaviour optimized for typing Foo(<complete> instead of
  Foo(<complete>), which can conflict with user behaviours or ...
* in editors with automatic brace-matching, we often conflicted with the
  editor, leading to extraneous closing parens

And in general, it is much more predictable for tooling to either insert
matching ( and ) or to not insert either.  While this change may not be
ideal For users of editors that do not do automatic brace-matching, I
believe it is still better overall to have to type a missing paren than
to have to delete an extraneous one.

rdar://31113161
"
1afc987739e4053687fc9dcb24529b0649582625,apple/swift,"Refactor the SILArgument API on SILBasicBlock so we can insert bb arguments anywhere in the argument list. Also clean up the API names so that they all match.

Swift SVN r23543
"
6272941c5cba9581a5ee93d92a6ee66e28c1bf13,apple/swift,"Rename ""build configurations"" to ""conditional compilation blocks"".

...because ""build configuration"" is already the name of an Xcode feature.

- '#if' et al are ""conditional compilation directives"".
- The condition is a ""conditional compilation expression"", or just
  ""condition"" if it's obvious.
- The predicates are ""platform conditions"" (including 'swift(>=...)')
- The options set with -D are ""custom conditional compilation flags"".
  (Thanks, Kevin!)

I left ""IfConfigDecl"" as is, as well as SourceKit's various ""BuildConfig""
settings because some of them are part of the SourceKit request format.
We can change these in follow-up commits, or not.

rdar://problem/19812930
"
3871cda2054c034e065b887008c42e6d299daf94,apple/swift,"Push SILBoxType::getFieldType into SIL and make it take a SILModule.

Applying nontrivial generic arguments to a nontrivial SIL layout requires lowered SILType substitution, which requires a SILModule. NFC yet, just an API change.
"
dea38a77103890dfa841acad7fbdf317d2561c0b,apple/swift,"IUO: Rename some importer functions.

Minor update to improve naming.
"
8def4d87596dc84427015679758edf076c2e7d52,apple/swift,"[Type checker] Factor out ""isBindable"" check for matchTypes. NFC

Thanks to Pavel (@xedin) for the feedback.
"
0825841ef6f9bd0c697f48dc1426f36d81383472,apple/swift,"Emit static dispatch for super methods of same-module implementations

When the nearest implementation of a superclass's implementation of a
method is in the same module, eagerly emit a direct call to the method
instead of relying on the devirtualizer for these, since this is a very
lightweight check and can make -Onone builds faster.
"
bb55c6d8a63a111530ef9a6daaa9cad72955bbb3,apple/swift,"Clean up the constructors of DebugTypeInfo

and ensure that the DeclContext of the SILFunction is used when
mangling substituted archetypes found in inlined variable declarations
that have been reparented into the caller

<rdar://problem/28859432>
"
01823ca52138a9844e84ee7e8efba13970e1e25d,apple/swift,"Merge pull request #19295 from mikeash/rename-conflicting-classes-and-methods

[Runtime][Stdlib][Overlays] Rename various Objective-C classes and methods to avoid conflicts."
dc4431ebff5f9ea6f3a5d3f02f1c3b9a3f04bf4e,apple/swift,"Split addressors into unsafe, owning, and pinning variants.

Change all the existing addressors to the unsafe variant.

Update the addressor mangling to include the variant.

The addressor and mutable-addressor may be any of the
variants, independent of the choice for the other.

SILGen and code synthesis for the new variants is still
untested.

Swift SVN r24387
"
7059871abfbe39e194d3ed6b16f723fad140c708,apple/swift,"Convert some 'var' bindings to 'let' when they are not mutated, some
var/let bindings to _ when they are never used, and use some values that
are only written.  This is a testsuite cleanup, NFC. More to come.


Swift SVN r28406
"
bba7112506c4bbfe4168cf38db9fa0ded4f759f2,apple/swift,"[Diagnostics] NFC: Refactor assignment diagnostics into `AssignmentFailure`

Merge logic from `diagnoseAssignmentFailure` and `diagnoseSubElementFailure`
into new `AssignmentFailure`, together with their support functions, which
decouples `CSDiagnostics` from `CSDiag` and scrubs latter from some functionality.
"
5ab1a852f7a56488a1e989d70d1139f60e218c7e,apple/swift,"Merge pull request #16875 from slavapestov/sub-map-cleanup

SubstitutionMap cleanups"
b6823b930b19b6db71f6e0cd37842e5bff98118a,apple/swift,"SIL: Change SILType::subst to be SubstitutionMap-based.

This simplifies the SILType substitution APIs and brings them in line with Doug and Slava's refactorings to improve AST-level type substitution. NFC intended.
"
59f18f9fc0938c1754900db58c071942198be879,apple/swift,"Renamed irgen::Options and irgen::OutputKind to IRGenOptions and IRGenOutputKind, and move both out of the irgen namespace now that they're in swiftAST.

Swift SVN r11405
"
f1f67db652c4aafde32148cf5e36dfbf6a7e0e05,apple/swift,"Big cleanup for how we handle computing types for functions and semantic
analysis for patterns.

Major changes:
1. We no longer try to compute the types of functions in the parser.
2. The type of a function always matches the type of the argument patterns.
3. Every FuncDecl now has a corresponding FuncExpr; that FuncExpr might not
   have a body, though.
4. We now use a new class ""ExprHandle"" so that both a pattern and a type
   can hold a reference to the same expression.

Hopefully this will be a more reasonable foundation for further changes to
how we compute the types of FuncDecls in generics and for the implementation
of type location information.



Swift SVN r2370
"
67710606e66677a86cef872a5c8e070d9f71f35e,apple/swift,"[Parse] Move tok::amp_prefix closer to parameter list logic

The amp_prefix token is currently tolerated in any unary expression
context and then diagnosed later by Sema. This patch changes parsing to
only accept tok::amp_prefix in its allowed position: parameter lists.

This also fixes two ""compiler crasher"" tests.
"
6d84785e52b3e7879c69fa25463cf7430e5c421e,apple/swift,"Substantially rework how weak pointers are represented in the AST and
at the SIL level.  Now, the referent type of a WeakStorageType is always
an optional type, instead of always being the underlying reference.  This
allows us to represent both optional types.  Before, both of these had the
same AST representation of WeakStorageType(T):

  weak var x : T?
  weak var x : T!

which doesn't work.  Now we represent the optional type explicitly in the
AST and at SIL level.  This also significantly simplifies a bunch of code
that was ripping off the optional type and resynthesizing it in other places,
and makes SILGen of weak pointers much more straight-forward by eliminating
the need for emitRefToOptional and emitOptionalToRef entirely (see the diffs
in test/SILGen/weak).

Weak pointers still have problems, but this is a big step forward.


Swift SVN r18312
"
a5ca6ccd61d072228e384fe9eded4daa0e556e19,apple/swift,"Restructure KeyPathExpr to allow more kinds of components.

Expand the representation in anticipation of more kinds of components. NFC intended yet.
"
06992eec7abed18bad2c2b20c727400207b00f56,apple/swift,"Introduce helper templates to make it easier to define
type infos that can be efficiently scalarized.

Swift SVN r1904
"
789646a15be86391696a11b2f0544b6c2579e44d,apple/swift,"Demangling: Make demangled names more readable and further reduce the size of the simplified demangled names

The goal here is to make the short demangling as short and readable as possible, also at the cost of omitting some information.
The assumption is that whenever the short demangling is displayed, there is a way for the user to also get the full demangled name if needed.

*) omit <where ...> because it does not give useful information anyway

Deserializer.deserialize<A where ...> () throws -> [A]
--> Deserializer.deserialize<A> () throws -> [A]

*) for multiple specialized functions only emit a single ‚Äúspecialized‚Äù

specialized specialized Constructible.create(A.Element) -> Constructible<A>
--> specialized Constructible.create(A.Element) -> Constructible<A>

*) Don‚Äôt print function argument types:

foo(Int, Double, named: Int)
--> foo(_:_:named:)

This is a trade-off, because it can lead to ambiguity if there are overloads with different types.

*) make contexts of closures, local functions, etc. more readable by using ‚Äú<a> in <b>‚Äù syntax
This is also done for the full and not only for the simplified demangling.

Renderer.(renderInlines([Inline]) -> String).(closure #1)
--> closure #1 in Renderer.renderInlines

*) change spacing, so that it matches our coding style:

foo <A> (x : A)
--> foo<A>(x: A)
"
17b4d05e4ea527cccc530e54d22dd31961e75363,apple/swift,"[semantic-sil] Rename EndBorrowInst::get{Src,Dest} => get{BorrowedValue,OriginalValue}.

This is a clearer name that makes it easier to remember what each part of the
end borrow is meant to accomplish.
"
22ac70015430ec38c548aa2c8bd5accbaf425d2d,apple/swift,"Make DWARF debug flag behavior match Clang.

Only write the compilation flags to debug info for Mach-O targets, and only
if the RC_DEBUG_OPTIONS environment variable is set.
"
46b58ac699079e328fad8265b0fe89cbb6c954b6,apple/swift,"Re-apply ""Reduce memory footprint of the Swift compiler""

Use malloc/free for allocating/freeing SIL instructions instead of using the BumpPtrAllocator. This allows for memory reuse and significantly reduces the memory footprint of the compiler.

For example, a peak memory usage during a compilation of the standard library and StdlibUnitTest is reduced by 25%-30%. The performance of the compiler seems to be not affected by this change, i.e. no slowdown is measured.

The use-after-free issues reported by build bots are fixed now.

rdar://23303031
"
82509cbd7451e72fb99d22556ad259ceb335cb1f,apple/swift,"Merge pull request #1731 from shawnce/SR-946

SR-946 - Unify mutexes in the Swift runtime"
f6781deaf8d86be3611da6f4f8cc0a41c4f60467,apple/swift,"copy_addr outline: cleanups based on review
"
1ad24fdfc219df98cd44b343e5fcc1f743edbf20,apple/swift,"rework how 'as' casts are diagnosed, removing a special case from CSApply and 
allowing these failures to hook into other diagnostic goodies (e.g. the
""did you mean to use '!' or '?'?"" cases showing in the testsuite).  That said,
by itself this doesn't have a huge impact, but avoids regressions with other
pending changes.


Swift SVN r31289
"
786d87b9bbcc309617f787b68e27b94f21787f8b,apple/swift,"DI: Operate on substituted field types

When adding a designated initializer to a nominal type in another
module, we would call getType() on deserialized VarDecls, which
is not allowed.

Instead, it is more correct to use SILTypes throughout and call
SILType::getFieldType() to get a substituted field type.

Fixes <https://bugs.swift.org/browse/SR-3545>.
"
c5e3dc4e2031f5456793d10dd680598022b2b253,apple/swift,"Rename ArrayDowncastExpr to CollectionDowncastExpr. NFC


Swift SVN r18898
"
0d9745f6ebb1137016f8658350955f05a17bcbc3,apple/swift,"libSyntax: teach parser to parse dictionary and array literals. (#12821)

This commit also adds ArrayExpr and DictionaryExpr to the libSyntax nodes
family. Also, it refactors the original parser code for these two
expressions to better fit to the design of SyntaxParsingContext.

This commit has also fixed two crashers."
8917eb0e5ac50e424800bac8a57266a1cd945ab1,apple/swift,"Revert ""[Runtime][StdLib] Migrate mirrors to use CustomReflectable API, rewrite dump()""

This reverts commit 9798dfd4aa688486a9d4e2243fd510d34c2bf4c8 because it
broke the stdlib build.
"
979e4a8e34cce3574ef46259e053e482b5a49641,apple/swift,"stdlib: Rename {Float,Double.CGFloat}.NaN to 'nan'

This follows the API guidelines and is consistent with the printed form.
'quietNaN' does not change, though.
"
dd68b9fc594ed6d045836a3476d2e22b1cedc1f1,apple/swift,"Start serializing the ""inherited"" list of extension declarations.

This improves the fidelity of the AST printed from a loaded module, as
well as consistency in the AST. Also teach the Clang importer to add
""inherited"" clauses, providing better fidelity for the mapping from
Objective-C to Swift.

With trivial update to SDKAnalyzer test.

Swift SVN r31344
"
ba444b7250379296dae887667845ce1936349638,apple/swift,"Remove unused header file.

Swift SVN r25267
"
ec1a21804f92c3f5cac22b1e653d3a6ae556869e,apple/swift,"Merge pull request #3252 from slavapestov/cleanup-map-type-in-and-out-of-context

Cleanup mapType{Into,OutOf}Context()"
90fcbfe9a6359d21c6e5ce3401810337bab6638c,apple/swift,"Rename @transparent to @_transparent for now.

This feature has not been fully designed, let alone properly implemented.
For more information, see docs/TransparentAttr.rst.
"
9747214e92d6a99cc28d47fe9b9638aae553e854,apple/swift,"[silgen] Refactor WritebackScope functionality into a new FormalEvaluationScope.

As per John, WritebackScope was always an unfortunate name. Generally these
scopes are meant for formal evaluations of inout parameters. The cases that I am
interested in generalizing them to be used for are borrows of the base of a
class that will then be used as an lvalue.

This also eliminates the out of line vector of lvalue writebacks.

rdar://29791263
"
dfd40e4443e550b9da63892dc6d300973e145b95,apple/swift,"[cast-optimizer] Move the cast optimizer into its own .cpp file.

Local.cpp was ~3k lines of which 1.5k (i.e. 1/2) was the cast optimizer. This
commit extracts the cast optimizer into its own .cpp and .h file. It is large
enough to stand on its own and allows for Local.cpp to return to being a small
group of helper functions.

I am making some changes in this area due to the change in certain function
conventions caused by the +0-normal-arg work. I am just trying to leave the area
a little cleaner than before.
"
64943836ba56de00c0e71516ea6b53e686ca0f71,apple/swift,"SILGen: Support for trivial @noescape function types

- Emit a withoutActuallyEscapingClosure partial apply
This is to convert an @noescape closure to an escaping closure.
This needs to be done in preparation of @noescape closure contexts
becoming trivial.

- Insert escaping to noescape conversions

- Fix SILGen for @noescape

- Postpone closure cleanups to outside the argument scope

- Apply postponement recursively for closures passed to subscripts

- Only skip applying escapeness conversions for Swift thick functions

- Fix parameter convention for noescape closures in thunks

Part of:
SR-5441
rdar://36116691
"
a0e3258ba65bd665a74a0cd87f2c6eb41732f912,apple/swift,"[ABI] Collapse generic witness table into protocol conformance record.

Collapse the generic witness table, which was used only as a uniquing
data structure during witness table instantiation, into the protocol
conformance record. This colocates all of the constant protocol conformance
metadata and makes it possible for us to recover the generic witness table
from the conformance descriptor (including looking at the pattern itself).

Rename swift_getGenericWitnessTable() to swift_instantiateWitnessTable()
to make it clearer what its purpose is, and take the conformance descriptor
directly."
e2ac9f65acc0afe1e0c9146d1af2042a4cf282ac,apple/swift,"Add FixKind for 'as' -> 'as!' conversion

Penalize solutions that involve 'as' -> 'as!' changes by recording a Fix
when simplifying the corresponding checked-cast constraint.

<rdar://problem/19724719> Type checker thinks ""(optionalNSString ?? nonoptionalNSString) as String"" is a forced cast

Swift SVN r25061
"
5662c4b5dc2d15ebf59837f989d0948a57bfff8a,apple/swift,"Remove redundant getMembers

Also make LazyMemberLoader abstract
Add ""final"" to (Class|Protocol|Enum|Struct)Decl classes
"
8fff45d932a363365cf2cc8013aa6ce7e17935ff,apple/swift,"Merge pull request #6770 from xedin/cgr-refactor

[QoI] Refactor TypeChecker::checkGenericArguments. NFC"
be8defb29eab1bba8d523efb4a7ef0c124473c12,apple/swift,"Rename lookThroughAllAnyOptionalTypes to lookThroughAllOptionalTypes.
"
21272c178bb9d0ef001632ab9ac0c59c8422494d,apple/swift,"Merge pull request #6732 from xedin/diag-generic-requirements

[Diagnostics] Improve diagnostics for generic types with unfulfilled requirements"
57cacbfe38889e7adbb598d131c2c0396bb49e72,apple/swift,"IRGen: Share TypeInfo among equivalent generic instantiations.

IRGen type conversion is invariant with respect to archetypes with the same set of constraints, so instead of redundantly generating a TypeInfo object and IR type for Optional<T> for every T everywhere, key TypeInfo objects using an ""exemplar type"" that we form using a folding set to collapse together archetypes with the same class-ness, superclass constraint, and protocol constraints.

This is a nice memory and IR size optimization, but will be essential for correctness when lowering interface types, because there is no unique context to ground a dependent type, and we need to lower the same generic parameter with the same context requirements to the same type whenever we instantiate it in order for the IR to type-check.

Swift SVN r12112
"
9f83c43a02248b306fc10f2710860500936d475d,apple/swift,"SIL: remove unused functions from SILValue
"
542ed54c792893bddc595f3c3c6adb28b07f6781,apple/swift,"Merge pull request #19042 from slavapestov/match-call-arguments

Refactor matchCallArguments() to take arrays of AnyFunctionType::Param instead of argument tuples"
95c035fe3f6fa3ce80170883b2e59303cb908624,apple/swift,"Merge pull request #18985 from slavapestov/lazy-self-param

Consolidate code for creating 'self' parameter and only create it when needed"
48fe3e1c9bbc710f4890be4b53f2830fafaebc8e,apple/swift,"SILGen: Fix static computed properties in protocol extensions

We need to keep the AST formal type of the base around when building up
lvalues.

When the getter or setter involves an accessor call, we would use the
lowered type of the self argument to form the call. However, it might be
at the wrong level of abstraction, causing a @thin -vs- @thick metatype
mismatch. Using the formal type instead allows SILGenApply logic to emit
a thin to thick metatype conversion if necessary.

Fixes <rdar://problem/21358641>.

Swift SVN r30913
"
2606b7ca576b17069b3b12ba5799f98ef9bbfb5a,apple/swift,"Simplify handling of ternaries in SequenceExprs.

Instead of trying to parse '?' and ':' as separate placeholder exprs and matching them up during binary expr resolution, it's a bit cleaner to parse the entire '? ... :' middle expr of the ternary into a single placeholder node at parse time. Then binary expr resolution only ever has to consider a single sequence element.

Swift SVN r5499
"
272440340df92e49f14cb0f934d66d4f00fa026e,apple/swift,"Merge pull request #5801 from DougGregor/substitution-cleanup

"
76499a3ce33b2c3b43fe9196f6598ba3b1430ae1,apple/swift,"IRGen: Emit immediate class member offset global variable

Not used to access metadata members just yet.
"
ab487a17b57210f481bdccb0152a2d417d47c4bc,apple/swift,"Introduce a new TypeCheckExprFlags::AllowUnresolvedTypeVariables option,
which allows solving of a constraint system to succeed without emitting
errors in the face of ambiguous solutions.  This is important for CSDiag
because it is in the business of trying to solve subexpressions of a global
expression - and it wants to know the difference between a subexpression
that is inherently impossible to solve, vs one that is simply ambiguous
because its context has been removed.

Use this in CSDiag's typeCheckChildIndependently() to provide it an
extra flag that enables this behavior.  This is currently unused, so NFC 
with this patch.


Swift SVN r30402
"
36aa6c2645fefefdd9425b020ebba51f93a88047,apple/swift,"alloc_stack needs to return two values like alloc_box.

The current implementation of dealloc_stack in IR-gen is a
no-op, but that's very much wrong for types with non-trivial
local allocation requirements, e.g. archetypes.  So we need
to be able to do non-trivial code here.  However, that means
modeling both the buffer pointer and the allocated address
in SIL.

To make this more type-safe, introduce a SIL-specific
'[local_storage] T' type that represents the required
allocation for locally storing a T.  alloc_stack now returns
one of those in additon to a *T, and dealloc_stack expects
the former.

IR-gen still implements dealloc_stack as a no-op, but
that's now easy to fix.

Swift SVN r6937
"
b974fbeba406b1b4f0f3ab06dd2af5407afc4da6,apple/swift,"Don't double-emit the source expression when erasing an archetype to Error.
This is still a pretty bad code-generation pattern, but the layering
stuff makes it challenging to do the right thing.

Also, bridge non-optional NSErrors to Error using init_existential_ref
instead of going through the runtime function.

rdar://27810321
"
e5c8092cc18dd3343e34b8a321d08c2eadddae29,apple/swift,"Merge pull request #4134 from apple/simplify-tests

Simplify Foundation tests that compare types"
ec61fa4c5a68cc65b2327ea76b93ec81dbc27cae,apple/swift,"IRGen/Runtime: Use only the 'layout' subset of the vwtable to perform value type layout.

Full type metadata isn't necessary to calculate the runtime layout of a dependent struct or enum; we only need the non-function data from the value witness table (size, alignment, extra inhabitant count, and POD/BT/etc. flags). This can be generated more efficiently than the type metadata for many types--if we know a specific instantiation is fixed-layout, we can regenerate the layout information, or if we know the type has the same layout as another well-known type, we can get the layout from a common value witness table. This breaks a deadlock in most (but not all) cases where a value type is recursive using classes or fixed-layout indirected structs like UnsafePointer. rdar://problem/19898165

This time, factor out the ObjC-dependent parts of the tests so they only run with ObjC interop.

Swift SVN r30266
"
aac85cb93f1bfba1e71a4eeea36552a7b5551f26,apple/swift,"SIL: Introduce a 'closure' convention for unapplied invocation functions.

We don't want the machine calling conventions for closure invocation functions to necessarily be tied to the convention for normal thin functions or methods. NFC yet; for now, 'closure' follows the same behavior as the 'method' convention, but as part of partial_apply simplification it will be a requirement that partial_apply takes a @convention(closure) function and a box and produces a @convention(thick) function from them.
"
3023a5f947ed547c8808c2ee376fdd1641663a77,apple/swift,"Introduce a simple dedicated SIL pass to fetch and use pre-specializations at -Onone.

The logic which fetches pre-specialisations at -Onone is moved from the GenericSpecializer into a dedicated SIL pass called UsePrespecialized. This new pass is much simpler than GenericSpecializer. There are no changes to the overall logic.

The goal of this re-factoring is to pave the way for deletion of the stand-alone GenericSpecializer, because inline-devirt-specialize logic is now integrated thanks to Mark's recent improvements.

rdar://21881337

Swift SVN r30603
"
704d7258d1d5bf164c9f77320ac346e8cf997bd5,apple/swift,"Rename hasUniqueInput to hasSingleInput.
"
ff70528d8c38928c68b5717717498ac8e74a41c1,apple/swift,"Merge pull request #18253 from rjmccall/reorganize-type-descriptor-flags

Reorganize TypeContextDescriptorFlags to be a bit more semantic"
5bc27497d8d2f24db70c1fd9f8f113c0fc84f4a5,apple/swift,"Merge pull request #1512 from practicalswift/snake-case-local-variables

[Python] Improve Python consistency: ""variable in function should be lowercase"" (N806)"
3c614922e52f36fb0c24d473d9b5382dca37813e,apple/swift,"Revert ""Rework the interface to coerceParameterListToType to make it obvious""

This reverts commit 420bedaae15f070853c5ce8a77b6ce2405814b8d because it
appears to have unintentionally made some previously accepted code
involving casts of variadic parameters to closures no longer compile.
"
cc1e1202601bec0e8953d7d34938ac7760961307,apple/swift,"Clean up stray whitespace from prior search and replace
"
527ff375dccc315094e7258ef68d193cd55efe12,apple/swift,"AST: Rename old form of {Generic,}FunctionType::get() to getOld()

This makes it easier to grep for and eventually remove the
remaining usages.

It also allows you to write FunctionType::get({}, ...) to call the
ArrayRef overload empty parameter list, instead of picking the Type
overload and calling it with an empty Type() value.

While I""m at it, in a few places instead of renaming just clean up
usages where it was completely mechanical to do so.
"
772a124b63707cdec89850b9992ae0a9792e57bd,apple/swift,"Compute captures after all bodies have been type-checked, as a separate pass.

We already have the restriction that captures can't be computed until
everything is type-checked, but previously we tried to compute captures
/immediately/ after a closure was type-checked. Unfortunately, we either
type-checked too early (before @noescape was propagated onto multi-statement
closures) or too late (trying to compute autoclosure captures at the point
the autoclosure was introduced).

Now, all closure captures are computed after type-checking, and local
function captures as well. They also more consistently reuse the capture
list of nested closures/functions. Because captures can be computed on
demand, there is now a flag on CaptureInfo for whether we've computed
captures yet. Note that some functions will never have captures computed,
namely those that are not in a local context.

rdar://problem/19956242

Swift SVN r25776
"
6fc4cef671947d1d2482951853f7f82854473d91,apple/swift,"Merge pull request #17475 from lorentey/read-only-cleanup

[gardening] Clean up gyb-related Emacs local variables"
5a2f48e3be61607bd76cab50b63886cf305bad41,apple/swift,"Add a Builtin.BridgeObject type.

This is a type that has ownership of a reference while allowing access to the
spare bits inside the pointer, but which can also safely hold an ObjC tagged pointer
reference (with no spare bits of course). It additionally blesses one
Foundation-coordinated bit with the meaning of ""has swift refcounting"" in order
to get a faster short-circuit to native refcounting. It supports the following
builtin operations:

- Builtin.castToBridgeObject<T>(ref: T, bits: Builtin.Word) ->
  Builtin.BridgeObject

  Creates a BridgeObject that contains the bitwise-OR of the bit patterns of
  ""ref"" and ""bits"". It is the user's responsibility to ensure ""bits"" doesn't
  interfere with the reference identity of the resulting value. In other words,
  it is undefined behavior unless:

    castReferenceFromBridgeObject(castToBridgeObject(ref, bits)) === ref

  This means ""bits"" must be zero if ""ref"" is a tagged pointer. If ""ref"" is a real
  object pointer, ""bits"" must not have any non-spare bits set (unless they're
  already set in the pointer value). The native discriminator bit may only be set
  if the object is Swift-refcounted.

- Builtin.castReferenceFromBridgeObject<T>(bo: Builtin.BridgeObject) -> T

  Extracts the reference from a BridgeObject.

- Builtin.castBitPatternFromBridgeObject(bo: Builtin.BridgeObject) -> Builtin.Word

  Presents the bit pattern of a BridgeObject as a Word.

BridgeObject's bits are set up as follows on the various platforms:

i386, armv7:

  No ObjC tagged pointers
  Swift native refcounting flag bit: 0x0000_0001
  Other available spare bits:        0x0000_0002

x86_64:

  Reserved for ObjC tagged pointers: 0x8000_0000_0000_0001
  Swift native refcounting flag bit: 0x0000_0000_0000_0002
  Other available spare bits:        0x7F00_0000_0000_0004

arm64:

  Reserved for ObjC tagged pointers: 0x8000_0000_0000_0000
  Swift native refcounting flag bit: 0x4000_0000_0000_0000
  Other available spare bits:        0x3F00_0000_0000_0007

TODO: BridgeObject doesn't present any extra inhabitants. It ought to at least provide null as an extra inhabitant for Optional.

Swift SVN r22880
"
d0f4d86f3e305235e102f9cd3feddea8243fb1c8,apple/swift,"Use LValueType everywhere instead of the l-value value kind.
Kill off TypeJudgement.  Various fixes and improvements.



Swift SVN r1107
"
d281b982207ef855de3904108952af076f9fd594,apple/swift,"litter the tree with `llvm_unreachable`

This silences the instances of the warning from Visual Studio about not all
codepaths returning a value.  This makes the output more readable and less
likely to lose useful warnings.  NFC.
"
7f22faf968db41add699c87991ea14b3683a8b99,apple/swift,"Substantially rework how SILGen handles bridging as part of laying the
ground work for the syntactic bridging peephole.

- Pass source and dest formal types to the bridging routines in addition
  to the dest lowered type.  The dest lowered type is still necessary
  in order to handle non-standard abstraction patterns for the dest type.

- Change bridging abstraction patterns to store bridged formal types
  instead of the formal type.

- Improve how SIL type lowering deals with import-as-member patterns.

- Fix some AST bugs where inadequate information was being stored in
  various expressions.

- Introduce the idea of a converting SGFContext and use it to regularize
  the existing id-as-Any conversion peephole.

- Improve various places in SILGen to emit directly into contexts.
"
da59d305c97680af0e1830179b700e524fd1d033,apple/swift,"Greatly improve type checker performance when inferring types for certain binary
expression applications

(rdar://problem/15933674, rdar://problem/17365394 and many, many dupes.)

When solving for the type of a binOp expression, factor the operand expression
types into account when collating overloads for the operator being applied.
This allows the type checker to now infer types for some binary operations with
hundreds of nested components, whereas previously we could only handle a handful.
(E.g., ""1+2+3+4+5+6"" previously sent the compiler into a tailspin.)

Specifically, if one of the operands is a literal, favor operator overloads
whose operand, result or contextual types are the default type of the literal
convertible conformance of the the argument literal type.

By doing so we can prevent exponential behavior in the solver and massively
reduce the complexity of many commonly found constraint systems. At the same
time, we'll still defer to ""better"" overloads if the default one cannot be
applied. (When adding an Int8 to an Int, for example.)

This obviously doesn't solve all of our performance problems (there are more
changes coming), but there are couple of nice side-effects:
- By tracking literal/convertible protocol conformance info within type
variables, I can potentially eliminate many instances of ""$T0"" and the
like from our diagnostics.
- Favored constraints are placed at the front of the overload resolution
disjunction, so if a system fails to produce a solution they'll be the
first to be mined for a cause. This helps preserve user intent, and leads
to better diagnostics being produced in some cases.

Swift SVN r19848
"
0cdf289c9cff3b6d182920253dc977dc4f1982cb,apple/swift,"stdlib: make all collections sliceable, first steps

This commit adds a minimally working Slice type and minimal tests.  Even
though it might seem logical how the new protocol requirements are
injected in the CollectionType hierarchy, it is very fragile and
required many attempts to get the typechecker to finally accept it.
Because I want to ensure that the type checker does not regress, I'm
commiting a patch that does not do much yet.

Swift SVN r27617
"
6ff94330aebf3cadeeee172fd87c185a6f4cdbd9,apple/swift,"Add SwiftRuntime dtrace provider with probes for retain, release, allocateObject, deallocateObject.

Now if you want to get these dynamic metrics from the runtime all you
need to do is:

1. Configure Swift with -DSWIFT_RUNTIME_ENABLE_DTRACE=YES
2. Run your routine with the command:

sudo dtrace -s ./utils/runtime_statistics.d -c ""$MY_COMMAND_LINE""

After your app finishes running, it will dump out the counts. This is a
much more efficient and low maintenance way to get such statistics than
custom instrumenting the code.

Nothing is changed if -DSWIFT_RUNTIME_ENABLE_DTRACE is not set.

Swift SVN r25264
"
b7d17b25ba830695b4004500c4082ce804b03f11,apple/swift,"Rename -parse flag to -typecheck

A parse-only option is needed for parse performance tracking and the
current option also includes semantic analysis.
"
4fd8418ba724963e1414e4d720a05bb9cc5fb77a,apple/swift,"move the stdlib to put noescape and autoclosure on the type, instead of
the parameter.  Progress towards SE-0049.
"
a5f251e6e9a6bb3782c10b1563dd4f1ee50f1745,apple/swift,"[Global Opt] adds emitGlobalGetter in SILGen.

Refactor part of emitGlobalAccessor to emitOnceCall so it can be used
by both emitGlobalGetter and emitGlobalAccessor.

This is the second patch to use global getter for ""let"" globals.

rdar://16614767


Swift SVN r23107
"
8de0ca54e543d1b759f26b3a7447290c2c69ca09,apple/swift,"Sema: Merge the two implementations of simplifyType()

ConstraintSystem::simplifyType() replaced types with their fixed types
from the global map.

Solution::simplifyType() replaced types with their fixed types from the
current bindings.

There were some minor differences between the two, and some dead code.
"
b4f901bae4e1a4b30446a20258915b442007554b,apple/swift,"[benchmark] Naming Convention

New benchmark naming convention for better readability and improved naming system that accounts for performance coverage growth going forward.
"
3c2216b115b26709181ed2858e86ed6f5e013a33,apple/swift,"[+0 self] Add the deallocating parameter convention.

The deallocating parameter convention is a new convention put on a
non-trivial parameter if the caller function guarantees to the callee
that the parameter has the deallocating bit set in its object header.

This means that retains and releases do not need to be emitted on these
parameters even though they are non-trivial. This helps to solve a bug
in +0 self and makes it trivial for the optimizer to perform
optimizations based on this property.

It is not emitted yet by SILGen and will only be put on the self
argument of Deallocator functions.

Swift SVN r26179
"
9424de6787fcec287076c41dd6f03f811683e4f0,apple/swift,"SIL: Rename 'archetype_metatype' to 'value_metatype'.

Since it can grab a metatype from any value now.

Swift SVN r14500
"
9efa20e4eb9b46e6edd558f8d5c37cce01177121,apple/swift,"Improve overload resolution for dynamic lookups.

Unlike normal overload resolution, where we always want the
most-specialized, overriding result, overload resolution for dynamic
lookups favors results in superclasses to those in subclasses, because
we want to put the least requirements on the object
type. Additionally, we don't allow overload resolution to select among
results that come from different classes or protocols.



Swift SVN r7743
"
9a29edfe9e11dc3f9cc9b19145148152e5dedc2e,apple/swift,"Merge pull request #7972 from shajrawi/rename_opaque_br

Rename unconditional_checked_cast_opaque to unconditional_checked_cast_value"
acdd5b120a82f49309d2d1641c092050b156b45f,apple/swift,"Make type checker debug output redirectable

Introduce a replaceable TypeCheckerDebugConsumer for this.


Swift SVN r9555
"
fe30b66a93320a94bf55e1b7ed67eaa4441e64d3,apple/swift,"move ""override"" onto the new fangle decl modifier code, instead of being a virtual
attribute.  As part of this, introduce a new ""NotSerialized"" flag in Attr.def.
This eliminates a bunch of special case code in the parser and elsewhere for handling
this modifier.



Swift SVN r19997
"
295dc96fb6c8ddcdca817bf18a81e61422dfe849,apple/swift,"[SILOptimizer] Introduce an eager-specializer pass.

This pass finds generic functions with @_specialized attributes and
generates specialized code for the attribute's concrete types. It
inserts type checks and guarded dispatch at the beginning of the
generic function for each specialization. Since we don't currently
expose this attribute as API and don't specialize vtables and witness
tables yet, the only way to reach the specialized code is by calling
the generic function which performs the guarded dispatch.

In the future, we can build on this work in several ways:
- cross module dispatch directly to specialized code
- dynamic dispatch directly to specialized code
- automated specialization based on less specific hints
- partial specialization
- and so on...

I reorganized and refactored the optimizer's generic utilities to
support direct function specialization as opposed to apply
specialization.
"
d6cdce101326504e08cc463899419adaa226e231,apple/swift,"Adjust to InputArgList being a move-only type

Swift SVN r31800
"
7ba95cfd26fee291b019db80310b2c238b7d9995,apple/swift,"Add AST nodes for refutable patterns.

Introduce Pattern subclasses for the 'is T', 'T(<pattern>)', and '<expr>' pattern syntaxes we'll be introducing for pattern-matching ""switch"" statements. Also add an 'UnresolvedCalLPattern' to act as an intermediate for name lookup to resolve to a nominal type, oneof element, or function call expression pattern. Since we'll need to be able to rewrite patterns like we do expressions, add setters to AST nodes that contain references to subpatterns. Implement some basic walking logic in places we search patterns for var decls, but punt on any more complex type-checking or SILGen derived from these nodes until we actually use them.

Swift SVN r5780
"
bdffe703b07821e2aaf89b992f3b46abfd7b563f,apple/swift,"Runtime: Rename reportMissingMethod to deletedMethodError.

The runtime entry doesn't just report the error, unlike the other report* functions, it also does the crashing.
"
8cdddef2f878fb5d4c087e82779fe9aac6fd43a6,apple/swift,"Refactor Params to use flags

Also, begin to pass around base types instead of raw InOutType types.  Ideally, only Sema needs to deal with them, but this means that a bunch of callers need to unwrap any inouts that might still be lying around before forming these types.

Multiple parts of the compiler were slicing, dicing, or just dropping these flags.  Because I intend to use them for the new function type representation, I need them to be preserved all across the compiler.  As a first pass, this stubs in what will eventually be structural rules as asserts and tracks down all callers of consequence to conform to the new invariants.

This is temporary.
"
afd59130f0a9dddbffb5e9cb7d35db4cb464a7b6,apple/swift,"SIL: Add a FixLifetime instruction.

This will be a signal to ARC optimization, RVO, and other lifetime-affecting optimizations that they should not shorten the lifetime of a value past a certain point. We need this for C pointer bridging. This adds the instruction, but does not add any knowledge of it to the ARC optimizers.

Swift SVN r15601
"
eede5ec4f9712044260d92e0f16da287be8c4b57,apple/swift,"Begin refactoring for mixed file kinds within a single module.

The goal of this series of commits is to allow the main module to consist
of both source files and AST files, where the AST files represent files
that were already built and don't need to be rebuilt, or of Swift source
files and imported Clang headers that share a module (because they are in
the same target).

Currently modules are divided into different kinds, and that defines how
decls are looked up, how imports are managed, etc. In order to achieve the
goal above, that polymorphism should be pushed down to the individual units
within a module, so that instead of TranslationUnit, BuiltinModule,
SerializedModule, and ClangModule, we have SourceFile, BuiltinUnit,
SerializedFile, and ClangUnit. (Better names welcome.) At that point we can
hopefully collapse TranslationUnit into Module and make Module non-polymorphic.

This commit makes SourceFile the subclass of an abstract FileUnit, and
makes TranslationUnit hold an array of FileUnits instead of SourceFiles.
To demonstrate that this is actually working, the Builtin module has also
been converted to FileUnit: it is now a TranslationUnit containing a single
BuiltinUnit.

Swift SVN r10830
"
994dbfe9ece9349cfffe9425535b8d6af579525c,apple/swift,"SILOptimizer: Fix speculative devirtualizer with dynamic Self

The testcase exercises this when run with check-swift-optimized.
"
a9c68c0736cab793c2bf562692c12ccfda4e6b20,apple/swift,"AST: Remove archetype from AbstractTypeParamDecl

There's a bit of a hack to deal with generic typealiases, but
overall this makes things more logical.

This is the last big refactoring before we can allow constrained
extensions to make generic parameters concrete. All that remains
is a small set of changes to SIL type lowering, and retooling
some diagnostics in Sema.
"
c7fd9ec3bca17fc57066e5c3783d549e0ca2e77f,apple/swift,"remove the old grammar production for func's in protocols and just use
decl-func instead.  Hey look, now we have support for default 
implementations.


Swift SVN r671
"
6fc2efbe49718f4c21a92dcedbbae701ac23b598,apple/swift,"Merge pull request #9572 from practicalswift/gardening-20170513

[gardening] Remove assert requirement from fixed crashers. Fix spacing. Remove unused variables."
c28f0f03220747999db1dfbc02fdea15fd8a2ebb,apple/swift,"Sema: Remove unnecessary check

It looks like this is covered by the witness lookup below.

Kind of a useless change, but I'm trying to simplify the
LookupResultBuilder as much as I can.
"
2b7d0f9379e988c16c5a217c691e3feadca0bb72,apple/swift,"[Type checker] Extract default argument information from the callee declaration.

Rather than relying on the embedding of default argument information
into tuple types (which is gross), make sure that the various clients
(type checker, type checker diagnostics, constraint application) can
dig out the callee declaration and retrieve that information from
there.
"
9ee856f386f9be65234e25038a91a34fa07acacd,apple/swift,"[stdlib][WIP] Eliminate (Closed)CountableRange using conditional conformance (#13342)

* Make Range conditionally a Collection

* Convert ClosedRange to conditionally a collection

* De-gyb Range/ClosedRange, refactoring some methods.

* Remove use of Countable{Closed}Range from stdlib

* Remove Countable use from Foundation

* Fix test errors and warnings resulting from Range/CountableRange collapse

* fix prespecialize test for new mangling

* Update CoreAudio use of CountableRange

* Update SwiftSyntax use of CountableRange

* Restore ClosedRange.Index: Hashable conformance

* Move fixed typechecker slowness test for array-of-ranges from slow to fast, yay

* Apply Doug's patch to loosen test to just check for error
"
f6d19995696639415ca1a7cffe564d4f14eff18f,apple/swift,"Parse: Introduce pattern vars into case scopes.

Create a scope for each case block to contain bindings from its patterns, and invoke addVarsToScope after parsing case label patterns to introduce vars into that scope. Refactor addVarsToScope to use an ASTWalker so it finds pattern vars embedded in expr patterns.

Swift SVN r5899
"
f50b1e73dc3144fc3abb1ff540d06a1fbb5853cf,apple/swift,"Revert ""Make all CF types Equatable and Hashable.""
"
226fa1543b84b85d614c7782426f121169361f11,apple/swift,"Eliminate the Type from ComponentIdentTypeRepr.

With this change, TypeReprs no longer contain fully-resolved types for
any parsed code. Rather, they contain unresolved identifiers or the
declarations to which the identifiers have resolved.

As a minor space optimization, collapse the unbound (Identifier)
representation and the bound (ValueDecl *) representation into a
single pointer union.

Swift SVN r32434
"
0c20833d5f85f09f3b7612cf48fd64c474bf4008,apple/swift,"IRGen: Optimize copy/destroy of ObjC tagged or nullable enums too.

Rename TypeInfo::isSingleRetainablePointer to TypeInfo::isSingleSwiftRetainablePointer, and add an isSingleUnknownRetainablePointer entry point to ask whether a type has any single-refcounted representation, native or not. Use that to provide the same nullable-pointer and pointer-with-tag optimizations for copying and destroying enums with ObjC payloads as we do for Swift class payloads.

Swift SVN r12410
"
0af0d5fddc2674ecf96684cae3dc127365f42f0e,apple/swift,"[ownership] Replace ValueOwnershipKind::Trivial with ValueOwnershipKind::Any.

In a previous commit, I banned in the verifier any SILValue from producing
ValueOwnershipKind::Any in preparation for this.

This change arises out of discussions in between John, Andy, and I around
ValueOwnershipKind::Trivial. The specific realization was that this ownership
kind was an unnecessary conflation of the a type system idea (triviality) with
an ownership idea (@any, an ownership kind that is compatible with any other
ownership kind at value merge points and can only create). This caused the
ownership model to have to contort to handle the non-payloaded or trivial cases
of non-trivial enums. This is unnecessary if we just eliminate the any case and
in the verifier separately verify that trivial => @any (notice that we do not
verify that @any => trivial).

NOTE: This is technically an NFC intended change since I am just replacing
Trivial with Any. That is why if you look at the tests you will see that I
actually did not need to update anything except removing some @trivial ownership
since @any ownership is represented without writing @any in the parsed sil.

rdar://46294760
"
bebfa969bdf1d67b8c9041f7fde216d09ca9bc0b,apple/swift,"Sema: Allow 'x.init' references on metatype expressions.

If 'x.init' appears as a member reference other than 'self.init' or 'super.init' within an initializer, treat it as a regular static member lookup for 'init' members. This allows a more explicit syntax for dynamic initializations; 'self.someMetatype()' looks too much like it's invoking a method. It also allows for partial applications of initializers using 'someMetatype.init' (though this needs some SILGen fixes, coming up next). While we're in the neighborhood, do some other correctness and QoI fixes:

- Only lookup initializers as members of metatypes, not instances, and add a fixit (instead of crashing) to insert '.dynamicType' if the initializer is found on an instance.
- Make it so that constructing a class-constrained archetype type correctly requires a 'required' or protocol initializer.
- Warn on unused initializer results. This seems to me like just the right thing to do, but is also a small guard against the fact that 'self.init' is now valid in a static method, but produces a newly-constructed value instead of delegating initialization (and evaluating to void).

Swift SVN r29344
"
5557ec2bbc1d4a8d0b6784c7f264aea61bdb3598,apple/swift,"Improve nonexistent decl diagnostic
"
f51b2d12c4e72b0d13a77ea40418f19db3ed39ce,apple/swift,"[SR-2209] Make a real AccessScope class and use it in access checking.

1. Add new AccessScope type that just wraps a plain DeclContext.
2. Propagate it into all uses of ""ValueDecl::getFormalAccessScope"".
3. Turn all operations that combine access scopes into methods on AccessScope.
4. Add the ""private"" flag to distinguish ""private"" from ""fileprivate""
scope for top-level DeclContext.
"
0f6b7a9d22e6c64b515aee24bb495140ec2214a8,apple/swift,"Rework our handling of ""external"" definitions created by the Clang importer.

Keep track of external definitions as they are created by broadcasting
them through a mutation listener interface. At name binding time, we
just cache them. When a type checker is alive, it immediately performs
any additional operations necessary on those types (e.g., declaring
implicit constructors).

This also eliminates some O(N^2) behavior in the type checker as well,
because we don't have to walk through all of the module imports to
find the external definitions. We just keep a single list in the
ASTContext along with our place in the list.

Fixes <rdar://problem/13769497>.


Swift SVN r5032
"
b4cf37bf7dc9d08eb99c5e9650cb625f80e7d51d,apple/swift,"Sema: several improvements on missing switch cases diagnostics. (#8026)

1. Make sure the actions taken by fixits are reflected in diagnostics messages.
2. Issue missing cases diagnostics at the start of the switch statement instead of its end.
3. Use <#code#> instead of <#Code#> in the stub."
7461dbd70a4e4c5c2c7b2eb991145eff29d93e38,apple/swift,"Now that we have a PM, separate passes from analyses by creating a separate library swiftSILAnalysis and a separate folder/etc.

Swift SVN r13511
"
4ba7e418cb30e9fd10908bcbb6e9c91d28b8069c,apple/swift,"[runtime] Fortify the swift_demangle API.

Remove the reference to String, which leaks internal implementation details,
check for invalid inputs, and make the API more flexible. Remove the similar
Swift API, since it provides no additional value.
"
e15d08e38f72d415ecd4fd780cb5ec532347326f,apple/swift,"Merge pull request #1042 from gregomni/sr-69

[SR-69][Sema] Improved quality of diagnoses messages"
f477f061fe590bb04d2e38af46784945548f84a9,apple/swift,"Replace ArrayDowncastConversionExpr with ArrayDowncastExpr.

Array downcast is an explicit cast written ""x as U[]"", not an implicit
conversion, so make it a subclass of ExplicitCastExpr. The only
effective change here is that we retain the location of the ""as"" and
the type as written in the AST. No semantic change.



Swift SVN r18391
"
ba04392294d806562277d94053d62b9fb4016f34,apple/swift,"Tighten up sema of anon closure arguments to reject invalid code like this:

func funcdecl6(a : int, b : int) -> (int,int) -> int = _0+_1;
var funcdecl7 : (int,int)->(int,int)->int = _0+_1;

It's not valid to bind anon closure arguments to functions, use named arguments instead.

Swift SVN r112
"
0bde3253271248d274b55e217957638bf38c1dd4,apple/swift,"Collapse 'DynamicSelf' into 'Self'.



Swift SVN r14377
"
24c212d71594aa16f5cad9965e66565f8afc8343,apple/swift,"Correct renaming fix-its for trailing closures, disable them for operators (#2626)

Merge pull request #2626 from jrose-apple/trailing-closure-rename-fixits"
d4357998a77abba8a22eb313aaeb5806f269cf66,apple/swift,"Split the verifier out to its own file.
Run it on newly constructed CFGS.
This exposes that Return wasn't being modeled as a terminator.  Fix it to be one.



Swift SVN r2735
"
a22b391e2ac7d52d2eaf2717588e15f8cd4b3afa,apple/swift,"Greatly improve performance for type checking large, type-annotated, array literal expressions by directly applying contextual type information to its constituent element expressions. (rdar://problem/16736884)

There's a lot more that can be done with this, but for now this change will make the OpenGLES template usable.

Swift SVN r18353
"
21b8312c2ec192f3ee2d02148141d31c2ca7c2c2,apple/swift,"[stdlib] Make a bunch of standard library functions compile faster.

The targeted functions all take over a second to type-check with my debug
compiler (found using -debug-time-function-bodies). The top two---the two
replaceRange implementations---took about a minute each; this change
knocks them down to 30-40s.

All of this is just breaking expressions apart, and the expressions aren't
even that complicated. I'm concerned that we have a serious performance
regression around the use of lazy(), and I've filed rdar://problem/20875936
so we can look into it. The test change is particularly concerning; there's
a ridiculous difference between 'lazy(...).reverse()' and
'lazy(...).reverse().reverse()'.

No intended functionality change.

Swift SVN r28325
"
45c7e4e861ed3b91a96989b8dc08780222715b55,apple/swift,"[Coverage] Respect function linkage in PGO name variables

Fix a crash in emitBuiltinCall() which occurs because we drop function
linkage information when creating SILCoverageMaps.
"
f6d6585ee0772dee8c58551199fc5257b1387f84,apple/swift,"[Python] Improve Python consistency: Use function_name(‚Ä¶) throughout (PEP8)
"
38963ce883e126a8a2054db527b6d4d5ce9f595b,apple/swift,"[sourcekit] Tweak traced operation to be single-operator per RAII object

This is how it was used in all but one place anyway, and makes it easier
to understand.  It also aligns better with some further refactoring I
want to do...
"
926a3fe67172649356652be477f0297d4de390bf,apple/swift,"completely reimplement floating point literals to follow the model of integer literals.

Among other things, this gives us the amazing power to accept ""var x : float = 0.0""



Swift SVN r978
"
e3a664cf9066f17100a26bb33b3d2296cfa996d5,apple/swift,"Factor out the scalar-to-tuple type matching.


Swift SVN r9229
"
28b206008f6169e98fb4b7157fab616ac88f351c,apple/swift,"FrontendInputs data structure redo.

- Outlaw duplicate input files, fix driver, fix tests, and add test.
- Reflect that no buffer is present without a (possibly pseudo) named file.
- Reflect fact that every input has a (possible pseudo) name.
- Break up CompilerInstance::setup.

Don't bail on dups.
"
02ce2fe199116e3151fde0f5fe1f3d09d73d6977,apple/swift,"Make is_nonnull produce a primitive Builtin.Int1 instead
of Bool, and use swift._getBool to turn that into a Bool
as necessary.

Swift SVN r7720
"
c6df1cdfc9654a83fbfd2df22e21a33996b9f611,apple/swift,"Merge pull request #7211 from slavapestov/subst-map-cleanups

SubstitutionMap cleanups"
038303b1b1263b00906037018d03946d633e3125,apple/swift,"Switch MetadataCache to use a global slab allocator.

This seems to more than fix a performance regression that we
detected on a metadata-allocation microbenchmark.

A few months ago, I improved the metadata cache representation
and changed the metadata allocation scheme to primarily use malloc.
Previously, we'd been using malloc in the concurrent tree data
structure but a per-cache slab allocator for the metadata itself.
At the time, I was concerned about the overhead of per-cache
allocators, since many metadata patterns see only a small number
of instantiations.  That's still an important factor, so in the
new scheme we're using a global allocator; but instead of using
malloc for individual allocations, we're using a slab allocator,
which should have better peak, single-thread performance, at the
cost of not easily supporting deallocation.  Deallocation is
only used for metadata when there's contention on the cache, and
specifically only when there's contention for the same key, so
leaking a little isn't the worst thing in the world.

The initial slab is a 64K globally-allocated buffer.
Successive slabs are 16K and allocated with malloc.

rdar://28189496
"
965e95c41c1d0e62aeca542b1b9df675f788cd75,apple/swift,"Merge pull request #11831 from rjmccall/accessor-validation

Improve the validation of storage accessors"
173d750a02af1df8c4c9d5fec5138d01f11108ae,apple/swift,"Switch IR-generation to use ASTVisitor, or more precisely, to
use irgen::ASTVisitor, which is a subclass of the AST version
that always looks through some expressions and asserts that
others (the unchecked/error ones) can't happen.  The main
obstacle to that is access control, because it's quite nice to
have the visitor be a non-local class for nesting purposes,
but that makes it impossible to use private methods anymore.
It's nice to give all the type-specific emitters private
interfaces anyway, though;  that ends up being most of the
patch.

I futzed with GenClosure.cpp while I was in there, but
separating it would have been obnoxious.

Swift SVN r1267
"
1c0047829a0ed033c9f19c7ad03fffa482d84e9b,apple/swift,"Rename SequenceType.generate() to SequenceType.iterator()
"
eb5d006e40e907ae16e105e48b04988fc15e771d,apple/swift,"Rename ObjCKeyPathExpr -> KeyPathExpr.

We can use the same general shape of expression for native key paths.
"
9bd774fd571d0b0246b1d735dc1b8c4ef4eab484,apple/swift,"Eliminate ExtensionDecl::(get|set|)Conformances.

Stop storing a conformances array on ExtensionDecls. Instead, always use the conformance lookup table to retrieve conformances (which is lazy and supports multi-file, among other benefits).

As part of this, space-optimize ExtensionDecl's handling of conformance loaders. When one registers a conformance loader, it goes into a DenseMap on ASTContext and gets erased once we've loaded that data, so we get two words worth of space back in each ExtensionDecl.

Swift SVN r26353
"
bea377f8c8bfc6992ace94efdd62f7ad7eb3ed10,apple/swift,"Merge pull request #14383 from rudkx/iuo-delete-rename-etc

More IUO removal clean-up."
928afc6ab859617a6c1401ed7cc0aaca300e80c2,apple/swift,"Merge pull request #10866 from rjmccall/bridging-rework

Substantially rework how SILGen handles bridging"
acef5b89dbf9fe137499ba43dba0db58eef64c17,apple/swift,"Merge pull request #13894 from slavapestov/is-resilient

 AST: Rename hasFixedLayout() to isResilient() and flip polarity"
ab0c44d2b7d03a9075891d389bf0687998220a35,apple/swift,"Merge pull request #13183 from davidungar/move-in-to-next-imm-out-fix-rb1

Break up ParseFrontendOptions and reorganize module and output files computation, V2."
85490080c22b5bcd7e54ee2042dc85036d2431d9,apple/swift,"Make protocol thunks expect a metatype pointer (for This) as
their last argument.  Pass it down correctly.

Swift SVN r3042
"
a73b767bf6299658558cbb20a680a6eeac0ee576,apple/swift,"refactoring: add a defensive check against null type. rdar://36305791 (#14014)

"
18504de7dd171aacd6b720fa36819e4439178552,apple/swift,"Revert ""[Import as member] First draft of renaming CG APIs""
"
0bc4f9c936a927eb6c36ca6bd2dcc4229478f51a,apple/swift,"Call SILFunction destructor when we cleanup functions so that if the function contains a function_ref, the function referenced by the function_ref has its refcount properly decrement.

Otherwise a function_ref which was supposed to be deallocated would keep
functions alive.

rdar://16287331

Swift SVN r16192
"
0780c529c4360b29e3064d316e60cdc8de03795c,apple/swift,"[Syntax] Unify RawSyntax and RawTokenSyntax using union and TrailingObjects

It better matches with SwiftSyntax model.

Using TrailingObjects reduces the number of heap allocation which
gains 18% performance improvement.
"
67fc5e32ce95068781e3f4309a66b2bb6fac274d,apple/swift,"Simple changes to pave the way for the next PR.

- Moved getOutputFilenamesFromCommandLineOrFilelist & readOutputFileLIst to better places in the file.
- Capitalization changes.
- Make actionIsImmediate static.
- Add braces around sections of CompilerInstance::setup to clarify scopes of local variables.
"
c28c420a1fd78422cbc5094bcdd792de9b3fd41d,apple/swift,"SILGen: Simplify SILGenApply a bit

We were passing around a ton of unused parameters,
just remove them.
"
54cae5d453d8fcf4577a961a28afd75fd6a5bdda,apple/swift,"[stdlib] Streamable => TextOutputStreamable

This is logically part of
[SE-0086](https://github.com/apple/swift-evolution/blob/master/proposals/0086-drop-foundation-ns.md)
since it goes with 2a4e916 (Rename OutputStream to TextOutputStream [SE-0086])
"
92ace2486ce9ceb019ef76be1da41d1e915faa16,apple/swift,"Rename -simplify-cfg to -jumpthread-simplify-cfg.
"
49f393920a681e2c8a8e887e0ee3e3da4b8c80ca,apple/swift,"Rename bridging ""convert"" functions to start with '_'.

This is part of our poor-man's internal compiler SPI hiding
in the standard library.  We don't want these functions showing
up in code completion, etc.

Swift SVN r16916
"
cefb0b62bac0243175fb1ce3e2f81fe7a91d6b35,apple/swift,"Replace old DEBUG macro with new LLVM_DEBUG

...using a sed command provided by Vedant:

$ find . -name \*.cpp -print -exec sed -i """" -E ""s/ DEBUG\(/ LLVM_DEBUG(/g"" {} \;
"
8e1d6c013b847ba6e26ad030253e98f061701682,apple/swift,"Make SILDebugLocation a value member of SILInstruction again.

The overhead of uniquing the locations in a Densemap isn't worth any of
the potential memory savings: While this adds an extra pointer and
unsigned to each SILInstruction, any extra memory is completely lost in
the noise (measured on a release -emit-ir build of the x86_64 stdlib).
This is not too surpising as the ratio between SILInstructions and unique
SILLocations is not very high and the DenseMap also needs space.

<rdar://problem/22706994>
"
f657ad2d3a8fd516974951bde9f0961257ffcd1b,apple/swift,"Rename *ExistentialOpaque instructions to *ExistentialValue.

These instructions have the same semantics as the *ExistentialAddr instructions
but operate directly on the existential value, not its address.

This is in preparation for adding ExistentialBoxValue instructions.
The previous name would cause impossible confusion with ""opaque existentials""
and ""opaque existential boxes"".
"
f7fe8a5f4a7d61d4fd067367f3defd271ff23e89,apple/swift,"Fix <rdar://problem/20392122> Destructuring tuple with labels doesn't work

This pushes tuple pattern labels forward:
  - Actually record them in TuplePatternElt.
  - Remove the tuple shuffle ban that prevents some cases
    (e.g. the one in the radar) of a tuple with labels being shuffled
    onto a tuple without labels.
  - Remove dead code enabled by removing the restriction.



Swift SVN r26852
"
4022624dbab68d139bd207e3eaa2891ae886c21d,apple/swift,"stdlib: Rename _unimplemented_initializer to _unimplementedInitializer, NFC

This addresses a FIXME.
"
06c35e903f3acccfb1c6e00fc55d29b5147bdecd,atom/github,"Merge pull request #640 from atom/mkt-ku-simplify-package-startup

Prepare package for bundling in Atom"
630013dc18ee34cb033bc2dbf520bb76e8740449,atom/github,"Rename CSS classes within Git* components to be consistent
"
d308122587d69b536ecd7d6f734f63a65d8112e1,atom/github,":art: Extract discard history stores and make code more readable
"
6416416250c7a619339065889bf33dcae1e246aa,atom/github,"Merge pull request #581 from atom/mkt-improved-modifier-key-support-in-push-pull-menu

Improve modifier key support in PushPullMenuView"
544796ad04b16500d84e55fa49bed02d1a0d4c9a,atom/github,"Merge pull request #332 from atom/mkt-ku-main-package-refactor

Refactor main package entry point"
8350a55cc434741a1c7bf18a2bbbaea9ff0223cc,bokeh/bokeh,"Rename @glyph_props -> @props
"
a73c5b379282413ab9825f115c3faa91143fdf9f,bokeh/bokeh,"move renderers outside builders to chart object
"
d87653c089c47b6f1fddeaeb4655676b18566e02,bokeh/bokeh,"Merge pull request #2870 from bokeh/rothnic-feature/xy_charts_api

Refactor Charts for Table-like (x,y) Inputs"
73f60d791310f4a03e9a8c06eb743de496cc2ada,bokeh/bokeh,"Bryanv/test build cleanup (#7910)

* remove unused sinon imports

* update typescript and gulp-typscript

* update tslint and tslib

* update ts-node

* update gulp-typescript

* update ts-lint

* update websocket

* update atob and btoa

* update uglify-es

* update yargs

* update flatbush

* update escodegen

* update less

* update del

* update merege-source-map

* update vinyl-source-stream

* update @types/geojson

* update es6-promise

* update coffee

* update chalk

* update merge2

* update detective

* update @types/sprintf-js

* update run-sequence

* update @types/esprima

* update gulp-rename

* update gulp-sourcemaps

* update @types/gulp-task-listing

* update chai, @types/chai, chai-as-promised

* update mocha, @types/mocha

* update @types/node, @types/gulp. @types/nouislider
"
8ac263c1cd8615062c59ba06e0149994722fea0e,bokeh/bokeh,"Make session.add() traverse object tree (recursive=True)
"
660b05e5336dee6fa72066829824de2de2466216,bokeh/bokeh,"Merge pull request #961 from ContinuumIO/big_refactor

Big charts refactor"
e3887ae007a1a5d4347806755d53b80d09d4047c,bokeh/bokeh,"moved shared methods from single charts to ChartObject on all chart classes (code commented until code is better tested)
"
31e4be691f506edd66e57cceaef5648a5ef6fa16,bokeh/bokeh,"Fix all outstanding type errors (#7637)

* Fix type errors in models/annotations

* Add mappers/continuous_color_mapper

* Fix type errors in models/mappers

* Refactor models/mappers

* Use values of uniform type in ColorMapper._get_values()

* Test ColorMapper.v_compute() instead of _get_values()

* Check for platform's endianness in one place

* Fix type errors in models/plots/plot_canvas

* Fix type errors in models/plots/gmap_plot_canvas

* Remove custom TypeScript error handling

* Restore support for RGBA mapping and simplify endianness handling
"
98ffbb2600f4ff3f16cfac634bc87107269e57e2,bokeh/bokeh,"Deprecate VBox/HBox.
"
cce16d52c122a09020bc4bcf93a739fe7fc4b5c3,bokeh/bokeh,"remove unused imports, standardise import order, etc
"
84309655f344457d410b391c66115953e77a8ae3,bokeh/bokeh,"More objects -> models renames
"
c134eaf47366d6bd3783d841d30d0df4b5fe1ae3,bokeh/bokeh,"shorten/simplify screen range names
"
fde5a52ec8c4e308c15f19f6a5a9517c0e3608fb,bokeh/bokeh,"Merge pull request #1374 from bokeh/feature/server_startup_cleanup

Feature/server startup cleanup"
e4324b5d1d316c528f3d7f92acd2bc686a56c3f9,bokeh/bokeh,"Merge pull request #3374 from bokeh/top_level

Reorganize top level package "
489ff927bca520c226443649ffe7882316e1c4f6,bokeh/bokeh,"Merge pull request #935 from ContinuumIO/fix_boxplot

Fix boxplot and more refactor..."
63c599db82294594b9c19dde276eca896e6d314d,bokeh/bokeh,"Canonicalize base_url, server_url trailing slashes

Also clean up uses of these and DEFAULT_SERVER_HTTP_URL
"
95721fd40fa8c222f35be15ed31e2e2150b3bc4b,bvcms/bvcms,"More renaming smallgroup to sub-group
"
6db26eed7291bef917ae00645c31db8419ba4471,bvcms/bvcms,"Refactored the way the InMobileAppMode works, using Session instead to store the source.
Also added in all the logic needed to display the back button at the top and the confirm page back button in the content.
"
3b3525a9d74ea46fd40f95ae9047200d8f16bf57,bvcms/bvcms,"DbSchema change

ArchiveContent, ExtraValue Refactoring
"
6b2e45007e208697591925324c89ae59e7e60f1e,bvcms/bvcms,"Reorganizing Image files
"
5cd5ee8df1bfb63126c397662a84fa53c5dbe1fd,bvcms/bvcms,"Begin Refactoring to prepare for merge with Master branch
"
bb7f608099e910936f25fa582575e2f6802a9666,dials/dials,"Splitting of Ih_table datastructure into blocks for single dataset scaling.
"
467bb39f0094e082824c789fa447cfb79d73ddf3,dials/dials,"Removed redundant stuff (related to models now in dxtbx) and did clean clutter.

"
edb4f5e02b0a8786ab9fa05f248dc2193083a188,dials/dials,"In line with earlier discussion, simplified ray_predictor

"
74bf35b35de142df64f856fbbff40713aea2eba0,ello/webapp,"Merge pull request #178 from ello/mk-remove-constructor

Clean up some formatting issues and rule"
8d2452614b12db83b85a94300f26f69cac04da2e,ello/webapp,"Remove dead user code and simplify to renderables

This also breaks renderables and parts out for users from both markup
and styles sides.
"
98f4c832ae20e5b4dc37fee255fbaa8d13a43cde,ello/webapp,"Move all function binding up to the constructor

This should give us some pretty significant performance gains since we 
had a bunch of these living within or part of a sub method from render. 
By binding in the constructor we now are just creating the function and binding once rather than each time render is called.

We now fully conform to [react/jsx-no-bind](https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md). We were scooting
around this rule because we are using the ES7 shorthand for binding ‚Äî `::this.fn`.

To find these in the code base I did the following:

1. Searched for `{::this` and moved those out to the constructor
- Searched for `{\ ::this` and moved those out to the constructor
- Searched for `::this` which found a few others (mainly images and 
`loadDidSucceed` and `loadDidFail`)"
a415b357baacf550db9e3f68804e7e5664ffe30d,ello/webapp,"Adds route handling to the json store.

* Removes the old funky way of combining the reducers
* Adds a `path` variable to json store
* Fix tests"
1a49b554ca9a6ff67a264da12628ba9be845c31a,ello/webapp,"Merge pull request #30 from ello/mk/cleanup/profile-2.0

Cleanup Profile 2.0"
edd21202fcde3352c7f43ac99503840fb240c372,ello/webapp,"Moves PropTypes from React to the external module

A requirement for React 15.5. See
https://facebook.github.io/react/blog/2017/04/07/react-v15.5.0.html#migrating-from-react.proptypes
for more info

[Finishes: #144613739](https://www.pivotaltracker.com/story/show/144613739)
"
b7914fc3491eca791f04a37f68dd4de560ff9e1e,erxes/erxes,"Board refactor
"
1ef816cbd466950dfcff55321b1ae1cf6822dd93,erxes/erxes,"Refactor styles /responseTemplate, editor, customer, company/
"
5ce57ceded2be1cb0e60dbcd0a9c799c41acbf50,erxes/erxes,"Merge pull request #682 from erxes/feature-inbox-sidebar

Refactor inbox sidebar UI, Close #684"
ea81c11bcc06e7566e73636fc2a53b65c1afe716,erxes/erxes,"Refactor inbox right sidebar and seperate basicinfosection
"
659017228e93fffd4a7fc372d2141b2ff246b64d,erxes/erxes,"Refactor lead coding and remove some unused style
"
4b86d383118ef327636af33346ff37c13eac0fbc,erxes/erxes,"Merge branch 'deal-refactor-demo' of github.com:erxes/erxes into deal-refactor-demo
"
6721397c6ffc6e3ddb2f1eb7a98355ec083546df,erxes/erxes,"Merge branch 'feature-refactor-ui' into develop
"
d7762f8b25f5e6c6bb5f0057b277f7e865235a64,erxes/erxes,"Style some component, delete unused file
"
d1a284d3d5a9456c238903758e45ba71b9952ccc,erxes/erxes,"Merge branch 'feature-refactor-ui' into develop
"
15b1ebd47262fdb525906019bcf6bb22d1948073,erxes/erxes,"Refactor Button component, refactor inputs, icon
"
d239072dad736a9a3c234af4e2d10d3ae99d12bf,erxes/erxes,"Replace some any type
"
cf54ac6d9cac43111cb62bf7ba1bd8b9e717dcda,erxes/erxes,"Refactored company side bar counts
"
56237b46dac9757040f95c0dced666d0d9ea6d94,erxes/erxes,"Merge branch 'feature-refactor-ui' into develop
"
63d788035fe028fd2c1670c9cd0da85564df9388,erxes/erxes,"Refactor loading
"
7837c08343b73d313b9ccc942de39f72c411d3d6,erxes/erxes,"Merge pull request #661 from erxes/refactor-customer-sidebar

Refactor customer sidebar, #605"
6fba2a27b495ce41a9acab0b85aa504c7bbf976a,erxes/erxes,"Customer, Company, Inbox collapsible sections refactor
"
88372640aa39ad3a7550722c40f4d931f070eb8e,flarum/core,"Remove core key reorganization comments
"
e6485009661beaeba95af4237af18e4a0f765e81,kythe/kythe,"Update various Go dependencies.

Summary:
- Drop unused gogo protobuf reference from the WORKSPACE.
- Update bitbucket.org/creachadair/stringset to commit 95775871
- Update github.com/golang/sync to commit fd80eb99
- Update github.com/golang/snappy.git to commit 553a6414
- Update github.com/pborman/uuid.git to commit c65b2f87
- Update golang.org/x/tools/... to commit 5d2fd3cc
  (Corresponds to the 1.9 release branch)
- Update github.com/golang/text.git to commit 4e4a3210
- Update github.com/google/go-genproto.git to commit 2b5a72b8
- Update github.com/sergi/go-diff.git to commit da645544

Reviewers: shahms, #core_team, zarko

Reviewed By: #core_team, zarko

Subscribers: #core_team

Differential Revision: https://phabricator-dot-kythe-repo.appspot.com/D2182
"
76899d472202cabe1d2919a3fff20bde98c65116,lucee/Lucee,"improves https://luceeserver.atlassian.net/browse/LDEV-901
"
76cc01485246343f93e48e68ff3299760a2f7432,lucee/Lucee,"improve limited mode of CFMLExpressionInterpreter
"
41df12bb0987994faa7bec88858efc60770b3420,lucee/Lucee,"remove unnecessary ffmpeg jar
"
456b1c77a6ed2115764dc5ca32ebfbb520f81929,mjmlio/mjml,"Merge with master, add helper for conditional tag
"
96cb4c7b2eb2f95e475149d0b42c19902c21f727,movim/movim,"- New placeholder for the Chat page
- Load the contact from the URL for the pages Contact, News and Chat
- Fix a URL rewrite reset issue
- Put some new links in the UI
- Load the Roster spinner differently to prevent AngularJS issues
- Add a new get() method in WidgetBase
- Rewrite the Hello widget template
- New widget NotFound to display the 404 errors
"
10384917271a54745f8712acf384bd88796329ec,movim/movim,"- Refactor the global dispatcher to pake it more clean
"
a6e02228292fc59f846d42518ae331cb63902001,movim/movim,"- Fix a lot of little issues
- Rename the model Node to Item
- Handle more properly the nodes and chatrooms
- Fix Post rendering
- Create new templates
"
992689535ef75524a9e5b78e4cd39b1a5c4be7fa,movim/movim,"Move to promises to prevent freezes in the linker
"
a7ef8b1380fd9d24934cd0a1dacf4da341ddbaf0,movim/movim,"- Refactor the Admin panel and include WebSocket
- Put color in the daemon
- Add new tests to AdminTest
"
ebcb99d14655984bd48fc3ccd35d7aa7bdcb0ada,movim/movim,"- Merge with nodpounod
- Add a filter on the event system 
- Clean commented code
"
e4201a45266af44061a047cdb643e7e471474305,nismod/smif,"Reworked DataInterface to move narrative config into SosModel
"
67b7ca59c465c1fa8ba92637f8e37843af903153,nismod/smif,"Merge pull request #83 from willu47/refactor/builders

Refactor model builders"
49d90969678fa40a5d0aa4c085baa82b47e46a71,ntop/ntopng,"Improved discovery
Enlarged Redis bugger
"
9d4df13c1acdd4d8d5304f1b2349e4f9e1d15739,ntop/ntopng,"Reworked AddressTree implementation
"
2c641cf2869f7de5c328b20b82a2b8bd2e4a5bad,ntop/ntopng,"Refactors class Host in LocalHost and RemoteHost

Adds class RemoteHost

Moves alert fields to LocalHost

Adds initialize() function to LocalHost

Differentiates local/remote hosts in restore

Uses isLocalHost for lua host print

Removes debug prints
"
bcadcf033fa382aaf20a503ad5698ca23642f20c,ntop/ntopng,"Removed view interface (work in progress will be reintroduced after cleanup)
"
32780947f553d72f0d68088b47c217d511281ae1,ntop/ntopng,"Minor code cleanup
"
ca1d85c94e24e5c7e87846ccfe30847c4a518980,ntop/ntopng,"Make interface realtime refresh rate configurable
"
a22022bb30aad6d2848ae6b59fc46b4f638caa85,ntop/ntopng,"Reworks alerts to prevent local hosts I/O
"
e7ab4af605856e1e798e6985570c826449cd4207,ntop/ntopng,"Preferences improvements

- Add a Secondary DNS server
- Organize the featured DNS list into a table
- Split shaping directions only on advanced preferences
- Add redirection URL
"
d1668ac4c7fa6125d9e8ab5853a5981be306ff23,nunit/nunit,"apply rename refactoring
"
214d4f672cc5e49ee59182df756b0966f8ae8894,nunit/nunit,"Create separate mock-assembly project for the engine tests
"
abd4ad4cef19927ad43edecaadacb34079818445,nunit/nunit,"For some reason, this commit breaks Intellisense...


Revert accidental doc removal

https://github.com/nunit/nunit/commit/acdc5477eae0aa489331199ec07053c9e43b69f2#diff-773ff02e2f8e671f005e32bcf2e9d03eL44
Merge pull request #2304 from nunit/ChrisMaddock-patch-1

Revert accidental doc removal
Tests now work, namespace issue was preventing building.


Merge remote-tracking branch 'nunit-upstream/master' into issue-1151


Extended CollectionTally to keep track of both extra and missing items.


Basic collection differences now displayed.


Some test refactoring.


Hopefully caught them all this time.


Added test to ensure CollectionEquivalentConstraint returns a CollectionEquivalentConstraintResult.


Fixed some broken tests.


Add test to ensure that CollectionEquivalentConstraint makes use of new feature by default.


Added test files to all test projects.


Removed unnecessary include in csproj and removed unnecessary using statements in CollectionEquivalentConstraintResultTests.


Cleaned up some of the tests, added one more.


Added warning disable for linux builds.


Some cleaning up.


Rebased off of upstream/master, fixed one error after merging.

"
74d8c2147ff9165eca8fee22025a002d9883f8f8,nunit/nunit,"Split the installer into a tools installer and a framework installer

Cleaned up the features and ensure the dual installers work together
"
b99edf2fcf6725a99a92cce3b92cb6d1a1c1df4a,nunit/nunit,"Remove unnecessary using directives referencing System.Reflection from
nunit-framework
"
4a34a38c2afedee6f9554da78395833d241dffee,nunit/nunit,"Fix up linux sln to reflect renamed projects; add nunitlite tests
"
87ac8bc548a2559046e2271506b6ac5c0ca8ad92,nunit/nunit,"Move all building of test cases into the attributes and remove classes no longer needed
"
5579b9334926a583dac8ef7afd2da0b22a846231,oppia/oppia,"Fix part of #2863: Introduce Param Types (#3870)

* Merged to upstream/develop

* Remove mysterious help directory

* Introduces ParamSpecsObjectFactory for working with ParamSpecs through
an object interface.

* Introduces ParamSpecs to define a collection of parameter
specifications.

* Introduce an individual ParamSpec for parameters.

* Use helper createDefault function to create default parameter specs.

* Introduce differentiation between backend dict and the real ParamSpecs/ParamSpec objects.

* Make ParamSpecs python-representation more extensible for future object types.

* Use single-quotes as required by style guide.

* Fix identifier name to camel case.

* Fix whitespace lint errors.

* Fix file to end with single newline

* Fixes files to end with exactly one newline.

* Use helper method paramNames() instead.

* Improve formatting by using temporary variables.

* Fix indentation errors.

* Add convenience function ""addParamIfNew"" to simplify many usages.

* Use this where valid for readability.

* Update validation test to use new match against new error string.

* Improve formatting of validation error

* Fix indentation.

* Remove index argument since it isn't used.

* Fix typo in which param name is used.

* Fix copyright dates.

* Rename paramNames to getParamNames.

* Use forEach instead of map.

* Make paramSpecs a local object.

* Rename internal variable to differentiate from class name.

* Rename internal object to differentiate from class name.

* Rename internal object to differentiate from class name.

* Adds unit tests for ParamSpecsObjectFactory.

* Adds accessor for underlying object dict of ParamSpecs.

* Uses new accessor methods for param specs.

* Remove unused ParamSpecObjectFactory injection.

* Rename paramSpecsObjectDict to plain old paramSpecsDict for easier readability.

* Use paramDict instead, still retains useful info.

* Make regex matches less rigid.

* Make variables local.

* Fixes typo in parameter name.

* Fix parameter name.

* Add documentation to new classes.

* Fix indentation errors.

* Documentation for required arguments.

* Fix documentation and denote required arguments.

* Add accessor for paramDict

* Use forEach instead of for in, fixing bug which looped through array indicies instead of values.

* Fix settings_tab to use correct member.

* Use accessor method for objType

* Make note of good point to introduce Object Types

* Initial design of ParamType object.

* Add dependencies for ParamTypeObjectFactory

* Add missing parenthesis and semicolon

* Fix typo in getting UnicodeString from type registry.

* Get default type from an accessor instead of directly reaching into registry.

* Use single quotes

* Remove unused ParamValue object

* Fix getType typo.

* Use @member instead of @var

* Adds some unit tests for param types.

* Use single quotes for string

* More unit tests

* Fix indentation error

* Remove unused injection stuff from tests.

* Remove unused injection stuff from tests.

* Unnest specs

* Use toBe(true) instead of toBeTruthy()

* Use toBe(true/false) instead of toBeTruthy/Falsy

* Add test for frozen registry.

* Change ordering of constructor parameters.

* Organize member assignments to follow parameter order.

* Throw actual errors instead of strings.

* Fix typo in doc.

* Add test for trying to get a missing type.

* Use toBe(false)

* Better test cases for thrown Errors

* Remove type doc

* Make invalid value simpler.

* Break up lines to match other files.

* Introduce forEach helper method to simplify param access.

* Make documentation more consistent

* Fix typo in doc

* Remove resolved TODO

* Use objects to define types, and rename validateValue to valueIsValid

* Remove . match from regex

* Make name a ""private"" member.

* Make objType a ""private"" member.

* Make paramDict a ""private"" member.

* Add spacing in list.
"
44a7043034fd2245a3e788e4033795b3fafeae9f,oppia/oppia,"Split up jobs files to reduce time taken for backend tests.
"
7f8755ac74381a0373b5a1fba6f97f666a1a9cf8,oppia/oppia,"Move more modals to the angular-ui.bootstrap framework.
"
ccd41c2737dbb972534f760b3932180e92e04594,oppia/oppia,"Show number of views in exploration summary tiles. Unify backend methods for computing the data for these tiles.
"
cdddb9ca606f1baf7ff972cbd276635ec7b4a86c,oppia/oppia,"Clean up images folder.
"
3a2cf4509779080393143e62fb3234654c2a3f04,oppia/oppia,"Continue frontend refactor: move additional folders to the 'pages' directory. (#2510)

* Continue frontend refactor: move admin, dashboard, error, library, moderator, notifications dashboard, preferences, profile and signup pages.

* Move the editor and player folders to pages/.
"
d9e1592df52159123848cdaac93daac18d6d4462,oppia/oppia,"Fix part of #3826: Extract services from app.js (#4079)

* Add docstrings to core.domain.user_jobs_continuous.py

* Extract DeviceInfoService from app.js

* Extract WindowDimensionsService and UrlService from app.js

* Replace window by $window, so possible to mock it for unit test.

* Remove extra line.

* Remove currentLocationService from app.js
"
a13c5c352aa2f6bdc79864b7c8fb6d6fc4567d86,oppia/oppia,"(Partially) Fix #2100: add cache slugs. (#2208)

* Added cache slugs for images and modified all references to the images.

* Added interpolation service to get static image url, modified non-page level html files and corresponding directives/controllers to use it, addressed review comments

* Modified /script tags

* Added cache slugs for i18n

* Fixed failing test and added i18n/prod to git ignore.

* Cache slugs new approach POC

* Modified references for images, scripts and i18n.
Added methods to return static resource url.
Modified app.yaml.

* Modified gulp file and references to oppia.css and third_party css and js files.

* Added slugs to extensions

* Fixed test for get_cache_slug

* Modified build.py and deploy.py

* Addressed review comments

* Modify imports

* Modified src to ng-src and other review comments fixed.

* Modified build.py

* Minor change

* Removed feconf.CACHE_SLUG_DEV and refactored

* Added random cache slug

* Refactored code.

* Modified references for extensions, added extensions to build process and refactored methods in UrlInterpolationService

* Fixed bug

* Addressed review comments.

* Fix failing tests

* Fixed bug.

* Added tests for urlinterpolationservice.

* Added interpolation for interactions and logic_proof.html

* Addressed review comments

* Addressed review comments

* Removed unnecessary include from templates

* Modified precommit linter script to fix endless waiting

* Commented script and added assets/scripts to exclusions.
"
6ad46ad24b4eeab03d49a9df5d7dd8fe139db190,oppia/oppia,"Remove unnecessary code in exploration export to python dict test
"
81d9528d3c7e411a2454ecb23389336617967596,oppia/oppia,"Playthrough Visualisation: Milestone 3.3 (Part 2) (#5511)

* Remove flag

* Use config values instead of constants

* Basic e2e test

* Lint fix

* Addressed changes

* Fixes

* New e2e tests

* Playthrough service fixes

* Add waitfor after library.get() calls

* waitFor calls

* Create new exploration instead of loading demo

* Changes

* Fixed e2e tests

* Fixes to e2e test

* Fixed e2e tests

* Fixes one failure

* Fixed action numbering

* Changes

* Fixed import error

* Changes

* Fixes everything finally
"
672519b55af9f5d3bf345d6245d3e8f51becdad2,oppia/oppia,"Merge pull request #1283 from oppia/num-views-in-gallery

Show number of views in exploration summary tiles. Unify backend meth‚Ä¶"
22cdf4a7266f72f5a6a4e0ed1ec787f5ddce3fed,oppia/oppia,"Merge branch 'develop' into refactor-jobs

Conflicts:
	scripts/backend_tests.py
"
450143cbbcd65a6b6fa4df37a091363ac1826683,oppia/oppia,"Merge branch 'develop' of https://github.com/oppia/oppia into validator-refactor
"
6db0d7bcab89b8e6f4a79a030e80e3015cf6e7d0,oppia/oppia,"Move initial parameter evaluation to use the client-side framework.
"
a3480a1901619ae61a90898b1804c2f0e5117545,oppia/oppia,"Replace the images on the splash page with generic ones.
"
baa60ddf63997a91286d988d650945a51dac5c99,oppia/oppia,"Refactor handling of learner and Oppia avatars; fix race condition with learner avatar image.
"
b853865c407938bf2de01a3512c1bf4582a759f9,oppia/oppia,"Refactoring current active input management
"
bfcb13940c809132ae99f65d5b005eac5fc4fa3c,oppia/oppia,"Fix #2380: remove js inlining from objects/templates (#2393)

* Included script tag in interaction template

* Included js for interactions in the html with cache slug

* Moved validator.js for each exploration to template file and only inline base validator js

* Added png to extensions to copy to build folder for extensions.

* removed inlined js script for objects/templates

* Added objects/ to exploration_editor.html
"
8ebceca949b278776ad1c8969a65f28972685250,oppia/oppia,"Extensions refactor (#4620)

* Small refactors and improvements

* lint fix

* removed useless print

* fixed backend test
"
3736e947b0817ac99b8306882ff82e2502714dfd,oppia/oppia,"Fix  #3771: Remove fallbacks (#3772)

* remove frontend instances of fallbacks

* Remove instances of fallbacks from backend

* fix tests

* Remove TriggerInstance

* remove trigger_registry

* remove unnecessary dependencies
"
1566856e3a938d3b7c4cb85d8daa068ec19829cb,prmr/JetUML,#253 Rename Graph to Diagram
d041f63470fa9cf0209cc677319bba02c9cb07f4,prmr/JetUML,"#52 Cleaned up code to eliminate nearly all of the Checkstyle warnings.
"
0fd9122534b955659d73408862d89f54674c7d0e,prmr/JetUML,#253 Remove unused resources
ce1c5e99d52bcffb7e34f694b91983267ccb5f5e,qreal/qreal,"Small refactoring for generators: control flow generator was separated from general one
"
9e2e27c027c05f4917f97fc77f965abcf2aca7c1,qreal/qreal,"clean-up for NXT flashing, not it's kinda works. also added timestamp to Error
"
892c74c48f600faeb5f6a52c0385df2ca3643ecc,qreal/qreal,"Cleaner infrastructure for unit tests for qrgui, stubs for GraphicalPartModel (not compilable yet)
"
d75965c5ac3e28c8497fd8abd8a86c3f03737fae,qreal/qreal,"second stage of include paths refactoring, finished qrgui and qrxc
"
885aca52f83e06ed59b817233a20decfcd9f47d6,qreal/qreal,"Moving the code for references deletion from MainWindow
"
c9fa3a1acdd00226d7ab22c56cdfab899f35b1ad,qreal/qreal,"Merge branch 'generators-refactoring' of github.com:dvvrd/qreal into generators-refactoring

Conflicts:
	plugins/robots/generators/nxt/nxtOsekCGenerator/nxtOsekCGeneratorPlugin.cpp
	plugins/robots/generators/nxt/nxtRussianCGenerator/nxtRussianCGeneratorPlugin.cpp
	plugins/robots/generators/trik/trikGeneratorBase/src/parts/trikVariables.cpp
	plugins/robots/generators/trik/trikGeneratorBase/src/parts/trikVariables.h
	plugins/robots/generators/trik/trikGeneratorBase/src/trikGeneratorFactory.cpp
	plugins/robots/generators/trik/trikGeneratorBase/src/trikGeneratorFactory.h
	plugins/robots/generators/trik/trikQtsGenerator/trikQtsGenerator.pro
	plugins/robots/generators/trik/trikQtsGenerator/trikQtsGeneratorPlugin.h
	plugins/robots/interpreters/commonTwoDModel/commonTwoDModel.pri
	plugins/robots/interpreters/interpreterBase/interpreterBase.pri
"
e6979b0fd4b270f6c87a4386d469c0d4ecd31ac5,qreal/qreal,"1)refactoring of simpleCode() (without init code and terminate code)
2)generation of sensor1..sensor4
3)correct generation of sensor in FunctionBlock
"
c9e2eb144b8fc0f514f3887956d9ed7365c04ad1,qreal/qreal,"UXInfo module moved to separate plugin
"
ab34d816ade3bc765ad261aa908c99debac6cda8,qreal/qreal,"PrepareMarker and RemoveMarker renamed to MarkerDown and MarkerUp
"
11dd12632542ecdb7ae1f4e93f879bbec5f0b8fe,qreal/qreal,"Made semantic analyzer be called even for cached ASTs (since underlying runtime may change), made identifiers() use semantic analyzer instead of interpreter
"
4ad1753903e7b07e877f4b03c954ac21745cccef,qreal/qreal,"Removed commented out code
"
8c406fbf75709c7f050b0d034312ec417a8e125b,qreal/qreal,"Extract methods ProjectManager::save and ::saveOrSuggestToSaveAs
"
d4dfe2348c29d722709b0696446d0f0ad0b03342,qreal/qreal,"Added ability to clear language toolbox state, shall used between launches of interpreter or generator to make it take into account code changes
"
c23b66ae5c7012d734c1883d9e4a3201f98cbe97,qreal/qreal,"fixed some problems with refactoring search, added applying add prefix rule
"
8ffa6f6c74db6d5e9a71ceff3bbdb3ef269fb497,qreal/qreal,"Merge branch 'master' of github.com:qreal/qreal into gui-refactoring

Conflicts:
	plugins/tools/visualInterpreter/visualInterpreter.pro
	qreal.pri
	qrgui/editor/editorView.cpp
	qrgui/editor/editorViewScene.cpp
	qrgui/editor/editorViewScene.h
	qrgui/mainWindow/mainWindow.cpp
	qrgui/mainWindow/modelExplorer.cpp
	qrgui/mainWindow/modelExplorer.h
	qrgui/mainWindow/shapeEdit/shapeEdit.h
	qrgui/pluginManager/listenerManager.h
	qrgui/textEditor/codeEditor.h
"
81e3121eb09010375783d13e8c4c853686a34ffd,scala/scala,"Merge branch 'issue/5054-usecase-cleanup'

Conflicts:
	test/scaladoc/scala/html/HtmlFactoryTest.scala
"
870131bf4b38104498a56a9a26dbbd1205cfb97f,scala/scala,"Rename AssignOrNamedArg to NamedArg
"
a7a1e3a1959f26c9b44b40b328ef217b4ebdbaba,scala/scala,"Various improvements to SIP 18 diagnostics. Made scala library and compiler feature clean.
"
5f5029d2ac6348ecb07fc11f6656621c662ced92,scala/scala,"Optimizing TypeRef, starting with Symbols.

There are too many potential optimizations unavailable to us due to the
lack of bright lines among different kinds of symbols. For instance the
difference between a TypeSymbol which represents a type alias and one
which represents an abstract type is only whether the DEFERRED flag
is set. This creates issues.

1) There are many (many) places where tests are performed on every symbol
which could be done more efficiently and (especially) more verifiably
correctly with polymorphism.

2) TypeRefs based on those symbols are also checking that flag
constantly, in perpetuity. A symbol created as an alias is never (to the
best of my knowledge) going to intentionally morph into one representing
an abstract type, nor vice versa.

3) One has no guarantees, because anyone can set or reset the DEFERRED
flag at any time.

So tackling more than one problem at once herein:

1) I created canonical symbol creation points which take the flags as
an argument, so that there can be a difference between initializing a
symbol's flags and setting/resetting them at arbitrary times.

2) I structured all the symbol creators to take arguments in the
same order, which is:

  def newXXX(name: Name, ..., pos: Position = NoPosition, flags: Long = 0L)

(Where ""..."" is for those symbols which require something
beyond the name to create, such as a TypeSkolem's origin.)
The name is first because it's the only always required argument.
I left but deprecated the variations which take (pos, name).

3) I created subclasses of TypeRef based on the information which
should be stable from creation time onward:

  - args or no args?
  - abstract type, type alias, or class?

2x3 == 6 and that's how many subclasses of TypeRef there are now. So
now, for example, every TypeRef doesn't have to carry null symInfoCache
and thisInfoCache fields for the benefit of the minority which use them.
I still intend to realize the gain possible once we can evade the fields
for pre and args without losing pattern matcher efficiency.
"
8906a074620568db26ba449296031dd3477d8b72,scala/scala,"Assorted fixes

Multiple fixes that have been accumulated during my investigations of 5273.
Too heterogeneous to describe here, too minor to split into changesets.
"
e78896f0ab7240e9bdcd98c51cbf6bc0ea277950,scala/scala,"Read version 51 (JDK 7) class files.

This commit makes the ClassFileReader/ICodeReader parse class files
from JDK 7 (class file version 51). It does that by skipping over
the method handle related entries in the constant pool and by doing
some dummy processing on invoke dynamic instructions. The inliner
is updated to not try to inline a method with an invoke dynamic
instruction. A place holder INVOKE_DYNAMIC instruction is added to ICode
but it is designed to create an error if there's ever any attempt to
analyze it. Because the inliner is the only phase that ever tries
to analyze ICode instructions not generated from Scala source and
because Scala source will never emit an INVOKE_DYNAMIC, the place
holder INVOKE_DYNAMIC should never cause any errors.

A test is included that generates a class file with INVOKE_DYNAMIC
and then compiles Scala code that depends on it.
"
379384c887b01e6e8b48de671d4b2a99b6fdf520,scala/scala,"Unreachability analysis for pattern matches

Analyze matches for unreachable cases.

A case is unreachable if it implies its preceding cases.
Call `C` the formula that is satisfiable if the considered case matches.
Call `P` the formula that is satisfiable if the cases preceding it match.
The case is reachable if there is a model for `-P /\ C`.
Thus, the case is unreachable if there is no model for `-(-P /\ C)`,
or, equivalently, `P \/ -C`, or `C => P`.

Unreachability needs a more precise model for type and value tests than exhaustivity.
Before, `{case _: Int => case 1 =>}` would be modeled as `X = Int \/ X = 1.type`,
and thus, the second case would be reachable if we can satisfy `X != Int /\ X = 1.type`.
Of course, the case isn't reachable, yet the formula is satisfiable, so we must augment
our model to take into account that `X = 1.type => X = Int`.

This is done by `removeVarEq`, which models the following axioms about equality.
It does so to retain the meaning of equality after replacing `V = C` (variable = constant)
by a literal (fresh symbol). For each variable:
 1. a sealed type test must result in exactly one of its partitions being chosen
    (the core of exhaustivity)
 2. when a type test is true, tests of super types must also be true,
    and unrelated type tests must be false

For example, `V : X ::= A | B | C`, and `A => B` (since `A extends B`).
Coverage (1) is formulated as: `A \/ B \/ C`, and the implications of (2) are simply
`V=A => V=B /\ V=X`, `V=B => V=X`, `V=C => V=X`.

Exclusion for unrelated types typically results from matches such as `{case SomeConst =>
case OtherConst => }`. Here, `V=SomeConst.type => !V=OtherConst.type`. This is a
conservative approximation. If these constants happen to be the same value dynamically
(but the types don't tell us this), the last case is actually unreachable. Of course we
must err on the safe side.

We simplify the equality axioms as follows (in principle this could be done by the
solver, but it's easy to do before solving). If we've already excluded a pair of
assignments of constants to a certain variable at some point, say `(-A \/ -B)`, then
don't exclude the symmetric one `(-B \/ -A)`. (Nor the positive implications `-B \/ A`,
or `-A \/ B`, which would entail the equality axioms falsifying the whole formula.)

TODO: We should also model dependencies between variables: if `V1` corresponds to
`x: List[_]` and `V2` is `x.hd`, `V2` cannot be assigned at all when `V1 = null` or
`V1 = Nil`. Right now this is implemented hackily by pruning counter-examples in exhaustivity.
Unreachability would also benefit from a more faithful representation.

I had to refactor some of the framework, but most of it is shared with exhaustivity. We
must allow approximating tree makers twice, sharing variables, but using different
approximations for values not statically known. When considering reachability of a case,
we must assume, for example, that its unknown guard succeeds (otherwise it would wrongly
be considered unreachable), whereas unknown guards in the preceding cases must be
considered to fail (otherwise we could never get to those case, and again, it would
falsely be considered unreachable).

Since this analysis is relatively expensive, you may opt-out using `-Xno-patmat-analysis`
(or annotating the selector with @unchecked). We hope to improve the performance in the
near future. -Ystatistics has also been extended to provide some numbers on time spent in
the equality-rewrite, solving and analyzing.
"
e9f1ccb0308f207303af2507415379c4d8dbcd6a,scala/scala,"This addresses a few long standing irritations ...

This addresses a few long standing irritations with jline, rewriting
chunks of it along the way. No longer does columnar output spill over
and double space everything if you're unlucky with the chosen widths.
Pagination works for a higher definition of work. Etc.

Also, for those who enjoy operating missile systems from their repls,
crash recovery now requests your permission before replaying the
session.

Closes #4194, no review.

"
4d6be05c28c95dcd26922059d773a8bfed6014ef,scala/scala,"Make -Ytyper-debug output readable.
"
1950412f6d4118433408444ace371eb020342711,scala/scala,"Merge pull request #5252 from adriaanm/t8339

SI-8339 remove deprecated rewrite of withFilter -> filter"
5df51cc5a6ead1f9d68d1e988cda3a1698daf708,scala/scala,"Some modest optimizations and beauty treatments.

No review.

"
9812c7d3c9dc10ed2e96499c755657ca5bd90ddb,scala/scala,"Add bridges for overridden methods in lambda indy call

If a SAM trait's abstract method overrides a method in a
supertrait while changing the return type, the generated
invokedynamic instruction needs to pass the types of the
overridden methods to `LambdaMetaFactory` so that bridge
methods can be added to the generated lambda.

SAM `Function` trees now have a synthetic `ClassSymbol`,
into which we enter an overriding concrete method symbol
that represents the runtime LMF-generated implementation
of that function. `erasure` then computes bridge methods
for that class, which are added to the `LMF.metafactory`
call in `jvm`.

Java does this instead by generating a default method in
the subinterface overriding the superinterface's method.
Theoretically, we could generate the bridges in the same
way, but that has the downside that the project with the
interfaces would need recompiled, which might not be the
project that creates the lambdas. Generating bridges the
LMF way means that only the classes affected by this bug
need to be recompiled to get the fix.

Honestly I'm surprised that this hasn't come up already.

Fixes scala/bug#10512.
"
1aa97cb81b96cbf1e7b7b2cd42dd5bd3d8e5c6dd,scala/scala,"Make lambda body public rather than using static accessor

Under -Ydelambdafy:method (the basis of the upcoming ""indylambda""
translation for -target:jvm-1.8), an anonymous function is currently
encoded as:

 1. a private method containing the lambda's code
 2. a public, static accessor method that allows access to 1 from
    other classes, namely:
 3. an anonymous class capturing free variables and implementing
    the suitable FunctionN interface.

In our prototypes of indylambda, we do away with 3, instead deferring
creating of this class to JDK8's LambdaMetafactory by way of an
invokedynamic instruction at the point of lambda capture. This
facility can use a private method as the lambda target; access is
mediated by the runtime-provided instance of
`java.lang.invoke.MethodHandles.Lookup` that confers the privelages
of the lambda capture call site to the generated implementation class.
Indeed, The java compiler uses this to emit private lambda body
methods.

However, there are two Scala specific factors that make this
a little troublesome.

First, Scala's optimizer may want to inline the lambda capture
call site into a new enclosing class. In general, this isn't a
safe optimization, as `invokedynamic` instructions have call-site
specific semantics. But we will rely the ability to inline like
this in order to eliminate closures altogether where possible.

Second, to support lambda deserialization, the Java compiler creates
a synthetic method `$dersializeLamda$` in each class that captures
them, just to be able to get the suitable access to spin up an
anoymous class with access to the private method. It only needs
to do this for functional interfaces that extends Serializable,
which is the exception rather than the rule. But in Scala, *every*
function must support serialization, so blindly copying the Java
approach will lead to some code bloat.

I have prototyped a hybrid approach to these challenges: use the
private method directly where it is allowed, but fall back to
using the accessor method in a generic lambda deserializer or
in call sites that have been inlined into a new enclosing class.

However, the most straight forward approach is to simply emit the
lambda bodies as public (with an mangled name and with the SYHTNETIC
flag) and use them in all cases. That is what is done in this commit.

This does moves us one step backwards from the goals of SI-7085,
but it doesn't seem sensible to incur the inconvenience from locking
down one small part of our house when we don't have a plan or the
budget to complete that job.

The REPL has some fancy logic to decompile the bodys of lambdas
(`:javap -fun C#m`) which needed tweaking to accomodate this change.
I haven't tried to make this backwards compatible with the old
encoding as `-Ydelambdafy:method` is still experimental.
"
8f0d3e3e775812b89c4f4641931ca90c9f47afd1,scala/scala,"Separate shell from compiler, reduce mutation

The shell (ILoop) should only depend on the repl (IMain),
and not on the rest of the compiler. Working towards a
stable API that multiple frontends could use to provide
a shell on top of a repl-oriented compiler (in the same
vein as IDEs built on the presentation compiler).

Move config/settings out of package object, and into
ShellConfig / ReplReporterConfig.

IMain should not do any reporting to the console,
just send strings / trees to frontend, which will
then send it to output (colorizing where required).

TODO:
  - bring back color output by parsing trees received
    by shell from imain

Misc:
  - Rename unwrap to rootCause
  - Direct way to make welcome message reproducible for tests
  - paste prints a bit more prompt
"
a82a56ea5ba1ff0fb3b69c0963d4aec620ab68ad,scala/scala,"Drop flags that change language semantics

To reduce the many possible combination of these flags,
the only supported mechanism that affects the outcome of
type checking is `-Xsource`, which instructs the compiler
to mimic the given version as much as possible. We only
support this for one prior and one subsequent version
(e.g., 2.13 recognizes 2.12 and 2.14 source levels).

The following flags have been dropped:
  - `-Xfull-lubs`
  - `-Xstrict-inference`
  - `-Yinfer-argument-types`
  - `-Yno-adapted-args`
  - `-Yoverride-objects`
  - `-Yoverride-vars`
  - `-Yvirtpatmat`

We're exceptionally dropping a few obscure `-X` flags
without prior deprecation. `-Y` flags are always at our whim.
"
82dc21078e7aa6215ed32b79dece3b4c626ebea6,scala/scala,"Merge commit 'refs/pull/1844/head' into merge/pr-1844

* commit 'refs/pull/1844/head':
  macroExpandAll is now triggered by typed
  SI-5923 adapt macros when they are deferred
  generalizes macroExpand
  typedPrimaryConstrBody now returns supercall
  more precise errors for macros
  parentTypes => typedParentTypes
  changes isTermMacro checks to something more universal
  fixes printing of AppliedTypeTree
  adds Trees.replace(Tree, Tree)
  makes macro override error more consistent
  refactors handling of macros in repl
  SI-5903 extractor macros do work
  adds c.macroRole

Conflicts:
	src/compiler/scala/tools/nsc/typechecker/Macros.scala
	src/compiler/scala/tools/nsc/typechecker/Typers.scala
"
1b98d1fa2a54dc1d8fafed6d270534d729420c21,scala/scala,"low-hanging optimization fruit for virtpatmat

removed unnecessary zero that was added to all matches...

providing runOrElse's type args explicitly: speeds up compilation,
removes hacks needed to bootstrap

a bit of clean up to keep a list of list of treemakers, which encodes
the match, until the last possible moment this list of list is going to
be the subject of the analyses coming next

no review

"
b85c9a722ce56ebfb6e41cea7a7387126286b187,scala/scala,"Rename -Yopt to -opt, -Yopt-warnings to -opt-warnings

Keep -Yopt-inline-heuristics and -Yopt-trace unchanged
"
4a727f3b01d0fa27ef51f7dba472116e021e3445,scala/scala,"Collections refactoring.

"
1da48a45b62879c2bd2904342eeff7e6e568350a,scala/scala,"Eliminate a pile of -Xlint warnings.

Some unused private code, unused imports, and points where
an extra pair of parentheses is necessary for scalac to have
confidence in our intentions.
"
bb817a67b99253662f42f788555a3617310a52a0,scala/scala,"Yet more code for scrutinizing the pattern matc...

Yet more code for scrutinizing the pattern matcher, and a couple minor
duplication/dead-code cleanups seen elsewhere.

"
e2fac0ac4aa7d4a580deaeb42396195dec573031,scala/scala,"Import selector respects backquotes

To disambiguate backquoted underscore, the convention
for ImportSelector is tweaked by using EMPTY instead of
WILDCARD as the special value. So EMPTY => EMPTY is
wildcard import, nonempty => EMPTY is hidden.

This encoding also avoids a null value for the rename field.

A rename is detected more simply by name != rename.

Underscore is not an identifier

Don't take `val _: T` as defining a member or variable
with that name.

Tweak encoding of import selector

Use (WILDCARD, null) for wildcard as now,
and (WILDCARD, other) for backticked underscore,
which may be a rename.

Introduce some helpers on ImportSelector
to keep it straight.

Fix paradise
"
2ca7d4ff90fedcd2dba654100bd8d6ce1f1ad36b,scala/scala,"Symbols making friends with Polly Morphism.

Since I have established (no small effort, this) that there is no need
for certain important flags to be mutable for the entire lifetime of a
symbol, I have codified this knowledge by moving it out of the flags
entirely and into the inheritance hierarchy where its constant nature
can find true happiness.

     AliasTypeSymbol ... it's an alias (forever!)
  AbstractTypeSymbol ... it's an abstract type (forever!)

The only time DEFERRED is inspected is if the generic creation function
is called (e.g. ""newTypeSymbol"", not ""newAliasType"") in which case the
presence of the flag is used to determine which symbol to create. This
is mostly for legacy support.

Certain symbols were being created inconsistently with the others. Now
every symbol is created by invoking a creation method on the owner, with
the exception of FreeVar. I changed the owner of those from RootClass
to NoSymbol because there is no reason for them to pollute the symbol
hierarchy at the root.

The signature of cloneSymbolImpl is now

  def cloneSymbolImpl(owner: Symbol, newFlags: Long): Symbol

There is an overload with the old signature which calls that one with no
flags. With this step, every symbol creation in trunk is performed with
knowledge of the initial flags, opening the door to many optimizations
in the Symbol and Type logic, not to mention boosting my sanity by at
least five sanity points.
"
228225c5387fb51c46faddd503a1d94b60a5a609,scala/scala,"Fix for #1749; removed some dead code related t...

Fix for #1749; removed some dead code related to regexp patterns.

"
ca9d2149e964604daf3a8d88d6946217ef90c643,scala/scala,"removes front ends from scala-reflect.jar

It was an interesting idea to give macro developers control over front ends,
but it hasn't given any visible results.

To the contrast, front ends have proven useful for toolboxes to easily control
what errors get printed where.

Therefore I'm moving front ends to scala-compiler.jar to clean up the API.
Yay for scaladoc-driven development!
"
76f3885ac875f03738092157bba5a640698b156a,scala/scala,"Merge pull request #778 from adriaanm/topic-virtpatmat

patmat bugfixes and minor clean ups"
2edbf55c114c0eed66b8bbb05e56ef6b262aa62b,scala/scala,"More minor removals and some cleanups of !!!s a...

More minor removals and some cleanups of !!!s and XXXs.

"
b380f9ecbe1be8ffaf0f32001e95566747017294,scala/scala,"Merge pull request #2226 from adriaanm/pr-2208-rework

[rework] Modularized scaladoc and presentation compiler."
926e8f976c62b9d0b879b945a1c02155c8f157a8,scala/scala,"Merge pull request #6505 from adriaanm/drop-why-flags

Drop -Y flags that change language semantics"
e077c24525bf8f9bd8b73684e630eb7fc6bcb5f6,scala/scala,"SI-9390 Emit local defs that don't capture this as static

This avoids unnecessary memory retention, and allows lambdas
that call the local methods to be serializable, regardless of
whether or not the enclosing class is serializable.

The second point is especially pressing, given that the enclosing
class for local methods defined in a used to be the (serializable)
anonymous function class, but as of Scala 2.12 will be the enclosing
class of the lambda.

This change is similar in spirit to SI-9408 / 93bee55e.
"
8bc9e64be76cc4e32165acdc44f05f77da150494,scala/scala,"Optimize Array[String].map
"
4380911a32eb7fa99faf5fea4ba5f9ad6a3a5258,scala/scala,"Removed long deprecated and obscure CloneableCo...

Removed long deprecated and obscure CloneableCollection. Discovered
we have a scala.collection.mutable.Cloneable which does not extend
java.lang.Cloneable, which is why Array is not considered cloneable.
That seems wrong, but to be conservative I gave Array the Cloneable
interface without altering the scala trait.

Also, if @serializable is deprecated in favor of Serializable,
should not @cloneable be deprecated analogously? Closes #4307, and a
commit-question review by rytz.

"
682fec0ef8361bdb93de3bfe3c1f3712cc15b36f,scala/scala,"Implementation of byname implicits with recursive dictionaries

This is an implementation of byname implicit parameters with recursive
dictionaries, intended as a language-level replacement for shapeless's
Lazy type. As of this commit, implicit arguments can be marked as byname
and at call sites recursive uses of implicit values are permitted if
they occur in an implicit byname argument.

Consider the following example,

  trait Foo { def next: Foo }
  object Foo {
    implicit def foo(implicit rec: Foo): Foo =
      new Foo { def next = rec }
  }
  val foo = implicitly[Foo]
  assert(foo eq foo.next)

In current Scala this would diverge due to the recursive implicit
argument rec of method foo. Under the scheme implemented in this commit
we can mark the recursive implicit parameter as byname,

  trait Foo { def next: Foo }
  object Foo {
    implicit def foo(implicit rec: => Foo): Foo =
      new Foo { def next = rec }
  }
  val foo = implicitly[Foo]
  assert(foo eq foo.next)

and recursive occurrences of this sort are extracted out as val members
of a local synthetic object as follows,

  val foo: Foo = scala.Predef.implicitly[Foo](
    {
      object LazyDefns$1 {
        val rec$1: Foo = Foo.foo(rec$1)
                         //      ^^^^^
                         // recursive knot tied here
      }
      LazyDefns$1.rec$1
    }
  )
  assert(foo eq foo.next)

and the example compiles with the assertion successful. Note that the
recursive use of rec$1 occurs within the byname argument of foo and is
consequently deferred. The desugaring matches what a programmer would do
to construct such a recursive value explicitly.

This general pattern is essential to the derivation of type class
instances for recursive data types, one of shapeless's most common
applications.

Byname implicits have a number of benefits over the macro implementation
of Lazy in shapeless,

+ the implementation of Lazy in shapeless is extremely delicate, relying
  on non-portable compiler internals. By contrast there is already an
  initial implementation of byname implicits in Dotty:
  https://github.com/lampepfl/dotty/issues/1998.
+ the shapeless implementation is unable to modify divergence checking,
  so to solve recursive instances it effectively disables divergence
  checking altogether ... this means that incautious use of Lazy can cause
  the typechecker to loop indefinitely. The byname implicits
  implementation is able to both solve recursive occurrences and check for
  divergence.
+ the implementation of Lazy interferes with the heuristics for solving
  inductive implicits in #6481 because the latter depends on being able to
  verify that induction steps strictly reduce the size of the types being
  solved for; the additional Lazy type constructors make the type appear
  be non-decreasing in size. Whilst this could be special-cased, doing so
  would require some knowledge of shapeless to be incorporated into the
  compiler. Being a language-level feature, byname implicits can be
  accommodated directly in the induction heuristics.
+ in common cases more implicit arguments would have to be marked as
  Lazy than would have to be marked as byname under this PR due to
  restrictions on what the Lazy macro is able to do. Given that there is a
  runtime cost associated with capturing the thunks required for both Lazy
  and byname arguments, any reduction in the number is beneficial.
"
0170e73775bb35fa27fd592028ff53817b78c457,scala/scala,"Merge pull request #6209 from retronym/faster/december

Assorted compiler optimizations"
b7242013830510776fbb93bbf0e883532133030c,scala/scala,"Rip out reporting indirection from CompilationUnit

Inline the forwarders from CompilationUnit, which should not affect behavior.
Since all forwarders lead to global.reporter, don't first navigate
to a compilation unit, only to then forward back to global.reporter.

The cleanup in the previous commits revealed a ton of confusion
regarding how to report an error.

This was a mechanical search/replace, which has low potential for messing
things up, since the list of available methods are disjoint between
`reporter` and `currentRun.reporting`. The changes involving `typer.context`
were done previously.

Essentially, there are three ways to report:
  - via typer.context, so that reporting can be silenced (buffered)
  - via global.currentRun.reporting, which summarizes (e.g., deprecation)
  - via global.reporter, which is (mostly) stateless and straightforward.

Ideally, these should all just go through `global.currentRun.reporting`,
with the typing context changing that reporter to buffer where necessary.

After the refactor, these are the ways in which we report (outside of typer):
  - reporter.comment
  - reporter.echo
  - reporter.error
  - reporter.warning
  - currentRun.reporting.deprecationWarning
  - currentRun.reporting.incompleteHandled
  - currentRun.reporting.incompleteInputError
  - currentRun.reporting.inlinerWarning
  - currentRun.reporting.uncheckedWarning

Before:
  - c.cunit.error
  - c.enclosingUnit.deprecationWarning
  - context.unit.error
  - context.unit.warning
  - csymCompUnit.warning
  - cunit.error
  - cunit.warning
  - currentClass.cunit.warning
  - currentIClazz.cunit.inlinerWarning
  - currentRun.currentUnit.error
  - currentRun.reporting
  - currentUnit.deprecationWarning
  - currentUnit.error
  - currentUnit.warning
  - getContext.unit.warning
  - getCurrentCUnit.error
  - global.currentUnit.uncheckedWarning
  - global.currentUnit.warning
  - global.reporter
  - icls.cunit.warning
  - item.cunit.warning
  - reporter.comment
  - reporter.echo
  - reporter.error
  - reporter.warning
  - reporting.deprecationWarning
  - reporting.incompleteHandled
  - reporting.incompleteInputError
  - reporting.inlinerWarning
  - reporting.uncheckedWarning
  - typer.context.unit.warning
  - unit.deprecationWarning
  - unit.echo
  - unit.error
  - unit.incompleteHandled
  - unit.incompleteInputError
  - unit.uncheckedWarning
  - unit.warning
  - v1.cunit.warning

All these methods ended up calling a method on `global.reporter`
or on `global.currentRun.reporting` (their interfaces are disjoint).

Also clean up `TypeDiagnostics`: inline nearly-single-use private methods.
"
e337bfca56572b88dbc75a0e5d20f862be5f4ce0,scala/scala,"Merge pull request #2336 from retronym/topic/deprecated-inheritance-tweak

SI-7312 @deprecatedInheritance now ignores same-file subclasses"
0cd7a6726cdbeac247d0a41d0b8a958baf5d57f7,scala/scala,"Some logging cleanup.

Quieting things down.  Fixed some things revealed by quieter
logs, like forwarders being generated for superaccessors.
"
5d56f69ffc07ae96347b5a0a6c1dd5c17cfaa8df,scala/scala,"Proxy-based serialization for all collections

- Provide a `DefaultSerializationProxy` for all collection kinds.

- Remove `List.SerializationProxy` (the new default proxy is equally
  good for `List`).

- Remove unnecessary `SerialVersionUID` annotations and `Serializable`
  mix-ins: All collections are `Serializable` (via `Iterable`) and
  use a serialization proxy by default.

- Add missing `toFactory` and `toBuildFrom` conversion to some
  non-standard factory objects (e.g. `IntMap`). `toFactory` is needed
  for `DefaultSerializationProxy`.

- Re-enable self-serialization (not using the default proxy) for
  `Range`, `NumericRange`, `View`, `StringBuilder` and both
  `ArraySeq`s.

- Re-enable self-serialization for `Enumeration.ValueSet` to avoid some
  cyclic dependencies during deserialization which can make proxies
  leak and cause a `ClassCastException`. I was unable to come up with a
  solution to all such problems (see `run/enums.scala`).

- Use an `Array` instead of a `Seq` in
  `Manifest.IntersectionTypeManifest` to avoid cyclic dependencies
  during deserialization.

- Add a custom proxy to `BitSet` for compact serialization of the
  internal structure.

- Add a custom proxy for mixed strict and lazy serialization of
  `LazyList` and `Stream`. A forced init is stored sequentially to
  prevent stack overflows, the unevaluated tail is serialized in
  structural form to preserve laziness.

- Make iterators of `IndexedSeqView`, `Range` and `NumericRange`
  serializable."
1850ddf380789e364813111282af5ff11e65b52c,scala/scala,"Corralling Modes into a smaller pen.

Attempting to reduce the frequency of low-level operations
with modes. I mean stuff like this:

  if ((mode & (EXPRmode | LHSmode)) == EXPRmode)

THey don't make those ten line boolean guards any easier
to understand. Hopefully this will lead us toward eliminating
some of the modes entirely, or at least better isolating
their logic rather than having it interspersed at arbitrary
points throughout the typer.

Modes are in their entirety a leaked implementation detail.
Typing a tree requires a tree and optionally an expected type.
It shouldn't require a bucket of state bits. In subsequent
commits I will start eliminating them.

This commit also breaks adapt down into more digestible chunks.
"
07b35f671e36a681583548c6abc209913c07fec5,scala/scala,"Refactored SuperSabbus' targets to be finer gra...

Refactored SuperSabbus' targets to be finer grained and permit better
dependency management (with JVM 1.4 and MSIL support in mind). First
effort of refactoring the classpath handling: tools are run with the
scala library on the classpath, not on the bootclasspath.

"
9e54361343f80925ab7be84239ce37fb021bd7b9,scala/scala,"Removed redundant method isValueType.

"
65778d760fd7b80b8f0fb9e3cfe87cc87e3523ae,scala/scala,"SI-5330, SI-6014 deal with existential self-type

This has been broken since https://github.com/scala/scala/commit/b7b81ca2#L0L567.
The existential rash is treated in a similar manner as in fc24db4c.

Conceptually, the fix would be `def selfTypeSkolemized =
widen.skolemizeExistential.narrow`, but simply widening before
narrowing achieves the same thing. Since we're in existential voodoo
territory, let's go for the minimal fix: replacing `this.narrow` by
`widen.narrow`.

--
Original patch by @retronym in #1074, refined by @paulp to
only perform widen.narrow incantation if there are
existentials present in the widened type, as
narrowing is expensive when the type is not a singleton.

The result is that compiling the entirety of quick, that
code path is hit only 143 times.  All the other calls hit
.narrow directly as before.  It looks like the definition
of negligible in the diff of -Ystatistics when compiling
src/library/scala/collection:

    < #symbols                      : 306315
    ---
    > #symbols                      : 306320
    12c13
    < #unique types                 : 293859
    ---
    > #unique types                 : 293865

I'm assuming based on the 2/1000ths of a percent increase
in symbol and type creation that wall clock is manageable,
but I didn't measure it.
"
b61a64ddb5700b5d77295df43af0e3feb3c46ac6,scala/scala,"SI-6964 Remove build managers, both simple and refined.

Deprecated in 2.10.0, out to pasture in 2.11.0.

Users are advised to migrate to:

   https://github.com/typesafehub/zinc
   http://www.scala-sbt.org/
"
3bfd81869ccffd0657a1b82eb483e0f26a283a46,scala/scala,"This commit is about not calling .length or .si...

This commit is about not calling .length or .size on Lists. Sometimes it
is unavoidable; not often. I created some methods for the compiler which
should probably be in the collections, which do things like test if two
sequences have the same length in a more efficient manner than calling
length on each.

Also, wouldn't it be wonderful to have some mechanism for finding these
issues in a more automated way. Like say an annotation:

  LinearSeqLike {
    @badjuju(""Calling length on linear seqs is O(n)"")
    def length: Int = whee
  }

Or since I imagine everyone thinks they're calling length with lists of
2 or 3, an optional runtime check which yelled if it sees you calling
length on a 600 element list, or worse:

  var i = 0
  while (i < myList.length) { // you don't want to see what this does
    f(myList(i)) ; i += 1;
  }

Uniformity of interface without uniformity of behavior leaves us with
traps. No review.

"
6d7bcd5818b856d4596b57b7e9f1543b71ed7329,scala/scala,"Lots of tedious warning and tree printing work.

Fewer deprecation warnings, prettier trees, prettier
symbols, more polished error messages.

Oh the interesting people you meet handling warnings, I
feel sorry for you all that I get to do it all the time.
One of the characters I met invited me into the ""Dead Code
Society"" and that's what I'm doing on Tuesdays now.  No of
course you haven't, it's a SECRET society.
"
5cbd7d06eb8fe81bc3812ee99de05b1f4bd820fe,scala/scala,"Figured out the ""$class$1"" problem.

In lambda lift traits are renamed independently of their
implementation classes, leading in the case of a method-defined
trait to an interface called A$1 and an impl class called A$class$1
rather than A$1$class.  This is now remedied.
"
dad886659faca4fba2d4937c9bc6780591b02c27,scala/scala,"SI-6611 Tighten up an unsafe array optimization

The net was cast too wide and was unsafely optimizing away array
copies.
"
fff52d1aa3a65692e0f73265171c19e8deb5eb4e,sdss/marvin,"Merge pull request #42 from albireox/simplify_cube_getspaxel

Simplify Cube.getSpaxel"
cbd86c9b25592b81dd010b6fa2e7ce52c31f50db,tboox/xmake,"10755 -> 10644

some files have no need to be executable
"
a4648568818b4b5b3598e6c7d5179b5d720a8c94,tboox/xmake,"mark project.load as deprecated and add add_deps api in option
"
5cf17aff0f274d048e744347df06bd552917f56a,tsuru/tsuru,"api/auth: using gitosis agent, instead of direct functions

The agent is the new way to use the gitosis package.
"
d8ec446fe0d1d7e4191ff4b42d88bdbc7f240457,tsuru/tsuru,"Improve tests syntax
"
2015d58ab1ce9e1dc4bd656693e2c0ff172d38fe,tsuru/tsuru,"vendor,provision/swarm: use docker/docker instead of docker/engine-api
"
ebb2686fc9f7cdfa82d8fb83b356859952f6af85,tsuru/tsuru,"cmd/term: rename GetPassword function to ReadPassword
"
8b7968125b31500887ae98f7c7d60e518588c7c4,tsuru/tsuru,"api/auth: extracting addUserToTeam function
"
75d95871e566c7886aee582eb7594852cd46943a,uias/Tabman,"Rename Styles directories
"
d941cb43cead603c78a74f5b3bc8ac975b231e6f,uikit/uikit,"improve class utility
handle exception in player
fix event delegation with comma separated selector
"
775d02b14e6afb9dc1a1a2b61a69af47070b59dc,uikit/uikit,"renamed global control vars
"
a12266488a3a9a24e8396bf73a223114d7b08073,uikit/uikit,"cleanup
"
ab32715856f3e7d3f9369726602c7047db367362,uikit/uikit,"cleanup
"
64801c5d905696ec7f83ce0a565f4781b84718a5,vapor/vapor,"Merge pull request #450 from qutheory/droplet-rename

Droplet rename"
ea3f7fe67ded9631d6e8499aeb8862b880a2a404,vapor/vapor,"Merge branch 'sh/app-refactor' of github.com:qutheory/vapor into sh/app-refactor

# Conflicts:
#	Sources/Vapor/JSON/JSONSerializer.swift
"
79988b6a3157d79c9e75037810d608a173a8762e,vapor/vapor,"Make Fluent use a generic config
"
b6a253ccb5a454a2640db593cd7ecbcc591d8bbc,vapor/vapor,"Merge pull request #1318 from vapor/valid

validations + module rename"
329f7cbf9ef2a5e98aff6c548728ff4a184bc124,vapor/vapor,"moving to Jay's native Json type
"
8954916db60316902df3f2731623b61989c90ff0,vapor/vapor,"Merge pull request #1319 from vapor/simplify-tcp

simplify tcp socket"
7e92ba2fde2c6711e7922a74edac5eed53ddf43b,vapor/vapor,"moving rugaard's json patch over and resolving conflicts
"
cf955976016aca3d5611d900d506dccfccc91a0b,vapor/vapor,"Merge pull request #352 from qutheory/optimization

optimizations"
cc40f7f0edfb05f93a18749861ebdba2d5ccdfbd,vapor/vapor,"Convert Session.init to take its identifier and the session driver, make Request.session optional
"
36ee733e89d1ea2f9250160b952205facdafdc23,web3j/web3j,"1. Added support for returning struct values in smart contract function wrappers.
2. Added a few images to the docs.
3. Bumped version in preparation for 1.0.7 release.
4. Renamed MordenTestnetConfig to simply TestnetConfig following Ropsten release.
"
26d080cf64e3d86283abeb361794f3c20ed4215c,zulip/zulip,"home.py: rename subbed_info and move to register_ret.
"
1a82741650d882d233c1938e0b78de34f0647e9f,zulip/zulip,"Move action functions from models.py to zephyr/lib/actions.py.

(imported from commit 9d577dd53ce7d4c9faf6cc8a56129d684a50811b)
"
01daa3e91a7b8af6f7cc45e7a6831ae4997c4929,zulip/zulip,"test_helpers: Move get_subscription out of actions.py.

It's no longer used by anything other than test code.
"
5d39a0f0fc3a4118d9bb5bb22dbba4258a3c9409,zulip/zulip,"scripts: Replace calls to lsb release with our own parsing.

This improves the performance of these operations, by saving a ~50ms
Python process startup.  While not a major performance improvement, it
seems worth it, given how often these commands get run.

Fixes #9571.
"
1114c8bf624bb208932ab386a268be38964902bd,zulip/zulip,"Extract message_fetch.js.
"
4696819629ade4a3f1e610d5d58b31a841d01a37,zulip/zulip,"Restructure format of avatar events and push into register_ret.

This moves the avatar_ fields in page_params to come from
register_ret.  Unlike many fields, changing this had a bit of
complexity, because the avatar update events didn't actually contain
some of the details required for moving these into register_ret to
work correctly without races.

We fix that as part of this change.

Modified significantly by tabbott.
"
65a2f012d49ef5cd17a45f5be734e01337cb394f,zulip/zulip,"Simplify pin/unpin code path.

I make server_events slimmer by not handling a specific
property when subs.update_subscription_properties() should
do all the dispatching (and mostly did).

And then since update_subscription_properties() has
a ""sub"" already, I can call directly to stream_list code
and remove a function from subs.js.  Since I lose the
wrapper function in subs.js, I rename the stream_list
function as part of this commit.

The only code that gets slightly heavier here is that
we have two lines in the 'pin_to_top' case instead of one.
"
fed3902fc5d0da5da54d48066c2c876d5d3be13c,zulip/zulip,"Clean up debugging logs from tracking down slow receive.

(imported from commit e4b1f763522406255ce8be3c8d51b5d855a770cd)
"
3617ebfd419e81295879a771f89f9dcd50afef20,zulip/zulip,"api: Rename get_old_messages to get_messages in the backend.

Fixes #1315.
"
4fb833995412d491db156df11d238f7c29fbebba,zulip/zulip,"Extract typing_events.js.
"
3b59e6c3ccd8462a9f3143a717c7e4747a38b133,zulip/zulip,"subs: Rename /#subscriptions to /#streams.

Fixes #3653.
"
8b9e78e486c98258f110f8d8408a5584a4e5687b,zulip/zulip,"compose: Extract and test get_focus_area.
"
e98ca0714b36e92011488a9879909e9ccbbeeeba,zulip/zulip,"notifications: Simplify how triggers are passed around.

This removes the utterly unnecessary `triggers` dict (which always was
a dict with exactly one value True) in favor of a single field,
'trigger'.

Inspired by Kunal Gupta's work in #6659.
"
64dadae697c9500835c7763d1416c6e2ac01bfe9,zulip/zulip,"webpack: Add css-hot-loader to remove flash on unstyled content.

This commit removes the flash on unstyled content while in dev
mode that was caused by the use of style-loader. Instead it
enables mini-css-extract-plugin in dev in combination with
css-hot-loader which enables HMR for development.

This is because mini-css-extract-plugin does not currently support
HMR out of the box. It also adds a SourceMapDevtoolPlugin to enable
sourcemaps with css since mini-css breaks sourcemaps when used in
combination with the cheap-module-evel-source-map setting.

Related issues:
https://github.com/webpack-contrib/mini-css-extract-plugin/issues/34
https://github.com/webpack-contrib/mini-css-extract-plugin/issues/29
"
9735025167a5063460dc2a6897c1adeda0d8e826,zulip/zulip,"Refactor logic around restricted_to_domain.

Add a function email_allowed_for_realm that checks whether a user with
given email is allowed to join a given realm (either because the email
has the right domain, or because the realm is open), and use it
whenever deciding whether to allow adding a user to a realm.

This commit is not intended to change any behavior, except in one case
where the Zulip realm's domain was not being converted to lowercase.
"
900891b072bd4e1061fa51851edbd51f8e78f0ac,zulip/zulip,"settings: Rename settings-status to account-settings-status.
"
dd0c50f0df26a9c204088e13ce0cfd6e726f6586,zulip/zulip,"Extract compose_actions.js.

This module extracts these two functions that get called by
several other modules:

    start()
    cancel()

It is a little bit arbitrary which functions got pulled over
with them, but it's generally functions that would have only
been called via start/cancel.

There are two goals for splitting out this code.  The first
goal is simply to make `compose.js` have fewer responsibilities.
The second goal is to help break up circular dependencies.
The extraction of this module does more to clarify
dependencies than actually break them.  The methods start()
and cancel() had actually been shimmed in an earlier commit,
and now they no longer have a shim.

Besides start/cancel, most of the functions here are only
exported to facilitate test stubbing.  An exception is
decorate_stream_bar(), which is currently called from
ui_init.js.  We probably should move the ""blur"" handler out
of there, but cleaning up ui_init.js is a project for another
day.

It may seem slightly odd that this commit doesn't pull over
finish() into this module, but finish() would bring in the
whole send-message codepath.  You can think of it like this:

* compose_actions basically just populates the compose box
* compose.finish() makes the compose box do its real job,
  which is to send a message
"
ba449d7c2393f31f5e36f0498a135c2f241916df,zulip/zulip,"unread: Refactor to move server calls into UI layer.
"
ac2172e2330b3435b4963664b5b741f1bcc2a079,zulip/zulip,"models: Rename RealmAlias model to RealmDomain.

Includes a migration.
"
6d255efe4c7026f664c0e2965114bd5547558fc9,zulip/zulip,"app: Prepare JS files for consumption by webpack.

This commit prepares the frontend code to be consumed by webpack.

It is a hack: In theory, modules should be declaring and importing the
modules they depend on and the globals they expose directly.

However, that requires significant per-module work, which we don't
really want to block moving our toolchain to webpack on.

So we expose the modules by setting window.varName = varName; as
needed in the js files.
"
b0991966ab32ee0c4058fc11aeec7172f28886e9,zulip/zulip,"Move tools/postgres-init-test-db to tools/setup/.
"
c4836bca44cb2734aff6e4c1436cfa8b9bbbba3f,zulip/zulip,"Rename titles for 'Zulip Labs' to 'Experimental settings'.
"
42435db49219fb5c18d36b990b3ea474127f286e,zulip/zulip,"Add run_test helper for individual tests.

This run_test helper sets up a convention that allows
us to give really short tracebacks for errors, and
eventually we can have more control over running
individual tests.  (The latter goal has some
complications, since we often intentionally leak
setup in tests.)
"
2718bd0b5d2f3e761f7ea07ea7154d4f776aa375,zulip/zulip,"Extract presence.js to track presence info.

Most of this code was simply moved from activity.js with some
minor renaming of functions like set_presence_info -> set_info.

Some functions were slightly nontrivial extractions:

    is_not_offline:
        came from activity.huddle_fraction_present

    get_status/get_mobile:
        simple getters

    set_user_status:
        partial extraction from activity.set_user_status

    last_active_date:
        pulled out of admin.js code

We also fixed activity.filter_and_sort to take user_ids.
"
040067b2a2e321dbcf8f1d4f79f213adf23d7f7d,zulip/zulip,"invite: Remove obsolete bulk_invite_users endpoint.
"
fbf48f7ec67657d75a780841df6ba965bc199fde,zulip/zulip,"bulk_create: Refactor bulk_create_streams to not take domain dictionary.

First step in cleaning up populate_db.create_streams and
bulk_create.bulk_create_streams. Part of a series of commits to remove
Realm.domain from populate_db.
"
0281079a390ab2883c2642fc890cc29d857156b3,zulip/zulip,"stream settings: Send all private streams subs to realm admins on load.

Tweaked by tabbott to simplify the conditionals in actions.py.

Fixes #8695.
"
21fb7693d224d96b8305863c0ec6a740ad27e557,zulip/zulip,"Add test_helpers.client_patch_multipart().
"
73125e271830e0784337007332d8ecdcf6bfbc81,zulip/zulip,"refactor: Move is_current_user() to people.js.

We no longer have it in util.js, because we will
want to encapsulate this better for upcoming commits
related to email changes.
"
51c82b6d4fb586a3decb78a4248bffbde72009ee,zulip/zulip,"models: Rename PLAN_QUANITY_UPDATED event type.
"
2699a6aac9255c5b64938f2846ea80388d268f21,zulip/zulip,"refactor: Extract people.is_valid_email_for_compose().

It's easier to unit test logic inside of people.js than compose.js.

We allow users to compose emails to any of our cross-realm bots.
Someday we may tighten up which cross-realm bots are valid targets,
since it's not necessarily the case that those bots do anything
useful when you send them messages.
"
6de811699e4f1967a0cbc49145670f6f6b57dd02,GMOD/jbrowse,"more HTML scrolling performance optimizations
"
ad31c0cc9dcd4dc190da7c397819cd4c009d9b57,PyCQA/pylint,"add support for --disable=all option (closes: #105327)

updated the documentation accordingly
deprecate 'disable-all' as an inline directive in favor of 'skip-file'
"
80a8bc05f66b883a8fffd7d7d3d8edfb9064209c,SUSE/DeepSea,"Rename deepsea.spec to deepsea.spec.in, prevent side effects

Signed-off-by: Eric Jackson <059e173bd7f56bbfe9e6d1dd73c9029422f7fff5@suse.com>
"
bde49c72fe202b56aeea5e3e7b7d6eec129f4bed,aleju/imgaug,"Improve Add dtype support and add tests
"
ffc905f3b856b96c6d8d864dba4052104fae4064,anlaneg/dpdk,"ethdev: separate driver APIs

Create a rte_ethdev_driver.h file and move PMD specific APIs here.
Drivers updated to include this new header file.

There is no update in header content and since ethdev.h included by
ethdev_driver.h, nothing changed from driver point of view, only
logically grouping of APIs. From applications point of view they can't
access to driver specific APIs anymore and they shouldn't.

More PMD specific data structures still remain in ethdev.h because of
inline functions in header use them. Those will be handled separately.

Signed-off-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
Acked-by: Shreyansh Jain <9744844f062a9f6cf95f66f06508da54c8fc7929@nxp.com>
Acked-by: Andrew Rybchenko <ac94ab2a8fe9a9a087f6e24dcbc16626b52c07e8@solarflare.com>
Acked-by: Thomas Monjalon <5f50a84c1fa3bcff146405017f36aec1a10a9e38@monjalon.net>
"
22dda618c00c1267ec5afb528bfdc8f9bab47a15,anlaneg/dpdk,"pci: separate detaching ethernet ports from PCI devices

Attaching and detaching ethernet ports from an application
is not the same thing as physically removing a PCI device,
so clarify the flags indicating support. All PCI devices
are assumed to be physically removable, so no flag is
necessary in the PCI layer.

Signed-off-by: Ben Walker <a1d3644485c36114edd3450c3b0a400a33594022@intel.com>
"
006bb2cc209f6ba11230743c0402e6c29a29efc8,anlaneg/dpdk,"doc: announce ethdev CRC strip flag deprecation

Make CRC stripping default behavior, deprecate flag
DEV_RX_OFFLOAD_CRC_STRIP.

Signed-off-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
Acked-by: Andrew Rybchenko <ac94ab2a8fe9a9a087f6e24dcbc16626b52c07e8@solarflare.com>
Acked-by: Shahaf Shuler <59427d49da6f2b944fbf4cb5ee70ef3ac25f744f@mellanox.com>
Acked-by: Thomas Monjalon <5f50a84c1fa3bcff146405017f36aec1a10a9e38@monjalon.net>
"
cebe3d7b3d2066981d9179b52b79966e69e68fd7,anlaneg/dpdk,"ethdev: remove useless parameter in callback process

The pointer to the user parameter of the callback registration is
automatically pass to the callback function.
There is no point to allow changing this user parameter by a caller.
That's why this parameter is always set to NULL by PMDs and set only
in ethdev layer before calling the callback function.

The history is that the user parameter was initially used
by the callback implementation to pass some information
between the application and the driver:
	c1ceaf3ad056 (""ethdev: add an argument to internal callback function"")
Then a new parameter has been added to leave the user parameter
to its standard usage of context given at registration:
	d6af1a13d7a1 (""ethdev: add return values to callback process API"")

The NULL parameter in the internal callback processing function
is now removed. It makes clear that the callback parameter is user
managed and opaque from a DPDK point of view.

Signed-off-by: Thomas Monjalon <5f50a84c1fa3bcff146405017f36aec1a10a9e38@monjalon.net>
Reviewed-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
"
26e09db6cb5fd9bbf0feb928561af9932694574b,anlaneg/dpdk,"app/test: rework command registration

The tests are registered with their command name by adding a structure
to a list. The structure of each test was declared in each test file
and passed to the register macro.
This rework generate the structure inside the register macro.

Signed-off-by: Thomas Monjalon <ee2fa8b2681c737f775687e475dcbf2028a412f1@6wind.com>
Reviewed-by: Jan Viktorin <077cce75738556d99b8362c6a64d5bba1ba87459@rehivetech.com>
"
4b614e9504a11322ca9225d697b87979c4e31c23,anlaneg/dpdk,"net/ifc: make driver name consistent

Make the compiler switch name and document name consistent as ``ifc`` to
avoid confusion. Also rename the map file to standard name for meson
build in the process.

Signed-off-by: Xiao Wang <28aecb4e45c1566b6185c24680691da84bd4fcf8@intel.com>
Signed-off-by: Bruce Richardson <66b9e8e8fbd5e9f41f91b0af050876182ce9d0e4@intel.com>
"
aec9c13c5257f0dae350152fa0444634fe35859e,anlaneg/dpdk,"eal: add function to release internal resources

This commit adds a new function rte_eal_cleanup().
The function serves as a hook to allow DPDK to release
internal resources (e.g.: hugepage allocations).

This function allows DPDK to become more like an ordinary
library, where the library context itself can be initialized
and cleaned up by the application.

The rte_exit() and rte_panic() functions must be considered,
particularly if they should call rte_eal_cleanup() to release any
resources or not. This patch adds the cleanup to rte_exit(),
but does not clean up on rte_panic(). The reason to not clean
up on panicing is that the developer may wish to inspect the
exact internal state of EAL and hugepages.

Signed-off-by: Harry van Haaren <b9ad04ed670c22cfa7f5f9ab17e311ca85d11a76@intel.com>
Acked-by: Vipin Varghese <b0b9508e3fd3e721e16f75bda9fcfd493661c711@intel.com>
"
fd943c764a63e5ed4ec4df6ca78e5d7fa8835d4d,anlaneg/dpdk,"mempool: deprecate xmem functions

Move rte_mempool_xmem_size() code to internal helper function
since it is required in two places: deprecated rte_mempool_xmem_size()
and non-deprecated rte_mempool_op_calc_mem_size_default().

Suggested-by: Olivier Matz <dfcc1510895413197abb4336e39bb0a3906cba71@6wind.com>
Signed-off-by: Andrew Rybchenko <ac94ab2a8fe9a9a087f6e24dcbc16626b52c07e8@solarflare.com>
Acked-by: Olivier Matz <dfcc1510895413197abb4336e39bb0a3906cba71@6wind.com>
"
8a9867a635c0572e926d87b7207dd064546388de,anlaneg/dpdk,"crypto/openssl: rename libcrypto to openssl

This patch replaces name ""libcrypto"" to ""openssl"" from file directories,
symbol prefixes and sub-names connected with old name.
Renamed poll mode driver files, test files, and documentations.
It is done to better name association with library because
the cryptography operations are using Openssl library crypto API.

Fixes: d61f70b4c918 (""crypto/libcrypto: add driver for OpenSSL library"")

Signed-off-by: Slawomir Mrozowicz <e88e38a554fa6ee2c1af7d54e8bb48581354aa35@intel.com>
Acked-by: Deepak Kumar Jain <9bf453c83e22b0c9e2b3754d419540ea41e2427f@intel.com>
"
7db69d56f2d050842ecf6e465d2d4f1abf3314d7,apache/spark,"Refactor GLM algorithms and add Java tests
This change adds Java examples and unit tests for all GLM algorithms
to make sure the MLLib interface works from Java. Changes include
- Introduce LabeledPoint and avoid using Doubles in train arguments
- Rename train to run in class methods
- Make the optimizer a member variable of GLM to make sure the builder
  pattern works
"
b17057c0a69b9c56e503483d97f5dc209eef0884,apache/spark,"[SPARK-18244][SQL] Rename partitionProviderIsHive -> tracksPartitionsInCatalog

## What changes were proposed in this pull request?
This patch renames partitionProviderIsHive to tracksPartitionsInCatalog, as the old name was too Hive specific.

## How was this patch tested?
Should be covered by existing tests.

Author: Reynold Xin <rxin@databricks.com>

Closes #15750 from rxin/SPARK-18244.
"
48cecf673c38ead56afa2dea49d295165c67cdf4,apache/spark,"[SPARK-4048] Enhance and extend hadoop-provided profile.

This change does a few things to make the hadoop-provided profile more useful:

- Create new profiles for other libraries / services that might be provided by the infrastructure
- Simplify and fix the poms so that the profiles are only activated while building assemblies.
- Fix tests so that they're able to run when the profiles are activated
- Add a new env variable to be used by distributions that use these profiles to provide the runtime
  classpath for Spark jobs and daemons.

Author: Marcelo Vanzin <vanzin@cloudera.com>

Closes #2982 from vanzin/SPARK-4048 and squashes the following commits:

82eb688 [Marcelo Vanzin] Add a comment.
eb228c0 [Marcelo Vanzin] Fix borked merge.
4e38f4e [Marcelo Vanzin] Merge branch 'master' into SPARK-4048
9ef79a3 [Marcelo Vanzin] Alternative way to propagate test classpath to child processes.
371ebee [Marcelo Vanzin] Review feedback.
52f366d [Marcelo Vanzin] Merge branch 'master' into SPARK-4048
83099fc [Marcelo Vanzin] Merge branch 'master' into SPARK-4048
7377e7b [Marcelo Vanzin] Merge branch 'master' into SPARK-4048
322f882 [Marcelo Vanzin] Fix merge fail.
f24e9e7 [Marcelo Vanzin] Merge branch 'master' into SPARK-4048
8b00b6a [Marcelo Vanzin] Merge branch 'master' into SPARK-4048
9640503 [Marcelo Vanzin] Cleanup child process log message.
115fde5 [Marcelo Vanzin] Simplify a comment (and make it consistent with another pom).
e3ab2da [Marcelo Vanzin] Fix hive-thriftserver profile.
7820d58 [Marcelo Vanzin] Fix CliSuite with provided profiles.
1be73d4 [Marcelo Vanzin] Restore flume-provided profile.
d1399ed [Marcelo Vanzin] Restore jetty dependency.
82a54b9 [Marcelo Vanzin] Remove unused profile.
5c54a25 [Marcelo Vanzin] Fix HiveThriftServer2Suite with *-provided profiles.
1fc4d0b [Marcelo Vanzin] Update dependencies for hive-thriftserver.
f7b3bbe [Marcelo Vanzin] Add snappy to hadoop-provided list.
9e4e001 [Marcelo Vanzin] Remove duplicate hive profile.
d928d62 [Marcelo Vanzin] Redirect child stderr to parent's log.
4d67469 [Marcelo Vanzin] Propagate SPARK_DIST_CLASSPATH on Yarn.
417d90e [Marcelo Vanzin] Introduce ""SPARK_DIST_CLASSPATH"".
2f95f0d [Marcelo Vanzin] Propagate classpath to child processes during testing.
1adf91c [Marcelo Vanzin] Re-enable maven-install-plugin for a few projects.
284dda6 [Marcelo Vanzin] Rework the ""hadoop-provided"" profile, add new ones.
"
9f838bd24242866a687a2655a1b8ac2f5d562526,apache/spark,"[SPARK-14362][SPARK-14406][SQL][FOLLOW-UP] DDL Native Support: Drop View and Drop Table

#### What changes were proposed in this pull request?
This PR is to address the comment: https://github.com/apache/spark/pull/12146#discussion-diff-59092238. It removes the function `isViewSupported` from `SessionCatalog`. After the removal, we still can capture the user errors if users try to drop a table using `DROP VIEW`.

#### How was this patch tested?
Modified the existing test cases

Author: gatorsmile <gatorsmile@gmail.com>

Closes #12284 from gatorsmile/followupDropTable.
"
7dfb82a992d47491174d7929e31351d26cadfcda,apache/spark,"Replace old 'master' term with 'driver'.
"
614ee16cc4c63260f13d0c7494fbaafa8a061e95,apache/spark,"refactor job ui with pool information
"
6ce1b675ee9fc9a6034439c3ca00441f9f172f84,apache/spark,"[SPARK-16980][SQL] Load only catalog table partition metadata required to answer a query

(This PR addresses https://issues.apache.org/jira/browse/SPARK-16980.)

## What changes were proposed in this pull request?

In a new Spark session, when a partitioned Hive table is converted to use Spark's `HadoopFsRelation` in `HiveMetastoreCatalog`, metadata for every partition of that table are retrieved from the metastore and loaded into driver memory. In addition, every partition's metadata files are read from the filesystem to perform schema inference.

If a user queries such a table with predicates which prune that table's partitions, we would like to be able to answer that query without consulting partition metadata which are not involved in the query. When querying a table with a large number of partitions for some data from a small number of partitions (maybe even a single partition), the current conversion strategy is highly inefficient. I suspect this scenario is not uncommon in the wild.

In addition to being inefficient in running time, the current strategy is inefficient in its use of driver memory. When the sum of the number of partitions of all tables loaded in a driver reaches a certain level (somewhere in the tens of thousands), their cached data exhaust all driver heap memory in the default configuration. I suspect this scenario is less common (in that not too many deployments work with tables with tens of thousands of partitions), however this does illustrate how large the memory footprint of this metadata can be. With tables with hundreds or thousands of partitions, I would expect the `HiveMetastoreCatalog` table cache to represent a significant portion of the driver's heap space.

This PR proposes an alternative approach. Basically, it makes four changes:

1. It adds a new method, `listPartitionsByFilter` to the Catalyst `ExternalCatalog` trait which returns the partition metadata for a given sequence of partition pruning predicates.
1. It refactors the `FileCatalog` type hierarchy to include a new `TableFileCatalog` to efficiently return files only for partitions matching a sequence of partition pruning predicates.
1. It removes partition loading and caching from `HiveMetastoreCatalog`.
1. It adds a new Catalyst optimizer rule, `PruneFileSourcePartitions`, which applies a plan's partition-pruning predicates to prune out unnecessary partition files from a `HadoopFsRelation`'s underlying file catalog.

The net effect is that when a query over a partitioned Hive table is planned, the analyzer retrieves the table metadata from `HiveMetastoreCatalog`. As part of this operation, the `HiveMetastoreCatalog` builds a `HadoopFsRelation` with a `TableFileCatalog`. It does not load any partition metadata or scan any files. The optimizer prunes-away unnecessary table partitions by sending the partition-pruning predicates to the relation's `TableFileCatalog `. The `TableFileCatalog` in turn calls the `listPartitionsByFilter` method on its external catalog. This queries the Hive metastore, passing along those filters.

As a bonus, performing partition pruning during optimization leads to a more accurate relation size estimate. This, along with c481bdf, can lead to automatic, safe application of the broadcast optimization in a join where it might previously have been omitted.

## Open Issues

1. This PR omits partition metadata caching. I can add this once the overall strategy for the cold path is established, perhaps in a future PR.
1. This PR removes and omits partitioned Hive table schema reconciliation. As a result, it fails to find Parquet schema columns with upper case letters because of the Hive metastore's case-insensitivity. This issue may be fixed by #14750, but that PR appears to have stalled. ericl has contributed to this PR a workaround for Parquet wherein schema reconciliation occurs at query execution time instead of planning. Whether ORC requires a similar patch is an open issue.
1. This PR omits an implementation of `listPartitionsByFilter` for the `InMemoryCatalog`.
1. This PR breaks parquet log output redirection during query execution. I can work around this by running `Class.forName(""org.apache.spark.sql.execution.datasources.parquet.ParquetFileFormat$"")` first thing in a Spark shell session, but I haven't figured out how to fix this properly.

## How was this patch tested?

The current Spark unit tests were run, and some ad-hoc tests were performed to validate that only the necessary partition metadata is loaded.

Author: Michael Allman <michael@videoamp.com>
Author: Eric Liang <ekl@databricks.com>
Author: Eric Liang <ekhliang@gmail.com>

Closes #14690 from mallman/spark-16980-lazy_partition_fetching.
"
2e2f32603c110b9c6ddfbb836f63882eacf0a8cc,apache/spark,"[SPARK-8581] [SPARK-8584] Simplify checkpointing code + better error message

This patch rewrites the old checkpointing code in a way that is easier to understand. It also adds a guard against an invalid specification of checkpoint directory to provide a clearer error message. Most of the changes here are relatively minor.

Author: Andrew Or <andrew@databricks.com>

Closes #6968 from andrewor14/checkpoint-cleanup and squashes the following commits:

4ef8263 [Andrew Or] Use global synchronized instead
6f6fd84 [Andrew Or] Merge branch 'master' of github.com:apache/spark into checkpoint-cleanup
b1437ad [Andrew Or] Warn instead of throw
5484293 [Andrew Or] Merge branch 'master' of github.com:apache/spark into checkpoint-cleanup
7fb4af5 [Andrew Or] Guard against bad settings of checkpoint directory
691da98 [Andrew Or] Simplify checkpoint code / code style / comments
"
d61337f6403da454b9fb6cf090fe3ab61892a11b,apache/spark,"Merge pull request #844 from markhamstra/priorityRename

Renamed 'priority' to 'jobId' and assorted minor changes"
30345c43b7d17bb00184b60a547225bae8ee78e7,apache/spark,"[SPARK-19058][SQL] fix partition related behaviors with DataFrameWriter.saveAsTable

## What changes were proposed in this pull request?

When we append data to a partitioned table with `DataFrameWriter.saveAsTable`, there are 2 issues:
1. doesn't work when the partition has custom location.
2. will recover all partitions

This PR fixes them by moving the special partition handling code from `DataSourceAnalysis` to `InsertIntoHadoopFsRelationCommand`, so that the `DataFrameWriter.saveAsTable` code path can also benefit from it.

## How was this patch tested?

newly added regression tests

Author: Wenchen Fan <wenchen@databricks.com>

Closes #16460 from cloud-fan/append.
"
aa4ca8b873fd83e64e5faea6f7febcc830e30b02,apache/spark,"[SQL] Improve error messages

Author: Michael Armbrust <michael@databricks.com>
Author: wangfei <wangfei1@huawei.com>

Closes #4558 from marmbrus/errorMessages and squashes the following commits:

5e5ab50 [Michael Armbrust] Merge pull request #15 from scwf/errorMessages
fa38881 [wangfei] fix for grouping__id
f279a71 [wangfei] make right references for ScriptTransformation
d29fbde [Michael Armbrust] extra case
1a797b4 [Michael Armbrust] comments
d4e9015 [Michael Armbrust] add comment
af9e668 [Michael Armbrust] no braces
34eb3a4 [Michael Armbrust] more work
6197cd5 [Michael Armbrust] [SQL] Better error messages for analysis failures
"
be5dd881f1eff248224a92d57cfd1309cb3acf38,apache/spark,"[SPARK-12913] [SQL] Improve performance of stat functions

As benchmarked and discussed here: https://github.com/apache/spark/pull/10786/files#r50038294, benefits from codegen, the declarative aggregate function could be much faster than imperative one.

Author: Davies Liu <davies@databricks.com>

Closes #10960 from davies/stddev.
"
23b54f62b7c4b703a32e96f9436b03f87e7f6710,apache/spark,"Merge pull request #366 from tdas/streaming

Code refactoring"
a9f96b54e4bf0f129c23b32ef0ab1429ff7e1ed3,apache/spark,"Merge pull request #56 from jegonzal/PregelAPIChanges

Changing Pregel API to use mapReduceTriplets instead of aggregateNeighbors"
a471c7f9eaa59d55dfff5b9d1a858f304a6b3a84,apache/spark,"[SPARK-14133][SQL] Throws exception for unsupported create/drop/alter index , and lock/unlock operations.

## What changes were proposed in this pull request?

This  PR  throws Unsupported Operation exception for create index, drop index, alter index , lock table , lock database, unlock table, and unlock database operations that are not supported in Spark SQL. Currently these operations are executed executed by Hive.

Error:
spark-sql> drop index my_index on my_table;
Error in query:
Unsupported operation: drop index(line 1, pos 0)

## How was this patch tested?
Added test cases to HiveQuerySuite

yhuai hvanhovell andrewor14

Author: sureshthalamati <suresh.thalamati@gmail.com>

Closes #12069 from sureshthalamati/unsupported_ddl_spark-14133.
"
683e938242e29a0d584452e5230b4168b85bdab2,apache/spark,"[SPARK-5212][SQL] Add support of schema-less, custom field delimiter and SerDe for HiveQL transform

This pr adds the support of schema-less syntax, custom field delimiter and SerDe for HiveQL's transform.

Author: Liang-Chi Hsieh <viirya@gmail.com>

Closes #4014 from viirya/schema_less_trans and squashes the following commits:

ac2d1fe [Liang-Chi Hsieh] Refactor codes for comments.
a137933 [Liang-Chi Hsieh] Merge remote-tracking branch 'upstream/master' into schema_less_trans
aa10fbd [Liang-Chi Hsieh] Add Hive golden answer files again.
575f695 [Liang-Chi Hsieh] Add Hive golden answer files for new unit tests.
a422562 [Liang-Chi Hsieh] Use createQueryTest for unit tests and remove unnecessary imports.
ccb71e3 [Liang-Chi Hsieh] Refactor codes for comments.
37bd391 [Liang-Chi Hsieh] Merge remote-tracking branch 'upstream/master' into schema_less_trans
6000889 [Liang-Chi Hsieh] Wrap input and output schema into ScriptInputOutputSchema.
21727f7 [Liang-Chi Hsieh] Move schema-less output to proper place. Use multilines instead of a long line SQL.
9a6dc04 [Liang-Chi Hsieh] setRecordReaderID is introduced in 0.13.1, use reflection API to call it.
7a14f31 [Liang-Chi Hsieh] Fix bug.
799b5e1 [Liang-Chi Hsieh] Call getSerializedClass instead of using Text.
be2c3fc [Liang-Chi Hsieh] Fix style.
32d3046 [Liang-Chi Hsieh] Add SerDe support.
ab22f7b [Liang-Chi Hsieh] Fix style.
7a48e42 [Liang-Chi Hsieh] Add support of custom field delimiter.
b1729d9 [Liang-Chi Hsieh] Fix style.
ccee49e [Liang-Chi Hsieh] Add unit test.
f561c37 [Liang-Chi Hsieh] Add support of schema-less script transformation.
"
6439a82503e900ae2e5c3cda5d10ac20dfd6e53f,apache/spark,"[SPARK-3873][BUILD] Enable import ordering error checking.

Turn import ordering violations into build errors, plus a few adjustments
to account for how the checker behaves. I'm a little on the fence about
whether the existing code is right, but it's easier to appease the checker
than to discuss what's the more correct order here.

Plus a few fixes to imports that cropped in since my recent cleanups.

Author: Marcelo Vanzin <vanzin@cloudera.com>

Closes #10612 from vanzin/SPARK-3873-enable.
"
46576ab303e50c54c3bd464f8939953efe644574,apache/spark,"[SPARK-7227] [SPARKR] Support fillna / dropna in R DataFrame.

Author: Sun Rui <rui.sun@intel.com>

Closes #6183 from sun-rui/SPARK-7227 and squashes the following commits:

dd6f5b3 [Sun Rui] Rename readEnv() back to readMap(). Add alias na.omit() for dropna().
41cf725 [Sun Rui] [SPARK-7227][SPARKR] Support fillna / dropna in R DataFrame.
"
40360112c417b5432564f4bcb8a9100f4066b55e,apache/spark,"[SPARK-8620] [SQL] cleanup CodeGenContext

fix docs, remove nativeTypes , use java type to get boxed type ,default value, etc. to avoid handle `DateType` and `TimestampType` as int and long again and again.

Author: Wenchen Fan <cloud0fan@outlook.com>

Closes #7010 from cloud-fan/cg and squashes the following commits:

aa01cf9 [Wenchen Fan] cleanup CodeGenContext
"
e0e64ba4b1b8eb72e856286f756c65fa22ab0a36,apache/spark,"[SPARK-6055] [PySpark] fix incorrect __eq__ of DataType

The _eq_ of DataType is not correct, class cache is not use correctly (created class can not be find by dataType), then it will create lots of classes (saved in _cached_cls), never released.

Also, all same DataType have same hash code, there will be many object in a dict with the same hash code, end with hash attach, it's very slow to access this dict (depends on the implementation of CPython).

This PR also improve the performance of inferSchema (avoid the unnecessary converter of object).

cc pwendell  JoshRosen

Author: Davies Liu <davies@databricks.com>

Closes #4808 from davies/leak and squashes the following commits:

6a322a4 [Davies Liu] tests refactor
3da44fc [Davies Liu] fix __eq__ of Singleton
534ac90 [Davies Liu] add more checks
46999dc [Davies Liu] fix tests
d9ae973 [Davies Liu] fix memory leak in sql
"
3a710b94b0c853a2dd4c40dca446ecde4e7be959,apache/spark,"[SPARK-18236] Reduce duplicate objects in Spark UI and HistoryServer

## What changes were proposed in this pull request?

When profiling heap dumps from the HistoryServer and live Spark web UIs, I found a large amount of memory being wasted on duplicated objects and strings. This patch's changes remove most of this duplication, resulting in over 40% memory savings for some benchmarks.

- **Task metrics** (6441f0624dfcda9c7193a64bfb416a145b5aabdf): previously, every `TaskUIData` object would have its own instances of `InputMetricsUIData`, `OutputMetricsUIData`, `ShuffleReadMetrics`, and `ShuffleWriteMetrics`, but for many tasks these metrics are irrelevant because they're all zero. This patch changes how we construct these metrics in order to re-use a single immutable ""empty"" value for the cases where these metrics are empty.
- **TaskInfo.accumulables** (ade86db901127bf13c0e0bdc3f09c933a093bb76): Previously, every `TaskInfo` object had its own empty `ListBuffer` for holding updates from named accumulators. Tasks which didn't use named accumulators still paid for the cost of allocating and storing this empty buffer. To avoid this overhead, I changed the `val` with a mutable buffer into a `var` which holds an immutable Scala list, allowing tasks which do not have named accumulator updates to share the same singleton `Nil` object.
- **String.intern() in JSONProtocol** (7e05630e9a78c455db8c8c499f0590c864624e05): in the HistoryServer, executor hostnames and ids are deserialized from JSON, leading to massive duplication of these string objects. By calling `String.intern()` on the deserialized values we can remove all of this duplication. Since Spark now requires Java 7+ we don't have to worry about string interning exhausting the permgen (see http://java-performance.info/string-intern-in-java-6-7-8/).

## How was this patch tested?

I ran

```
sc.parallelize(1 to 100000, 100000).count()
```

in `spark-shell` with event logging enabled, then loaded that event log in the HistoryServer, performed a full GC, and took a heap dump. According to YourKit, the changes in this patch reduced memory consumption by roughly 28 megabytes (or 770k Java objects):

![image](https://cloud.githubusercontent.com/assets/50748/19953276/4f3a28aa-a129-11e6-93df-d7fa91396f66.png)

Here's a table illustrating the drop in objects due to deduplication (the drop is <100k for some objects because some events were dropped from the listener bus; this is a separate, existing bug that I'll address separately after CPU-profiling):

![image](https://cloud.githubusercontent.com/assets/50748/19953290/6a271290-a129-11e6-93ad-b825f1448886.png)

Author: Josh Rosen <joshrosen@databricks.com>

Closes #15743 from JoshRosen/spark-ui-memory-usage.
"
f4bc01f1f33a93e6affe5c8a3e33ffbd92d03f38,apache/spark,"[SPARK-9855] [SPARKR] Add expression functions into SparkR whose params are simple

I added lots of expression functions for SparkR. This PR includes only functions whose params  are only `(Column)` or `(Column, Column)`.  And I think we need to improve how to test those functions. However, it would be better to work on another issue.

## Diff Summary

- Add lots of functions in `functions.R` and their generic in `generic.R`
- Add aliases for `ceiling` and `sign`
- Move expression functions from `column.R` to `functions.R`
- Modify `rdname` from `column` to `functions`

I haven't supported `not` function, because the name has a collesion with `testthat` package. I didn't think of the way  to define it.

## New Supported Functions

```
approxCountDistinct
ascii
base64
bin
bitwiseNOT
ceil (alias: ceiling)
crc32
dayofmonth
dayofyear
explode
factorial
hex
hour
initcap
isNaN
last_day
length
log2
ltrim
md5
minute
month
negate
quarter
reverse
round
rtrim
second
sha1
signum (alias: sign)
size
soundex
to_date
trim
unbase64
unhex
weekofyear
year

datediff
levenshtein
months_between
nanvl
pmod
```

## JIRA
[[SPARK-9855] Add expression functions into SparkR whose params are simple - ASF JIRA](https://issues.apache.org/jira/browse/SPARK-9855)

Author: Yu ISHIKAWA <yuu.ishikawa@gmail.com>

Closes #8123 from yu-iskw/SPARK-9855.
"
55561e7693dd2a5bf3c7f8026c725421801fd0ec,apache/spark,"[SPARK-13031][SQL] cleanup codegen and improve test coverage

1. enable whole stage codegen during tests even there is only one operator supports that.
2. split doProduce() into two APIs: upstream() and doProduce()
3. generate prefix for fresh names of each operator
4. pass UnsafeRow to parent directly (avoid getters and create UnsafeRow again)
5. fix bugs and tests.

This PR re-open #10944 and fix the bug.

Author: Davies Liu <davies@databricks.com>

Closes #10977 from davies/gen_refactor.
"
f23a721c10b64ec5c6768634fc5e9e7b60ee7ca8,apache/spark,"[SPARK-8993][SQL] More comprehensive type checking in expressions.

This patch makes the following changes:

1. ExpectsInputTypes only defines expected input types, but does not perform any implicit type casting.
2. ImplicitCastInputTypes is a new trait that defines both expected input types, as well as performs implicit type casting.
3. BinaryOperator has a new abstract function ""inputType"", which defines the expected input type for both left/right. Concrete BinaryOperator expressions no longer perform any implicit type casting.
4. For BinaryOperators, convert NullType (i.e. null literals) into some accepted type so BinaryOperators don't need to handle NullTypes.

TODOs needed: fix unit tests for error reporting.

I'm intentionally not changing anything in aggregate expressions because yhuai is doing a big refactoring on that right now.

Author: Reynold Xin <rxin@databricks.com>

Closes #7348 from rxin/typecheck and squashes the following commits:

8fcf814 [Reynold Xin] Fixed ordering of cases.
3bb63e7 [Reynold Xin] Style fix.
f45408f [Reynold Xin] Comment update.
aa7790e [Reynold Xin] Moved RemoveNullTypes into ImplicitTypeCasts.
438ea07 [Reynold Xin] space
d55c9e5 [Reynold Xin] Removes NullTypes.
360d124 [Reynold Xin] Fixed the rule.
fb66657 [Reynold Xin] Convert NullType into some accepted type for BinaryOperators.
2e22330 [Reynold Xin] Fixed unit tests.
4932d57 [Reynold Xin] Style fix.
d061691 [Reynold Xin] Rename existing ExpectsInputTypes -> ImplicitCastInputTypes.
e4727cc [Reynold Xin] BinaryOperator should not be doing implicit cast.
d017861 [Reynold Xin] Improve expression type checking.
"
937af592e65f4dd878aafcabf8fe2cfe7fa3d9b3,apache/spark,"[SPARK-18219] Move commit protocol API (internal) from sql/core to core module

## What changes were proposed in this pull request?
This patch moves the new commit protocol API from sql/core to core module, so we can use it in the future in the RDD API.

As part of this patch, I also moved the speficiation of the random uuid for the write path out of the commit protocol, and instead pass in a job id.

## How was this patch tested?
N/A

Author: Reynold Xin <rxin@databricks.com>

Closes #15731 from rxin/SPARK-18219.
"
ccb11543048dccd4cc590a8db1df1d9d5847d112,apache/spark,"[SPARK-17970][SQL] store partition spec in metastore for data source table

## What changes were proposed in this pull request?

We should follow hive table and also store partition spec in metastore for data source table.
This brings 2 benefits:

1. It's more flexible to manage the table data files, as users can use `ADD PARTITION`, `DROP PARTITION` and `RENAME PARTITION`
2. We don't need to cache all file status for data source table anymore.

## How was this patch tested?

existing tests.

Author: Eric Liang <ekl@databricks.com>
Author: Michael Allman <michael@videoamp.com>
Author: Eric Liang <ekhliang@gmail.com>
Author: Wenchen Fan <wenchen@databricks.com>

Closes #15515 from cloud-fan/partition.
"
0ebb0c0d4dd3e192464dc5e0e6f01efa55b945ed,apache/spark,"[SPARK-23754][PYTHON] Re-raising StopIteration in client code

## What changes were proposed in this pull request?

Make sure that `StopIteration`s raised in users' code do not silently interrupt processing by spark, but are raised as exceptions to the users. The users' functions are wrapped in `safe_iter` (in `shuffle.py`), which re-raises `StopIteration`s as `RuntimeError`s

## How was this patch tested?

Unit tests, making sure that the exceptions are indeed raised. I am not sure how to check whether a `Py4JJavaError` contains my exception, so I simply looked for the exception message in the java exception's `toString`. Can you propose a better way?

## License

This is my original work, licensed in the same way as spark

Author: e-dorigatti <emilio.dorigatti@gmail.com>
Author: edorigatti <emilio.dorigatti@gmail.com>

Closes #21383 from e-dorigatti/fix_spark_23754.
"
0c0ad436ad909364915b910867d08262c62bc95d,apache/spark,"[SPARK-17719][SPARK-17776][SQL] Unify and tie up options in a single place in JDBC datasource package

## What changes were proposed in this pull request?

This PR proposes to fix arbitrary usages among `Map[String, String]`, `Properties` and `JDBCOptions` instances for options in `execution/jdbc` package and make the connection properties exclude Spark-only options.

This PR includes some changes as below:

  - Unify `Map[String, String]`, `Properties` and `JDBCOptions` in `execution/jdbc` package to `JDBCOptions`.

- Move `batchsize`, `fetchszie`, `driver` and `isolationlevel` options into `JDBCOptions` instance.

- Document `batchSize` and `isolationlevel` with marking both read-only options and write-only options. Also, this includes minor types and detailed explanation for some statements such as url.

- Throw exceptions fast by checking arguments first rather than in execution time (e.g. for `fetchsize`).

- Exclude Spark-only options in connection properties.

## How was this patch tested?

Existing tests should cover this.

Author: hyukjinkwon <gurwls223@gmail.com>

Closes #15292 from HyukjinKwon/SPARK-17719.
"
663cc400f3b927633e47df07eea409da0e9ae70e,apache/spark,"[SPARK-12725][SQL] Resolving Name Conflicts in SQL Generation and Name Ambiguity Caused by Internally Generated Expressions

Some analysis rules generate aliases or auxiliary attribute references with the same name but different expression IDs. For example, `ResolveAggregateFunctions` introduces `havingCondition` and `aggOrder`, and `DistinctAggregationRewriter` introduces `gid`.

This is OK for normal query execution since these attribute references get expression IDs. However, it's troublesome when converting resolved query plans back to SQL query strings since expression IDs are erased.

Here's an example Spark 1.6.0 snippet for illustration:
```scala
sqlContext.range(10).select('id as 'a, 'id as 'b).registerTempTable(""t"")
sqlContext.sql(""SELECT SUM(a) FROM t GROUP BY a, b ORDER BY COUNT(a), COUNT(b)"").explain(true)
```
The above code produces the following resolved plan:
```
== Analyzed Logical Plan ==
_c0: bigint
Project [_c0#101L]
+- Sort [aggOrder#102L ASC,aggOrder#103L ASC], true
   +- Aggregate [a#47L,b#48L], [(sum(a#47L),mode=Complete,isDistinct=false) AS _c0#101L,(count(a#47L),mode=Complete,isDistinct=false) AS aggOrder#102L,(count(b#48L),mode=Complete,isDistinct=false) AS aggOrder#103L]
      +- Subquery t
         +- Project [id#46L AS a#47L,id#46L AS b#48L]
            +- LogicalRDD [id#46L], MapPartitionsRDD[44] at range at <console>:26
```
Here we can see that both aggregate expressions in `ORDER BY` are extracted into an `Aggregate` operator, and both of them are named `aggOrder` with different expression IDs.

The solution is to automatically add the expression IDs into the attribute name for the Alias and AttributeReferences that are generated by Analyzer in SQL Generation.

In this PR, it also resolves another issue. Users could use the same name as the internally generated names. The duplicate names should not cause name ambiguity. When resolving the column, Catalyst should not pick the column that is internally generated.

Could you review the solution? marmbrus liancheng

I did not set the newly added flag for all the alias and attribute reference generated by Analyzers. Please let me know if I should do it? Thank you!

Author: gatorsmile <gatorsmile@gmail.com>

Closes #11050 from gatorsmile/namingConflicts.
"
7151e1e4c8f4f764c54047ef82b988f887a0b9c7,apache/spark,"Rename ""jobs"" to ""applications"" in the standalone cluster
"
ca9fe540fe04e2e230d1e76526b5502bab152914,apache/spark,"[SPARK-10662] [DOCS] Code snippets are not properly formatted in tables

* Backticks are processed properly in Spark Properties table
* Removed unnecessary spaces
* See http://people.apache.org/~pwendell/spark-nightly/spark-master-docs/latest/running-on-yarn.html

Author: Jacek Laskowski <jacek.laskowski@deepsense.io>

Closes #8795 from jaceklaskowski/docs-yarn-formatting.
"
17f3075bc4aa8cbed165f7b367f70e84b1bc8db9,apache/spark,"[SPARK-1620] Handle uncaught exceptions in function run by Akka scheduler

If the intended behavior was that uncaught exceptions thrown in functions being run by the Akka scheduler would end up being handled by the default uncaught exception handler set in Executor, and if that behavior is, in fact, correct, then this is a way to accomplish that.  I'm not certain, though, that we shouldn't be doing something different to handle uncaught exceptions from some of these scheduled functions.

In any event, this PR covers all of the cases I comment on in [SPARK-1620](https://issues.apache.org/jira/browse/SPARK-1620).

Author: Mark Hamstra <markhamstra@gmail.com>

Closes #622 from markhamstra/SPARK-1620 and squashes the following commits:

071d193 [Mark Hamstra] refactored post-SPARK-1772
1a6a35e [Mark Hamstra] another style fix
d30eb94 [Mark Hamstra] scalastyle
3573ecd [Mark Hamstra] Use wrapped try/catch in Utils.tryOrExit
8fc0439 [Mark Hamstra] Make functions run by the Akka scheduler use Executor's UncaughtExceptionHandler
"
e7905a9395c1a002f50bab29e16a729e14d4ed6f,apache/spark,"[SPARK-9463] [ML] Expose model coefficients with names in SparkR RFormula

Preview:

```
> summary(m)
            features coefficients
1        (Intercept)    1.6765001
2       Sepal_Length    0.3498801
3 Species.versicolor   -0.9833885
4  Species.virginica   -1.0075104

```

Design doc from umbrella task: https://docs.google.com/document/d/10NZNSEurN2EdWM31uFYsgayIPfCFHiuIu3pCWrUmP_c/edit

cc mengxr

Author: Eric Liang <ekl@databricks.com>

Closes #7771 from ericl/summary and squashes the following commits:

ccd54c3 [Eric Liang] second pass
a5ca93b [Eric Liang] comments
2772111 [Eric Liang] clean up
70483ef [Eric Liang] fix test
7c247d4 [Eric Liang] Merge branch 'master' into summary
3c55024 [Eric Liang] working
8c539aa [Eric Liang] first pass
"
40ed2af587cedadc6e5249031857a922b3b234ca,apache/spark,"[SPARK-9763][SQL] Minimize exposure of internal SQL classes.

There are a few changes in this pull request:

1. Moved all data sources to execution.datasources, except the public JDBC APIs.
2. In order to maintain backward compatibility from 1, added a backward compatibility translation map in data source resolution.
3. Moved ui and metric package into execution.
4. Added more documentation on some internal classes.
5. Renamed DataSourceRegister.format -> shortName.
6. Added ""override"" modifier on shortName.
7. Removed IntSQLMetric.

Author: Reynold Xin <rxin@databricks.com>

Closes #8056 from rxin/SPARK-9763 and squashes the following commits:

9df4801 [Reynold Xin] Removed hardcoded name in test cases.
d9babc6 [Reynold Xin] Shorten.
e484419 [Reynold Xin] Removed VisibleForTesting.
171b812 [Reynold Xin] MimaExcludes.
2041389 [Reynold Xin] Compile ...
79dda42 [Reynold Xin] Compile.
0818ba3 [Reynold Xin] Removed IntSQLMetric.
c46884f [Reynold Xin] Two more fixes.
f9aa88d [Reynold Xin] [SPARK-9763][SQL] Minimize exposure of internal SQL classes.
"
9e9e9e1d898387a1996e4c57128bafadb5938a9b,apache/spark,"Renamed CleanupTask to MetadataCleaner.
"
c8e934ef3cd06f02f9a2946e96a1a52293c22490,apache/spark,"[SPARK-5447][SQL] Replaced reference to SchemaRDD with DataFrame.

and

[SPARK-5448][SQL] Make CacheManager a concrete class and field in SQLContext

Author: Reynold Xin <rxin@databricks.com>

Closes #4242 from rxin/sqlCleanup and squashes the following commits:

e351cb2 [Reynold Xin] Fixed toDataFrame.
6545c42 [Reynold Xin] More changes.
728c017 [Reynold Xin] [SPARK-5447][SQL] Replaced reference to SchemaRDD with DataFrame.
"
f35df7d1820738cc1dac81271041707010e2f08f,apache/spark,"[SPARK-13805] [SQL] Generate code that get a value in each column from ColumnVector when ColumnarBatch is used

## What changes were proposed in this pull request?

This PR generates code that get a value in each column from ```ColumnVector``` instead of creating ```InternalRow``` when ```ColumnarBatch``` is accessed. This PR improves benchmark program by up to 15%.
This PR consists of two parts:

1. Get an ```ColumnVector ``` by using ```ColumnarBatch.column()``` method
2. Get a value of each column by using ```rdd_col${COLIDX}.getInt(ROWIDX)``` instead of ```rdd_row.getInt(COLIDX)```

This is a motivated example.
````
    sqlContext.conf.setConfString(SQLConf.PARQUET_VECTORIZED_READER_ENABLED.key, ""true"")
    sqlContext.conf.setConfString(SQLConf.WHOLESTAGE_CODEGEN_ENABLED.key, ""true"")
    val values = 10
    withTempPath { dir =>
      withTempTable(""t1"", ""tempTable"") {
        sqlContext.range(values).registerTempTable(""t1"")
        sqlContext.sql(""select id % 2 as p, cast(id as INT) as id from t1"")
          .write.partitionBy(""p"").parquet(dir.getCanonicalPath)
        sqlContext.read.parquet(dir.getCanonicalPath).registerTempTable(""tempTable"")
        sqlContext.sql(""select sum(p) from tempTable"").collect
      }
    }
````

The original code
````java
    ...
    /* 072 */       while (!shouldStop() && rdd_batchIdx < numRows) {
    /* 073 */         InternalRow rdd_row = rdd_batch.getRow(rdd_batchIdx++);
    /* 074 */         /*** CONSUME: TungstenAggregate(key=[], functions=[(sum(cast(p#4 as bigint)),mode=Partial,isDistinct=false)], output=[sum#10L]) */
    /* 075 */         /* input[0, int] */
    /* 076 */         boolean rdd_isNull = rdd_row.isNullAt(0);
    /* 077 */         int rdd_value = rdd_isNull ? -1 : (rdd_row.getInt(0));
    ...
````

The code generated by this PR
````java
    /* 072 */       while (!shouldStop() && rdd_batchIdx < numRows) {
    /* 073 */         org.apache.spark.sql.execution.vectorized.ColumnVector rdd_col0 = rdd_batch.column(0);
    /* 074 */         /*** CONSUME: TungstenAggregate(key=[], functions=[(sum(cast(p#4 as bigint)),mode=Partial,isDistinct=false)], output=[sum#10L]) */
    /* 075 */         /* input[0, int] */
    /* 076 */         boolean rdd_isNull = rdd_col0.getIsNull(rdd_batchIdx);
    /* 077 */         int rdd_value = rdd_isNull ? -1 : (rdd_col0.getInt(rdd_batchIdx));
    ...
    /* 128 */         rdd_batchIdx++;
    /* 129 */       }
    /* 130 */       if (shouldStop()) return;

````
Performance
Without this PR
````
model name	: Intel(R) Xeon(R) CPU E5-2667 v2  3.30GHz
Partitioned Table:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative
-------------------------------------------------------------------------------------------
Read data column                          434 /  488         36.3          27.6       1.0X
Read partition column                     302 /  346         52.1          19.2       1.4X
Read both columns                         588 /  643         26.8          37.4       0.7X
````
With this PR
````
model name	: Intel(R) Xeon(R) CPU E5-2667 v2  3.30GHz
Partitioned Table:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative
-------------------------------------------------------------------------------------------
Read data column                          392 /  516         40.1          24.9       1.0X
Read partition column                     256 /  318         61.4          16.3       1.5X
Read both columns                         523 /  539         30.1          33.3       0.7X
````

## How was this patch tested?
Tested by existing test suites and benchmark

Author: Kazuaki Ishizaki <ishizaki@jp.ibm.com>

Closes #11636 from kiszk/SPARK-13805.
"
a05835b89fe2086e460f0b80f7c22e284c0c32d0,apache/spark,"[SPARK-6542][SQL] add CreateStruct

Similar to `CreateArray`, we can add `CreateStruct` to create nested columns. marmbrus

Author: Xiangrui Meng <meng@databricks.com>

Closes #5195 from mengxr/SPARK-6542 and squashes the following commits:

3795c57 [Xiangrui Meng] update error message
ae7ac3e [Xiangrui Meng] move unit test to a separate suite
85dd559 [Xiangrui Meng] use NamedExpr
c78e31a [Xiangrui Meng] Merge remote-tracking branch 'apache/master' into SPARK-6542
85f3106 [Xiangrui Meng] add CreateStruct
"
d29e429eeb7bea3b49cfb9227d64a609f3c11531,apache/spark,"[SPARK-14714][ML][PYTHON] Fixed issues with non-kwarg typeConverter arg for Param constructor

## What changes were proposed in this pull request?

PySpark Param constructors need to pass the TypeConverter argument by name, partly to make sure it is not mistaken for the expectedType arg and partly because we will remove the expectedType arg in 2.1. In several places, this is not being done correctly.

This PR changes all usages in pyspark/ml/ to keyword args.

## How was this patch tested?

Existing unit tests.  I will not test type conversion for every Param unless we really think it necessary.

Also, if you start the PySpark shell and import classes (e.g., pyspark.ml.feature.StandardScaler), then you no longer get this warning:
```
/Users/josephkb/spark/python/pyspark/ml/param/__init__.py:58: UserWarning: expectedType is deprecated and will be removed in 2.1. Use typeConverter instead, as a keyword argument.
  ""Use typeConverter instead, as a keyword argument."")
```
That warning came from the typeConverter argument being passes as the expectedType arg by mistake.

Author: Joseph K. Bradley <joseph@databricks.com>

Closes #12480 from jkbradley/typeconverter-fix.
"
aaf50d05c7616e4f8f16654b642500ae06cdd774,apache/spark,"[SPARK-5658][SQL] Finalize DDL and write support APIs

https://issues.apache.org/jira/browse/SPARK-5658

Author: Yin Huai <yhuai@databricks.com>

This patch had conflicts when merged, resolved by
Committer: Michael Armbrust <michael@databricks.com>

Closes #4446 from yhuai/writeSupportFollowup and squashes the following commits:

f3a96f7 [Yin Huai] davies's comments.
225ff71 [Yin Huai] Use Scala TestHiveContext to initialize the Python HiveContext in Python tests.
2306f93 [Yin Huai] Style.
2091fcd [Yin Huai] Merge remote-tracking branch 'upstream/master' into writeSupportFollowup
537e28f [Yin Huai] Correctly clean up temp data.
ae4649e [Yin Huai] Fix Python test.
609129c [Yin Huai] Doc format.
92b6659 [Yin Huai] Python doc and other minor updates.
cbc717f [Yin Huai] Rename dataSourceName to source.
d1c12d3 [Yin Huai] No need to delete the duplicate rule since it has been removed in master.
22cfa70 [Yin Huai] Merge remote-tracking branch 'upstream/master' into writeSupportFollowup
d91ecb8 [Yin Huai] Fix test.
4c76d78 [Yin Huai] Simplify APIs.
3abc215 [Yin Huai] Merge remote-tracking branch 'upstream/master' into writeSupportFollowup
0832ce4 [Yin Huai] Fix test.
98e7cdb [Yin Huai] Python style.
2bf44ef [Yin Huai] Python APIs.
c204967 [Yin Huai] Format
a10223d [Yin Huai] Merge remote-tracking branch 'upstream/master' into writeSupportFollowup
9ff97d8 [Yin Huai] Add SaveMode to saveAsTable.
9b6e570 [Yin Huai] Update doc.
c2be775 [Yin Huai] Merge remote-tracking branch 'upstream/master' into writeSupportFollowup
99950a2 [Yin Huai] Use Java enum for SaveMode.
4679665 [Yin Huai] Remove duplicate rule.
77d89dc [Yin Huai] Update doc.
e04d908 [Yin Huai] Move import and add (Scala-specific) to scala APIs.
cf5703d [Yin Huai] Add checkAnswer to Java tests.
7db95ff [Yin Huai] Merge remote-tracking branch 'upstream/master' into writeSupportFollowup
6dfd386 [Yin Huai] Add java test.
f2f33ef [Yin Huai] Fix test.
e702386 [Yin Huai] Apache header.
b1e9b1b [Yin Huai] Format.
ed4e1b4 [Yin Huai] Merge remote-tracking branch 'upstream/master' into writeSupportFollowup
af9e9b3 [Yin Huai] DDL and write support API followup.
2a6213a [Yin Huai] Update API names.
e6a0b77 [Yin Huai] Update test.
43bae01 [Yin Huai] Remove createTable from HiveContext.
5ffc372 [Yin Huai] Add more load APIs to SQLContext.
5390743 [Yin Huai] Add more save APIs to DataFrame.
"
784fcd532784fcfd9bf0a1db71c9f71c469ee716,apache/spark,"[SPARK-6117] [SQL] Improvements to DataFrame.describe()

1. Slightly modifications to the code to make it more readable.
2. Added Python implementation.
3. Updated the documentation to state that we don't guarantee the output schema for this function and it should only be used for exploratory data analysis.

Author: Reynold Xin <rxin@databricks.com>

Closes #5201 from rxin/df-describe and squashes the following commits:

25a7834 [Reynold Xin] Reset run-tests.
6abdfee [Reynold Xin] [SPARK-6117] [SQL] Improvements to DataFrame.describe()
"
11e5c372862ec00e57460b37ccfee51c6d93c5f7,apache/spark,"[SPARK-8962] Add Scalastyle rule to ban direct use of Class.forName; fix existing uses

This pull request adds a Scalastyle regex rule which fails the style check if `Class.forName` is used directly.  `Class.forName` always loads classes from the default / system classloader, but in a majority of cases, we should be using Spark's own `Utils.classForName` instead, which tries to load classes from the current thread's context classloader and falls back to the classloader which loaded Spark when the context classloader is not defined.

<!-- Reviewable:start -->
[<img src=""https://reviewable.io/review_button.png"" height=40 alt=""Review on Reviewable""/>](https://reviewable.io/reviews/apache/spark/7350)
<!-- Reviewable:end -->

Author: Josh Rosen <joshrosen@databricks.com>

Closes #7350 from JoshRosen/ban-Class.forName and squashes the following commits:

e3e96f7 [Josh Rosen] Merge remote-tracking branch 'origin/master' into ban-Class.forName
c0b7885 [Josh Rosen] Hopefully fix the last two cases
d707ba7 [Josh Rosen] Fix uses of Class.forName that I missed in my first cleanup pass
046470d [Josh Rosen] Merge remote-tracking branch 'origin/master' into ban-Class.forName
62882ee [Josh Rosen] Fix uses of Class.forName or add exclusion.
d9abade [Josh Rosen] Add stylechecker rule to ban uses of Class.forName
"
6d37e1eb90054cdb6323b75fb202f78ece604b15,apache/spark,"[SPARK-13817][BUILD][SQL] Re-enable MiMA and removes object DataFrame

## What changes were proposed in this pull request?

PR #11443 temporarily disabled MiMA check, this PR re-enables it.

One extra change is that `object DataFrame` is also removed. The only purpose of introducing `object DataFrame` was to use it as an internal factory for creating `Dataset[Row]`. By replacing this internal factory with `Dataset.newDataFrame`, both `DataFrame` and `DataFrame$` are entirely removed from the API, so that we can simply put a `MissingClassProblem` filter in `MimaExcludes.scala` for most DataFrame API  changes.

## How was this patch tested?

Tested by MiMA check triggered by Jenkins.

Author: Cheng Lian <lian@databricks.com>

Closes #11656 from liancheng/re-enable-mima.
"
db821ed2ededf6ce79b838c77a9c10bed2ce555a,apache/spark,"[SPARK-4508] [SQL] build native date type to conform behavior to Hive

The previous #3732 is reverted due to some test failure.
Have fixed that.

Author: Daoyuan Wang <daoyuan.wang@intel.com>

Closes #4325 from adrian-wang/datenative and squashes the following commits:

096e20d [Daoyuan Wang] fix for mixed timezone
0ed0fdc [Daoyuan Wang] fix test data
a2fdd4e [Daoyuan Wang] getDate
c37832b [Daoyuan Wang] row to catalyst
f0005b1 [Daoyuan Wang] add date in sql parser and java type conversion
024c9a6 [Daoyuan Wang] clean some import order
d6715fc [Daoyuan Wang] refactoring Date as Primitive Int internally
374abd5 [Daoyuan Wang] spark native date type support
"
363baacaded56047bcc63276d729ab911e0336cf,apache/spark,"SPARK-3811 [CORE] More robust / standard Utils.deleteRecursively, Utils.createTempDir

I noticed a few issues with how temp directories are created and deleted:

*Minor*

* Guava's `Files.createTempDir()` plus `File.deleteOnExit()` is used in many tests to make a temp dir, but `Utils.createTempDir()` seems to be the standard Spark mechanism
* Call to `File.deleteOnExit()` could be pushed into `Utils.createTempDir()` as well, along with this replacement
* _I messed up the message in an exception in `Utils` in SPARK-3794; fixed here_

*Bit Less Minor*

* `Utils.deleteRecursively()` fails immediately if any `IOException` occurs, instead of trying to delete any remaining files and subdirectories. I've observed this leave temp dirs around. I suggest changing it to continue in the face of an exception and throw one of the possibly several exceptions that occur at the end.
* `Utils.createTempDir()` will add a JVM shutdown hook every time the method is called. Even if the subdir is the parent of another parent dir, since this check is inside the hook. However `Utils` manages a set of all dirs to delete on shutdown already, called `shutdownDeletePaths`. A single hook can be registered to delete all of these on exit. This is how Tachyon temp paths are cleaned up in `TachyonBlockManager`.

I noticed a few other things that might be changed but wanted to ask first:

* Shouldn't the set of dirs to delete be `File`, not just `String` paths?
* `Utils` manages the set of `TachyonFile` that have been registered for deletion, but the shutdown hook is managed in `TachyonBlockManager`. Should this logic not live together, and not in `Utils`? it's more specific to Tachyon, and looks a slight bit odd to import in such a generic place.

Author: Sean Owen <sowen@cloudera.com>

Closes #2670 from srowen/SPARK-3811 and squashes the following commits:

071ae60 [Sean Owen] Update per @vanzin's review
da0146d [Sean Owen] Make Utils.deleteRecursively try to delete all paths even when an exception occurs; use one shutdown hook instead of one per method call to delete temp dirs
3a0faa4 [Sean Owen] Standardize on Utils.createTempDir instead of Files.createTempDir
"
e243c5ffacd70ecadaf5c91668955dcc8141e060,apache/spark,"[SPARK-2053][SQL] Add Catalyst expressions for CASE WHEN.

JIRA ticket: https://issues.apache.org/jira/browse/SPARK-2053

This PR adds support for two types of CASE statements present in Hive. The first type is of the form `CASE WHEN a THEN b [WHEN c THEN d]* [ELSE e] END`, with the semantics like a chain of if statements. The second type is of the form `CASE a WHEN b THEN c [WHEN d THEN e]* [ELSE f] END`, with the semantics like a switch statement on key `a`. Both forms are implemented in `CaseWhen`.

[This link](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF#LanguageManualUDF-ConditionalFunctions) contains more detailed descriptions on their semantics.

Notes / Open issues:

* Please check if any implicit contracts / invariants are broken in the implementations (especially for the operators). I am not very familiar with them and I currently find them tricky to spot.
* We should decide whether or not a non-boolean condition is allowed in a branch of `CaseWhen`. Hive throws a `SemanticException` for this situation and I think it'd be good to mimic it -- the question is where in the whole Spark SQL pipeline should we signal an exception for such a query.

Author: Zongheng Yang <zongheng.y@gmail.com>

Closes #1055 from concretevitamin/caseWhen and squashes the following commits:

4226eb9 [Zongheng Yang] Comment.
79d26fc [Zongheng Yang] Merge branch 'master' into caseWhen
caf9383 [Zongheng Yang] Update a FIXME.
9d26ab8 [Zongheng Yang] Add @transient marker.
788a0d9 [Zongheng Yang] Implement CastNulls, which fixes udf_case and udf_when.
7ef284f [Zongheng Yang] Refactors: remove redundant passes, improve toString, mark transient.
f47ae7b [Zongheng Yang] Modify queries in tests to have shorter golden files.
1c1fbfc [Zongheng Yang] Cleanups per review comments.
7d2b7e2 [Zongheng Yang] Translate CaseKeyWhen to CaseWhen at parsing time.
47d406a [Zongheng Yang] Do toArray once and lazily outside of eval().
bb3d109 [Zongheng Yang] Update scaladoc of a method.
aea3195 [Zongheng Yang] Fix bug that branchesArr is not used; remove unused import.
96870a8 [Zongheng Yang] Turn off scalastyle for some comments.
7392f3a [Zongheng Yang] Minor cleanup.
2cf08bb [Zongheng Yang] Merge branch 'master' into caseWhen
9f84b40 [Zongheng Yang] Add golden outputs from Hive.
db51a85 [Zongheng Yang] Add allCondBooleans check; uncomment tests.
3f9ef0a [Zongheng Yang] Cleanups and bug fixes (mainly in eval() and resolved).
be54bc8 [Zongheng Yang] Rewrite eval() to a low-level implementation. Separate two CASE stmts.
f2bcb9d [Zongheng Yang] WIP
5906f75 [Zongheng Yang] WIP
efd019b [Zongheng Yang] eval() and toString() bug fixes.
7d81e95 [Zongheng Yang] Clean up resolved.
a31d782 [Zongheng Yang] Finish up Case.
"
24d7d2e453ab5eef6099a32fb9e8ed60f6ada93a,apache/spark,"[SPARK-13579][BUILD] Stop building the main Spark assembly.

This change modifies the ""assembly/"" module to just copy needed
dependencies to its build directory, and modifies the packaging
script to pick those up (and remove duplicate jars packages in the
examples module).

I also made some minor adjustments to dependencies to remove some
test jars from the final packaging, and remove jars that conflict with each
other when packaged separately (e.g. servlet api).

Also note that this change restores guava in applications' classpaths, even
though it's still shaded inside Spark. This is now needed for the Hadoop
libraries that are packaged with Spark, which now are not processed by
the shade plugin.

Author: Marcelo Vanzin <vanzin@cloudera.com>

Closes #11796 from vanzin/SPARK-13579.
"
03f9871116801abbdd7b4c7892c8d6affb1c4d9e,apache/spark,"MetricsSystem refactor
"
14e3f114efb906937b2d7b7ac04484b2814a3b48,apache/spark,"[SPARK-5168] Make SQLConf a field rather than mixin in SQLContext

This change should be binary and source backward compatible since we didn't change any user facing APIs.

Author: Reynold Xin <rxin@databricks.com>

Closes #3965 from rxin/SPARK-5168-sqlconf and squashes the following commits:

42eec09 [Reynold Xin] Fix default conf value.
0ef86cc [Reynold Xin] Fix constructor ordering.
4d7f910 [Reynold Xin] Properly override config.
ccc8e6a [Reynold Xin] [SPARK-5168] Make SQLConf a field rather than mixin in SQLContext
"
c3574ae57ffbfde8daf45f46a2d58607a7a921be,bitpay/copay,"refactor WalletFactory test to use sinon instead of mocks WIP
"
16541f413ef39e59bbd8e14707ccc48ca0b1725b,bitpay/copay,"Merge pull request #773 from maraoz/ui/unify-notifications

Unify notification systems"
d42de0b651a45d2e00f3f76a54f3888d4e72ba18,bitpay/copay,"Merge pull request #6 from JDonadio/ref/design-03

Refactor navigation parameters"
a8bd3e3bcf715867c2bfbfb91215b44502b8f2a6,bitpay/copay,"fix unnecessary btn padding and test exceptions
"
fe53f1b87c30de9ffb16e2f208243a3cfe2db6ac,bitpay/copay,"Merge pull request #1059 from yemel/feature/change-menu

Refactor menu, split transactions tab into send and history"
1683aa539be341226f40c92937f982913bcae525,bitpay/copay,"Merge branch 'master' into refactor/modals
"
a6eb375150036cfee9e46902ca2a682c8b0b2411,bitpay/copay,"add convenient way to test pages, and improve app load performance
"
313269a45c9950e477a43af06e97109ba122892d,bitpay/copay,"add pincode service - refactor
"
bbb539012a057d61873f8f4a0be7f546e8f15ec3,bitpay/copay,"Split log and logger to show the usage of jsdoc
"
41cc509d47ecc675a9a893e9137fb10674de205d,bitpay/copay,"refactor settings tab
"
e42d09574bd0fb6aacb4213c9986e40014ad1cd4,bitpay/copay,"Refactor buying process
"
98471e952ac774ce70f64a171ab7b19d6c82dcd4,bitpay/copay,"Bug/select wallet incomplete  / Refactor wallet Services (#4159)

* Addressbook: display error if select an incomplete wallet

* Check if wallet is complete/needs_backup for Glidera and Coinbase

* Ref/create a walletService

* Ref. walletService

* Fix Glidera and Coinbase

* Removes txService

* Fix glidera connection for mobile. Fix bitcode for xcode

* Fix duplicated entry

* Revert ""Bump bwc version 2.3.1""

* adds karma-mocha

* Refactor

* Refactor lock function

* Refactor reject, remove and broadcast tx

* add walletService tests WIP

* add walletService tests WIP 2

* merge

* update tests to mocha

* fix tests. Angular 1.5?

* Fix test

* Generate angular-bwc before testing

* Rever gitignore

* Wording
"
1f64c5adaadd2105bb33b775bc6d760049f08a8f,bitpay/copay,"Merge pull request #4810 from bitpay/bitpay

Simplify user interface & major performance improvements"
8a316b4290adb43c93e23c34ed24c6630798028c,bitpay/copay,"remove unused routes
"
d816c08dc8f4a3e81fcdff52ba0811cdff68bd15,bitpay/copay,"Merge pull request #2645 from cmgustavo/bug/ux-animation-03

Fix scroll after animation. Removes unused attributes"
01da9d91e4a4e6d1cb903644067023e90322bd93,bitpay/copay,"cleanup
"
2d04eb43352d47741b2b782845e34a9cd3daa705,bitpay/copay,"Fixes layouts and improves appearance of balance page.
"
f6d1be1fa3dfb23e56614fd91c00166b5ea2cd04,bitpay/copay,"remove duplicated code
"
fc339f647260b96c947d85bcc5e686f73d319ec3,bitpay/copay,"Merge pull request #964 from matiu/feature/renameHD

Feature/rename hd"
b40038a554b5f6f1f08519e031f7bfd405306c84,bitpay/copay,"extract backup into service
"
3cb8904c2012581ceae17f2f0a9c06890f0a2887,bitpay/copay,"refactor(tsconfig): set noUnusedLocals, begin removing unused locals
"
59ee6f6037b4f16e29aef2d5933256463d019766,bitpay/copay,"Merge pull request #8720 from bitjson/prettier

refactor(prettier): npm run fix:prettier"
ecf5f5c608e7278efb3c4c4ded3eb6b5f7046f23,bitpay/copay,"Removes unused files
"
fd9e6cb48a81b158a3513104669046aa5e2466fb,bitpay/copay,"refactor isChange logic
"
e9ce33785883563e7a95c1b3d49a155d13c61980,gentics/mesh,"Code cleanup
"
5eb2e8ea3e8b8a35eee3c98ba215f1ee4ce98443,gentics/mesh,"Replace version reference with version string
"
e6f11eaa30e3dc31c53b4bcd37335773203a5316,gentics/mesh,"Minor refactoring
"
dceacdbe386e5d0c1192ccae0cacb129d89d0e83,gentics/mesh,"Refactor index handler
"
2cd037cfee3727445500c0463dafb3e6f710e9c7,gentics/mesh,"Refactor binary handling (#223)

"
f9dfe97a05887d61cb6d6d3f129ea512dc089518,gentics/mesh,"Cleanup of rest models
"
83fd485177608e1ed0b2fc00d73897655c6ae628,gentics/mesh,"Refactor upload handler
"
104e981a9067d5936a866e8dbfd937d47f5f566f,gentics/mesh,"Move ES configuration into ElasticSearchProvider class, fix various smaller issues, add mesh name support
"
150caba00480f2da202eb6f8bf3629c6adb3e903,gentics/mesh,"Cleanup
"
d0d66a5edb36d6fee8b1a7403398cc26b4a3691d,gentics/mesh,"Remove NodeTransformationTask and move the code into nodeimpl.
"
6818ae59148403b6fe138f995d19691db1800c71,gentics/mesh,"Refactoring and added code for paging (wip)
"
510b4e480b1fe1efe9c09ed6c9bf26e203b4745f,gentics/mesh,"Refactor authentication code - wip
"
c239038a2ccdf89e0693744c02c883555d7bb9de,gentics/mesh,"Refactor trx error handling and fix multiple transactional retry sideeffect causes
"
c34566fffec3c5fd660119201e04a2987d32561e,gentics/mesh,"Cleanup dead code and remove rx code
"
c3c42f523e2e4994c78319ef0492939e4cdd7b71,gentics/mesh,"Refactor transaction code
"
02c762a7fb8861ccbc621b9fbd2bafb86ab15b22,gentics/mesh,"Cleanup
"
79b9d77b73a601d1c2ce9434b2f8542079a74c0a,gisma/uavRst,"split seeding from segmentation
"
2a32a86a6c62efea72a0c3f15a0d2e0a4777fd86,google/wuffs,"Make the status type a struct, not an int32_t
"
a69948b23d627786bf077f276586962c6585bc77,google/wuffs,"Simplify the base-impl set_limit method
"
0b199dd4b63de18e41ed9756f0071ca582387357,ipfs/go-ipfs,"Merge pull request #511 from jbenet/test-reorg

test reorg"
39a87a0fb01e36d682f9b1bfcd3bf46c2ea2a00d,ipfs/go-ipfs,"Extract /mfs

The /mfs module has been extracted to github.com/ipfs/go-mfs

All history has been retained in the new repository. README, LICENSE,
Makefiles and CI integration have been added to the new location.

License: MIT
Signed-off-by: Hector Sanjuan <9c6eb1131b4202ad199765465391a99f6498009c@protocol.ai>
"
82204d1de38bc93384824a8a2bf3b640b89329d8,ipfs/go-ipfs,"Merge pull request #5331 from ipfs/refactor/coreapi/block

block cmd: Use coreapi"
2240272d850a245c55431215c84107fd69be921e,ipfs/go-ipfs,"change Provide RPC to not wait for an ACK, improves performance of 'Add' operations
"
0a45ada4ed0f2679bc9434757fb07d00d4bd967c,ipfs/go-ipfs,"CLI: discoverability and consistency (#2542)

* reduces help indent from 4 to 2 spaces

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* reduces horz/vert space taken by ""ipfs"" cmd

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* show subcommands on shorthelp

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Drops colons at the end of cmd headings.

This makes command headings consistent with the output of 'ipfs', which
does not include colons.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* more consistent output between short-/long-help

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Puts DESCRIPTION before SUBCOMMANDS.

Users likely want to understand what a command does before worrying
about its subcommands.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Keeps ipfs cmd from outputting its subcmds twice.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes redundant synopsis from ""file""

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes extra whitespace from longhelp

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Consistent spacing whether SUBCMDS or not.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes redundant SUBCMD output from ipfs object.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes redundant synopsis from ""name""

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Newline after Description only if it exists.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes redundant synopsis from ""bootstrap""

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes redundant synopsis from ""swarm""

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes trailing newline in ping help.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Prints shorthelp on parse error.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* tiny comment fixes

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* updates README usage

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Don't include extra whitespace if no .MoreHelp

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* description improvements

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Hides the obscure 'file' subcommand.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Splits 'ipfs daemon' into Short and Long help.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes redundant synopsis from ""config""

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Wraps lines to keep from going over 80.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* specify repo separately

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* s/structure/hierarchy

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* missing .

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes trailing colon from 'usage' test.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Updates sharness test error messages.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes trailing colon from 'usage' test.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Updates add-symlink to use /bin/sh.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Removes ""hierarchy"".

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>

* Updates ""ipfs ping"" synopsis.

* Updates t0040 with latest wording.

* Removes unnecessary daemon setup.

License: MIT
Signed-off-by: Stephen Whitmore <a279e090f825d0e4a676251676cfd471e52d1651@ipfs.io>
"
e3cf8936164f206b5feb4d4014f99ac665a3b796,ipfs/go-ipfs,"implement recursive indirect blocks

improve efficiency of multilayered indirect blocks

clean up tests

panic cleanup

clean up logic, improve readability

add final root node to the dagservice upon creation

importer: simplified dag generation

test: updated hashes using latest code

@whyrusleeping this is why the sharness tests
were failing: the hashes are added manually to
make sure our generation doesn't change.

cleanup after CR

fix merkledag tests

fix small block generation (no subblocks!)
"
3babf40e743efe663900443cebe8b02d373b60f3,ipfs/go-ipfs,"Merge pull request #3187 from ipfs/feat/cidv0

Rework go-ipfs to use content IDs version 0"
e2698a87336660cc52f7abcddc2130095306e3c0,ipfs/go-ipfs,"net -> p2p/net

The net package is the next to move. It will be massaged
a bit still to fix the Network / ""NetworkBackend"" conflict.
"
b8233c5a108e039d567b6d128e6820be816d20f4,keybase/kbfs,"[KBFS-1641] Fix KeyManager test flakes (#619)

The background update task always fetches the head
whenever it receives an update, which triggers a rekey
that races with the rekey-with-prompt timer. Fix this
by, instead of waiting for the first rekey and checking
whether the prompt flag is set, waiting for a rekey
with the prompt flag set. At worst, this'll cause the
test to time out.

Set RekeyWithPromptWaitTime to the individual
test timeout for tests.

Clean up various logs.

Fix bug with runTestsWithMetadataVers.

Also run all MDv3 tests in parallel."
b892ce70c7b1c3f8c5e3f0c8718dcdebac5e7488,keybase/kbfs,"Implemented PR feedback to refactor KBFS top-level status into KBFSOps

KBFS-561 #time 1h 30m

Signed-off-by: John Zila <a51dda7c7ff50b61eaea0444371f4a6a9301e501@keyba.se>
"
36765c52f2d17550971f2a099bc6bcecab7f3c92,keybase/kbfs,"Add a basic command-line driver for KBFS

This is convenient for ad-hoc testing, since it avoids FUSE.

Implement a few basic commands.

Refactor out common code with kbfsfuse's main.go.

This closes #142.
"
ccaba2b908acb3cdb6b9949d07f5c2f61026db5d,keybase/kbfs,"folder_update_prepper: give some functions better names

Issue: KBFS-2064
"
b6b654181f62b0bfba5e355a44b7c2dca463ff74,keybase/kbfs,"Update protocol usage after protocol package rename (#279)

Rename protocol to protocol/keybase1.

Re-vendoring client (update protocol to protocol/keybase1):
```
govendor remove github.com/keybase/client/go/protocol
govendor add github.com/keybase/client/go/protocol/keybase1

govendor update github.com/keybase/client/go/auth
govendor update github.com/keybase/client/go/externals
govendor update github.com/keybase/client/go/kex2
govendor update github.com/keybase/client/go/libkb
govendor update github.com/keybase/client/go/logger

govendor add github.com/keybase/client/go/gregor
govendor add github.com/keybase/client/go/protocol/chat1
govendor add github.com/keybase/client/go/protocol/gregor1
```"
0febf4903ba224cbb3a924d50d8a19827db3e569,keybase/kbfs,"Rename KeybaseDaemon to KeybaseService (#203)

The interface name shouldn't declare how it's implemented. The default
impl is a daemon RPC style service but it could be implemented without a
daemon or RPC (as it is on mobile).

The implementation code is untouched.. the RPC impl is still called
KeybaseDaemonRPC, as it should be.
"
572c43e14aadbc4121ae205be1950d5baee44331,libocca/occa,"[Parser] Split VDG for hostKernel and split kernels
"
d677916ab17503ba6db7513fdbdfcb66009ebfa0,lriki/Lumino,"rename templates
"
3bf94af4e197d781479c9f1dd06edb36f166af05,luci/luci-go,"[buildbucket] Add common.GitilesCommit.position

Make commit position a first-class citizen in Buildbucket.

R=a30c74fa30536fe7ea81ed6dec202e35e149e1fd@chromium.org

Bug: 851585
Change-Id: I18be1eb4276799482cb89d968e68e2d039a396e6
Reviewed-on: https://chromium-review.googlesource.com/1185527
Commit-Queue: Nodir Turakulov <ef4933a197ef7b4b3f55f1bec4942aead3637a2a@chromium.org>
Reviewed-by: Andrii Shyshkalov <a30c74fa30536fe7ea81ed6dec202e35e149e1fd@chromium.org>
"
e90eb65901a4f0cc055bdf36afa4bea4a1442356,oilshell/oil,"cmd_parse.py: Refactor ParseSimpleCommand to use the early-return style.

It was using an inconsistent mix.
"
9d37d76e81a263d19df8fe68e62503eebc3bd364,oilshell/oil,"[osh2oil] Translate here docs to Oil.

- Now using to word_part* stdin_parts rather than CompoundWord.
- osh/word_parse.py: Factor out _ReadLikeDQ()
- Got a couple here-doc cases passing in test/osh2oil.sh
  - Implemented word.RightMostSpanForWord() to aid the translation
- Add a more complicated test for the LST invariant in test/arena/

Other cleanups:

- Remove unused 'decay' param.
- core/cmd_exec.py: Remove error checks that never happen.
"
7ad8ebe3ab5c22b67419120a430abf957de547cc,oilshell/oil,"Some portability fixes (#14)

- include correct regex header on FreeBSD
- use #!/usr/bin/env instead of hardcoded Linux paths
- find shells with which"
700c223847f001be55f572187feeb19e0bd83ded,oilshell/oil,"Integrate brace detection and expansion.

Brace detection changes a CompoundWord node to a BracedWordTree node.
Brace expansion expands it using the ""Cartesian product"" algorithm back
into an *array* of CompoundWord.

This is relevant in three contexts:

- commands: echo -{a,b}- other
- for loops: for i in -{a,b}-  other; do echo $i; done
- arrays: array=({a,b} other)

So I inserted BraceDetectAll in osh/cmd_parse.py and osh/word_parse.py;
and BraceExpandAll in core/word_eval.py and core/cmd_exec.py.

I also fixed tilde expansion in all three contexts and added tests.

Changes to the algorithm in braces.py:

- Fixed bug where alternatives like {a,b}{c,d} were expanded in the
  wrong order.  The first one varies the slowest, and the last the
  fastest: ac ad bc bd.
- Fix error cases like {foo}
- Use _StackFrame to simplify the code

Testing:

- Add a comparison of count.sh to gold-test.sh, so we're testing the
  brace expansion in our own repo.
- Add date and oil version information to spec tests.

Other:

- Fixed a typo in evaluation of EscapedLiteralPart, which fixed a bunch
  of tests.  (--osh-allowed-failures bumped down in several places.)
- Rename AltPart to BracedAltPart, NumRangePart to BracedNumRangePart.
"
0c27fabeb34fbaa488bbd20247af61a714bc466a,oilshell/oil,"Change style for simple sum types to foo_e.Bar (from foo.Bar).

I'm preparing to retire util.Enum and move more types to ASDL.

All unit tests and spec tests pass.
"
0a3e75d5988c334197d4cb27d92acb901605019a,qemu/skiboot,"Add global CPU job queue

When we have multiple systems trying to start concurrent jobs on different
CPUs, they typically pick the first available (operating) CPU to schedule
the job on. This works fine when there's only one set of jobs or when we
want to bind jobs to specific CPUs.

When we have jobs such as asynchronously loading LIDs and scanning PHBs,
we don't care which CPUs they run on, we care more that they are not
scheduled on CPUs that have existing tasks.

This patch adds a global queue of jobs which secondary CPUs will look
at for work (if idle).

This leads to simplified callers, which just need to queue jobs to NULL
(no specific CPU) and then call a magic function that will run the
CPU job queue if we don't have secondary CPUs.

Additionally, we add a const char *name to cpu_job just to aid with
debugging.

Signed-off-by: Stewart Smith <ec31ab75ddf977353c8f660f92ea8b23f64aef25@linux.vnet.ibm.com>
"
9b39a3a8163d167e1483b71ecb1da70e9cbe0a88,ruby-x/rubyx,"renaming, making space for extra layer
"
9727b4a3e631e07245da845ff23ffd77e60cc603,secdev/scapy,"F811 - redefinition of unused variable/class/...
"
74c2d5c8f35f5166032f0132e5805cad866c07cb,smrealms/smr,"Remove references from class method arguments

Arguments should only be passed by reference into a function if
the function intends to modify the original variable. It should
not be used to try to improve performance (it won't: see #317).

Here we remove improper references from class method arguments,
along with a few other internal references that I missed earlier.
"
147331f6bf2a9cc4f0468d70b3b9d303c7f119ee,spotify/scio,"clean up bigquery dependencies
"
60fb3ff821f01af660b40595f7c3df245fd601ef,spotify/styx,"v2 API and new model

New model wll be used to do scheduling on workflow instead of data
endpoints.

v0 and v1 APIs are deprecated now.
"
ac31ba4f4a6b0e51d6bffc4ecf3df921356f7de8,spotify/styx,remove unused import
68f52446cc106734ea6aa81af350055de3af8b2e,spotify/styx,"refactor fjp/executor shutdown

Have a single well-tested method for shutting down executor services
and use that instead of duplicating variations of the same shutdown
logic everywhere.

One of the tests breaks code coverage on Java 8 so it is disabled there
but it will be run by our Java 10+ CI pipeline."
db0cc792be3e5bbed974464eb6a31d8d7df0a09e,spotify/styx,"Refactor ShardedCounter to use Storage and StorageTransaction

"
87285fc14f0a5152e00c1b3e8d472c914a1e660d,spotify/styx,"Refactor ShardedCounter to use Storage and StorageTransaction

"
c382d3e8d4c007570bea7f5870b71f1b12496eb6,yiisoft/yii2,"Fixes #15120: Refactored dynamic caching introducing `DynamicContentAwareInterface` and `DynamicContentAwareTrait`
"
e6f5c46cdc64e52364d868f064e3548338e929d7,yiisoft/yii2,"Fixes #15633: Deprecate some things going away/changing in 2.1

- Deprecated `yii\base\BaseObject::className()` in favor of native PHP syntax `::class`, which does not trigger autoloading
- Deprecated XCache and Zend data cache support as caching backends
- Deprecated `yii\BaseYii::powered()` method
- Added `yii\base\InvalidArgumentException` and deprecated `yii\base\InvalidParamException`
- Added `yii\BaseYii::debug()` and deprecated `yii\BaseYii::trace()`

 "
ee261d38386a8502cb5533f315ec2de33b769794,yiisoft/yii2,"Merge pull request #1020 from yiisoft/module-refactoring

Module & Application refactoring"
30f003381d2a803812acadb52b369fd71a085ec8,yiisoft/yii2,"revised AR documentation

fixed some incorrectness in update() and insert() and also fixes #8761
"
6a48f68955a55eebd80d5a86a5cf05e005dfa6c8,yiisoft/yii2,"split typecast method into two

one method for fetching data and one for sending to db.

fixes #2287
"
03e07f434065ad1e1617b51c145729b78c7c6ed6,yiisoft/yii2,"cleaned up ""use"" statements.
"
23dbbb9fd7fa2314d138fc09c0becc4eb7467c99,yiisoft/yii2,"Merge branch 'master' into make-query-expression
"
5f2a612c78f60081e5d2323fd0a413c7ca8deaa3,yiisoft/yii2,"Moved file and path related methods from StringHelper to FileHelper, renamed StringHelper byte methods not to be misused as string methods
"
cb4a8c764c9f8332dbfbf0ef3afd9c8687d92e46,yiisoft/yii2,"Refactored validators.
"
133e5c6e3500d74d25b2cb54785e3b3bbfafe73c,yiisoft/yii2,"Merge branch 'master' into redis

* master: (806 commits)
  avoid confusing docs about autoload return value
  doc fix.
  Fixed doc.
  Fixed autoloader behavior according to leading \
  Fix in RequestPanel
  changed to trace from info.
  Removed yii\debug\Module::enabled.
  minor enhancement of debugger.
  Refactored the basic app.
  Added ErrorAction.
  Use `hasAttribute()` instead to avoid code duplication
  refactored NavBar and basic app navbar.
  test break fix.
  test break fix.
  Fixed test breaks.
  #735: removed hiddenInput to avoid confusion.
  ResizableAsset typo fix!
  Update radio and checkbox due to e3801fbf6bdf167c31f4f2bbb774f75659956d57
  css fix.
  Fixed the basic app template.
  ...

Conflicts:
	.travis.yml
	tests/unit/data/config.php
"
40090577c50d2d4649f1c10e95871ac675045a4b,yiisoft/yii2,"Merge branch 'master' of git://github.com/yiisoft/yii2 into 2103-rename-accessdeniedhttpexception
"
b4c912484c9724f2f3601b55d992c46a7dc3c5fd,zerothi/sisl,"enh: added supercell wavefunctions, large speedup in psi calculation

Enabled supercell wavefunction calculations. Also enabled k-point wavefunctions.

Many of the loops for the psi calculation could be moved to outside and will thus
be much faster for systems with atoms with many orbitals. I.e. now the indices
are gathered per atom (for the maxium R), and then subsequently calculated for
all orbitals on this atom, finally adding it to the grid.

A bug fix for skewed lattices has been corrected, the R-vector dependent on the indices
did not take off-diagonal cell elements into account.

The loop is now over all supercell atoms which makes it extremely slow for large systems,
however, we quickly skip the atoms that does not have points in the region of the grid
which should be rather quick.

Cleaned up Orbital classes and added a psi_rtp call which accepts spherical coordinates.
This is particularly important for performance in the Grid class because we can
calculate the spherical coordinates per-atom, and then reuse them per-orbital.

A possible bug has been corrected by removing all mentions of origo in calculations.
This is not too thought out. Would the user expect origo to be intrinsic in the coordinates
and operations, or are they merely used for finalization.
Currently the origo is mainly usable for the Grids where one can concentrate the grid
by selecting an appropriate origo.

Bug-fix for the Grid.index function to resemble that of Siesta.

TODO check whether my min_max function actually works. I think we are skipping some elements
in the psi calculation. I need to check (equation of circle to min/max of indices).

Signed-off-by: Nick Papior <81a73bca3d342ffee33d7cf845fdbf77b6553831@gmail.com>
"
3a9924fcd921476cc3ea7748d49b36ec2d363407,zubairq/yazz,"Rename to the correct ""get_apps_list"" function name
"
5e009ffb6606441a3a04e1d3b779af517d06adc5,zubairq/yazz,"Make it obvious how to save code changes
"
05484cfb6eb31225de42b140b5fa917f97899519,AscEmu/AscEmu,"Scripting: changed timer type from int32 to uint32.
 * Remobed MoonInstanceScript
 * Replaced enum values with core enum values.
 * Moved instance timer update to seperated function (called in MapMgr::CallScriptUpdate())
"
470bab3f8da8d619fe0d4db692d156e3232ba815,AscEmu/AscEmu,"Refactor: Move more movement code out of AIInterface
"
3748a53889b72591ccfa06832a5545043c554ac1,AscEmu/AscEmu,"Commands: Rewrote .npc return and .npc respawn command
"
3e9ad71863b5c0664b5de5d5da0bab3fa95d731c,AscEmu/AscEmu,"Replaced old time functions with new (Util) functions
"
e1f4a622bb6eae0ffed4364d8669932805c3bfa0,AscEmu/AscEmu,"Talents: Rewrite talent system
- Death Knights have now their own formula to calculate talent points (Wotlk and Cataclysm)
- Fix talent point amount (Cataclysm)
- Correct glyph slots (Cataclysm)
Spells: Aurastates should not be checked for triggered spells
"
f3234a2e048dfcc4aaa04dc64431feb9a8c9d51f,AscEmu/AscEmu,"All: Moved npc_monstersay loading from objMgr to MySQLDataStore
All: Cleanup some unused values and rename stuff to fit our standards.
"
43e37122d26b829d68543647081214727e516901,AscEmu/AscEmu,"AIINterface: Misc refactoring for waypoint functions.
"
7dd3038d9e1b30151abad78ce24c92e522e3b0b4,AscEmu/AscEmu,"Serialise CMSG_INITIATE_TRADE, CMSG_SET_TRADE_GOLD, CMSG_SET_TRADE_ITEM, CMSG_CLEAR_TRADE_ITEM and SMSG_TRADE_STATUS
Fixed non PCH build and removed legacy/cata file.

Removed unused RaidHandler file.
"
5d5a443a4c4fd18177ddbc1afa2a35b8dd886eea,AscEmu/AscEmu,"Serialise CMSG_CHAR_CREATE, CMSG_CHAR_DELETE and SMSG_CHAR_CREATE
Rewrite in legacy files to sort out some code.
"
f31852498f79a83df48f3cf5ef87320459eb1642,AscEmu/AscEmu,"Style: Replaced magic numbers with enum values.
Commands: Changed .modify npcemotestate -> .modify emotestate.
"
3f136edaccd474fc400705f06f5d30466ce3e7f0,AscEmu/AscEmu,"Chat/Commands: Removed helper functions:
 * void RedSystemMessageToPlr(Player* plr, const char* message, ...);
 * void GreenSystemMessageToPlr(Player* plr, const char* message, ...);
 * void BlueSystemMessageToPlr(Player* plr, const char* message, ...);
 * void SystemMessageToPlr(Player* plr, const char* message, ...);

Take your time an call ->GetSession() to send messages to players. Use:
 * void RedSystemMessage(WorldSession* m_session, const char* message, ...);
 * void GreenSystemMessage(WorldSession* m_session, const char* message, ...);
 * void BlueSystemMessage(WorldSession* m_session, const char* message, ...);
 * void SystemMessage(WorldSession* m_session, const char* message, ...);
"
a0fd91cefcc054b770dec6d8fb60db0d3145c45a,Broadcom/dpdk,"mempool: rename functions with confusing names

The mempool_count and mempool_free_count behaved contrary to what their
names suggested. The free_count function actually returned the number of
elements that were allocated from the pool, not the number unallocated as
the name implied.

Fix this by introducing two new functions to replace the old ones,
* rte_mempool_avail_count to replace rte_mempool_count
* rte_mempool_in_use_count to replace rte_mempool_free_count

In this patch, the new functions are added, and the old ones are marked
as deprecated. All apps and examples that use the old functions are
updated to use the new functions.

Fixes: af75078fece3 (""first public release"")

Signed-off-by: Bruce Richardson <66b9e8e8fbd5e9f41f91b0af050876182ce9d0e4@intel.com>
"
d6af1a13d7a14d062d11b37f6e31caa0f3823fe0,Broadcom/dpdk,"ethdev: add return values to callback process API

Change the rte_eth_dev_callback_process function to return int,
and add a void *ret_param parameter.
The new parameter is used by ixgbe and i40e instead of abusing
the user data of the callback.

Signed-off-by: Bernard Iremonger <233eeff376ad0c06f66f06c5522ea3c4feb30d3b@intel.com>
"
e996506a1c07f145aa15ea6756cb11f2c705d1d3,Broadcom/dpdk,"lib/gro: add Generic Receive Offload API framework

Generic Receive Offload (GRO) is a widely used SW-based offloading
technique to reduce per-packet processing overhead. It gains
performance by reassembling small packets into large ones. This
patchset is to support GRO in DPDK. To support GRO, this patch
implements a GRO API framework.

To enable more flexibility to applications, DPDK GRO is implemented as
a user library. Applications explicitly use the GRO library to merge
small packets into large ones. DPDK GRO provides two reassembly modes.
One is called lightweight mode, the other is called heavyweight mode.
If applications want to merge packets in a simple way and the number
of packets is relatively small, they can use the lightweight mode.
If applications need more fine-grained controls, they can choose the
heavyweight mode.

rte_gro_reassemble_burst is the main reassembly API which is used in
lightweight mode and processes N packets at a time. For applications,
performing GRO in lightweight mode is simple. They just need to invoke
rte_gro_reassemble_burst. Applications can get GROed packets as soon as
rte_gro_reassemble_burst returns.

rte_gro_reassemble is the main reassembly API which is used in
heavyweight mode and tries to merge N inputted packets with the packets
in GRO reassembly tables. For applications, performing GRO in heavyweight
mode is relatively complicated. Before performing GRO, applications need
to create a GRO context object, which keeps reassembly tables of
desired GRO types, by rte_gro_ctx_create. Then applications can use
rte_gro_reassemble to merge packets. The GROed packets are in the
reassembly tables of the GRO context object. If applications want to get
them, applications need to manually flush them by flush API.

Signed-off-by: Jiayu Hu <32e4f0527a0c8fd19a4086e4191a246becffadac@intel.com>
Reviewed-by: Jianfeng Tan <4339d9ba3a87a0d192e405945005ff86667f7b0c@intel.com>
"
ce3a7312357ba636dea4e326e5676615502805c5,Broadcom/dpdk,"eal: rename IPC request as synchronous one

Rename rte_mp_request to rte_mp_request_sync to indicate
that this request will be done synchronously (as opposed to
asynchronous request, which comes in next patch).

Also, fix alphabetical ordering for .map file.

Suggested-by: Thomas Monjalon <5f50a84c1fa3bcff146405017f36aec1a10a9e38@monjalon.net>
Signed-off-by: Anatoly Burakov <814e00d8f6e4e81b7ccc7e3e5a0bfec0078f0203@intel.com>
Acked-by: Jianfeng Tan <4339d9ba3a87a0d192e405945005ff86667f7b0c@intel.com>
"
fb443e0c5cd07affc124cee2d7c69b3c8b3856f5,EBWiki/EBWiki,"moving inline styling from views into hopefully logical css pipeline files
"
76b2eee7771ecf2b339d1023699ef9f30fa3fe65,Homebrew/brew,"Refactor checksumming

Signed-off-by: Jack Nagel <43386ce32af96f5c56f2a88e458cb94cebee3751@gmail.com>
"
e1ea7bb721ec6d315058c0da285acd38cfc62b9f,Homebrew/brew,"Refactor Cask `Artifact`s.
"
8b06a01e5b94fec9876a4fdfea1177496a0b7c93,Homebrew/brew,"Merge pull request #823 from reitermarkus/refactoring-tty

Refactor Tty."
e817bba18d8026b528fb3abb52a9e1a46aaef565,Homebrew/brew,"upgrade: add HOMEBREW_UPGRADE_CLEANUP variable.

Allow users to specify they want `brew upgrade --cleanup` to always be
run when they run `brew upgrade`.
"
bcb1ec5499c303cfa643f1282f73e0b5225e4097,Homebrew/brew,"Improve Homebrew/brew line length.

Use 124 max line length everywhere. Also, reduce tap max line length to
189 as Homebrew/homebrew-core has that as a maximum now. In future
Homebrew/homebrew-core will also be reduced to 124 maximum line length.
"
2e29e32c6a304eac79cd7f4ae69709ab75debf08,KC3Kai/KC3Kai,"Various Minor Updates
- Disabled unused settings
- Settings English Text
- Night battle troll minor
"
0e8923df03b7d77a0289d87aaa17c4bfe705fadb,KC3Kai/KC3Kai,"Merge branch 'master' into dev-cleanup

# Conflicts:
#	src/pages/strategy/strategy.html
"
c9a0cf118c446c4d37f590aa60554cc1f7d5ce97,KC3Kai/KC3Kai,"Add formation prediction logic, some clean up
"
376c99137b441545dfce634b28efc217454b8334,KC3Kai/KC3Kai,"Improve console logging: proper level, meaningful texts

Just partially, more required
"
440d05da57013697ff4be2ada82d939a89de4108,KC3Kai/KC3Kai,"API page Improvement

- [FIX] Duplicating Refresh Box
- [ADD] Error Handler Refresh Box
- [FIX] White BG for Ready Box
"
c184cdd10d57b95877d6a31e7198c676651d8c72,KC3Kai/KC3Kai,"Misc fixes:

* Undo the change of .gitmodules
* Replace all headers.Date parsing with safe method
* Force `async` on popup menu request
"
da40e78fa0df26acc8e6d674cac7049ae6f0f00d,Microsoft/pxt,"Arrays/Lists support in blocks (#2090)

* More array work

* Decompile tests

* Blockly type inference fixes

* More list fixes

* Adding for_of docs

* PR feedback

* Cache length

* renaming lists to arrays

* More renaming

* More PR feedback
"
70c7bd62e77ede731f6bb2363581a412cb94a9d9,OGRECave/ogre,"Merged revisions 9707-9741 via svnmerge from
https://svn.ogre3d.org/svnroot/ogre/branches/v1-7

........
  r9707 | assaframan | 2010-02-09 01:16:08 +0000 (Tue, 09 Feb 2010) | 1 line

  OpenGL ES 1.x render system: Fixed Symbian compile.
........
  r9708 | cabalistic | 2010-02-09 11:35:31 +0000 (Tue, 09 Feb 2010) | 1 line

  Explicitly link OgreMain to -ldl on Linux
........
  r9709 | cabalistic | 2010-02-09 11:54:34 +0000 (Tue, 09 Feb 2010) | 1 line

  Fix an unexplained assertion in the Character sample on Linux
........
  r9710 | sinbad | 2010-02-09 12:25:21 +0000 (Tue, 09 Feb 2010) | 1 line

  Fix SDK samples build making static libraries instead of dlls
........
  r9711 | sinbad | 2010-02-09 13:01:13 +0000 (Tue, 09 Feb 2010) | 1 line

  Don't install sample dlls unless OGRE_INSTALL_SAMPLES is true
........
  r9712 | sinbad | 2010-02-09 15:15:54 +0000 (Tue, 09 Feb 2010) | 2 lines

  Remove OGRE_STANDALONE_BUILD - doesn't work when used after project() definition
  Default to relative paths for SDK samples build - can't quite be used for pre-generated SDK projects yet because pdbs still have absolute paths (pending new CMake release)
........
  r9713 | assaframan | 2010-02-09 15:51:01 +0000 (Tue, 09 Feb 2010) | 1 line

  Symbian port: Fixed some small compile issues - Symbian was not included in some none win32 settings in OgrePlatform.h and /OgreMain/include/Threading was missing from the additional directories in the cmake build.
........
  r9714 | sinbad | 2010-02-09 16:12:12 +0000 (Tue, 09 Feb 2010) | 2 lines

  Install .cfg files when OGRE_INSTALL_SAMPLES_SOURCE is specified even if OGRE_INSTALL_SAMPLES (binaries) is false
  Needed for SDK
........
  r9715 | sinbad | 2010-02-09 16:16:32 +0000 (Tue, 09 Feb 2010) | 1 line

  Include _d postfix on SDK samples build
........
  r9716 | sinbad | 2010-02-09 16:26:12 +0000 (Tue, 09 Feb 2010) | 1 line

  Remove paging sample from samples.cfg templates
........
  r9717 | sinbad | 2010-02-10 10:59:59 +0000 (Wed, 10 Feb 2010) | 2 lines

  Remove bootstrap resource group and move few things still referencing it to the internal resource group
  The bootstrap resource group is never explicitly created which can cause issues otherwise and we no longer use it in the demos
........
  r9718 | sinbad | 2010-02-10 15:28:00 +0000 (Wed, 10 Feb 2010) | 1 line

  Initialise mOrigin in TerrainGroup
........
  r9719 | sinbad | 2010-02-10 16:00:53 +0000 (Wed, 10 Feb 2010) | 2 lines

  Be consistent about when docs are installed
  - Doxygen API was always installed but manual and other docs were only installed when OGRE_INSTALL_DOCS was specified
........
  r9720 | sinbad | 2010-02-10 17:47:55 +0000 (Wed, 10 Feb 2010) | 1 line

  Raise exceptions on planes with too high tesselation to fit in 16-bit indexes
........
  r9721 | cabalistic | 2010-02-12 13:37:45 +0000 (Fri, 12 Feb 2010) | 1 line

  Fix path errors in installed .cfg files on Linux
........
  r9722 | cabalistic | 2010-02-12 15:13:47 +0000 (Fri, 12 Feb 2010) | 1 line

  Cleaned up and update the README files in the root directory
........
  r9723 | cabalistic | 2010-02-12 15:29:13 +0000 (Fri, 12 Feb 2010) | 1 line

  Missed soe Ubuntu packages in BuildingOgre.txt
........
  r9724 | assaframan | 2010-02-12 18:33:37 +0000 (Fri, 12 Feb 2010) | 1 line

  Symbian port: Turning on _STLP_DEBUG for STLport creates a crash when using std::stringstream (in its constructor) under Symbian.
........
  r9725 | assaframan | 2010-02-12 22:58:27 +0000 (Fri, 12 Feb 2010) | 1 line

  Symbian port: Added environment initialization to the SampleBrowser.
........
  r9726 | cabalistic | 2010-02-13 12:23:16 +0000 (Sat, 13 Feb 2010) | 1 line

  SampleBrowser.cpp needs to include OgrePlatform.h before testing OGRE_PLATFORM define.
........
  r9727 | cabalistic | 2010-02-13 13:07:08 +0000 (Sat, 13 Feb 2010) | 1 line

  Fix installing .pdb files on Windows.
........
  r9728 | sinbad | 2010-02-13 15:54:07 +0000 (Sat, 13 Feb 2010) | 1 line

  Patch 2948216: Fix terrain layer inserting / shifting
........
  r9729 | sinbad | 2010-02-13 16:59:45 +0000 (Sat, 13 Feb 2010) | 1 line

  Documentation update
........
  r9730 | sinbad | 2010-02-13 17:42:24 +0000 (Sat, 13 Feb 2010) | 4 lines

  Overhauling SDK build automation for Windows
  Now using CMake to generate builds, resulting install folder will just be zipped up (no NSIS, no sed scripts)
  As a result 95% of old SDK automation is defunct
  Build targets added for MSVC 7.1, 8, 9, 10 and x64 variants (not all tested yet)
........
  r9731 | sinbad | 2010-02-13 17:45:10 +0000 (Sat, 13 Feb 2010) | 1 line

  Updated win32 sdk build docs
........
  r9732 | sinbad | 2010-02-13 18:02:03 +0000 (Sat, 13 Feb 2010) | 1 line

  Add more detail to the win32 SDK build notes
........
  r9733 | sinbad | 2010-02-13 18:27:09 +0000 (Sat, 13 Feb 2010) | 2 lines

  Exclude platform from the build (there will be only one from CMake, and Win32 would not have worked with x64)
  Specifically build the INSTALL project
........
  r9734 | masterfalcon | 2010-02-14 03:14:28 +0000 (Sun, 14 Feb 2010) | 1 line

  Patch 2946701: Use bundleForClass to lookup framework resources
........
  r9735 | assaframan | 2010-02-14 15:04:59 +0000 (Sun, 14 Feb 2010) | 2 lines

  Symbian port: Fixed environment initialization of the SampleBrowser. Seems that the ""main"" function needs to be under a ""TRAP"" statement - else all file read operations crash the program with a ""Main Panic E32USER-CBase 66"" error.
  The solution to the problem involved creating a new main function that initialize the environment and from inside it call the original main function (now called mainWithTrap) with a TRAP statment.
........
  r9736 | assaframan | 2010-02-14 15:51:12 +0000 (Sun, 14 Feb 2010) | 2 lines

  Symbian port: Added GPU_NOKIA to ""enum GPUVendor"" and the GPU check to OgreGLESRenderSystem.cpp.
........
  r9737 | sinbad | 2010-02-15 14:04:33 +0000 (Mon, 15 Feb 2010) | 4 lines

  Finishing touches to the scripts to create the Win32 SDK
  - Pre-generate the MSVC solution files so receivers don't need CMake
  - Use script to find/replace the remaining absolute paths
  - Omit the INSTALL build target in the SDK, build in-place
........
  r9738 | sinbad | 2010-02-15 14:14:08 +0000 (Mon, 15 Feb 2010) | 1 line

  Delete temp file when building sdk
........
  r9739 | sinbad | 2010-02-15 14:21:23 +0000 (Mon, 15 Feb 2010) | 3 lines

  Documentation corrections
  - Make Readme.html applicable for all builds
  - Remove old file references
........
  r9740 | sinbad | 2010-02-15 14:21:44 +0000 (Mon, 15 Feb 2010) | 1 line

  Remove old demo ReadMe.html, this is obsolete. See the main License.html for media credits etc.
........
  r9741 | sinbad | 2010-02-15 14:41:23 +0000 (Mon, 15 Feb 2010) | 1 line

  Make the x64 SDK options more readable / conventional
........
"
308b39769dadefa79bec8d1d2834d555466771f9,OGRECave/ogre,"Merged revisions 9787-9788,9790-9796,9798-9808,9811-9813 via svnmerge from
https://svn.ogre3d.org/svnroot/ogre/branches/v1-7

NOTE: r9792 (CompositorManager::_relocateChain) had to be omitted, not compatible with trunk

........
  r9787 | cabalistic | 2010-02-21 16:47:55 +0000 (Sun, 21 Feb 2010) | 5 lines

  CMake changes:
  - Change OGRE_CONFIG_DISABLE_* to OGRE_CONFIG_ENABLE_*
  - Remove OGRE_INSTALL_PLUGIN_HEADERS and OGRE_INSTALL_MEDIA
  - Mark OGRE_BUILD_RTSHADERSYSTEM_* as advanced
........
  r9788 | cabalistic | 2010-02-21 16:55:20 +0000 (Sun, 21 Feb 2010) | 1 line

  Missed an instance of DISABLE -> ENABLE changes
........
  r9790 | assaframan | 2010-02-22 11:25:15 +0000 (Mon, 22 Feb 2010) | 2 lines

  Core patch (2943631) by Mattan Furst: Add the ability to set render group priority (and id) in a movable based object. This is needed for extra control over render sequence.
  https://sourceforge.net/tracker/index.php?func=detail&aid=2943631&group_id=2997&atid=302997
........
  r9791 | assaframan | 2010-02-22 11:37:04 +0000 (Mon, 22 Feb 2010) | 1 line

  Core patch (2943637) by Mattan Furst: Added the ability to add LOD meshes from different groups to the same parent mesh. This is useful when have textures with the same file name for different lods.
........
  r9792 | assaframan | 2010-02-22 12:13:38 +0000 (Mon, 22 Feb 2010) | 3 lines

  Core patch (2943640) by Mattan Furst: Adds a function to CompositorManager which can reallocate an existing compositor chain to another.

  https://sourceforge.net/tracker/index.php?func=detail&aid=2943640&group_id=2997&atid=302997
........
  r9793 | sinbad | 2010-02-22 18:01:03 +0000 (Mon, 22 Feb 2010) | 2 lines

  TerrainGlobalOptions is now a singleton that you have to instantiate rather than containing all static members.
  Apologies for the breaking change, this is necessary to fix some static link initialisation order problems.
........
  r9794 | sinbad | 2010-02-22 18:02:48 +0000 (Mon, 22 Feb 2010) | 1 line

  Use relative paths wherever possible to reduce command line lengths
........
  r9795 | cabalistic | 2010-02-22 20:17:59 +0000 (Mon, 22 Feb 2010) | 1 line

  TerrainGlobalOptions must inherit publically from Singleton.
........
  r9796 | sinbad | 2010-02-23 16:46:06 +0000 (Tue, 23 Feb 2010) | 2 lines

  Fix Boost detection on OS X when gcc command-line version is not 4.0
  We use 4.0 currently so that we can maintain OS X 10.4 compatibility
........
  r9798 | masterfalcon | 2010-02-24 01:12:02 +0000 (Wed, 24 Feb 2010) | 1 line

  Using relative paths in the CMake scripts apparently breaks Xcode projects pretty badly.  Disable it on non-Apple builds.
........
  r9799 | masterfalcon | 2010-02-24 02:23:14 +0000 (Wed, 24 Feb 2010) | 1 line

  Remove references to media.cfg for Mac/iPhone too.
........
  r9800 | sinbad | 2010-02-24 10:54:10 +0000 (Wed, 24 Feb 2010) | 1 line

  #pragma pack in BezierPatch and Grass demos should have been pushed/popped (thanks btolputt)
........
  r9801 | sinbad | 2010-02-24 11:38:20 +0000 (Wed, 24 Feb 2010) | 1 line

  Use relative paths & regen suppression only on Windows since it seems to cause problems elsewhere
........
  r9802 | cabalistic | 2010-02-24 11:41:10 +0000 (Wed, 24 Feb 2010) | 4 lines

  - Store SampleBrowser settings and log in user home
  - Postfix debug executables and debug config files with _d
  - Use absolute paths in Linux config files and install to share/OGRE
........
  r9803 | sinbad | 2010-02-24 14:51:12 +0000 (Wed, 24 Feb 2010) | 2 lines

  Terrain: Separate concepts of 'modified' and 'heights were modified'
  There was some confusion in the code as to which mModified meant, with some methods assuming the former and some the latter. Split the definition to solve the case where changing layer texture names and other non-height properties caused TerrainGroup to think the terrain didn't need saving.
........
  r9804 | sinbad | 2010-02-24 15:18:44 +0000 (Wed, 24 Feb 2010) | 1 line

  Fix bug 294: terrain blend painting in GL too slow
........
  r9805 | sinbad | 2010-02-24 15:38:12 +0000 (Wed, 24 Feb 2010) | 1 line

  Fix bug 272: Terrain::ImportData copy constructor should init before calling operator=
........
  r9806 | sinbad | 2010-02-24 15:42:11 +0000 (Wed, 24 Feb 2010) | 1 line

  Bug 272: Terrain::operator= should still assign values in the case of rhs.deleteInputData and null pointers.
........
  r9807 | cabalistic | 2010-02-24 16:46:23 +0000 (Wed, 24 Feb 2010) | 1 line

  Don't declare SOVERSION for libs; this is incorrect because we don't maintain strict API compatibility even between maintenance releases
........
  r9808 | sinbad | 2010-02-24 18:09:38 +0000 (Wed, 24 Feb 2010) | 6 lines

  Working on the OS X SDK scripts a bit more
  - Build locally in SDK dir to avoid interfering with regular build
  - Move media folder to root rather than share/OGRE/media (like Win32)
  - Move CMake templates to cmake instead of lib/OGRE/cmake (like Win32)
  - Re-use build results and provide option to clean (for speed of re-running)
  - Doc updates
........
  r9811 | sinbad | 2010-02-24 18:33:04 +0000 (Wed, 24 Feb 2010) | 1 line

  Missed an instance of unifying the location of the CMake templates in the OS X SDK
........
  r9812 | masterfalcon | 2010-02-25 03:03:26 +0000 (Thu, 25 Feb 2010) | 1 line

  Fix the way ogre.cfg files are searched for on iPhone and make sure config changes are saved in the sample browser, also for iPhone.
........
  r9813 | masterfalcon | 2010-02-25 03:15:35 +0000 (Thu, 25 Feb 2010) | 1 line

  Add support for mapping of vertex and index buffers.  Basically a direct port from the GL rendersystem but using the GL_OES_mapbuffer extension.
........
"
caad0bf7dd9ce2c36d932b677c290f39d9828ed6,PMEAL/OpenPNM,"Major changes to code flow
- Geometry, Physics and Fluids now all operate the same
- They produce composite objects that write their data to the appropriate place
- Renamed many files and methods to be lowercase


Former-commit-id: 031f299327ef462c701561a3f02f7a0555f98fa4
Former-commit-id: 530d2768c9dbf1b69d2a7c164d9020b051956fd3"
d7460747c6dfe5983c2951558d1e9b9b130667ff,PMEAL/OpenPNM,"Reimplemented the logger in all objects
- Imported the logger at the top of every file that needs it
- uncommented everything and changed self._logger to just logger
"
d8df0a35d91a0db026acca4e4c19d25ebbed1e28,PMEAL/OpenPNM,"Merge pull request #392 from PMEAL/repo-cleanup

Removing Legacy Code"
44df253d7affc106f96e04146f77fecc2389a23a,Ribtoks/xpiks,"renaming
"
f3e2cb4e70c7c88023cf864d7a756b4e9d2b215f,Ribtoks/xpiks,"Replaced one dialog for adding files
"
7f4e8206cf0862ec4de25650edd680a4967eb7b3,Ribtoks/xpiks,"renaming
"
3031347c8cc2518a34c726279c365ae1b4910686,Ribtoks/xpiks,"Added handler for RemoveSelected button and refactored removing of images. closes #28
"
ae9ca5e35a45781172d3425665d9b716aeb27224,Ribtoks/xpiks,"[wip] Refactor main qml file into two
"
18e00792d89ab9e5a0f3dc631e557aa1579f8e2a,Ribtoks/xpiks,"Refactored vector names extraction
"
ce5ac632a6029a3271b2707bddbe414995f9b0ba,Ribtoks/xpiks,"Improvements for warnings config
"
c919919a75a9f34a174aed0eb0bd7d3b0843124a,ServUO/ServUO,"BOD Fixes
- Consolidated ArmorQuality, WeaponQuality and ClothingQuality into ItemQuality.
- IResource added to all classes that can be a bulk order item
- Added IResource to CraftableFurniture and created FurnitureContainer class
"
26931188968c4fd544cc808f0437f3751e737164,ServUO/ServUO,"Attempt at making the drops match Pub 48

ref. http://www.uoguide.com/Publish_48

Todo, figure out how to get top damager more points.
"
1d7cbed01067f1f4568263ac44e4cee940d60c03,ServUO/ServUO,"Bug Fixes
- Removed redundant Admirals Hearty Rum
- Vet Reward rugs (dolphin, skull, rose) not give gump when placing for east/south and small/large
- Mystic Garb now has proper itemid
- Hats now get arms lore bonus
- War Cleaver is now 2 handed per EA
- Wraith/Vampire leech now should trigger prior to Death
- Equip last weapon should no longer un-equip a shield
- Items (jewels) that missed last updates nerf should now be affected
- Changelings and Dire wolves now attack good creatures
- Dryads are now FightMode.Evil
- Fixed crash in page Gumps
- Updated Ilshenar spawners for accuracy with EA(Thanks Goober)
"
4ae15fcfa61113102ceef2034b3f7423334dd5d0,Sylius/Sylius,"Merge pull request #4535 from lchrusciel/transformers-fixes

[Behat] [DX] Transformers cleanup"
09b547092f7380df7ba8d8525a26bd067388143a,Sylius/Sylius,"Merge pull request #6489 from lchrusciel/taxon-filter-rework

[Promotion] UI for price range and taxon filtration "
b0efb897f70143e953852b9c890455804f1a1455,Sylius/Sylius,"Rework the address section of account panel
"
46a5c4097f6f109e39d0b7ff7aec3000e3d495bb,Sylius/Sylius,"[Behat] [DX] Renaming taxation tag
"
5a64dc67d4318bfa61c10d41dea7af83ef3ef0c9,Sylius/Sylius,"Merge pull request #13 from umpirsky/flexible-redirect

Brought more flexibility to redirect methods."
cc0692b89fb2babb5bfe3a618fede8fb807e1ac8,Sylius/Sylius,"Merge pull request #6104 from Arminek/refactor-thank-you-page

[Shop][Checkout] Refactor thank you page"
d84498b50726d9b1361da1f964774215f7f0155d,Sylius/Sylius,"[Association] Extracting AssociationBundle
"
4a029cfff50a985b5a5850edf05be9dba608cf54,Sylius/Sylius,"Merge pull request #6671 from NeverResponse/order/rename-completed-at

[Order] Renamed 'completedAt' to 'checkoutCompletedAt'"
7c622e6752d2bcb382142317815b93d09a798302,Sylius/Sylius,"Merge pull request #3264 from stloyd/feature/trait_introduction

Introduce 3 new traits to reduce code duplication"
a9d9bd810fde735e70b3652a50e8aaa0f7a7dc9a,Sylius/Sylius,"[User] Change user bundle configuration to be able to support multiple entity

[Behat] Separate security context & clean up

[Core][User] replace unused services
"
5d07052243a8d29ecaa1e7c47ff71b4e459be134,Sylius/Sylius,"Merge pull request #7410 from pamil/assert-overflow

[Behat] Improve assertions usage in contexts"
d7342bca470d8960d512ae97c5a4a06e2b1089c8,Sylius/Sylius,"Merge branch '1.0' into 1.1

* 1.0:
  [AttributeBundle] Fixing composer.json for ramsey/uuid
  Make tests green again
  set province value when container is loaded
  mark loading process by data tag
  make controllers public by default
  make sylius.translatable_entity_locale_assigner public as is it retreived from the container by ORMTranslatableListener
"
4fc5e29a2b81b37c5f5e8c2c9a78b135ddf30cd4,Sylius/Sylius,"refactoring search to properly use resources
"
386c226db60cc37c7e4cd0bf632caa95ccfad2d8,Sylius/Sylius,"Cleanup inventory and guest order paramaters
"
e9e896b0331028c987dc4d99ed7e1dc7f288c54a,VoltDB/voltdb,"Merge remote-tracking branch 'origin/master' into cleanup-wire-protocol-and-dr-hugg
"
51ba74e0a421a8651084964483d6cd92a686aad6,VoltDB/voltdb,"ENG-5502: Remove FastSerializer dependencies from core client code.
Also move some constants around to reduce dependencies.
"
1ffdc5f99228ba7ca068c18a1243e424f1d2cbb2,VoltDB/voltdb,"ENG-6071 -> ENG-6117: Add stubs to diff engine to allow for different changes on empty tables.
Also improve flexibility of test code and add one test.
"
3e3cbc08601cec9066fdd4b8798d496fcc1609f9,VoltDB/voltdb,"ENG-3969, cleanup: m_partitionLastSeenTransactionIds is also only used
in SnapshotSaveAPI, move it there and make it private.
"
70af0de8b57f14336ca6400894c2de8cc13a43b0,VoltDB/voltdb,"Merge branch 'master' into ENG-7643-sqlcmd-loop-refactor
"
e85e94e6afe252682f6d85f417dda5ef0974de8b,VoltDB/voltdb,"ENG-2758: Extract params in adhoc path.
This doesn't yet use any kind of plan cache, but will leverage the EE cache.
One more round to enable plan caching.
"
3af63f570ab3f2a337c1e389c8a44fab57c65f9c,VoltDB/voltdb,"For ENG-6247, update export format to be more space efficient so it can be shared with DR

The main change is to use smaller sizes for smaller integer types instead of always using a long.

For decimals instead of using a string prefix with scale and precision in bytes. Right now this is always 12 and 16, but in the future it serialization could trim to the smallest necessary scale and precision and other scales and precisions can be supported.

The prefixes are large enough to exceed the supported representions of postgres and mysql, and postgres's is quite large.
"
b5184fd8c31e0bdd31f62c16ffa476e5e132bf58,VoltDB/voltdb,"Squashed commit of the following:

commit 8325f0a16b0c0e7b835af92fc7dfe923b1f55e1e
Merge: d4d78ae 77aeaef
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Wed Jan 27 10:22:18 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit d4d78ae3a69572b11cad64cae3138a596cbb5b2c
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 27 18:11:19 2016 +0545

    VDM-11 Removed unwanted codes.

commit c167f0ffa6a232b463076aaabdfe38be67ffc2aa
Merge: 353041f 15bf0fe
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 27 16:40:58 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 353041f9fe9700584bde052e5da32677220dcf8b
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 27 16:35:57 2016 +0545

    VDM-11: Test cases for vdm.xml completed

commit 15bf0febd7a38f3f6cfc52d8bc8afb18fbdefff2
Merge: 865fdf1 5ef6e33
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 27 16:21:54 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 865fdf1cca0c3bc60f17dde98d1afda6514d7f47
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 27 16:21:18 2016 +0545

    VDM-20 Added features on client side to start and stop the database servers.

commit 5ef6e33a0a97275d6ecdd2513a7750be4e1b917b
Merge: 861f48b 490555e
Author: anil <anrai@deerwalk.com>
Date:   Wed Jan 27 14:50:48 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 861f48b7953145e5539b6b5b3c270b6f8ae4d678
Author: anil <anrai@deerwalk.com>
Date:   Wed Jan 27 14:49:46 2016 +0545

    VDM-11: Automated tests correction for Database and Server

commit 490555eb220f44a8ffd25ec07026902ddad94530
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 27 13:48:13 2016 +0545

    VDM-11: getTests.py removed since its just a sample test case

commit 7bc9c6c171ab0cd1d3ded4cf6d812ebe41c3eb78
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 27 13:43:31 2016 +0545

    VDM-11: GetHostByName added in all test cases in order to get real hostname
    	Deployment_xml_test updated to work with any databaseid

commit c887f4df649024efc747bafc7eb0df7b462dcb1d
Merge: f5f08c2 db0d9a8
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Tue Jan 26 15:16:01 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit f5f08c29947305e985efdc36fed6c630cc318a62
Merge: 0a896c6 e007fb4
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Tue Jan 26 15:05:54 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 0a896c6c32ca392e5219a259bd77be6fde70dea2
Merge: 01dbe80 62cb320
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Tue Jan 26 10:04:07 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 01dbe807b9c1967f818a8be3f3fef2c55917532f
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 26 16:44:26 2016 +0545

    VDM-11 Worked on the fail test cases in deployment_xml_test.

commit a5326ab78b70debfd5041cad25f5e45061004068
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 26 16:05:00 2016 +0545

    VDM-11 Modified code to call the global variable in HTTPListener.

commit f49a1cc1272e4897a33a1468bfdada5992c345f0
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 26 14:39:59 2016 +0545

    VDM-11 Made a class for the global variables in HTTPListener.

commit 6789a0cb9a99ad75f5ca66dc7e65423d2552462c
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 26 13:29:58 2016 +0545

    VDM-11 Moved the get_database_deployment method to new class.

commit bfb92d8b399bb4693b0af0259c88314e44045a1f
Merge: 6d6aaf5 dcec750
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 26 10:49:26 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 6d6aaf527a1620652d402a5c2c5fc6e8e311af79
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 26 10:46:30 2016 +0545

    VDM-11 Modified code to add sys.exit(1).

commit dcec750536ca81e5d93addad5c78ac7cbb946fa4
Merge: 9612e18 615da46
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Mon Jan 25 22:46:44 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 9612e18d487ca47134962b8fec82b9fec20ee9aa
Merge: 3e3a86a 421db7e
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Mon Jan 25 17:31:16 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 3e3a86afa6f6aaa04d3d44f173c740f74b04adea
Merge: c598c41 de47053
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Mon Jan 25 10:17:36 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit c598c411a7f2388c07a39358cbf6dce2e1700f4a
Merge: 7172bd4 d7af0f1
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Mon Jan 25 09:52:30 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

    # Conflicts:
    #	lib/python/vdm/server/HTTPListener.py

commit 7172bd4bc6cc4df576e5255101275c3433be9b2e
Merge: 1a784c8 7594741
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 25 18:58:09 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 1a784c8b57cf1eb6fb8f81f0cea4905152b27a4d
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 25 18:57:39 2016 +0545

    VDM-11: Test cases for vdm.xml added

commit 7594741dd9590337adc4e1b95a9e2f27ab89ea93
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 25 18:31:37 2016 +0545

    VDM-11 Modified code to use os.path.join to join file path.

commit 45bb808f736313714a84bc9447fb05dfe7f0a7c7
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 25 18:09:08 2016 +0545

    VDM-11 Modified code to use os.path.join to define path.

commit 3cc1f2bd37cfd6f3e4fcd7486e9b68cb68e79632
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 25 17:49:28 2016 +0545

    VDM-11 Modified code for the geb tests.

commit 257f701686cb66b475fa91f490b75f69c7502b33
Merge: dc7c07a a662981
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 25 16:40:13 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit dc7c07ad4f005e5cccf9bd17f8806516d46950de
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 25 16:39:35 2016 +0545

    VDM-11 Modified code for test cases.

commit a6629817475b45ff025c4cfcc9371f2b5e4c06d2
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 25 14:21:05 2016 +0545

    Comments updated in deployment_xml_test

commit f7461e20c9f50bb4d78535bf2162b4e9b5d34768
Merge: 32a398a daa29b3
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 25 14:12:15 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 32a398acb915ac559ea0cc3db39710f5a1e6aaaa
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 25 14:11:49 2016 +0545

    VDM-11: Test cases for deployment.xml completed and renamed to deployment_xml_test

commit daa29b397a80d716aa21931439e50420ecfdb24a
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 25 11:28:46 2016 +0545

    VDM-11 Decoded the password in deployment users.

commit e181ea5583ec70c339b364a101388917f7b541a1
Merge: 50d3629 f6fe7df
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Fri Jan 22 13:40:04 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 50d3629ee70b8cfe541d56648fc9768ca038239d
Author: Manju James <mjames@voltdb.com>
Date:   Fri Jan 22 13:05:47 2016 -0500

    VDM-12: REST endpoints to start a server and to start all nodes for a database.

commit bbf17092fddbdd229dd55fed8e09aa634544d1b7
Merge: a13169a 841f23d
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Fri Jan 22 10:55:32 2016 -0500

    Merge remote-tracking branch 'upstream/master' into VDM-11

commit a13169aae04921172dc4870680ae0ef86b2f3f83
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Fri Jan 22 10:54:54 2016 -0500

    remove unused code.

commit 717233a78dbd46a0328d4ba92052131525bbdfea
Merge: 0650c86 99e615f
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Fri Jan 22 10:15:18 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 0650c86c8bdac627129afe875b4278b65b382e04
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Fri Jan 22 18:05:38 2016 +0545

    VDM-11: Fixe Issue with port other than 8000 not supporting

commit 4ab00634c44500c4018f54c3a4485c9ea1fbd332
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Fri Jan 22 17:44:54 2016 +0545

    VDM-11: Issue with special characters not supporting while saving export and import configuration solved

commit 13802548e9b2a9952e62765b062f6f846e47725a
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Fri Jan 22 16:52:00 2016 +0545

    VDM-11: Issue with PUT request not working while syncing  in /deployment interface resolved

commit adeb51bf97cb5c5da2fd87889571528da0051840
Merge: 0a8841e 9a9d6da
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Fri Jan 22 16:09:33 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 0a8841e7b1d194dab47f569ee288c7a3d0b5f0fa
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Fri Jan 22 16:08:57 2016 +0545

    VDM-11: Added ip:port as a command line option while starting vdm server

commit 9a9d6da50e5a317a0118e2a12105acd561a8c13a
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 22 12:43:22 2016 +0545

    VDM-11 Modified code to solve the issue with export properties in DR
    configuration.

commit c8c0ebe9da2a375c119706d2c06c972fbfa21088
Merge: 39090e7 42f37e2
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 22 11:30:33 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 39090e712b6f91c65ebed618a1a0c9e4012c1b70
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 22 11:30:03 2016 +0545

    VDM-11 Removed 'servers' field from DR configuration.

commit 42f37e21a0be9f6c3b941f2d4e50875b0c497d88
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Fri Jan 22 11:16:57 2016 +0545

    VDM-11: Issue with export and import property values saving encoded string resolved

commit ddade924f9a4858147776aa34584a408da6bb115
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 22 09:29:57 2016 +0545

    VDM-11 Modified condition for connection in DR configuration.

commit 75f91b41be5cdca27a6b53689d036828833fe58a
Merge: 5fd462e 429b8fc
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 22 09:26:46 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 5fd462e81ebfc4f15418c3572b60d59a354b1351
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 22 09:26:31 2016 +0545

    VDM-11 Modified code for the python version 2.6.

commit 429b8fc04e27d4f6bf53e3ada9ee8070f3b91067
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Thu Jan 21 18:18:34 2016 -0500

    VDM-11: fix url and hostcount for generated deployment.

commit 861e8232717edb85f02d6e34aec9169873f4b546
Merge: 00d84d4 86460b3
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Thu Jan 21 13:03:21 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 00d84d49d18c68e61c29dccc0dc818de8c633951
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 21 19:04:17 2016 +0545

    VDM-11: Issue with users not loading in deployment.xml resolved

commit 8a71c1e7dd697d0b3b75a761c6efb955415e5a8a
Merge: 93e2d2e 6f3281d
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 21 17:41:14 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 93e2d2e3f9f56de88634c47f78b728c22eca5491
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 21 17:40:46 2016 +0545

    VDM-11: implementing serverside tests for deployment.xml

commit 6f3281d4049486e3ee70aeb22571715d7d4a6a8b
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 21 17:02:07 2016 +0545

    VDM-11 Removed resource monitor from XML file when it is empty.

commit 2ef7df5e30a379ceab2578a7aba3027ab1c4abc1
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 21 14:35:11 2016 +0545

    VDM-11 Made correction on DR port value.

commit 54543d9eecf8627cfb374d2d086e4ad14fe771f6
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 21 14:09:30 2016 +0545

    VDM-11 Modified code to remove empty objects from XML file.

commit 52ef4293e0696b48d68b876bcf31eeedccc8ee19
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 21 13:57:15 2016 +0545

    VDM-11 Modified code to add port id in DR configuration.

commit 51edf816b76111e82a18dac6ac14f547aa8f64c8
Merge: 531ecc9 f46502a
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 21 12:27:21 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 531ecc987d6cd784516d2ac57757f7373e6017d5
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 21 12:27:03 2016 +0545

    VDM-11 Added 'listen' field in DR configuration and renamed 'Master Cluster'
    to 'Source'

commit f46502a3e75a16e9bc07db98bde57e5734703fb8
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 21 11:29:30 2016 +0545

    VDM-11: Added /api/1.0/database/database_id/deployment interface which returns deploymet.xml of a particular database

commit 3442b3fd62e737ccbe49dac86bb013eb7d1cddf3
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 21 10:51:32 2016 +0545

    VDM-11 Check if connection object is not empty while making XML file.

commit 664bb9286bfba8710b3d01df61a0e80465aa14cc
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Wed Jan 20 14:03:50 2016 -0500

    format and enable dr.

commit 0f417358933552b7b816e5638c7a6f9be4ffe8fc
Merge: 305885c e2ceb6c
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 20 17:32:26 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 305885c03c32629e9591795b52b59c9801e71bb4
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 20 17:32:01 2016 +0545

    VDM-11 Modified code to remove unnecessary fields from DR configuration.

commit e2ceb6cd07ea135f0c72ef941f54cf662de10cfa
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 20 17:27:43 2016 +0545

    VDM-11: Issue with javascript:void(0) resolved

commit 477b3de02e289759eb48b1e28a5bbbc8da192290
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 20 16:51:21 2016 +0545

    VDM-11: Issue with saving disk limit features proper number resolved

commit 30165c797eb391212bcc2d2b6d15ed03853890b7
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 20 16:40:56 2016 +0545

    VDM-11: Issue with validation message in Log Segment size in cluster configuration fixed

commit d138f2b4ed40af8f63947fe20db26d717381076b
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 20 14:26:29 2016 +0545

    VDM-11: Resolved issues with export and import properties saving inconsistency

commit 9417bc4727405d8261a8b3d0a7d17dc579323565
Merge: 50977ac 8aa9675
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 20 10:51:43 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 50977ace2d0a4ffd4c39b67c587fc5a97b4dd062
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 20 10:50:27 2016 +0545

    VDM-11: Issue with import properties displaying in export properties solved

commit 8aa9675a6158486bdf6f75a7dac3af6e01dcf8d6
Merge: 3e59c95 5631623
Author: Anish Khanzode <akhanzode@gmail.com>
Date:   Tue Jan 19 15:14:40 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 3e59c954eb389e5110b85b8b744a623b28ee538d
Merge: e528dd0 1d73b0e
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 19 18:38:00 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit e528dd0d68405757d965f6a0caea31e9adc71344
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 19 18:37:17 2016 +0545

    VDM-11 Modified code to convert the 'disk limit' values to lowercase in
    XML file.

commit 1d73b0e07eb29e6909b99a9c01d4a8d8e3aaeeaf
Merge: b6f0050 6d6b896
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 19 18:11:17 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit b6f005075f46f5f0e15d12d0398e3b78fe8f78d3
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 19 18:10:34 2016 +0545

    VDM-11: Issue with disklimit features not collapsing resolved

commit 6d6b896f6f2459d707e2f542bd66027e93bdc88c
Merge: 08b8f73 7e12181
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 19 17:21:37 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

    Conflicts:
    	lib/python/vdm/server/HTTPListener.py

commit 08b8f738206f2ac7710d8cde7d1ab551ad85ac8d
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 19 17:18:32 2016 +0545

    VDM-11 Removed the 'enabled' field from DR configuration.

commit 7e12181958eb3aaf05a61a3308af535f72d2ee63
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 19 17:07:46 2016 +0545

    VDM-11: Issue with File properties not displaing in Import configuration solved

commit ad45180c36ad80e0cdb79bd77d28f1b1b10129a1
Merge: 03418f1 aebc122
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 19 16:45:37 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 03418f19f885d54e67e07b5656bea3207a959b94
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 19 16:45:04 2016 +0545

    VDM-11: handled exception while error occur while syncing multiple servers

commit aebc122c8283f82e95c8f562190a370740152be6
Merge: 0ce7954 64b2c06
Author: Sunil Manandhar <smanandhar@deerwalk.com>
Date:   Tue Jan 19 14:53:30 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 0ce7954b8fdddc816ef5ee1d9b9ca6d1d3b659c5
Author: Sunil Manandhar <smanandhar@deerwalk.com>
Date:   Tue Jan 19 14:52:54 2016 +0545

    Mobile popup issue on the security add user section on 320 to 480 resolution
    and design issue on ""Add Server"" btn.

commit 64b2c06f4ada3abc9ed19f2df3f4f6b6a2b798c5
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 19 14:44:07 2016 +0545

    VDM-11: Updated server side test cases

commit d4eae787a1bdc5c6d485262082aeb3c928c23c29
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 19 14:28:32 2016 +0545

    VDM-11: Fixed issue with expand/collapse of export and import configuration while refresh

commit 8fac446427ad7eac6f3796e208825231314c2516
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 19 13:43:32 2016 +0545

    VDM-11 : Correction with wrong path while implimenting to os.path.join

commit d13d49b32eb4bb8534c0ec410601b00b10f24d40
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 19 11:07:57 2016 +0545

    VDM-11: implemented os.path.join where necessary and removed VdmGetServerIP class since it is not used now

commit 4ec8532a7bf12a8b22f83f37dba8df5f4af41899
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Mon Jan 18 15:38:59 2016 -0500

    VDM-11: make default memory limit 80% and queryTimeout 10 seconds

commit 371046f975705cf53ab76a9cbf06b494f1013d05
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Mon Jan 18 15:12:33 2016 -0500

    fix deployment generation.

commit 0bbb4f256bb5f1c8f54d4bd8ebce2da9d835cf15
Merge: 3498761 d63e009
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 18 18:38:22 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 349876129b2cd1c6afd555f19581ce3fddcd3c69
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 18 18:37:52 2016 +0545

    VDM-11: Issues with Export and Import properties fixed

commit d63e00906df427e29452593be0013bb0e8f2c7eb
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 18 17:05:16 2016 +0545

    VDM-11 Modified code to resolve the issue with disklimit values.

commit e39846fe000617155155dbae5ab2a5fd1dca51e5
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 18 16:50:00 2016 +0545

    VDM-11 Modified code to load disk limit and memory limit values property
    from XML file, 'vdm.xml'.

commit 17428149b0ba3c2086edecd03d67f4fbdba96ac7
Merge: 221c195 24baf3f
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 18 14:54:50 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 221c1951b872da73928b2c0d0cabe491844d26ae
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 18 14:53:15 2016 +0545

    VDM-11 Modified code to load the users from the existing deployment XML
    file 'vdm.xml'.

commit 24baf3f9c02806ed1483daa3b535b8823c957722
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 18 14:53:09 2016 +0545

    VDM-11: Solved issue with The format field in Edit Configuration of Custom Import

commit 7e1955d8b3c9afb8814b37cf8472deb6c05824a0
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 18 13:54:24 2016 +0545

    VDM-11 : VdmUI.SyncVdmConfiguration function removed since this is being handled in the server end now

commit e95fff655b278a4dd26d1bc51ac8e354a2c86c18
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 18 11:18:10 2016 +0545

    VDM-11: DR section save deployment request commented due to issue in PUT request

commit 9380d52e36e5190f7464381a674eb2b2ddcce9ca
Merge: f2a47d0 8c7588c
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Fri Jan 15 12:58:18 2016 -0500

    Merge remote-tracking branch 'upstream/master' into VDM-11

commit f2a47d04c9f014ecc94a605b77be44bf3e957fbb
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Fri Jan 15 11:44:53 2016 -0500

    VDM-11: fix path

commit df480b1e61b2cbc77dfb52abf3257e60e4f72830
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 15 20:29:31 2016 +0545

    VDM-11 Modified code to load json files.

commit 1a47158a6c4608cbf51615b4c793c39a103a14eb
Merge: 07a4431 d549e8d
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 15 19:54:05 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

    Conflicts:
    	lib/python/vdm/server/HTTPListener.py

commit 07a443122f95d7acf29202a4af8dbe2d3dde13b0
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 15 19:52:28 2016 +0545

    VDM-11 Load the json file.

commit d549e8d58c5f745646f2fc3635fc98bf31c84465
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Fri Jan 15 19:19:35 2016 +0545

    VDM-11: Sync Deployment with security configuration implemented

commit f8354cae4dd69f6e08a2c7191bb03c8737bd8fbf
Merge: 7574a46 2676ed3
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Thu Jan 14 17:40:58 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 7574a460958adb79080875e53f745a7df798b612
Merge: 856a7db 38b812a
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Thu Jan 14 17:40:13 2016 -0500

    Merge remote-tracking branch 'upstream/master' into VDM-11

commit 856a7dba43bc43a5918899ed780a37d85ab170f4
Merge: 2014e36 7f62e06
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Thu Jan 14 16:08:40 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 2014e36a270c9736edb327ede805f5d678b73a4e
Merge: 2a48075 8ba2263
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Thu Jan 14 13:34:43 2016 -0500

    Merge remote-tracking branch 'origin/master' into VDM-11

commit 2a48075cca7996993f293be8ac1fc56414d194a6
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Thu Jan 14 13:33:38 2016 -0500

    remove debug

commit 1d5aabc6ff5e86f098cc7c6e6e85c379f2a3efb1
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Thu Jan 14 12:07:46 2016 -0500

    fix requirements

commit bb0d055408ae3687c3e101d59c81130d18b079f7
Merge: c32a66f 5f50f43
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Thu Jan 14 11:46:17 2016 -0500

    Merge remote-tracking branch 'origin/VDM-11' into VDM-11-anish

commit 5f50f4348b3f483fd5746270b1613cc319ff65d1
Merge: bbabb1d cb1a3d5
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 14 19:25:27 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit bbabb1de48c3f342256204c9eb312100e5bea115
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 14 19:25:16 2016 +0545

    VDM-11: Issues with diskLimit features not showing resolved

commit cb1a3d568d940509753efb7260ae7f3ba6145d07
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 14 19:17:52 2016 +0545

    VDM-11 Removed comments.

commit f43b53b48fd988d8bbaf9c5105b9f5ef3aac69da
Merge: ae83101 4446d05
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 14 19:05:21 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit ae83101622e7f6f064c60482d7972f7d0b93382a
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 14 19:04:54 2016 +0545

    VDM-11 Modified code to get the users in configuration xml.

commit 4446d05da5845bf384834374732f1df0c7e28267
Merge: 2992ba4 44357d7
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 14 18:04:38 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 2992ba4dca6b87a3a072a62822ad7da2fe2318eb
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 14 18:03:54 2016 +0545

    VDM-11: issue with connectorclass not saving and jsonapi not saving fixed

commit 44357d75cf0cdf49ffd28b4eb868b77d56a77881
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 14 17:50:00 2016 +0545

    VDM-7 Added code to sync configurations while updated configuration fields.

commit 5ed2c642687c224996263232075d87e5d8301e4f
Merge: 12d74a8 b31d6f4
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 14 17:23:06 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 12d74a87c9d9a407b9c34699ed5400aa2de1f399
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 14 17:22:57 2016 +0545

    VDM-7 Modified code to sync the cluster configuration.

commit b31d6f48cbec210dddde9253c1c8871d9275cf0a
Merge: ca327b7 4a168dc
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 14 15:21:19 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit ca327b7c45634c147b0832aef3c6e8bfb577d618
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 14 15:19:59 2016 +0545

    VDM-11: DiskLimit section of cluster configuration implemented

commit 4a168dc045b0b7c65033dadf189f29eef68ebf4e
Merge: 7fd3da1 7cd624a
Author: unknown <smanandhar@dwnpcpu366-PC.dwnp.deerwalk.com>
Date:   Thu Jan 14 14:45:45 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 7fd3da1094082c65b2ecb133c42d89e2b9ad7dee
Author: unknown <smanandhar@dwnpcpu366-PC.dwnp.deerwalk.com>
Date:   Thu Jan 14 14:45:03 2016 +0545

    VDM-11: Design issue on the layout when advance dropdown is clicked.

commit 7cd624aaaa3210da73309b0ba0ecdc32dd32ab35
Merge: 93fc166 4bccdd7
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 14 14:43:20 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 93fc1668ee997bce84d2c9c0aa70aaa844991038
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 14 14:42:26 2016 +0545

    VDM-7 Modified code to sync the configuration while adding a server.

commit 4bccdd7849910f71f131ad4b3dbb659827f9e955
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 14 10:59:06 2016 +0545

    VDM-11: Issues with memorylimit and snapshotpriority fixed

commit c32a66f3a3d21b578c444835b457ab54e2aa191e
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Wed Jan 13 17:42:51 2016 -0500

    VDM-11-anish: Add users to deployment.

commit 6ecf37c133cea4f0b65bdfc9fbb355ddac474ae5
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Wed Jan 13 12:13:05 2016 -0500

    VDM-11-anish: remove dr enabled and fix not adding None elements.

commit 21bb086ca8d910a265110974960036359bd925ff
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Wed Jan 13 11:18:13 2016 -0500

    VDM-11-anish: fix get deployment

commit 9bb7ed4841619da4442243bc226790446b43edb7
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 13 18:48:29 2016 +0545

    VDM-11: DrOverflow path added in Directories section

commit fe84a8bbc3b90fa49805401309851b762a781025
Merge: 946b758 3c160f1
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 13 18:09:54 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 946b758e580ff85df5f11d3ef332a0c2502cc65f
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 13 18:09:38 2016 +0545

    VDM-11: Memory Limit implemented in cluster configuration

commit 3c160f1c213f1f9dac49d427df79ea9f9a6009fc
Merge: 1e2d1ee c185404
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 13 15:12:19 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 1e2d1ee8509a78ffef1ef9fca548f4d775a7c990
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 13 15:10:32 2016 +0545

    VDM-9 Modified code to check VDM status before adding servers.

commit b3a8d3a29bc6a4c88c64bacbf1c65cfe6eebe8f0
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 13 13:36:56 2016 +0545

    VDM-11: Server side changes for adding memorylimit and disklimit

commit c185404ff8123dbfee7b02a31936e3c27d9c6b56
Merge: 50edec2 a95f5d9
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 13 11:30:31 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

    Conflicts:
    	lib/python/vdm/server/HTTPListener.py

commit 50edec2bfbf110c344ec30c0e1390d0ae8646a39
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Wed Jan 13 11:29:22 2016 +0545

    VDM-11: default deployment.json modified and fixed changes accordingly

commit a95f5d9cc5abcbdaf2e8f37cc0fdfe0606f4928a
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 13 11:15:42 2016 +0545

    VDM-9 Added an API to get VDM status for peers to check.

commit 5336e08b919511ac06e1449fbe2e607ce5b8cbe5
Merge: 5a08bd3 6f919e4
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 13 10:38:51 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit 5a08bd376f054b8f0a2faf5a838a8a2218b0d412
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Wed Jan 13 10:36:27 2016 +0545

    VDM-11 Changed the default directory to $HOME if no deployment path is
    mentioned.

commit 6f919e4229c8a3445f2f8f6aa61416e09e943351
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 12 17:10:30 2016 +0545

    VDM-11: fixed issue with enable/disable partition detection

commit 6f3fe3eceb630f8b2af54c32d04de0bd465080db
Merge: a50f199 67071ef
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 12 16:59:47 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit a50f199d956ad6e8d5a5e305d05a2318d97a3c55
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 12 16:59:08 2016 +0545

    VDM-11: fixed issue with enable/disable partition detection

commit 67071efa396c39190d3c195d0dabea8df520be71
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 12 16:56:13 2016 +0545

    VDM-11 Modified code to remove the items from deployment xml in case of
    no values.

commit df5c8a49e7446e078114ea2b14f9562f0f3cc938
Merge: cf16d91 421e83f
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 12 16:39:03 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit cf16d91005cc2faebc0473a4e5a6e2ef46a87737
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Tue Jan 12 16:38:17 2016 +0545

    VDM-11 Modified code to take the deployment path while starting VDM.

commit 421e83f49eed07f666b63cf09488d66c94827c40
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 12 14:28:08 2016 +0545

    VDM-11: Export type and import type corrected to lowercase in /deployment

commit ba2ce4c86da9e905eda52b2b38d63a360746be4a
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Tue Jan 12 11:38:18 2016 +0545

    VDM-11: Implication of change with adminMode->admin-mode and partitionDetection->partition-detection
    and fixed failed server side tests case

commit 29d5b31344f665dcda0880667726983abf7a2f29
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Mon Jan 11 16:18:42 2016 -0500

    VDM-11-anish: try to fix tests.

commit 0bb433aa36a945930fb1d0f24dfb00e5085b39dd
Author: Anish Khanzode <akhanzode@voltdb.com>
Date:   Mon Jan 11 16:06:31 2016 -0500

    VDM11-anish: make deployment correct add function to get deployment for database.

commit b55ab6485e49493ad8f81c1f822e02523e82965e
Merge: a5a970b 6e77059
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 11 16:43:28 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit a5a970b07e76da644d74a9208418c0eac91eef2e
Merge: 742d3bf a888d68
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 11 16:41:14 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

    Conflicts:
    	lib/python/vdm/server/HTTPListener.py

commit 6e7705934bd05d4fd13be90fd856296583b9c704
Merge: a60b305 a888d68
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 11 16:39:49 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit a60b3051e96c0777565e89740f6c09c0c1f4171b
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Mon Jan 11 16:38:40 2016 +0545

    VDM-11 Used 'ElementTree XML' API to generate the configuration XML file.

commit 742d3bff87b6e790e7aa447cbe94e5216f19e728
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Mon Jan 11 16:36:20 2016 +0545

    VDM-11: Added CLI option for deployment path

commit a888d68333a1f22395577fe7a18c03aefcb4b836
Author: anil <anrai@deerwalk.com>
Date:   Mon Jan 11 11:20:12 2016 +0545

    VDM-11: Automation test enhancement for Directories and Cleanup of created database

commit 5f28d6e0e79f2f9dcee3bdb745df4d4763fb5b8c
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 8 17:20:59 2016 +0545

    VDM-11 Modified the 'servers' to 'members' in Configuration file.

commit c914144b085dd7d6b123566e0bfff7d4d1c316b0
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Fri Jan 8 16:55:08 2016 +0545

    VDM-11 Modified code to save the Cluster configuration to vdm.xml file.

commit 939961a4c37cf278162231f6ced5a75c244221d4
Merge: 4e565df 63a89e6
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 7 12:58:43 2016 +0545

    Merge branch 'VDM-11' of http://github.com/deerwalk/voltdb into VDM-11

commit 4e565df8c302a5275f5a472fd3bfbbc07ad1590e
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 7 12:58:29 2016 +0545

    VDM-4: Set security enabled to off if no security is available

commit 63a89e6d7c670b860fa23d6a992c9bf54e5edc86
Merge: c29b980 cd0e829
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 7 12:56:14 2016 +0545

    Merge branch 'VDM-11' of https://github.com/deerwalk/voltdb into VDM-11

commit c29b98097d868c62eb314db4140e87d000fdbb3b
Author: Prabim Manandhar <pmanandhar@deerwalk.com>
Date:   Thu Jan 7 12:55:28 2016 +0545

    VDM-11 Changed the location reference of deployment.json file.

commit cd0e8291aa1ea42afac28617aa2799a6b41f6faf
Author: Sujesh <sujeshakya@deerwalk.com>
Date:   Thu Jan 7 11:04:41 2016 +0545

    VDM-4: Set security enabled to off if no security is available implemented
"
07f4403a0982d2ad383ce96ff862ad5a355e147e,VoltDB/voltdb,"Use the quick way to optimize the tableIterator instead of using the abstract class
"
5a1cda58ddb2332f21962b4dd3da8b12b331cff1,VoltDB/voltdb,"Rework thread pool sizing and usage of Runtime.availableProcessors()

Various locations sizing thread pools based on processor count could result in pool size 0. Others sized pools too large based on Andy's recent measurements. Pools that need parallelism but shouldn't take over all hardware cores are available procs / 4 (so half of all physical cores) with a minimum of two. This effects the network thread pool and computation service.

Also wrap Runtime.availableProcessors() in CoreUtils so that it always returns at least one. Several people say they have seen it return -1.
a Please enter the commit message for your changes. Lines starting
"
9a409c9111cf2d448dcef14034b27c7fa8291fdb,VoltDB/voltdb,"Unify the semantics for testing legality of display list expressions in indices and materialized views.
"
cbfd8365bdbf871734596fdc8122f76503696e4b,VoltDB/voltdb,"Separate periodic works into their own tasks.

Instead of having a periodic work thread run every 5ms and having each task in
there check if they want to run in this iteration, separate them into individual
tasks and work at their own paces.
"
f548efe8f5cd6b6d2a495f0deb2421adcb979ffc,VoltDB/voltdb,"VMC-265 Modified code to save query tab and query related to it in local storage.
VDM-128: Fixed issue with incomplete error message when adding missing server (#92)
VDM-130: Fixed issue with upload deployment not working while uploading with curl commmand
VMC-281: Fixed issue with VDM giving wrong status code when creating duplicate database (#91)
VMC-280: Fixed issue with Decimal datatype showing 0E-12 in VMC for zero (#88)
VMC-279 Modified code to fix the issue of wrong missing count in VMC.
VMC-278: Fixed issue with TPS not drawing while transaction is zero in regular timestamps (#85)
VMC-260: removed commented script to solved test failure in SchemaPageTest
VMC-263: Added sizeWorksheetTabSizeWorksheetVariations and changed test names to CamelCase (#81)
VDM-260: Additional changes in the tests of AdminTest
VMC-275: Fixed issue with cannot add property while creating export configuration
VMC-266: modified VMC to handle SPNEGO authentication failures more gracefully
VDM-125: Fixed design issues with Start in Admin Mode checkbox and fixed its server api issues
VMC-264: Fixed issue VMC tps chart report non-zero tps after client w‚Ä¶
VMC-268 Modified code to prevent unwanted strings like '#COMMAND_PARSER_REPLACED_STRING#100000' from being inserted using the sql queries.
VDM-111: Fixed ""Start Failed"" still very close to the X, if that was ‚Ä¶
"
3881619c28d15516eafbac7ad100468c68679f2c,VoltDB/voltdb,"ENG-6490: Make error info queue limit settable in the CSVLoader.
"
88b8513f4e9f4177f6659580e4d9a92d6e2f29f2,VoltDB/voltdb,"PRO-349, PRO-350: Stop sending heartbeats from the initiator when replay.

This commit is paired with a PRO commit that replays command log. Replay is
disabled until the UI is in place.

Remove dead code in InitiateResponseMessage.java.

Add a new operation mode called INITIALIZING. The database will stay in this
mode until snapshot restore, command log replay, and command log truncation have
all finished. Then the database will switch to RUNNING mode or PAUSED mode
depending on whether start in admin-mode is enabled.
"
c3c69d4aa505619117d1dfaa440e031c12940cea,VoltDB/voltdb,"various optimization, mainly removing unused Json items
"
cea756d490d1699c6fdebbefc3ea296ce548b797,VoltDB/voltdb,"Rewrite ELT. Thanks Mike.

Squashed commit of the following:

commit 72b7e82d00ccd647df80bcdfd5a0c63ad2ac7103
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Wed Apr 28 21:31:39 2010 -0400

    end to end basecase is green.

commit b4aae0260027194cd04a02ff91525491241ffa6b
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Wed Apr 28 17:20:47 2010 -0400

    Only create datasources for ELT-enabled tables.

commit 33fe050b6de2c1f9244e803106b1c6afeac219d9
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Wed Apr 28 14:37:55 2010 -0400

    Delete tables, like before, from engine dtor.

commit 7b29738661156a0921a51593ec1e5ef9b6d3dbc8
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Wed Apr 28 14:06:40 2010 -0400

    Missing FSM test file.

commit d304dad8f82d0d6008315654c2731d332c7ee8b2
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 12:35:44 2010 -0400

    Clean up the interface, add some comments, etc.

commit f791484349d59e905633fb8d5ed5b5322a524032
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 12:26:43 2010 -0400

    Just for fun, improve const-correctness while we're poking around
    here.

commit 59af347fbd9d62f3f9e1958880d6e47471be3ada
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 12:23:30 2010 -0400

    Improve the data mutability of StreamBlock a bit.

commit 0bf4896e3a89618ff3c6b3d71bf0d7abc183383c
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 11:35:29 2010 -0400

    Make StreamedTable_test more useful.  It runs through the basic
    poll/release cycle and just validates that the metadata looks
    reasonable and that nothing fails horribly.

commit 1f149a1e5c00ad3609a12dd3e3af6b9ef558f5b1
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 11:17:32 2010 -0400

    Get rid of dead diagnostic output

commit 36af1a8e09edea51e76b73d2821f79635e46f8b5
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 09:04:15 2010 -0400

    Checkpoint:

    Add code to complete the path from the JNI interface through to the
    TupleStreamWrapper calls on the appropriate table.

commit a00a533c5c37ee24819e9e1174ddba099197f417
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 07:23:01 2010 -0400

    really quick checkpoint before we smash

commit 609e28f594b1fbc147c3869e8e1e1078155a72da
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 07:18:30 2010 -0400

    Add JNI code for nativeELTAction.

    Add eltAction stub to VoltDBEngine

commit 5fd11e6bc7fe80a98f55692ebeed07fd330efdc0
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 00:29:22 2010 -0400

    Bah, unused var

commit 85ecd35df9feb8abdbb405df34c945dce87adec2
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 00:28:38 2010 -0400

    Make StreamedTable stop failing.  Needs some love and attention to be
    useful, though.  Coming tomorrow, perhaps.

commit 6c79c41e9c3a56f4ec6a8fc7e193f2612be9b02a
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 00:21:50 2010 -0400

    Clean up some commentary

    Fix a memory leak around m_fakeBlock (/facepalm)

commit c7d72c729c27f6c7c2af94b4202c9737503f24d9
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 00:08:39 2010 -0400

    Comment out debugging output for now, clean up later.

commit 0d78f92926b7f25e2d0a14d3d64bf6d7d6ebcb63
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Wed Apr 28 00:04:30 2010 -0400

    Checkpoint:

    All the TupleStreamWrapper tests pass.  Need to clean it up still.

commit 7f812a7c63f78e0acfd4a09690e09fe7fd2062b9
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 23:18:23 2010 -0400

    Checkpoint:

    add far-future-flush unit test

    Fix a fail with a rollback test (the test was assuming some behavior
    that doesn't happen but that probably doesn't matter)

commit e6e8fb120f7038a8eb8b031643cae5f2e8e49868
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 21:51:14 2010 -0400

    Uncomment tests

    Fix some possible unit test errors in transaction ordering

commit 0acdbb91e2b424afb7127fae8fe72865fc236cb2
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 21:42:55 2010 -0400

    Checkpoint:
    - fight with m_committedUso
    - fix arg order to StreamBlock to fix fake block return

commit c85534c2bfb86978981de48e11eac18183e5fd35
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 18:57:19 2010 -0400

    Checkpoint

commit 0dfcf3ed2d5c17307053174654d6ff6eb3965eff
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 16:50:22 2010 -0400

    Add logic to track the first unpolled bytes.

    Fixup off-by-one in unit tests

commit 62cad63bf6f3cfc8aa5d8af2cc4d82710c125341
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 15:44:22 2010 -0400

    Make tests fail without segfaulting/valgrind death:
    - When rolling back across buffers, need to set m_currBlock to be the
      buffer we're popping off the back and always pop that buffer from
      the collection as we're searching for the mark.
    - Fix calling sites for the offset()/remaining() API change in
      StreamBlock

commit a3728f1e1b4a56592e1464108ef0a7147ba8d5f6
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 15:06:16 2010 -0400

    Fix initial buffer allocation so that a poll with no data returns
    something valid.

commit 811943e87009288227d669173115e40188be8ab9
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 14:32:30 2010 -0400

    Fix compiler errors

commit 312978e5e4e4ab6ee1b6a4511ec97e0dbebcc98c
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 13:55:27 2010 -0400

    Checkpoint additional unit tests

    Checkpoint API changes

commit a30fc8f68271c2fe196c6a10e1d85b8f4c90a9ec
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Tue Apr 27 11:44:44 2010 -0400

    Checkpoint hackery

commit a93dd65b4d08bfac950c7e573a00f3c6e6abdb28
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Mon Apr 26 15:42:49 2010 -0400

    Pull StreamBlock out of TupleStreamWrapper.  Some other hackery.

commit 5c728a742a0c75bc99f3d2f87ddb0c5baf827ad0
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Mon Apr 26 15:42:25 2010 -0400

    Add missing include for throwFatalException macro to compile when used
    elsewhere.

commit c7ce8630cd79be31172d5962798b82b5429acd13
Author: Michael Ismert <izzy@izzy-desktop>
Date:   Mon Apr 26 13:57:22 2010 -0400

    Checkpoint:
    - Put TupleStreamWrapper_test back in the built cpp tests list
    - Comment out all but the first TupleStreamWrapper test case
    - Purge Topend from the TupleStreamWrapper constructor

commit 4f63b0ed8b1d98409cefd342ec98a677d062f464
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Wed Apr 28 13:54:25 2010 -0400

    FSM tests for rawprocessor. Also move the run/event loop function
    into the state block class; makes life nicer.

commit 4528306fc6293b6b8f1d47e6b9872d23dba3860f
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Tue Apr 27 20:16:29 2010 -0400

    Test case for ELTInternalMessage and ELTDataSource.  Collapse the
    ExecutionSite message and the old RawProcessor.MailboxPair (horribly
    named, no?)  together into the new ELTInternalMessage.

    Maybe in the future the internal message should really just keep
    a sequence number and some separate data and it wouldn't expose
    execution site to the raw processor state block.

commit b91da1ef046a80617121c6e659c2fc30a9644c9d
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Tue Apr 27 18:45:56 2010 -0400

    Unit tests for ELTProtoMessage. Fixes some length preceder
    confusion. Adds partition id and table id to message ctor.
    Not perfect but this at least makes sure they are always
    set. Just a little weird for the OPEN messages.

commit c56455dcc073e702eb02fe97271d611fd6289ffc
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Tue Apr 27 16:20:55 2010 -0400

    Java code complete?

commit 851da04f6cfe36b70864a7035fd10dddf6c5c9e6
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Mon Apr 26 21:56:32 2010 -0400

    Think most of the layers are reasonably connected. Need to finish the serialization to the client next.

commit 0963b98c949ea94f96a20c4f1e06e372fba0b68b
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Mon Apr 26 14:58:41 2010 -0400

    Extract the ELT protocol message out of RawProcessor. It is more fundamental and not specific to the processor type.

commit de899ac331bfea7bb9ec021612bf23a6c664c9a6
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Mon Apr 26 14:39:36 2010 -0400

    WIP: stub out some of the native EE method prototypes.

commit f018e0bc6545057b36c605c1a7007a81c4f4514a
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Fri Apr 23 18:00:06 2010 -0400

    checkpoint

commit b3008c19f2ad19353e32cc115525970423211a22
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Thu Apr 22 15:00:58 2010 -0400

    checkpoint

commit a870ce59a31bfadd7671b228cf5b0a4a1be6c5bf
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Wed Apr 21 18:31:51 2010 -0400

    Checkpoint some test infrastructure that is arranged more for polling than for receiving a stream from the server.

commit 76a14969adde41dadb1f5c8494a974fdc2d4d1a4
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Tue Apr 13 14:01:36 2010 -0400

    Rip out push-based JNI interface for ELT.

commit 83befe09b2cd206064c660aedf85de834f197f04
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Tue Apr 13 11:07:12 2010 -0400

    Rework some of the commit logic.

commit 6798c68588d5710f29d74f03722d4aabcb710491
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Tue Apr 6 17:16:34 2010 -0400

    wip: partial work to move buffer allocation to EE.

commit 6ab49180ea55974076153f652bfcb6e953813da3
Author: Ryan Betts <rbetts@voltdb.com>
Date:   Tue Apr 6 14:35:00 2010 -0400

    Remove cached header block from the EE. File headers will have to
    be pre-pended in Java for the pull based file connector.
"
c58f1202308c86443a7f84d449947b6b14a67f42,VoltDB/voltdb,"VMC-302 Removed commented codes.
"
1c50fd2ac2cfcd8cdc163c018d27d823360bdb6d,VoltDB/voltdb,"Merge branch 'master' into stream-refactor

Resolved conflicts:
	src/frontend/org/voltdb/iv2/ElasticJoinProducer.java
	src/frontend/org/voltdb/rejoin/StreamSnapshotSink.java
"
92844e76eee08e0931d53e74fb9da08c1db9aa4e,VoltDB/voltdb,"Merge pull request #17 from VoltDB/guava_cleanup

Guava cleanup"
e11cfa48bb59a9542d551b867841f233e4bc275a,VoltDB/voltdb,"Refactor: pull proc init into separate class.

Pull the procedure runner initialization in to a separate utility
class so that it can be shared beyond execution site.
"
d2ea8510cee1776734f20813d3c73c9cda8e2432,VoltDB/voltdb,"Consolidate StreamSnapshotSinks used during join to one per site.

Each sink will be receiving data from multiple sources.
"
5e099e2ff7187569ee7d80dc3492f230057d6a45,VoltDB/voltdb,"Clean up toString some?
"
e53694616a98186044b0200297a40657c70084ba,VoltDB/voltdb,"clean up all the column info related sloppy code
"
e45da19342835a64724dd0684580fdc4ab483e67,VoltDB/voltdb,"Add support for dense rank.

In this commit we add support for dense rank. We also refactor the
parsing of windowed aggregates to be less rank-centric and more general.

Also, with this commit, we repair some errors in the build system.
These caused unnecessary and misleading error messages, and are more
robust to GCC versions."
4750012e3f411d21fe3dfda2c322b216d8c64aef,akvo/akvo-rsr,"[Fixes #20827519] Made the donate button centered. Moved .less files from less directory to src dir since it was a bit cumbersome to set export path from less to another dir than the source files
"
2205e85821824eb5022118208f2a5a0dfbda03a3,akvo/akvo-rsr,"[#1258] More optimizations

- Rewrote organisation directory view
- Rewrote project update view
- Cleaned up syntax to score better with static analyzers
- Commented out a exception logger that is for development in map tag
- Moved show_filter_class to view utils
- Fixed template bug in org directory.
- Removed old code
"
ea55b8a68dcc56750378dc1d717ca38571fb0603,akvo/akvo-rsr,"Fix small bug in views.get_api_key()

Make sure we always return a proper HTTP response object
"
810352ba911ab318cf92c28692d09e54a08d501a,akvo/akvo-rsr,"[#1633] Renamed partner_type_2 to partner_type in APIs

- Renamed partner_type_2 to partner_type
- Changed the backwards compatible Extending partner to 'extending', since converting this to a support partner isn't completely correct. Also, it gave issues when trying to filter on 'support' in the API, since it then only returns the partners with the accountable role and not extending. 'Extending' isn't fully backwards compatible though, because this type didn't exist before, but only new partner could have this type.
"
e5a2b8559fc2b94b925671eade9bf913ab29bbfd,akvo/akvo-rsr,"[#2696] Refactor UpdateDisplay component

Refactor the layout and include info on who approved an update
"
1ec15bb4adad706b34ee1a5924f62b6b1ab25807,akvo/akvo-rsr,"Removed duplicate primary_location syntax errors introduced in fix to location data(commit 570dfc79). [finishes #8683447]
"
99b58b23a6ac7e1f238d3bb744c32f72e5c76858,akvo/akvo-rsr,"[#1980] Fix scheduling isseus in IATI import

Fix setting of next execution time for scheduled imports that didn't
work correctly.

Fix problem with CordaidZipIatiImportJob resulting from the
refactoring of IatiImportJob in a previous commit.

Add debugging code that logs entry and exit of select methods. This is
a WIP to try to trace the performace problems the import seems to have,
and was used to get the scheduling right.

BUG: I think there is a bug remaing in CordaidZipIatiImportJob, see the
TODO in parse_xml()
"
d6f9d7c1804c4c3ad664277487caad5d0faaaeb2,cilium/cilium,"api: Add endpoint/log to replace Status in /endpoint

The endpoint status log is now a separate API call, simplifying GET
/endpoint as it no longer contains the large status section.

Signed-off-by: Ray Bejjani <7f525154e857f3d57a641a83dddc584f42addc6a@covalent.io>
"
e516402e404d4c035195db81b16a124be9ece7a6,cilium/cilium,"Ginkgo: Added `kubectl.ManifestGet` helper method

At the moment for each Kubernetes version, the same manifest file is
needed. With this change, if the file is present in the version folder
it'll use it, if not it'll use the general one.

Signed-off-by: Eloy Coto <2a8acc28452926ceac4d9db555411743254cf5f9@gmail.com>
"
70f09c79efdd8889a9d5d96e7b046e69473ad73f,cilium/cilium,"endpoint: make RegenerationRequest private

Instead, consumers of pkg/endpoint pass down an ExternalRegenerationMetadata
structure, which contains data relevant to a regeneration which are populated
by said consumers (e.g., daemon).

When an endpoint regeneration is triggered, transfer the data from this new
type into a regenerationRequest. This regenerationRequest is only available
to the goroutine which is responsible for a single endpoint's regeneration.

Signed-off by: Ian Vernon <ian@cilium.io>
"
1a0554817564308c88df2a447b928fbae1f81848,cilium/cilium,"Ginkgo: Run monitor on test

- Added MonitorStart method in Kubernetes and runtime helpers.
- Update VagrantBox to have `moreutils` package installed.
- Update test to run monitor on start, and save the output on
`JustAfterEach`

Signed-off-by: Eloy Coto <2a8acc28452926ceac4d9db555411743254cf5f9@gmail.com>
"
0fa08c7e730bd7d122a30e36bee33c3f2c2c65b1,cilium/cilium,"ctmap: Refactor dump to use DumpReliablyWithCallback

Signed-off-by: Joe Stringer <16a9a54ddf4259952e3c118c763138e83693d7fd@covalent.io>
"
a450f2a8b3506e05a970a934c70f94f3650890ba,cilium/cilium,"Ginkgo: Refactor common startup code into helpers

Shift the code to wait for the node to become ready and the network to
be created into the CreateNewRuntimeHelper() function, which is already
called in the initialize function of each test file.

Set default policy enforcement mode when getting the *SSHMeta at the
beginning of the test to make the tests more reliable and reduce
boilerplate. Tests which need other settings can explicitly modify this.

Signed-off-by: Joe Stringer <16a9a54ddf4259952e3c118c763138e83693d7fd@covalent.io>
"
8e822036a4b63093f9bbb0769502bcb02c3033b1,cilium/cilium,"Nightly: Added TCP Keepalive test over tunnel

- Added TCP keepalive over Vxlan without policy and with L7 policy.
- Added ExpectContains helper in resCmd

Signed-off-by: Eloy Coto <2a8acc28452926ceac4d9db555411743254cf5f9@gmail.com>
"
9a071791d740314243565483d3a29bf1be949556,cilium/cilium,"Rename directories to reflect go binaries

This allows to continue using `go install` to install pkg files in the
GOPATH without install conflicting binary names.

Acked-by: Andr√© Martins <bc9800b9d52a24cce72a73dd528afed53f10e5fc@cilium.io>
Signed-off-by: Thomas Graf <5f50a84c1fa3bcff146405017f36aec1a10a9e38@cilium.io>
"
76c2f2f0217705e193c73bc5f1969a74c34e7891,consul/consul,"Merge branch 'master' into flag-renaming
"
5710a5e1348d49b55929075b9c978a13bd08cb4d,consul/consul,"Adds missing i18n labels and removes unused ones
"
66691b644aec3f3691e07c88b80c9c7bd996f4b2,consul/consul,"Refactor Budget::PHASES constant to Budget::Phase::PHASE_KINDS
"
00f4acc7c21a9282ed9f1f4a52bbb9dddcb96572,consul/consul,"refactors highlights
"
9abe303b3197b434869dd6dd641fe7d4ab0258ce,consul/consul,"removes unused method
"
0e097973cccb225d7593b4ad3dfd473bd41ce373,consul/consul,"Add widget feeds to homepage

Note there is some funkiness going on with class loadings
Had to create a `feed` and `widget_feed` table even though in this
first version the Widget::Feed includes only uses ActiveModel instead
of ActiveRecord, otherwise some specs failed

We‚Äôll figure it out and clean up üòå
"
d1d2a31876f659f2cfbb20fff565906c695323ef,consul/consul,"Remove permissions of obsolete actions. Add missing image managment abilities to common and administrator specs.
"
ea6ef5996ffd541c4181f3a22d773193bdfc8d93,consul/consul,refactors manager login to spec helper
4f5c16303615d0f53b483384c3c49af2b1e16388,consul/consul,"removes duplicated abbr border bottom
"
ad181b0e108e38f829cd3a9141e9b8c1e4d0f6d8,consul/consul,"Add label to cards

Also removes unused fields related to buttons and alignment
"
799c2b7593fc8378ce1ecf91ba037e61f65236f7,debops/debops,"Merge branch 'drybjed-ypid-rework-5'
"
f30c5822204bbd653ab45b3c5512bda4f8aa03f0,debops/debops,"Merge pull request #13 from drybjed/new-pki-support

PKI rewrite"
9b2d7a9dbb5904faa4b19badf2716e2335aa9a0c,debops/debops,"Renamed `etc_services_([^_].+)` to `etc_services__\1`.

Related to: https://wiki.debops.org/roadmap#project-wide_changes
"
45cb503a4a1f7de4abc59883a496b0eabce68eed,debops/debops,"Merge branch 'ypid-rework-2'
"
29e8f1e5ee84ca04905b19b4ddc7b1781d4f4968,debops/debops,"Use full Etherpad plugin names instead of abbrevs
"
cd127b19fd3fd1460788289bf9a65ff59a3f3a58,debops/debops,"Merge pull request #3 from drybjed/dnsmasq-rewrite

Rewrite debops.dnsmsq role"
5944ea272c898fb561e11eb702c15d6d25c9611c,debops/debops,"Merge pull request #24 from drybjed/reprepro-rewrite

Drop reprepro dependency, update conditional installs"
0ae9a733ae952144437ab63afa91e21f38b9a92b,debops/debops,"Reworked Changelog.

Related to: https://github.com/debops/docs/issues/154
"
ba0febb1882b627826cecd5a522ccce218219225,debops/debops,"Rewrite of the 'debops.rstudio_server' role
"
14a279d5d0498198718cad2ffc22aa75df406bed,debops/debops,"Merge pull request #54 from ypid/rework

Rework. Drop apt_cacher_ng support, docs, coding style."
51282e31cc35b44be23873df4be45f65a619a07d,dotnet/roslyn,"This is the final change in the series of changes I have been making to ensure that compiler and IDE are completely hardened against exceptions from analyzers.

This change makes the DiagnosticDescriptor completely exception safe. Currently, DiagnosticDescriptor has lazily evaluated LocalizableString fields for Title, MessageFormat and Description. These have public extension points at ToString, Equals and GetHashCode methods, all of which can throw. These callbacks have now been wrapped within a try-catch for our LocalizableResourceString implementation of LocalizableString. For custom user implementations of LocalizableString (which should hopefully be rare), we wrap these within an ExceptionSafeLocalizableString which calls into the inner localizable string wrapped within a try-catch. All this is done within the DiagnosticDescriptor constructor, none of the clients have to explicitly handle the exception at use sites.
"
279ca2e86736b93a40ec3a5da995430cf888b9bc,dotnet/roslyn,"code clean up following code review feedback
"
3b5a335458084d1404627c79f9d5e90217459eaf,dotnet/roslyn,"Merge pull request #22695 from mavasani/PublicApiCleanup

Public API cleanup for certain IOperation APIs"
4c34ae068351a76fe4ff26238986aea66771f5a8,dotnet/roslyn,"Rename construction methods.
"
e68db6df07e2467998f7b596778c379c04f8bfb6,dotnet/roslyn,"Merge pull request #2766 from dpoeschl/DisableRenameTrackingToVarDynamic

Disable Rename Tracking with ""var"" and ""dynamic"" in C#"
2ffca553e6fe68a61e9fe1342c731c3782ee4289,dotnet/roslyn,"Merge pull request #3793 from amcasey/RevertScriptInternal

Revert ""Make APIs related to scripting and interactive internal for RTM"""
258d4aa10ab7de73fb6eba7a2f9b8772597d0470,dotnet/roslyn,"Change Windows command line argument parsing

A process in Windows is provided arguments as a flat string yet main methods in applications receive arguments as an arary of string values.  The transition between the flat string and array is done automatically by the runtime in two phases:

- Break into arguments based on spaces and grouping quotes.
- Remove extraneous quotes and backslashes.

Doing both operations at the same time serves to remove separators that are significant to the compilers.  For example:

1. /r:""a.dll,b.dll""
2. /r:a.dll,b.dll

In the main method both of these argument strings will show up as the latter value (the quotes are considered extraneous by the runtime).  Yet these represent very different values to the compiler:

1. Reference a single file named ""a.dll,b.dll""
2. Reference two files named a.dll and b.dll respectively

This change restores the native compiler behavior by manually parsing out the flat argument string.  All of the parsing methods were taken directly from the old compiler.

There are a few small changes of note here:

1. VB now considers semicolon to be a list separator as it does comma (unifies behavior between languages and other tools).
2. VB and C# now have unified behavior for collapsing backslash characters.
3. Fixed several unit tests which were validating incorrect behavior.

closes #4021
"
8e844eb7a351b27bf499daa8585e0c1bbb922d55,dotnet/roslyn,"Rename method.
"
80b0d828f4a0a1727a5141620b15412965e52979,dotnet/roslyn,"Merge pull request #2317 from CyrusNajmabadi/typeScriptCodeRefactorings

Type script code refactorings"
c988caf05b0806f24879fc155c1d3bf74920b58d,dotnet/roslyn,"Address some code-review comments:
- [x] https://github.com/dotnet/roslyn/pull/23208#discussion_r151519706 try-finally can be eliminated in local function `looksLikeCast` in `ParseExpressionOrPattern`
- [x] Recommend adding some blank lines back to Syntax.xml. See https://github.com/dotnet/roslyn/pull/23208#discussion_r151802628 and https://github.com/dotnet/roslyn/pull/23208#discussion_r151802657 .
- [x] Parameter unused in `private ScanTypeFlags ScanType(bool forPattern = false)`; See https://github.com/dotnet/roslyn/pull/23208#discussion_r151807815 . Also the same comment for the caller; see https://github.com/dotnet/roslyn/pull/23208#discussion_r151808973 .
- [x] Prefer types spelled out instead of `out var` (including in `LanguageParser.cs` and `LanguageParser_Patterns.cs`); See https://github.com/dotnet/roslyn/pull/23208#discussion_r151808453 and https://github.com/dotnet/roslyn/pull/23208#discussion_r151808516 et al.
"
0fd82023aacf098b4d418fcdf42f0135b1944dfc,dotnet/roslyn,"Address performance regression in CompilationWithAnalyzers.GetAnalyzerDiagnosticsAsync and new public APIs 'GetAnalysisResultAsync' to fetch the entire analysis result with diagnostics categorized by kind (syntax, semantic, compilation), tree and analyzer.

Now only the partial analysis APIs (GetAnalyzerSyntaxDiagnosticsAsync, GetAnalyzerSemanticDiagnosticsAsync and GetAnalyzerCompilationDiagnosticsAsync) do analyzer state tracking. Rest of the APIs execute analyzers without state tracking, improving overall performance.

Fixes https://github.com/dotnet/roslyn/issues/10530
"
e24813b0e29c42e12d610bb6232016eeeebe1760,dotnet/roslyn,"Merge pull request #10670 from heejaechang/cleanup2

skip running hidden diagnostic only analyzer in solution crawler path."
d78f9f18017f66bf3c1d6115a8a99d034d6b19aa,dotnet/roslyn,"Merge pull request #15580 from tannergooding/open-vsi

Cleaning up the open integration framework"
441c86759f2e0077bb570fd50f16603288cecb3a,dotnet/roslyn,"Improve error message for publicsign keyfile relative path
"
9af1fbcae1d2f7fd47b24bedc2660ce7d7ce80b1,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/features/ioperation' into merges/master-to-features/ioperation-20170705-070014

* dotnet/features/ioperation:
  Fix unit test failures from merge conflict resolution
  removed double empty line
  remove duplicated test
  Fix build break in VB
  Address some more review feedback and fix one more break.
  Fix build break from merge conflict resolution
  added vb tests
  fixed failed tests
  added csharp unary operator expression test
  Address PR feedback from Chuck
  Address some PR feedback from prior change
  Fix unit test failures
  Actually fix the build break from merge conflict resolution.
  Fix incorrectly resolved merge conflict
  Add IOperation support for anonymous object creation expressions.
"
2556aa6c2f5168a6e44e3570151f5eab292ab464,dotnet/roslyn,"Use dotnet-bot instead of vslsnap GitHub account for GitMergeBot
"
afe85de317cb00cb4fb4f81fac483512ce036c08,dotnet/roslyn,"moved some part of code to DiagnosticData
"
385012d51cc72b5d1952d53b71554a3be5ae5c05,dotnet/roslyn,"Rename method.
"
d8f949c8dedd26e0a33f03851953625e73f5e308,dotnet/roslyn,"Unify checks for nullable types. (#24617)

"
32250c7950175bb41cfd351b274b7ac5e4e05021,dotnet/roslyn,"Merge pull request #2338 from shyamnamboodiripad/DontUseAbsoluteUri

Don't use Uri.AbsolueUri for the url that is displayed in the tooltip.

This ensures that the url displayed in the tooltip is more human readable."
363f338d708f4798e8714a7c3bbb13590e667155,dotnet/roslyn,"Ensure script compilations properly inherit return type from first compilation

Use ScriptCompilationInfo.ReturnTypeOpt instead of ReturnType when
chaining off a previous compilation to ensure that the derived
ScriptCompilationInfo has the same ReturnType.
"
c2fbd9c63fcff589a9127b91d3dfde97957f02ab,dotnet/roslyn,"Move and simplify code.
"
747392bdc4f4cf1e1d4d205af88ce425760b6dcc,dotnet/roslyn,"Clean up IntegrationServices
"
19ca074dc37048701687ece6a39946a53b5fc1cb,dotnet/roslyn,"Rename Expression to Resources, added null/Nothing tests.
"
e64dac0d30992522f2697ffa196802638a8e4f2f,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/dev16.0.x' into merge-dev16.0.x

* dotnet/dev16.0.x: (512 commits)
  Sign CoreXT packages (#29986)
  Some more minor refactoring per feedback
  Address PR feedback and also handle few more cases identified during dogfooding: 1. Bail out for explicit interface implementations for properties, we only did so for methods. 2. Bail out for types with StructLayoutAttribute 3. Conservatively handle member references inside DebuggerDisplayAttribute argument by doing a simple string contains check.
  Change RemoveUnusedMembersAnalyzers to be a non-Style analyzer
  Fix issues identified during dogfooding.
  Create AddAwait refactoring (#28930)
  Address PR feedback (use static ctor and remove regions) and also fix an assert seen during dogfooding.
  Enable DeadCodeAnalysis rules and address design/review feedback.
  Disable VSTHRD010 to improve build performance
  Disable procdump since it prevents FailFast event logging
  Log information about crashes during integration tests
  Move xunit package references to Roslyn.Toolsets.Xunit.targets (#29664)
  Fixed a missed save
  PR feedback
  Fix race in SourceParameterSymbol
  Add option keywords to enable searchability (#29764)
  GenerateDeconstructMethod code fixer (#28286)
  Fix race in SourceEventSymbol.GetAttributesBag
  Switch to Arcade targets for building VSIXes (#29590)
  Add Make Field Readonly test for accessed fields
  ...
"
b5884e4c61ce8ee443180445a3c2a83b6cfafc68,dotnet/roslyn,"Make the General Code Style & Naming Style options pages accessible

Fixes #13579
Fixes #13099

Fixes for tabbing and Narrator.
"
8a0a65f0890403cb9ba9060e7ffb50615834249e,dotnet/roslyn,"Merge pull request #3943 from tmat/BlobBuilderRename

Rename BlobWriter to BlobBuilder"
2c942ec4463468c2ecacf9a2abaaa2edf021d8f6,dotnet/roslyn,"Fix C# compiler generated Linq selectors to use anonymous object creation instead of regular object creation

Fixes #25268
"
9be05a2304a73a26c6a33b0779708791dcb54f9b,dotnet/roslyn,"Cleanup
"
67126897402fb60c30c482bbfd2dbde9ca7fe499,dotnet/roslyn,"Split VB For and For Each blocks into separate nodes sharing a base type. (changeset 1348206)
"
5a52a3c5d954149d17c4f1c2dbdc511513b7e854,dotnet/roslyn,"Merge pull request #8672 from davkean/app.config

Remove unneeded app.config from test projects"
8b6214deb47fdd646f48d1555052bb7eb8748ac6,dotnet/roslyn,"Merge pull request #21467 from 333fred/fixed-statement-internal

Move IFixedStatement to internal"
f3866a3aab78e3764b835e3bf7b20586779ae341,dotnet/roslyn,"Move VsdConfig targets into core targets directory

The VsdConfig.targets file was not located in our core targets location.
Moving there as this is the appropriate place for all targets / props
files in our build.

Additionally changed it to use the vsdconfig from our NuGet packages
directory instead of hard coding Visual Studio.
"
271adad8a3e3c68ad0cddd98ff85e046f8073e4f,dotnet/roslyn,"Merge pull request #16165 from AlekseyTs/Issue11427

Improve diagnostics experience for public signing."
15254a74972f512f11151b445829538e7322a936,dotnet/roslyn,"Merge pull request #17808 from CyrusNajmabadi/moveTypeNoInheritance

Strip inheritance nodes from outer types when we move a type to a new file"
2d5d9cffaca1a896f75350c608b5a9a48fd3e0c7,dotnet/roslyn,"Moved C# to not pass multiple children to constructors, and instead just pass the original bound node.
"
cb3c238dff0dd060433444b59ad3475720a4907a,dotnet/roslyn,"Rename class.
"
f4f341ec3987d8326657c6ebc1f252edf524e698,dotnet/roslyn,"Moving AbstractEditorTest functionality into extension methods
"
39bf9c2c66b7d2e7c3f3a0fbc6dc6c829bea8d11,dotnet/roslyn,"Revert rename.
"
9cb7093a5fb9674b82239881e4c586d333c53bbc,dotnet/roslyn,"moved all table control API to new one.

editor team has refactored thier table control APIs
"
1ddbaac5d8b51eeb48a85fd2856123a97a661090,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/features/ioperation' into ilabelstatement-refactor

* dotnet/features/ioperation: (38 commits)
  Remove obsolete MEF v1 method of exporting options: [ExportedOption]
  Respond to PR comments (#21595)
  Add regression test for crash in closure conversion (#21594)
  Address PR feedback and use a different overload for GetCandidateMembers
  Extract method.
  Do not offer 'use throw expression' if value is accessed before being checked for null.
  Don't offer 'generate overrides' in a static class.
  Fix no completion in partially written code before 'await'.
  parameter refness update in local functions/lambda should be caught a‚Ä¶ (#21573)
  Don't offer to use pattern matching if a user defined operator was involved.
  Give link to new Manual Testing document
  Fix crash in VisualBasic.Binder.MemberLookup.AddLookupSymbolsInfoInTypeParameter when it is called with Cref TypeParameter. (#21586)
  Fix lock test.
  Additional refactors.
  Refactor variable names.
  Refactor IConditionalChoiceExpression.
  use PerformIO utility
  put dispose under finally.
  Update to Microsoft.DiaSymReader.PortablePdb, Microsoft.DiaSymReader.Converter.Xml to 1.4.0-beta1-62016-01 (#21557)
  removed usage of ImmutableArray in json.net
  ...
"
901b072d2668d11a83b3f4dc6d3b830bc1cdc11a,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/features/ioperation' into conversion-expression-rewrite

* dotnet/features/ioperation: (31 commits)
  Fix lambda EnC (#21291)
  Use 15.3 Preview 7 for VSI CI machines
  Add cancellation between each document.
  Remove unused private method (#21268)
  Work around SDK 1.1 issue around netcoreapp2.0
  Update Language Feature Status.md
  Const warnings shouldn't cause emit error (#20729)
  Fix the symbol test
  Choose test config based on TargetFramework
  Standardize on the portable ThrowingTraceListener
  Enforce using UnitTestPortable
  Correct the order of parameters to Version
  Clean up RunCsc/Vbc.cmd a tiny bit
  Remove usages of 'Foo' from our codebase. (#21224)
  Make RunCsc/Vbc scripts respect DOTNET_HOST_PATH
  Fix typo
  ignoring exceptions about not running on main thread
  Updating VisualStudioSymbolSearchProgressService to consume new API
  Updating visual studio references
  Accept pre-rel version number
  ...
"
42134654c690e58b8ff036c94284084026d9de1d,dotnet/roslyn,"cleaned up some const name to reduce some confusion.
"
a2c0077d02fe5cdd2a520e86f101e62004217d6e,dotnet/roslyn,"Merge pull request #12622 from CyrusNajmabadi/refactorInsertion

Refactor how we do completion item insertion."
0c10f4b875a4c5841d426ce1080aad3f06454556,dotnet/roslyn,"Apply code review feedback to Quick Info PR

This commit has a few significant changes beyond correcting minor nit picks:

1. It unifies the GlyphExtensions classes in the Workspaces and non-WPF EditorFeatures layers.
2. It significantly cleans up the super-ugly mocking code in QuickInfoControlTests.vb
3. Tweaks the QuickInfo API to remove QuickInfoItem.Empty and QuickInfoItem.IsEmpty properties.
"
82268d086d8c5f5d429ff7bab6a4fecbd3a18014,dotnet/roslyn,"Prototype for ""default"": semantic model, constant value and more tests (#16425)

Conflicts:
	src/Compilers/CSharp/Portable/Binder/Binder_Expressions.cs
	src/Compilers/CSharp/Portable/Binder/Binder_Query.cs
	src/Compilers/CSharp/Portable/Compiler/MethodCompiler.cs
	src/Compilers/CSharp/Portable/Errors/ErrorCode.cs
"
8fef5b5d1505a5b43a4d4717f2deba07ba2085e0,dotnet/roslyn,"Remove duplicate package references.

When our projects were last updated to a newer version of Microsoft.Net.ToolsetCompilers, NuGet didn't replace the old version--it just put the new version next to it. Every project ended up referencing both versions, and which set of compiler binaries ""won"" depended on the order they appeared in the project file. So different projects built with different compilers.

This change strips out all references to the old version. (changeset 1352054)
"
868aa27cf9f2e9b5e7a548faf8fde8aa28a37f6b,dotnet/roslyn,"Merge pull request #16380 from dpoeschl/StylePagesAccessibilityRC3

Make the General Code Style & Naming Style options pages accessible"
63a7296d02b22fedb86fc73457b87d142359bf80,dotnet/roslyn,"Improve performance of IVsLanguageBlock.GetCurrentBlock...

Previously, we would fetch a SemanticModel and build containing Symbols for the current block.  This could be very expensive in a large solution.  However, for the purposes of this scenario, it is adequate to just inspect Syntax.

This change also unifies the implementation of IVsLanguageBlock.GetCurrentBlock with IVsLanguageDebugInfo.GetNameOfLocation.
"
151eaa217ab7a7d7f21ebe2279c59f8be4bde7ec,dotnet/roslyn,"Merge pull request #10890 from dpoeschl/Fix10469

Rename - Don't crash when type renamed to 'Current'"
068d012ce9ce07ce2f9a7c559a6b8a674f656d2d,dotnet/roslyn,"removed JTF usage and moved some map to where it is actually used. and some simple clean ups
"
d6b68de626b6dd6fb89c774d84c2ee9dbd5f87d6,dotnet/roslyn,"Made ref locals and returns conditional on a features flag
"
443d458965f75748fcd7a2c8016134a9db55bd43,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/features/ioperation' into ilabelstatement-refactor

* dotnet/features/ioperation: (71 commits)
  Rename parameters.
  renamed methods.
  Rename method.
  Move integration test machines to 15.3 RTM (#21535)
  Update comment
  Fixed unintentional capitalization change, corrected grammar.
  Do a better job with leading trivia on types when moving types to a new file.
  Remove Release subdir from template output path (#21482)
  Fix bug in 'this' optimization for classes (#21510)
  Add test.
  Improve find-refs behavior when the user invokes it with a symbol selected.
  Fix regression in VB attribute classification.
  Fixed unintentional capitalization change.
  fix merge issues
  OSS sign debugger binaries. (#21468)
  More test fixes.
  Fixed misgenerated tests.
  Use default tuple fields in conversion since fields from inferred names are marked not usable in C#7
  Add note that while we could implement dynamic invocations, we chose not to
  Refactor comments in local function binder
  ...
"
5b7ddaf80292a391a9940dbbc4635986885364cc,dotnet/roslyn,"Rework VB spell check to be more stable in its sort order
"
69f34ba42e70c290caff7cb51fef05b98b23973c,dotnet/roslyn,"Make methods synchronous
"
d8eaab0e4a4eb942b7d4530c15b6e7d773e47568,dotnet/roslyn,"log watson when codefix or refactoring throws

When a codefix or refactoring throws an exception, we turn it off, log
it to the activity log, and put up and info bar telling the user what
happened.

With this change we also check to see if the codefix/refactoring was
implemented by the roslyn team and send a non-fatal watson report.
"
4f1d215729a1348718aa34eceba3ccc7e0cc2d82,dotnet/roslyn,"Merge pull request #17448 from CyrusNajmabadi/testCleanup5

Remove unnecessary parameters."
57503cd659597dd1631d237d2ea85520975dabc9,dotnet/roslyn,"Unify Moq dependencies
"
0d9d661ad7095b02212d0708c14b648b0dcac59c,dotnet/roslyn,"Merge pull request #17677 from CyrusNajmabadi/moveNestedTypeOut

Move nested type into its own file."
710e0fce8d6bcc16e8cfd05eda9f4f1067594e96,dotnet/roslyn,"Merge pull request #10833 from tmat/MetadataWriter-3SF

Metadata writer refactoring (4F)"
898dbc06057c3e7ec2d6c73d4ba59517d91cb892,dotnet/roslyn,"Merge pull request #16453 from tmat/VsixCleanup

Vsix cleanup"
2b2d296b0f73cec86261ec9711ebe759a9de9163,dotnet/roslyn,"Use nameof instead of hardcoded argument names.
"
eec37a0ee1e0a600ab4d900518b58fa0e69fd4da,dotnet/roslyn,"Make methods synchronous
"
45f6e9bc6dd457a5279f0f1b380a70ca8ac0a59d,dotnet/roslyn,"connected diagnostic service to task status center (#24690)

* connected diagnostic service to task status center

* PR feedback updated some variable name and string

* fixed test break.

task status center and service provider doesn't exist in unit test

* made GetProject and GetDocument to have same behavior on given ProjectId/DocumentId

* addressed PR feedback

* forgot to remove optional

* moved diagnostic progress reporter out of error list and made its own thing

* removed unnecessary service provider

* removed ?. and adjust ordering

* removed comment

* removed debug only info

* address PR feedbacks

* update on VoidResult

* removed blank line

* more feedbacks
"
1b4597ef8058582311e9f211eb8672200081dc33,dotnet/roslyn,"Merge pull request #6605 from CyrusNajmabadi/simplifyInvoke

Simplify delegate invocation."
0f7eeec5406889bc1c792bc0f4fbe8b5ffe87a49,dotnet/roslyn,"Improve the caching mechanism used for export providers during testing
"
caa36a7d1b5be061ba5ba8c1a5ba97ecb61693c4,dotnet/roslyn,"Merge pull request #10704 from davkean/deleteprojects

Remove unused compiler performance projects"
ae877468c6b126f53e23812f2cdee5816e6fe584,dotnet/roslyn,"Use error=true in Obsolete attribute on IsByRefLikeAttribute for ref struct (#22492)

"
d01fef03f23624d52128c254b2748be7b881fac3,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/features/ioperation' into remove-literal-text

* dotnet/features/ioperation:
  Fix no completion in partially written code before 'await'.
  parameter refness update in local functions/lambda should be caught a‚Ä¶ (#21573)
  Don't offer to use pattern matching if a user defined operator was involved.
  Fix crash in VisualBasic.Binder.MemberLookup.AddLookupSymbolsInfoInTypeParameter when it is called with Cref TypeParameter. (#21586)
  Additional refactors.
  Refactor IConditionalChoiceExpression.
  use PerformIO utility
  put dispose under finally.
  Update to Microsoft.DiaSymReader.PortablePdb, Microsoft.DiaSymReader.Converter.Xml to 1.4.0-beta1-62016-01 (#21557)
  removed usage of ImmutableArray in json.net
  Update PULL_REQUEST_TEMPLATE.md
  Add test documentation to the PR template
  Remove LocalFunctionRewriting pass (#21408)
  PR feedbacks
  3 product changes and 1 test change
"
ab9dc861db63485bc3d19cf835ffe6479900e3ce,dotnet/roslyn,"Move to new version of VS SDK: 26127.00
"
388bc609d34630d4027243444c906c21eeff3ebf,dotnet/roslyn,"Merge pull request #5905 from tmat/ScriptAPIReviewFeedback

Scripting API cleanup based upon review feedback"
ce07353c7261fb106c0ce4d89ec1ab11d43c0efc,dotnet/roslyn,"Separated out the EditorServices2 dependencies
"
60de51bec0ba7053b24224ab1129d262e6620543,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/features/ioperation' into fix-conversion

* dotnet/features/ioperation: (30 commits)
  Fixed unintentional capitalization change, corrected grammar.
  Fixed unintentional capitalization change.
  More test fixes.
  Fixed misgenerated tests.
  Fixed another unintential case change.
  Fixed unintentional case change.
  Added ILockStatement tests.
  Refactor missed internal field.
  Update CSharpReplaceMethodWithPropertyService.cs
  Add VB side of fix.
  Remove unneeded function.
  Improve trivia preservation when converting methods into a property.
  VB side of do-not-simplify-nameof if it changes semantics.
  Do not simplify to an alias in a nameof if it changes the value of hte nameof.
  Include System.Runtime.Serialization.Primitives and System.Security.Cryptography.Csp in PortableFacades CoreXT package. (#21438)
  Refactored ILambdaExpression to IAnonymousFunctionExpression, Signature to Symbol.
  Refactors INullCoalescingExpression to ICoalesce expression, and properties to sensible names.
  Rename ILockStatement.LockedObject to Expression.
  Address one more refactoring feedback
  Address PR feedback
  ...
"
0d42ec3088b3100e622010dfe7facb8fb39c59b0,dotnet/roslyn,"Place TupleElementNamesAttribute on proper handles (#15060)

The previous code mistakenly put the TupleElementNamesAttribute on the
type ref for interface implementations and type parameter generic
constraints. This change moves the attribute to the actual interface
implementation and constraint handles, where it belongs.

Fixes #14844"
39390b3947901dc75d605eb9d9fe0c27846d3133,dotnet/roslyn,"Merge pull request #484 from jasonmalinowski/unify-vs-setup

Unify VS Setup"
ae1d872680d85c883ae2b55cd72f47791057c23e,dotnet/roslyn,"Enable indexing of `fixed` fields without pinning.

Turns out the reason why we need pinning is the artefact of our code generation strategy - it is actually unnecessary to convert to unmanaged pointer before indexing.
Same unsafe pointer math is equally applicable when we have the receiver in the form of managed pointer. However, when it is managed (GC-tracked), we do not need to pin it.

Therefore, when a `fixed` field is used just for indexing and the unmanaged pointer is never realized, the requirement for `fixed` statement is unnecessary, regardless whether the receiver is movable or not.

NOTE:
- it is still possible to pin `fixed` buffer. That would be useful if one needs to do some elaborate pointer math or pass the pointer to the native API.
- It was always allowed to index in unmovable contexts and it was always unsafe, and still is  - in particular no range checks are performed.
- the only restriction that is gone is that you can use indexing if receiver is movable as well.
The operation is just as fast and just as unsafe as in unmovable context - in particular it performs no range checks.
"
b79d701b3613a703b729937bb50fcca9e1fadc25,dotnet/roslyn,"String rename
"
b76cb91113a088d0406319c950ebcfe81f9d66a6,dotnet/roslyn,"Add an instrumentation component that can be used to instrument certain statements and expressions during lowering. Part 2.

This finalizes the refactoring. Sequence points are no longer created before LocalRewriter is invoked. LocalRewriter completely relies on instrumentation for sequence points generation. There is an exception, LocalRewriter creates hidden sequence points in three places, but they are not associated with any executable code derived from C# syntax.

Related to #9819.
"
81aa181971ed0f1fade2a5df68c51fb271cedc8e,dotnet/roslyn,"Move InMemoryAssemblyProvider out of the tool layer

This moves the InMemoryAssemblyProvider out of CodeAnalysis.Desktop.
Because of its use in a high number of leaf project it is now included
as a linked file in those cases.
"
3b04e9ff489e4ea7a6d16aeadbc8140bcf710c9b,dotnet/roslyn,"Merge pull request #20980 from zaytsev-victor/Fixed18882

Fixed unexpected line break on InlineTemporary refactoring on anonymous type with comment"
c452b514641be6a9c92b05c7d7d929c254f27d63,dotnet/roslyn,"Merge pull request #3044 from jmarolf/FxCopStable

renaming the fxcop binaries and making them portable."
327d259ed30297e37e1334f91c38f47411b9afc1,dotnet/roslyn,"Correctly handle simplification of Nullable{T} to T? inside crefs

Fixes #29
"
0366402f9fc6f8d03cbaa3290bd1e0aba2a1492f,dotnet/roslyn,"Explicitly pass along the name node we'd like to rewrite.  it's not always the same as the context node.
"
01ba1e711eb58e630ae168e2a7f1dd22e27e75a3,dotnet/roslyn,"Refactored ILabelStatement to ILabeledStatement.
"
6da61157721de9140000c3f1054becd45d573e01,dotnet/roslyn,"moved waiter from diagnostics.dll to features.dll where all interfaces are defined. (#24512)

* put listener change back in (https://github.com/dotnet/roslyn/pull/24120)

* leave old types in legacy folder until partner teams move to new interface

* added legacy waiter to support partner teams
"
c699c4bd992c1f35d34a987f6caa9beada0bc287,dotnet/roslyn,"Cleaning up the '$(Configuration)|$(Platform)' and 'PlatformTarget' definitions.
"
1a9eeaae5efa549333d4d6598099065f6f6dc80b,dotnet/roslyn,"Trivial renames of IOperation API parameter names

This was missed as part of #22774 for #22719.
Fixes #22719
"
6d95933cc6e729a2140b1da48de7fda8a9f69323,dotnet/roslyn,"Remove TestUtilities.FX45

This project is no longer necessary.  It used to help us get TDD working fine in Visual Studio.  That's no lonegr needed with the recent build cleanup.  TDD still functions with this project removed.
"
8f0f59aec02a77c66f347aa0fb6b6ebe9c1a406c,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/master' into keybinding-reset

* dotnet/master: (61 commits)
  Suppress xlf on templates.csproj
  Fix the MSBuild syntax error
  added a way to set logging information synced to remote host and more logging for error list. (#23614)
  Revert ""Merge pull request #23364 from tmat/DisableBackgroundCompiler""
  Reduce the number of attributes that should be bound in order to determine if there are NoPia local types explicitly defined in code. (#23505)
  Fix microbuild for VBCSCompiler
  Avoid using PerformanceSensitiveAttribute in pooled object types
  Testing theory about %TEMP%
  Move C# tests to testing metadata emitted attributes through `CompileAndVerify` (#22896)
  Fix xml doc files
  we called work done too early. (#23623)
  Test theory new props caused int failure
  Add VBCSCompiler.dll to the Microsoft.NETCore.Compilers package
  Further isolate our msbuild test files
  Deploy Dir.build.props / targets in tests
  Fix deployment of ilasm
  Fix publish dir name when no runtime identifier
  Generate xml doc files during build
  Fix publish to include runtime identifier in dir
  Remove unneeded file SettingsSdk.props
  ...
"
9d772785f1a6060e26cf112db25f7dd20021aee0,dotnet/roslyn,"Add helper methods to Verify operation tree for annonated text within a source file.

These APIs will be used in autogenerated unit test for Operation tree verification.
"
3e095f9c0509b336a43dfa6a660490340efa7b75,dotnet/roslyn,"Merge pull request #925 from srivatsn/sysruntime

Move some more rules to System.Runtime.Analyzers"
a8880b922f780a24cfb87d1fb6946a8f2b0c1b67,dotnet/roslyn,"Merge pull request #11157 from VSadov/generators

Hide replace/original functionality behind a feature flag."
2b56e6e90ce29fefe1b8d76c5fd50e84f3613c56,dotnet/roslyn,"Merge pull request #3556 from tmat/RemoveTypeExport

Remove unnecessary types: ITypeExport, TypeExport"
72e1d4f33ed6817146f851ba653e235d3cbd6c12,dotnet/roslyn,Enc: Unify time-based versions of assemblies from all previous generations (#11568)
19e6663637d88635bd428431a13edcc3aaee6666,dotnet/roslyn,"Rename types.
"
e6bddaea6ebe95674aa48d4ed134fa49e0742fea,drupal/drupal,"Issue #1744186 by damiankloip, tim.plunkett: Move uses_options() from plugin annotation to a class property.
"
454a6e9fed2ba708397b54ae1f1d59a23fd45d70,drupal/drupal,"Remove call to obsolete plugins.inc.
"
36ec18969549ff173b45ae35577e035c2c19f641,drupal/drupal,"#326539 by JohnAlbin, sun, cha0s, ultimateboy, Rob Loach, Damien Tournoud: Convert 'class' attribute to use an array, not a string.
"
05a4376ff4254f1a11fac7a1b286390e4c2c9a96,drupal/drupal,"Rename classes to remove the redundant Database prefix and move query exceptions into the query namespace.
"
f969b391b4b789b40f87c32812adce5c2f1d7592,drupal/drupal,"Issue #1227942 by Rob Loach, cweagans, tstoeckler, xjm: Rename format_username() now that it's in user.module.
"
fc7c38bde839658bd7160bc802186be81b126755,drupal/drupal,"Issue #1764474 by Berdir, chx, alexpott, pounard, msonnabaum: Make Cache interface and backends use the DIC.
"
cab88a70149d7a1302d1e1e930fc19f909086a25,drupal/drupal,"#220233 by Berdir, marcingy, et al: Add useful API functions for extracting node type data.
"
d1a88e919fb4e454427507bc4224bf65bed5aa73,drupal/drupal,"Issue #1938898 by duellj, Pete B, mlncn: Convert block theme tables to table #type.
"
92286713d58abc1aad1cc55ad7d1a0c59ab758c3,drupal/drupal,"Move database files to the new lib directory and update code accordingly.
"
b91c1a9e559d759867c35dd32408a2b1248a9627,drupal/drupal,"Issue #2120841 by tim.plunkett: Convert form_options_flatten() to a method on FormBuilder.
"
3c2b78d7d83741d205969cc0d7aca5ebaf6ca0b0,drupal/drupal,"- Patch  #1468930 by dawehner, G√°bor Hojtsy, plach, das-peter, fubhy: clean up and move the code for the negotiation functionality from locale module to language module.
"
f2d710c60793dc8833061b8b8648f202705b7c90,drupal/drupal,"Issue #1620010 by dawehner, ParisLiakos, plach, jibran: Move LANGUAGE constants to the Language class.
"
2432c02138861423b7db36526554afcacee0bc46,drupal/drupal,"Issue #1987066 by Kevin Morse, JohnAlbin, rteijeiro, echoz, ry5n: Rename files to match CSS file naming convention.
"
58480ee670d8c60a6c4e3909b2647d1611db7738,drupal/drupal,"Issue #2362227 by dawehner, mpdonadio, znerol, tim.plunkett, skipyT: Replace all instances of current_path()
"
c05f2181dc8556cb6700e8c6bb6e6ded43273192,drupal/drupal,"- Patch #572618 by effulgentsia, pwolanin, sun: all theme functions should take a single argument. Code clean-up and performance improvement. Woot.
"
f19fadd3a4b5c72f9949d8ed22f4af38a3d5f207,drupal/drupal,"Issue #1996238 by sun, nod_, damiankloip, Wim Leers, longwave, alexpott, Xano, mdrummond, Mark Carver, Jeff Burnz, highrockmedia, joelpittet, et al: Replace hook_library_info() by *.libraries.yml file.
"
de3558c21444a7013f465145cb3bbe2df2e5f726,drupal/drupal,"Issue #2024867 by vijaycs85: Rename translation_entity() to content_translation().
"
598e739208de28182f3329a2c23511f5c27489e5,drupal/drupal,"- Patch #578520 by sun | c960657, mfb, Dries, catch, mattyoung: make  in url() only accept an array. Another nice API clean-up!
"
b3cf0681406832ea677d21beb438624a746b1622,drupal/drupal,"Issue #375397 by sun, Xano, Rob Loach: Make Node module optional.
"
12953f2eafe5b38f371dabf14f4d3de94e499d4c,drupal/drupal,"Revert ""Issue #2045921 by juanolalla, Xano, Sutharsan, InternetDevels: Replace all module_invoke() deprecated function calls.""

This reverts commit 98cdbfec7b5353d0a85005b3daf91449c975b2d2.
"
cadd9bd54ca9b3e5a95661c616d35a1a0045ab46,drupal/drupal,"- Patch #335086 by recidive: rename node, filter and comment module tables to singular for consistency.  Oh my.
"
18040223ad5a1b5b7d6ed2dc727647f5b79c42dc,drupal/drupal,"Issue #1471432 by G√°bor Hojtsy, vasi1186, tobiasb, kalman.hosszu, Schnitzel, nod_, pixelite, dawehner: Rework language_list(), let people use more special languages.
"
826245d5092ee703370adc32f407b296ba7396de,drupal/drupal,"Issue #2324055 by dawehner, cilefen, znerol: Split up the module manager into runtime information and extension information
"
5460c03e896e92a54a06464cbe96a2135bcf7d47,drupal/drupal,"Issue #1856766 by chx, Berdir, heyrocker, kim.pepper: Convert file_public_path() to the new settings system (make it not configurable via UI or YAML).
"
0f8b4e794e1e4c453185f2856b768aaeaa86f83b,drupal/drupal,"Issue #2023563 by Berdir, smiletrl, fago: Convert entity field types to the field_type plugin.
"
b41323642bffd3761f73a8c9dc8260546d7533f1,drupal/drupal,"#517814 by jmstacey, justinrandell, pwolanin, drewish, Jody Lynn, aaron, dopry, and c960657: Converted File API to stream wrappers, for enhanced private/public file handling, and the ability to reference other storage mechanisms such as s3:// and flicker://.
"
e0a0b76f827d46aeddc137ff5e65de23f057bc6e,drupal/drupal,"Issue #1851018 by alexpott, attiks, xjm: Improve breakpoint configuration implementation.
"
63e195eb3024e9aa79c1c4bc7285b329329c91af,drupal/drupal,"- Patch #338239 by Damien Tournoud: clean-up DrupalWebTestCase.
"
a2795d3b142e66e7c1563e075f77a68f0924ca97,ekoontz/babel,"s/dag-unify/dag_unify/
"
859054c168da5ddbb55f0c517a7dde83ab27cb63,ekoontz/babel,"rewrite babel.generate to be more efficient
"
bedc637ea53dc560abb551216b0e4f3f78e1dbed,emacs-ess/ESS,"Use project instead of projectile for inferior buffer names

project.el is included with Emacs 25.1 and newer.
"
fb52e7c14e0a252a9563836063a0a4ea408aa095,emacs-ess/ESS,"Fix call filling issues

* Fail with error when no matching delimiter is found.
* Handle blocks
* Chained bracket calls would not be recognised as calls.
* Backquoted calls were not handled properly.
* A check for infinite loop has been added in (ess-jump-continuations).
* Closing ] were not rolled up properly prior to filling.
* Rename (ess-call-p) to (ess-point-in-call-p)
"
7fe56f96d1f09535d9376868f2ed774ff148142c,emacs-ess/ESS,"Cleanup ess-custom

- Remove several options that we don't use anymore and mark them as
  obsolete: `ess-mode-load-hook', `ess-speedbar-use-p',
  `ess-synchronize-evals', `ess-eval-visibly-at-end',
  `ess-font-lock-mode'

- Remove defining variables which aren't used: `no-doc',
  `comint-highlight-prompt', `ess-source-modes'

- Make inferior-ess-exit-command a defvar rather than defcustom since
  it gets overridden by the language customize alists
"
44ea8040b467813b90b9d6aedc97a8469d900d14,emacs-ess/ESS,"* ess-custom.el (ess-mode-line-indicator): added dynamic mode-line
indicator. 
* ess-inf.el (inferior-ess-mode): integrated mode-line-indicator.
* ess-inf.el (ess-eval-function): integrated ess-developer in ess-eval-function
* ess-mode.el (ess-mode): integrated mode-line-indicator.
* ess.el (ess-completing-read): moved code around.


git-svn-id: fe53fb5f0676e2326ee71780652dea251e2b27e6@4563 0bbaf3bd-34e0-0310-bf65-c717079852d4
"
35332bdc59797a8f6d79a3de988d3bb5c1744e7d,embree/embree,"unified FastInstanceIntersectorK
"
39e6cf28d497da9297a635aff6174955cd772245,embree/embree,"moving constants.h to math folder
"
854b724aae082b29c782fe59ff96a8ba4fe608ec,embree/embree,"put fallback split into separate file
"
9ca429aeae22101be33d8c576267bd164c619229,embree/embree,"moving materialID into ISPCGeometry class
"
530fdcffb3ec4912682ff03a2279440e16af5242,embree/embree,"fixed issue that pluecker intersectors did return doubled normal, some optimizations of pluecker intersector improved performance by almost 2%
"
865d86ad6568cd5b3b75a19704867efc9fd3120f,embree/embree,"IntersectContext cleanup
"
633771dcb2a7c5fe48bd29792bed589e807db444,embree/embree,"cleanups
"
207c4faa585dd98408cb5e15ab52913016f70643,embree/embree,"unified BVH4IntersectorKSingle
"
c345f49037370a63937547db55b332207ff9c9f5,facebook/flow,"improve object compatibility errors when prop types mismatch

Summary:
when object types are unified, we unify the types of each common prop.
this diff creates a `PropertyCompatibility` `use_op` for this and threads it
around, which causes the errors to point at the objects being unified instead of
the types of the props that are incompatible.

note that we already do this when flowing an object literal into an object
type/literal. this is specifically when two object types collide.

Reviewed By: gabelevi

Differential Revision: D4405587

fbshipit-source-id: 25da51af3e0b46eaa21d585c818825034db18ffb
"
572563c3f869d2f55a67d42220d6b169f1d5645b,facebook/flow,"compact annot

Summary: Removed unused part of AnnotT, which has been subsumed by ReposUseT for a while.

Reviewed By: mroch

Differential Revision: D4309750

fbshipit-source-id: d73329fd9648cebe57a4b4740d7dade595e72877
"
f1173b6eddec79771d2bb0ff73a9d3db776ac5f0,facebook/flow,"[hack] Misc cleanups

Summary:
* Renamed a couple of top-level modules from CamelCase is
  Capitalized_with_underscores (as mentioned in style guide)
* Shortened unwrap_class_or_interface_hint to unwrap_class_hint; there are no
  hints specific to interfaces, just Happly
* Renamed open_class_hint to unwrap_class_type for consistency
* Moved min_vis_opt into our recently added Typing_visibility module
* Typing.make_params' callers should not have to pass it its initial values
* Made a bool param labeled
* Whitespace fixes

No semantic changes

Reviewed By: dlreeves

Differential Revision: D2884044

fb-gh-sync-id: 4f60622ac048859a2ffcd9db5233114d98da0ceb
"
8f1f608c0bf769124a48ce335454134317fc6a7f,facebook/flow,"Run `./runtests.sh` scripts in subshell

Summary:
A test can, via `.testconfig`, specify a script to run instead of just running `flow check`. By running that script in a subshell, we can make variables and functions available to those scripts without worrying about them affecting `runtests.sh`.

As a proof of concept, I'm sticking `assert.sh`'s functions inside `runtests.sh`. Then, I'm setting `set -e` in the subshell before executing the script.

This will come in useful in a future diff, where I'll replace calling `""$FLOW"" start` with a function `start_flow`

Reviewed By: mroch

Differential Revision: D8502936

fbshipit-source-id: cac286f92c1ba39c39378e3093cb28af9750b161
"
f703b81e9d8daf57965efb92d4daaa45e735f1b3,facebook/flow,"avoid naive unification on PolyT ~> PolyT

Summary:
Previously, we did naive unification (bidirectional subtype checking)
on `PolyT ~> PolyT`. This could cause an explosion of test cases,
especially in nested situations such as polymorphic classes hosting
polymorphic methods. And since checking such a definiion against
itself is not uncommon, it wasn't that hard to provoke the pathology
(see new test for an example that effectively hangs the typecheck).

This diff captures a subset of such cases, where the lower and upper
`PolyT`s have the same arity. In those cases it unifies the upper bounds
of each pair of type params, then instantiates each poly type with the
upper bounds as arguments, and unifies the pair. The idea is that these
unifications should be sufficient to check structural congruence.
(This leaves other easy checks unexploited, such as arity mismatches,
in the interests of keeping the diff relatively tiny. :)

Fixes github issue https://github.com/facebook/flow/issues/1029

Reviewed By: avikchaudhuri

Differential Revision: D3218650

fb-gh-sync-id: ecd1bfe831d82f225a282f362c0d3b983543c36a
fbshipit-source-id: ecd1bfe831d82f225a282f362c0d3b983543c36a
"
4a1ce749a9854566f62c006629f01a0c6816291f,facebook/flow,"extract filename stuff from Loc to File_key

Summary:
My end goal here is to move filename stuff out of the parser, including
removing `Loc.source`. As a first step, this diff extracts it into its own
module, which we can eventually move from `src/parser/file_key.ml` to
`src/common/file_key.ml`.

one cool thing is that `File_key` also becomes `Loc.FilenameKey`, but with a
`compare` function that doesn't use `Pervasives.compare`

Reviewed By: samwgoldman

Differential Revision: D5882631

fbshipit-source-id: 21a4a5afe08ed9643732cd38fd1635d58b39a7b5
"
d3f9b096606bb219dc4a4de0269fc4f8d0f36954,facebook/flow,"change exports maps in file sig to lists to accommodate overloading

Summary:
When there are multiple exports of the same name, a map keeps only the last one. This breaks
overloading at the top level.

Maps also helped relate an `export` with its corresponding `export_info`. To preserve this relation,
we ensire that the corresponding lists are parallel. This also results in some other
simplifications, and more cleanup is possible by tightening data structures further.

Reviewed By: panagosg7

Differential Revision: D10280157

fbshipit-source-id: e17e77e8a7c13761f57b0e75eeda6ab1570cd2b8
"
296ed9ce7896790798b9b2fcb3ba8af7c43f7dbe,facebook/flow,"add magic string prefix to upgrade string literals to ""module references""

Summary:
This diff introduces a configurable string prefix that will upgrade any string literal in any position into a `$Flow$ModuleRef<$Exports<'TheModule'>>`. This lets currently hard-coded APIs like `requireLazy` be typed in userland, instead of being special-cased in the typechecker.

An example usage is a function like `ifRequired('m#Foo', Foo ==> { /* callback */ });`. This function talks to the underlying `require` internals to actually get the module exports and this new API would let this function be typed like so:

```
declare function ifRequired<TModule, TYes>(
  id: $Flow$ModuleRef<TModule>,
  cb: (module: TModule) => TYes,
);
```

Flow would then understand that the first argument to the callback is in fact the same as requiring `Foo` directly. This reduces boilerplate and `typeof` in some of the magic infrastructural APIs.

Reviewed By: gabelevi

Differential Revision: D10369005

fbshipit-source-id: 02657b5304c458720ec207931ad005936c2ecb6f
"
73d505b3d4270632b66fad6f1088102468b105e0,facebook/flow,"Split use_op data type into root and frame use_ops

Summary:
At this point, all `use_op`s can be neatly formatted into two categories. ""Root"" `use_op`s like `Addition`, `Cast`, and `UnknownUse`. And ""frame"" `use_op`s like `PropertyCompatibility` and `TypeArgCompatibility`. Frame `use_op`s always have a parent `use_op` which is either another frame `use_op` or a root `use_op`.

This diff formalizes this distinction by splitting `use_op` into `root_use_op` and `frame_use_op`.

With this seperation we can easily build utility types that operate on `use_op`s. In this diff, to demonstrate the utility of this refactor, I change `FlowConstraint`'s `use_op` ""cut"" logic to always cut for `Frame`s.

In future diffs, I build utilities like `fold_use_op`, `root_of_use_op`, `loc_of_root_use_op`, `string_of_use_op_rec`, and `flip_frame_use_op` which are all much easier to implement after this refactor. Before, you would need to list every `use_op` in a pattern match if you wanted to iterate through the `use_op` linked list. Now, it's much easier to build these recursive utilities.

We use `Op` as the constructor name for root `use_op`s because `Root` is taken in `constraint.ml`.

Reviewed By: avikchaudhuri

Differential Revision: D6289077

fbshipit-source-id: 325b8d53871e0a8dc6e28c9ae8c7a40362d63e8a
"
9e2651b7dd0c632d42dd740dc4b9be0700371e89,facebook/flow,"Improve nonstrict-import error message

Summary:
The previous nonstrict-import error message could be ambiguous if you were not familiar with Flow Strict (eg. could possibly refer to usage of `'use strict';`). Updating it to explicitly call out `flow strict`

See discussion: https://fb.facebook.com/groups/flow/permalink/1765525126829428/

Reviewed By: samwgoldman

Differential Revision: D6827374

fbshipit-source-id: 32834e0bd023e807badba146caf2e3429c95f620
"
93a8ed0a6af0c5118ce398cb1dd80c3412e7fbfb,facebook/flow,"[hack] Remove Genva_array_va_rec

Summary: More dead code

redparty

Reviewed By: @dlreeves

Differential Revision: D2325718
"
98c7cc0dc23ce67be29a70ca08c28779e4ff7afa,facebook/flow,"[parser] wrap function params in an Ast.Function.Params.t node

Summary:
keeps track of the location of the param list, including parens (but
not the parens themselves, that wouldn't be very AST-like).

in a followup, I plan to use this to make the location of function types point
at the signature, not the entire function declaration (including the body),
which requires knowing where the param list is.

Reviewed By: avikchaudhuri

Differential Revision: D5760902

fbshipit-source-id: 80126f1b75018f52a76344bbe9330acfded95096
"
e96a254e40157c0c8c9af8f49447a190ed05050a,facebook/flow,"better intersection/union errors + error API cleanup

Summary:Improves errors related to intersection and union types by appending info
about individual member failures. Example (updated):
```
html/js/ads/powereditor/flux/stores/AdsPEDraftSyncStore.js:80
 80:   LEVEL_STORES = Immutable.List([
                      ^ call of method `List`. Function cannot be called on any member of intersection type
 80:   LEVEL_STORES = Immutable.List([
                      ^ intersection
  Member 1:
  107:     static <T>(): List<T>;
           ^^^^^^^^^^^^^^^^^^^^^ polymorphic type: function type. See: flow/immutable.js:107
  Error:
  465:     var syncItems = LEVEL_STORES.flatMap(
                           ^ call of method `flatMap`. Function cannot be called on any member of intersection type
  465:     var syncItems = LEVEL_STORES.flatMap(
                           ^ intersection
      Member 1:
      1768:     flatMap<MK, MV>(
                ^ polymorphic type: function type. See: flow/immutable.js:1768
      Error:
      474:     var descendantDeletedItems = this._findDescendantDeletedItems(syncItems);
                                                                             ^^^^^^^^^ Iterable. This type is incompatible with
      541:     syncItems: Immutable.List<SyncItemRecord>
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ List
      Member 2:
      1772:     flatMap<MK, MV>(
                ^ polymorphic type: function type. See: flow/immutable.js:1772
      Error:
      474:     var descendantDeletedItems = this._findDescendantDeletedItems(syncItems);
                                                                             ^^^^^^^^^ Iterable. This type is incompatible with
      541:     syncItems: Immutable.List<SyncItemRecord>
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ List
  Member 2:
  108:     static <T>(iter: IndexedIterable<T>): List<T>;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ polymorphic type: function type. See: flow/immutable.js:108
  Error:
   80:   LEVEL_STORES = Immutable.List([
                                       ^ array literal. This type is incompatible with
  108:     static <T>(iter: IndexedIterable<T>): List<T>;
                            ^^^^^^^^^^^^^^^^^^ IndexedIterable. See: flow/immutable.js:108
  Member 3:
  109:     static <T>(iter: SetIterable<T>): List<T>;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ polymorphic type: function type. See: flow/immutable.js:109
  Error:
   80:   LEVEL_STORES = Immutable.List([
                                       ^ array literal. This type is incompatible with
  109:     static <T>(iter: SetIterable<T>): List<T>;
                            ^^^^^^^^^^^^^^ SetIterable. See: flow/immutable.js:109
  Member 4:
  110:     static <K, V>(iter: KeyedIterable<K, V>): List</*[K,V]*/any>;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ polymorphic type: function type. See: flow/immutable.js:110
  Error:
   80:   LEVEL_STORES = Immutable.List([
                                       ^ array literal. This type is incompatible with
  110:     static <K, V>(iter: KeyedIterable<K, V>): List</*[K,V]*/any>;
                               ^^^^^^^^^^^^^^^^^^^ KeyedIterable. See: flow/immutable.js:110
  Member 5:
  111:     static <T>(array: Array<T>): List<T>;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ polymorphic type: function type. See: flow/immutable.js:111
  Error:
  465:     var syncItems = LEVEL_STORES.flatMap(
                           ^ call of method `flatMap`. Function cannot be called on any member of intersection type
  465:     var syncItems = LEVEL_STORES.flatMap(
                           ^ intersection
      Member 1:
      1768:     flatMap<MK, MV>(
                ^ polymorphic type: function type. See: flow/immutable.js:1768
      Error:
      474:     var descendantDeletedItems = this._findDescendantDeletedItems(syncItems);
                                                                             ^^^^^^^^^ Iterable. This type is incompatible with
      541:     syncItems: Immutable.List<SyncItemRecord>
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ List
      Member 2:
      1772:     flatMap<MK, MV>(
                ^ polymorphic type: function type. See: flow/immutable.js:1772
      Error:
      474:     var descendantDeletedItems = this._findDescendantDeletedItems(syncItems);
                                                                             ^^^^^^^^^ Iterable. This type is incompatible with
      541:     syncItems: Immutable.List<SyncItemRecord>
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ List
  Member 6:
  112:     static <T>(iterator: Iterator<T>): List<T>;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ polymorphic type: function type. See: flow/immutable.js:112
  Error:
  112:     static <T>(iterator: Iterator<T>): List<T>;
                                ^^^^^^^^^^^ property `next` of $Iterator. Property not found in. See: flow/immutable.js:112
   80:   LEVEL_STORES = Immutable.List([
                                       ^ array literal
  Member 7:
  113:     static <T>(iterable: /*Iterable<T>*/Object): List<T>;
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ polymorphic type: function type. See: flow/immutable.js:113
  Error:
   80:   LEVEL_STORES = Immutable.List([
                                       ^ array literal. This type is incompatible with
  113:     static <T>(iterable: /*Iterable<T>*/Object): List<T>;
                                               ^^^^^^ object type. See: flow/immutable.js:113
```

Doing this forced some error API cleanup that's	been a long time coming:
* moved error functions, speculative state, etc. out of Flow_js into FlowError
* rationalized the error-producing functions themselves, so it's clearer what to call when
* made the structures that clients use to specify error content less arcane

Feature is implemented by keeping a history inside the `IntersectionT` as it passes through
the speculative process, then making use of the cleaned-up API to put a bigger error
together if nothing works.

Reviewed By: samwgoldman

Differential Revision: D2982043

fb-gh-sync-id: a5deda060e5759a9b07818ebd804308aff616909
shipit-source-id: a5deda060e5759a9b07818ebd804308aff616909
"
25573c899a808a6e1d1e1a1f19f664e955d2b6e2,facebook/flow,"Recover better when merging a component raises

Summary:
The merge worker tries to recover from most exceptions, but doing so isn't very
helpful, because subsequent merge operations will likely fail when attempting
to read from the leader heap or the sig context heap.

This diff improves recovery by (1) writing the appropriate leader heap entries
and (2) writing a permissive sig cx heap entry.

This diff also changes a few other things:

1. We used to catch exceptions in local type inference. I did some code
spelunking and this exception handler is very old -- certainly older than the
refactor to combine local inference and merge. I removed the catch-all handler
in local inference to consolidate logic in the merge job exception handler.

2. Because of (1), the UnknownException error message type is unused.

3. The `InferJobException` internal error type has been unused for a while.

4. I changed the signature of `Merge_service.merge_results`. Before, the
`Error` case passed a raw `exn` back to master. However, unmarshalled
exceptions can't be pattern matched. Instead, I pushed the pattern match into
the merge job exception handler.

In order to test this behavior, I added a new custom fun that triggers an
exception in a worker.

Reviewed By: gabelevi

Differential Revision: D6604964

fbshipit-source-id: 6723f5c15897d21c71bd3710cd2dc39cc1eec836
"
b4d380dab715cf511a5c9db29b32a5aee4386bcc,facebook/flow,"switch reasons from Pos to Loc

Summary: `Reason_js` now only deals with `Loc` instead of `Pos`! `Pos` is gone, except for in `searchService_js.ml` since that talks to Hack's `searchService.ml` which uses `Pos`.

Relatedly, `Relative_path` is basically gone, too... just a couple more places to clean up.

Reviewed By: @bhosmer

Differential Revision: D2203736
"
0fb3de8da81c3b7783901f8eed2be05e436a3167,facebook/flow,"Improve reference locations: Calls to mk_instance should not automatically be annot_locs

Summary:
After looking through more error message changes, I found some cases which could be better handled by the `annot_loc` logic I introduced in D6056153.

Specifically:

- All builtin accesses supposed their annotation location was the position at which they were accessed. This was incorrect especially for primitives.
- We weren't correctly repositioning type applications in some cases.

Reviewed By: gabelevi

Differential Revision: D6698908

fbshipit-source-id: 3252ef33d066f63c85a36dde4543c1d78768321f
"
271677fbdad7328fb2dea01abf65896ab2790fde,facebook/flow,"[cleanup] remove Modes_js

Summary: threads stuff around, eliminates a bunch of globals

Reviewed By: samwgoldman

Differential Revision: D2887851

fb-gh-sync-id: 5ef1afb642eaec58e0e23b6298f85b7723c828c1
"
906a5777553b597bf300429b1c8f270b2c71e7dd,facebook/flow,"Use Loc.t instead of Reason.t for in_refined_env

Summary: Callees now take locs, so we can switch too.

Reviewed By: mroch

Differential Revision: D4920980

fbshipit-source-id: f2ecebc525e0cfe948a916c42f51c122ee8ff1c9
"
c55e75f244bfaf06e4da934d091df6f16f97502f,facebook/flow,"Dedupe errors on the reverse side of unification

Summary:
Programs like this:

```
declare var any: any;
type X<T> = mixed;

((any: {p: number}): {p: string});
((any: X<number>): X<string>);
```

[try-Flow](https://flow.org/try/#0CYUwxgNghgTiAEA3W8oDsCeAuVmDcAUAC4YAOCAGgDwAqAfPALzwC2AlgB4jCEEAUfdNngBvUjjQBXFgCMQMAL4BKHGJwBnIjDZoA5ssIChOalNny6K+NU3a9lwkA)

Show some redundant errors. This is because when we see `{p: number} ~> {p: string}`, we check both `number ~> string` and `string ~> number`. However, these redundant errors are confusing and frustrating for users. Confusing because the user thinks there are two _seperate_ errors which need to be fixed when in fact there is only one error. (`string` is not compatible with `number`.) Frustrating because each error (especially in the case of unions/intersections) can be 20 lines long. Two identical 20-line-long error messages are not ideal.

This diff dedupes these redundant errors.

How do we do this? By flipping the reasons in `use_op`s for the reverse side of unification.

While in theory, unification is just the flows of `T ~> U` and `U ~> T`. In practice Flow implements a special ""optimized"" unification algorithm which we describe in notation as `T = U`. This unification algorithm is what we use in most of the areas where we need `T ~> U` and `U ~> T`.

In the unification `T = U`, the Flow `U ~> T` is what I will call the ""reverse side of unification."" For this side, we introduce a `UnifyFlip` frame `use_op`. So if we were in a `PropertyCompatibility(FunParam(FunCall))` `use_op` chain, the `U ~> T` Flow would make the chain `UnifyFlip(PropertyCompatibility(FunParam(FunCall)))`.

Say we then unified `number = string`. This would produce two incompatibility errrors. One with `UnifyFlip` and one without. In order to deduplicate these error messages we _flip_ the reasons in the `use_op` chain and for the final incompatibility. In `PropertyCompatibility {lower; upper}` we would perform the operation to switch `lower` and `upper`. e.g. `PropertyCompatibility {lower = upper; upper = lower}`.

After flipping, we end up with a `use_op` chain identical to our `use_op` chain without the `UnifyFlip` frame. These two `use_op` chains will produce the same error so our users will only see a single error.

This is all fine and great when we have `number = string` when both `number ~> string` and `string ~> number` are false. In this case directionality does not matter, so ""transforming"" the second error message to be identical to the first is ok. However, things get a little messier when we have a directional flow like `number = mixed`.

`number ~> mixed` is a valid subtype. However, `mixed ~> number` is not\! If we flip the reasons in our `PropertyCompatibility` error we risk calling things `lower` which are in fact the `upper`. After this diff, `lower` and `upper` might not be the right name for `use_op` reasons. A more accurate name would be `left` and `right` which represent the fact that these reasons no longer have any semantic meaning.

The second concern in flipping the reasons for `number = mixed` is in the final error message. Before we would write ""`mixed` is incompatible with `number`."" Now, in some cases, we will report ""`number` is incompatible with `mixed`."" This is fine. The language we use in error messages is not directional. ""is incompatible with"" is appropriate language for either incompatibility direction.

====================

After this diff, we see a pretty big improvement in the test error messages. This diff removes a lot of unnecessary duplication. For the errors which are directional, we flip the order of some error messages, but this is fine given that ""is incompatible with"" implies no direction.

This diff is great for our users. I've been asked multiple times about if we can dedupe the two error messages for the same issue. I'm not concerned about the message flippage in some uncommon cases impacting our ability to debug issues. We always have verbose output. If I'm at the point where we I'm analyzing non-symmetric subtyping relations I usually want verbose output anyway. The flippage for `use_op`s is purely asthetic and does not change verbose output in anyway.

Reviewed By: avikchaudhuri

Differential Revision: D6326024

fbshipit-source-id: 65fea4aabc4855969f49ccebc3fd56852920811a
"
1d1888f37725de8a5fe98a7196786eb89d21ca06,facebook/flow,"Use Loc.t instead of Reason.t for declare_value_entry et al.

Summary: With cache_entry out of the way, we can start in earnest...

Reviewed By: mroch

Differential Revision: D4920996

fbshipit-source-id: cc980664e8ab9622b4c84af3b6743b8dbf38748c
"
164ba356bb888e5b33e08a8ee027eec73d40b585,facebook/flow,"Simplify instance and opaque type representations of type arguments

Summary:
Opaque types and instance types are nominal, which means we can avoid
potentially expensive structural checks. If we compare two such types that have
the same nominal ID, we only need to compare their type arguments, if any.

Because of this, we stored the type arguments along with the instance and
opaque type representation. However, this representation was unnecessarily
complicated.

Furthermore, we stored the tparams_map, which actually includes all type
parameters in scope rather than just those pertaining to the specific type.
Space consumed for this storage was wasted and checking involving those them
was unnecessary.

Finally, the new representation, a list, preserves the order of type parameter
declaration. This is not useful now, but will be useful in a later diff.

Reviewed By: jbrown215

Differential Revision: D9520712

fbshipit-source-id: ab53d3fdd08ba0170a944e0f11934c208c231179
"
057c80f5782673cca9da52fddd4703078fb581d6,facebook/flow,"move Type and Scope from Constraint_js into their own files

Summary: Constraint_js is huge, and these things are already their own modules. Splitting `Type` into its own file lets `Scope` be split into its own file too, and `Constraint_js` can depend on both.

Reviewed By: @bhosmer

Differential Revision: D2431589
"
ee92b1d1108dfbd326401bbe2ffb722d47a7618c,facebook/flow,"Improvement to type definitions of querySelector(All)

Summary: When querying for a particular tagName we can use a more specific type rather than just HTMLElement

Reviewed By: gabelevi

Differential Revision: D4492350

fbshipit-source-id: 84abeffd4acf88cadfde9e5191015d37a20cde7a
"
c02c97f07a830b09f90ce22b43e8e10bb521e3b4,facebook/flow,"Split funtype into funtype and funcalltype

Summary:
As a shortcut, `FunT` was sharing its `funtype` record with the
""function call"" types (`CallT`, `ApplyT`, `BindT`, etc). This is undesirable
for a few reasons

* A function parameter list (the params a function takes) is different than a
  function argument list (the arguments passed to a function). The former can
  have a single rest element at the end, while the latter can have multiple
  spread elements.
* There are a bunch of fields that `FunT` needs which the others don't

So I split them up. This also let me separate out the rest_param from the list
of params, which is structurally cleaner than including it in the list of
params.

This was mainly a OCaml compiler directed change. However,
I also grep'd for `param_tlist` to figure out which code also would care about
the `rest_param` field.

Reviewed By: samwgoldman

Differential Revision: D4372185

fbshipit-source-id: 2b7b3bde090e650b81a52cf67efa0bbdbeb16a5c
"
b367a032d176ce1bcd976c5d0d70bbd778380a60,facebook/flow,"[Refactor] Bring Type_mapper's signature closer to Type_visitor's

Summary:
It's nice to have similar APIs across the modules we use to interact with our types. Concretely, this change
will make moving the ContextOptimizer to use the Type_mapper easier, since method names will be the same.

Reviewed By: samwgoldman

Differential Revision: D9688831

fbshipit-source-id: c0049781a505f222324dd88bacacde7473af36b2
"
5353f5602dd11fcb52dda21ef3e20f525f63d84c,facebook/flow,"Make Hh_logger also write to log file for `flow server`

Summary:
When you run `flow start`, the spawned server redirects its
stderr to a file. When you run `flow server`, the server's stderr goes
to stderr. This is a little annoying.

The easiest fix is to just make Hh_logger write to both the log file and
stderr when we're running `flow server`. This is quite a bit easier than
trying to rewrite `tee`.

Reviewed By: samwgoldman

Differential Revision: D5895162

fbshipit-source-id: f3c2a78717bfe1745a08b3509a91f4c4c9c10946
"
52b5c5a0682644327c22d7e10f8fe16d006e67a6,factor/factor,"Reorganize compiler tests
"
48e70b65fae81c633f8da9abeac3d8f478d7beb3,factor/factor,"Move cross-referencing stuff to tools.crossref since compiler doesn't depend on it anymore, and compute cross-referencing index as needed; reduces image size by ~4Mb
"
057f75e9a14e7f04b778afaa9bc251cb23f9bbd6,factor/factor,"Refactor compiler.tree.builder to fix various regressions
"
72080fda4a4e8d8b43fd89c41e1057e4163b0aef,factor/factor,"construct-boa -> boa
construct-empty -> new
"
6bbb4630f33eee0d1cab3d6ea730459518655856,factor/factor,Rename labelled to labeled -- correct spelling
75fb15ee4c0ae547356d9ac55489cf74c7528fc0,factor/factor,"Split stdio up into input-stream/output-stream, pipes work in progress
"
9f926ab88cd2388d7e7a3b9c55bac9cd4e628a39,factor/factor,"compiler.cfg.block-joining: join basic blocks connected by a single edge to improve effectiveness of local optimizations
"
8d7367674c42eaadb26d3883bb2fca17e52c2dfb,factor/factor,"Class algebra refactoring
"
001a3f2847e87d58c0b2665993543eece1557f2d,factor/factor,vm: mark sweep now traces code block references; rename embedded_pointer to instruction_operand
59731ee24a7882e0e58917df7297f25ec546b92a,factor/factor,"Use delete-node instead of dlist-delete
"
1260c1ba51c0af13953017f046537f03a96efa79,factor/factor,"Working on SSL and refactoring related code to make things easier to plug in
"
3fb4fc1bde7d497b569294922867eb9de58a032a,factor/factor,"Improve code generation for shift word: add intrinsics for fixnum-shift-fast in the case where the shift count is not constant, transform 1 swap shift into a more overflow check with open-coded fast case, transform bitand into fixnum-bitand in more cases"
608fb054f26bc006037d8cb4dd2762136b8ab26b,factor/factor,"compiler.cfg: Some code cleanups, update stack-analysis and phi-insertion to work on CFGs with critical edges"
697e2342d0255fa34680709dbab58c477a56e8af,factor/factor,"vm: put code block owner directly in the header, instead of as the first entry in the literal table. Reduces x86-64 image size by ~700kb, also eliminates separate 'strip' set of staging images from deploy tool"
669548e62e63c318840b2da82d0d8bdc4675a2aa,factor/factor,"Clean up some usages of tuck, and add Joe's curried cleave/spread/apply combinators to kernel vocabulary
"
e75222d039076608fee57a25b5a7fefefdd1a5c5,factor/factor,"More add and add* cleanups
"
c22af5c7a6fe94e6550debfd0593425f271011b7,factor/factor,"Rename 2apply to bi@
"
c7dc4f1080f99a1b78c82f67dd598a706bbfc79e,factor/factor,"Split off baseline alignment code into ui.baseline-alignment, and add cap-height generic word"
0b2300cedf4ac808fe6bfdcdac1ce33d0f427fb6,factor/factor,"Split up models vocabulary
"
0314d05a08311e574e8d9b427bd49206f11e01b4,factor/factor,"Cleanup compiler
"
bbc3c01a8b6586289deedb4cca5514c3b5cd2489,factor/factor,"clean up game-input.backend init so that loading a backend does not ruin the game-input-backend var and so that client code does not need to explicitly load game-input.backend itself
"
7a1841f59b77cc1d2f8f1958c1d9c64e3b51b955,factor/factor,"(( -- )) eval -> eval( -- )
"
53d21c6c7a8c69351147b4ce73ba4a869b086ed0,factor/factor,"cleanup in aisle crypto
"
400c89daf001d29031bf47c81fc8d03b845e392e,factor/factor,"""deprecated"" declaration, ""deprecation"" vocab to track deprecations in the error log"
4044cd293a66877d3c6c41cf7cf61d2aba60fc87,factor/factor,"TYPEDEF-IF: and USE-IF: words; ptrdiff_t C type moved to alien.c-types and special-cased for win64
"
0835eb374ba8feac34148d87518a79fe626f37d1,factor/factor,"UI cleanup: make some ui.gadgets words private, give labels a virtual slot instead of label-string/set-label-string words
"
5405f530b9d7784720f7d6539513c3cb7a0719e8,factor/factor,"Merge branch 'master' of git://factorcode.org/git/factor

* 'master' of git://factorcode.org/git/factor:
  Fix UI pane selection
  use unicode instead of ascii again
  Fix up 'demos' vocab
  beginnings of a c preprocessor -- needs #if, #elif, #else
  Tabs are blank (better unicode whitespace support coming soon)
  fix take-rest for out of bounds
  Partial fix for pane selection
  ensure-port outputs a new URL instead of mutating its input
  FUEL: Font lock and no indentation for EBNF: ... ;EBNF forms.
"
8836acc79de53e8c53402ca9ff83bfe275c7112b,fastai/fastai,"Merge pull request #68 from anandsaha/master

Breaking down components of AdamW into configurable parts"
f77a95146a32a41fe9071d96c32fb6f51a678078,frappe/frappe,"[fix] email.make - use flags to pass ignore_doctype_permissions
"
4d7a7faa5b116e21ac885a8c32e2b36285febe55,frappe/frappe,"Merge pull request #3906 from adityahase/fix-basestring

Replaced all instances of basestring with six.string_types"
2f43522062e76704fa5e987821c2e9c5d58d7fc1,frappe/frappe,"Moved get_list_context to module, lighter freeze
"
48dfc29548a1daf6950ac7494469b6a98e101ace,frappe/frappe,"Merge branch 'model-cleanup' of github.com:frappe/frappe into model-cleanup
"
5e88c11159b816bacf143c4347c8d640e6b5ff6c,frappe/frappe,"[email] refactor #561
"
3da07b28a279bad21598e691ae14d1ed5fd338a3,frappe/frappe,"Merge pull request #488 from pdvyas/js-translate-refactor

JS traslate refactor"
b175ac407ff01092b5fdec6299f5fc0757f3b53e,frappe/frappe,"Possibility to go to file manager from sidebard (#5816)

* Possibility to go to file from sidebard

* Refactor to use microtemplating
"
f609a478ae4863cd2d0108235035e20bd078ce03,frappe/frappe,"[refactor] user permissions (#3713)

* [refactor] user permissions

* [fix] tests

* [ux] user-permissions

* [minor] cleanup system settings

* [minor] end progress
"
c7073cababc785796cd9e4e33cddb6b9aa62ea3a,frappe/frappe,"Merge pull request #483 from frappe/model-cleanup

Model cleanup"
5edda1dc2269ef871e65df2b2e2b26f76057dd4a,frappe/frappe,"major reworking of page navigation
"
042e2b09cb5a5a23c22f98fe4eb7e65a5d023e9d,frappe/frappe,"[design] Redesign, cleanup Login, Message pages (#2564)

* [cleanup] login, message pages

* [style] cleanups

* [cleanup]

* [cleanup] update password

* [fix] name for web form (fixes edit-profile)
"
a0f497edcf573e3992cac5021e61c427549aa5ca,frappe/frappe,"[Refactor] Webforms (#5537)

* [webform] login and date control working

* [webform] text editor and autocomplete imports

* [webform] add utils (before commons) to web js

* [website][init] messages in website

* [webform][wip] date field

* [webform][purge] form via controls and values

* [webform] remove old extraneous get_data code

* [webform][purge] remove upload handler and other listeners

* [webform][new] WebForm object

* [webform] save docs

* [webform] edit profile

* [controls] import awesomplete in multiselect

* [webform] handle existing doc or new form

* [es-module] independence of grid control by import structure

* [webform] grid on website! Stage I

* [webform][grid] include meta, model and perm on website >.<

* [webform] fix payment details

* [webform][fix] get table fields

* [webform][test] remove server field html test as not required

* [webform] check document permission

* Rename WebForm.js to webform.js
"
9181d4cab122940cb8a2b8be93b01e91fedb1d5a,frappe/frappe,"updated language and separated slickgrid files
"
370b9e473ef2c3ed8bc9f99cc23ea17de4afa387,frappe/frappe,"cleanup of handler.js
"
aef573ed764a1e19647b218eb5ca901f1719a5f0,fsharp/fsharp,"Add a codefix that suggests replacements for unknown identifiers (#2106)

* Add a codefix that suggests replacements for unknown identifiers

* Use sets

* Better naming

* Change prediction text a bit to better work with MSBuild errors

* cleanup

* Suggest id if it is an infix
"
602daf80005e09a5d329b1c5c9404b3fbda7811e,fsharp/fsharp,"Another go at --- Map workspace to iprojectsite (#3564)

* Saved

* SDK editor support

* Address merge issues

* Feedback

* reduce delta

* invalidate ide when a new file is discovered

* Go faster stripes

* feedback + refactor

* tryFindIndex

* Cleanup + Ensure that FSharp.Core.BuildFromSource.proj works at designtime

* final clean up

* label for HandleCommandLineChanges

* ensure some buildfromsource porojects load
"
a0db991a6f4a8d05b0fe035232298cd8b9332761,fsharp/fsharp,"Improve compiler's type searching logic (#1792)

The compiler has some logic to search for known types amongst available DLLs.

With this PR we get to enable several tests that uses F# Interactive on .NET Core and more tests for the F# compiler on .NET Core

Some of the known-type-search logic is OK, but swathes of it are not so good, e.g. this stuff

This improves the search by

just having one function to do the search

moving many ""known types"" out of Abstract IL (ILGlobals) and into the F# Compiler TcGlobals. THe advantages of this is that getting started with ILGlobals is much simpler if the set of referenced types is simpler - in particular if the small set of types known to Abstract IL are all always in the primary assembly (Int32, String, Array etc.).

This is particularly important for .NET Core. I don't trust the current code to correctly find some of the more obscure types for .NET Core, since the searching was based around various assumptions for Profile 7, 78, 259.

Overall this removes a fair chunk of fragile code from the compiler.

Separately this refactors TcGlobals to be a class instead of a record (which requires fewer lines of code)
"
2335589db18b19e3b3744b869d207ab4e51ac519,fsharp/fsharp,"move Unused Opens analyzer core logic to FCS
"
aa8fc5f2258470157432a4b6af402ce41d3db98a,fsharp/fsharp,"refactor move duplicated functions to module
"
bc725e76344336867f5a7e413234fe687865834f,fsharp/fsharp,"[CompilerPerf] Reduce memory footprint for Typar type (#4628)

* move typar_il_name and typar_xmldoc to OptionalData

* try move typar_constraints to OptionalData

* Update tast.fs

* update typar data twice correctly

* Update tast.fs

* fix

* move typar_attribs to OptionalData

* simplify code

* fix space

* fix SetConstraints and SetAttribs to free unused TyparOptionalData
"
4b852613a5291350c9abe605f49b386dcb55e96f,fsharp/fsharp,"Move to new VS SDK build tools

Recent changes to the VS SDK / VS detouring layer are forcing us to move to a new SDK in order to continue building / dogfooding.

This is the peer of the Roslyn change:

https://github.com/dotnet/roslyn/pull/16858

closes #2356
"
58e3753aa0ef808a37860c8d8adb488c2cafd2da,fsharp/fsharp,"Refactor QuickInfoProvider (#2778)

* refactor QuickInfoProvider

* fix wrong ""this symbol range""

* further refactoring
"
cd4dcbab36ad47fcfe6a58424c127ae1ccf14458,gabime/spdlog,"Renamed simple_file_sink -> basic_file_sink
"
101173875426471efee919eb85c35eab8d06c79d,gem/oq-engine,"Merge pull request #469 from gem/eps_dict

Refactored the epsilon management"
7278a46b2c416bf5671baed982e169b58de8936f,gem/oq-engine,"Refactored rlzs_by_gsim
"
2e15cd8e9c23e389b9c2a2f2472b19389d4f58c0,gem/oq-engine,"Small improvements
"
6759d4160d4ef52a35a51efe133c897a0a7bb1b7,gem/oq-engine,"Renamed code_func->core_task to avoid confusions
"
48a44a13a7ec4546d46c9733e22fa76fac94b318,gem/oq-engine,"Rename hzrdr.hazard_curve_node_data to hzrdr.hazard_curve_data.
"
61ff8d42ac27d251405c981c71eb245516aeb75b,gem/oq-engine,"Merge pull request #2944 from gem/db-version

Renamed `--version-db` to `--db-version`"
e1c0ac3f3bb74428401d8f0ef8590fbfc901c731,gem/oq-engine,"Merge pull request #497 from gem/gmfgetter

Refactored the GmfComputer"
9e054487e73723874eaf4ee131f23112e4d04557,gem/oq-engine,"Merge pull request #3739 from gem/cleanup2

More super cleanup"
bd1ba04a90ccfff16d1ff11ad4e45597ff6ac10e,gem/oq-engine,"Renamed the parameter `all_losses` to `asset_loss_table`
"
1e5b0b083730b3226022de0d0fc779e53152516b,gem/oq-engine,"Merge pull request #3648 from gem/losses_by_event2

Unified `losses_by_event` and `agg_loss_table`"
e788fa7c3d36dbebf59e533f6a9c83246a99f151,gem/oq-engine,"Merge pull request #3679 from gem/rename

More refactoring of hazardlib"
bf2e737cfba8d7991ce4d926d415e7ca91770104,gem/oq-engine,"Completed refactoring of aggregation stuff
"
3b98414339e9add472e844fee03b892ebe787147,gem/oq-engine,"Refactored code
"
1c2d0d35e14e5c41e76cd80b2216349305c4158f,gem/oq-engine,"Renamed oq-engine -> oq engine
"
2d8896e9e1e851fb64ea281c315849d1cd42f221,gem/oq-engine,"Merge branch 'master' into refactor-cmd-line-calc
"
d3f169020114203f8be89fd1775574fee665b1f3,gem/oq-engine,"Merge pull request #3791 from gem/refac

Various refactoring"
6f48f4156af0139454685582c06be4b8e6bddcc0,gem/oq-engine,"A truncation_level deafult of 0.0 makes the Java code crash.
"
654abdaacee26fd40b4e44518befc448ca1bc1da,gem/oq-engine,"remove obsolete RISK_CELL_SIZE parameter
"
e0da775f216d81593a834baf4970e991d47eeb68,gem/oq-engine,"Refactored check_job_status to remove some duplication code pylint was complaining about

It turns out I fixed a lot more than that. And I got to remove some garbage code that wasn't used.
"
8e724840cc894294ebcc9dee2fe0307765a9d7bf,gem/oq-engine,"Merge pull request #3691 from gem/prefilter3

Use a shorter site collection"
e9d9f7877c73ec95f5f6d99503672e6f7fd775e1,gem/oq-engine,"Renamed PerformanceMonitor -> Monitor
"
5303a4438ac29635ffec1691c47435669ef76525,gem/oq-engine,"Small refactoring: define the output_type flag in bin/openquake and pass it explicitly to run_job().

This allows library users (including tests) to explicitly specify the
job output type.
"
2a6ccf4240d569cdfe22b7056a30d863a1e9a167,gem/oq-engine,"Added tests on check_limits and performed some renaming
"
cd62ca441300c5d4ca9fd50675a545e8cd171b7c,gem/oq-engine,"Merge pull request #744 from gem/better-gmf

Remove rupture duplication"
7feb9b0d35546d050c54fae309f4c9a57f98fbac,gem/oq-engine,"Merge pull request #3407 from gem/geojson

Removed the obsolete hazard GeoJSON exporters"
02187d0487c57273268a84ff367f68c1e728cc65,gem/oq-engine,"Merge branch 'master' into mean-loss-refactor
"
e50bc0b0b3dd1306816f94d5765ee829b9135e29,gem/oq-engine,"uncertainty moved into vulnerability function
"
717ab8c3c7e9666bd80d5871da7351b2c3125ccc,gem/oq-engine,"Removed a redundant check
"
e33198b8ad580aa42582687fd908750a2de0d09d,gem/oq-engine,"Some refactoring [skip hazardlib]
"
6e7a7208313fba547be78c958037012deb303347,gem/oq-engine,"Merge pull request #3683 from gem/remove3

Refactored ContextMaker.make_contexts"
eb39b222ffc1948254af40b46c1de9f2cb07d7f0,gem/oq-engine,"Merge pull request #1451 from gem/split-by-trt

Sent the tectonic region types with less sources first, and fixed an ordering bug in a QA test"
71c3327864b5e261d2cae9ddb623329a035dd5fd,gem/oq-engine,"Merge pull request #529 from al-maisan/rm-obsolete-smoke-tests

[r=angri][f=862141]

This removes the obsolete smoke tests."
1ef35af958951d5d6e3bc4455fc820a0f69d327b,gem/oq-engine,"revise tests to include the taxonomy source
"
60c04908aa38112fc8b2053838775aa31c669870,gem/oq-engine,"Merge pull request #486 from gem/unify-vmodel

Unify the management of the vulnerability model with the other risk models"
8e5367d91e12fc924bbd96a7a0464fd5efa7a601,gem/oq-engine,"implementation of beta dist computation, refactoring, tests
"
1a26f63148ffb4ff0f47bd351b701b641f0c72a6,gem/oq-engine,"Renamed gmfs.txt
"
26905a2e657cae522e693471c339648a8b8aa2d2,gem/oq-engine,"Fixed misprint in oq extract [skip hazardlib][demos]
"
bf4ed43e9a3236835a145d25b27549cf8b2198f1,gem/oq-engine,"fixed some tests

pylint / pep8 cleanup
"
754d7d38639f5783fcee86c3d58a03421146d6bb,gem/oq-engine,"Renamed trt_id -> grp_id
"
989162b60d26f8ab96e29dbdf9ad0e5c2f7625cf,gem/oq-engine,"deb: use patch instead of sed
"
f3c7c80b58e9b5e589b9f913bc7c96eaac419dfb,gem/oq-engine,"Cleanup
"
9ebcc242b15e48bcac2409df009c183ab98f9298,gem/oq-engine,"Removed the obsolete GeoJSON exporters [skip hazardlib]
"
397ac0fddcf3f42af9ec59c722f9c5c0252ba577,gem/oq-engine,"Renamed sap.Parser -> sap.Script
"
ff0cc65f0193f8b0f7fcc14d55ccde2fa795de7f,gem/oq-engine,"Small cleanup
"
a217dc1f7cb34e7f692e6e077fdcb0e32c875a17,indico/indico,"[OPT] Optimization of the timetable display

	- fixes #307
	- Replaced pickling by fossilization for the generation of the data structures needed for the display of the timetable. The fossils contain the minimal amount of information needed to display the timetable, which is less than what the pickling was retrieving
	- New minimal fossils were added for the managment timetable too.
	- Optimized the loop that is grouping entries by day
	- Removed dead code used for the management timetable generation
	- Added a argument to the Fossils.fossilize(), ScheduleToJson.process() and ScheduleToJson.processEntry() method in order to use the attributes cache, useful for fossils that have fields that are repeated.
	- Displaying the 'view event' timetable of a conference like 'CHEP 2009' takes now less than 8 seconds
	- Displaying the 'managment' timetable of a conference like 'CHEP 2009' takes now less than 4 seconds
"
4b5616e84b60645cf69bbe45f6cedcb32c48d8b2,indico/indico,"Move filter stuff to common/filters and roomSearch

Generic stuff to common, room-specific stuff to roomSearch
"
5d2768133a76167498568d3586928f62cf087e22,indico/indico,"[FIX] Using https for JS,CSS when https page

* profiting to do some refactor on rh._getBaseURL
* after login go to https if BaseSecureURL defined
* cleaning up some non-used code
* changing old url to indico-software.org
"
6b78ff22b70ed1a65a01f0282ec97148b3548c0f,indico/indico,"Rename tables

BookableTime => BookableHours
room_bookable_times => room_bookable_hours
Room.bookable_times => bookable_hours

NonBookableDate => NonBookablePeriod
room_nonbookable_dates => room_nonbookable_periods
Room.nonbookable_dates => nonbookable_periods
"
ba777eea59067277498cff1c8cd83c3412906fa3,indico/indico,"[IMP] Refactor/redesign contribution list display

- Redesigned the filter by session/track/type with jquery.multiselect.
- Show all the contributions with an small description.
- Added filter by text in client.
- Deleted ordering feature.
- Filters in server removed, now everything done in client.
- Deleted unused and obsolete code.
"
eb3bd40879a0804be01225824e947f86b258c460,indico/indico,"Post-WIP fixes

- Remove Room.getRoomsOfUser - Room.find_all(..) is just as good
- Some indentation and i18n in blocking templates
- Add Reservation.details_url and use them in the rejection emails
- Renamed indico.modules.rb.notifications.blocking => .blockings
- Fix messed-up blocking form RH class name
- Migration: Cancel occurrences of cancelled/rejected reservations
"
e0e48c0133a0a001d44a0490de8a1aeb7c9845ff,indico/indico,"Massive bookRoom/timeline refactoring
"
abfe9a89f76d6b55cb66688afe036529d71073e3,indico/indico,"[FIX] Optimize display room booking welcome page

	- Modified algorithm so that lauching the welcome page of the room booking takes less time
	- Now the check of knowing if a room can be booked is done after selecting the room from the list of rooms. Before this check was done as preprocessing for each entry of the list.
	- Modified the way the profiling was lauched. Now the profiling can be enabled by changing a value in Configuration.py.
	- Using the profile module instead of the hotshot module
	- fixes #276
        - reviewed by jbenito: added progress indicator when clicking the button Book.
"
b89789c9d7162985c61a6ca6a2d7255f2516ed89,indico/indico,"Move modal actions to their respective modules
"
39b7d05690b26d2fbb4307bc393f482819e1a0a2,indico/indico,"[IMP] Abstract submittion form

 - Allow to choose limit for fields of the abstract submittion form in chars or words.
 - Added attribute ""limitation"" to class AbstractField.
 - Included word counter tool in JS (Data.js) and Python (util/text.py).
 - Added parameter manager in the interface of adding a new field to the submittion abstract form.
 - Added parameter manager in fields limited by words or chars.
 - Added parameter manager to mandatory fields in abstract submittion form (conference display).
 - Done title mandatory in abstract submittion form (management).
 - Changes applied to everywhere you can display the submition form.
 - Fixed: show track title in the form only if there are tracks.
 - Added difference between input and text area in abstract submittion form (management).
 - Added new Management/CFA.js file.
 - Added new util/text.py file.
 - Changed notification templates vars format |var| -> {var}
 - Deleted unnecessary code found in /webinterface/pages/conferences.py of notification templates.
 - Closes #694
"
a89f947d56a37649ac31f3d9ef2c3684dbf4098a,indico/indico,"[IMP] Access Protection Frame Improvement

	- fixes #429
	- The Access Control frame used to set the protection of
	  a category/event/session/contribution has been modified in order to
	  be more understandable and more intuitive.
	- In addition:
	  	-> replaced the synchronous adding of users to the list of
		   allowed users by the corresponding Widget. Ajax methods for
		   getting, adding to and removing from this list were added
		   for each type of objects.
		-> refactoring to a common .tpl and creation of a special
		   template for the 'Home' category
"
28c7851bfe75497f66be06b822af3a0ea2b6a26a,inviwo/inviwo,"Qt/Core: Added new concept of a DataVisualizer to be represent a standard network for a data type. Added visualizers for volume/mesh/image. Use the visualizers when droping files on the main window. Alos added file association for inviwo workspaces and .dat files on windows.
"
eb2da0ddaed75a0b3e3eb39d354fd715ceb24fc4,inviwo/inviwo,"Python3: Various clean up regareding uneccessary py::module wrapper

"
7067e94e5dc82393607ed5d157fc3206e19ee20e,inviwo/inviwo,"Merge pull request inviwo/inviwo-dev#1890 from inviwo/feature/cmake-using-targets



[changelog] CMake: Major refactoring, finally only using targets.

This removes the use of our own custom packages, in favor of using targets directly.

The depends file now only handles inviwo module dependencies.

All other depends are handled using standard target link libraries.

We now use target aliases in the form of inviwo::module::base to avoid typos in target link libraries.

Removed most of the wrapping functions, ivw_add_definitions etc since they are not needed anymore.

Deprecated funvtions in depricated.cmake together with messages for updating code.
"
4e644be5f2c0bd4cc6b0bcfce0273192fafb95f0,inviwo/inviwo,"Merge branch 'master' into feature/python-modules-registration-fix-and-cleanup

"
ce8c1e4914106d77158050eb04c773a3fe81a347,itchio/butler,"Deprecate Launch.Cancel, closes https://github.com/itchio/itch/issues/1892
"
62f4c98cad128e7e74810d42109e5beb016de460,jackwasey/icd,"refactor working, benchmarked to be faster
wip migrating to use indexhash more simply
"
e61ce53fb073ee331273726766e16d796065499d,jackwasey/icd,"* Version bump to 0.3
* Addition of several utility functions, mostly kept for internal use, but which clarify the code
* Consistent behavior with invalid codes, allowing ignore, silent conversion to NA, warn with conversion to NA, or stopping.
* Outline of code to read top level ICD-9 definitions from canonical CDC RTF file.
* Progress to
* Made functions magrittr friendly
* Bug fixes, refactoring, more tests
* Include parsing of hierarchy
* Internal function which reads a file from a zip at a URL
* The included pre-parsed data are slightly updated to include some missing top-level numbers when all the children were also present. (""043"" %i9s% ""04499"" should equal ""043"" %i9s% ""044"")
"
2ae46c1d9baab9dff998687d63acfc06f56696b7,jackwasey/icd,"rename Quan to reflect the origin in Charlson comorbidities, vs the alternative Elixhauser update, also by Quan.
Numerous coding style updates, e.g. T to TRUE, and whitespace.
"
291a9d16372a6dfc93cdb20e099d6cf981641ee1,jackwasey/icd,"drop unused code, simplify peripheral internal documentation. Try to stop Rcpp generating spurious changes when compileAttributes called on linux vs macos by using full roxygen tags in Rcpp comments.
"
8780de0eb8b2a73563ccf862f4a0149d5080ac99,jackwasey/icd,"make sure all alternate function versions have _alt in name so they can be excluded from main build, and promote comorbid by matrix multiplication. Builds with and without _alt parts.
"
3d6d790fba595f477f7744d375a32a8c99d3174a,jackwasey/icd,"rename icd9Valid... to icd9IsValid... and huge documentation update.

reduced R version dependency to 3.0.0, suggest libraries required for (optional) benchamrking
other tweaks for R CMD check
"
e4d8f486a81021a2f66d8796dd3acaff3e02e4db,jopamer/swift,"Simplify AST for string literals to not depend on implicit tuple splat.

String literal expressions, as well as the magic literals #file and
tuple value that is then fed into one or two call expressions. For
string literals, that tuple value was implicitly splatted, breaking
AST invariants.

Instead, keep string literals and these magic literals that produce a
string as a single expression node, but store the declarations that
will be used to transform the raw literal into the complete
literal. SILGen will form the appropriate calls. This representation
is far simpler---the AST no longer has a bunch of implicit nodes---and
doesn't break AST invariants.
"
7aced279841c58f7c1e4e0c565ca3015b48b46af,jopamer/swift,"Merge pull request #3045 from slavapestov/open-type-cleanup

Sema: Open type cleanup"
348c6b800129d531e10d462ef9a0a0c92b2d9be2,jopamer/swift,"Protocol conformance: store conformances needed for the requirement signature.

The protocol conformance checker verifies that all of the requirements
in the protocol's requirement signature are fulfilled. Save the
conformances from that check into the NormalProtocolConformance,
because this is the record of how that concrete type satisfies the
protocol requirements.

Compute, deserialize, and verify this information, but don't use it
for anything just yet. We'll use this to eliminate the ""inherited
protocol map"" and possibility some redundant type-witness
information.
"
794d72e92326afe27abc3ee5f36870c1ce817fcf,jopamer/swift,"Track dependencies of SIL instructions on opened archetypes which they use

Till now there was no way in SIL to explicitly express a dependency of an instruction on any opened archetypes used by it. This was a cause of many errors and correctness issues. In many cases the code was moved around without taking into account these dependencies, which resulted in breaking the invariant that any uses of an opened archetype should be dominated by the definition of this archetype.

This patch does the following:
- Map opened archetypes to the instructions defining them, i.e. to open_existential instructions.
- Introduce a helper class SILOpenedArchetypesTracker for creating and maintaining such mappings.
- Introduce a helper class SILOpenedArchetypesState for providing a read-only API for looking up available opened archetypes.
- Each SIL instruction which uses an opened archetype as a type gets an additional opened archetype operand representing a dependency of the instruction on this archetype. These opened archetypes operands are an in-memory representation. They are not serialized. Instead, they are re-constructed when reading binary or textual SIL files.
- SILVerifier was extended to conduct more thorough checks related to the usage of opened archetypes.
"
7aa62ce8359543e92e7ee4eff30462206b6d7709,jopamer/swift,"Add an inline(late) attribute

This disables inlining at the SIL level. LLVM inlining is still enabled. We can
use this to expose one function at the SIL level - which can participate in
dominance based optimizations but which is implemented in terms of a cheap check
and an expensive check (function call) that benefits from LLVM's inlining.

Example:

The inline(late) in the example below prevents inlining of the two checks. We
can now perform dominance based optimizations on isClassOrObjExistential.
Without blocking inlining the optimizations would apply to the sizeof check
only and we would have multiple expensive function calls.

@inline(late)
func isClassOrObjExistential(t: Type) -> Bool{
  return sizeof(t) == sizeof(AnyObject) &&
    swift_isClassOrObjExistential(t)
}

We do want inlining of this function to happen at the LLVM level because the
first check is constant folded away - IRGen replaces sizeof by constants.

rdar://17961249

Swift SVN r21286
"
29353013c0639019ab5197429072c3b9f8f956a0,jopamer/swift,"Merge pull request #7124 from DougGregor/string-interpolation-generic

Replace concrete init(stringInterpolationSegment:)'s with generic ones"
a4aa054838d6322b39e58d1596fa9a810ef40e36,jopamer/swift,"IRGen: Make type(of:) behavior consistent in ObjC bridged contexts.

When we use type(of: x) on a class in an ObjC bridged context, the optimizer turns this into a SIL `value_metatype @objc` operation, which is supposed to get the dynamic type of the object as an ObjC class. This was previously lowered by IRGen into a `object_getClass` call, which extracts the isa pointer from the object, but is inconsistent with the `-class` method in ObjC or with the Swift-native behavior, which both look through artificial subclasses, proxies, and so on. This inconsistency led to observably different behavior between debug and release builds and between ObjC-bridged and native entry points, so provide an alternative runtime entry point that replicates the behavior of getting a native Swift class. Fixes SR-7258.
"
b156824f3b05b78bd6358dc24d903f4272cdf45e,jopamer/swift,"Rename EpilogueReleaseMatcherDumper.cpp.

Rename to EpilogueRetainReleaseMatcherDumper.cpp to better reflect
what it does now.
"
89483756583b40499b5038d02d5187b04d7e794b,jopamer/swift,"Debug Info: Cleanup: Remove debug scope from DebugTypeInfo.

Swift SVN r14548
"
f6781deaf8d86be3611da6f4f8cc0a41c4f60467,jopamer/swift,"copy_addr outline: cleanups based on review
"
92a85f00f9ca5da4401b11cd97c043e573176d9a,jopamer/swift,"Move isClassOrClassMetatype into SILType.h.

This will be useful for further devirtualizer clean-up.

Swift SVN r25974
"
fb7f4b26d1a2caa1dfa66960be3730d2d08816b8,jopamer/swift,[GSB] Maintain written requirement location when removing redundant subpaths.
ff5f41b5f04cc642caf0321e533260ef5000ac7f,jopamer/swift,"Archetypes with superclass bounds are class-bounded.

Treat archetypes with a superclass bound as class-bounded. Change SILGen and IRGen to use the new SuperToArchetypeRef and ArchetypeRefToSuper cast instructions, and drop the old SuperToArchetype and ArchetypeToSuper instructions, which are unneeded because any archetype with a superclass will be class-bounded.

Note that this patch doesn't implement representation optimization for archetypes with superclass bounds--they're still always represented with a worst-case UnknownRefCountedPtrTy.

Swift SVN r5629
"
22c9e20a9d6ba7d703c77caaece27c6b3201c508,jopamer/swift,"[IRGen] Completely remove witness table offsets.

These are unused.
"
6b12b9130ec62690b482ff80af3f119ac577ee4c,jopamer/swift,"Disallow nesting 'self.init' or 'super.init' inside other expressions.

In addition to being confusing, it makes it harder to implement
'try? self.init(...)' properly. (Next commit!)

Swift SVN r31034
"
c978092bec39695281b7cc7fb46bb74f5c1122f5,jopamer/swift,"Merge pull request #1392 from swiftix/wip-prespecializations-module

Move pre-specializations of popular types away from the stdlib to reduce the stdlib code size."
e3f8d0e630a4bc7e191bf72d9991aad1cd350175,jopamer/swift,"[stdlib] rename UnsafeArray => UnsafeBufferPointer

Also,

  UnsafeMutableArray => UnsafeMutableBufferPointer
  withUnsafeMutableStorage => withUnsafeMutableBufferPointer

Swift SVN r20340
"
bebac49ceef28320db8d04483470cf512f170b7e,jopamer/swift,"[GSB] Form minimal requirement sources by removing redundant subpaths.

When we detect that a requirement source is self-derived, identify the
redundant subpath and remove it to produce a new, smaller requirement
source that computes the same result. We were doing this form the
limited case where the redundant subpath ended at the end of the
requirement source; generalize that notion.

Fixes SR-5601.
"
a2ddd4e488df5e7335d96db64f6ae68a7d307ccd,jopamer/swift,"Refactor lexer backtracking.  Introduce opaque types that encapsulate lexer and
parser state.  Backtracking will be used a lot when we implement delayed
parsing for function bodies, and we don't want to leak lexer and parser state
details to AST classes when we store the state for the first and last token for
the function body.


Swift SVN r5759
"
41971fec9969f841187775be1f7b4415a50e40cf,jopamer/swift,"SILGen: Introduce MaterializedLValue abstraction

This is used when materializing an LValue to share state between
the read and write phases of the access, replacing the 'temporary'
and 'extraInfo' parameters that were previously being passed around.

It adds two new fields, origSelfType and genericSig, which will be
used in an upcoming patch to actually apply the callback with the
current generic signature.

This will finally allow us to make use of materializeForSet
implementations in protocol extensions, which is a prerequisite
for enabling resilient default implementations of property and
subscript requirements.
"
f74bc7122cc78ba3fc1237000099b8003fe9e3ca,jopamer/swift,"Split getAccessibility() into getFormalAccess() and getEffectiveAccess().

Currently a no-op, but effective access for entities within the current
module will soon need to take testability into account. This declaration:

  internal func foo() {}

has a formal access of 'internal', but an effective access of 'public' if
we're in a testable mode.

Part of rdar://problem/17732115 (testability)

Swift SVN r26472
"
f428683842468610da49368e49b65460d9d69992,jopamer/swift,"Remove unused 'Body' parameter in FuncExpr::create()

'nullptr' is only ever passed as the argument value.


Swift SVN r5966
"
fe7915d09e1ab151afdb88b6cc1ff4b3680f7a9d,jopamer/swift,"Rework a number of SIL and IRGen witness-table abstractions
to correctly handle generalized protocol requirements.

The major missing pieces here are that the conformance search
algorithms in both the AST (type substitution) and IRGen
(witness table reference emission) need to be rewritten to
back-track requirement sources, and the AST needs to actually
represent this stuff in NormalProtocolConformances instead
of just doing ???.

The new generality isn't tested yet; I'm looking into that,
but I wanted to get the abstractions in place first.
"
dbdb8d62ea8f5c92d11515b644d56caf8484359c,jopamer/swift,"Merge pull request #6094 from slavapestov/cleanup-generic-resolver-workaround

Cleanup generic resolver workaround"
7d322fcd35926d429427071460e6265fc300dfab,jopamer/swift,"""class-bound"" -> ""class-bounded""

English.

Swift SVN r5568
"
fa69cb6f54990e5d14099b64839714c494495815,jopamer/swift,"Identifier's are only needed for AST types not for SIL Types. Simplify DeserializeSIL.cpp to use StringRefs instead of Identifiers whenever possible.

Swift SVN r14188
"
a06cacbfcb216508d7f31e060e7bae0acfedab40,jopamer/swift,"[projection] Introduce two new types NewProjection and NewProjectionPath.

NewProjection is a re-architecting of Projection that supports all of
the same functionality as Projection but in 1/3 of the original size (in
the common case). It is able to accomplish this by removing the base
type out of NewProjection itself and into users such as
NewProjectionPath. Thus NewProjection is now strictly an index from some
parent type rather than being a parent type and an index.

NewProjectionPath also has all of the same functionality as
ProjectionPath, but due to NewProjection being smaller than Projection
is smaller than ProjectionPath.

Used together NewProjection/NewProjectionPath yields the same output as
Projection/ProjectionPath when evaluating the LSLocation dumping tests.

Additionally, NewProjection is more flexible than Projection and will
for free give us the ability to perform AA on index_addr/index_raw_addr
as well as be able to integrate casts into the projection paradigm.

rdar://22484381
"
48b3737404c9576c752974945eb78d16fe825c3c,jopamer/swift,"SIL: Add support for trivial @noescape function types

- @noescape functions are trivial types
That makes @noescape functions incompatible with escaping functions.
- Forward ownership of mark_dependence %3 : callee_guaranteed () -> () on %0 : noescape @callee_guaranteed () -> ()
- SIL: Add ABIEscapeToNoEscapeConversion to SILFunctionType::ABICompatibilityCheckResult
- SIL: A thin_to_thick_function with a @noescape result type has trivial ownership
- SIL: thin_to_thick_function can create noescape function types

Part of:
SR-5441
rdar://36116691
"
78b007f178910df52af8879fc9fe5ee8c1e8dcbe,jopamer/swift,"Always create a DefaultArgumentInitializer for a parameter with a default argument.

As with pattern binding initializer contexts, we were trying to
optimize away these contexts, leading to an unpredictable AST.
"
cff61d7fe765b04e9a2aeab4c670825265611f93,jopamer/swift,"Implement a function signature cloner and rewriter.

This split the function signature module pass into 2 functin passes.

By doing so,  this allows us to rewrite to using the FSO-optimized
function prior to attempting inlining, but allow us to do a substantial
amount of optimization on the current function before attempting to do
FSO on that function.

And also helps us to move to a model which module pass is NOT used unless
necesary.

I do not see regression nor improvement for on the performance test suite.

functionsignopts.sil and functionsignopt_sroa.sil are modified because the
mangler now takes into account of information in the projection tree.
"
031488bada0f8655b59beaf976b5e980898a7405,jopamer/swift,"libSyntax: several enhancements on source location bridging. (#13956)

libSyntax nodes don't maintain absolute source location on each
individual node. Instead, the absolute locations are calculated on
demand with a given root by accumulating the length of all the other
nodes before the target node. This bridging is important for issuing
diagnostics from libSyntax entities.

With the observation that our current implementation of the source
location calculation has multiple bugs, this patch re-implemented this
bridging by using the newly-added syntax visitor. Also, we moved the function
from RawSyntax to Syntax for better visibility.

To test this source location calculation, we added a new action in
swift-syntax-test. This action parses a given file as a
SourceFileSyntax, calculates the absolute location of the
EOF token in the SourceFileSyntax, and dump the buffer from the start
of the input file to the absolute location of the EOF. Finally, we compare
the dump with the original input to ensure they are identical."
996b618875c9dd587fe6c37c5a9dbbb6173a1bdf,jopamer/swift,"Merge pull request #8204 from eeckstein/rename-namespace

rename namespace NewMangling -> Mangle"
b6823b930b19b6db71f6e0cd37842e5bff98118a,jopamer/swift,"SIL: Change SILType::subst to be SubstitutionMap-based.

This simplifies the SILType substitution APIs and brings them in line with Doug and Slava's refactorings to improve AST-level type substitution. NFC intended.
"
302632cefbff3ee9864e746cfacec54bfb49c5c0,jopamer/swift,"Make SILFunction::create() private and change all direct uses of SILFunction::create() to instead use SILMod.getOrCreateFunction().

This centralizes the entrypoints for creating SILFunctions. Creating a
SILFunction is intimately tied to a specific SILModule, so it makes sense to
either centralize the creation on SILModule or SILFunction. Since a SILFunction
is in a SILModule, it seems more natural to put it on SILModule.

I purposely created a new override on SILMod that exactly matches the signature
of SILFunction::create so that beyond the extra indirection through SILMod, this
change should be NFC. We can refactor individual cases in later iterations of
refactoring.
"
015cea67a5315ec7b6ae5dc34c47be1e33e03f3f,jopamer/swift,"Move hashbang line detection to the Lexer implementation, instead of requiring
the Lexer client to skip it before constructing the Lexer.


Swift SVN r6801
"
9747214e92d6a99cc28d47fe9b9638aae553e854,jopamer/swift,"[silgen] Refactor WritebackScope functionality into a new FormalEvaluationScope.

As per John, WritebackScope was always an unfortunate name. Generally these
scopes are meant for formal evaluations of inout parameters. The cases that I am
interested in generalizing them to be used for are borrows of the base of a
class that will then be used as an lvalue.

This also eliminates the out of line vector of lvalue writebacks.

rdar://29791263
"
fc09bd458556ae837fcab5f81d4e47d8cee5affa,jopamer/swift,"Add basic reference tracking based on name lookups.

This tracks top-level qualified and unqualified lookups in the primary
source file, meaning we see all top-level names used in the file. This
is part of the intra-module dependency tracking work that can enable
incremental rebuilds.

This doesn't quite cover all of a file's dependencies. In particular, it
misses cases involving extensions  defined in terms of typealiases, and
it doesn't yet track operator lookups. The whole scheme is also very
dependent on being used to track file-level dependencies; if C is a subclass
of B and B is a subclass of A, C doesn't appear to depend on A. It only
works because changing A will mark B as dirty.

Part of rdar://problem/15353101

Swift SVN r22925
"
99fd8b608031bd731bd9f0b7443f11f83c23a21c,jopamer/swift,"Rename some macros based on the PR review comments.

- use  the SWIFT prefix for all macros
- make names of some macros shorter
"
211c58015878614f4cdebfd859fc3d1ba54f2fbd,jopamer/swift,"[Cleanup] Eliminate DerivedFileUnit.

The only client of DerivedFileUnit was synthesized global '=='
operators for Equatable conformances, which has since been removed.
"
afea47b621e1f7900de7e250e4868d287dc8ee25,jopamer/swift,"rename ""destroy_value"" to ""release_value"", part of rdar://15889208.



Swift SVN r15777
"
eaa5ae079e6e949275ee1dbabc0e480c4bd7c5a2,jopamer/swift,"Eagerly de-duplicate dynamic lookup results.

By eagerly de-duplicating the results of dynamic lookup within the
type checker, we eliminate the cost of trying a number of separate
overloads, each of which will produce an equivalent solution. No
functionality change.


Swift SVN r8460
"
2747d1eed866b71817e5f7acbb3dfb61f64b6aae,jopamer/swift,"Overlays: Fix tool not to find os as a dependency unless it depends on
os/activity.h or os/log.h. Update cmake files again, hardcoding a Darwin
dependency. The script does not notice that Foundation depends on
CoreGraphics, so add that manually.

Also found that MapKit is supported on WATCHOS but we didn't have dependencies
for that.

Favor one line per supported SDK instead of catch-all dependency lines.

Distinguish from SDKs which have no dependencies vs SDKs which are
unsupported on a particular platform by printing `unsupported` to the
console and remove the line in the cmake file because it should
not exist anyway.

This full cleanup was not done before because of circularity detected by the
util, which has since been fixed.

Support directories with spaces.
"
bc3a7d12418ff932d51038e336da455f480b8825,jopamer/swift,"[QoI] improve diagnostics for contextual members with argument mismatch
"
965e95c41c1d0e62aeca542b1b9df675f788cd75,jopamer/swift,"Merge pull request #11831 from rjmccall/accessor-validation

Improve the validation of storage accessors"
3b04d1b013bee788015c1d214ad7f130f497433a,jopamer/swift,"tests: reorganize tests so that they actually use the target platform

Most tests were using %swift or similar substitutions, which did not
include the target triple and SDK.  The driver was defaulting to the
host OS.  Thus, we could not run the tests when the standard library was
not built for OS X.

Swift SVN r24504
"
1a830fa541705594bd4b3936de24a20b5b943059,jopamer/swift,"SE-0022: Deprecate string-literal-as-selector in favor of #selector.

Introduce Fix-Its to aid migration from selectors spelled as string
literals (""foo:bar:"", which is deprecated), as well as from
construction of Selector instances from string literals
(Selector(""foo:bar""), which is still acceptable but not recommended),
to the #selector syntax. Jump through some hoops to disambiguate
method references if there are overloads:

    fixits.swift:51:7: warning: use of string literal for Objective-C
         selectors is deprecated; use '#selector' instead
      _ = ""overloadedWithInt:"" as Selector
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          #selector(Bar.overloaded(_:) as (Bar) -> (Int) -> ())

In the cases where we cannot provide a Fix-It to a #selector
expression, we wrap the string literal in a Selector(...) construction
to suppress the deprecation warning. These are also easily searchable
in the code base.

This also means we're doing more validation of the string literals
that go into Selector, i.e., that they are well-formed selectors and
that we know about some method that is @objc and has that
selector. We'll warn if either is untrue.
"
37a4ce2227e69eea09af5fa3596c62b216618e08,jopamer/swift,"Produce an error with Fix-Its for the ""separated"" call syntax.

We are removing this syntax. To stage the move, first error with
Fix-Its to rewrite to the keyword-argument syntax. In a week or so,
we'll remove all of the code supporting the ""separated"" call syntax.

Swift SVN r15833
"
2882e16c3fa9040307a51b13754b7614cdfc81d9,jopamer/swift,"[AST] Perf: Make generic decl types share field offsets and fast casting logic
"
1b60e87c2839edbe9192c56d82003a5fa135120e,jopamer/swift,"[SILParser] reconstruct requirements in the same way as how type checker
generates them.

Modify getAsCanonicalGenericSignature to dump same-type requirements last.
Also mix the conformance requirements on assocaited archetypes with the witness
markers.

SILParser used to put witness markers for all assocaited archetypes, then
add same-type requirements, and finally the conformance requirements on
associated archetypes. This causes mismatch types between deserialized
SILFunctionTypes and parsed SILFunctionTypes.

rdar://17998988


Swift SVN r21423
"
3522fa8f6e29b38cc6cca6fcca4e8b2f7d12f8b9,jopamer/swift,"[Foundation] Extract NSSet extensions into a seperate file

Non functional change; purely organization/gardening
"
8de0ca54e543d1b759f26b3a7447290c2c69ca09,jopamer/swift,"Sema: Merge the two implementations of simplifyType()

ConstraintSystem::simplifyType() replaced types with their fixed types
from the global map.

Solution::simplifyType() replaced types with their fixed types from the
current bindings.

There were some minor differences between the two, and some dead code.
"
5ce3de8dd66abd8751470af5c4375a9d52e60707,jopamer/swift,"remove & dial back three old bits of syntax auto-upgrading support:

1. Array type parsing for postfix array types Int[].  We now handle this
   in the parser, but remove the AST representation of this old form.  We
   also stop making vague promises about the future by saying that ""fixed
   size arrays aren't supported... yet"".  Removal of this fixes a compiler
   crasher too.

2. Remove the special case support for migrating @autoclosure from types
   to parameters, which was Swift 1.0/1.1 syntax.  The world has moved or
   we don't care anymore.

3. Remove upgrade support for # arguments (nee ""backtick"" arguments), which
   was a Swift 1.x'ism abolished in an effort to simplify method naming
   rules.

NFC on valid code.
"
31b97bcc150ee8c45803b421f9c05ea21a3c1c52,jopamer/swift,"Revert ""SILGen: Move even more abstraction patterns over to interface types, NFC""

This reverts commit 0188258a872cbc09ce1c8a7e0f56a76c85aab736 because we
now assert when compiling a performance test.
"
929ad99f086e473c26a1ddead73cb7ba982934a7,jopamer/swift,"Clean up and generalize the code pertaining to how a FuncDecl accessor
knows about the AbstractStorageDecl it works on.  NFC.



Swift SVN r12994
"
5c16c10a2d42df30efdff4154d49aeaabeca61b8,jopamer/swift,"Merge pull request #1557 from gregomni/typealias

Change all remaining tests to use associatedtype instead of typealias in protocols"
8afeadc5eeb960b811709ba267ffcbcb5796694e,jopamer/swift,"Merge pull request #6309 from DougGregor/as-coercions-bridging

[Type checker] Clean up as/as!/as?/is casting"
811bdb46247375ddf61905d61830e0a7104cbe74,jopamer/swift,"[build-script] Rename package-tests to integration-tests.
"
2833fc165db6f32fb6d5922797c46f9ba3e59c4a,jopamer/swift,"libSyntax: some refactoring on syntax parsing context. NFC

This allows the root context to have a separate place to keep track of
the global data that each sub-context can access to, for instance,
SourceFile, DiagnosticEngine, etc.
"
ea0a2d3b8d3c54c1e2efc9084d2b0c1b838c29b3,jopamer/swift,"[Parser][Qol] improve diagnostic with missing ""self."" in init

This improvement was reported in
[SR-852](https://bugs.swift.org/browse/SR-852).

before:

```
$ cat t.swift
class A {
    init(x: Int) {}

    convenience init() { init(x: 1) }
}

$ swiftc -c t.swift
t.swift:6:13: error: initializers may only be declared within a type
    init(x: 1)
        ^
t.swift:6:17: error: expected parameter type following ':'
    init(x: 1)
            ^
t.swift:6:17: error: expected ',' separator
    init(x: 1)
            ^
           ,
t.swift:6:17: error: expected parameter type following ':'
    init(x: 1)
            ^
t.swift:6:17: error: expected ',' separator
    init(x: 1)
            ^
                                                                                                                                                       ,
```

after:

```
t.swift:6:9: error: missing 'self.' at initializer invocation
    init(x: 1)
    ^
    self.
```
"
00fd417bd2d144020e28adf9b96361cd925d2204,jopamer/swift,"IRGen: Remove support for existential methods.

Eliminate support code for lowering protocol_method instructions, and eliminate ExtraDataKind::Metadata, which is no longer needed now that SIL provides all the necessary type information at the call site.

Swift SVN r22451
"
2d17ea34f49897581326ef2ae0e0d1e356b310be,jopamer/swift,"IRGen: Move type layout verifier implementation to TypeLayoutVerifier.cpp
"
a2daee58c67509fee96d8b8513220d59cd036d3c,jopamer/swift,"Merge pull request #7055 from hughbe/unreachable

Cleanup swift_unreachable"
f585a270f9153f69c9b226f41de8e2390590f88c,jopamer/swift,"[Sema] Improve fix-it for missing initializer requirement

* If current context is extension of non-final class, don't suggest stub
* If current context is extension of final class, insert 'convenience'
* If current context is direct definition of non-final class, insert 'required'
"
1984cf41e0f9f89840560dc5e4d82c1ac8181cce,jopamer/swift,"SIL: Rename SILFunction::getMangledName to SILFunction::getName.

Swift SVN r6430
"
d9340ccf867c801696b029a072bf66d22fd9fb57,jopamer/swift,"MandatoryInlinning: Clean up arguments that end up being unused after inlining, such at metatype parameters to some standard library functions. Resolves <rdar://problem/15218643>.

Swift SVN r10431
"
6fc2efbe49718f4c21a92dcedbbae701ac23b598,jopamer/swift,"Merge pull request #9572 from practicalswift/gardening-20170513

[gardening] Remove assert requirement from fixed crashers. Fix spacing. Remove unused variables."
b2846b546be60ab2e448874665fb811b25ff5d25,jopamer/swift,"Make Int a word-size type.

- Int and UInt are now struct types backed by Builtin.Word. Previously they
were typealiases for Int64; Int and Int64 are now distinct types.
- Mangled names 'i' and 'u' are now Int and UInt. Int64 is mangled longhand.
- Word is a typealias for Int. It is expected to go away in the future.
- Builtin.Word is unchanged.
- CLong and CUnsignedLong are typealiases for Int and UInt.
- FixedPoint.swift is now FixedPoint32.swift and FixedPoint64.swift. 
Reunifying these requires better builtins, especially for checked 
conversions (rdar://15472770).
- Updated many tests, mostly because Int is no longer spelled Int64 in sil.
- One check was removed from test decl/operator/operators.swift 
because it changed behavior when Int became a non-typealias 
type (rdar://15934688).



Swift SVN r13109
"
361ab6245405c1ab8b9831748395b1055b9df595,jopamer/swift,"Make all CF types Equatable and Hashable. (#4394)

Like NSObject, CFType has primitive operations CFEqual and CFHash,
so Swift should allow those types to show up in Hashable positions
(like dictionaries). The most general way to do this was to
introduce a new protocol, _CFObject, and then have the importer
automatically make all CF types conform to it.

This did require one additional change: the == implementation that
calls through to CFEqual is in a new CoreFoundation overlay, but the
conformance is in the underlying Clang module. Therefore, operator
lookup for conformances has been changed to look in the overlay for
an imported declaration (if there is one).

https://bugs.swift.org/browse/SR-2388"
63667ce8526a13a23c6ec89b05aad815eceb2313,jopamer/swift,"[SourceKit] Move generic parameters out of struct/class/enum decl.name

And add tests for this and for function generic parameters.

rdar://problem/24292226
"
3eabc2139ba66da3fbad8716e353143f8277e017,jopamer/swift,"AST: Remove TypeBase::hasDependentProtocolConformances()

Another oddly-named utility function with poorly-defined behavior.

It returned true for archetypes, generic parameters, existential
types, and metatypes of existential types.

However, it would return false for dependent member types, or
metatypes of archetypes, and so on.

All the callers were doing something bad to begin with, so
changing them over to more precise predicates improved the code.

In particular, this simplifies substitution construction in
the SIL parser, and makes it stricter, which turned up a couple
of mistakes in the SIL tests where we were doing stuff with
non-conforming types.
"
038303b1b1263b00906037018d03946d633e3125,jopamer/swift,"Switch MetadataCache to use a global slab allocator.

This seems to more than fix a performance regression that we
detected on a metadata-allocation microbenchmark.

A few months ago, I improved the metadata cache representation
and changed the metadata allocation scheme to primarily use malloc.
Previously, we'd been using malloc in the concurrent tree data
structure but a per-cache slab allocator for the metadata itself.
At the time, I was concerned about the overhead of per-cache
allocators, since many metadata patterns see only a small number
of instantiations.  That's still an important factor, so in the
new scheme we're using a global allocator; but instead of using
malloc for individual allocations, we're using a slab allocator,
which should have better peak, single-thread performance, at the
cost of not easily supporting deallocation.  Deallocation is
only used for metadata when there's contention on the cache, and
specifically only when there's contention for the same key, so
leaking a little isn't the worst thing in the world.

The initial slab is a 64K globally-allocated buffer.
Successive slabs are 16K and allocated with malloc.

rdar://28189496
"
bcb49ce450ad5bb26ec61c369473c257560c2f71,jopamer/swift,"SIL: Key functions directly without SILConstant.

Replace 'constant_ref' with 'function_ref', which references a SILFunction directly, and 'global_addr', which references a global variable VarDecl. Get rid of the SILConstant-to-SILFunction mapping in SILModule and replace it with an ilist of SILFunctions. Allow SILFunctions to be 'external' by not having any blocks in their body. 

For now, SILFunctions still carry around their SILConstant ""name"", because name mangling and IRGen still rely on access to the original decl in order to recover IRGen information, which unfortunately leaves IRGen's CodeRefs in a gross, awkward intermediate state. Lifting mangling, AbstractCC, and other linkage attributes to SIL should clear up this up.

Swift SVN r4865
"
7a0ce11980db7b3ed182a2b65a76588144e1dec6,jopamer/swift,"Replace ProtocolConformanceWitness with ConcreteDeclRef.

The latter is more efficient and should eventually be more common.


Swift SVN r7840
"
e06b1300f2aac7152feebf3d1f9b699a2a75abf4,jopamer/swift,"Merge pull request #15322 from rudkx/getOptionalObjectType-decrement-by-one

Minor cleanup of getOptionalObjectType() overload."
a16faae73b82218e9ce2b084726256e5eb7d01fa,jopamer/swift,"AST: Move ProtocolConformance::getTypeWitnessByName() to ProtocolConformanceRef

I need to move some #includes around (""include what you use"") to
break circularities for an upcoming refactoring.
"
185921f6abbd5c107bdb582ce2f2bd5eef02e447,jopamer/swift,"AST: Remove slow version of Substitution::subst()

When applying substitutions to substitution lists in SIL, we would
unpack the ArrayRef<Substitution> into a SubstitutionMap on each
iteration over the original ArrayRef<Substitution>. Discourage
this sort of thing by removing the API in question and refactoring
surrounding code.
"
7ee42994c85c3a3b61e75513aafa2c9962977bfa,jopamer/swift,"Start the Syntax library and optional full token lexing

Add an option to the lexer to go back and get a list of ""full""
tokens, which include their leading and trailing trivia, which
we can index into from SourceLocs in the current AST.

This starts the Syntax sublibrary, which will support structured
editing APIs. Some skeleton support and basic implementations are
in place for types and generics in the grammar. Yes, it's slightly
redundant with what we have right now. lib/AST conflates syntax
and semantics in the same place(s); this is a first step in changing
that to separate the two concepts for clarity and also to get closer
to incremental parsing and type-checking. The goal is to eventually
extract all of the syntactic information from lib/AST and change that
to be more of a semantic/symbolic model.

Stub out a Semantics manager. This ought to eventually be used as a hub
for encapsulating lazily computed semantic information for syntax nodes.
For the time being, it can serve as a temporary place for mapping from
Syntax nodes to semantically full lib/AST nodes.

This is still in a molten state - don't get too close, wear appropriate
proximity suits, etc.
"
aa43c26527bc1068148ec29b8cc2b4f2e2be5066,jopamer/swift,"SILGen: Split up Emission.getSharedCaseBlockDest()
"
879a8966ac4dcbb9d5306bf704d8574ed287b765,jopamer/swift,"SIL: Split up AbstractionPattern::isOpaque() into two predicates

- isTypeParameter() -- check if this is an archetype or dependent
  interface type.

- requiresClass() -- check if this is a class-constrained type
  parameter.

The old isOpaque() check has been replaced by
(isTypeParameter() && !requiresClass(moduleDecl)).

This allows us to pass the ModuleDecl on down to
GenericSignature::requiresClass(), enabling the use of
interface types in abstraction patterns.

NFC for now.
"
bc8394030176d063d5007f39488ed117ab6d0f34,jopamer/swift,"Make pointer nullability explicit using Optional.

Implements SE-0055: https://github.com/apple/swift-evolution/blob/master/proposals/0055-optional-unsafe-pointers.md

- Add NULL as an extra inhabitant of Builtin.RawPointer (currently
  hardcoded to 0 rather than being target-dependent).
- Import non-object pointers as Optional/IUO when nullable/null_unspecified
  (like everything else).
- Change the type checker's *-to-pointer conversions to handle a layer of
  optional.
- Use 'AutoreleasingUnsafeMutablePointer<NSError?>?' as the type of error
  parameters exported to Objective-C.
- Drop NilLiteralConvertible conformance for all pointer types.
- Update the standard library and then all the tests.

I've decided to leave this commit only updating existing tests; any new
tests will come in the following commits. (That may mean some additional
implementation work to follow.)

The other major piece that's missing here is migration. I'm hoping we get
a lot of that with Swift 1.1's work for optional object references, but
I still need to investigate.
"
56a07d2e73867fbdc36f3bd8dc62a7e95440c4b3,jopamer/swift,"[GSB] Split out the operation to expand the requirement signature of a conformance.

NFC for now; we are going to re-use this code.
"
36ac5ec2204137f92ae15ee76763f86f2b928a4c,jopamer/swift,"Use $(cmd) instead of discouraged `cmd`.
"
c37751ae962dbfc7c360da11620074dc92901683,jopamer/swift,"[noescape by defaul] make noescape the default

This flips the switch to have @noescape be the default semantics for
function types in argument positions, for everything except property
setters. Property setters are naturally escaping, so they keep their
escaping-by-default behavior.

Adds contentual printing, and updates the test cases.

There is some further (non-source-breaking) work to be done for
SE-0103:

- We need the withoutActuallyEscaping function
- Improve diagnostics and QoI to at least @noescape's standards
- Deprecate / drop @noescape, right now we allow it
- Update internal code completion printing to be contextual
- Add more tests to explore tricky corner cases
- Small regressions in fixits in attr/attr_availability.swift
"
86620aaa7ebd32d33f4cdf61add5c63a72d3f02a,jopamer/swift,"Merge pull request #9318 from practicalswift/redundant-types-in-casts

[gardening] Remove redundant repetition of type names (DRY): RepeatedTypeName foo = dyn_cast<RepeatedTypeName>(bar)"
fc64e34c8ea39371bed6ed418f83d867dbd24423,jopamer/swift,"Merge pull request #13701 from xedin/rdar-36278686

[Runtime/ABI] Optimize number of function metadata ABI endpoints"
2cf172160c4c7814b2a0a757decba4d2df3ddc57,jopamer/swift,"Rename SequenceType.Generator associated type to SequenceType.Iterator
"
ec61fa4c5a68cc65b2327ea76b93ec81dbc27cae,jopamer/swift,"IRGen/Runtime: Use only the 'layout' subset of the vwtable to perform value type layout.

Full type metadata isn't necessary to calculate the runtime layout of a dependent struct or enum; we only need the non-function data from the value witness table (size, alignment, extra inhabitant count, and POD/BT/etc. flags). This can be generated more efficiently than the type metadata for many types--if we know a specific instantiation is fixed-layout, we can regenerate the layout information, or if we know the type has the same layout as another well-known type, we can get the layout from a common value witness table. This breaks a deadlock in most (but not all) cases where a value type is recursive using classes or fixed-layout indirected structs like UnsafePointer. rdar://problem/19898165

This time, factor out the ObjC-dependent parts of the tests so they only run with ObjC interop.

Swift SVN r30266
"
76c6281feab6eb74a0f321e351b19d66256b4fe3,jopamer/swift,"[stdlib] Rewriting native hashed collection indices

Changes:
- Native dictionary and set indices no longer hold references to storage
- Cocoa-based dictionary and set indices no longer hold references to storage
- Removed double indirection trick from hashed collections
- Rewrote storage types to reflect simpler model
- Updated unit tests
"
4cc616f2be0d12dfcbade99c5938c5a2d6412e10,jopamer/swift,"Rename the DependentType class to UnstructuredDependentType, because
this type is only going to cover dependent types for which there is
absolutely no structure. Still no functionality change.


Swift SVN r1292
"
76eb5dd66d70b6774e1e5b2660a267ff7bfba514,jopamer/swift,"SILGen: Clean up ad-hoc SubstitutionList construction when calling intrinsics

Change emitApplyOfLibraryIntrinsic() to take a SubstitutionMap,
and use the correct abstractions to build the map.

This gets rid of the last remaining uses of gatherAllSubstitutions()
in SIL.
"
f7def54243a7b884bddcb1dece029e38783522ec,jopamer/swift,"Merge pull request #1279 from dduan/rename_decl_context_methods

[AST] rename some DeclContext isXXX methods to getAsXXX"
b8a24266733faa5b11e3ba0da9573b2e727bf0d7,jopamer/swift,"Introduce the formal protocol IntegerLiteralConvertible for integer literals.

This eliminates the last of the old ""convert literal to specific type""
code, as all of the basic literal kinds now go directly through formal
protocols. One minor casualty of this change is that we've lost the
""integer constant too large"" warning. Filed as
<rdar://problem/14070127>, which is likely to be addressed in SIL.


Swift SVN r5477
"
669cdc537c21383dd08c0d543903e4bcf7a41337,jopamer/swift,"Create an entrypoint tryToConcatenateStrings and hide the class StringConcatenationOptimizer in Local.cpp.

In every instance, we were just creating the StringConcatenationOptimizer and
then invoking optimize on it. This is a cleaner solution since the details of
how we perform the string concatenation are hidden in Local.cpp instead of being
in a header.

NFC.

Swift SVN r25341
"
a2a1b2af55d43b59ae2546e277e9dd940bc6c785,jopamer/swift,"Clean up tuple and extract SILBuilder stuff:
- Introduce emitTupleExtract / emitStructExtract, which fold when their operand is a tuple/struct.
- Rename SILBuilder::createTupleExtractInst -> createTupleExtract, ""Inst"" isn't used as a suffix.
- Switch capture promotion and DI to use the new functions.

This trims 300 lines out of the stdlib.


Swift SVN r9897
"
90fcbfe9a6359d21c6e5ce3401810337bab6638c,jopamer/swift,"Rename @transparent to @_transparent for now.

This feature has not been fully designed, let alone properly implemented.
For more information, see docs/TransparentAttr.rst.
"
65bcc8ff840eb5f82d33d4f203c54ac1af37a2ea,jopamer/swift,"[gardening] Use o && isa<T>(o) instead of dyn_cast_or_null<T>(o) when result is unused
"
0af2845c6ddfb2e3e2afa5569cec278dd4bdf9e6,jopamer/swift,"SILGen: Emission of materializeForSet for generic subscripts

First, use the correct generic environment to compute the substituted
storage type. Substitutions derived from 'self' are not enough,
because we also want the archetypes of the generic subscript's
innermost generic parameters.

Also, use the method and witness_method calling conventions for the
materializeForSet callback, depending on if we have a protocol
witness or concrete implementation.

Since the materializeForSet callback is called with a more
abstract type at the call site than the actual function type
of the callback, we used to rely on these two SIL types being
ABI compatible:

@convention(thin) <Self : P, T, U) (..., Self.Type) -> ()
@convention(thin) <T, U> (..., Foo<T, U>.Type) -> ()

The IRGen lowering is roughly the following -- the call site
passes two unused parameters, but that's fine:

(..., Self.Type*, Self.Type*, Self.P*)
(..., Foo<T, U>.Type*)

However if the callback has its own generic parameters because
the subscript is generic, we might have SIL types like so,

@convention(thin) <Self : P, T, U, V) (..., Self.Type) -> ()
@convention(thin) <T, U, V> (..., Foo<T, U>.Type) -> ()

And the IRGen lowering is the following:

(..., Self.Type*, Self.Type*, Self.P*, V.Type*)
(..., Foo<T, U>.Type*, V.Type*)

The parameters no longer line up, because the caller still passes
the two discarded arguments, and type metadata for V cannot be
derived from the Self metadata so must be passed separately.

The witness_method calling convention is designed to solve this
problem; it puts the Self metadata and protocol conformance last,
so if you have these SIL types:

@convention(witness_method) <Self : P, T, U, V) (..., swiftself Self.Type) -> ()
@convention(witness_method) <T, U, V> (..., swiftself Foo<T, U>.Type) -> ()

The IRGen lowering is the following:

(..., Self.Type*, V.Type*, Self.Type*, Self.P*)
(..., Foo<T, U>.Type*, V.Type*, Self.Type*, unused i8*)

However, the problem is now that witness_method and thin functions
are not ABI compatible, because thin functions don't have a
distinguished 'self', which is passed differently in LLVM's swiftcc
calling convention:

@convention(witness_method) <Self : P, T, U, V) (..., Self.Type) -> ()
@convention(thin) <T, U, V> (..., Foo<T, U>.Type) -> ()

So instead of using 'thin' representation for the concrete callback
case, use 'method', which is essentially the same as 'thin' except if
the last parameter is pointer-size, it is passed as the 'self' value.

This makes everything work out.
"
9e880a2a6d04b51f3c29229929dce88526bef6a4,jopamer/swift,"EscapeAnalysis: better and simpler handling of ref_element_addr.

Instead of having a separate RefElement node type, just use the Content node type for ref_element_addr.
This is a better way to model this kind of projection and also simplifies the code in escape analysis.
"
58e89b3fff697338cadb45ea9800ab1bd2ba0de2,jopamer/swift,"Merge pull request #11998 from compnerd/qualifiers

runtime: clean up last of -Wqual-cast warnings"
0c31ff5681769af1253d11816048c6b4beb6e046,jopamer/swift,"Move bridging conversions into the type checker.

Previously, bridged value types and their corresponding Objective-C
classes allow inter-conversion via a number of user-defined conversion
functions in the Foundation module. Instead, make this a general
feature of the type checker so we can reason about it more
directly. Fixes <rdar://problem/16956098> and
<rdar://problem/17134986>, and eliminates 11 (half) of the
__conversion functions from the standard library and overlays.

A few notes:
  - The XCTest changes are because a String can no longer directly
  conform to CVarArg: this is a Good Thing (TM), because it should be
  ambiguous: did you mean to pass it as an NSString or a C string?
  - The Objective-C representations for the bridged collections are
  hard-coded in the type checker. This is unfortunate and can be
  remedied by adding another associated type to the
  _BridgedToObjectiveC protocol.

Swift SVN r19618
"
d417281ed9b6968c3702463634504f1ae91b38ab,jopamer/swift,"Merge pull request #12097 from DougGregor/gsb-nested-type-lookup

[GSB] Centralize, clean up, and cache nested type name lookup"
627a1820b86a062cde8ee06c5ad35fa5f56c0a99,jopamer/swift,"Omit needless words: split the base name when the first parameter is defaulted.

Split the base name at the last preposition, but *only* when the first
parameter is defaulted, because defaulted arguments might not show up
at the call site and the longer base name can feel odd in such
cases. With this, stop avoiding the argument label ""with"": it's fine
when we have actual context at the call site, and the ""with: nil"" case
no longer happens now that we're defaulting nil.

Swift SVN r32098
"
17ec1acdb730c6b81526d9d0e4190fe1ee92b7c6,jopamer/swift,"[Sema] Improve diagnostic message for out of order arguments

* Argument numbers are 1 based, not starting from 0.
* Use the term `argument` consistently, `parameter` is not a term for call site.
"
c7c7388cf20614ddb15b92cfdffda08d84732c94,jopamer/swift,"Change do-while to repeat-while.

Change all uses of ""do { ... } while <cond>"" to use ""repeat"" instead.
Rename DoWhileStmt to RepeatWhileStmt. Add diagnostic suggesting change
of 'do' to 'repeat' if a condition is found afterwards.

<rdar://problem/20336424> rename do/while loops to repeat/while & introduce ""repeat <count> {}"" loops

Swift SVN r27650
"
9eb729ce79669db17f7285f3f599d9fbc3b7dce6,jopamer/swift,"[coverage] Reworked CMake invocation for coverage testing given there are three states for SWIFT_ANALYZE_CODE_COVERAGE
"
2149061df1ad4572e2519023498c644523fd2fd7,jopamer/swift,"Sema: Clean up hack forcing use of NSError-related conformances
"
9a36586377bc97ee40354f25240f72b0e755ad6d,jopamer/swift,"Compute Objective-C selectors for throwing initializers.

Refactor the Objective-C selector computation code for all forms of
methods, collapsing it into a single routine to eliminate
duplication. Test that we're computing Objective-C selectors for
throwing initializers correctly, as well as that we're printing the
appropriate Objective-C method declarations for throwing
initializers.

Swift SVN r27293
"
178d194aa15e76dd7393b42ff62643878c4583e3,jopamer/swift,"Merge pull request #3850 from CodaFi/cleanup-round-2

Keep cleaning up after AnyHashable"
14af3a57e81c8872f31ff9a0629809cabe2dbe6a,jopamer/swift,"Enable elimination of dead methods which are in classes of higher visibility.

The underlying problem is that e.g. even if a method is private but its class is public, the method can be referenced from another module - from the vtable of a derived class.
So far we handled this by setting the SILLinkage of such methods according to the visibility of the class. But this prevented dead method elimination.
Now I set the SILLinkage according to the visibility of the method. This enables dead method elimination, but it requires the following:
1) Still set the linkage in llvm so that it can be referenced from outside.
2) If the method is dead and eliminated, create a stub for it (which calls swift_reportMissingMethod).



Swift SVN r23889
"
9bf552f481effb28d981207ec8ecbaa0f2904e65,jopamer/swift,"Merge pull request #5546 from DougGregor/witness-matching

Rework witness matching for generic requirements"
1df8e93bbb816eaa3727eac65e2d15841c2c02f5,jopamer/swift,"Convert the diagnostic methods into passes.

Swift SVN r13503
"
5aa99fa3469debc360a6c241db2ace57e5b1cf55,jopamer/swift,"SILOptimizer: Create non-[fragile] specializations of [fragile] functions where possible

Change the optimizer to only make specializations [fragile] if both the
original callee is [fragile] *and* the caller is [fragile].

Otherwise, the specialized callee might be [fragile] even if it is never
called from a [fragile] function, which inhibits the optimizer from
devirtualizing calls inside the specialization.

This opens up some missed optimization opportunities in the performance
inliner and devirtualization, which currently reject fragile->non-fragile
references:

TEST                                                    | OLD_MIN | NEW_MIN | DELTA (%) | SPEEDUP
---                                                     | ---     | ---     | ---       | ---
DictionaryRemoveOfObjects                               | 38391   | 35859   | -6.6%     | **1.07x**
Hanoi                                                   | 5853    | 5288    | -9.7%     | **1.11x**
Phonebook                                               | 18287   | 14988   | -18.0%    | **1.22x**
SetExclusiveOr_OfObjects                                | 20001   | 15906   | -20.5%    | **1.26x**
SetUnion_OfObjects                                      | 16490   | 12370   | -25.0%    | **1.33x**

Right now, passes other than performance inlining and devirtualization
of class methods are not checking invariants on [fragile] functions
at all, which was incorrect; as part of the work on building the
standard library with -enable-resilience, I added these checks, which
regressed performance with resilience disabled. This patch makes up for
these regressions.

Furthermore, once SIL type lowering is aware of resilience, this will
allow the stack promotion pass to make further optimizations after
specializing [fragile] callees.
"
19457c12eaaf3cf613742ce06e32a9699b52436a,jopamer/swift,"Give Builtin.Word an abstract size.

Instead of hardcoding Builtin.Word to be an alias for Builtin.Int64, make it its own type of abstract pointer width.

- Change BuiltinIntegerType's width representation to accommodate abstract widths.

- In the AST and in SIL, store values of the types as the greatest supported size for the abstract width (64 bits for a pointer).

- Add some type safety to the ([sz]ext|trunc)(OrBitCast)? builtins that they're used appropriately given the upper and lower bounds of the abstract sizes they're working with.

- Now that Builtin.Word is a distinct type, give it its own mangling.

- In IRGen, lower pointer-sized BuiltinIntegerType appropriately for the target, and truncate lowered SIL values if necessary.

Fixes <rdar://problem/15367913>.

Swift SVN r10467
"
ddb9bba50e9550aae6cc9cfe8b3f0b1d1fbe3977,jopamer/swift,"Improve the compilation time of redundant load elimination

For forwarding on allocstacks, we can invalidate the forwable bit when we
hit the deallocate stack.

This helps compilation time as we do not need to propagate these bits down
to subsequent basic blocks.
"
39389b9c0923a14a98c68f34ec03a407f7438900,jopamer/swift,"[SE-0125] Remove `isUniquelyReferenced` and the `NonObjectiveCBase` class

We can express the same using the `isUniquelyReferencedNonObjC` API.

- Rename `isUniquelyReferencedNonObjC` to `isKnownUniquelyReferenced`.
- Cleanup `ManagedBufferPointer` by removing holdsUniqueOrPinnedReference` and
  renaming `holdsUniqueReference` to `isUniqueReference`.
- No longer promise to return false from `isKnownUniquelyReferenced` for @objc
  class instances.

SR-1962
rdar://21886410
"
24030eb2edd797f99fadd3c114824ed972a2dc04,jopamer/swift,"[APINotes] Use non-""Ref"" names for CG import-as-member renamings.

That is, import something like 'CGColorCreateGenericGray' as
""CGColor.init(gray:alpha:)"" rather than ""CGColorRef.init(gray:alpha:)"".
Since we print the type name in diagnostic text and in fix-its, it's
important to use the name that Swift sources use.

Finishes rdar://problem/26347297.
"
b25eda36faf5b053d7be26a45233659609e4ca28,jopamer/swift,"Match Objective-C names in overrides as part of validation, not override checking.

Previously, we were using the Objective-C names to help determine
whether a declaration is an override or not. This is broken, because
we should determine overrides based on the Swift rules for
overriding, then (later) check that the Objective-C runtime will see
the same override behavior that the Swift runtime does. Address this
problem, both by taking the Objective-C selector out of the equation
when matching overrides (except for diagnostic purposes) and by
performing better validation of the Objective-C names for the
overriding vs. overridden methods/properties.

The motivating case here (from rdar://problem/18998564) is an
Objective-C initializer:

  -(instancetype)initString:(NSString *)string;

When trying to override this in a Swift subclass, one naturally
writes:

  override init(string: String)

which implicitly has the selector initWithString:. We ended up in an
unfortunate place where we rejected the override (because the
selectors didn't match) with a crummy diagnostic, but omitting the
""override"" would result in a different conflict with the superclass.

Now, we'll treat this as an override and complain that one needs to
rename the method by adding ""@objc(initString:)"" (with a Fix-It, of
course). This fixes rdar://problem/18998564, but it is not ideal: the
complete solution (covered by rdar://problem/19812955) involves
reworking the dance between override and @objc so that we compute
'override' first (ignoring @objc-ness entirely), and let the
@objc'ness of the overridden declaration both imply @objc for the
overriding declaration and implicitly fix the selector. However, such
a change is too risky right now, hence the radar clone.

Swift SVN r25243
"
670dbdc4089849dbb0a8e9df4218d5a900c43490,jopamer/swift,"[SE-0134] Rename UTF8-related properties on String
"
6dcf8ae206afff19d7b7ef1a4682e04172ab82bc,jopamer/swift,"Parse assignments as part of expr-sequence.

Parse '=' as a binary operator with fixed precedence, parsing it into a temporary UnsequencedAssignExpr that gets matched to operands and turned into an AssignExpr during sequence expr folding. This makes '=' behave like library-defined assignment-like binary operators.

This temporarily puts '=' at the wrong precedence relative to 'as' and 'is', until 'as' and 'is' can be integrated into sequence parsing as well.

Swift SVN r5508
"
31598d41bf7f786c2914904a8add8435cfbecb52,jopamer/swift,"Rename GeneratorType to IteratorProtocol
"
45fb11ce3c836a5bc445a59811403b0b958e87fc,jopamer/swift,"AST: Add ExistentialLayout::getSuperclass(), rename superclass to explicitSuperclass

More groundwork for protocols with superclass constraints.
In several places we need to distinguish between existential
types that have a superclass term (MyClass & Proto) and
existential types containing a protocol with a superclass
constraint.

This is similar to how I can write 'AnyObject & Proto', or
write 'Proto1 & Proto2' where Proto1 has an ': AnyObject'
in its inheritance clause.

Note that some of the usages will be revisited later as
I do more refactoring and testing. This is just a first pass.
"
b27697eff1ebe491935d195ef90f3e5fdc214857,jopamer/swift,"Merge pull request #2246 from trentxintong/CodeMotion

Rename mayUseValue to mayHaveSymmetricInteference"
11254d07df81268968467623efa064542bef4952,jopamer/swift,"Merge pull request #11325 from rjmccall/metadata-layout

Use cached type-metadata layouts in IRGen instead of scanners (NFC)"
4c74d97f1663ffc053f6a24b72387c67f4e86587,jopamer/swift,"Remove some now-unnecessary special code for binding archetypes
in associated type accessors.

The only remaining use of getAll{DependentTypes,Archetypes} in IRGen
is in code that interprets Substitution arrays, which is unavoidable
absent a change to that representation.
"
85ba4fe40f7ececf6c53417b55d98d7c499ccdba,jopamer/swift,"[AST] Narrow TypeSubstitutionMap to SubstitutableType keys.

Type substitution works on a fairly narrow set of types: generic type
parameters (to, e.g., use a generic) and archetypes (to map out of a
generic context). Historically, it was also used with
DependentMemberTypes, but recent refactoring to eliminate witness
markers eliminate that code path.

Therefore, narrow TypeSubstitutionMap's keys to SubstitutableType,
which covers archetypes and generic type parameters. NFC
"
4ddac3fbbd5b9ba8d980fa8810472cad3d79b7e6,jopamer/swift,"[stdlib] Eradicate IndexDistance associated type (#12641)

* Eradicate IndexDistance associated type, replacing with Int everywhere

* Consistently use Int for ExistentialCollection‚Äôs IndexDistance type.

* Fix test for IndexDistance removal

* Remove a handful of no-longer-needed explicit types

* Add compatibility shims for non-Int index distances

* Test compatibility shim

* Move IndexDistance typealias into the Collection protocol
"
c015b6eb47da8958237c8a60efb74d3567048261,jopamer/swift,"Merge pull request #1906 from practicalswift/gardening-20160328b

[gardening] Remove unused code, fix PEP 8 regression, fix typos."
ec2a9573cc03c9b4ebe7fa666026ddb47f2ae0b7,jopamer/swift,"Rename FrontendInputs::AllFiles to AllInputs, getAllFiles to getAllInputs, etc.
"
67fc5e32ce95068781e3f4309a66b2bb6fac274d,jopamer/swift,"Simple changes to pave the way for the next PR.

- Moved getOutputFilenamesFromCommandLineOrFilelist & readOutputFileLIst to better places in the file.
- Capitalization changes.
- Make actionIsImmediate static.
- Add braces around sections of CompilerInstance::setup to clarify scopes of local variables.
"
847b78245a473cc7160e45289311c85b6d6365b5,jopamer/swift,"[Type checker] Use argument labels from the expression for type-checking calls.

When we are type-checking calls, subscripts, or other call-like
expressions, use the argument labels provided by the various
expression nodes rather than those encoded in the tuple type. This
means that argument label matching now matches the callee
declaration's argument labels against the argument labels, without
relying on encoding the argument labels within types in the AST.

This refactor is a stepping stone torward SE-0111.
"
3a04e0809fb18f3a206b01ddfefb27d656452d23,jopamer/swift,"stdlib: add a function to squeeze a number in a given range from a hash value

This function mixes the bits in the hash value, which improves Dictionary
performance for keys with bad hashes.

PrecommitBenchmark changes with greater than 7% difference:

``````````Dictionary2`,```1456.00`,```1508.00`,```1502.00`,````624.00`,````607.00`,````592.00`,`864.00`,``145.9%
``````````Dictionary3`,```1379.00`,```1439.00`,```1408.00`,````585.00`,````567.00`,````552.00`,`827.00`,``149.8%
````````````Histogram`,````850.00`,````849.00`,````851.00`,```1053.00`,```1049.00`,```1048.00`,`199.00`,``-19.0%
````````````````Prims`,```1999.00`,```2005.00`,```2018.00`,```1734.00`,```1689.00`,```1701.00`,`310.00`,```18.4%
``````````StrSplitter`,```2365.00`,```2334.00`,```2316.00`,```1979.00`,```1997.00`,```2000.00`,`337.00`,```17.0%
```````````````TwoSum`,```1551.00`,```1568.00`,```1556.00`,```1771.00`,```1741.00`,```1716.00`,`165.00`,```-9.6%

Regressions are in benchmarks that use `Int` as dictionary key: we are just
doing more work than previously (hashing an `Int` was an identity function).

rdar://17962402


Swift SVN r21142
"
d7b9ae72aa7e1c3d53d0544429613654b4e3ea6c,jopamer/swift,"Sema: Require '.init' when constructing from a dynamic metatype.

This makes it clearer that expressions like ""foo.myType.init()"" are creating new objects, instead of invoking a weird-looking method. The last part of rdar://problem/21375845.

Swift SVN r29375
"
2b2330bf5b88d7e7ff397841d61c0232be0d21c9,jopamer/swift,"[attribute] rename @noinline to @inline(never).

Add support for parsing inline(never), it can be easily expanded to
handle inline(always).

rdar://17527111


Swift SVN r19447
"
1954665a9518abead607221a3cba61fc57d3c0f2,jopamer/swift,"AST: Remove more uses of SubstitutionMap::add{Substitution,Conformance}()

A new SubstitutionMap::getProtocolSubstitutions() method handles
the case where we construct a trivial SubstitutionMap to replace
the protocol Self type with a concrete type.

When substituting one opened existential archetype for another,
use the form of Type::subst() that takes two callbacks instead of
building a SubstitutionMap. SubstitutionMaps are intended to be
used with keys that either come from a GenericSignature or a
GenericEnvironment, so using them to replace opened archetypes
doesn't fit the conceptual model we're going for.
"
ed58c152bf85fd4b62b9e1d4da8f3807c59a6157,jopamer/swift,"[Parse] Improve Lexer's UTF-8 BOM handling (#13483)

* Add BOM handling testcases
* Add ContentStart to Lexer for BOM handling
"
797df6e8d7a3196e2e82ad757274bb0312ed564e,jopamer/swift,"Eliminate the _*Indexable protocols.

The various _*Indexable protocols only exist to work around the lack of
recursive protocol constraints. Eliminate all of the *_Indexable protocols,
collapsing their requirements into the corresponding Collection protocol
(e.g., _MutableIndexable ‚Äî> Collection).

This introduces a number of extraneous requirements into the various
Collection protocols to work around bugs in associated type
inference. Specifically, to work around the lack of ""global"" inference
of associated type witnesses. These hacks were implicitly present in
the *Indexable protocols; I've made marked them as ABI FIXMEs here so
we can remove them when associated type inference improves.

Fixes rdar://problem/21935030 and a number of ABI FIXMEs in the library.
"
10ecccceea4c41b61039be19653811c66654c48d,jopamer/swift,"Make Type's bool conversion explicit.

I just tripped over this.


Swift SVN r5209
"
789646a15be86391696a11b2f0544b6c2579e44d,jopamer/swift,"Demangling: Make demangled names more readable and further reduce the size of the simplified demangled names

The goal here is to make the short demangling as short and readable as possible, also at the cost of omitting some information.
The assumption is that whenever the short demangling is displayed, there is a way for the user to also get the full demangled name if needed.

*) omit <where ...> because it does not give useful information anyway

Deserializer.deserialize<A where ...> () throws -> [A]
--> Deserializer.deserialize<A> () throws -> [A]

*) for multiple specialized functions only emit a single ‚Äúspecialized‚Äù

specialized specialized Constructible.create(A.Element) -> Constructible<A>
--> specialized Constructible.create(A.Element) -> Constructible<A>

*) Don‚Äôt print function argument types:

foo(Int, Double, named: Int)
--> foo(_:_:named:)

This is a trade-off, because it can lead to ambiguity if there are overloads with different types.

*) make contexts of closures, local functions, etc. more readable by using ‚Äú<a> in <b>‚Äù syntax
This is also done for the full and not only for the simplified demangling.

Renderer.(renderInlines([Inline]) -> String).(closure #1)
--> closure #1 in Renderer.renderInlines

*) change spacing, so that it matches our coding style:

foo <A> (x : A)
--> foo<A>(x: A)
"
5ac4fa67e6e5c51909bb9e6624f0b3a502510614,jopamer/swift,"More principal approach for casting of ABI-compatible arguments and return types.

Implement castValueToABICompatibleType, which is general enough to handle all currently possible casts between ABI-compatible types. It is closely modelled after rules checked by SILVerifier::requireABICompatibleFunctionTypes. This function can also operate in a mode where it only checks if a cast is possible. Both checking and implementation logic are in the same function to make sure they never become inconsistent, because it happened before a few types.

Use this new function everywhere (e.g. in simplify-cfg and devirtualizer) instead of previous custom and often incorrect solutions.

It now supports a few test-cases which were disable before, because the optimizer could not handle them.

rdar://23054843

Swift SVN r32629
"
656892b30d894c934c232b7e67b57bc679c50175,jopamer/swift,"Rename *Constraints functions to their natural name, and make the old versions ""Old"".

No functionality change.


Swift SVN r5162
"
4c1e6ac38c7dd9b7dbd095dcc2436b418f906e9c,jopamer/swift,"Merge pull request #3340 from slavapestov/function-interface-type-cleanup

"
e57c47001980ac3ff1e4564e7d1fd5a3771f180c,jopamer/swift,"Introduce a ""@box T"" type for SIL.

Represents a heap allocation containing a value of type T, which we'll be able to use to represent the payloads of indirect enum cases, and also improve codegen of current boxes, which generates non-uniqued box metadata on every allocation, which is dumb. No codegen changes or IRGen support yet; that will come later.

This time, fix a paste-o that caused SILBlockStorageTypes to get replaced with SILBoxTypes during type substitution. Oops.

Swift SVN r29489
"
467cd0796883f53959b822ac8f762561f20c9811,jopamer/swift,"Two changes:
 - Improve handling of if_expr in a couple of ways: teach constraint simplification
   about IfThen/IfElse and teach CSDiags about the case when the cond expr doesn't match
   BooleanType.  This is rarely necessary, but CSDiags is all about cornercases, and this
   does fix a problem in a testcase.
 - Be a bit more specific about the constraint failure kind (e.g. say subtype) and when
   we have a protocol conformance failure, emit a specific diagnostic about it, instead of
   just saying that the types aren't convertible.




Swift SVN r30650
"
1201d96cb290c2e3e1ffc68fca1b29e04a345836,jopamer/swift,"stdlib: Use builtin tail-allocated arrays instead of ManagedBuffer to allocate contiguous array buffers.

This reduces the amount of SIL generated for array operations significantly.
The generated code should be mostly the same (modulo different inlining decisions).
"
fd2fe85d7b2ad4107454bacfe80b18f33c10e06b,jopamer/swift,"Merge pull request #12959 from slavapestov/map-type-out-of-context-cleanup

Move mapTypeOutOfContext() from GenericEnvironment to TypeBase"
5ea2d13f5e0284b71eb84c2e7eba402caa4ad26a,jopamer/swift,"Improve the performance of IRGenDebugInfo

This commit changes how inline information is stored in SILDebugScope
from a tree to a linear chain of inlined call sites (similar to what
LLVM is using). This makes creating inlined SILDebugScopes slightly
more expensive, but makes lowering SILDebugScopes into LLVM metadata
much faster because entire inlined-at chains can now be cached. This
means that SIL is no longer preserve the inlining history (i.e., ((a
was inlined into b) was inlined into c) is represented the same as (a
was inlined into (b was inlined into c)), but this information was not
used by anyone.

On my late 2012 i7 iMac, this saves about 4 seconds when compiling the
RelWithDebInfo x86_64 swift standard library ‚Äî or 40% of IRGen time.

rdar://problem/28311051
"
5c55682d8b75ae1378d43f12b7ad4f8928c46782,jopamer/swift,"[stdlib] Capitalize keywords in doc comments

Again, the text is a lot more readable that way.

Swift SVN r28472
"
20d099d4ce41448755427f3bb89c7209be86e67e,jopamer/swift,"Remove now-unneeded argument from finishProcessing.
"
a18d490d6a9026915bfa61eb8b7e8d7b29ee13aa,jopamer/swift,"Migrate from UnsafePointer<Void> to UnsafeRawPointer. (#3773)

* Migrate from `UnsafePointer<Void>` to `UnsafeRawPointer`.

As proposed in SE-0107: UnsafeRawPointer.

`void*` imports as `UnsafeMutableRawPointer`.
`const void*` imports as `UnsafeRawPointer`.

Occurrences of `UnsafePointer<Void>` are replaced with UnsafeRawPointer.

* Migrate overlays from UnsafePointer<Void> to UnsafeRawPointer.

This requires explicit memory binding in several places,
particularly in NSData and CoreAudio.

* Fix a bunch of test cases for Void->Raw migration.

* qsort takes IUO values

* Bridge `Unsafe[Mutable]RawPointer as `void [const] *`.

* Parse #dsohandle as UnsafeMutableRawPointer

* Update a bunch of test cases for Void->Raw migration.

* Trivial fix for the SceneKit test case.

* Add an UnsafeRawPointer self initializer.

This is unfortunately necessary for assignment between types imported from C.

* Tiny simplification of the initializer.
"
de189679923f8787eb10414cac732481689c1e8d,jopamer/swift,"[Sema] Improved error message for static functions on existential metatypes (#2127)

Type level lookups can fail because the lookup is on an existential
metatype, like `MyProtocol.staticMethod(_:)` is invalid; however the
error message is unclear: ‚Äústatic member 'staticMethod(_:)' cannot be
used on instance of type ‚ÄòMyProtocol.Protocol‚Äô‚Äù.

This fix checks the base of member lookups that failed with the reason
UR_TypeMemberOnInstance for being existential metatypes. It produces
the clearer message ‚Äústatic member ‚ÄòstaticMethod(_:)‚Äô cannot be used on
protocol metatype ‚ÄòMyProtocol.Protocol‚Äô‚Äù. This change makes it clear
that the use of a static member on the *existential* metatype is the
problem."
255a2c4f63faab857a378323dfa1bb60941236ff,jopamer/swift,"Merge pull request #11403 from apple/revert-11397-simplify_performMemberLookup

Revert ""Simplify performMemberLookup()"""
2fd608ae4d813eadcf8426a57a0bd532417bdb52,jopamer/swift,"Add basic parsing and type-system support for the byref(heap)
qualifier, making sure that variables end up so-qualified by
default.  Add a RequalifyExpr to capture the act of adding
qualifiers (to form a supertype) to an l-value.

Swift SVN r1236
"
3e41339cb2109d7080873d192f5f13e0e84fa6c4,jopamer/swift,"rename @__noescape to @noescape, now that it is a generally visible feature,
wrapping up rdar://16323038.  Pieces still remaining are a Clang attribute+
importer support for it, plus adoption in the stdlib (tracked by other radars).


Swift SVN r24223
"
33312eac6b728799c2d42bfbc0dbe023989c8a6f,jopamer/swift,"[gardening] Remove unreachable/unused/redundant code

* Make parameter naming in forward declaration match definition
* Remove unused argument to function persistAsync(‚Ä¶)
* Remove unused enum ShouldHalt
* Remove unused enum class IsProtocol
* Remove unused function dumpTypeSubstitutionMap()
* Remove unused function template getFirstPairElt(‚Ä¶)
* Remove unused method addConstantWordInWords(‚Ä¶)
* Remove unused method asExistentialTI()
* Remove unused method currentTrackedState()
* Remove unused method getNumBodyParameters()
* Remove unused method getSuccIndex()
* Remove unused method getTypeOfDeclReference(‚Ä¶)
* Remove unused method hasStructWithAtMostOneNonTrivialField(‚Ä¶)
* Remove unused method initForDirectValues()
* Remove unused method nextIfNot(‚Ä¶)
* Remove unused method overwriteLoweredValue(‚Ä¶)
* Remove unused method removeColumn(‚Ä¶)
* Remove unused methods HasSingleDecl() and GetFirstDecl()
* Remove unused methods overwriteLoweredExplosion(‚Ä¶) and setLoweredSingleValue(‚Ä¶)
* Remove unused methods requireRetainablePointerValue(‚Ä¶), getMethodSelfInstanceType(‚Ä¶) and isSelfArchetype(‚Ä¶)
* Remove unused methods setAsEmptyDirect(), setAsSingleDirectUnmanagedFragileValue(‚Ä¶), setAsIndirectAddress(‚Ä¶) and getDirectValues()
* Remove unused struct CachedMemberInfo
* Remove unused struct CallEdit
* Remove unused struct ErrorImportInfo
* Remove unused synonym ConformancePair
* Remove unused variable SemaInfo
* Remove unused variable localDeclNameNode
* Remove unused variables kindToken and kindLoc
"
e33f1747a9925a4b879cc25dedfd9466fd6a2641,jopamer/swift,"[Python] Improve Python consistency: ""variable in function should be lowercase"" (N806)

The repo contains roughly 80 Python scripts. ""snake_case"" naming is used for
local variables in all those scripts. This is the form recommended by the PEP 8
naming recommendations (Python Software Foundation) and typically associated
with idiomatic Python code.

However, in nine of the 80 scripts there were at least one instance of
""camelCase"" naming prior to this commit.

This commit improves consistency in the Python code base by making sure that
these nine remaining files follow the variable naming convention used for
Python code in the project.

References:
* PEP 8: https://www.python.org/dev/peps/pep-0008/
* pep8-naming: https://pypi.python.org/pypi/pep8-naming
"
962a1c0ddc46568683c54c15d1a32dc8cab9005e,jopamer/swift,"Warn and fix-it if second _compiler_version component isn't a *

To better indicate that the second _compiler_version component isn't
used in the ordering, warn and provide a fix-it replacement if it's
not a '*' in source code.

To make the diagnostics a little easier to emit, I cleaned up the
parsing code to use StringRef::split instead of a hand-written
tokenizer.

rdar://problem/23080845

Swift SVN r32673
"
c86e786ab56839ca448f60ff1bea7e8d366891c4,jopamer/swift,"switch langref to new func syntax, switch implementation to use FuncExpr instead of LambdaExpr.


Swift SVN r487
"
63f99a486c353775b6b7e366c94307ef4ac1993d,jopamer/swift,"Move CallExpr diagnostics over to the same overload candidate diagnosis 
facilities used by operators etc.  This required a bunch of changes to make
the diagnostics changes strictly an improvement:

  - Teach the new path about calls to TypeExprs.
  - Teach evaluateCloseness some simple things about varargs.
  - Make the generic diagnosis logic produce a better error when there is 
    exactly one match.

Overall, the resultant diagnostics are a step forward: we now produce candidate
set notes more uniformly, and the messages about some existing ones are 
more specific.  This is just another stepping stone towards progress though.



Swift SVN r30057
"
e3269a3b95ee38a114c696617ed89598e788d052,jopamer/swift,"Pick one name for 'getAbstractCC'.

getCC, getFunctionCC, getConvention...consolidate them all under one name.

Swift SVN r5297
"
fc1c256ef51def38cccb8242928bbd81824035d1,jopamer/swift,"Allow references to deduced associated types.

When checking a type's conformance against a protocol, we can deduce
the values of associated types. Make these associated types visible to
qualified name lookup so that (for example) VectorEnumeratorType does
not need to define the Element type. It is deduced from the signautre
of next(), and made available as, e.g.,
VectorEnumeratorType<Int>.Element through the Enumerator protocol
conformance. Fixes <rdar://problem/11510701>, but with some lingering
dependencies on lazy type resolution (<rdar://problem/12202655>).

Note that the infrastructure here is meant to be generalized to
support default implementations in protocols, but there are several
pieces still not in place.



Swift SVN r6073
"
93198d4b921ba4745355b3f0124230afb00c8ca6,jopamer/swift,"rework type checking of 'else' blocks in let/else so that we know the enclosing
funcdecl in the right cases, enabling the use of 'return' in the else.



Swift SVN r27007
"
56595b3b557d8c9c73e7e13b50ae8715e1313e66,jopamer/swift,"Merge pull request #4435 from apple/revert-4394-Hashable-CF

Revert ""Make all CF types Equatable and Hashable."""
a048194041ca1232a5887216d2985a358d16f54b,jopamer/swift,"[GSB] Tighten up interfaces for computing a generic signature.

Funnel all places where we create a generic signature builder to compute
the generic signature through a single entry point in the GSB
(`computeGenericSignature()`), and make `finalize` and `getGenericSignature`
private so no new uses crop up.

Tighten up the signature of `computeGenericSignature()` so it only works on
GSB rvalues, and ensure that all clients consider the GSB dead after that
point by clearing out the internal representation of the GSB."
966033ac9aa976cf4f4322e06906208b18ed5ed3,jopamer/swift,"EscapeAnalysis: make a separate state for ""escapes with return""
"
3023a5f947ed547c8808c2ee376fdd1641663a77,jopamer/swift,"Introduce a simple dedicated SIL pass to fetch and use pre-specializations at -Onone.

The logic which fetches pre-specialisations at -Onone is moved from the GenericSpecializer into a dedicated SIL pass called UsePrespecialized. This new pass is much simpler than GenericSpecializer. There are no changes to the overall logic.

The goal of this re-factoring is to pave the way for deletion of the stand-alone GenericSpecializer, because inline-devirt-specialize logic is now integrated thanks to Mark's recent improvements.

rdar://21881337

Swift SVN r30603
"
d030ae4c943390fe18a7794a072ca489503e5169,jopamer/swift,"Cleanup uses of SWIFT_RT_ENTRY_VISIBILITY (#7103)

"
3f241bb80a7170f0f54332deef3ce3d170f6632e,jopamer/swift,"Sema: Handle NSError not being found during type checking better.

Fix crashes when type-checking ErrorType dynamic casts when NSError isn't available. Split the ErrorType execution tests into separate units for bridging and non-bridging, so that we get better coverage of this situation in both ObjC and non-ObjC builds. Fixes rdar://problem/20585210.

Swift SVN r27556
"
98d6fecc997312feb7f496c4ad11e0dcccc15289,jopamer/swift,"'.metatype' -> '.Type'

Also, reserve 'type' as a keyword for ensuing syntax changes.

Swift SVN r14375
"
ca6c6b1d362cb50d9ae48fb23be68ef3e975bec5,jopamer/swift,"[stdlib] Cleanup DefaultIndices, delete dead code (#13952)

* Remove a bunch of Default(Bidirectional|RandomAccess)Indices usage from stdlib and test

* Remove some DefaultRandomAccessIndices and IndexDistance usage from Foundation

* Remove no-longer-used internal type in Existentials.swift

* Get rid of indicesForTraversal
"
f6d1ec48f0489bafeb9b58c6005c3381560af32c,jopamer/swift,"[SIL] Refactor SILLocation not to derive from PointerUnion3 but to include it as a member

As per Chris's suggestion (review of r6152), further refactored SILLocation not to derive from PointerUnion3 but to include it as a member.

In addition, added some template magic to make sure we don't have to chain dyn_casts, which I suspect will be/is happening a lot with SILLocation:
Ex:
-  if (auto E = Func.dyn_cast<Expr*>()) {
-    if (const FuncExpr *FE = dyn_cast<FuncExpr>(E))
-      return SILLocation(FE->getBody())
+  if (const FuncExpr *FE = Func.getAs<FuncExpr>())
+    return SILLocation(FE->getBody());

Swift SVN r6283
"
5fe794863f044d25264e43ad6bf8a63263e9a1f1,jopamer/swift,"Merge pull request #89 from sferrini/master

Removed unnecessary semicolons"
b3addba09e2ecf334cb0ce012fbe5dd7e38b2600,jopamer/swift,"Split ""private(set)"" attributes out into a separate class.

No functionality change, i.e. these still don't do anything.

Swift SVN r19547
"
b6c971dd3a0bdb00db90630686fb867f1ea5d749,jopamer/swift,"Merge pull request #2107 from milseman/coregraphics

[Import as member] First draft of renaming CG APIs"
5a2f48e3be61607bd76cab50b63886cf305bad41,jopamer/swift,"Add a Builtin.BridgeObject type.

This is a type that has ownership of a reference while allowing access to the
spare bits inside the pointer, but which can also safely hold an ObjC tagged pointer
reference (with no spare bits of course). It additionally blesses one
Foundation-coordinated bit with the meaning of ""has swift refcounting"" in order
to get a faster short-circuit to native refcounting. It supports the following
builtin operations:

- Builtin.castToBridgeObject<T>(ref: T, bits: Builtin.Word) ->
  Builtin.BridgeObject

  Creates a BridgeObject that contains the bitwise-OR of the bit patterns of
  ""ref"" and ""bits"". It is the user's responsibility to ensure ""bits"" doesn't
  interfere with the reference identity of the resulting value. In other words,
  it is undefined behavior unless:

    castReferenceFromBridgeObject(castToBridgeObject(ref, bits)) === ref

  This means ""bits"" must be zero if ""ref"" is a tagged pointer. If ""ref"" is a real
  object pointer, ""bits"" must not have any non-spare bits set (unless they're
  already set in the pointer value). The native discriminator bit may only be set
  if the object is Swift-refcounted.

- Builtin.castReferenceFromBridgeObject<T>(bo: Builtin.BridgeObject) -> T

  Extracts the reference from a BridgeObject.

- Builtin.castBitPatternFromBridgeObject(bo: Builtin.BridgeObject) -> Builtin.Word

  Presents the bit pattern of a BridgeObject as a Word.

BridgeObject's bits are set up as follows on the various platforms:

i386, armv7:

  No ObjC tagged pointers
  Swift native refcounting flag bit: 0x0000_0001
  Other available spare bits:        0x0000_0002

x86_64:

  Reserved for ObjC tagged pointers: 0x8000_0000_0000_0001
  Swift native refcounting flag bit: 0x0000_0000_0000_0002
  Other available spare bits:        0x7F00_0000_0000_0004

arm64:

  Reserved for ObjC tagged pointers: 0x8000_0000_0000_0000
  Swift native refcounting flag bit: 0x4000_0000_0000_0000
  Other available spare bits:        0x3F00_0000_0000_0007

TODO: BridgeObject doesn't present any extra inhabitants. It ought to at least provide null as an extra inhabitant for Optional.

Swift SVN r22880
"
5cbaa9d7a6e11e3bd921c1a7685a2129dc719fa3,jopamer/swift,"Sema: When simplifying types, build ErrorTypes for failed conformance lookups
"
4b0cb97590d5ff9ad955aad05e7d3733264f68a5,jopamer/swift,"Remove SILExternalSource.

This was once used in lldb but no longer is. I'm cannot find any other
users, so I'm removing it as a small part of cleaning up and simplifying
the SIL linking process.
"
74589d788e4de05d450be5c93fa7454a31de580a,jopamer/swift,"Make ObjC-ness implicit to ObjC-inherited classes.

Add 'isObjC' as a property of ValueDecl, and set it during type checking if a class is either explicitly annotated with an [objc] attribute or inherits from an isObjC class, or if a func is a method of an isObjC class. Tweak the ClangImporter and other places that summon magic ValueDecl nodes to set up the decls they synthesize as isObjC. Replace logic in typechecking and IRGen that branched on the 'isObjC' attribute to now branch on the 'isObjC' property of ValueDecls.

Swift SVN r4078
"
0b75ee975e55ffa7c8a69a0f076f33ff82b64f44,jopamer/swift,"Remove ""illegal"" UnsafePointer casts from the stdlib.

Update for SE-0107: UnsafeRawPointer

This adds a ""mutating"" initialize to UnsafePointer to make
Immutable -> Mutable conversions explicit.

These are quick fixes to stdlib, overlays, and test cases that are necessary
in order to remove arbitrary UnsafePointer conversions.

Many cases can be expressed better up by reworking the surrounding
code, but we first need a working starting point.
"
050fd53af731639ef140301e29a61743b388b8e8,jopamer/swift,"Rename UncheckedOptional to ImplicitlyUnwrappedOptional.

Swift SVN r17232
"
a68975a21bc6718127328adcdd6a77064d1521b0,jopamer/swift,"[semantic-sil] Fix a place where we are forwarding the underlying cleanup vs creating a new one when performing upcast.

rdar://29791263
"
d924849853cf386bb34bccfcae426d681997e727,jopamer/swift,"[Code completion] Clean up context validation.

‚Ä¶ and make sure we validate a function declaration before type-checking it‚Äôs body.
"
aa3830c49727fa443a11eaab9dedb404349c95e1,kfowler/emacs,"Remove obsolete pre-unicode2 macros.

* character.h (MULTIBYTE_FORM_LENGTH, PARSE_MULTIBYTE_SEQ): Remove.
* composite.c (composition_reseat_it):
* data.c (Faset):
* fns.c (Ffillarray):
* regex.c (re_search_2): Use BYTES_BY_CHAR_HEAD.
  [!emacs] (BYTES_BY_CHAR_HEAD): Define instead of MULTIBYTE_FORM_LENGTH.
"
2968f56146eac37708de08f30a58d662ce5f037f,kfowler/emacs,"Consolidate redundant definitions.
* s/usg5-4.h (sigsetmask, PTY_TTY_NAME_SPRINTF): Do not define,
it's undefined in all files that include this one.
(POSIX_SIGNALS): Define here instead of doing it in all files that
include this one.
* s/irix6-5.h (sigsetmask, PTY_TTY_NAME_SPRINTF): Do not undef.
(POSIX_SIGNALS): Do not define.
* s/sol2-6.h (sigsetmask, PTY_TTY_NAME_SPRINTF): Do not undef.
(POSIX_SIGNALS): Do not define.
* s/unixware.h (sigsetmask, PTY_TTY_NAME_SPRINTF): Do not undef.
(POSIX_SIGNALS): Do not define.
"
23ba2705e22b89154ef7cbb0595419732080b94c,kfowler/emacs,"Make called-interactively-p work for edebug or advised code.
* lisp/subr.el (called-interactively-p-functions): New var.
(internal--called-interactively-p--get-frame): New macro.
(called-interactively-p, interactive-p): Rewrite in Lisp.
* lisp/emacs-lisp/nadvice.el (advice--called-interactively-skip): New fun.
(called-interactively-p-functions): Use it.
* lisp/emacs-lisp/edebug.el (edebug--called-interactively-skip): New fun.
(called-interactively-p-functions): Use it.
* lisp/allout.el (allout-called-interactively-p): Don't assume
called-interactively-p is a subr.
* src/eval.c (Finteractive_p, Fcalled_interactively_p, interactive_p): Remove.
(syms_of_eval): Remove corresponding defsubr.
* src/bytecode.c (exec_byte_code): `interactive-p' is now a Lisp function.
* test/automated/advice-tests.el (advice-tests--data): Remove.
(advice-tests): Move the tests directly here instead.
Add called-interactively-p tests.
"
7410c2700a7c3256a117ce9d1d3dbcd934a57589,kfowler/emacs,"Merge changes made in Gnus trunk.

nnir.el (nnir-run-imap): Return article list in UID order.
gnus-start.el (gnus-auto-subscribed-groups): Add nnimap to the list of automatically subscribed groups.
 (gnus-auto-subscribed-categories): New variable.
 (gnus-matches-options-n): Use it.
 (gnus-default-subscribed-newsgroups): Remove unused variable.
 (gnus-start-draft-setup): Message a bit less.
gnus-agent.el (gnus-agentize): Don't create the queue group automatically on startup.  It'll be created later, if needed.
gnus-start.el (gnus-1): Clarify comment.
 (gnus-matches-options-n): Fix typo in last change.
 (gnus-1): Don't create the nndrafts group twice.
 (gnus-setup-news): There's no need to read the active file here, since that's done again later on a per-backend basis.
 (gnus-start-draft-setup): Make sure that the new group is started out empty.
netrc.el (netrc-point-at-eol): Remove the unused netrc-point-at-old and netrc-bound-and-true-p bindings.
 (netrc-parse): Cache the netrc contents.
"
59f7af816e98a74abf42d724bcfdfa9bfe9964ce,kfowler/emacs,"Use declare forms, where possible, to mark obsolete functions.

* lisp/allout.el (allout-passphrase-hint-string): Likewise.
(allout-init): Use a declare form to mark obsolete.

* lisp/calendar/calendar.el (calendar-version):
* lisp/calendar/icalendar.el (icalendar-extract-ical-from-buffer)
(icalendar-convert-diary-to-ical):
* lisp/cus-edit.el (custom-mode):
* lisp/ansi-color.el (ansi-color-unfontify-region):
* lisp/international/latin1-disp.el (latin1-char-displayable-p):
* lisp/progmodes/cwarn.el (turn-on-cwarn-mode):
* lisp/progmodes/which-func.el (which-func-update-1): Use
define-obsolete-function-alias.

* lisp/bookmark.el (bookmark-jump-noselect): Use a declare form to mark
this function obsolete.

* lisp/calendar/cal-x.el (calendar-two-frame-setup)
(calendar-only-one-frame-setup, calendar-one-frame-setup):
* lisp/calendar/calendar.el (american-calendar, european-calendar)
(calendar-for-loop):
* lisp/comint.el (comint-dynamic-simple-complete)
(comint-dynamic-complete-as-filename, comint-unquote-filename):
* lisp/desktop.el (desktop-load-default):
* lisp/dired-x.el (dired-omit-here-always)
(dired-hack-local-variables, dired-default-directory):
* lisp/emacs-lisp/derived.el (derived-mode-class):
* lisp/emacs-lisp/timer.el (timer-set-time-with-usecs):
* lisp/emacs-lock.el (toggle-emacs-lock):
* lisp/epa.el (epa-display-verify-result):
* lisp/epg.el (epg-sign-keys, epg-start-sign-keys)
(epg-passphrase-callback-function):
* lisp/eshell/esh-util.el (eshell-for):
* lisp/eshell/eshell.el (eshell-remove-from-window-buffer-names)
(eshell-add-to-window-buffer-names):
* lisp/files.el (locate-file-completion):
* lisp/imenu.el (imenu-example--create-c-index)
(imenu-example--create-lisp-index)
(imenu-example--lisp-extract-index-name)
(imenu-example--name-and-position):
* lisp/international/mule-cmds.el (princ-list):
* lisp/international/mule-diag.el (decode-codepage-char):
* lisp/international/mule-util.el (detect-coding-with-priority):
* lisp/iswitchb.el (iswitchb-read-buffer):
* lisp/mail/mailalias.el (mail-complete):
* lisp/mail/sendmail.el (mail-sent-via):
* lisp/mouse.el (mouse-popup-menubar-stuff, mouse-popup-menubar)
(mouse-major-mode-menu):
* lisp/password-cache.el (password-read-and-add):
* lisp/pcomplete.el (pcomplete-parse-comint-arguments):
* lisp/progmodes/sh-script.el (sh-maybe-here-document):
* lisp/replace.el (query-replace-regexp-eval):
* lisp/savehist.el (savehist-load):
* lisp/simple.el (choose-completion-delete-max-match):
* lisp/term.el (term-dynamic-simple-complete):
* lisp/vc/ediff-init.el (ediff-check-version):
* lisp/vc/ediff-wind.el (ediff-choose-window-setup-function-automatically):
* lisp/vc/vc.el (vc-diff-switches-list):
* lisp/view.el (view-return-to-alist-update): Likewise.

* lisp/iswitchb.el (iswitchb-read-buffer): Move code of
iswitchb-define-mode-map here, and delete that obsolete function.

* lisp/subr.el (eval-next-after-load, makehash, insert-string)
(assoc-ignore-representation, assoc-ignore-case): Use declare to
mark obsolete.
(mode-line-inverse-video): Variable deleted.

* lisp/emacs-lisp/byte-run.el (make-obsolete): Doc fix; emphasize that
this applies to functions.

* lisp/erc/erc.el (erc-send-command): Use define-obsolete-function-alias.

* lisp/international/mule-util.el (string-to-sequence): Remove.

* lisp/net/newst-backend.el (newsticker-cache-filename):
* lisp/net/newst-treeview.el (newsticker-groups-filename): Fix
incorrect obsolescence declaration.

* lisp/net/snmp-mode.el (snmp-font-lock-keywords-3): Don't use obsolete
font-lock-reference-face.

* lisp/url/url-parse.el (url-recreate-url-attributes):
* lisp/url/url-util.el (url-generate-unique-filename): Use declare to mark
obsolete.

* src/xdisp.c (mode_line_inverse_video): Delete obsolete variable.
"
4f595e1504dfbb6f81e04fb98aa4b033dd5398a4,kfowler/emacs,"Merge from standalone RefTeX repository.

Here is the ChangeLog of the standalone version of RefTeX without
information about Makefiles and other auxiliary files.  The differences to
the Emacs repository are documented in the respective ChangeLog files.

2010-11-06  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-create-bibtex-file): Make sure that
	entries with whitespace at various places are found.
	(reftex-extract-bib-entries-from-thebibliography): Remove
	superfluous backslash.

2010-10-16  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el
	(reftex-extract-bib-entries-from-thebibliography): Use
	`with-current-buffer'.

2010-09-14  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-do-citation): Make it possible again
	to insert non-existent entries.

2010-01-30  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-syntax-table-for-bib, reftex-mode):
	Do not derive `reftex-syntax-table-for-bib' from
	`reftex-syntax-table' because parens have to retain their paren
	syntax in order for parsing of BibTeX entries like @book(...) to
	work.

2009-09-12  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-label-alist): Doc fix.

	* lisp/reftex-toc.el (reftex-re-enlarge): Call `enlarge-window'
	only if there is something to do because in Emacs the horizontal
	version throws an error even if the parameter is 0.

2009-08-08  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-index.el: Suppress byte-compiler warnings.  Move
	provide statement to end of file.

	* lisp/reftex-dcr.el: Suppress byte-compiler warnings.  Move
	provide statement to end of file.

	* lisp/reftex-auc.el: Suppress byte-compiler warnings.

	* doc/reftex.texi (Imprint): Mention Wolfgang in list of
	contributors.

	* lisp/reftex-vars.el (reftex-plug-into-AUCTeX): Doc fix.

2009-07-05  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi (Creating Citations): Give a hint about how to
	auto-revert the BibTeX database file when using external editors.

	* lisp/reftex-cite.el (reftex-do-citation): Save match data when
	asking for optional arguments.

2009-04-29  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-in-comment): Do not error out if
	`comment-start-skip' is not set.

2009-03-01  Wolfgang Mayer  <wmayer7@gmail.com>

	* lisp/reftex-cite.el (reftex-all-used-citation-keys):
	Fix regexp to correctly extract all citations in the same line.

2008-12-29  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-vref-is-default)
	(reftex-fref-is-default): Adapt doc string.
	(reftex-ref-style-default-list): New name for
	`reftex-ref-style-active-list'.  Use :set instead of :repeat.
	(reftex-vref-is-default, reftex-fref-is-default): Adapt to new
	name.

	* lisp/reftex-base.el (reftex-tie-multifile-symbols): Add doc
	string.
	(reftex-tie-multifile-symbols): Initialize
	`reftex-ref-style-list'.
	(reftex-untie-multifile-symbols): Add doc string.
	(reftex-add-index-macros): Doc fix.
	(reftex-ref-style-activate, reftex-ref-style-toggle)
	(reftex-ref-style-list): New functions.
	(reftex-mode-menu): Use them.

	* lisp/reftex-sel.el (reftex-select-cycle-ref-style-internal): Use
	`reftex-ref-style-list' function.

	* lisp/reftex-ref.el (reftex-reference): Use
	`reftex-ref-style-list' function.

	* doc/reftex.texi (Referencing Labels): Simplify section about
	reference macro cycling.
	(Reference Styles, Options (Referencing Labels)): Adapt to changed
	implementation.

2008-12-18  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-in-comment): Deal correctly with
	escaped comment characters.

2008-11-30  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-ref-style-alist): Change structure
	so that it is not possible to use multiple different package names
	within a style.
	(reftex-ref-style-active-list): Adapt to new structure of
	`reftex-ref-style-alist'.

	* lisp/reftex-sel.el (reftex-select-cycle-active-ref-styles):
	Remove.
	(reftex-select-cycle-ref-style-internal): Adapt to new structure
	of `reftex-ref-style-alist'.

	* lisp/reftex-ref.el: Adapt creation of `reftex-<package>-<macro>'
	functions to new structure of `reftex-ref-style-alist'.
	(reftex-reference): Adapt to new structure of
	`reftex-ref-style-alist'.

	* lisp/reftex-base.el (reftex-mode-menu): Adapt to new structure
	of `reftex-ref-style-alist'.

	* doc/reftex.texi (Options (Referencing Labels)): Adapt to new
	structure of `reftex-ref-style-alist'.

2008-10-16  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi (Referencing Labels, Reference Styles): Document
	changes in the referencing functionality.

2008-10-15  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-ref-style-alist): Remove the symbols
	for symbols for macro type distinction.  Add characters for macro
	selection.
	(reftex-ref-macro-prompt): New variable.

	* lisp/reftex-sel.el (reftex-select-cycle-ref-style-internal):
	Remove code for testing macro type.
	(reftex-select-toggle-numref-pageref): Remove.
	(reftex-select-label-map): Remove binding for
	`reftex-select-toggle-numref-pageref'.

	* lisp/reftex-ref.el (reftex-reference): Prompt for a reference
	macro if `reftex-ref-macro-prompt' is non-nil.

	* lisp/reftex-base.el (reftex-select-with-char): Kill the RefTeX
	Select buffer when done.

2008-06-07  David Kastrup  <dak@gnu.org>

	* lisp/reftex-base.el (reftex-remove-if): Improve performance.

2008-06-07  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-get-string-refs): Use a regexp
	alternative for better performance.

	* doc/reftex.texi (Commands): Mention options for definition of
	header and footer in BibTeX files.
	(Options (Creating Citations)): Document
	`reftex-create-bibtex-header' and `reftex-create-bibtex-footer'.

	* lisp/reftex-cite.el (reftex-stringref-p): Remove.
	(reftex-get-string-refs): Do without `reftex-stringref-p' and use
	`reftex-remove-if' instead of the cl-based `remove-if'.
	(reftex-create-bibtex-file): Doc fix.

	* lisp/reftex-base.el (reftex-remove-if): New function.

2008-06-07  Wolfgang Mayer  <wmayer7@gmail.com>

	* lisp/reftex-vars.el (reftex-create-bibtex-header)
	(reftex-create-bibtex-footer): New variables.

	* lisp/reftex-cite.el (reftex-parse-bibtex-entry): Accept
	additional optional argument `raw' and keep quotes or braces if it
	is non-nil.
	(reftex-stringref-p, reftex-get-string-refs): New functions.
	(reftex-create-bibtex-file): Include entries that are
	cross-referenced from cited entries.  Include @String definitions
	in the resulting bib file.  Add header and footer defined in
	`reftex-create-bibtex-header' and `reftex-create-bibtex-footer'.

2008-05-03  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-parse.el (reftex-parse-from-file): Move backward one
	char if a `\' was matched after a section macro.

	* lisp/reftex-global.el (reftex-isearch-switch-to-next-file): Use
	`reverse' instead of `nreverse' and `copy-list' in order to make
	the byte compiler happy.  Get rid of unused `orig-flist' variable.

	* lisp/reftex-base.el (reftex-compile-variables): Revert last
	change.  Match `\' after a section macro.
	(reftex-mapconcat-with-predicate): Remove.

2008-04-13  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-mapconcat-with-predicate): New
	function.
	(reftex-compile-variables): Use it.  Treat environments and macros
	differently in the regexp for section matching.

	* lisp/reftex-parse.el (reftex-parse-from-file): Use beginning of
	match instead of end as bound.

	* lisp/reftex-sel.el (reftex-select-label-map): Changing binding
	of reference style toggling to ""s"" which is not already taken.

	* doc/reftex.texi (Reference Styles): Reflect change in key
	binding for toggling reference styles.  Some minor changes.

2008-03-27  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el: Some whitespace, doc and checkdoc fixes.

2008-03-16  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-index.el (reftex-index-selection-or-word): Use
	`reftex-region-active-p'.
	(reftex-index-show-entry)
	(reftex-index-initialize-phrases-buffer)
	(reftex-index-phrases-apply-to-region): Sync with Emacs trunk.

	* lisp/reftex-dcr.el (reftex-start-itimer-once): Silence the byte
	compiler.

	* lisp/reftex-auc.el: Move `provide' call to bottom of file.

	* lisp/reftex-base.el: Require easymenu and define autoloads
	earlier to avoid compiler warnings.
	(reftex-region-active-p, reftex-select-with-char)
	(reftex-show-commentary): Sync with version in Emacs trunk.
	(reftex-make-overlay, reftex-overlay-put, reftex-move-overlay)
	(reftex-delete-overlay): Define in a way which hides the XEmacs
	symbols from the byte compiler.
	(reftex-info): Silence the byte compiler.  Use `reftex.info'
	instead of `reftex' in order to get the correct file.

2008-03-07  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-extract-bib-entries): Check if
	BibTeX file changed on disk and ask if it should be reread in case
	it did.

2008-03-02  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi: Lots of small fixes.
	(Reference Styles): New section.
	(varioref (LaTeX package), fancyref (LaTeX package)): Remove.
	(Options (Referencing Labels)): Remove descriptions of deprecated
	variables `reftex-vref-is-default' and `reftex-fref-is-default'.
	Add descriptions for `reftex-ref-style-alist' and
	`reftex-ref-style-active-list'.
	(Referencing Labels): Update regarding reference styles.

2008-02-17  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-ref.el (reftex-format-special): Add third argument
	for refstyle possible to be passed, making the byte compiler
	happy.
	(reftex-reference): Pass refstyle to `reftex-format-special'.

	* lisp/reftex-vars.el (reftex-ref-style-active-list): Make
	creation of type compatible with Emacs 21.
	(reftex-format-ref-function): Mention third argument of special
	format function.

	* lisp/reftex-base.el (reftex-mode-menu): Make creation of
	Reference Style menu compatible with Emacs 21.

	* doc/reftex.texi: Fix some typos.

2008-01-27  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-ref-style-active-list): Doc fix.

	* lisp/reftex-base.el (reftex-erase-all-selection-and-index-buffers)
	(reftex-access-parse-file): Use `mapc' instead of `mapcar' where
	return value is not used.

	* lisp/reftex-ref.el (reftex-offer-label-menu): Use `mapc' instead
	of `mapcar' where return value is not used.

	* lisp/reftex-sel.el (reftex-select-item, reftex-select-unmark):
	Use `mapc' instead of `mapcar' where return value is not used.

	* lisp/reftex-vars.el (reftex-ref-style-alist)
	(reftex-ref-style-active-list): New variables.
	(reftex-vref-is-default, reftex-fref-is-default): Adapt doc string
	to new implementation.  Mark as obsolete.  Add compatibility code
	for honoring the variable values in case they are set.

	* lisp/reftex-base.el (reftex-mode-menu): Reference styles are now
	computed from `reftex-ref-style-alist'.  Fix typo.

	* lisp/reftex-ref.el (reftex-reference): Determine reference macro
	by looking at `reftex-ref-style-active-list' and
	`reftex-ref-style-alist'.  Use only one special format function.
	(reftex-varioref-vref, reftex-fancyref-fref)
	(reftex-fancyref-Fref): Remove definitions.  The functions are now
	generated from `reftex-ref-style-alist'.
	(reftex-format-vref, reftex-format-Fref, reftex-format-fref):
	Remove.
	(reftex-format-special): New function.

	* lisp/reftex-sel.el (reftex-select-toggle-varioref)
	(reftex-select-toggle-fancyref): Remove.
	(reftex-select-cycle-active-ref-styles)
	(reftex-select-cycle-ref-style-internal)
	(reftex-select-cycle-ref-style-forward)
	(reftex-select-cycle-ref-style-backward)
	(reftex-select-toggle-numref-pageref): New functions.
	(reftex-select-label-map): Use `v' and `V' for general cycling
	through reference styles.  Add `p' for switching between number
	and page reference types.

2008-01-06  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-pop-to-bibtex-entry)
	(reftex-extract-bib-entries-from-thebibliography): Match \bibitem
	entries with spaces or tabs in front of arguments.
	(reftex-insert-bib-matches): Use `mapc' instead of `mapcar'
	because return value is not used.

2008-01-05  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-toc.el (reftex-make-separate-toc-frame): Hide
	non-operational call to `focus-frame' in Emacs for the compilers's
	sake.

2008-01-03  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-dcr.el (reftex-mouse-view-crossref): Explain why
	point is set.

	* lisp/reftex-toc.el (reftex-toc-do-promote): Use `mapc' instead
	of `mapcar' because return value is not used.
	(reftex-toggle-auto-toc-recenter): Fix typo.

	* lisp/reftex-cite.el (reftex-do-citation): Use `mapc' instead of
	`mapcar' because return value is not used.

2007-10-10  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-cite-format-builtin)
	(reftex-bibliography-commands): Add support for ConTeXt.

	* doc/reftex.texi (Citation Styles): Mention support for ConTeXt.

2007-08-23  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi (Options (Defining Label Environments)): Fix
	typo.

2007-07-22  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-set-cite-format): Autoload.
	(reftex-access-parse-file): Create parse file in a way that does
	not interfere with recentf mode.
	(reftex-access-parse-file): Do not risk destroying an existing
	buffer.

2007-07-07  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-parse.el (reftex-nth-arg): Use `forward-comment'
	instead of `comment-forward'.  The latter is not always available
	and the former is sufficient for LaTeX.
	(reftex-nth-arg): Revert last change since moving over whitespace
	and comments is done by `reftex-move-to-next-arg'.

2007-05-20  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi (Citation Styles): Correct some mistakes.

2007-04-03  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el: Delete trailing whitespace.
	(reftex-pop-to-bibtex-entry, reftex-extract-bib-entries)
	(reftex-parse-bibtex-entry, reftex-create-bibtex-file): Match
	entries containing numbers and symbol constituents.

2007-03-28  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi: Replace BibTeX by @BibTeX{} throughout the
	file.

2007-03-12  John Paul Wallington  <jpw@pobox.com>

	* lisp/reftex-vars.el (reftex-format-ref-function)
	(reftex-format-cite-function): Fix custom type.

2007-03-10  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el: Remove information in comment already in
	imprint or cluttering output of `finder-commentary'.
	Require reftex.el.

	* lisp/reftex.el: Remove.  Now generated from reftex.el.in.

	* lisp/reftex-dcr.el: Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-global.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-index.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-parse.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-ref.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-sel.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-toc.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-vars.el Remove version info in header.  Add
	maintainer info.

2007-03-08  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi: Include macros.texi and version.texi.  Change
	maintainer and version information.  Express TeX, LaTeX, AUCTeX
	and RefTeX with macros.
	(Imprint): Change maintainer information.

2007-03-04  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex.el: Update.

	* lisp/reftex-base.el (reftex-show-commentary): Look in
	reftex-base.el.
	(reftex-report-bug): New function.

	* lisp/reftex.el: Move original content to reftex-base.el.  Add
	new header and automatically generated autoloads.

	* lisp/reftex-base.el: New file.  Insert original content of
	reftex.el.  Remove autoload for `reftex-index-phrases-mode'.
	Delete trailing whitespace.

2007-02-26  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-index.el (reftex-index-visit-phrases-buffer): Set
	marker when visiting buffer.  This allows for returning from the
	phrases file to the file one was just editing instead of the file
	where the last phrases was added from.

2007-02-25  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-index.el (reftex-index-phrases-syntax-table): New
	variable.  Give ?\"" punctuation syntax as it usually is not used
	as string quote in TeX-related modes and may occur unmatched.  The
	change also prevents fontification of quoted content.
	(reftex-index-phrases-mode): Use it.

	* lisp/reftex-cite.el (reftex-parse-bibtex-entry): Match fields
	containing hyphens (besides word constituents).

2007-02-25  David Kastrup  <dak@gnu.org>

	* lisp/reftex.el (reftex-uniquify, reftex-uniquify-by-car):
	Replace O(n^2) algorithms with O(n log n).  Introduce optional
	argument SORT (not yet used).  TODO: figure out callers that can
	specify SORT, in order to further speed this up.

2007-02-25  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-cite-key-separator): New variable.

	* lisp/reftex-auc.el (reftex-arg-cite): Use
	`reftex-cite-key-separator'.

	* lisp/reftex-cite.el (reftex-do-citation)
	(reftex-figure-out-cite-format): Use `reftex-cite-key-separator'.

	* doc/reftex.texi (Options (Creating Citations)): Document
	`reftex-cite-key-separator'.

	* lisp/reftex-cite.el (reftex-do-citation): Return all keys, not
	just the first one.

	* lisp/reftex-auc.el (reftex-arg-cite): Correctly handle new
	value type returned by `reftex-citation'.

2007-02-24  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi: Set correct filename for standalone
	distribution.

2007-02-07  Ralf Angeli  <angeli@caeruleus.net>

	Create `reftex' module.
"
aba027e80c6d2776d7ec35747308367351871e98,kfowler/emacs,"* dired.c (Fsystem_groups): Remove unused local.
"
e9a9ae0350689d352c2bdfa3af0eb722f587b966,kfowler/emacs,"EMACS_TIME simplification (Bug#11875).

This replaces macros (which typically do not work in GDB)
with functions, typedefs and enums, making the code easier to debug.
The functional style also makes code easier to read and maintain.
* lib-src/profile.c (TV2): Remove no-longer-needed static var.
* src/systime.h: Include <sys/time.h> on all hosts, not just if
WINDOWSNT, since 'struct timeval' is needed in general.
(EMACS_TIME): Now a typedef, not a macro.
(EMACS_TIME_RESOLUTION, LOG10_EMACS_TIME_RESOLUTION): Now constants,
not macros.
(EMACS_SECS, EMACS_NSECS, EMACS_TIME_SIGN, EMACS_TIME_VALID_P)
(EMACS_TIME_FROM_DOUBLE, EMACS_TIME_TO_DOUBLE, EMACS_TIME_EQ)
(EMACS_TIME_NE, EMACS_TIME_GT, EMACS_TIME_GE, EMACS_TIME_LT)
(EMACS_TIME_LE): Now functions, not macros.
(EMACS_SET_SECS, EMACS_SET_NSECS, EMACS_SET_SECS_NSECS)
(EMACS_SET_USECS, EMACS_SET_SECS_USECS): Remove these macros,
which are not functions.  All uses rewritten to use:
(make_emacs_time): New function.
(EMACS_SECS_ADDR, EMACS_SET_INVALID_TIME, EMACS_GET_TIME)
(EMACS_ADD_TIME, EMACS_SUB_TIME): Remove these macros, which are
not functions.  All uses rewritten to use the following, respectively:
(emacs_secs_addr, invalid_emacs_time, get_emacs_time)
(add_emacs_time, sub_emacs_time): New functions.
* src/atimer.c: Don't include <sys/time.h>,	as ""systime.h"" does this.
* src/fileio.c (Fcopy_file):
* src/xterm.c (XTflash): Get the current time closer to when it's used.
* src/makefile.w32-in ($(BLD)/atimer.$(O)): Update dependencies.
"
134643946085b24a695d73b3d8f7af5aa23602aa,kfowler/emacs,"Overflow, signedness and related fixes for images.

* dispextern.h (struct it.stack[0].u.image.image_id)
(struct_it.image_id, struct image.id, struct image_cache.size)
(struct image_cache.used, struct image_cache.ref_count):
* gtkutil.c (update_frame_tool_bar):
* image.c (x_reference_bitmap, Fimage_size, Fimage_mask_p)
(Fimage_metadata, free_image_cache, clear_image_cache, lookup_image)
(cache_image, mark_image_cache, x_kill_gs_process, Flookup_image):
* nsmenu.m (update_frame_tool_bar):
* xdisp.c (calc_pixel_width_or_height):
* xfns.c (image_cache_refcount):
Image IDs are now ptrdiff_t, not int, to avoid arbitrary limits
on typical 64-bit hosts.

* image.c (RANGED_INTEGERP, TYPE_RANGED_INTEGERP): New macros.
(x_bitmap_pixmap, x_create_x_image_and_pixmap):
Omit unnecessary casts to int.
(parse_image_spec): Check that integers fall into 'int' range
when the callers expect that.
(image_ascent): Redo ascent calculation to avoid int overflow.
(clear_image_cache): Avoid overflow when sqrt (INT_MAX) < nimages.
(lookup_image): Remove unnecessary tests.
(xbm_image_p): Locals are now of int, not EMACS_INT,
since parse_image_check makes sure they fit into int.
(png_load, gif_load, svg_load_image):
Prefer int to unsigned where either will do.
(tiff_handler): New function, combining the cores of the
old tiff_error_handler and tiff_warning_handler.  This
function is rewritten to use vsnprintf and thereby avoid
stack buffer overflows.  It uses only the features of vsnprintf
that are common to both POSIX and native Microsoft.
(tiff_error_handler, tiff_warning_handler): Use it.
(tiff_load, gif_load, imagemagick_load_image):
Don't assume :index value fits in 'int'.
(gif_load): Omit unnecessary cast to double, and avoid double-rounding.
(imagemagick_load_image): Check that crop parameters fit into
the integer types that MagickCropImage accepts.  Don't assume
Vimagemagick_render_type has a nonnegative value.  Don't assume
size_t fits in 'long'.
(gs_load): Use printmax_t to print the widest integers possible.
Check for integer overflow when computing image height and width.
"
620f13b0612810324592ab2d2b4e5a5dab27f981,kfowler/emacs,"Use ASCII tests for character types.

* admin/merge-gnulib (GNULIB_MODULES): Add c-ctype.
* lwlib/lwlib-Xaw.c, lwlib/lwlib.c, lwlib/xlwmenu.c:
Don't include <ctype.h>; no longer needed.
* lwlib/lwlib-Xaw.c (openFont):
* lwlib/xlwmenu.c (openXftFont): Test just for ASCII digits.
* src/category.c, src/dispnew.c, src/doprnt.c, src/editfns.c, src/syntax.c
* src/term.c, src/xfns.c, src/xterm.c:
Don't include <ctype.h>; was not needed.
* src/charset.c, src/doc.c, src/fileio.c, src/font.c, src/frame.c:
* src/gtkutil.c, src/image.c, src/sysdep.c, src/xfaces.c:
Include <c-ctype.h> instead of <ctype.h>.
* src/nsterm.m: Include <c-ctype.h>.
* src/charset.c (read_hex):
* src/doc.c (Fsnarf_documentation):
* src/fileio.c (IS_DRIVE) [WINDOWSNT]:
(DRIVE_LETTER) [DOS_NT]:
(Ffile_name_directory, Fexpand_file_name)
(Fsubstitute_in_file_name):
* src/font.c (font_parse_xlfd, font_parse_fcname):
* src/frame.c (x_set_font_backend):
* src/gtkutil.c (xg_get_font):
* src/image.c (xbm_scan, xpm_scan, pbm_scan_number):
* src/nsimage.m (hexchar):
* src/nsterm.m (ns_xlfd_to_fontname):
* src/sysdep.c (system_process_attributes):
* src/xfaces.c (hash_string_case_insensitive):
Use C-locale tests instead of locale-specific tests for character
types, since we want the ASCII interpretation here, not the
interpretation suitable for whatever happens to be the current locale.
"
62aba0d4973c5cba7ac7c387bbe133e0e3061c5c,kfowler/emacs,"Support x64 build on MS-Windows with MSVC.

 src/w32term.h (SCROLL_BAR_PACK, SCROLL_BAR_UNPACK): Define for x64.
 (SET_SCROLL_BAR_W32_WINDOW): Cast ID to intptr_t, for
 compatibility with x64.
 src/w32term.c (w32_draw_underwave): Don't use GCC extensions for
 defining an XRectangle structure.
 src/w32proc.c (RVA_TO_PTR, w32_executable_type): Fix pointer
 arithmetics for compatibility with x64.
 src/w32menu.c (add_menu_item): Use UINT_PTR instead of UINT, for
 compatibility with x64.
 src/w32heap.h: Adjust prototypes and declarations.
 src/w32heap.c (RVA_TO_PTR, allocate_heap, sbrk, init_heap)
 (round_heap): Use DWORD_PTR, ptrdiff_t and size_t instead of
 DWORD, long, and unsigned long, for compatibility with x64.
 (allocate_heap) [_WIN64]: Reserve 32GB of memory.
 (sbrk): Argument is now of type ptrdiff_t.
 src/w32fns.c (HMONITOR): Condition declaration on _WIN32_WINNT being
 less than 0x0500.
 (w32_msg_pump): Use WPARAM type for 'result'.
 src/w32.c (init_environment, get_emacs_configuration): Support AMD64
 architecture.
 (init_ntproc): Cast arguments of _open_osfhandle to intptr_t, for
 compatibility with x64.
 src/vm-limit.c (lim_data): Now size_t.
 (check_memory_limits): Adjust prototypes of real_morecore and
 __morecore to receive argument of type ptrdiff_t.  Use size_t for
 five_percent and data_size.
 src/unexw32.c: Use DWORD_PTR instead of DWORD for file-scope
 variables, for compatibility with x64.
 (rva_to_section, offset_to_section, relocate_offset)
 (OFFSET_TO_RVA, RVA_TO_OFFSET, RVA_TO_SECTION_OFFSET)
 (PTR_TO_RVA, RVA_TO_PTR, OFFSET_TO_PTR, get_section_info)
 (copy_executable_and_dump_data): Use DWORD_PTR instead of DWORD
 for compatibility with x64.
 src/sysdep.c (STDERR_FILENO): Define if not already defined.
 src/ralloc.c (real_morecore): Argument type is now ptrdiff_t.
 (__morecore): Argument type is now ptrdiff_t.
 (ROUNDUP, MEM_ROUNDUP): Use size_t instead of 'unsigned long'.
 (relinquish): Use ptrdiff_t type for 'excess'.
 (r_alloc_sbrk): Argument type is now ptrdiff_t.
 src/makefile.w32-in (HEAPSIZE): Get value from EMACS_HEAPSIZE.
 (bootstrap-temacs-CMD, bootstrap-temacs-SH): Use $(EMACS_PURESIZE)
 instead of a literal number.
 src/gmalloc.c [WINDOWSNT]: Include w32heap.h.
 (min): Define only if not already defined.
 src/frame.c (x_report_frame_params): Use EMACS_UINT for the return
 value of FRAME_X_WINDOW, to fit a 64-bit pointer on 64-bit Windows
 hosts.
 src/image.c (x_bitmap_pixmap): Return ptrdiff_t, not int, since
 'bitmaps' is a pointer.
 src/dispextern.h (x_bitmap_pixmap): Adjust prototype.
 src/alloc.c (gdb_make_enums_visible): Now conditional on __GNUC__.

 nt/makefile.w32-in ($(TRES)): Use $(EMACS_MANIFEST).
 nt/inc/sys/socket.h: Don't map Winsock error codes to standard ones
 that are already defined.
 nt/inc/ms-w32.h (EMACS_INT, EMACS_UINT, EMACS_INT_MAX, PRIuMAX)
 (pI, _INTPTR) [_MSC_VER]: Fix definitions for MSVC.
 [_MSC_VER]: Add pragmas to suppress some MSVC warnings.
 nt/preprep.c (pfnCheckSumMappedFile, rva_to_section)
 (offset_to_section, relocate_offset, OFFSET_TO_RVA)
 (RVA_TO_OFFSET, RVA_TO_SECTION_OFFSET, PTR_TO_RVA)
 (OFFSET_TO_PTR, ROUND_UP, ROUND_DOWN)
 (copy_executable_and_move_sections, ADJUST_IMPORT_RVA, main): Use
 DWORD_PTR instead of DWORD for compatibility with x64.
 nt/nmake.defs: Support AMD64.
 (EMACS_HEAPSIZE, EMACS_PURESIZE, EMACS_MANIFEST): New macros.
 nt/gmake.defs: (EMACS_HEAPSIZE, EMACS_PURESIZE, EMACS_MANIFEST):
 New macros.
 nt/addsection.c (pfnCheckSumMappedFile, rva_to_section)
 (offset_to_section, relocate_offset, OFFSET_TO_RVA)
 (RVA_TO_OFFSET, RVA_TO_SECTION_OFFSET, PTR_TO_RVA)
 (OFFSET_TO_PTR, ROUND_UP, ROUND_DOWN)
 (copy_executable_and_add_section, main): Use DWORD_PTR instead of
 DWORD, for compatibility with x64.
 nt/emacs-x64.manifest: New file.
 nt/emacs-x86.manifest: Renamed from emacs.manifest.

 lib-src/ntlib.c (gettimeofday): Copy from src/w32.c.  lib/gettime. 
 needs this function.
"
123ddec7f807f4bd7400bbbe08219afb02269c00,kfowler/emacs,"Simplify use of current-time and friends.

* doc/misc/org.texi (Dynamic blocks):
* lisp/allout-widgets.el (allout-widgets-hook-error-handler):
* lisp/calendar/appt.el (appt-display-message):
* lisp/calendar/icalendar.el (icalendar--convert-float-to-ical):
* lisp/calendar/timeclock.el (timeclock-in, timeclock-when-to-leave)
(timeclock-last-period, timeclock-day-base):
* lisp/eshell/em-ls.el (eshell-ls-file):
* lisp/eshell/esh-util.el (eshell-parse-ange-ls):
* lisp/generic-x.el (named-database-print-serial):
* lisp/net/newst-backend.el (newsticker--get-news-by-url-callback)
(newsticker-get-news, newsticker--sentinel-work)
(newsticker--image-get, newsticker--image-sentinel):
* lisp/net/tramp-sh.el (tramp-get-remote-touch):
* lisp/progmodes/opascal.el (opascal-debug-log):
* lisp/textmodes/remember.el (remember-mail-date)
(remember-store-in-files):
* lisp/vc/vc-annotate.el (vc-annotate-display-autoscale)
(vc-default-annotate-current-time):
* lisp/vc/vc-bzr.el (vc-bzr-shelve-snapshot):
* lisp/vc/vc-cvs.el (vc-cvs-annotate-current-time):
* lisp/vc/vc-rcs.el (vc-rcs-annotate-current-time):
* lisp/url/url-util.el (url-get-normalized-date):
* lisp/erc/erc-backend.el (TOPIC):
* lisp/gnus/gnus-delay.el (gnus-delay-article):
* lisp/gnus/gnus-sum.el (gnus-summary-read-document):
* lisp/gnus/gnus-util.el (gnus-seconds-today, gnus-seconds-month):
* lisp/gnus/message.el (message-make-expires-date):
* lisp/org/org-archive.el (org-archive-subtree)
(org-archive-to-archive-sibling):
* lisp/org/org-clock.el (org-resolve-clocks, org-clock-get-sum-start)
(org-clock-special-range):
* lisp/org/org-timer.el (org-timer-seconds):
* lisp/org/org.el (org-read-date-analyze, org-get-cursor-date):
* lisp/org/ox-html.el (org-html-format-spec):
* lisp/org/ox-icalendar.el (org-icalendar--vtodo):
Omit unnecessary call to current-time.
* lisp/calendar/time-date.el (time-to-seconds) [!float-time]:
* lisp/calendar/timeclock.el (timeclock-time-to-date):
* lisp/vc/vc-annotate.el (vc-annotate-convert-time):
Use current time if arg is nil, to be compatible with float-time.
(time-date--day-in-year): New function, with most of the guts of
the old time-to-day-in-year.
(time-to-day-in-year): Use it.
(time-to-days): Use it, to avoid decoding the same time stamp twice.
* lisp/calendar/timeclock.el (timeclock-update-mode-line):
* lisp/cedet/srecode/args.el (srecode-semantic-handle-:time):
* lisp/gnus/gnus-util.el (gnus-seconds-year):
* lisp/org/org.el (org-get-cursor-date):
Don't call current-time twice to get the current time stamp,
as this can lead to inconsistent results.
* lisp/completion.el (cmpl-hours-since-origin):
* lisp/erc/erc.el (erc-emacs-time-to-erc-time):
* lisp/ido.el (ido-time-stamp):
* lisp/vc/vc-annotate.el (vc-annotate-convert-time):
Simplify by using float-time.
* lisp/completion.el (save-completions-to-file):
* lisp/url/url-cache.el (url-cache-prune-cache):
Rename local var to avoid confusion.
* lisp/gnus/gnus-util.el (gnus-float-time):
* lisp/net/rcirc.el (rcirc-float-time):
* lisp/org/org-compat.el (org-float-time):
Simplify to an alias because time-to-seconds now behaves like float-time
with respect to nil arg.
* lisp/subr.el (progress-reporter-do-update):
Don't call float-time unless needed.
* lisp/erc/erc.el (erc-current-time): Simplify by using erc-emacs-time-to-erc-time.
* lisp/org/org-clock.el (org-clock-get-table-data): Omit unnecessary, lossy
conversion from floating point to Emacs time and back.
(org-resolve-clocks): Prefer two-argument floor.
"
5a1131d937c324c070173482a8d7d47e3b3c79b0,kfowler/emacs,"Adapt the MS-DOS build to the latest configury changes.

 msdos/sed1v2.inp: In the recipe for $(leimdir)/leim-list.el, edit the
 prerequisites to be ""temacs$(EXEEXT) $(BOOTSTRAPEMACS)"", to avoid
 the need to rebuild $(bootstrap_exe), which requires a Unixy shell
 via lisp/Makefile.in's ""update-subdirs"" command.
 msdos/sedlibmk.inp (am_libgnu_a_OBJECTS): Adjust the removal of
 careadlinkat.$(OBJEXT) to the changes in lib/Makefile.in.
 msdos/sed2v2.inp (DATA_START, GC_SETJMP_WORKS, HAVE_MENUS)
 (HAVE_MOUSE): Edit for DJGPP, according to what was previously
 done on src/s/msdos.h.
 msdos/gmalloc.c (GMALLOC_INHIBIT_VALLOC): Don't reference.
 src/s/msdos.h (BSD_SYSTEM, DATA_START, GC_SETJMP_WORKS, HAVE_MOUSE)
 (HAVE_MENUS): Don't define, defined by editing config.in with
 msdos/sed2v2.inp.
 (GMALLOC_INHIBIT_VALLOC): Don't define.
 (MODE_LINE_BINARY_TEXT): Remove, not used anymore.
"
1ddc2bd6ff0b5071454d2591f835927ea5b85a06,kfowler/emacs,"Simplify data_start configuration.

This is a followon simplification to the fix for Bug#13650.
* admin/CPP-DEFINES (DATA_START, ORDINARY_LINK): Remove.
* configure.ac (CRT_DIR, LIB_STANDARD, START_FILES, DATA_START)
(LD_FIRSTFLAG, ORDINARY_LINK, LIB_GCC): Remove.
(AC_CHECK_HEADERS_ONCE): Remove sys/resource.h, as it's
not always needed.
(HAVE_DATA_START): New macro.
* etc/PROBLEMS (LIBS_SYSTEM, LIBS_MACHINE, LIBS_STANDARD): Remove.
Remove legacy-systems section, as this stuff is no longer
applicable with current linking strategies.
* src/Makefile.in (LD_FIRSTFLAG, LIB_GCC, CRT_DIR, LIB_STANDARD)
(START_FILES): Remove.  All uses removed.
(otherobj): Remove $(VMLIMIT_OBJ), as it's now first.
(ALLOBJS): Move here from autodeps.mk, and with VMLIMITS_OBJ first.
(buildobj.h): Use it.
($(ALLOBJS)): Depend on globals.h.
(temacs$(EXEEXT)): Use $(ALLOBJS).
* src/autodeps.mk (ALLOBJS): Move to Makefile.in.
* src/deps.mk (vm-limit.o):
* src/makefile.w32-in ($(BLD)/vm-limit.$(O)):
Do not depend on mem-limits.h.
* src/emacs.c (__do_global_ctors, __do_global_ctors_aux)
(__do_global_dtors, __CTOR_LIST__, __DTOR_LIST__)
[__GNUC__ && !ORDINARY_LINK]: Remove.
* src/mem-limits.h, src/pre-crt0.c: Remove.
* src/unexaix.c, src/unexcoff.c: Don't include mem-limits.h.
* src/unexcoff.c (etext): New decl.
(make_hdr): Use it instead of start_of_data.
* src/vm-limit.c: Move most of mem-limits.h's contents here.
(data_start): New decl.  It's OK if this is approximate,
so simplify-away some unnecessary exactness.
(POINTER): Remove; all uses removed.
(data_space_start): Now char *, to avoid casts.
(exceeds_lisp_ptr): New function, replacing the old
EXCEEDS_LISP_PTR macro.  All uses changed.
(check_memory_limits): Simplify and remove casts.
(start_of_data) [!CANNOT_DUMP || !SYSTEM_MALLOC]: Remove.
(memory_warnings): Use data_start instead of start_of_data.

Fixes: debbugs:13783
"
9d9e48d9041bf039d873b23484301acca52972e9,kfowler/emacs,"Rewrite and rename diff-delete-trailing-whitespace.

* lisp/vc/diff-mode.el (diff-delete-trailing-whitespace): Rewrite, and
rename from diff-remove-trailing-whitespace (Bug#12831).

* files.texi (Diff Mode): Doc fixes for
diff-delete-trailing-whitespace.
"
bcd77a2ba0298c8551fef7c08b001a0f0517bac3,kfowler/emacs,"Remove HAVE_MOUSE; see https://lists.gnu.org/archive/html/emacs-devel/2012-10/msg00403.html.

* configure.ac (HAVE_MOUSE): Remove.
* admin/CPP-DEFINES (HAVE_MOUSE): Remove.
* msdos/sed2v2.inp (HAVE_MOUSE): Remove.
* nt/config.nt (HAVE_MOUSE): Remove.
* src/keyboard.c (HAVE_MOUSE):
* src/frame.c (HAVE_MOUSE): Remove, and rewrite code as if HAVE_MOUSE
were always defined.
"
42f051946e70bb5e6ad407b85d003040d9ba5006,kfowler/emacs,"cleanups. tentative webkit lisp interface, but i got annoyed now with the primitives.
"
c990426a9883c1bd1782e6b117184b654eecda67,kfowler/emacs,"Simplify, document, and port floating-point.

The porting part of this patch fixes bugs on non-IEEE platforms
with frexp, ldexp, logb.
* admin/CPP-DEFINES (HAVE_CBRT, HAVE_LOGB, logb): Remove.
* configure.ac (logb, cbrt): Do not check for these functions,
as they are not being used.
* doc/lispref/numbers.texi (Float Basics, Arithmetic Operations, Math Functions):
Document that / and mod (with floating point arguments), along
with asin, acos, log, log10, expt and sqrt, return special values
instead of signaling exceptions.
(Float Basics): Document that logb operates on the absolute value
of its argument.
(Math Functions): Document that (log ARG BASE) also returns NaN if
BASE is negative.  Document that (expt X Y) returns NaN if X is a
finite negative number and Y a finite non-integer.
* etc/NEWS: Document NaNs versus signaling-error change.
* src/data.c, src/lisp.h (Qdomain_error, Qsingularity_error, Qunderflow_error):
Now static.
* src/floatfns.c: Simplify discussion of functions that Emacs doesn't
support, by removing commented-out code and briefly listing the
C89 functions excluded.  The commented-out stuff was confusing
maintenance, e.g., we thought we needed cbrt but it was commented out.
(logb): Remove decl; no longer needed.
(isfinite): New macro, if not already supplied.
(isnan): Don't replace any existing macro.
(Ffrexp, Fldexp): Define even if !HAVE_COPYSIGN, as frexp and ldexp
are present on all C89 platforms.
(Ffrexp): Do not special-case zero, as frexp does the right thing
for that case.
(Flogb): Do not use logb, as it doesn't have the desired meaning
on hosts that use non-base-2 floating point.  Instead, stick with
frexp, which is C89 anyway.  Do not pass an infinity or a NaN to
frexp, to avoid getting an unspecified result.
"
36cac3209313d849f3eef6e4c7278eb018817e23,kfowler/emacs,"* net/tramp-cache.el (tramp-flush-file-function): Simplify check.
Suppress debug messages.

* net/tramp.el (tramp-file-name-handler):
* net/tramp-gvfs.el (tramp-gvfs-url-file-name): Apply `cons' where
appropriate.
"
49238e7f5c081b841bdc57d96599c4997dcb487c,kfowler/emacs,"Make unused variable font-list-limit obsolete, and move it out of C.

* display.texi (Font Lookup): Remove font-list-limit.

* lisp/startup.el (command-line):
* lisp/cus-start.el: Don't refer to font-list-limit.

* lisp/faces.el (font-list-limit): Define as an obsolete variable.

* xfaces.c (Vfont_list_limit): Move unused variable to faces.el.
"
fe453991eafc32a890297a2003ac532b9f579f92,kfowler/emacs,"* lib-src/Makefile.in (INSTALL_DATA): Remove; unused.
"
ba83908c4b7fda12991ae9073028a60da87c1fa2,kfowler/emacs,"Misc fixes, and use lexical-binding in more files.
* lisp/subr.el (letrec): New macro.
(with-wrapper-hook): Move from lisp/simple.el and don't use CL.
* simple.el (with-wrapper-hook): Move with-wrapper-hook to subr.el.
* lisp/help-fns.el (help-function-arglist): Handle subroutines as well.
(describe-variable): Use special-variable-p to filter completions.
* lisp/emacs-lisp/macroexp.el (macroexpand-all-1): Don't expand `declare'
in defmacros.
* lisp/emacs-lisp/cconv.el (cconv-convert, cconv-analyse-form):
Handle `declare'.
* lisp/emacs-lisp/cl.el (pushnew): Silence unfixable warning.
* lisp/emacs-lisp/cl-macs.el (defstruct, define-compiler-macro):
Mark unused arg as unused.
* lisp/emacs-lisp/byte-opt.el (byte-optimize-lapcode): Use memq.
* lisp/emacs-lisp/autoload.el (make-autoload): Don't assume the macro's
first sexp is a list.
(autoload-generate-file-autoloads): Improve error message.
* lisp/emacs-lisp/advice.el (ad-arglist): Use help-function-arglist
to understand the new byte-code arg format.
* lisp/vc/smerge-mode.el:
* lisp/vc/log-view.el:
* lisp/vc/log-edit.el:
* lisp/vc/cvs-status.el:
* lisp/uniquify.el:
* lisp/textmodes/css-mode.el:
* lisp/textmodes/bibtex-style.el:
* lisp/reveal.el:
* lisp/newcomment.el:
* lisp/emacs-lisp/smie.el:
* lisp/abbrev.el: Use lexical-binding.
* src/eval.c (Fprog1, Fprog2): Simplify and use XCDR/XCAR.
(Fdefvar): Remove redundant SYMBOLP check.
(Ffunctionp): Don't signal an error for undefined aliases.
* doc/lispref/variables.texi (Converting to Lexical Binding): New node.
"
cf38dd429888fc992408716922ecab1c39242944,kfowler/emacs,"New syntax-propertize functionality.
* lisp/font-lock.el (font-lock-syntactic-keywords): Make obsolete.
(font-lock-fontify-syntactic-keywords-region): Move handling of
font-lock-syntactically-fontified to...
(font-lock-default-fontify-region): ...here.
Let syntax-propertize-function take precedence.
(font-lock-fontify-syntactically-region): Cal syntax-propertize.

* lisp/emacs-lisp/regexp-opt.el (regexp-opt-depth): Skip named groups.

* lisp/emacs-lisp/syntax.el (syntax-propertize-function)
(syntax-propertize-chunk-size, syntax-propertize--done)
(syntax-propertize-extend-region-functions): New vars.
(syntax-propertize-wholelines, syntax-propertize-multiline)
(syntax-propertize--shift-groups, syntax-propertize-via-font-lock)
(syntax-propertize): New functions.
(syntax-propertize-rules): New macro.
(syntax-ppss-flush-cache): Set syntax-propertize--done.
(syntax-ppss): Call syntax-propertize.

* lisp/progmodes/ada-mode.el (ada-set-syntax-table-properties)
(ada-after-change-function, ada-initialize-syntax-table-properties)
(ada-handle-syntax-table-properties): Only define when
syntax-propertize is not available.
(ada-mode): Use syntax-propertize-function.

* lisp/progmodes/autoconf.el (autoconf-mode):
Use syntax-propertize-function.
(autoconf-font-lock-syntactic-keywords): Remove.

* lisp/progmodes/cfengine.el (cfengine-mode):
Use syntax-propertize-function.
(cfengine-font-lock-syntactic-keywords): Remove.

* lisp/progmodes/cperl-mode.el (cperl-mode): Use syntax-propertize-function.

* lisp/progmodes/fortran.el (fortran-mode): Use syntax-propertize-function.
(fortran--font-lock-syntactic-keywords): New var.
(fortran-line-length): Update syntax-propertize-function and
fortran--font-lock-syntactic-keywords.

* lisp/progmodes/gud.el (gdb-script-syntax-propertize-function): New var;
replaces gdb-script-font-lock-syntactic-keywords.
(gdb-script-mode): Use it.

* lisp/progmodes/js.el (js--regexp-literal): Define while compiling.
(js-syntax-propertize-function): New var; replaces
js-font-lock-syntactic-keywords.
(js-mode): Use it.

* lisp/progmodes/make-mode.el (makefile-syntax-propertize-function):
New var; replaces makefile-font-lock-syntactic-keywords.
(makefile-mode): Use it.
(makefile-imake-mode): Adjust.

* lisp/progmodes/mixal-mode.el (mixal-syntax-propertize-function): New var;
replaces mixal-font-lock-syntactic-keywords.
(mixal-mode): Use it.

* lisp/progmodes/octave-mod.el (octave-syntax-propertize-sqs): New function
to replace octave-font-lock-close-quotes.
(octave-syntax-propertize-function): New function to replace
octave-font-lock-syntactic-keywords.
(octave-mode): Use it.

* lisp/progmodes/perl-mode.el (perl-syntax-propertize-function): New fun to
replace perl-font-lock-syntactic-keywords.
(perl-syntax-propertize-special-constructs): New fun to replace
perl-font-lock-special-syntactic-constructs.
(perl-font-lock-syntactic-face-function): New fun.
(perl-mode): Use it.

* lisp/progmodes/python.el (python-syntax-propertize-function): New var to
replace python-font-lock-syntactic-keywords.
(python-mode): Use it.
(python-quote-syntax): Simplify and adjust to new use.

* lisp/progmodes/ruby-mode.el (ruby-here-doc-beg-re):
Define while compiling.
(ruby-here-doc-end-re, ruby-here-doc-beg-match)
(ruby-font-lock-syntactic-keywords, ruby-comment-beg-syntax)
(syntax-ppss, ruby-in-ppss-context-p, ruby-in-here-doc-p)
(ruby-here-doc-find-end, ruby-here-doc-beg-syntax)
(ruby-here-doc-end-syntax): Only define when
syntax-propertize is not available.
(ruby-syntax-propertize-function, ruby-syntax-propertize-heredoc):
New functions.
(ruby-in-ppss-context-p): Update to new syntax of heredocs.
(electric-indent-chars): Silence bytecompiler.
(ruby-mode): Use prog-mode, syntax-propertize-function, and
electric-indent-chars.

* lisp/progmodes/sh-script.el (sh-st-symbol): Remove.
(sh-font-lock-close-heredoc, sh-font-lock-open-heredoc): Add eol arg.
(sh-font-lock-flush-syntax-ppss-cache, sh-font-lock-here-doc): Remove.
(sh-font-lock-quoted-subshell): Assume we've already matched $(.
(sh-font-lock-paren): Set syntax-multiline.
(sh-font-lock-syntactic-keywords): Remove.
(sh-syntax-propertize-function): New function to replace it.
(sh-mode): Use it.

* lisp/progmodes/simula.el (simula-syntax-propertize-function): New var to
replace simula-font-lock-syntactic-keywords.
(simula-mode): Use it.

* lisp/progmodes/tcl.el (tcl-syntax-propertize-function): New var to
replace tcl-font-lock-syntactic-keywords.
(tcl-mode): Use it.

* lisp/progmodes/vhdl-mode.el (vhdl-mode): Use syntax-propertize-function
if available.
(vhdl-fontify-buffer): Adjust.

* lisp/textmodes/bibtex.el (bibtex-mode): Use syntax-propertize-function.

* lisp/textmodes/reftex.el (font-lock-syntactic-keywords): Don't declare
since we don't use it.

* lisp/textmodes/sgml-mode.el (sgml-syntax-propertize-function): New var to
replace sgml-font-lock-syntactic-keywords.
(sgml-mode): Use it.

* lisp/textmodes/tex-mode.el (tex-common-initialization, doctex-mode):
Use syntax-propertize-function.

* lisp/textmodes/texinfo.el (texinfo-syntax-propertize-function): New fun
to replace texinfo-font-lock-syntactic-keywords.
(texinfo-mode): Use it.

* test/indent/octave.m: Remove some `fixindent' not needed any more.
"
47ba6d4383a3f5a590ccee6c456b41e721a2274c,kfowler/emacs,"Remove duplicate #include directives.

* alloc.c [GC_MARK_STACK == GC_USE_GCPROS_CHECK_ZOMBIES]:
* xfaces.c:
Don't include stdio.h twice.
* buffer.c [USE_MMAP_FOR_BUFFERS]:
Don't include sys/types.h or stdio.h twice.
* fileio.c [WINDOWSNT | MSDOS]: Don't include fcntl.h twice.
* lread.c: Don't include coding.h twice.
* nsfont.m: Don't include frame.h twice.
* process.c [HAVE_RES_INIT]: Don't include <netinet/in.h> twice.
* ralloc.c: Don't include <unistd.h> twice.
* xdisp.c: Don't include font.h twice.
* xterm.c: Don't include fontset.h twice.
* xterm.h [USE_X_TOOLKIT]: Don't include X11/StringDefs.h twice.
"
4d6769e1bb5109e9cec202350d5252234970d525,kfowler/emacs,"lisp/*: Add declarations, remove unused bindings, mark unused args.

* lisp/avoid.el (mouse-avoidance-mode): Mark unused arg.
  (mouse-avoidance-nudge-mouse): Remove unused binding.

* lisp/imenu.el (imenu-default-goto-function): Mark unused args.
  (imenu-progress-message): Remove obsolete macro; all callers changed.

* lisp/mouse.el (mouse-menu-major-mode-map):
* lisp/emacs-lisp/authors.el (authors-scan-change-log)
  (authors-add-to-author-list):
* lisp/emacs-lisp/avl-tree.el (avl-tree--enter-balance):
* lisp/emacs-lisp/smie.el (smie-auto-fill):
* lisp/mail/sendmail.el (mail-bury):
* lisp/mail/unrmail.el (unrmail):
* lisp/net/tls.el (open-tls-stream):
* lisp/textmodes/picture.el (picture-mouse-set-point):
  Remove unused bindings.

* lisp/subr.el (keymap-canonicalize): Remove unused binding.
  (read-passwd): Mark unused arg.

* lisp/tutorial.el (tutorial--display-changes): Remove unused binding.
  (tutorial--save-tutorial-to): Remove unused variable.

* lisp/emacs-lisp/package.el (define-package, package-menu-mark-delete)
  (package-menu-mark-install, package-menu-mark-unmark): Mark unused args.
  (package-generate-autoloads, package-menu--generate)
  (package-menu--find-upgrades): Remove unused bindings.

* lisp/emulation/cua-rect.el (cua-restrict-regexp-rectangle)
  (cua-restrict-prefix-rectangle): Doc fixes.  Remove unused bindings.
  (cua--mouse-ignore, cua--delete-rectangle, cua--extract-rectangle)
  (cua--indent-rectangle, cua-open-rectangle, cua-close-rectangle)
  (cua-blank-rectangle, cua-string-rectangle, cua-replace-in-rectangle)
  (cua-incr-rectangle, cua-sequence-rectangle, cua--convert-rectangle-as)
  (cua--rectangle-aux-replace, cua--left-fill-rectangle)
  (cua-scroll-rectangle-up, cua-scroll-rectangle-down)
  (cua-delete-char-rectangle): Mark unused args.
  (cua-align-rectangle): Remove unused binding.

* lisp/mail/rmail.el (compilation--message->loc)
  (epa--find-coding-system-for-mime-charset): Declare.

* lisp/net/dbus.el (dbus-register-service): Declare.
  (dbus-name-owner-changed-handler): Remove unused binding.

* lisp/nxml/nxml-mode.el (nxml-electric-slash, nxml-in-mixed-content-p)
  (nxml-compute-indent-from-matching-start-tag): Remove unused variables.
  (nxml-scan-backward-within): Mark unused arg.
  (nxml-dynamic-markup-word): Remove unused binding.
"
06b605171f1c9d8b42bd3326a243b8b03d2e4e58,kfowler/emacs,"lisp/*.el: Lexical-binding cleanup.
"
3ab6e069695d0dd5bb77133a89f858190ab8550a,kfowler/emacs,"Return more descriptive data from Fgarbage_collect.
Suggested by Stefan Monnier in
http://lists.gnu.org/archive/html/emacs-devel/2012-07/msg00369.html.
* src/alloc.c (bounded_number): New function.
(total_buffers, total_vectors): New variable.
(total_string_size): Rename to total_string_bytes, adjust users.
(total_vector_size): Rename to total_vector_bytes, adjust users.
(sweep_vectors): Account total_vectors and total_vector_bytes.
(Fgarbage_collect): New return value.  Adjust documentation.
(gc_sweep): Account total_buffers.
(Fmemory_free, Fmemory_use_counts): Use bounded_number.
(VECTOR_SIZE): Remove.
* src/data.c (Qfloat, Qvector, Qsymbol, Qstring, Qcons): Make global.
(Qinterval, Qmisc): New symbols.
(syms_of_data): Initialize them.
* src/lisp.h (Qinterval, Qsymbol, Qstring, Qmisc, Qvector, Qfloat)
(Qcons, Qbuffer): New declarations.
* lisp/emacs-lisp/chart.el (chart-emacs-storage): Change to
reflect new format of data returned by Fgarbage_collect.
"
a87ee50bb9e0471765aadba771d44465edc39464,kfowler/emacs,"gnus-art.el: Improve MIME part functions.

gnus-art.el (gnus-article-jump-to-part): Error on no part; fix prompt.
 (gnus-mime-copy-part): Check coding system, not charset.
 (gnus-mime-view-part-externally): Never remove part.
 (gnus-mime-view-part-internally): Don't remove part here.
 (gnus-article-part-wrapper): Make sure MIME tag is visible.
 (gnus-article-goto-part): Go to displayed or preferred subpart if it is multipart/alternative.

mm-decode.el (mm-display-part): Take optional arg `force'.
"
cb6c95a394d9a9d2f068bf8ee240f2d2297867d1,kfowler/emacs,"Move runtime leim lisp files to lisp/leim directory

This allows us to reuse much of the lisp build and installation machinery,
rather than duplicating it.

* Makefile.in (abs_builddir, leimdir): Remove.
(buildlisppath, SUBDIR, COPYDIR, COPYDESTS): No more leim directory.
(epaths-force-w32): No longer set BLD.
(leim): Remove.
(install-arch-indep): No longer run or install leim.
(mostlyclean, clean): No longer run leim rule.
(bootstrap-clean): Change leim target.
(maintainer-clean): Add leim.
(check-declare): Remove leim.

* README: Update for leim changes.

* configure.ac (leimdir): Remove.
(standardlisppath): No more leimdir.

* make-dist: Update for files from leim/ now being in lisp/leim/.

* doc/lispref/loading.texi (Library Search):
* doc/lispref/os.texi (Startup Summary): No more leim directory.

* leim/Makefile.in (leimdir): New variable.
(TIT_GB, TIT_BIG5, MISC, changed.tit, changed.misc)
(${leimdir}/leim-list.el, ${leimdir}/ja-dic/ja-dic.el):
Generate in $leimdir.
(all): Remove compilation, add ja-dic.
(leim-list.el): Now PHONY.
(setwins, compile-targets, compile-main, clean, mostlyclean)
(extraclean): Remove.
(bootstrap-clean): Delete all generated files.

* leim/README: Update for moved leim/ directory.

* leim/leim-ext.el (ucs-input-activate, hangul-input-method-activate):
Remove manual autoloads; now in loaddefs.el.
Disable byte-compile, version-control, autoloads in the output.

* lisp/Makefile.in (setwins_for_subdirs): Skip leim/ directory.
(compile-main): Depend on lisp/leim rule.
(leim): New rule.

* lisp/loadup.el: Move leim-list.el to leim/ subdirectory.

* lisp/startup.el (normal-top-level): No more leim directory.

* lisp/international/ja-dic-cnv.el (skkdic-convert):
Disable version-control and autoloads in output files.
* lisp/international/titdic-cnv.el (titdic-convert, miscdic-convert):
Disable version-control and autoloads in output files.

* lisp/leim/quail: Move here from ../leim.

* lisp/leim/quail/hangul.el (hangul-input-method-activate):
Add autoload cookie.
(generated-autoload-load-name): Set file-local value.

* lisp/leim/quail/uni-input.el (ucs-input-activate): Add autoload cookie.
(generated-autoload-load-name): Set file-local value.

* nt/README.W32:
* nt/addpm.c (env_vars):
* nt/epaths.nt (PATH_LOADSEARCH, PATH_DUMPLOADSEARCH):
* nt/paths.h (PATH_LOADSEARCH): No more leim directory.

* src/Makefile.in (leimdir): Now in lisp source directory.
($(leimdir)/leim-list.el): Just use ../leim .

* src/epaths.in (PATH_DUMPLOADSEARCH):

* src/lread.c (load_path_default):

* src/nsterm.m (ns_load_path): No more leim directory.

* .bzrignore: Update for relocated leim files.
"
c17d5a38db885685aa57bf5560e9dedb1f494819,kfowler/emacs,"Backports for 1995-05-29T20:16:10Z!kwzh@gnu.org, 1995-05-03T21:38:13Z!rms@gnu.org and 1995-05-31T19:46:12Z!kwzh@gnu.org.

* nsmenu.m (ns_update_menubar): Add braces to ambigous if-else.

* nsmenu.m (Popdown_data): New struct.
(pop_down_menu): p->pointer is Popdown_data.  Release the pool and
free Popdown_data.
(ns_popup_dialog): Use NSAutoreleasePool and pass it to pop_down_menu.
(initWithContentRect): Make imgView and contentView non-static
and autorelease them.  Also autorelease img and matrix.
(dealloc): Remove (Bug#1995-05-29T20:16:10Z!kwzh@gnu.org).

* nsterm.m (keyDown:): Interpret flags without left/right bits
as the left key (Bug#1995-05-03T21:38:13Z!rms@gnu.org).

* nsterm.m (ns_read_socket): Return early if there is a modal
window (Bug#1995-05-31T19:46:12Z!kwzh@gnu.org).
"
a16ac13f6299d2610284a6b3fb4231c3279d2e9c,kfowler/emacs,"Backport: Rename cygwin_convert_path* to cygwin_convert_file_name*
"
d234d13e4bc3748665e8592fb13c6ee29671f709,kfowler/emacs,"* src/buffer.c (Fother_buffer): Add CHECK_FRAME.
(Fswitch_to_buffer): Remove unused variable `err'.
"
c56327b55d2e75fb0246c9a858e46dd5670699d4,kfowler/emacs,"Don't require pkg-config when building from repository.

* INSTALL: Prefer './configure FOO=BAR' to 'FOO=BAR ./configure'.
* INSTALL.REPO: pkg-config is no longer required to build from
the repository.
* autogen.sh: Don't check for pkg-config.
(progs): Remove pkg-config.
(pkg_config_min, AUTORECONF_ENV, env_space, ACLOCAL_PATH):
Remove.  All uses removed.
* m4/pkg.m4: New file, built by admin/merge-pkg-config.
* configure.ac: Remove unnecessary m4_pattern_forbid of ^PKG_ and
an AC_ARG_VAR of PKG_CONFIG_PATH.  pkg.m4 does that for us.
(EMACS_CHECK_MODULES): Remove workaround for old pkg-config bug,
as we use pkg.m4 from a newer pkg-config.
* admin/merge-pkg-config: New script.
* admin/notes/copyright: Update for m4/*.m4, in particular m4/pkg.m4.
* etc/NEWS: Prefer './configure FOO=BAR' to 'FOO=BAR ./configure'.
* etc/PROBLEMS (Build-time-problems): Remove pkg-config problem
that is no longer an issue.
* nt/INSTALL: Remove no-longer-needed notes about pkg-config.
"
d4767877aca091ee1a04608e2b50b346745661d4,kfowler/emacs,"Eliminate an unuted function argument.

* vc.el, all backends: API simplification: Remove 4th 'default-state'
argument from vc-dir-status files and its backend methods - no backend
method ever set it.  It was used only in the fallback method to to set
a default of 'up-to-date, though a convoluted call chain obscured
this.
"
2cb953327c29bb1c168565a87906e28d87b82e48,kfowler/emacs,"* calendar/todos.el (todos-reset-prefix): Don't remove overlays,
since it's superfluous and also wrongly removes items marks.
(todos-category-completions): Select current category on visiting
file, to ensure category is properly displayed if user switches to
file via a non-Todos command.
(todos-mark-category): Make implementation cleaner.
(todos-unmark-category): Improve implementation.  Get overlay
property only when there is an overlay.
"
40abffe4c6c6b2d4247eeb1d0e9591e7d6f8e7d2,kfowler/emacs,"Get rid of the INFO_EXT variable
It's never been anything more than pointless complexity

* configure.ac (INFO_EXT, INFO_OPTS): Remove output variables.

* Makefile.in (INFO_EXT): Remove and replace by "".info"" throughout.

* doc/emacs/Makefile.in (INFO_EXT): Remove and replace by "".info"" throughout.
(INFO_OPTS): Set directly rather than with configure.

* doc/lispintro/Makefile.in (INFO_EXT): Remove and replace by "".info"" throughout.
(INFO_OPTS): Set directly rather than with configure.

* doc/lispref/Makefile.in (INFO_EXT): Remove and replace by "".info"" throughout.
(INFO_OPTS): Set directly rather than with configure.

* doc/misc/Makefile.in (INFO_EXT): Remove and replace by "".info"" throughout.
(INFO_OPTS): Set directly rather than with configure.
"
971de7fb158335fbda39525feb2d7776a26bc030,kfowler/emacs,"Convert (most) functions in src to standard C.
* src/alloc.c: Convert function definitions to standard C.
* src/atimer.c:
* src/bidi.c:
* src/bytecode.c:
* src/callint.c:
* src/callproc.c:
* src/casefiddle.c:
* src/casetab.c:
* src/category.c:
* src/ccl.c:
* src/character.c:
* src/charset.c:
* src/chartab.c:
* src/cmds.c:
* src/coding.c:
* src/composite.c:
* src/data.c:
* src/dbusbind.c:
* src/dired.c:
* src/dispnew.c:
* src/doc.c:
* src/doprnt.c:
* src/ecrt0.c:
* src/editfns.c:
* src/fileio.c:
* src/filelock.c:
* src/filemode.c:
* src/fns.c:
* src/font.c:
* src/fontset.c:
* src/frame.c:
* src/fringe.c:
* src/ftfont.c:
* src/ftxfont.c:
* src/gtkutil.c:
* src/indent.c:
* src/insdel.c:
* src/intervals.c:
* src/keymap.c:
* src/lread.c:
* src/macros.c:
* src/marker.c:
* src/md5.c:
* src/menu.c:
* src/minibuf.c:
* src/prefix-args.c:
* src/print.c:
* src/ralloc.c:
* src/regex.c:
* src/region-cache.c:
* src/scroll.c:
* src/search.c:
* src/sound.c:
* src/strftime.c:
* src/syntax.c:
* src/sysdep.c:
* src/termcap.c:
* src/terminal.c:
* src/terminfo.c:
* src/textprop.c:
* src/tparam.c:
* src/undo.c:
* src/unexelf.c:
* src/window.c:
* src/xfaces.c:
* src/xfns.c:
* src/xfont.c:
* src/xftfont.c:
* src/xgselect.c:
* src/xmenu.c:
* src/xrdb.c:
* src/xselect.c:
* src/xsettings.c:
* src/xsmfns.c:
* src/xterm.c: Likewise.
"
9ed5a258e2893669791862f8ef4c3ca34d209e75,kfowler/emacs,"Merge changes made in No Gnus

shr-color.el (shr-color-set-minimum-interval): Renamed to add prefix (bug#10732).
shr.el (shr-insert-document): Add doc string.
 (shr-visit-file): Ditto.
 (shr-remove-trailing-whitespace): New function.
 (shr-insert-document): Use it to clean up trailing whitespace as the final step (bug#10714).
gnus-sum.el (gnus-summary-exit-no-update): Really deaden the summary buffer if `gnus-kill-summary-on-exit' is nil.
"
e5c2edf79ba2b75a3572839fcb9de612f93ab630,kfowler/emacs,"Add a utility function buffer-narrowed-p, and use it.

* lisp/subr.el (buffer-narrowed-p): New function.

* lisp/ses.el (ses-widen):
* lisp/simple.el (count-words--buffer-message):
* lisp/net/browse-url.el (browse-url-of-buffer): Use it

* lisp/simple.el (count-words-region): Don't signal an error if there
is a non-nil prefix arg and the mark is not set.

* doc/lispref/positions.texi (Narrowing): Document buffer-narrowed-p.
"
0c94c8d603031f6b665ae7f3136ca77fb573fd7e,kfowler/emacs,"A few more naming-convention fixes for getters and setters.

* buffer.c (set_buffer_overlays_before): Move here from buffer.h,
and rename from buffer_overlays_set_before.
(set_buffer_overlays_after): Move here from buffer.h, and rename
from buffer_overlays_set_after.
* buffer.h (buffer_intervals): Rename from buffer_get_intervals.
All uses changed.
(set_buffer_intervals): Rename from buffer_set_intervals.
* intervals.c (set_interval_object): Move here from intervals.h,
and rename from interval_set_object.
(set_interval_left): Move here from intervals.h, and rename from
interval_set_left.
(set_interval_right): Move here from intervals.h, and rename from
interval_set_right.
(copy_interval_parent): Move here from intervals.h, and rename from
interval_copy_parent.
* intervals.h (set_interval_parent): Rename from interval_set_parent.
(set_interval_plist): Rename from interval_set_plist.
Return void, not Lisp_Object, since no caller uses the result.
* lisp.h (string_intervals): Rename from string_get_intervals.
(set_string_intervals): Rename from string_set_intervals.
"
a464a6c73acf27b0d633d428919a36bc16a9d442,kfowler/emacs,"More CL cleanups and reduction of use of cl.el.
* woman.el, winner.el, vc/vc-rcs.el, vc/vc-hooks.el, vc/vc-hg.el:
* vc/vc-git.el, vc/vc-dir.el, vc/vc-bzr.el, vc/vc-annotate.el:
* textmodes/tex-mode.el, textmodes/sgml-mode.el, tar-mode.el:
* strokes.el, ses.el, server.el, progmodes/js.el, progmodes/gdb-mi.el:
* progmodes/flymake.el, progmodes/ebrowse.el, progmodes/compile.el:
* play/tetris.el, play/snake.el, play/pong.el, play/landmark.el:
* play/hanoi.el, play/decipher.el, play/5x5.el, nxml/nxml-mode.el:
* net/secrets.el, net/quickurl.el, midnight.el, mail/footnote.el:
* image-dired.el, ibuffer.el, ibuf-macs.el, ibuf-ext.el, hexl.el:
* eshell/eshell.el, eshell/esh-io.el, eshell/esh-ext.el:
* eshell/esh-cmd.el, eshell/em-ls.el, eshell/em-hist.el:
* eshell/em-cmpl.el, eshell/em-banner.el:
* url/url.el, url/url-queue.el, url/url-parse.el, url/url-http.el:
* url/url-future.el, url/url-dav.el, url/url-cookie.el:
* calendar/parse-time.el, test/eshell.el: Use cl-lib.
* wid-browse.el, wdired.el, vc/vc.el, vc/vc-mtn.el, vc/vc-cvs.el:
* vc/vc-arch.el, tree-widget.el, textmodes/texinfo.el:
* textmodes/refill.el, textmodes/css-mode.el, term/tvi970.el:
* term/ns-win.el, term.el, shell.el, ps-samp.el:
* progmodes/perl-mode.el, progmodes/pascal.el, progmodes/gud.el:
* progmodes/glasses.el, progmodes/etags.el, progmodes/cwarn.el:
* play/gamegrid.el, play/bubbles.el, novice.el, notifications.el:
* net/zeroconf.el, net/xesam.el, net/snmp-mode.el, net/mairix.el:
* net/ldap.el, net/eudc.el, net/browse-url.el, man.el:
* mail/mailheader.el, mail/feedmail.el:
* url/url-util.el, url/url-privacy.el, url/url-nfs.el, url/url-misc.el:
* url/url-methods.el, url/url-gw.el, url/url-file.el, url/url-expand.el:
Dont use CL.
* ibuf-ext.el (ibuffer-mark-old-buffers): Use float-time.
* eshell/esh-opt.el (eshell-eval-using-options): Quote code with
`lambda' rather than with `quote'.
(eshell-do-opt): Adjust accordingly.
(eshell-process-option): Simplify.
* eshell/esh-var.el:
* eshell/em-script.el: Require `esh-opt' for eshell-eval-using-options.
* emacs-pcase.el (pcase--dontcare-upats, pcase--let*)
(pcase--expand, pcase--u1): Rename pcase's internal `dontcare' pattern
to `pcase--dontcare'.
* emacs-cl.el (labels): Mark obsolete.
(cl--letf, letf): Move to cl-lib.
(cl--letf*, letf*): Remove.
* emacs-cl-lib.el (cl-nth-value): Use defalias.
* emacs-cl-macs.el (cl-dolist, cl-dotimes): Add indent rule.
(cl-progv): Rewrite.
(cl--letf, cl-letf): Move from cl.el.
(cl-letf*): New macro.
* emacs-cl-extra.el (cl--progv-before, cl--progv-after): Remove.
"
16b22fef423afedf034460a0f811abf50d0c5f3e,kfowler/emacs,"Fix handling of fatal signals and exceptions on MS-Windows.

 src/w32proc.c (sys_signal): Handle all signals defined by the
 MS-Windows runtime, not just SIGCHLD.  Actually install the signal
 handlers for signals supported by Windows.  Don't override
 term_ntproc as the handler for SIGABRT.
 (sigaction): Rewrite to call sys_signal instead of duplicating its
 code.
 (sys_kill): Improve commentary.
 src/w32.c (term_ntproc): Accept (and ignore) one argument, for
 consistency with a signature of a signal handler.  All callers
 changed.
 (init_ntproc): Accept an argument DUMPING.  If dumping, don't
 install term_ntproc as a signal handler for SIGABRT, as that
 should be done by the dumped Emacs.
 src/w32.h (init_ntproc, term_ntproc): Adjust prototypes.
 src/w32select.c (term_w32select): Protect against repeated
 invocation by setting clipboard_owner to NULL after calling
 DestroyWindow.
 src/emacs.c (shut_down_emacs, main): Adapt the calls to init_ntproc
 and term_ntproc to their modified signatures.
"
4fd78b62d1c815e4dfd7ffe4e7862ef4c4fceaca,kfowler/emacs,"[Gnus] XEmacs 21.5 compilation fix

* gnus-score.el (gnus-score-decode-text-parts): Use #' for
  mm-text-parts used in labels macro to make it work with XEmacs 21.5.
* gnus-util.el (gnus-string-prefix-p): New function, an alias to
  string-prefix-p in Emacs >=23.2.
* nnmaildir.el (nnmaildir--ensure-suffix, nnmaildir--add-flag)
  (nnmaildir--remove-flag, nnmaildir--scan): Use gnus-string-match-p
  instead of string-match-p.
  (nnmaildir--scan): Use gnus-string-prefix-p instead of string-prefix-p.
"
cce0aa5aac8ae6a7fbcf1e586ab5db1cb836e26a,kfowler/emacs,"Doc improvements for Buffer Menu.

* buffers.texi (Several Buffers): List Buffer Menu command anmes,
and index the keybindings.  Document tabulated-list-sort.
(Kill Buffer): Capitalize Buffer Menu.

* trouble.texi (Memory Full): Capitalize Buffer Menu.
"
d55c12ed1f80711ef27a52fa0ba6e366f0b7a585,kfowler/emacs,"Simplify enforcement of object address alignment

* lisp.h (struct Lisp_Symbol): Remove explicit padding.
(struct Lisp_Misc_Any): Likewise.
(struct Lisp_Free): Likewise.
* alloc.c (union aligned_Lisp_Symbol): Define.
(SYMBOL_BLOCK_SIZE, struct symbol_block): Use union
aligned_Lisp_Symbol instead of struct Lisp_Symbol.
(union aligned_Lisp_Misc): Define.
(MARKER_BLOCK_SIZE, struct marker_block): Use union
aligned_Lisp_Misc instead of union Lisp_Misc.
(Fmake_symbol, allocate_misc, gc_sweep): Adjust
"
83f57f499af3922fd09956044f7fe8596e21b686,kfowler/emacs,"(with-current-buffer): Rename buffer argument to buffer-or-name.
"
e8c17b818670b73acc2499b501aef3aab2ae8e58,kfowler/emacs,"* window.h (WSET): Remove.

Replace all uses with calls to new setter functions.
Use INLINE_HEADER_BEGIN, INLINE_HEADER_END.
(WINDOW_INLINE): New macro.
(wset_buffer, wset_frame, wset_left_col, wset_next, wset_prev)
(wset_redisplay_end_trigger, wset_top_line, wset_total_cols)
(wset_total_lines, wset_vertical_scroll_bar)
(wset_window_end_pos, wset_window_end_valid)
(wset_window_end_vpos): New setter functions.
* window.c (WINDOW_INLINE):
Define to EXTERN_INLINE, so that the corresponding functions
are compiled into code.
(wset_combination_limit, wset_dedicated, wset_display_table)
(wset_hchild, wset_left_fringe_width, wset_left_margin_cols)
(wset_new_normal, wset_new_total, wset_next_buffers)
(wset_normal_cols, wset_normal_lines, wset_parent, wset_pointm)
(wset_prev_buffers, wset_right_fringe_width)
(wset_right_margin_cols, wset_scroll_bar_width, wset_start)
(wset_temslot, wset_vchild, wset_vertical_scroll_bar_type)
(wset_window_parameters):
* xdisp.c (wset_base_line_number, wset_base_line_pos)
(wset_column_number_displayed, wset_region_showing):
New setter functions.

Fixes: debbugs:12215
"
71a72686e3e81253f2bc0ad74568aafdbd86879c,kfowler/emacs,"Keep stack-allocated Lisp objects fast rather than versatile.
* configure.ac (HAVE_STATEMENT_EXPRESSIONS): Remove.
For USE_STACK_LISP_OBJECTS, we always assume __GNUC__.
* lisp.h (union Aligned_Cons) [!GCALIGNED]: Define as such.
(SCOPED_CONS_INITIALIZER): New macro.
(scoped_cons) [USE_STACK_LISP_OBJECTS]: Use it.
(USE_LOCAL_ALLOCA): Remove.
(local_cons, local_list1, local_list2, local_list3, local_list4):
Remove.  Stack overflow checking makes them too slow.
(make_local_vector): Likewise.  Also we just don't have enough
users for it.
(enum LISP_STRING_OVERHEAD): Remove.
(local_string_init, local_vector_init): Remove prototypes.
(make_local_string, build_local_string): Redesign to target short
compile-time string constants, fall back to regular string allocation
where appropriate.
(lisp_string_size): New function.
(verify_ascii) [ENABLE_CHECKING]: Add prototype.
* alloc.c (local_string_init, local_vector_init): Remove.
(verify_ascii) [ENABLE_CHECKING]: New function.
* buffer.c, charset.c, chartab.c, data.c, editfns.c, emacs.c, fileio.c:
* fns.c, font.c, fontset.c, frame.c, keyboard.c, keymap.c, lread.c:
* menu.c, minibuf.c, process.c, textprop.c, xdisp.c, xfns.c, xfont.c:
* xselect.c, xterm.c: All related users changed.
"
4132bd74e9816ca913f862835cc062e092ab8b79,kfowler/emacs,"Merge from gnulib

This incorporates:
2017-05-13 largefile: Simplify
2017-05-13 largefile: Improve and document
2017-05-13 truncate: New module
2017-05-13 windows-stat-timespec: New module
2017-05-13 windows-stat-override: New module
2017-05-11 getopt-posix: port to mingw
2017-05-11 gettimeofday: Increase precision on mingw
2017-05-10 time: Fix missing initialization of HAVE_TIMEZONE_T
2017-05-10 Implement a way to opt out from MSVC support
2017-05-09 tzset: Expand comment about TZ problem on native Windows
* build-aux/config.guess, lib/dup2.c, lib/fcntl.c, lib/fsync.c:
* lib/getdtablesize.c, lib/getopt.c, lib/gettimeofday.c:
* lib/mktime.c, lib/stat-time.h, lib/sys_stat.in.h, lib/unistd.in.h:
* lib/utimens.c, m4/gettimeofday.m4, m4/largefile.m4:
* m4/sys_stat_h.m4, m4/sys_time_h.m4, m4/time_h.m4, m4/time_rz.m4:
* m4/unistd_h.m4: Copy from gnulib.
* lib/gnulib.mk.in, m4/gnulib-comp.m4: Regenerate.
"
705cf384bec23354ad22a5c48d3430a96ef70ca1,kfowler/emacs,"Clean up array size calculations
"
b1573a97e17b518723ab3f906eb6d521caed196d,kfowler/emacs,"Use alignas to fix GCALIGN-related bugs

Use alignas and unions to specify alignments of objects needing
addresses that are at least a multiple of GCALIGNMENT.  Using
these standard C facilities should be safer than relying on ad hoc
and poorly-understood features like GCC‚Äôs __attribute__
((aligned (N))), the root cause for recent porting bugs like
Bug#29040.  The alignas macro was standardized by C11 and Gnulib
supports alignas for pre-C11 platforms.  I have tested this on Sun
Studio 12 sparc (2007) and GCC 4.4.7 x86-64 (2012) as well as on
more recent platforms like GCC 7.2.1 (2017) on Fedora 26 (both
x86-64 and x86).
* lib-src/make-docfile.c (close_emacs_globals): lispsym is now
just an array of struct Lisp_Symbol, since struct Lisp_Symbol is
now properly aligned.  All uses changed.
* src/alloc.c (NEXT_FREE_LISP_STRING): Just use the new u.next
member; this is simpler and safer than casting a pointer that
might not be aligned properly.
(aligned_Lisp_Symbol): Remove.  No longer needed, now that struct
Lisp_Symbol is aligned properly.  All uses replaced with struct
Lisp_Symbol.
* src/lisp.h (GCALIGNED): Remove, as it does not work as expected:
it can cause the natural alignment to be ignored.  All uses
replaced by unions with a ‚Äòchar alignas (GCALIGNMENT)‚Äô member as
described below.
(struct Lisp_Symbol, struct Lisp_Cons, struct Lisp_String):
Change definition from ‚Äòstruct TAG { MEMBERS };‚Äô to
‚Äòstruct TAG { union { struct { MEMBERS } s; char alignas
(GCALIGNMENT) gcaligned; } u; };‚Äô.  This guarantees ‚Äòstruct TAG‚Äô
to have an alignment that at least max (GCALIGNMENT, N) where N is
its old alignment.  All uses like ‚ÄòPTR->MEMBER‚Äô changed to
‚ÄòPTR->u.s.MEMBER‚Äô; these uses were supposed to be mostly private
anyway.  Verify that the resulting ‚Äòstruct TAG‚Äô is properly
aligned for Emacs.
(union vectorlike_header): New member ‚Äògcaligned‚Äô to guarantee
that this type, and its containing types like ‚Äòstruct Lisp_Subr‚Äô,
‚Äòstruct buffer‚Äô and ‚Äòstruct thread_state‚Äô, are all properly
aligned for Emacs.
(struct Lisp_String): New union member ‚Äònext‚Äô, for the benefit
of NEXT_FREE_LISP_STRING.
(union Aligned_Cons, union Aligned_String): Remove.  All uses
replaced by struct Lisp_Cons and struct Lisp_String, since they
are now properly aligned.
(USE_STACK_CONS, USE_STACK_STRING): Simplify now that we can
assume struct Lisp_Cons and struct Lisp_String are properly
aligned.
"
2f935d86fd7aa551e2c61d71c14a1c1a8b3ba707,kfowler/emacs,"* xterm.c (any_help_event_p, x_draw_glyph_string_background):
(x_display_ok): Use bool for booleans.
(x_draw_glyph_string_background, cvt_string_to_pixel):
(cvt_pixel_dtor): Drop unnecessary prototypes.
* xterm.h (x_display_ok): Adjust prototype.
"
fc0fd24c105bde4c001ebebe4b8b7e1f96cd2871,kfowler/emacs,"Fix further problems with quoted file names in Tramp

* lisp/net/tramp.el (tramp-quoted-name-p, tramp-quote-name)
(tramp-unquote-name): Move defsubst ...
* lisp/net/tramp-compat.el (tramp-compat-file-name-quoted-p)
(tramp-compat-file-name-quote)
(tramp-compat-file-name-unquote): ... here. Adapt callees.

* lisp/net/tramp-cache.el (tramp-flush-file-property)
(tramp-flush-directory-property):
* lisp/net/tramp-gvfs.el (tramp-gvfs-url-file-name):
* lisp/net/tramp-sh.el (tramp-make-copy-program-file-name):
* lisp/net/tramp-smb.el (tramp-smb-handle-copy-file)
(tramp-smb-handle-substitute-in-file-name)
(tramp-smb-get-share, tramp-smb-get-localname): Handle quoted files.
"
3d319c8f92f639940b35c750697e82d22b7c17ba,kfowler/emacs,"Merge changes made in Gnus trunk.

shr.el (shr-render-td): Use a cache for the table rendering function to avoid getting an exponential rendering behaviour in nested tables.
shr.el (shr-insert): Rework the line-breaking algorithm.
shr.el (shr-insert): Don't leave trailing spaces.
shr.el (shr-insert-table): Also insert empty TDs.
shr.el (shr-tag-blockquote): Ensure paragraphs after </ul>.
gnus-start.el (gnus-get-unread-articles): Require gnus-agent before bidning gnus-agent variables.
mm-decode.el (mm-save-part): If given a non-directory result, expand the file name before using to avoid setting mm-default-directory to nil.
gnus.el (gnus-carpal): The carpal mode has been removed, but define the variable for backwards compatability.
nnimap.el (nnimap-update-info): Remove double setting of high.
nnimap.el (nnimap-update-info): Don't ignore groups that have no UIDNEXT.
shr.el (require): Require cl when compiling.
shr.el (shr-tag-hr): New function.
"
3907e630a71d48e693062b350571990d7ba08bbb,kfowler/emacs,"Merge from trunk + rename the event.  Not tested yet.
"
b073dc4b4b21ee5885c6c8d182d915115e51419b,kfowler/emacs,"Misc cleanups and simplifications.
* lisp/font-lock.el (save-buffer-state): Remove `varlist' arg.
(font-lock-unfontify-region, font-lock-default-fontify-region):
Update usage correspondingly.
(font-lock-fontify-syntactic-keywords-region):
Set parse-sexp-lookup-properties buffer-locally here.
(font-lock-fontify-syntactically-region): Remove unused `ppss' arg.
* lisp/progmodes/ada-mode.el: Replace ""(set '"" with setq.
(ada-mode): Simplify.
(ada-create-case-exception, ada-adjust-case-interactive)
(ada-adjust-case-region, ada-format-paramlist, ada-indent-current)
(ada-search-ignore-string-comment, ada-move-to-start)
(ada-move-to-end): Use with-syntax-table.
* lisp/progmodes/fortran.el (fortran-line-length): Don't recompute
syntactic keywords redundantly a second time.
* lisp/progmodes/js.el (require): Require is already ""eval-and-compile"".
(js--re-search-forward): Avoid `eval'.  Preserve the error data.
(js--re-search-backward): Use js--re-search-forward.
* lisp/progmodes/octave-mod.el (electric-indent-chars): Silence bytecomp.
"
a53d1d325e0d1c0db6b407a776d6cfd3d12a90e0,kfowler/emacs,"Fix Tramp problems with multihops, and nc.

* lisp/net/tramp-cache.el (tramp-get-file-property)
(tramp-set-file-property, tramp-flush-file-property)
(tramp-get-connection-property, tramp-set-connection-property)
(tramp-flush-connection-property): Remove hop from vector.

* lisp/net/tramp-gw.el (tramp-gw-process-filter): Ignore errors.

* lisp/net/tramp-sh.el (tramp-methods) <nc>: Separate STDERR.
(tramp-do-copy-or-rename-file-out-of-band): Increase timeout of
netstat to 60"".
(tramp-sh-handle-start-file-process): Do not show hops in prompt.

* lisp/net/tramp.el (tramp-handle-file-name-as-directory)
(tramp-handle-file-name-directory, tramp-handle-file-remote-p):
Keep hop in result.

* test/automated/tramp-tests.el (tramp-test02-file-name-dissect):
Add hop tests.
"
25554267037ced56fdaed17e3a09d8926b70f978,kfowler/emacs,"Cleanup window fringes, margins and scroll bars adjustments.
* window.c (set_window_fringes, set_window_margins)
(set_window_scroll_bars, apply_window_adjustment): New functions.
(set_window_buffer, Fset_window_margins, Fset_window_fringes)
(Fset_window_scroll_bars): Use them.
"
fbc87aeaafe7ccdcfd2e4d1c0417c747587b8ab9,kfowler/emacs,"* fns.c (Fsubstring, Fsubstring_no_properties, secure_hash):
Move common substring range checking code to...
(validate_substring): ...this function.
"
c4444d16dcc6b1cf2ac9e2c0bb20e3f5a54bdea1,kfowler/emacs,"Rename configure.in to configure.ac.

Fixes: debbugs:11603
"
29208e8237a91a28fc5ab30f020ddc65c9ec14b7,kfowler/emacs,"Move all DEFVAR'd globals into a structure -- threading infrastructure

	* globals.h: New file.
	* xterm.h (Vx_pixel_size_width_font_regexp): Remove declaration.
	* window.h (Vinitial_window_system, Vminibuf_scroll_window)
	(Vwindow_system_version): Remove declaration.
	* w32term.h (Vw32_enable_palette)
	(Vx_pixel_size_width_font_regexp): Remove declaration.
	* w32menu.c (Voverriding_local_map)
	(Voverriding_local_map_menu_flag): Remove declaration.
	* w32inevt.c (Vw32_alt_is_meta, Vw32_apps_modifier)
	(Vw32_capslock_is_shiftlock, Vw32_enable_caps_lock)
	(Vw32_enable_num_lock, Vw32_lwindow_modifier)
	(Vw32_pass_lwindow_to_system, Vw32_pass_rwindow_to_system)
	(Vw32_phantom_key_code, Vw32_recognize_altgr)
	(Vw32_rwindow_modifier, Vw32_scroll_lock_modifier)
	(w32_use_full_screen_buffer): Remove declaration.
	* w32.c (Vsystem_configuration, Vw32_downcase_file_names)
	(Vw32_generate_fake_inodes, Vw32_get_true_file_attributes)
	(w32_num_mouse_buttons, w32_pipe_read_delay): Remove declaration.
	* termopts.h (Vtruncate_partial_width_windows, inverse_video)
	(no_redraw_on_reenter, visible_bell): Remove declaration.
	* sysdep.c (Vsystem_name): Remove declaration.
	* syntax.h (parse_sexp_lookup_properties): Remove declaration.
	* menu.h (Vmenu_updating_frame): Remove declaration.
	* macros.h (Vexecuting_kbd_macro, executing_kbd_macro_index):
	Remove declaration.
	* lisp.h (Vafter_init_time, Vafter_load_alist)
	(Vauto_save_list_file_name, Vbefore_init_time, Vcommand_history)
	(Vcompletion_regexp_list, Vcurrent_load_list)
	(Vcurrent_prefix_arg, Vdata_directory, Vdebug_on_error)
	(Vdoc_directory, Vdoc_file_name, Vdynamic_library_alist)
	(Vexec_directory, Vexec_path, Vexec_suffixes)
	(Vface_font_rescale_alist, Vface_ignored_fonts, Vfeatures)
	(Vhelp_form, Vhistory_length, Vinhibit_field_text_motion)
	(Vinhibit_quit, Vinhibit_read_only, Vinhibit_redisplay)
	(Vinstallation_directory, Vinvocation_directory)
	(Vinvocation_name, Vload_file_rep_suffixes, Vload_history)
	(Vload_suffixes, Vmark_even_if_inactive, Vmemory_full)
	(Vmessage_log_max, Vobarray, Vprint_length, Vprint_level)
	(Vpurify_flag, Vquit_flag, Vsaved_region_selection)
	(Vscalable_fonts_allowed, Vselect_active_regions)
	(Vshell_file_name, Vstandard_input, Vstandard_output)
	(Vsystem_name, Vtemporary_file_directory, Vthrow_on_input)
	(Vtop_level, Vtty_erase_char, Vundo_outer_limit)
	(Vuser_login_name, Vwindow_scroll_functions)
	(Vwindow_system_version, Vx_no_window_manager)
	(Vx_resource_class, Vx_resource_name, baud_rate)
	(completion_ignore_case, debug_on_next_call, gc_cons_threshold)
	(history_delete_duplicates, inhibit_x_resources)
	(last_nonmenu_event, load_in_progress, max_specpdl_size)
	(minibuffer_auto_raise, print_escape_newlines, scroll_margin)
	(use_dialog_box, use_file_dialog): Remove declaration.  Include
	globals.h.
	* keymap.h (Voverriding_local_map)
	(Voverriding_local_map_menu_flag, meta_prefix_char): Remove
	declaration.
	* keyboard.h (Vdouble_click_time, Vfunction_key_map)
	(Vinput_method_function, Vkey_translation_map)
	(Vlucid_menu_bar_dirty_flag, Vthis_original_command)
	(do_mouse_tracking, extra_keyboard_modifiers)
	(num_nonmacro_input_events): Remove declaration.
	* intervals.h (Vchar_property_alias_alist)
	(Vdefault_text_properties, Vinhibit_point_motion_hooks)
	(Vtext_property_default_nonsticky): Remove declaration.
	* gtkutil.h (x_gtk_file_dialog_help_text)
	(x_gtk_show_hidden_files, x_gtk_use_old_file_dialog)
	(x_gtk_whole_detached_tool_bar): Remove declaration.
	* frame.h (Vdefault_frame_alist, Vframe_alpha_lower_limit)
	(Vmenu_bar_mode, Vmouse_highlight, Vterminal_frame)
	(Vtool_bar_mode, Vx_resource_class, Vx_resource_name)
	(focus_follows_mouse): Remove declaration.
	* fontset.h (Valternate_fontname_alist, Vfontset_alias_alist)
	(Vignore_relative_composition, Votf_script_alist)
	(Vuse_default_ascent, Vvertical_centering_font_regexp): Remove
	declaration.
	* font.h (Vfont_log): Remove declaration.
	* dosfns.h (Vdos_display_scancodes, Vdos_version)
	(Vdos_windows_version, dos_codepage, dos_country_code)
	(dos_decimal_point, dos_hyper_key, dos_keyboard_layout)
	(dos_keypad_mode, dos_super_key, dos_timezone_offset): Remove
	declaration.
	* disptab.h (Vglyph_table, Vstandard_display_table): Remove
	declaration.
	* dispextern.h (Vface_remapping_alist, Vglyphless_char_display)
	(Vmouse_autoselect_window, Voverflow_newline_into_fringe)
	(Vshow_trailing_whitespace, Vtool_bar_button_margin)
	(Vtool_bar_style, cursor_in_echo_area, display_hourglass_p)
	(inverse_video, mode_line_in_non_selected_windows)
	(tool_bar_button_relief, tool_bar_max_label_size)
	(underline_minimum_offset)
	(unibyte_display_via_language_environment, x_stretch_cursor_p):
	Remove declaration.
	* composite.h (Vauto_composition_function)
	(Vcomposition_function_table): Remove declaration.
	* commands.h (Vexecuting_kbd_macro)
	(Vminibuffer_local_completion_map)
	(Vminibuffer_local_filename_completion_map)
	(Vminibuffer_local_filename_must_match_map)
	(Vminibuffer_local_map, Vminibuffer_local_must_match_map)
	(Vminibuffer_local_ns_map, Vthis_command)
	(Vunread_command_events, cursor_in_echo_area)
	(last_command_event, last_nonmenu_event, unread_command_char):
	Remove declaration.
	* coding.h (Vcoding_system_for_read, Vcoding_system_for_write)
	(Vdefault_file_name_coding_system)
	(Vdefault_process_coding_system, Vfile_name_coding_system)
	(Vlast_coding_system_used, Vlocale_coding_system)
	(Vselect_safe_coding_system_function)
	(Vtranslation_table_for_input, coding_system_require_warning)
	(eol_mnemonic_dos, eol_mnemonic_mac, eol_mnemonic_undecided)
	(eol_mnemonic_unix, inherit_process_coding_system): Remove
	declaration.
	* charset.h (Vcharset_list, Vcurrent_iso639_language): Remove
	declaration.
	* character.h (Vauto_fill_chars, Vchar_direction_table)
	(Vchar_script_table, Vchar_width_table, Vprintable_chars)
	(Vscript_representative_chars, Vtranslation_table_vector)
	(Vunicode_category_table): Remove declaration.
	* ccl.h (Vfont_ccl_encoder_alist): Remove declaration.
	* buffer.h (Vafter_change_functions, Vbefore_change_functions)
	(Vdeactivate_mark, Vfirst_change_hook, Vtransient_mark_mode)
	(inhibit_modification_hooks): Remove declaration.
	* xterm.c (syms_of_xterm): Update.
	(Vx_alt_keysym, Vx_hyper_keysym, Vx_keysym_table)
	(Vx_meta_keysym, Vx_super_keysym, Vx_toolkit_scroll_bars)
	(x_mouse_click_focus_ignore_position)
	(x_underline_at_descent_line)
	(x_use_underline_position_properties): Remove.
	* xsmfns.c (syms_of_xsmfns): Update.
	(Vx_session_id, Vx_session_previous_id): Remove.
	* xsettings.c (syms_of_xsettings): Update.
	(Vxft_settings, use_system_font): Remove.
	* xselect.c (syms_of_xselect): Update.
	(Vselection_converter_alist, Vx_lost_selection_functions)
	(Vx_sent_selection_functions, x_selection_timeout): Remove.
	* xfns.c (syms_of_xfns): Update.
	(Vgtk_version_string, Vmotif_version_string)
	(Vx_cursor_fore_pixel, Vx_hourglass_pointer_shape)
	(Vx_max_tooltip_size, Vx_mode_pointer_shape)
	(Vx_no_window_manager, Vx_nontext_pointer_shape)
	(Vx_pixel_size_width_font_regexp, Vx_pointer_shape)
	(Vx_sensitive_text_pointer_shape)
	(Vx_window_horizontal_drag_shape, x_gtk_file_dialog_help_text)
	(x_gtk_show_hidden_files, x_gtk_use_old_file_dialog)
	(x_gtk_use_system_tooltips, x_gtk_whole_detached_tool_bar):
	Remove.
	* xfaces.c (syms_of_xfaces): Update.
	(Vface_default_stipple, Vface_font_rescale_alist)
	(Vface_ignored_fonts, Vface_new_frame_defaults)
	(Vface_remapping_alist, Vfont_list_limit)
	(Vscalable_fonts_allowed, Vtty_defined_color_alist): Remove.
	* xdisp.c (syms_of_xdisp): Update.
	(Vauto_resize_tool_bars, Vblink_cursor_alist)
	(Vdisplay_pixels_per_inch, Vfontification_functions)
	(Vframe_title_format, Vglobal_mode_string)
	(Vglyphless_char_display, Vhourglass_delay, Vhscroll_step)
	(Vicon_title_format, Vinhibit_redisplay)
	(Vline_number_display_limit, Vline_prefix)
	(Vmax_mini_window_height, Vmenu_bar_update_hook)
	(Vmenu_updating_frame, Vmessage_log_max)
	(Vmouse_autoselect_window, Vnobreak_char_display)
	(Voverlay_arrow_position, Voverlay_arrow_string)
	(Voverlay_arrow_variable_list, Vredisplay_end_trigger_functions)
	(Vresize_mini_windows, Vshow_trailing_whitespace)
	(Vtool_bar_border, Vtool_bar_button_margin, Vtool_bar_style)
	(Vtruncate_partial_width_windows, Vvoid_text_area_pointer)
	(Vwindow_scroll_functions, Vwindow_size_change_functions)
	(Vwindow_text_change_functions, Vwrap_prefix)
	(auto_raise_tool_bar_buttons_p, automatic_hscrolling_p)
	(debug_end_pos, display_hourglass_p, emacs_scroll_step)
	(highlight_nonselected_windows, hscroll_margin)
	(inhibit_eval_during_redisplay, inhibit_free_realized_faces)
	(inhibit_menubar_update, inhibit_try_cursor_movement)
	(inhibit_try_window_id, inhibit_try_window_reusing)
	(line_number_display_limit_width)
	(make_cursor_line_fully_visible_p, message_truncate_lines)
	(mode_line_inverse_video, multiple_frames, overline_margin)
	(scroll_conservatively, scroll_margin, tool_bar_button_relief)
	(tool_bar_max_label_size, underline_minimum_offset)
	(unibyte_display_via_language_environment, x_stretch_cursor_p):
	Remove.
	* window.c (syms_of_window): Update.
	(Vminibuf_scroll_window, Vother_window_scroll_buffer)
	(Vrecenter_redisplay, Vscroll_preserve_screen_position)
	(Vtemp_buffer_show_function, Vwindow_configuration_change_hook)
	(Vwindow_point_insertion_type, auto_window_vscroll_p)
	(mode_line_in_non_selected_windows, next_screen_context_lines)
	(window_min_height, window_min_width): Remove.
	(scroll_margin): Remove declaration.
	* w32term.c (syms_of_w32term): Update.
	(Vw32_capslock_is_shiftlock, Vw32_grab_focus_on_raise)
	(Vw32_recognize_altgr, Vw32_swap_mouse_buttons)
	(Vx_toolkit_scroll_bars, w32_num_mouse_buttons)
	(w32_use_visible_system_caret, x_underline_at_descent_line)
	(x_use_underline_position_properties): Remove.
	(Vcommand_line_args, Vsystem_name, extra_keyboard_modifiers):
	Remove declaration.
	* w32select.c (syms_of_w32select): Update.
	(Vnext_selection_coding_system, Vselection_coding_system): Remove.
	* w32proc.c (syms_of_ntproc): Update.
	(Vw32_downcase_file_names, Vw32_generate_fake_inodes)
	(Vw32_get_true_file_attributes, Vw32_quote_process_args)
	(Vw32_start_process_inherit_error_mode)
	(Vw32_start_process_share_console)
	(Vw32_start_process_show_window, w32_pipe_read_delay): Remove.
	(Vsystem_name): Remove declaration.
	* w32font.c (syms_of_w32font): Update.
	(Vw32_charset_info_alist): Remove.
	* w32fns.c (globals_of_w32fns, syms_of_w32fns): Update.
	(Vw32_alt_is_meta, Vw32_apps_modifier, Vw32_bdf_filename_alist)
	(Vw32_color_map, Vw32_enable_caps_lock, Vw32_enable_num_lock)
	(Vw32_enable_palette, Vw32_lwindow_modifier)
	(Vw32_pass_alt_to_system, Vw32_pass_lwindow_to_system)
	(Vw32_pass_rwindow_to_system, Vw32_phantom_key_code)
	(Vw32_rwindow_modifier, Vw32_scroll_lock_modifier)
	(Vx_cursor_fore_pixel, Vx_hourglass_pointer_shape)
	(Vx_max_tooltip_size, Vx_mode_pointer_shape)
	(Vx_no_window_manager, Vx_nontext_pointer_shape)
	(Vx_pixel_size_width_font_regexp, Vx_pointer_shape)
	(Vx_sensitive_text_pointer_shape)
	(Vx_window_horizontal_drag_shape, w32_ansi_code_page)
	(w32_enable_synthesized_fonts, w32_mouse_button_tolerance)
	(w32_mouse_move_interval)
	(w32_pass_extra_mouse_buttons_to_system)
	(w32_pass_multimedia_buttons_to_system, w32_quit_key)
	(w32_strict_fontnames, w32_strict_painting): Remove.
	(Vhourglass_delay, Vmenu_bar_mode, Vtool_bar_mode)
	(Vw32_recognize_altgr, Vwindow_system_version)
	(w32_num_mouse_buttons, w32_use_visible_system_caret): Remove
	declaration.
	* w32console.c (syms_of_ntterm): Update.
	(w32_use_full_screen_buffer): Remove.
	(Vtty_defined_color_alist): Remove declaration.
	* w16select.c (syms_of_win16select): Update.
	(Vnext_selection_coding_system, Vselection_coding_system): Remove.
	* undo.c (syms_of_undo): Update.
	(Vundo_outer_limit, Vundo_outer_limit_function)
	(undo_inhibit_record_point, undo_limit, undo_strong_limit):
	Remove.
	* textprop.c (syms_of_textprop): Update.
	(Vchar_property_alias_alist, Vdefault_text_properties)
	(Vinhibit_point_motion_hooks, Vtext_property_default_nonsticky):
	Remove.
	* terminal.c (syms_of_terminal): Update.
	(Vdelete_terminal_functions, Vring_bell_function): Remove.
	* term.c (syms_of_term): Update.
	(Vresume_tty_functions, Vsuspend_tty_functions)
	(no_redraw_on_reenter, system_uses_terminfo, visible_cursor):
	Remove.
	* syntax.c (syms_of_syntax): Update.
	(Vfind_word_boundary_function_table, multibyte_syntax_as_symbol)
	(open_paren_in_column_0_is_defun_start)
	(parse_sexp_ignore_comments, parse_sexp_lookup_properties)
	(words_include_escapes): Remove.
	* search.c (syms_of_search): Update.
	(Vinhibit_changing_match_data, Vsearch_spaces_regexp): Remove.
	* process.c (syms_of_process): Update.
	(Vprocess_adaptive_read_buffering, Vprocess_connection_type)
	(delete_exited_processes): Remove.
	* print.c (syms_of_print): Update.
	(Vfloat_output_format, Vprint_charset_text_property)
	(Vprint_circle, Vprint_continuous_numbering, Vprint_gensym)
	(Vprint_length, Vprint_level, Vprint_number_table)
	(Vstandard_output, print_escape_multibyte)
	(print_escape_newlines, print_escape_nonascii, print_quoted):
	Remove.
	* msdos.c (syms_of_msdos): Update.
	(Vdos_unsupported_char_glyph): Remove.
	(unibyte_display_via_language_environment): Remove declaration.
	* minibuf.c (syms_of_minibuf): Update.
	(Vcompletion_regexp_list, Vhistory_add_new_input)
	(Vhistory_length, Vminibuffer_completing_file_name)
	(Vminibuffer_completion_confirm)
	(Vminibuffer_completion_predicate, Vminibuffer_completion_table)
	(Vminibuffer_exit_hook, Vminibuffer_help_form)
	(Vminibuffer_history_position, Vminibuffer_history_variable)
	(Vminibuffer_prompt_properties, Vminibuffer_setup_hook)
	(Vread_buffer_function, Vread_expression_map)
	(completion_ignore_case, enable_recursive_minibuffers)
	(history_delete_duplicates, minibuffer_allow_text_properties)
	(minibuffer_auto_raise, read_buffer_completion_ignore_case):
	Remove.
	* marker.c (syms_of_marker): Update.
	(byte_debug_flag): Remove.
	* macros.c (syms_of_macros): Update.
	(Vexecuting_kbd_macro, executing_kbd_macro_index): Remove.
	* lread.c (syms_of_lread): Update.
	(Vafter_load_alist, Vbyte_boolean_vars)
	(Vbytecomp_version_regexp, Vcurrent_load_list)
	(Veval_buffer_list, Vload_file_name, Vload_file_rep_suffixes)
	(Vload_history, Vload_path, Vload_read_function)
	(Vload_source_file_function, Vload_suffixes, Vobarray)
	(Vold_style_backquotes, Vpreloaded_file_list, Vread_circle)
	(Vread_symbol_positions_list, Vread_with_symbol_positions)
	(Vsource_directory, Vstandard_input, Vuser_init_file, Vvalues)
	(force_load_messages, load_convert_to_unibyte)
	(load_dangerous_libraries, load_force_doc_strings)
	(load_in_progress): Remove.
	* keymap.c (syms_of_keymap): Update.
	(Vdefine_key_rebound_commands, Vemulation_mode_map_alists)
	(Vminibuffer_local_completion_map)
	(Vminibuffer_local_filename_completion_map)
	(Vminibuffer_local_filename_must_match_map)
	(Vminibuffer_local_map, Vminibuffer_local_must_match_map)
	(Vminibuffer_local_ns_map, Vminor_mode_map_alist)
	(Vminor_mode_overriding_map_alist, Vwhere_is_preferred_modifier):
	Remove.
	* keyboard.c (syms_of_keyboard): Update.
	(Vauto_save_timeout, Vcommand_error_function)
	(Vcommand_hook_internal, Vdeactivate_mark)
	(Vdeferred_action_function, Vdeferred_action_list)
	(Vdisable_point_adjustment, Vdouble_click_time)
	(Vecho_keystrokes, Venable_disabled_menus_and_buttons)
	(Vfunction_key_map, Vglobal_disable_point_adjustment)
	(Vhelp_char, Vhelp_event_list, Vhelp_form)
	(Vinput_method_function, Vinput_method_previous_message)
	(Vkey_translation_map, Vlast_event_frame)
	(Vlucid_menu_bar_dirty_flag, Vmenu_bar_final_items)
	(Vminibuffer_message_timeout, Voverriding_local_map)
	(Voverriding_local_map_menu_flag, Vpost_command_hook)
	(Vpre_command_hook, Vprefix_help_command)
	(Vsaved_region_selection, Vselect_active_regions)
	(Vshow_help_function, Vspecial_event_map, Vsuggest_key_bindings)
	(Vthis_command, Vthis_command_keys_shift_translated)
	(Vthis_original_command, Vthrow_on_input, Vtimer_idle_list)
	(Vtimer_list, Vtool_bar_separator_image_expression, Vtop_level)
	(Vtty_erase_char, Vunread_command_events)
	(Vunread_input_method_events, Vunread_post_input_method_events)
	(auto_save_interval, cannot_suspend, do_mouse_tracking)
	(double_click_fuzz, extra_keyboard_modifiers)
	(inhibit_local_menu_bar_menus, last_command_event)
	(last_input_event, last_nonmenu_event, menu_prompt_more_char)
	(menu_prompting, meta_prefix_char, num_input_keys)
	(num_nonmacro_input_events, polling_period, unread_command_char):
	Remove.
	* insdel.c (syms_of_insdel): Update.
	(Vcombine_after_change_calls, check_markers_debug_flag): Remove.
	* indent.c (syms_of_indent): Update.
	(indent_tabs_mode): Remove.
	* image.c (syms_of_image): Update.
	(Vimage_cache_eviction_delay, Vimage_types)
	(Vimagemagick_render_type, Vmax_image_size, Vx_bitmap_file_path)
	(cross_disabled_images): Remove.
	* fringe.c (syms_of_fringe): Update.
	(Vfringe_bitmaps, Voverflow_newline_into_fringe): Remove.
	* frame.c (syms_of_frame): Update.
	(Vdefault_frame_alist, Vdefault_frame_scroll_bars)
	(Vdelete_frame_functions, Vframe_alpha_lower_limit)
	(Vmake_pointer_invisible, Vmenu_bar_mode, Vmouse_highlight)
	(Vmouse_position_function, Vterminal_frame, Vtool_bar_mode)
	(Vx_resource_class, Vx_resource_name, focus_follows_mouse):
	Remove.
	* fontset.c (syms_of_fontset): Update.
	(Valternate_fontname_alist, Vfont_encoding_charset_alist)
	(Vfontset_alias_alist, Vignore_relative_composition)
	(Votf_script_alist, Vuse_default_ascent)
	(Vvertical_centering_font_regexp): Remove.
	* font.c (syms_of_font): Update.
	(Vfont_encoding_alist, Vfont_log, Vfont_slant_table)
	(Vfont_weight_table, Vfont_width_table): Remove.
	* fns.c (syms_of_fns): Update.
	(Vfeatures, use_dialog_box, use_file_dialog): Remove.
	* filelock.c (syms_of_filelock): Update.
	(Vtemporary_file_directory): Remove.
	* fileio.c (syms_of_fileio): Update.
	(Vafter_insert_file_functions, Vauto_save_include_big_deletions)
	(Vauto_save_list_file_name, Vauto_save_visited_file_name)
	(Vdefault_file_name_coding_system, Vfile_name_coding_system)
	(Vfile_name_handler_alist, Vinhibit_file_name_handlers)
	(Vinhibit_file_name_operation, Vset_auto_coding_function)
	(Vwrite_region_annotate_functions)
	(Vwrite_region_annotations_so_far)
	(Vwrite_region_post_annotation_function)
	(delete_by_moving_to_trash, write_region_inhibit_fsync): Remove.
	(Vw32_get_true_file_attributes): Remove declaration.
	* eval.c (syms_of_eval): Update.
	(Vdebug_ignored_errors, Vdebug_on_error, Vdebug_on_signal)
	(Vdebugger, Vinhibit_quit, Vmacro_declaration_function)
	(Vquit_flag, Vsignal_hook_function, Vstack_trace_on_error)
	(debug_on_next_call, debug_on_quit, debugger_may_continue)
	(max_lisp_eval_depth, max_specpdl_size): Remove.
	* emacs.c (syms_of_emacs): Update.
	(Vafter_init_time, Vbefore_init_time, Vcommand_line_args)
	(Vdynamic_library_alist, Vemacs_copyright, Vemacs_version)
	(Vinstallation_directory, Vinvocation_directory)
	(Vinvocation_name, Vkill_emacs_hook, Vpath_separator)
	(Vprevious_system_messages_locale, Vprevious_system_time_locale)
	(Vsystem_configuration, Vsystem_configuration_options)
	(Vsystem_messages_locale, Vsystem_time_locale, Vsystem_type)
	(inhibit_x_resources, noninteractive1): Remove.
	* editfns.c (syms_of_editfns): Update.
	(Vbuffer_access_fontified_property)
	(Vbuffer_access_fontify_functions, Vinhibit_field_text_motion)
	(Voperating_system_release, Vsystem_name, Vuser_full_name)
	(Vuser_login_name, Vuser_real_login_name): Remove.
	* dosfns.c (syms_of_dosfns): Update.
	(Vdos_display_scancodes, Vdos_version, Vdos_windows_version)
	(dos_codepage, dos_country_code, dos_decimal_point)
	(dos_hyper_key, dos_keyboard_layout, dos_keypad_mode)
	(dos_super_key, dos_timezone_offset): Remove.
	* doc.c (syms_of_doc): Update.
	(Vbuild_files, Vdoc_file_name): Remove.
	* dispnew.c (syms_of_display): Update.
	(Vglyph_table, Vinitial_window_system)
	(Vredisplay_preemption_period, Vstandard_display_table)
	(Vwindow_system_version, baud_rate, cursor_in_echo_area)
	(inverse_video, redisplay_dont_pause, visible_bell): Remove.
	* dired.c (syms_of_dired): Update.
	(Vcompletion_ignored_extensions): Remove.
	(Vw32_get_true_file_attributes): Remove declaration.
	* dbusbind.c (syms_of_dbusbind): Update.
	(Vdbus_debug, Vdbus_registered_buses)
	(Vdbus_registered_objects_table): Remove.
	* data.c (syms_of_data): Update.
	(Vmost_negative_fixnum, Vmost_positive_fixnum): Remove.
	* composite.c (syms_of_composite): Update.
	(Vauto_composition_function, Vauto_composition_mode)
	(Vcompose_chars_after_function, Vcomposition_function_table):
	Remove.
	* coding.c (syms_of_coding): Update.
	(Vcharset_revision_table, Vcoding_category_list)
	(Vcoding_system_alist, Vcoding_system_for_read)
	(Vcoding_system_for_write, Vcoding_system_list)
	(Vdefault_process_coding_system, Venable_character_translation)
	(Vfile_coding_system_alist, Vlast_code_conversion_error)
	(Vlast_coding_system_used, Vlatin_extra_code_table)
	(Vlocale_coding_system, Vnetwork_coding_system_alist)
	(Vprocess_coding_system_alist)
	(Vselect_safe_coding_system_function)
	(Vstandard_translation_table_for_decode)
	(Vstandard_translation_table_for_encode)
	(Vtranslation_table_for_input, coding_system_require_warning)
	(eol_mnemonic_dos, eol_mnemonic_mac, eol_mnemonic_undecided)
	(eol_mnemonic_unix, inherit_process_coding_system)
	(inhibit_eol_conversion, inhibit_iso_escape_detection)
	(inhibit_null_byte_detection): Remove.
	* cmds.c (syms_of_cmds): Update.
	(Vpost_self_insert_hook): Remove.
	* charset.c (syms_of_charset): Update.
	(Vcharset_list, Vcharset_map_path, Vcurrent_iso639_language)
	(inhibit_load_charset_map): Remove.
	* character.c (syms_of_character): Update.
	(Vauto_fill_chars, Vchar_direction_table, Vchar_script_table)
	(Vchar_width_table, Vprintable_chars)
	(Vscript_representative_chars, Vtranslation_table_vector)
	(Vunicode_category_table): Remove.
	* ccl.c (syms_of_ccl): Update.
	(Vcode_conversion_map_vector, Vfont_ccl_encoder_alist)
	(Vtranslation_hash_table_vector): Remove.
	* category.c (syms_of_category): Update.
	(Vword_combining_categories, Vword_separating_categories): Remove.
	* callproc.c (syms_of_callproc): Update.
	(Vconfigure_info_directory, Vdata_directory, Vdoc_directory)
	(Vexec_directory, Vexec_path, Vexec_suffixes)
	(Vinitial_environment, Vprocess_environment)
	(Vshared_game_score_directory, Vshell_file_name): Remove.
	* callint.c (syms_of_callint): Update.
	(Vcommand_debug_status, Vcommand_history, Vcurrent_prefix_arg)
	(Vmark_even_if_inactive, Vmouse_leave_buffer_hook): Remove.
	* bytecode.c (syms_of_bytecode): Update.
	(Vbyte_code_meter, byte_metering_on): Remove.
	* buffer.c (syms_of_buffer): Update.
	(Vafter_change_functions, Vbefore_change_functions)
	(Vchange_major_mode_hook, Vfirst_change_hook)
	(Vinhibit_read_only, Vkill_buffer_query_functions)
	(Vtransient_mark_mode, inhibit_modification_hooks): Remove.
	* alloc.c (syms_of_alloc): Update.
	(Vgc_cons_percentage, Vgc_elapsed, Vmemory_full)
	(Vmemory_signal_data, Vpost_gc_hook, Vpurify_flag)
	(cons_cells_consed, floats_consed, garbage_collection_messages)
	(gc_cons_threshold, gcs_done, intervals_consed)
	(misc_objects_consed, pure_bytes_used, string_chars_consed)
	(strings_consed, symbols_consed, vector_cells_consed): Remove.

	* lisp.h (DEFVAR_LISP, DEFVAR_LISP_NOPRO, DEFVAR_BOOL)
	(DEFVAR_INT): Assume global is in `globals'.
	* alloc.c (globals): Define.
"
e061a11b5a59f02fac66184e991f01a433f6dc8d,kfowler/emacs,"Add GnuTLS support for W32 and certificate and hostname verification in GnuTLS.

* src/gnutls.c: Renamed global_initialized to
gnutls_global_initialized.  Added internals for the
:verify-hostname-error, :verify-error, and :verify-flags
parameters of `gnutls-boot' and documented those parameters in the
docstring.  Start callback support.
(emacs_gnutls_handshake): Add Woe32 support. Retry handshake
unless a fatal error occured. Call gnutls_alert_send_appropriate
on error. Return error code.
(emacs_gnutls_write): Call emacs_gnutls_handle_error.
(emacs_gnutls_read): Likewise.
(Fgnutls_boot): Return handshake error code.
(emacs_gnutls_handle_error): New function.
(wsaerror_to_errno): Likewise.

* src/gnutls.h: Add GNUTLS_STAGE_CALLBACKS enum to denote we're in the
callbacks stage.

* src/w32.c (emacs_gnutls_pull): New function for GnuTLS on Woe32.
(emacs_gnutls_push): Likewise.

* src/w32.h (emacs_gnutls_pull): Add prototype.
(emacs_gnutls_push): Likewise.
"
38182d901d030c7d65f4aa7a49b583afb30eb9b7,kfowler/emacs,"More xmalloc and related cleanup.

* alloc.c, bidi.c, buffer.c, buffer.h, bytecode.c, callint.c:
* callproc.c, charset.c, coding.c, composite.c, data.c, dispnew.c:
* doc.c, editfns.c, emacs.c, eval.c, fileio.c, filelock.c, fns.c:
* font.c, fontset.c, frame.c, fringe.c, ftfont.c, ftxfont.c, gmalloc.c:
* gtkutil.c, image.c, keyboard.c, keymap.c, lread.c, macros.c, menu.c:
* nsfns.m, nsfont.m, nsmenu.m, nsterm.m, print.c, process.c, ralloc.c:
* regex.c, region-cache.c, scroll.c, search.c, sound.c, syntax.c:
* sysdep.c, term.c, termcap.c, unexmacosx.c, window.c, xdisp.c:
* xfaces.c, xfns.c, xftfont.c, xgselect.c, xmenu.c, xrdb.c, xselect.c:
* xterm.c:
Omit needless casts involving void * pointers and allocation.
Prefer ""P = xmalloc (sizeof *P)"" to ""P = xmalloc (sizeof (TYPE_OF_P))"",
as the former is more robust if P's type is changed.
Prefer xzalloc to xmalloc + memset 0.
Simplify malloc-or-realloc to realloc.
Don't worry about xmalloc returning a null pointer.
Prefer xstrdup to xmalloc + strcpy.
* editfns.c (Fmessage_box): Grow message_text by at least 80 when
growing it.
* keyboard.c (apply_modifiers_uncached): Prefer local array to
alloca of a constant.
"
05b621a6b22cb1c856a9f223d79203cb3ceaf29a,kfowler/emacs,"More Emacs 24.3 documentation updates.

* doc/emacs/building.texi (Compilation): Document compilation-always-kill.

* doc/emacs/files.texi (Misc File Ops): Symbolic links on Windows only work
on Vista and later.

* doc/emacs/frames.texi (Mouse Avoidance): Mention new variable
mouse-avoidance-banish-position.

* doc/emacs/mule.texi (Recognize Coding): Remove an unreferenced vindex.

* doc/emacs/package.texi (Package Menu): Document the ""new"" status.

* doc/emacs/programs.texi (Which Function): Which Function mode now works in
all major modes by default.

* doc/emacs/search.texi (Symbol Search): New node.

* doc/emacs/windows.texi (Window Choice): Don't refer to the obsolete
special-display feature.

* commands.texi (Event Input Misc): Remove last-input-char.
(Command Loop Info): Remove last-command-char.

* display.texi (Fringe Bitmaps): Add exclamation-mark bitmap.

* frames.texi (Initial Parameters): Don't mention the obsolete
special-display feature.

* hooks.texi (Standard Hooks): Remove obsolete hooks.

* markers.texi (Information from Markers): Remove obsolete
function buffer-has-markers-at.

* minibuf.texi (High-Level Completion): Don't mention removed
function iswitchb-read-buffer.

* text.texi (Yanking): Document yank-handled-properties.

* windows.texi (Choosing Window): Don't mention the obsolete
special display feature.
(Choosing Window Options): Remove obsolete special-display
variables, and the functions special-display-p and
special-display-popup-frame.

* subr.el (insert-buffer-substring-as-yank): Doc fix.
"
3d80c99f3817bf5eccd6acc6a79498a4fde979a4,kfowler/emacs,"Rewrite sampler to use Elisp hash-tables.
* src/profiler.c: Remove filtering functionality.
(is_in_trace, Qgc): Remove vars.
(make_log, record_backtrace, Fsample_profiler_log):
Rewrite, using Elisp hash-tables.
(approximate_median, evict_lower_half): New functions.
(cpu_log): Rename from sample_log.
(cpu_gc_count): New var.
(Fsample_profiler_reset, Fmemory_profiler_reset): Remove.
(sigprof_handler): Add count to cpu_gc_count during GC, detected via
backtrace_list.
(block_sigprof, unblock_sigprof): Remove.
(gc_probe, mark_profiler): Remove functions.
(syms_of_profiler): Staticpro cpu_log and memory_log.

* lisp/profiler.el (profiler-sample-interval): Move before first use.
Change default to 1ms.
(profiler-entry=, profiler-backtrace-reverse, profiler-log-fixup-slot)
(profiler-calltree-elapsed<, profiler-calltree-elapsed>): Remove functions.
(profiler-entry-format): Don't use type-of.
(profiler-slot, profiler-log): Remove structs.
(profiler-log-timestamp, profiler-log-type, profiler-log-diff-p):
Redefine for new log representation.
(profiler-log-diff, profiler-log-fixup, profiler-calltree-build-1):
Rewrite for new log representation.
(profiler-calltree): Remove `elapsed' fields.
(profiler-calltree-count<, profiler-report-make-entry-part):
Remove gc special case.
(profiler-calltree-find): Use equal.
(profiler-calltree-walk): Remove `args'; rely on closures instead.
(profiler-calltree-compute-percentages-1): Remove; inlined.
(profiler-calltree-compute-percentages): Simplify.
(profiler-report-log, profiler-report-reversed)
(profiler-report-order): Use defvar-local.
(profiler-report-line-format): Remove `elapsed', do a bit of CSE.
(profiler-report-mode-map): Remove up/down bindings.
(profiler-report-make-buffer-name): Simplify by CSE.
(profiler-report-mode): Remove redundant code.
(profiler-report-expand-entry, profiler-report-collapse-entry):
Use inhibit-read-only.
(profiler-report-render-calltree-1): Simplify by CSE.
(profiler-reset): Rewrite for new subroutines.
(profiler--report-cpu): Rename from sample-profiler-report.
(profiler--report-memory): Rename from memory-profiler-report.

* src/alloc.c (Fgarbage_collect): Record itself in backtrace_list.
Don't set is_in_trace any more.  Don't call mark_profiler.
Only call gc_probe for the memory profiler.
(syms_of_alloc): Define Qautomatic_gc.

* src/lisp.h (SXHASH_COMBINE): Move back to...
* src/fns.c (SXHASH_COMBINE): ...here.

* src/xdisp.c (Qautomatic_redisplay): New constant.
(redisplay_internal): Record itself in backtrace_list.
(syms_of_xdisp): Define Qautomatic_redisplay.

* .dir-locals.el (indent-tabs-mode): Remove personal preference.
"
5b8ffbdddd1280515a254c360f67626f0c9ab3c8,kfowler/emacs,"* bidi.c: Integer signedness and overflow fixes.

(bidi_cache_idx, bidi_cache_last_idx, bidi_cache_fetch_state)
(bidi_cache_search, bidi_cache_find_level_change)
(bidi_cache_iterator_state, bidi_cache_find, bidi_find_other_level_edge)
(bidi_dump_cached_states):
Don't arbitrarily limit cache indexes to int; use ptrdiff_t instead.
(bidi_cache_size): Use ptrdiff_t rather than size_t, as we prefer
signed integers.
(elsz): Make it a (signed) constant.
(bidi_cache_iterator_state): Check for size-calculation overflow.
"
73dcdb9f30cb94a3183db54d9b463370c3978d4d,kfowler/emacs,"Use faccessat, not access, when checking file permissions.

This fixes a bug that has been present in Emacs since its creation.
It was reported by Chris Torek in 1983 even before GNU Emacs existed,
which must set some sort of record.  (Torek's bug report was against
a predecessor of GNU Emacs, but GNU Emacs happened to have the
same common flaw.)  See Torek's Usenet posting
""setuid/setgid programs & Emacs"" Article-I.D.: sri-arpa.858
Posted: Fri Apr  8 14:18:56 1983.
* .bzrignore: Add lib/fcntl.h.
* configure.ac (euidaccess): Remove check; gnulib does this for us now.
(gl_FCNTL_O_FLAGS): Define a dummy version.
* lib/at-func.c, lib/euidaccess.c, lib/faccessat.c, lib/fcntl.in.h:
* lib/getgroups.c, lib/group-member.c, lib/root-uid.h:
* lib/xalloc-oversized.h, m4/euidaccess.m4, m4/faccessat.m4:
* m4/fcntl_h.m4, m4/getgroups.m4, m4/group-member.m4:
New files, from gnulib.
* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
* admin/merge-gnulib (GNULIB_MODULES): Add faccessat.
(GNULIB_TOOL_FLAGS): Avoid at-internal, fchdir, malloc-posix,
openat-die, openat-h, save-cwd.  Do not avoid fcntl-h.
Omit gnulib's m4/fcntl-o.m4.
* nt/inc/ms-w32.h (AT_FDCWD, AT_EACCESS): New symbols.
(access): Remove.
(faccessat): New macro.
* src/Makefile.in (LIB_EACCESS): New macro.
(LIBES): Use it.
* src/callproc.c (init_callproc):
* src/charset.c (init_charset):
* src/fileio.c (check_existing, check_executable, check_writable)
(Ffile_readable_p):
* src/lread.c (openp, load_path_check):
* src/process.c (allocate_pty):
* src/xrdb.c (file_p):
Use effective UID when checking permissions, not real UID.
* src/callproc.c (init_callproc):
* src/charset.c (init_charset):
* src/lread.c (load_path_check, init_lread):
Test whether directories are accessible, not merely whether they exist.
* src/conf_post.h (GNULIB_SUPPORT_ONLY_AT_FDCWD): New macro.
* src/fileio.c (check_existing, check_executable, check_writable)
(Ffile_readable_p):
Use symbolic names instead of integers for the flags, as they're
portable now.
(check_writable): New arg AMODE.  All uses changed.
Set errno on failure.
(Ffile_readable_p): Use faccessat, not stat + open + close.
(Ffile_writable_p): No need to call check_existing + check_writable.
Just call check_writable and then look at errno.  This saves a syscall.
dir should never be nil; replace an unnecessary runtime check
with an eassert.  When checking the parent directory of a nonexistent
file, check that the directory is searchable as well as writable, as
we can't create files in unsearchable directories.
(file_directory_p): New function, which uses 'stat' on most platforms
but faccessat with D_OK (for efficiency) if WINDOWSNT.
(Ffile_directory_p, Fset_file_times): Use it.
(file_accessible_directory_p): New function, which uses a single
syscall for efficiency.
(Ffile_accessible_directory_p): Use it.
* src/xrdb.c (file_p): Use file_directory_p.
* src/lisp.h (file_directory_p, file_accessible_directory_p): New decls.
* src/lread.c (openp): When opening a file, use fstat rather than
stat, as that avoids a permissions race.  When not opening a file,
use file_directory_p rather than stat.
(dir_warning): First arg is now a usage string, not a format.
Use errno.  All uses changed.
* src/nsterm.m (ns_term_init): Remove unnecessary call to file-readable
that merely introduced a race.
* src/process.c, src/sysdep.c, src/term.c: All uses of '#ifdef O_NONBLOCK'
changed to '#if O_NONBLOCK', to accommodate gnulib O_* style,
and similarly for the other O_* flags.
* src/w32.c (sys_faccessat): Rename from sys_access and switch to
faccessat's API.  All uses changed.
* src/xrdb.c: Do not include <sys/stat.h>; no longer needed.
(magic_db): Rename from magic_file_p.
(magic_db, search_magic_path): Return an XrmDatabase rather than a
char *, so that we don't have to test for file existence
separately from opening the file for reading.  This removes a race
fixes a permission-checking problem, and simplifies the code.
All uses changed.
(file_p): Remove; no longer needed.

Fixes: debbugs:12632
"
b65575536f4b2749b72b04b3031e1231dd5fce73,kfowler/emacs,"* src/xfaces.c (lookup_face): Make static.
* src/dispnew.c (copy_row_except_pointers): Likewise.
* src/syntax.c (dec_bytepos): Likewise.
(inc_bytepos): Remove.
* src/dispextern.h (lookup_face): Remove declaration.
"
94dcfacf129aa99be3e375187d75a193ffe26bad,kfowler/emacs,"Improve `doprnt' and its usage.  (Bug#8545)

 src/doprnt.c (doprnt): Make sure `format' is never accessed beyond
 `format_end'.  Remove support for %l as a conversion specifier.
 Don't use xrealloc.  Improve diagnostics when the %l size modifier
 is used.  Update the commentary.
 src/eval.c (verror): Simplify calculation of size_t.
 src/coding.c (Ffind_operation_coding_system): Fix diagnostic error
 messages.
"
5b04e9f9ac3212f0eb88c853dd21dd63a8bdbee2,kfowler/emacs,"Simplify by using FOR_EACH_FRAME here and there.
* frame.c (next_frame, prev_frame, other_visible_frames)
(delete_frame, visible-frame-list): Use FOR_EACH_FRAME.
* w32term.c (x_window_to_scroll_bar): Likewise.
* window.c (window_list): Likewise.
* xdisp.c (x_consider_frame_title): Likewise.
* xfaces.c ( Fdisplay_supports_face_attributes_p): Likewise.
* xfns.c (x_window_to_frame, x_any_window_to_frame)
(x_menubar_window_to_frame, x_top_window_to_frame): Likewise.
* xmenu.c (menubar_id_to_frame): Likewise.
* xselect.c (frame_for_x_selection): Likewise.
* xterm.c (x_frame_of_widget, x_window_to_scroll_bar)
(x_window_to_menu_bar): Likewise.
* w32fns.c (x_window_to_frame): Likewise.  Adjust comment.
"
f00af5b1c24515f20f96cfd8d59983ab62fb3f25,kfowler/emacs,"* frame.h (FSET): Remove (Bug#12215).

Replace all uses with calls to new setter functions.
Use INLINE_HEADER_BEGIN, INLINE_HEADER_END.
(FRAME_INLINE): New macro.
(fset_buffer_list, fset_buried_buffer_list, fset_condemned_scroll_bars)
(fset_current_tool_bar_string, fset_desired_tool_bar_string)
(fset_face_alist, fset_focus_frame, fset_icon_name, fset_menu_bar_items)
(fset_menu_bar_vector, fset_menu_bar_window, fset_name)
(fset_param_alist, fset_root_window, fset_scroll_bars)
(fset_selected_window, fset_title, fset_tool_bar_items)
(fset_tool_bar_position, fset_tool_bar_window): New functions.
* frame.c (FRAME_INLINE):
Define to EXTERN_INLINE, so that the corresponding functions
are compiled into code.
(fset_buffer_predicate, fset_minibuffer_window): New setter functions.
"
91cbc7b729304302efe7e1d34ac9bb5dc6550f12,kfowler/emacs,"; Rename local var nsecs to adaptive_nsecs

* src/process.c (wait_reading_process_output): Rename inner nsecs to
adaptive_nsecs.  There is already an nsecs, and this function is
confusing enough (Bug#20978).
"
3193acd258557340907a7281d067fdbb426c2f54,kfowler/emacs,"Use INTERNAL_FIELD for processes.
* src/process.h (PVAR): New macro.  Adjust style.
(struct Lisp_Process): Change Lisp_Object members to INTERNAL_FIELD.
* src/print.c, src/process.c, src/sysdep.c, src/w32.c:
* src/xdisp.c: Users changed.
* admin/coccinelle/process.cocci: Semantic patch to replace direct
access to Lisp_Object members of struct Lisp_Process to PVAR.
"
29c72a6e4382d33779f7706719cb784ee4c4ef88,kfowler/emacs,"SMIE: Reliably distinguish openers/closers in smie-prec2-levels
* lisp/emacs-lisp/smie.el (smie-bnf-classify): New function.
(smie-bnf-precedence-table): Use it to remember the closers/openers.
(smie-merge-prec2s): Handle those new entries.
(smie-prec2-levels): Only set precedence to nil for actual
openers/closers.
* lisp/progmodes/octave-mod.el (octave-smie-op-levels): Remove dummy entry
that is now unnecessary.
"
be755c79bdba0a187af6541b0fea7d55d5b23754,kfowler/emacs,"* rect.el (copy-rectangle-as-kill): New command.

* lisp/rect.el, lisp/register.el: Move bindings to bindings.el.

* lisp/bindings.el: Consolidate ctl-x-r-map bindings.  Bind
copy-rectangle-as-kill to C-x r w.

Fixes: debbugs:739
"
6dad71783c018d3ccabcede7db6ea206de5b3255,kfowler/emacs,"Support symlinks on latest versions of MS-Windows.

 src/w32.c: Include winioctl.h and aclapi.h.
 (is_symlink, chase_symlinks, enable_privilege, restore_privilege)
 (revert_to_self): Forward declarations of static functions.
 <static BOOL g_b_init_get_security_info>:
 <g_b_init_create_symbolic_link>: New static flags.
 (globals_of_w32): Initialize them to zero.
 (GetSecurityInfo_Proc, CreateSymbolicLink_Proc): New typedefs.
 (map_w32_filename): Improve commentary.  Simplify switch.
 (SYMBOLIC_LINK_FLAG_DIRECTORY): Define if not defined in system
 headers (most versions of MinGW w32api don't).
 (get_security_info, create_symbolic_link)
 (get_file_security_desc_by_handle, is_symlink, chase_symlinks):
 New functions.
 (sys_access, sys_chmod): Call 'chase_symlinks' to resolve symlinks
 in the argument file name.
 (sys_access): Call unc_volume_file_attributes only if
 GetFileAttributes fails with network-related error codes.
 (sys_rename): Diagnose renaming of a symlink when the user doesn't
 have the required privileges.
 (get_file_security_desc_by_name): Renamed from
 get_file_security_desc.
 (stat_worker): New function, with most of the guts of 'stat', and
 with addition of handling of symlinks and support for 'lstat'.  If
 possible, get file's attributes and security information by
 handle, not by name.  Produce S_IFLNK bit for symlinks, when
 called from 'lstat'.
 (stat, lstat): New functions, call 'stat_worker'.
 (symlink, readlink, careadlinkat): Rewritten to create and resolve
 symlinks when the underlying filesystem supports them.

 lib/src/ntlib.c (lstat): New function, calls 'stat'.

 nt/inc/sys/stat.h (S_IFLNK): Define.
 (S_ISLNK): A non-trivial definition.
 (lstat): Prototype instead of a macro that redirects to 'stat'.

 lisp/files.el (file-truename): Don't skip symlink-chasing part on
 windows-nt.  Incorporate the resolution of 8+3 short aliases on
 Windows into the loop that recursively chases symlinks.  Compare
 directory and its parent case-insensitively on MS-Windows and
 MS-DOS.

 etc/NEWS: Announce the symlink support on MS-Windows.
"
53967e09ad89f11531c7fee0240c2eac1f63922c,kfowler/emacs,"Add optional arg to delete-file to force deletion (Bug#6070).

* eval.c (internal_condition_case_n): Rename from
internal_condition_case_2.
(internal_condition_case_2): New function.

* xdisp.c (safe_call): Use internal_condition_case_n.

* fileio.c (Fdelete_file, internal_delete_file): New arg FORCE.
(internal_delete_file, Frename_file): Callers changed.

* buffer.c (Fkill_buffer):
* callproc.c (delete_temp_file): Callers changed (Bug#6070).

* lisp.h: Update prototypes.

* diff.el (diff-sentinel):

* epg.el (epg--make-temp-file, epg-decrypt-string)
(epg-verify-string, epg-sign-string, epg-encrypt-string):

* jka-compr.el (jka-compr-partial-uncompress)
(jka-compr-call-process, jka-compr-write-region, jka-compr-load):

* server.el (server-sentinel): Use delete-file's new FORCE arg
(Bug#6070).
"
af7c7572ce8d87f51817d0f518d1b0aced074a41,kfowler/emacs,"Fix display of R2L lines and cursor motion in bidi buffers.

 xdisp.c (find_row_end): New function, refactored from display_line.
 (display_line): Use it.
 (extend_face_to_end_of_line): In almost-filled rows, extend only
 if the row is R2L and not continued.
 (display_line): Fix prepending of truncation glyphs to R2L rows.
 Preserve overlay and string info in row->end.
 (insert_left_trunc_glyphs): Support addition of left truncation
 glyphs to R2L rows.
 (set_cursor_from_row): Don't place cursor on the vertical border
 glyph between adjacent windows.  Fix a crash when a display string
 is continued to the next line.  Don't return zero if cursor was
 found by `cursor' property of a display string.
 (try_cursor_movement): Don't assume that row->end == (row+1)->start,
 test for that explicitly.
"
c71f515666d0ac7e509fe3a5e7e266bc0f428785,kfowler/emacs,"* xfaces.c (face_at_buffer_position): Remove unused local.
"
a864ef14570715dc3233fbbf2e9da7aa8f29729e,kfowler/emacs,"Use bool for booleans in font-related modules.

* font.c (font_intern_prop, font_style_to_value)
(font_style_symbolic, font_parse_xlfd, font_parse_fcname)
(generate_otf_features, font_check_otf_features, font_check_otf)
(font_match_p, font_list_entities, font_at):
* fontset.c (fontset_id_valid_p, reorder_font_vector
(fontset_find_font, Fset_fontset_font)
(face_suitable_for_char_p) [0]:
* ftfont.c (fc_initialized, ftfont_get_open_type_spec)
(ftfont_open, ftfont_text_extents, ftfont_check_otf):
(m17n_flt_initialized, ftfont_shape_by_flt):
* ftxfont.c (ftxfont_draw_bitmap, ftxfont_draw):
* nsfont.m (nsfont_draw):
* w32font.c (w32font_draw):
* w32term.c (x_draw_glyphless_glyph_string_foreground):
Use bool for booleans.
* font.h: Adjust to above API changes.
(struct font, struct font_driver, struct font_driver_list):
Use bool for booleans.
(struct font): Remove useless member encoding_type.
All users removed.
* fontset.c, xftfont.c: Omit unnecessary static decls.
"
1111783029f1d7f50c348d1836ec56c62fb344c2,kfowler/emacs,"Redesign bidi-aware edge positions of glyph rows, fix bug #6036.

 dispextern.h (struct glyph_row): New members minpos and maxpos.
 (MATRIX_ROW_START_CHARPOS, MATRIX_ROW_START_BYTEPOS)
 (MATRIX_ROW_END_CHARPOS, MATRIX_ROW_END_BYTEPOS): Reference minpos
 and maxpos members instead of start.pos and end.pos, respectively.
 xdisp.c (display_line): Compare IT_CHARPOS with the position in
 row->start.pos, rather than with MATRIX_ROW_START_CHARPOS.
 (cursor_row_p): Use row->end.pos rather than MATRIX_ROW_END_CHARPOS.
 (try_window_reusing_current_matrix, try_window_id): Use
 ROW->minpos rather than ROW->start.pos.
 (init_from_display_pos, init_iterator): Use EMACS_INT for
 character and byte positions.
 (find_row_edges): Renamed from find_row_end.  Accept additional
 arguments for minimum and maximum buffer positions seen by
 display_line for this row.  Don't use iterator to find the
 position following the maximum one; instead, increment the
 position found by display_line directly.  Fix logic; eol_pos
 should be tested before the rest.  Handle the case of characters
 delivered from display vector (bug#6036).  Fix tests related to
 it->method.  Handle the truncated_on_right_p rows.
 (RECORD_MAX_MIN_POS): New macro.
 (display_line): Use it to record the minimum and maximum buffer
 positions for glyphs in the row being assembled.  Record the
 position of the newline that terminates the line.  If word wrap is
 in effect, restore minimum and maximum positions seen up to the
 wrap point, when iterator returns to it.
 (try_window_reusing_current_matrix): Give up if in bidi-reordered
 row and cursor not already at point.  Restore original pre-bidi
 code for unidirectional buffers.
 dispnew.c (increment_row_positions, check_matrix_invariants):
 Increment and check row->start.pos and row->end.pos, in addition
 to MATRIX_ROW_START_CHARPOS and MATRIX_ROW_END_CHARPOS.
 .gdbinit (prowlims): Display row->minpos and row->maxpos.
 Display truncated_on_left_p and truncated_on_right_p flags.
 Formatting fixes.
 (pmtxrows): Display the ordinal number of each row.  Don't display
 rows beyond the last one.
 bidi.c (bidi_cache_iterator_state): Don't zero out new_paragraph:
 it is not copied by bidi_copy_it.
"
a7b028203499410a9f4bebe8220be8f3a9ce598b,kfowler/emacs,"Initial support for bidirectional editing.

 Makefile.in (obj): Include bidi.o.
 (bidi.o): New target.
 makefile.w32-in (OBJ1): Add $(BLD)/bidi.$(O).
 ($(BLD)/bidi.$(O)): New target.
 bidi.c: New file.
 buffer.h (struct buffer): New members bidi_display_reordering
 and bidi_paragraph_direction.
 buffer.c (init_buffer_once): Initialize bidi_display_reordering
 and bidi_paragraph_direction.
 (syms_of_buffer): Declare Lisp variables bidi-display-reordering
 and bidi-paragraph-direction.
 (Fbuffer_swap_text): Swap the values of
 bidi_display_reordering and bidi_paragraph_direction.
 dispextern.h (BIDI_MAXLEVEL, BIDI_AT_BASE_LEVEL): New macros.
 (bidi_type_t, bidi_dir_t): New types.
 (bidi_saved_info, bidi_stack, bidi_it): New structures.
 (struct it): New members bidi_p, bidi_it, paragraph_embedding,
 prev_stop, base_level_stop, and eol_pos.
 (bidi_init_it, bidi_get_next_char_visually): New prototypes.
 (IT_STACK_SIZE): Enlarge to 5.
 (struct glyph_row): New member reversed_p.
 <string_buffer_position>: Update prototype.
 (PRODUCE_GLYPHS): Set the reversed_p flag in the iterator's
 glyph_row if bidi_it.paragraph_dir == R2L.
 (struct glyph): New members resolved_level and bidi_type.
 dispnew.c (direct_output_forward_char): Give up if we need bidi
 processing or buffer's direction is right-to-left.
 (prepare_desired_row): Preserve the reversed_p flag.
 (row_equal_p): Compare the reversed_p attributes as well.
 xdisp.c (init_iterator): Initialize it->bidi_p.  Call
 bidi_init_it and set it->paragraph_embedding from the current
 buffer's value of bidi_paragraph_direction.
 (reseat_1): Initialize bidi_it.first_elt.
 (set_iterator_to_next, next_element_from_buffer): Use the value of
 paragraph_embedding to determine the paragraph direction.
 (set_iterator_to_next): Under bidi reordering, call
 bidi_get_next_char_visually.  Call bidi_paragraph_init if the
 new_paragraph flag is set in the bidi iterator.
 (next_element_from_buffer): If bidi_it.first_elt is set,
 initialize paragraph direction and find the first character to
 display in the visual order.  If reseated to a middle of a line,
 prime the bidi iterator starting at the line's beginning.  Handle
 the situation where we overstepped stop_charpos due to
 non-linearity of the bidi iteration.  Likewise for when we back up
 beyond the previous stop_charpos.  When moving across stop_charpos,
 record it in prev_stop.
 (display_line): Set row->end and it->start for the next row to the
 next character in logical order.  Always extend reversed_p rows to
 the end of line, even if they end at ZV.  Copy the reversed_p flag
 to the next glyph row.  Keep calling set_cursor_from_row for
 bidi-reordered rows even if we already have a possible candidate
 for cursor position.  Set row_end after all the row's glyphs have
 been produced, by looping over the glyphs.  Record the position
 after EOL in it->eol_pos, and use it to set end_pos of the last
 row produced for a continued line.
 <Qright_to_left, Qleft_to_right>: New variables.
 (syms_of_xdisp): Initialize and staticpro them.
 (string_buffer_position_lim): New function.
 (string_buffer_position): Most of code moved to
 string_buffer_position_lim.  Last argument and return value are
 now EMACS_INT; all callers changed.
 (set_cursor_from_row): Rewritten to support bidirectional text and
 reversed glyph rows.
 (text_outside_line_unchanged_p, try_window_id): Disable
 optimizations if we are reordering bidirectional text and the
 paragraph direction can be affected by the change.
 (append_glyph, append_composite_glyph)
 (produce_image_glyph, append_stretch_glyph): Set the
 resolved_level and bidi_type members of each glyph.
 (append_glyph): If the glyph row is reversed, prepend the glyph
 rather than appending it.
 (handle_stop_backwards): New function.
 (reseat_1, pop_it, push_it): Set prev_stop and base_level_stop.
 (reseat): call handle_stop_backwards to recompute prev_stop and
 base_level_stop for the new position.
 (handle_invisible_prop): Under bidi iteration, skip invisible text
 using bidi_get_next_char_visually.  If we are `reseat'ed, init the
 paragraph direction.  Update IT->prev_stop after skipping
 invisible text.
 (move_it_in_display_line_to): New variables prev_method
 and prev_pos.  Compare for strict equality in
 BUFFER_POS_REACHED_P.
 (try_cursor_movement): Examine all the candidate rows that occlude
 point, to return the best match.  If rows are bidi-reordered
 and point moved backwards, back up to the row that is not a
 continuation line, and start looking for a suitable row from
 there.
 term.c (append_glyph): Reverse glyphs by pre-pending them,
 rather than appending, if the glyph_row's reversed_p flag is set.
 Set the resolved_level and bidi_type members of each glyph.
 .gdbinit (pbiditype): New command.
 (pgx): Use it to display bidi level and type of the glyph.
 (pitx): Display some bidi information about the iterator.
 (prowlims, pmtxrows): New commands.
 files.el: Make bidi-display-reordering safe variable for boolean
 values.
 mule.texi (International): Mention support of bidirectional editing.
 (Bidirectional Editing): New section.
 HELLO: Reorder Arabic and Hebrew into logical order, and
 insert RLM before the opening paren, to make the display more
 reasonable.  Add setting for bidi-display-reordering in the local
 variables section.
 NEWS: Mention initial support for bidirectional editing.
"
a798547727081de5b99e1036783084fcb9afec75,kfowler/emacs,"Add missing dcstrings in Tramp, remove chec for obsolee methods

* lisp/net/tramp.el (tramp-progress-reporter-update)
(tramp-unload-file-name-handlers, tramp-get-local-uid)
(tramp-get-local-gid, tramp-get-local-locale):
* lisp/net/tramp-adb.el (tramp-adb-ls-date-regexp)
(tramp-adb-ls-toolbox-regexp, tramp-adb-get-ls-command):
* lisp/net/tramp-compat.el (tramp-compat-funcall):
* lisp/net/tramp-ftp.el (tramp-ftp-enable-ange-ftp):
* lisp/net/tramp-gw.el (tramp-gw-process-filter):
* lisp/net/tramp-sh.el (tramp-get-remote-path)
(tramp-get-remote-locale, tramp-get-ls-command)
(tramp-get-ls-command-with-dired)
(tramp-get-ls-command-with-quoting-style)
(tramp-get-ls-command-with-w-option)
(tramp-get-test-nt-command, tramp-get-file-exists-command)
(tramp-get-remote-ln, tramp-get-remote-perl)
(tramp-get-remote-stat, tramp-get-remote-readlink)
(tramp-get-remote-trash, tramp-get-remote-touch)
(tramp-get-remote-gvfs-monitor-dir)
(tramp-get-remote-inotifywait, tramp-get-remote-id)
(tramp-get-remote-uid-with-id)
(tramp-get-remote-uid-with-perl, tramp-get-remote-python)
(tramp-get-remote-uid-with-python, tramp-get-remote-uid)
(tramp-get-remote-gid-with-id)
(tramp-get-remote-gid-with-perl)
(tramp-get-remote-gid-with-python, tramp-get-remote-gid)
(tramp-get-env-with-u-option): Add missing docstrings.

* lisp/net/tramp.el (tramp-obsolete-methods)
(tramp-warned-obsolete-methods): Remove.
(tramp-find-method): Do not check for obsolete methods any longer.
"
e4829cb8d789abc8ac72080ba412f90328e44990,kfowler/emacs,"* lisp/minibuffer.el (completion--sreverse): Remove.
(completion--common-suffix): Use `reverse' instead.
* lisp/emacs-lisp/regexp-opt.el (regexp-opt-group): Use `reverse' on strings.
"
2170cb536dd1b4860618bf4ab7f1311c0d35e5a3,kfowler/emacs,"Fix GDB/MI inline completion.

* progmodes/gdb-mi.el (gdb-input): Accept command and handler
function as separate arguments.
(gdb-init-1, gdb-non-stop-handler, gdb-check-target-async)
(gdb-tooltip-print-1, gud-watch, gdb-speedbar-update)
(gdb-var-list-children, gdb-var-set-format, gdb-var-delete-1)
(gdb-var-delete-children, gdb-edit-value, gdb-var-update)
(gdb-stopped, def-gdb-auto-update-trigger)
(gdb-place-breakpoints, gdb-select-thread, gdb-select-frame)
(gdb-get-changed-registers, gdb-get-main-selected-frame): Callers
changed.
(gud-gdbmi-completions): New function.
(gdb): Use it for generating the completion table.

* progmodes/gud.el (gud-gdb-fetch-lines-filter): Just use
gud-gdb-marker-filter without taking it as an argument.
(gud-gdb-run-command-fetch-lines): Caller changed.
(gud-gdb-completion-function): New variable.
(gud-gdb-completion-at-point): Use it.
(gud-gdb-completions-1): Split from gud-gdb-completions.
"
5f7c30e757680f66be9ef4c399fd1d7ce5b66203,kfowler/emacs,"Implement memory-info for MS-DOS.

 src/dosfns.c (dos_memory_info): New function.
 src/dosfns.h (dos_memory_info): Add prototype.
 src/alloc.c (Fmemory_info) [MSDOS]: Call dos_memory_info.
 src/vm-limit.c (get_lim_data) [MSDOS]: Call dos_memory_info, instead
 of doing some of its job.
"
70041e9ae7072eac5eeff2b5e1a50d9eab6b39f7,kfowler/emacs,"Merge changes made in Gnus trunk.

nnir.el (nnir-get-active): Ignore nnir-ignored-newsgroups if null.
gnus-sum.el (gnus-summary-refer-thread): Simplify code. Restore gnus-use-agent.
 (gnus-get-newsgroup-headers): Avoid unwanted spaces at eol.
gravatar.el (gravatar-retrieve-synchronously): New function.
 (gravatar-get-data): Make more robust.
gnus-util.el (gnus-rescale-image): Allow to resize images even if they are from file. Can also scale up.
nnimap.el (nnimap-retrieve-headers): Remove CRLF from the headers.
nnir.el (nnir-mode): Make sure 'gnus-registry-install is bound.
gnus-sum.el (gnus-get-newsgroup-headers): Revert the last change here, since it's up to the backends to do CRLF removal if their protocol has it.
gnus-group.el (gnus-group-delete-articles): New command.
"
e742e11707450212291d8e1c1bc13fbe51de1cb2,kfowler/emacs,"Change default type of open-protocol-stream.

* nnimap.el (nnimap-stream, nnimap-open-connection-1): Accept `network'
value.

* nntp.el (nntp-open-connection-function): Document the fact that some
values are not functions but are instead handled specially.  Recognize
nntp-open-plain-stream value.
(nntp-open-connection): Recognize that value.

* proto-stream.el (open-protocol-stream): Bring back `network' type.
Make this the default type.
(proto-stream-open-plain): Rename from proto-stream-open-default.
(open-protocol-stream, proto-stream-open-starttls)
(proto-stream-open-tls, proto-stream-open-shell): Replace `default'
with `plain'.
"
087fc47ace7797d2ef36ff167f7befd5f4ba01da,kfowler/emacs,"Turn `directory-sep-char' into a noop.

* lisp/subr.el (directory-sep-char): Move from fileio.c and make a defconst.

* src/emacs.c (decode_env_path): Don't check DIRECTORY_SEP,
  call dostounix_filename directly.

* src/fileio.c (CORRECT_DIR_SEPS): Remove.
  (Ffile_name_directory, directory_file_name, Fexpand_file_name)
  (Fsubstitute_in_file_name): Use dostounix_filename instead.
  (file_name_as_directory): Use dostounix_filename, DIRECTORY_SEP.
  (syms_of_fileio) <directory-sep-char>: Move to subr.el.

* src/lisp.h [WINDOWSNT] (Vdirectory_sep_char): Don't declare.
  (DIRECTORY_SEP): Define unconditionally.

* src/w32proc.c (CORRECT_DIR_SEPS): Remove.
  (Fw32_short_file_name, Fw32_long_file_name): Use dostounix_filename.

* src/s/ms-w32.h (DIRECTORY_SEP): Remove.
"
0f4a96b5d7de244a7be6fc98f6a66d3d1e6a7569,kfowler/emacs,"nt/*.c, src/*.c: Remove unused variables.

* nt/addpm.c (main): Remove unused variable `retval'.
* nt/preprep.c (main): Remove unused variable `ptr'.
* src/dispextern.h (glyph_matric): Use #if GLYPH_DEBUG, not #ifdef.
* src/fileio.c (check_executable) [DOS_NT]: Remove unused variables `len'
  and `suffix'.
  (Fset_file_selinux_context) [HAVE_LIBSELINUX]: Move here declaration
  of variables specific to SELinux and computation of `encoded_absname'.
* src/image.c (XPutPixel): Remove unused variable `height'.
* src/keyboard.c (make_lispy_event): Remove unused variable `hpos'.
* src/unexw32.c (get_section_info): Remove unused variable `section'.
* src/w32.c (stat): Remove unused variables `drive_root' and `devtype'.
  (system_process_attributes): Remove unused variable `sess'.
  (sys_read): Remove unused variable `err'.
* src/w32fns.c (top): Wrap variables with #if GLYPH_DEBUG, not #ifdef.
  (w32_wnd_proc): Remove unused variable `isdead'.
  (unwind_create_frame): Use #if GLYPH_DEBUG, not #ifdef.
  (Fx_server_max_request_size): Remove unused variable `dpyinfo'.
  (x_create_tip_frame): Remove unused variable `tem'.
* src/w32inevt.c (w32_console_read_socket): Remove unused variable `no_events'.
* src/w32term.c (x_draw_composite_glyph_string_foreground):
  Remove unused variable `width'.
"
52162052fd8ccf8b74685e161530cc9324358a22,kfowler/emacs,"Consistently check windows for validity/liveness (Bug#11984, Bug#12025, Bug#12026).

* lisp.h (CHECK_VALID_WINDOW): New macro.
* window.c (decode_window): Rename to decode_live_window.
(decode_valid_window, Fwindow_valid_p): New functions.
(Fwindow_frame, Fframe_root_window, Fwindow_minibuffer_p)
(Fframe_first_window, Fframe_selected_window, Fwindow_parent)
(Fwindow_top_child, Fwindow_left_child, Fwindow_next_sibling)
(Fwindow_prev_sibling, Fwindow_combination_limit)
(Fset_window_combination_limit, Fwindow_use_time)
(Fwindow_total_height, Fwindow_total_width, Fwindow_new_total)
(Fwindow_normal_size, Fwindow_new_normal, Fwindow_left_column)
(Fwindow_top_line, Fwindow_body_height, Fwindow_body_width)
(Fwindow_hscroll, Fset_window_hscroll)
(Fwindow_redisplay_end_trigger)
(Fset_window_redisplay_end_trigger, Fwindow_edges)
(Fwindow_pixel_edges, Fwindow_absolute_pixel_edges)
(Fwindow_inside_edges, Fwindow_inside_pixel_edges)
(Fcoordinates_in_window_p, Fwindow_point, Fwindow_start)
(Fwindow_end, Fset_window_point, Fset_window_start)
(Fpos_visible_in_window_p, Fwindow_line_height)
(Fwindow_dedicated_p, Fset_window_dedicated_p)
(Fwindow_prev_buffers, Fset_window_prev_buffers)
(Fwindow_next_buffers, Fwindow_parameters, Fwindow_parameter)
(Fset_window_parameter, Fwindow_display_table)
(Fset_window_display_table, Fdelete_other_windows_internal)
(Fset_window_buffer, Fset_window_new_total)
(Fset_window_new_normal, Fdelete_window_internal)
(Fwindow_text_height, Fset_window_margins, Fwindow_margins)
(Fset_window_fringes, Fwindow_fringes, Fset_window_scroll_bars)
(Fwindow_scroll_bars): Check whether argument window is a valid or
live window.  Update doc-strings.
(syms_of_window): New symbol Qwindow_valid_p.
* keyboard.c (Fposn_at_x_y): Check whether argument
frame_or_window denotes a valid window.
* window.el (window-valid-p): Move to window.c.
"
73bfe891e2cf3e9b693938fe94c1ead1bc9b318d,kfowler/emacs,"Omit redundant extern decls.

Most of this patch is from Dmitry Antipov, in:
http://lists.gnu.org/archive/html/emacs-devel/2014-06/msg00263.html
* configure.ac (WERROR_CFLAGS): Add -Wredundant-decls.
* lib-src/emacsclient.c (getenv): Remove decl.
* lib-src/make-docfile.c (write_globals): Add ATTRIBUTE_CONST for
Fbyteorder, Ftool_bar_height, Fmax_char, Fidentity.
* lwlib/lwlib-Xm.c (lw_motif_widget_p, xm_update_one_value)
(xm_create_dialog, xm_destroy_instance, xm_popup_menu)
(xm_set_keyboard_focus, xm_set_main_areas): Remove decls.
* src/commands.h (update_mode_lines):
* src/frame.h (Qbackground_color, Qforeground_color)
(x_set_menu_bar_lines):
* src/ftfont.c (ftfont_font_format):
* src/intervals.h (Qkeymap, Qfont):
* src/keyboard.c (timer_check, safe_run_hooks, Qregion_extract_function):
* src/lisp.h (Ffboundp, Qnil, Qt, Qlambda, Qintegerp, Qwholenump)
(Qsymbolp, Qlisp, Qconsp, Qstringp, Qarrayp, Qbufferp, Qmarkerp)
(Qvectorp, Qbuffer_or_string_p, Qchar_table_p, Qvector_or_char_table_p)
(Qfloatp, Qnumberp, Qfont_spec, Qfont_entity, Qfont_object)
(Fbyteorder, wrong_type_argument, Fmax_char, syms_of_composite)
(Fidentity, extract_float, init_display, syms_of_display, Qdisplay):
(Qimage, Qbox, redisplay_preserve_echo_area, char_table_ref)
(char_table_set, char_table_translate, Qautoload, Qbottom, Qtop)
(Qvisible, Qfont, Qfront_sticky, Qrear_nonsticky, init_sigio)
(Qtool_bar, Qheader_line):
* src/macros.c (Fexecute_kbd_macro):
* src/xdisp.c (Ftool_bar_height, Ftool_bar_height):
* src/xterm.c (x_delete_terminal, XSetIMValues):
* src/xterm.h (x_set_window_size, x_query_color, x_get_focus_frame)
(x_implicitly_set_name, popup_activated)
(widget_store_internal_border):
Remove redundant decls.
* src/frame.c [USE_X_TOOLKIT]: Include widget.h.
* src/keyboard.c (Fexit_recursive_edit, Fabort_recursive_edit):
Remove _Noreturn, as make-docfile now does that for us.
* src/lisp.h (DEFUN): Don't declare fnname here; rely on make-docfile.
(Qregion_extract_function): New decl.
* src/window.c, src/xfns.c: Include menu.h.
"
be307485f722be57985da979296fa37569c2a5a9,kfowler/emacs,"* lisp: Prefer inlinable functions to macros.

* lisp/fringe.el (fringe-bitmap-p): Make it a plain function.

* lisp/tooltip.el (tooltip-region-active-p): Remove.

* lisp/net/shr.el (shr-char-breakable-p, shr-char-kinsoku-bol-p)
(shr-char-kinsoku-eol-p, shr-char-nospace-p): Use define-inline.

* lisp/url/url-future.el (url-future-done-p, url-future-completed-p)
(url-future-errored-p, url-future-cancelled-p):
* lisp/url/url-dav.el (url-dav-http-success-p): Use define-inline.

* lisp/vc/ediff-init.el (ediff-odd-p): Remove.
(ediff-background-face): Use cl-oddp instead.
(ediff-buffer-live-p): Make it a defsubst.
"
f8f69f4523587097ead0da62a764923d6411f9e2,loadimpact/k6,"Refactor how metric samples are generated and passed arround

This is needed so we don't loose critical information when we want to work with samples ""downstream"" from where they are generated and have to buggily piece back events. In particular, aggregation of http metrics would be very difficult to do efficiently without something like this.
"
a90f518ee04ec8b50ceef0c3c37842ead2c3fdde,loomio/loomio,"Start improving mailers.
"
1ad21fc7eea74039144268bea13a435651be368d,loomio/loomio,"Merge pull request #875 from loomio/refactor/language-selection

Refactor set_locale and add language options to footer"
c103aab23bffaa826d849bac78abe32dededcd35,loomio/loomio,"improved group request form + lead in + lead out pages + improved admin panel
"
a36108cb3fc0c42c647a9e6493f8cac6d9bfcfc4,loomio/loomio,"[oh yes, it's ready] Material (#3365)

* Get angular-material up and running

* Build sidebar

* Add scrollable groups list

* Add styling

* Fix sidebar

* More robust group page threads (#3346)

* More robust group page threads

* Further tweaks for discussions card on group page

* Don't allow input while submitting (#3348)

* Simple group data CSV export (#3343)

* Readd group export

* Add xls/csv support

* Add title to csv export

* bump version to 0.20.12

* Make xls export work properly (#3349)

* Resend ignored invitations (#3342)

* Enable resending of invitations

* Run db migrations

* Use since instead of age_in_hours

* add resend_ignored_invitations_job and insert it into hourly rake task

* Update resend_ignored_invitations_job.rb

* Update resend_ignored_invitations_job.rb

* bump version to 0.20.13

* set default job priority to 10, prioritise mailers, invitations first (#3350)

* Angular sign in (#3270)

* Sign in in the angular interface

* Open sign in form for forbidden

* Remove contacts controller spec

* Login to secret group works

* Allow for refreshing of view on login

* Ensure login business is handled on inital app laod

* Fix broken angular sign in spec

* Add spec for logging into closed group; fixed secret group login

* Cleanup unused Session references

* Fix final failing spec

* Add specs for log in for discussion

* Style up comment form join group / sign in buttons

* Wire up sign in / join group via comment form

* Rejigger comment form to allow for sign in / join group

* Fix failing spec

* Use intercom-rails properly

* Fix intercom merge regression

* Temp bump patch

* Pop sign in modal for auth required pages

* Add spec for dashboard sign in

* Temp update patch

* Rename form auth header field

* Use translated invalid password string

* Fix layout when no oauth providers present

* Temp bump patch

* More seamless profile page login

* Prevent keyboard events on force modals

* Language tweaks

* Redirect to home page after sign out

* Pull info from invitation for sign in / sign up page

* Fix failing specs

* Change to Session.user()

* Remove current user merge conflicts

* Ensure user icon shows up in navbar

* bump version to 0.20.14

* Add facebook, fix checkbox label, fix third party padding (#3353)

* bump version to 0.20.15

* Fix export (#3357)

* Fix export?

* Fix exports

* Don't allow logged out users to create groups (#3356)

* fix inline css in emails (#3355)

* fix inline css in emails

* Update user_mailer.rb

* bump version to 0.20.16

* Refactor group welcome modal to use experiences (#3340)

* Refactor group welcome modal to use experiences

* Restore development controller methods, remove schema updates

* Add experiences to logged out user

* Fix failing spec

* Run migrations

* Add hasExperienced function to user model

* Add experiences to memberships

* Extract experienced method into module

* Add migration for existing memberships

* Update selenium

* Extend jasmine timout interval

* Change CurrentUser to Session.user()

* Attempt to fix broken spec

* Add sleep to protractor test

* bump version to 0.20.17

* bump version to 0.20.18

* Use loomio hosted emoji urls in email (#3351)

* Use loomio hosted emoji urls in email

* Less crazy root url for email emojis

* Flexbox navbar (#3360)

* Flexbox navbar

* Temp bump patch

* Bump icon over slightly

* Navbar tweaks

* Revert temp patch bump

* bump version to 0.20.19

* Don't publish multiple motion_closing_soon events (#3366)

* bump version to 0.20.20

* Add attachment upload validation errors (#3375)

* Use locale for logged out user

* bump version to 0.20.21

* Show welcome to everyone (#3374)

* Show welcome to everyone

* Implement feedback

* Update modal conditions, specs

* Show modal when user joins new group

* Simplify specs

* Refactor tests further

* Attempt to fix failing specs

* Update UsersByVolumeQuery to include normal and loud for motion closed (#3382)

* Update UsersByVolumeQuery to include normal and loud for motion closed

* Fix broken tests

* Fix merge conflicts; style tweaks

* Update sidenav

* Upgrade navbar etc

* Update sidebar

* Add muted and contact options, display unread count

* Close sidebar on large screens

* Change undefined title to loading

* Fix backdrop, flexbox overhaul

* Fix broken display on Firefox

* navbar work

* Fix broken css, routes, mobile experience

* Fix the broken specs

* Fix specs, implement feedback

* Add aria-label attributes etc

* Implement stylistic feedback

* Add zero and single group experience

* Fix broken tests

* Implement PR feedback

* Add tests for zero and single group experience

* Add user panel

* Fix tests

* Fix subgroups bug

* Redirect to homepath on login

* Simplify sidebar

* Make user avatar smaller

* Add margin to top and bottom of sidebar content

* ensure welcome video does not show on test

* Implement feedback

* Update background image, css tweaks

* Update background image, css tweaks

* Add group theme padding for members page, remove spec focus

* Fix after sign-in redirects

* css tweaks, fix tests

* Fix cover photo upload

* Update login spec
"
e6cdba04a5648ad3702fdc4aab5eaadb98871077,loomio/loomio,"refactoring, cleaning up
"
5f1295e0768b734233b11c64451446acc6f06464,loomio/loomio,"improve daily summary email test. could be better though
"
e87745dca2f2f9d91d12b4afd2bc131de32adfce,loomio/loomio,"improve how we send discussion ids to server for inbox activity counts
"
1fe3ccc268496681a1e733dd252d720a3974c306,loomio/loomio,"Improve dashboard iteration I
"
340f1a89e576473202b59bd7520f05c510cebf6a,loomio/loomio,"allow entering payment_method on subscriptions
remove unused code
"
9af5689cd9477246944c5b65b5ed6aec19d411d1,loomio/loomio,"Merge branch 'master' of github.com:enspiral/loomio into feature/refactor-activity-feed

* 'master' of github.com:enspiral/loomio:
  Update the tooltip in the .js.erb file using 'fixTitle'
  Fix failing specs.
  Change and hide the cookie token.
  fix button alignment in modals
  Refactor Group#add_member! method.
"
fcbfdff31dfdfcecaa7fafd5ee144cf89da726bf,loomio/loomio,"Make improvements to invited_users code.
"
abc580f83ca8b2545e31a61842b653676a2dbffe,loomio/loomio,"removed unnecessary <span> inside a.selector-link

<span> is an in-line element that should not
contain blocks such as <div>s. Removing the span
does not appear to introduce UI artifacts."
35e04c8cc8530d645c1cc9469df93dbdca95752f,loomio/loomio,"Charge for subgroups (#4200)

* Install card upgrade

* prep new choose plan modal

* remove unused translations, move marketing to plugin

* Ensure group publish updates correctly

* Fix i'll decide later button

* support server side translations in plugins

* add outliet for premium feature

* replace poll-common__help-text with lmo-hint-text

* good work

* tidy up cards

* remove unused css

* use new plugin branches

* fix travis after geckodriver update

* Remove buyer experience plugin

* only export current user groups, remove add subgroup link from dropown
"
b9ab46310d8aff46633209453e08e592bee63632,loomio/loomio,"Calendar integration, select option as outcome [WIP] (#4126)

* Add time zone picker to custom fields

* Add time zone select to meeting polls

* Pass in poll zone to time zone select

* Apply time zones to meeting polls

* Fallback to poll time zone if user does not have one

* Display time zones in email

* fonts are looking good!

* Always use time_zone instead of recipient_time_zone

* Correctly handle time zones in email

* lets add show results button

* Fix in app date display for meeting tiems

* show results and tidy up poll vote forms

* Sort meeting times

* Remove jstz

* Update time zone on user when it changes

* Remove autodetect time zone

* the hundreds of confirm forms, sigh

* the hundreds of confirm forms, sigh

* Remove unused views (#4020)

* I think this is ok

* messing around

* Include discussion/group info in poll emails (#4019)

* Add option on submit for meetings (#4018)

* Add option on submit for meetings

* Remove unused stuff from poll meeting form

* Fix my-vote not appearing on change vote after reload (#4021)

* Apply record loader to my decisions page

* Change 'per' ref in polls page

* tidy up

* timezone button + autocomplete

* I think this is how it should be

* good

* Fix poll voters method (#4027)

* Add declined counts to progress chart (#4025)

* Add different helptext for announcement off (#4026)

* tidy

* whoops

* Allow sharing once community is created

* thank fuck we can remove that

* Fix add community

* ok

* comment out decisions for today

* bump version to 1.0.1

* bump version to 1.0.2

* disable loomio_onboarding plugin

* bump version to 1.0.3

* fix members card

* bump version to 1.0.4

* Bump to 1.1.0

* Fix mentio styling (#4029)

* Merge cleanup

* Fix add community modal

* Fix up share form stylings

* First pass at slack buttons!

* Add interactive buttons to slack

* Add options to slack preview, link to stance update properly

* Participator can_participate?

* Add specs for identities controller

* Create new user upon oauth return

* More tests for account creation via oauth

* Make meetings display properly in slack

* Add experience / features toggle for using communities

* Almost got slash commands going

* Respond with ok to ssl check

* Finish slash commands, fix outcome published

* Allow setting of community on poll creation

* Publish to community automatically through slash command

* Handle creating new community, fix unauthorized slack message

* Update translations

* Redirect to team link on slack authorized page

* Add github identity

* WIP: twitter's docs are terrible.

* Google almost works, back to twitter

* Help I can't stop refactoring shit

* Store pending identity in session if not logged in

* Rename some identity methods

* default_host

* Add providers.yml, auth modal start

* Google oauth works!

* Pretty good looooking auth form

* Polish auth form

* More form fiddling

* More fiddling

* Color 3rd party sign in buttons

* Remove BaseController

* Handle pending actions on sign up / sign in

* Refactor membership_request_service#approve

* Prevent close of auth modal, populate from invitation

* Remove sign in form; only force login once on page

* Handle oauth response more correctly

* Tighten angular helper, serialize pending identity

* Don't load up identities without users as existing

* Associate with existing email address

* Clean up associate with user oauth code

* Remove github and twitter oauth

* Move email to provider list

* Fix slack signin, serialize email_status with pending identities

* Commonize app ENV names

* Fix polls specs

* Fix visitor specs

* Fix identity controller specs

* Add translations for visitor created email

* minor cleanup

* Revert ""Help I can't stop refactoring shit""

This reverts commit b450b9fc389fd29e5f6c8f0b3dbf0ee71b2ff3e5.

* Revert ""Google almost works, back to twitter""

This reverts commit 1e264e6a423352a5f6a8f79b32da3766ebdf0761.

* Revert ""WIP: twitter's docs are terrible.""

This reverts commit 41d0646bd858d1b2966df68863f4a40a845278a4.

* Revert ""Add github identity""

This reverts commit e048a030bb5bd18c8897bc76620a5f929d124633.

* Fix failing specs

* Enabling communities from admin panel

* Calendar integration exploration

* Add poll option to meeting outcome modal

* Allow adding to google calendar if poll is a meeting

* Save poll option correctly on outcome

* Add login token scaffold

* Magic link flow works!

* Move login_tokens#show to own controller, tests pass

* Lots of frontend work :D

* Make set password work

* Blank out form while processing

* then -> finally

* Tear out old login flow

* Remove devise controller helper, redirect to dashboard from root controller

* Fix slack identity_params

* Fix the thing

* Give preference to logged in user over email user for oauth

* Add pending serializers

* First pass at language for login email

* Fix facebook login

* Ok James time to focus a little

* Fix failing rspecs

* Fix failing specs

* Good start on recaptcha

* Don't log in when registering user

* Ensure user receives login email

* Revamp of login email text

* Add email validation errors

* Configure permitted params for devise controllers

* Handle resend token gracefully

* Fix more specs

* Add some protractors for login

* Only run login specs for now

* Fix cukes + remove crap ones

* Setup test routes for protractor

* Fix broken stance specs

* Try to get cukes to pass on travis

* Fix failing rspec

* Add use_last_login_token for e2ez

* Add login from discussion page test

* Fix that route

* Remove sidebar check

* Fix more login thingies

* Okay fix that route again

* Erg, emojis sidetrack

* Add pw validation error message, smoother sign in experience

* Okay focus on load... pretty much works?

* Fix password validation spec

* ok

* Allow redirect to pending group from invitation

* Fix failing e2e

* Account for start group path correctly

* Add redirect to login tokens

* Rip out change password for reset password flow

* Fix failing specs

* Run protractors again

* Fix failing e2ez

* remove change apssword specs

* clear sessions between tests

* Fix password selector

* Add join group as new user spec

* Oops!

* Back to camel case, bring through avatars

* Assign logo from oauth

* Comment out group id migration

* Don't cache clients, failing test be damned

* Add auth avatar

* Add oauth identity confirm form

* Add animations to login form

* Fix failing spec

* Use animated config filter

* Fix failing specs

* Fix applying slack info

* Add check for linking to existing account from oauth

* Fix failing spec

* Only show oauth form for oauth identities

* Don't animate stuff on test env

* Fix 1 failing e2e

* wark

* try a browser wait

* Re add flash message

* Add wait for reloads

* Fix final spec!

* Okay let's see what else is broken now

* Fix failing e2ez

* Okay WIP dat

* Fix merge issue

* Merge cleanup

* Add attachments to meeting emails

* Faffing with ical integration

* Get proper ical output

* More flexible calendar invite form

* Add spec to cover ical storage

* Ensure attachment goes out ok

* Build calendar model for event

* WIP

* Bump minor version

* WIP

* Add HasCustomFields to poll

* More complete ical

* config durations, add AppConfig, correct content encoding for ics

* Cleanup previous work

* Add spec for storing duration

* Fix failing specs

* Use AppConfig.poll_templates

* Fix failing spec

* Improved datepicker appearance

* ok usa

* Better meeting option dropdown appearance

* Fix failing event specs

* Fix final failing spec

* Remove smtp domain from dev env

* Integration test for calendar invite

* Move calendar invite form

* Re-add event summary

* Add lmo drop animation

* Fix translation for username val error

* Finish event summary, disable outcome form on submit

* Use formatted date helper to get right time zone

* Select most attendees option by default in outcome

* unb0rk time zone

* Relax date regex matcher

* Fix translation for username val error

* Fix failing protractor
"
e656b4ad446e12194e33736e3d56e782c560952b,loomio/loomio,"Merge branch 'master' into feature/notifications

* master:
  writing test specs
  refactor
  capistrano: updated deployment git branch
  fixed failing specs
  tool-bar on proposal page
  tool bar added to selector panel
  reuse motion-preview partial on discussions page
  open-close motions filter added to discussion
  groups panel added to dash
  refactored discussion_preview
  added sidepanel dropdown
  Style 01 -panels
  Formating of left panels
  more comment formating
  wordwrap on comments sorted
  panel added

Conflicts:
	app/assets/stylesheets/header.css.scss
	app/models/motion.rb
	app/views/application/_header.html.haml
	spec/models/discussion_spec.rb
	spec/models/user_spec.rb
"
db0eff9077fb7624c65e642594c6b36d12375cea,loomio/loomio,"Merge pull request #2141 from loomio/dashboard-refactor-deux

Dashboard refactor deux"
5ddceec3df31016c1c7972b4fa503860b9d3d5aa,loomio/loomio,"Refactor cukes.
"
4d9b8b6a1b389ea0d3f85e2c955e1884303a27bf,loomio/loomio,"Refactor set_locale and add language options to footer
"
9d521cb598680cb2a2f5e3bf7f3e04f384585234,luspi/photoqt,"[settings.h] remove call to setDefault() in readSettings(), causing unnecessary signalling of changed values for anything not default
"
ce60322ab59629792a81d4c1ca89034698b88e8d,mopsalarm/Pr0,"Move to kodein 5.2
"
a8a5a27cd181907bde1477cf5d3c15e5e48820c5,mopsalarm/Pr0,"Cleanups, dependencies.
"
a660e367f8b5845b8c01fc07ad3f7806794082c2,mopsalarm/Pr0,"Change play icon,  improve search
"
7a25c9e3c8c5603a6b32cac6e1993413d38c8296,napatech/dpdk,"pci: deprecate misnamed functions

Rename misnamed functions and describe the change in a deprecation
notice.

Signed-off-by: Gaetan Rivet <a6b9f1aecd7707f01344f211143eb3bcaeb0c5c3@6wind.com>
"
85aa6d34b0830c4bfbfda89ce26e6ed350655390,napatech/dpdk,"crypto/scheduler: add dynamic logging

Registered new dynamic logtype for driver and
replaced CS_LOG_ERR and RTE_LOG macros with
new CR_SCHED macro, which uses the new logtype.

Signed-off-by: Hari Kumar <029fbddf700eba553a9336704b4e70d3182abe95@intel.com>
Reviewed-by: Reshma Pattan <4d9eb35579760ed1c2db754a6b402039c9c8a1cb@intel.com>
Reviewed-by: Pablo de Lara <28355d9cfe41bb8148aea0fb24f47aae8f4217a1@intel.com>
"
ac8d22de2394e03ba4a77d8fd24381147aafb1d3,napatech/dpdk,"ethdev: flatten RSS configuration in flow API

Since its inception, the rte_flow RSS action has been relying in part on
external struct rte_eth_rss_conf for compatibility with the legacy RSS API.
This structure lacks parameters such as the hash algorithm to use, and more
recently, a method to tell which layer RSS should be performed on [1].

Given struct rte_eth_rss_conf will never be flexible enough to represent a
complete RSS configuration (e.g. RETA table), this patch supersedes it by
extending the rte_flow RSS action directly.

A subsequent patch will add a field to use a non-default RSS hash
algorithm. To that end, a field named ""types"" replaces the field formerly
known as ""rss_hf"" and standing for ""RSS hash functions"" as it was
confusing. Actual RSS hash function types are defined by enum
rte_eth_hash_function.

This patch updates all PMDs and example applications accordingly.

It breaks ABI compatibility for the following public functions:

- rte_flow_copy()
- rte_flow_create()
- rte_flow_query()
- rte_flow_validate()

[1] commit 676b605182a5 (""doc: announce ethdev API change for RSS
    configuration"")

Signed-off-by: Adrien Mazarguil <9d39ea493ca46c560334f650ac5d4b5ffbcb5cf0@6wind.com>
Acked-by: Andrew Rybchenko <ac94ab2a8fe9a9a087f6e24dcbc16626b52c07e8@solarflare.com>
"
71f2384328651dced05eceee87119a71f0cf16a7,napatech/dpdk,"eventdev: introduce event driven programming model

In a polling model, lcores poll ethdev ports and associated
rx queues directly to look for packet. In an event driven model,
by contrast, lcores call the scheduler that selects packets for
them based on programmer-specified criteria. Eventdev library
adds support for event driven programming model, which offer
applications automatic multicore scaling, dynamic load balancing,
pipelining, packet ingress order maintenance and
synchronization services to simplify application packet processing.

By introducing event driven programming model, DPDK can support
both polling and event driven programming models for packet processing,
and applications are free to choose whatever model
(or combination of the two) that best suits their needs.

This patch adds the eventdev specification header file.

Signed-off-by: Jerin Jacob <5bca7d2a432bc0f5422b70b2701a4e4fa32edd00@caviumnetworks.com>
Acked-by: Bruce Richardson <66b9e8e8fbd5e9f41f91b0af050876182ce9d0e4@intel.com>
"
1910eb50db6b879c36ea12091293b2788f2c3fad,napatech/dpdk,"net/i40e: remove unnecessary void casts

Signed-off-by: Stephen Hemminger <06fa905d7f2aaced6dc72e9511c71a2a51e8aead@networkplumber.org>
Reviewed-by: Kirill Rybalchenko <d880e0ae5db127fbe2da80167dd3959919ed806d@intel.com>
Acked-by: Jingjing Wu <64d28b617c3b4840f5ded1bfa611cba7fadfe5c7@intel.com>
"
b8cfe2c9aed2e7c0aef7d426daf96a08fea2c012,napatech/dpdk,"bb/turbo_sw: add software turbo driver

- bbdev 'turbo_sw' is the software accelerated version of 3GPP L1
 Turbo coding operation using the optimized Intel FlexRAN SDK libraries.
- 'turbo_sw' pmd is disabled by default

Signed-off-by: Amr Mokhtar <61fd223c159941407afdbb70f082fefb65c9f026@intel.com>
Acked-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
"
380a7aab1ae2894fa598d8c51962778670996e4a,napatech/dpdk,"mbuf: rename deprecated VLAN flags

PKT_RX_VLAN_PKT and PKT_RX_QINQ_PKT are deprecated for a while.
As explained in [1], these flags were kept to let the applications and
PMDs move to the new flag. There is also a need to support Rx vlan
offload without vlan strip (at least for the ixgbe driver).

This patch renames the old flags for this feature, knowing that some
PMDs were using PKT_RX_VLAN_PKT and PKT_RX_QINQ_PKT to indicate that
the vlan tci has been saved in the mbuf structure.

It is likely that some PMDs do not set the proper flags when doing vlan
offload, and it would be worth making a pass on all of them.

Link: [1] http://dpdk.org/ml/archives/dev/2017-June/067712.html

Signed-off-by: Olivier Matz <dfcc1510895413197abb4336e39bb0a3906cba71@6wind.com>
Reviewed-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
"
b749646dade4844bce3c0e071271605ee878d246,napatech/dpdk,"net/sfc/base: add function to create packed stream RxQ

Encoding packed stream buffer size in RxQ type is not a future-proof
idea taking into account a new RxQ types with extra parameters.
To be consistent make packet stream buffer size a separate parameter.
In order to avoid blowing of the default RxQ create function prototype
add a dedicated function to create packed stream RxQ without not
applicable paramters.

Signed-off-by: Andrew Rybchenko <ac94ab2a8fe9a9a087f6e24dcbc16626b52c07e8@solarflare.com>
Reviewed-by: Andy Moreton <adbee5d9b6a6a553b71b14302d03837591e26c9d@solarflare.com>
Reviewed-by: Mark Spender <42e28cfb8ae6f30462efd8c3bc80630d8e63d893@solarflare.com>
"
c752998b5e2eb5c827ffbecc5bd03ea28b14314f,napatech/dpdk,"pci: introduce library and driver

The PCI lib defines the types and methods allowing to use PCI elements.

The PCI bus implements a bus driver for PCI devices by constructing
rte_bus elements using the PCI lib.

Move the relevant code out of the EAL to its expected place.

Libraries, drivers, unit tests and applications are updated to use the
new rte_bus_pci.h header when necessary.

Signed-off-by: Gaetan Rivet <a6b9f1aecd7707f01344f211143eb3bcaeb0c5c3@6wind.com>
"
378714588c7243cdace0aa7b912e5569c192c3d3,ndlib/usurper,"Merge branch 'master' into test-moving-hours-to-action

# Conflicts:
#	src/actions/search.js
#	src/components/SearchDrawer/SearchOptionList/SearchOption/index.js
#	src/components/SearchDrawer/SearchOptionList/SearchOption/presenter.js
#	src/components/SearchDrawer/index.js
#	src/reducers/search.js
"
52ca4d74b881993ae2f52e40896bd4817c0d4231,openfl/openfl,"Refactor TextEngine
"
e87eef02f770aeb8b25f78b1516fee2497fcea70,openfl/openfl,"Major renderer refactor
"
b7541b587db47ecf59ff92a53a8a6e53577c28df,openfl/openfl,Remove unused `__cursorPosition`
60957124ebe5e1604e2cdd6dcadd90ef016f4445,openfl/openfl,"Rename to text layout group
"
6ad6e4011b495575ad9a784e1d07ab5d0984d1f0,opesci/devito,"ir: TemporariesGraph -> Clusters's FlowGraph
"
2e4c8308422aa5b04b8425eb35b11e19221601de,opesci/devito,"Revert ""Separate the case where Dimensions have a known size into its own class""
"
0c09926ce6b0969caf654ecf534ec898b347ca9a,opesci/devito,"domain-switch: start, end -> min, max
"
deedda9c5657b34b88f8ed13e2f9b9481a81ea4a,opesci/devito,"ir: domain -> space
"
98909dd4b2e01cfa3bc68d132e710aa54184d62d,opesci/devito,"Merge pull request #715 from opesci/psutil-alternative

DLE refactoring + misc cleanup"
519665e2f565451f3d1b7c6ac71b056f7b7a521e,opesci/devito,"Merge branch 'master' into consolidate-compiler
"
be7a0a5bf42084fe7cc5da0fbc093d008026fc1d,opesci/devito,"Model: Make `damp` field a property of the `Model`
"
43f3325445128f9d69345c622ac00a516d2934b0,opesci/devito,"Merge pull request #468 from opesci/misc-cleanup

Cleanup, fixes, and additions before domain-allocation switch (PART 1)"
c57db904495d44a86378ab01ec8763f3ce8ff364,opesci/devito,"Merge pull request #451 from opesci/improve-data

Introduce Data, a common cross-backend interface to access a Function's data values"
ebdf0a8f1ceed97022c4e7fe8c432cc0d124e335,opnsense/core,"Merge pull request #1427 from phpb-com/filterinc_cleanup

Further clean-up of generated firewall rules."
faf843aaafe01414e81c98900716be66ea14e4e6,opnsense/core,"auth: simplify user deletion
"
006c1edde6941bc4ef05c08c36d741f75e28d1e0,phoenixz/base,"FV1.0.0 Major upgrade!

This is a backwards compatible, but major upgrade.

startup sequence has been completely rewritten. Startup script will now split into a different script for each platform

system library has been merged with startup library

Most important string and array functions have been moved from their libraries to the startup library so that the required functions are available even though the library files havent been loaded yet

Added ""core"" class, which will generate a $core object. This object will do an important step of the startup sequence, contain the $sql objects, contains a $core->register where globally required variables can be stored.

Performed major code cleanup from startup crap

Completely rewrote the uncaught exception handler

Major general code cleanup

Moved process_* functions to new process library

Moved detect_* functions to new detect library

Added new tasks library, with management script. This library can manage background task execution

json_encode_custom() now again uses PHPs json_encode() (but can optionally still use its own internal version if needed)

Cleaned up the logging system. Removed the old log_console(), removed cli_log(), removed log_screen(), removed log_message(). Now only remain log_console() (which logs to file in case of PLATFORM_HTTP), log_file() and log_database()

Major cleanup (nearly rewrite) of the validate library. Most validate methods now optionally allow for empty values (and will then force those empty values to the specified datatype)

Reworked cli text coloring. All functions should now be able to set background colors as well, and when non existing colors are used, the system wont crash but give a nice warning

Fixed various scanimage library functions

Renamed PLATFORM_SHELL to PLATFORM_CLI

Fixed loads of command line issues

Loads and loads of minor fixes
"
824232cb60bd321fa447fc269d0b360551b62890,pubpub/pubpub,"Migrating journal name -> title
"
ad2477a6f58118efd360a679521e1b953f9bdabc,pubpub/pubpub,"Moving createAtom action to Media container
"
3259e0aec13856550fa0085fd564bfce65bb679d,pycket/pycket,"Improve pycket-lang.
"
7ad34c768de3765cb15196263be1b6b2330c3f06,pycket/pycket,"Merge branch 'master' into reconstruct-callgraph

Conflicts:
	pycket/small_list.py
"
c560d17bdd22e0be277d428193da0dd9bd161dc3,pyfa-org/Pyfa,"Improved processing status notification for import and export
"
8322307ae03676c44b53d4eb0f18a6bdc9d24750,pyfa-org/Pyfa,"Add tooltip for neut resist. Add handling missing attributes in getting modified value (return default, not exception).  Tox fixes to clean up a little.
"
cd77669d09d38e5ddb89ee8f6c8392bacebdf829,rakudo/rakudo,"Move method comb prototype
"
98fae3d84efeb6dedeb4881ea339b634311b807f,rakudo/rakudo,"Move up initialization of %*ENV and $*SCHEDULER

- these were being requested at each startup before being initialized
- saves creation of 2 X::Dynamic::NotFounds and 2x Failure
"
4ae21830e04e1383dc8e61706d254d737510ee27,rakudo/rakudo,"Fix dodgy split signatures.
"
9cb26c0927506cac217630b4cf0e6344558fdc9a,rakudo/rakudo,"Remove unnecessary saving of nqp::iterator values

You can use the iterator value itself after an nqp::shift.
"
11e8c3ba77c903d084786a91177be49d89251086,rakudo/rakudo,"Rename src/builtins.
"
b7bee21e81e56f8330f8c85604e8d96e70b02f9f,rakudo/rakudo,"An attempt at fixing Supply.zip/zip-latest

Problem is that [,] seems to have changed meaning in the GLR.  So, instead,
we're giving the no :with case a separate code path.  Now we only need to
convince the tests that we're doing the right thing.
"
3670b7112191f7ff31b9fbdc5012b2e8f1e7fc6d,rakudo/rakudo,"<.obs> in the grammar now throws X::Obsolete objects

also provides a small piece of infrastructure for easily throwing typed exceptions from the grammar
"
2bb41bd4b08e9766ce53e51cc20770e65051494f,rdevon/cortex,"Merge pull request #111 from rdevon/dev_ali

Refactored and redid backend"
bc732a2508941cb2bd854dee22f0213f1614d7bc,rdevon/cortex,"Fixing some bugs in the configuration script.

Moved setup control to main.py to avoid confusion with running models.
Removed configuration initialization from __init__.py, which removes the error of querying the file twice.
Fixed initialization of the CONFIG object and removed some dependencies in data.
Cleaned the config file queries.
"
60a0fe83499cff1b5caaab433eae619e06584be0,restic/restic,"Major restructure, bundle blobs

This commit also breaks the repository format.
"
c9f1f080199b8ed905082972e44dd48b64842d9c,restic/restic,"Small refactorings and ceosmetic changes
"
c4776521b99b847135a104f3b653efe3a21fe621,rivine/rivine,"reorganize sanity checks
"
48e09d3e9337809a886a24d36b823ade55c794f0,rivine/rivine,"add upload test to host

A few variables were added to the host struct that aren't yet used, they
will be tracking some metrics within the host.

'profit' got renamed to 'revenue' becuase it's actually revenue, and not
profit.
"
a8ae9397f9eceed61320b3d1753a97cda1695b40,rivine/rivine,"separate proto and contractor
"
041d13cb1de475732a9c75e9e6e9b43dbdf3fe5a,rivine/rivine,"Merge pull request #1141 from NebulousLabs/renter-reorg

Separate protocol code from Contractor"
7ac2df7c1930efc584a49e6be0b27f3c4d80e079,rivine/rivine,"dramatic simplification of transaction pool
"
a9bfb6f2b88952fd969441d2eaa65d649eb22eb5,rivine/rivine,"reorganize environment.go
"
9a9fc383223f10eeabb18e020373002e7301aca1,rivine/rivine,"Merge pull request #427 from NebulousLabs/types-cleanup

Types cleanup + testing"
92dbe06e26cf4301452329bbd8fe1636884d1c67,rivine/rivine,"replace conversion functions with conversion factor
"
e04b90c9c030bf5629e034f616a636245770a8d1,sampotts/plyr,"Ads only on HTML5 and .is cleanup
"
1eee8d6fa7ed5b64d1b893c7e24efbf39ee2c96b,sapcc/elektra,"Two factor (#89)

* two factor authentication ready

* first working version

* add two-factor authentication status to view

* improve two factor auth method

* make it possible to disable two factor authentication by env
"
ea4badda24f2e08398c207c09e7c0ed21f492361,sapcc/elektra,"Merge pull request #491 from monsoon/user_management

improve role assignment UI"
b17831592faa37afdd6ccb5507046a95a915e283,sapcc/elektra,"UserOnBoarding reworked. Reject process not 100% finished
"
1630f9e9f32fc7fcbc7e16752404a1f459d91365,sendgrid/docs,"Merge pull request #3861 from sendgrid/api-key2

API Key Reorg - take two!"
43296d72aab095c7aa6ccda179a7a5b85daa1251,strapi/strapi,Merge branch 'master' into improve/doc-plugin
963a09b3a36d78d89c835397e342f40c0ad8fdea,strapi/strapi,"Ignore dotfile during post-install and optimize plugins' middlewares load
"
ac3ea588fab4a543cadc7da7b099e7f302a59297,strapi/strapi,"Add eslint to strapi-helper-plugin!
"
aa02d5408afd01a31e88467ae4251776047f1ce1,strapi/strapi,"Improve login errors
"
6916134ee175d5de273f56f24453ee375f8e7811,strapi/strapi,"Update setup script to deploy and index.html rewrite
"
310f7b4b683b59f00f48b233d76411c798887569,strapi/strapi,"Rename setHasUserPlugin function
"
095a77fe29a67df1a51040acccde3848c46d2e1d,tripal/tripal,"Altered publish form to simplify it
"
59970d819794dfb2d710b265cd06ca44fd2a14d0,tripal/tripal,"attempt to improve logging
"
4ac66817c9c06ee6974ca1cea4324c1a0c35a695,tripal/tripal,"Merge branch '7.x-3.x-refactor' of github.com:tripal/tripal into 7.x-3.x-refactor
"
7e1971e600edf36f2b411f2c38d732731f73338d,tripal/tripal,"Converted linker_prop_adder to a TripalField class. Added validate and submit functions to the TripalField class. Updated linker_relationship field to use the new validate and submit functions
"
f326c7e002af2d1c645a1b1f86271ac85ff0adb0,tumic0/GPXSee,"Added missing string localization
Code cleanup
"
11a9d75d8f3d3e06ad217c29eadd4ee4424860cc,tumic0/GPXSee,"Yet another graph tabs polishing
Code cleanup
"
97c14f1213126bbbc3c14edf7db2253fc0d99166,xorz57/forest,"Deprecated Graphviz

References #68"
d8f77925d567c42486a276a6dc776fbe49e0f016,AladW/aurutils,"remove unused constructs

* the non-standard readonly -f errors if a function is modified that was
  such declared. In the year it was added I've only seen such errors when
  used with a nonexisting function.
* declare -a, declare have no additional effect outside functions.
* declare -i is pointless when variables are not influenced by user
  input. Even then, the assigned value is only evaluated as an
  arithmetic expression, no ""type"" check is done.
"
00b2d49721b060e6515ab0c6edaa4ee0f0777891,Antergos/Cnchi,"Renamed some files
"
da7714e514fb9efe7ff20aa9b7b75782f2c718a7,Antergos/Cnchi,"Renamed installation_thread to installation_process. NOT TESTED
"
ed21aa50c82745e90704fdc57cd93e616ac1b656,Apretaste/Core,"Core ready for the optimized tables, and some minor changes
"
6d673a063cc6dcb47b504a93edda95f1af771617,Apretaste/Core,"optimize images on the server and change to jpg
"
bb1ce0fabc3743b892cf76572dd68787c4149efc,CESNET/libyang,"parsers CHANGE simplify/clarify lyp_parse_value()

separate 2 different features of the function:
1) leaf parameter is necessary for resolving value and its type (especially
in case of identityref), so we cannot depend on it to get know if 2) the result
is supposed to be stored in the leaf. Therefore, a new parameter of the function
was added to get know if the result is supposed to be stored and the leaf
parameter is now mandatory.
"
d4c1d0f264c1075ae250d5a8468bf8dad6d428fb,CESNET/libyang,"schema parsers CHANGE including submodules

Better follow RFCs (mainly 7950) when including submodules
and actually simplify the functionality. Since 6020 was not strictly clear
about submodules, we were allowing to include submodule in another submodule
while it wasn't included in the main module. pyang and 7950 is strict about it
and it is not allowed.

Due to a future changes connected with extensions support and also to simplify
the code, in 1.1 modules all the includes are required in main module and in
case of 1.0, warning is printed, the missing include is added into the main
module and parsing succeeds.
"
ff4874d60e11590b1602660b6c274e8b92bfe566,CESNET/libyang,"schema parser CHANGE improve revision checking
"
e1c7a8254a6a7addec9564e89472ea2e31f83b39,CESNET/libyang,"resolve CHANGE copy leafrefs in unions in typedefs

It is needed because the target can always be resolved
to a different node, so we need to store them in separate
type structures.

Fixes #334
"
c3d9f8ca71970a4f7432516ed62a8806dfce3d9e,CESNET/libyang,"all CHANGE redesign and splitting of the library

Parsing strings and resolution of any kind are
implemented in separate files. Resolution of cases,
which cannot be resolved at the time of being
parsed, rewritten. Other smaller changes.
"
be3363994292dc9b33f7f67798491d3348eb33eb,CESNET/libyang,"extensions CHANGE optimise enums for easier use

LYEXT_SUBSTMT is a subset of LY_STMT, so make the values compatible
to allow their interchanging. Also order the values to allow easier
use (shorter code).
"
0ec51da163bf0a85d667844c23ac9cb55ef2b82c,CESNET/libyang,"context FEATURE allow disabling/enabling modules in the context

adds new functions:
lys_set_disabled()
lys_set_enabled()
ly_ctx_get_disabled_module_iter()

and changes (unifies it with the previous functions) prototype of
ly_ctx_remove_module()
"
ddb1004172271c80c33f7471b1dae431820e8f26,Chatie/wechaty,"refactor puppet-manager
"
b36c6f630d31b834da74fe61cc6690cf9cebd4af,Chatie/wechaty,"BREAKING CHANGE: message.to() will not work with Room. use message.room() instead. #88
"
2e8f0f2d8e8a9a82947921b949ecffc0afb430df,ISO-tech/sw-d8,"[SW #984]: Rename 'Department' to 'Section' (everywhere).

- Vocabulary name
- Fields + other config that reference it
- Custom code in sw.module that depends on it
- Migration-related code that cares about departments/sections
"
148790284b20a961f72839aba0d12ebb1fea54d7,MesserLab/SLiM,"Further improvements to our use of inlining
"
e741578ffd829b7b299d9932418d56a7860ad420,MesserLab/SLiM,"Add/revise rep, seq, rev
"
d019bbd8a9f52d0334db57156f30c66e522ec352,Microsoft/PTVS,"Major refactor to move unnecessary code out of Analysis.
Specifically, the old DB-based factories have been moved into Analyzer, and the out-of-proc analysis will go into a new project called Analysis.Host.
Also, package management support has moved into VSInterpreters and generalised to support multiple managers for each factory.

Other changes:
* BuiltinTypeId now has extension methods for getting names based on version (moved from SharedDatabaseState)
* The default search mode can no longer be changed via registry hacks
"
93dfdd142c03cca01bb7ad380cfb9564dcc13e2a,Microsoft/PTVS,"482 When debugger breaks one thread it (mistakenly?) leaves other threads unsuspended
	We now block all of the other threads that are running Python code when one thread blocks.  We now pass all of the new attach tests.

483 We do a poor job of handling threads which are in a join
	When doing an async break we capture the threads stacks even if we need to do it off the thread which is running.  If the thread later finishes its join we‚Äôll re-capture the stack and re-evaluate the variables locally on the thread to get a more accurate set of variables.

477 ""New Project from Existing Code"" regressed in 1.1 when recursing through subdirectories
	Ensure a folder node always ends with only a single ‚Äú\\‚Äù regardless of whether or not the .pyproj entry ends in a ‚Äú\\‚Äù or not.

455 Threads window should show Python thread name
	Get the thread name from the threading module and send it when we update the frames.	Updates the test which checks for thread name.

494 InvalidOperationException when debugging with customized IronPython interpreter
	Handle the exception when converting a path to an absolute path and ignore the module if it‚Äôs an invalid filename.


Also fixes the DebugProject tests which were broken after adding the new msbuild step for resolving assembly references.
"
7c1ff2e37fbd69d21ed4cbb968df8aed635fe576,Microsoft/PTVS,"229 - .NET stdout/stderr should be redirected in the REPL
	Support re-directing Console.Out/Console.Error when running on IronPython

228 - Completion databases need versioning
	Add version file, write it out when generating the analysis, read it back when loading analysis ‚Äì don‚Äôt load earlier versions and instead do auto-generation

227 - Accelerator keys on Project menu items
	Add missing accelerator keys

225 - Refactor -> rename gives bad error message when applied to extended selection
	Handle empty expression analysis and tell the user to select a symbol.
	Also don‚Äôt allow rename when the user has selected more than just the symbol to be renamed

230 - We should disallow $attach if already attached
	Report to the user that they cannot attach.  Track whether

236 - Analysis crash in generator def
	DictionaryItemsIterableBoundMethod needs to use the property KeyValueTuple, not the value which may be uninitialized

No sig help on super
	We should fallback to __init__ for help if __new__ isn‚Äôt useful.

3.x analysis is messed up.
	Recent updates to the scraper stopped writing out using v2 of the analysis

Can‚Äôt find references inside of a class reference when surrounded by function defs
	We need to account for other statements (not just class/func defs) when figuring out what scope we‚Äôre currently in

Find all refs should find refs in subtypes

Resetting REPL window doesn‚Äôt always create a new input span
	If we were executing an input while the user hit reset we wouldn‚Äôt put the new prompts in place.

Don‚Äôt lose stdout when detaching from REPL process

We were aggregating scopes over time ‚Äì clear the scopes on a new analysis.

Add some missing locks in DebugConnectionListener

Fix some races when attaching the repl to the debugger

Replace throwing bare SocketException w/ our own a DisconnectedException  so users don‚Äôt get ‚ÄúOperation has completed successfully‚Äù error messages
"
93e9d4b0522c2faafbf2d2f0a0a7736e3063a5a1,Microsoft/PTVS,"Rename assemblies
"
2170de14baed8b11590d15c51f66f8b0fe1d58ff,Microsoft/PTVS,"Restores use of CallChain instead of ClosureSet
Improves function description
Fixes tests
"
60c9b90e6b8448230aea20e666fe1f9084a68c1c,Microsoft/PTVS,"303 REPL weirdness when user manually exit()s
286 Request: ability to tell if Interactive is running
	Handle disconnected repl better when inputting and getting intellisense info

290 Renaming package directory fials with ""Could not find part of the path ..."" for __init__.py
	Our logic for getting a relative path was wrong, and we need a refresh properties call after updating the ms build info

305 Incorrect message in Language Version tooltip
	Fix the string


308 No intellisense for pygame module in editor window
	Fix discovery of modules when they‚Äôre not properly chained together, walking of site-packages under Py3k

291 Imports of siblings from within a package don't get picked up in analysis.
	We weren‚Äôt handling import statements with multiple parts correctly.  We should import the 1st part unless there‚Äôs an as name in which case we import the final module as the as name.
"
43cc36bb5aee7609163eab4e442ec4dc92b8f786,Microsoft/PTVS,"272 asking for completions sometimes creates socket exception (IronPython Interactive)
IronPython can take a long time to startup ‚Äì handle that gracefully and don‚Äôt attempt to get REPL completions before startup, update error message when user executes code and it isn‚Äôt started up yet

265 Problems with completion on ""import"" statement
2. Search the search path for .NET dlls
3. I believe this is the same as #4
4. This is the correct behavior, we add an ephemeral module for the previous import, it‚Äôll go away if the imports get removed and we re-analyze

283 Completions not appearing for .NET types in VS Editor (IronPython)
Ephemeral modules could hide built-in modules, make built-in modules take precedence

254 - Crash while changing the default interpreter
Can‚Äôt repro this, and I don‚Äôt see how this crashes, but I‚Äôm hardening the code to ensure it won‚Äôt crash in the future even if we‚Äôre in some really odd state

301 Boss's boss REALLY wants to use PTVS w DEV11
Also includes the start of support for Dev11 builds. Still not done yet as we don‚Äôt successfully load.

309 Command placement priorities are not reliable
Fix command placement priorities

Avoid updating the error list when there‚Äôs no changes (these involve expensive cross thread calls)
Don‚Äôt analyze any standard library directories (currently we will not analyze the std lib directory for the current interpreter)
Rev the database version so that previous users will get the latest analysis which includes .pyd files
"
08b251edd1e353f100d2e85fdaa979d6132a7fea,Microsoft/PTVS,"Merge pull request #4652 from MikhailArkhipov/out

Improve reliability of document outline population in VS Code"
6df9f6d62256da3b38ff7540c4657de405f0d30b,Microsoft/PTVS,"Make TryImportModuleResult struct members readonly
"
caa648d863707a485fda8c79a4bc2366be8fe24c,Microsoft/PTVS,"Improves environments list display of company and support information.
Fixes virtual environment construction.
Removes Canopy factory (as it can now be replaced with proper registration)
Fixes listing of packages in solution explorer
"
166c69f9e0d851b7f7095e5b665f1ca743c21411,StackStorm/st2,"Merge pull request #263 from StackStorm/STORM-296/combine-params

[STORM-296] Combine action_parameter and runner_parameters."
3b0ecbccd84694bfe082df756767b85426672c24,StackStorm/st2,"Update notifier to correctly utilize COMPLETED_STATES AND FAILED_STATES
constants.

Also reduce code duplication.
"
3f8ad87146999172c01bff2a01b092bb35e06f4b,StackStorm/st2,"[STORM-311] Disallow override of runner parameters in action.

- At registration actions are disallowed from overriding the parameters
  defined by corresponding runners.
- Moved ActionType from the st2actionrunnercontroller project to
  st2actioncontroller project. This way ActionTypes are queriable from
  the same pecan controller as /actions.
- Moved ActionType registration out of controller code to have the
  registration become more explicit.
- Rearranged how ActionTypes and Actions are registered.
"
5bea26d0f7ce42013c8e6cc2adf0df5186f56fae,StackStorm/st2,"Merge branch 'master' into fix_type_resolution

* master: (23 commits)
  Make sure we clear the DB before and after each test run for test classes which inherit from ActionControllerRBACTestCase.
  Make sure we reset the context in the tearDownClass method.
  Add API level test case for action creation RBAC.
  ""user_has_resource_permission"" -> ""user_has_resource_db_permission""
  More comment.
  Update sample role definition file - show how to grant webhook_create permission on a particular webhook.
  Re-generate supported permission types table.
  Add missing sensor_modify - permission type and put modify API endpoint behind RBAC wall.
  Update affected test case - we need to reference the correct pack since grant is on ""examples"" pack.
  Put rule create API behing a new RBAC wall.
  Add tests for checking rule create permissions (user_has_resource_api_permission).
  Implement create permission checking (user_has_resource_api_permission) for rules.
  Add missing __all__.
  Add new ""APIUIDMixin"" class and use a more robust and safe way to retrieve the UID for an API object.
  Reduce duplicated code and refactor common functionality in a ""private"" method.
  Add tests for actions permission resolver user_has_resource_api_permission method.
  Add a new RBAC decorator for checking resource_api permissions before create.
  Add a test case for a pack name being set during create if one is not provided.
  Set default pack name for resource create if one is not provided inside the jsexpose method. Also update affected code.
  Add ""user_has_resource_api"" related utility methods.
  ...
"
eb3c2ae19a57435dfc2677c377eb9df82c105a39,StackStorm/st2,"Cleaning up stdin to python wrapper. Requiring parameter to enable stdin params. Allowing for both stdin and parameters argument to coexist.
"
dd747104c174184706009f14e31415ac41f46ef5,StackStorm/st2,"Refactor registrars - move common logic in base ResourceRegistrar class to avoid
code duplication.
"
18d1418c66f80405a2dc9d9a8c9035cd503b8c06,StackStorm/st2,"Fix: Rename content_pack to pack
"
156de20c3b750859c3505b3ab961c042f5155bd0,StackStorm/st2,"Make more Trigger related code content pack and reference aware.
"
70305cb5824a6bb5ad46bc51381fa1b7b9128172,StackStorm/st2,"Move internal trigger registration to the API service and perform it during the
API service bootstrap / setup phase.

Update affected code and remove now obsolete configuration options.
"
312cb0ef166364018355f0c8459c685606c818a0,StackStorm/st2,"Merge branch 'master' into api-keys

* master: (23 commits)
  Move variable inside the scope where it's used.
  Remove unused argument.
  Update changelog.
  Fix packs.info so it correctly searches for pack in all the search dirs.
  packs.info should return non-zero status code if the pack doesn't exist or doesn't contain .gitinfo file.
  Revert ""Remove obsolete wsgi.py files.""
  Skip gunicorn tests on travis.
  Fix typo.
  Remove obsolete wsgi.py files.
  Specify default listen ip and port in the gunicorn config. This way bind parameters don't need to be explicly specified on the command line.
  Fix typo.
  Add support to launchdev for running st2api and st2auth using gunicorn when ""-g"" flag is provided.
  Use longer sleep in the tests.
  Fix lint.
  Add simple integration test for testing gunicorn configs.
  Fix typos.
  Add gunicorn config for st2auth.
  Update affected code.
  gunicorn -> gunicorn_config.
  Move register_internal_trigger_types functionality into common service_setup function and update affected code.
  ...
"
243b06f5e920b922a9d941d24e9248b15ffec75f,StackStorm/st2,"Refactor worker for action runner and scheduler

Keep worker for the action runner and scheduler separate. Until the scheduler has its own launcher, the auncher for the action runner will also run and wait for the scheduler to complete.
"
7d1a05c647aaebc73c2c05d76e33566cf5de0e94,StackStorm/st2,"Merge pull request #953 from StackStorm/action_model_refactor

RFR: Action model refactor to use ContentPackResourceMixin"
9a6703c2c26d8f8904b02f05b2f7f6f274c5a431,StackStorm/st2,"Fix: Cleanup unused config options
"
a4c8865338b540e0d4febaf7118b988e8f423ee0,StackStorm/st2,"Merge branch 'master' into traces

* master: (63 commits)
  Move the Mistral config doc to the install section
  Minor fix to string substitution in get_action_execution_id_from_url
  Use warn instead of exception in between retries
  Fix retry logic in the Mistral callback handler
  Create get_action_execution_id_from_url method for Mistral callback
  Move Mistral unit tests for auth to a different file
  Update change log for configuring Mistral auth
  Add docs to configure auth options for Mistral
  Add config options for Mistral auth with Keystone
  Refactor Mistral callback handler to use python client instead of API
  Refactor Mistral querier to use python client instead of API
  Fix lint violations in the linux pack.
  Also run flake8 and pylint on Python files inside the linux pack.
  Improve logging in wait_for_ssh action, remove unecessary second sleep.
  Remove unused imports.
  wait_for_ssh should throw on timeout, otherwise the action will never fail unless the user checks / compares the result value.
  Make sure that the ""default"" pack which we create during installation has a pack.yaml file.
  Paramiko to be default SSH runner
  Add some missing license headers.
  Update st2-register-content CLI script to use the new script setup code.
  ...
"
b6bce021a522b13dc44d59465d02981a03fa3860,StackStorm/st2,"[STORM-58] Implement ssh-based runner

* Implement assembly of LiveAction POST data in ActionExection POST handler.
* Update ActionExecution status to running when launching LiveAction.
* Implement lookups for ActionExecution, Action, and ActionType in LiveAction POST handler.
* Remove dead code from LiveAction handler.
* Add missing fields to ActionAPI and ActionDB models.
* Fix function name to convention of get_X_by_Y.
"
544bb4f141b3993e5e1284a105392df176be40f2,StackStorm/st2,"Fix: Leftover rename of content_pack to pack
"
a2e9aa0207900c8fb3c898e3d1665a622978dbe2,StackStorm/st2,"Merge pull request #363 from StackStorm/STORM-369/rename_action_types_runner_types

RFR: Rename action type to runner type. "
a2cd20fee968c52177aa0e2338361a4efbd0adaf,Tendrl/commons,"Log msgs priority improvements
"
c7c989f2a0d8111dffecf04d9748ac62c68da7d1,Ultimaker/Cura,"Fix merge conflicts after multi-buildplate refactor
"
fa394a0171eaab429c2c84cf0511849458f7937b,Ultimaker/Cura,"Remove Not-Supported profiles for CPE+ and PC

They are now supported. This breaks the stacks of people who had these profiles active when they upgraded from 2.6.0 to 2.6.1, which causes them to get a screen of which printer they want to add, and they lose their current settings. But we decided that this use case is too slim to make an entire version upgrade for this patch-version release.

Contributes to issue CURA-3960.
"
024f2384e0c671a4b75ec2dd0dd63f6509082dc0,Ultimaker/Cura,"Fix mutable arg problem and rename arg

CURA-4049
"
0b858f38781847f79dc85181d27addf3e9365212,Ultimaker/Cura,"Introduced a LayerDataBuilder. Made LayerData immutable just like its superclass. Fixed the layer view which broke.
Contributes to CURA-1504
"
2477617155fed6cacc7e8ecb8adb3e072a87db4f,Ultimaker/Cura,"Reorient LayerView slider
Fix toolbar tooltip collisions
Refactor use of colors.text_default
"
ac0192f01f72c859effe05ae7ce9dc7a536d9220,Ultimaker/Cura,"Improve fixes
"
39986baa2f50fac145e93baaa1817f7e828c5d28,Ultimaker/Cura,"Remove redundant travel avoid distance settings

The UM3 definition sets the setting to 3mm. Nothing else sets it to another value except FDM Printer. I left the UM3 setting in and removed all travel_avoid_distance settings in the UM3 profiles.
"
aa2563b89167b75bf484844a038c549ebefa7328,Ultimaker/Cura,"Rename ""Machines"" to ""Printers""
"
6e068370849bab0235d11614b717fce8ac6a1b91,Ultimaker/Cura,"Remove duplicated function createDefinitionChangesContainer()

CURA-4107
"
edb1cfb4f935ec633647feedb0bdf0962af55602,WSULib/combine,"validity cleanup
"
60e79c986ab40c8d05bffed8a4534582fc325ea6,WSULib/combine,"renaming to utils
"
38879fb3ffa88ca95b15c61656a92e72c0ed996f,apurtell/hbase,"HBASE-19007 Align Services Interfaces in Master and RegionServer

Purges Server, MasterServices, and RegionServerServices from
CoprocessorEnvironments. Replaces removed functionality with
a set of carefully curated methods on the *CoprocessorEnvironment
implementations (Varies by CoprocessorEnvironment in that the
MasterCoprocessorEnvironment has Master-type facility exposed,
and so on).

A few core Coprocessors that should long ago have been converted
to be integral, violate their context; e.g. a RegionCoprocessor
wants free access to a hosting RegionServer (which may or may not
be present). Rather than let these violators make us corrupte the
CP API, instead, we've made up a hacky system that allows core
Coprocessors access to internals. A new CoreCoprocessor Annotation
has been introduced. When loading Coprocessors, if the instance is
annotated CoreCoprocessor, we pass it an Environment that has been
padded w/ extra-stuff. On invocation, CoreCoprocessors know how to
route their way to these extras in their environment.

See the *CoprocessoHost for how the do the check for CoreCoprocessor
and pass a fatter *Coprocessor, one that allows getting of either
a RegionServerService or MasterService out of the environment
via Marker Interfaces.

Removed org.apache.hadoop.hbase.regionserver.CoprocessorRegionServerServices

M hbase-endpoint/src/main/java/org/apache/hadoop/hbase/security/access/SecureBulkLoadEndpoint.java
 This Endpoint has been deprecated because its functionality has been
 moved to core. Marking it a CoreCoprocessor in the meantime to
 minimize change.

M hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupAdminEndpoint.java
 This should be integral to hbase. Meantime, marking it CoreCoprocessor.

M hbase-server/src/main/java/org/apache/hadoop/hbase/Server.java
 Added doc on where it is used and added back a few methods we'd
removed.

A hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/CoreCoprocessor.java
 New annotation for core hbase coprocessors. They get richer environment
 on coprocessor loading.

A hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/HasMasterServices.java
A hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/HasRegionServerServices.java
 Marker Interface to access extras if present.

M hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterCoprocessorEnvironment.java
  Purge MasterServices access. Allow CPs a Connection.

M hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionCoprocessorEnvironment.java
  Purge RegionServerServices access. Allow CPs a Connection.

M hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/RegionServerCoprocessorEnvironment.java
  Purge MasterServices access. Allow CPs a Connection.

M hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/MasterSpaceQuotaObserver.java
M hbase-server/src/main/java/org/apache/hadoop/hbase/quotas/QuotaCache.java
  We no longer have access to MasterServices. Don't need it actually.
  Use short-circuiting Admin instead.

D hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CoprocessorRegionServerServices.java
  Removed. Not needed now we do CP Env differently.

M hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java
  No need to go via RSS to getOnlineTables; just use HRS.

And so on. Adds tests to ensure we can only get at extra info
if the CP has been properly marked.
"
47a4e3437bb637522525c0baf3d04a11c0546980,apurtell/hbase,"HBASE-17132 Cleanup deprecated code for WAL
"
00c1b566658aa2fecde4ce2dbde2464f5771430e,apurtell/hbase,"HBASE-18465: [AMv2] remove old split region code that is no longer needed

Signed-off-by: Michael Stack <b26dc72d261a92c1cfd1e643717e450a84cf2122@apache.org>
"
219c7864575be3ab0a1f67ddd48c5852377c2ed2,apurtell/hbase,"HBASE-16672 Add option for bulk load to copy hfile(s) instead of renaming
"
fd991fe9089afe84a45fa2720d3cd09801cd059f,apurtell/hbase,"HBASE-9052 Prevent split/merged region from assigning again

git-svn-id: 949c06ec81f1cb709fd2be51dd530a930344d7b3@1508247 13f79535-47bb-0310-9956-ffa450edef68
"
ed87a81b4b61c4842c12572a47c97ae23773012f,apurtell/hbase,"HBASE-16308 Contain protobuf references Gather up the pb references into a few locations only rather than have pb references distributed all about the code base.

Purge ServiceException from Callable subclasses by pushing SE handling
up into the parent Callable class (varies by context but this is basic
patten). Allows us remove a bunch of boilerplate.
Do this in the public facing classes in particular (though if
an API has SE in it -- which a few do, this patch leaves these
untouched -- for now.) Make it so HBaseAdmin and HTable have no
direct pb imports (except for endpoint processor API).

Change a few of the HBaseAdmin calls to be retrying where comments
ask that we do retry rather than one time.

Purge TimeLimitedRpcController. Lets just have one override of RpcController.

        M hbase-client/src/main/java/org/apache/hadoop/hbase/client/AbstractRegionServerCallable.java
         Cleanup. Make it clear this is an odd class for async hbase intro.

        M hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java
         Refactor of RegionServerCallable allows me clean up a bunch of
         boilerplate in here and remove protobuf references.

        M hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
          Purge protobuf references everywhere except a reference to a throw of a
          ServiceException in method checkHBaseAvailable. I deprecated it in favor
          of new available method (the SE is not actually needed)

        M hbase-client/src/main/java/org/apache/hadoop/hbase/client/PayloadCarryingServerCallable.java
         Move the RetryingTimeTracker instance in here from HTable.
         Allows me to contain tracker and remove a repeated code in HTable.

        M hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionServerCallable.java
         Clean up move set up of rpc in here rather than have it repeat in HTable.
         Allows me to remove protobuf references from a bunch of places.

    M hbase-client/src/main/java/org/apache/hadoop/hbase/client/FlushRegionCallable.java
     Make use of the push of boilerplate up into RegionServerCallable

    M hbase-client/src/main/java/org/apache/hadoop/hbase/client/MultiServerCallable.java
    M hbase-client/src/main/java/org/apache/hadoop/hbase/client/PayloadCarryingServerCallable.java
    M hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionAdminServiceCallable.java
    M hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerWithReadReplicas.java
    M hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallable.java
    M hbase-client/src/main/java/org/apache/hadoop/hbase/client/SecureBulkLoadClient.java
    M hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/LoadIncrementalHFiles.java
     Move boilerplate up into superclass.

    M hbase-client/src/main/java/org/apache/hadoop/hbase/client/RetryingTimeTracker.java
     Cleanup

    M hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/PayloadCarryingRpcController.java
    M hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java
    M hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/WALEditsReplaySink.java
    M hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/RegionReplicaReplicationEndpoint.java
     Factor in TimeLimitedRpcController. Just have one RpcController override.

    D hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/TimeLimitedRpcController.java
     Removed. Lets have one override of pb rpccontroller only.

    M hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/ProtobufUtil.java
     (handleRemoteException) added
     (toText) added

Signed-off-by: stack <b26dc72d261a92c1cfd1e643717e450a84cf2122@apache.org>
"
52c4ce5cdd29ea25a2ab9c04f95cf12acb0c6e02,apurtell/hbase,"HBASE-4422  Move block cache parameters and references into single CacheConf class (jgray)

git-svn-id: 949c06ec81f1cb709fd2be51dd530a930344d7b3@1182194 13f79535-47bb-0310-9956-ffa450edef68
"
743d16138e8817164f82026b4ef26fbd02c204bd,apurtell/hbase,"HBASE-12679 Add HBaseInterfaceAudience.TOOLS and move some of the Public classes to LimitedPrivate
"
24ebbcabc39b0e8daa01c6ec004da62a3909b803,apurtell/hbase,"HBASE-7188 Move classes into hbase-client

git-svn-id: 949c06ec81f1cb709fd2be51dd530a930344d7b3@1449950 13f79535-47bb-0310-9956-ffa450edef68
"
5d19fcfd8328e89ac9ff5c4a31734d7ed152a501,apurtell/hbase,"HBASE-7110 refactor the compaction selection and config code similarly to 0.89-fb changes; ADDENDUM to fix broke TestHeapSize

git-svn-id: 949c06ec81f1cb709fd2be51dd530a930344d7b3@1413995 13f79535-47bb-0310-9956-ffa450edef68
"
9bdb81f0a1db308a8a452379455b6bbfe70ea20d,apurtell/hbase,"HBASE-12887 Cleanup many checkstyle errors in o.a.h.h.client
"
359fed7b4b62e4dc7818a211735630cf0e10fc14,apurtell/hbase,"HBASE-18106 Redo ProcedureInfo and LockInfo

Main changes:
- ProcedureInfo and LockInfo were removed, we use JSON instead of them
- Procedure and LockedResource are their server side equivalent
- Procedure protobuf state_data became obsolate, it is only kept for
reading previously written WAL
- Procedure protobuf contains a state_message field, which stores the internal
state messages (Any type instead of bytes)
- Procedure.serializeStateData and deserializeStateData were changed slightly
- Procedures internal states are available on client side
- Procedures are displayed on web UI and in shell in the following jruby format:
  { ID => '1', PARENT_ID = '-1', PARAMETERS => [ ..extra state information.. ] }

Signed-off-by: Michael Stack <b26dc72d261a92c1cfd1e643717e450a84cf2122@apache.org>
"
5893f72c17e6f11886899955cd67f18766dd5033,apurtell/hbase,"HADOOP-2522 Separate MapFile benchmark from PerformanceEvaluation


git-svn-id: cd04eed87aeab77cae603320d37174dee2a0d977@609422 13f79535-47bb-0310-9956-ffa450edef68
"
0af61dce6576edfb95b41c1959d1947add7dd092,apurtell/hbase,"HBASE-18815 We need to pass something like CompactionRequest in CP to give user some information about the compaction

CompactionRequest was removed from CP in HBASE-18453, this change reintroduces
CompatcionRequest to CP as a read-only interface called CompactionRequest.
The CompactionRequest class is renamed to CompactionRequestImpl.

Additionally, this change removes selectionTimeInNanos from CompactionRequest and
uses selectionTime as a replacement. This means that CompactionRequest:toString
is modified and compare as well.

Signed-off-by: Michael Stack <b26dc72d261a92c1cfd1e643717e450a84cf2122@apache.org>
"
37696fffe95bd1cf3c4ca92a4a11560d53df769b,apurtell/hbase,"Revert ""HBASE-16478 Rename WALKey in PB to WALEdit This is a rebase of Enis's original patch""
Not worth the difference it introduces; means hbase-protocol can no
longer parse a WAL entry.

This reverts commit 9a2e680caeb8c6627357ff5a0963170f09e65414.
"
c744e0df9c78224cda225fb940e8829ca222f164,codeontap/gen3,"Correct WAF template

Add an ""account"" category for account level resources.

Refactor IP address group processing to correct handling
of multiple entries in one address group.
"
fc501709a33bead8621af2ccc3766aa08303a1f7,conan-io/conan,"Feature/remove disk search manager (#2919)

* removed DiskSearchManager

* fixes to removal of DiskSearchManager

* simplified sqlite code

* moved BuildMode

* fixed tests

* fixed API tests
"
a83c6946cefe94fda422e9eba5946cd4d8219ba0,conan-io/conan,"cmake.package() and conan build --package_folder (#1472)

* cmake.package() and conan build --package_folder

* renamed cmake.package() => cmake.install()
"
51286fc434ad6c3c884a1f2215216cd226c48c6f,conan-io/conan,"improved build_mode (#1069)

* improved build_mode

* increased version
"
adb62fb9dd1b96a1b4ffa37e2182555f99601eae,conan-io/conan,"Refactor loaders (python-requires, CI) (#3381)

* loader basic

* extracting duplicated Retriever in tests

* fixing more tests

* working

* fixing tests

* more refactors

* fixed tests

* fixing test

* PreprocessProfile

* removed global load_conan_class

* fixed broken tests

* review
"
f138520f8e7b6b154df134c46ef26bdc60bb9052,conan-io/conan,"Feature/optional env inheritance (#2139)

* Optional auto inheritance for env vars

* better test

* Testing also as a build_require

* Renamed to apply_env
"
5b93194d38b13a374b2fc7bc9b66987d63cc9fcc,darglein/saiga,"renamed libhello to saiga
"
701eb20f8320f546aab500873c325d1ce2ba66b3,facebook/infer,"Refactor Sil.exp to Exp.t

Summary: Create Exp module and refactor Sil.exp to Exp.t

Reviewed By: cristianoc

Differential Revision: D3669394

fbshipit-source-id: 1f52a90
"
4013e13cbe0506cd41d101cc6595296c73df4454,facebook/infer,"[infer] Moving the getter for the return variable from Cfg.Procdesc to Sil

Summary:
the name of the return variable of a procedure only depends on the name of that procedure. This simplifies the need for the procedure description in a couple of places
"
ad54126dab68bde68641dd05c30f6befbd310a34,facebook/infer,"[infer][ondemand] add a `--keep-going` command line option to specify when to catch the exceptions raised during the analysis

Summary: This will allow us to gradually get rid of the exceptions thrown during the analysis while detecting the regressions earlier

Reviewed By: jberdine, jvillard

Differential Revision: D5385154

fbshipit-source-id: 605e3f5
"
226791b631129e6d9c1380ce3eebc1a5abbea1fa,facebook/infer,"[ondemand] simplify API by removing need to pass type environment

Summary: Noticed this when I was writing the documentation for the abstract interpretation framework and was curious about why `Ondemand.analyze_proc` needs the type environment. It turns out that the type environment is only used to transform/normalize Infer bi-abduction specs before storing them to disk, but this can be done elsewhere. Doing this normalization elsewhere simplifies the on-demand API, which is a win for all of its clients.

Reviewed By: cristianoc

Differential Revision: D4241279

fbshipit-source-id: 957b243
"
1b2adb94226d52714a761b91677b399da584ce55,facebook/infer,"[inferbo] Refactoring 5/8: simplify Utils.Check.array_access

Reviewed By: jvillard

Differential Revision: D7397129

fbshipit-source-id: 6f68ee4
"
1fe920c0c51b490eb7d1822036b79bcfce071edb,facebook/infer,"Cleanup code triggering code translation

Summary:
public
1. Make function body one stmt instead of list
2. Revert list of statements in exec_trans_instrs
3. Simplify some code related to handling custom instructions

Reviewed By: jvillard

Differential Revision: D2865275

fb-gh-sync-id: b07ed06
"
909473f3da3d25da0bf3e2e4d807eed38d8dff09,facebook/infer,"Clean up code to produce html pages of analysis results in debug mode.

Reviewed By: akotulski

Differential Revision: D3041115

fb-gh-sync-id: 6f86cf5
shipit-source-id: 6f86cf5
"
0793e0ff40aac30d1798a20e20824043a79ebad3,facebook/infer,"[make] move inferTraceBugs tests to build systems, hide more output

Summary:
Cosmetic changes to the output of `make clean` and `make test-replace`.

Run the inferTraceBugs tests from tests/build_systems/ like other such e2e
tests, so that they can run in parallel with other tests instead of
sequentially at the end.

Reviewed By: dulmarod

Differential Revision: D5526599

fbshipit-source-id: 57231bd
"
f605cb4b7ec3dc6bf807b7db27fb2e9db2e1125f,facebook/infer,"[clang cleanup] Split CFrontend_utils module into CAst_utils and CGeneral_utils

Summary:
Module CFrontend_utils is a container for two modules: Ast_utils and General_utils.
Instead of opening CFrontend_utils in several places, it is now split into two separate modules CAst_utils and CGeneral_utils, which are now accessed directly.

Reviewed By: jberdine

Differential Revision: D4392710

fbshipit-source-id: ea756a2
"
69b39dacb0cf9439db9b5e4311893dfd5ab404cb,facebook/infer,"[DB] Create module for SourceFile

Summary:
Functions related to source files were already namespaced by `source_file_` prefix. Make separate module for them.
In high level it replaces all `source_file_` with `SourceFile.` and then fixes all remaining compilation errors

Reviewed By: jvillard

Differential Revision: D4299053

fbshipit-source-id: 20b1d39
"
61aa7aaae5e0bade896af1bf954fd480c9fc420a,facebook/infer,"Move Fieldname module inside Typ

Reviewed By: mbouaziz

Differential Revision: D5291900

fbshipit-source-id: 2bf232a
"
52746fd9ebebb1eeaa7993c2aa79283e455f90e6,facebook/infer,"[checkers] add --<checker>-only options

Summary:
This makes it easier to test a single checker.

Also refactor the code to make it harder to mess up the list of default/all checkers.

Reviewed By: sblackshear

Differential Revision: D5583209

fbshipit-source-id: 7c919b2
"
d3f5d0961ae1e3bda56299688318588ec2577438,frappe/erpnext,"[feature] Opening Invoice Creation Tool (#11589)

* [enhance] Opening Invoice Tool create Opening Sales/Purchase Invoices

* [minor] added progress bar while creating invoice

* [minor] allow bulk upload for the invoices

* [minor] calculate item rate from net total

* [minor] added defaults for invoices fields, create gl entries only if grand_total is greater than 0

* [minor] check mandatory values before making opening invoices

* [minor] enable primary button if there is any error while creating invoices

* [minor] minor fixes, set company currency as invoice currency added tests

* [dashboard] added Opening Invoice Summery section in Dashboard

* [minor] added total invoices count on dashboard

* [minor] don't show dashboard if there are no opening invoices available

* [minor] added Opening Invoice Tools to Account's Tools section

* [minor] codecy fixes

* [fix] refactored general ledger and buttons on charts

* [fix] tests
"
a56224c03a2c251a79cd237f27c97697c1e93cf1,frappe/erpnext,"Rename Assessment to Assessment Plan
"
2f702dcb3225b544c757ddf0fccf3d0a948a9d62,frappe/erpnext,"[fixes] bulk close facility, rename Drop Ship to Delivered By Supplier
"
3f5e59eeeb789d2247a4ca3fddfe1838696c9c6c,frappe/erpnext,"[minor] [cleanup] Landed cost wizard
"
bfc195dd8bbe68d0460d55b1356cf23155507684,frappe/erpnext,"Changes to support refactor in frappe pg-poc branch (#15287)

* Remove quotes from sql to make it compatible with postgres as well

* Fix queries
- Replace mysql specifc queries with standard ones

* Make repo URL chages to test pg-poc

* Add root passowrd to test site config

* Fix quotes issue

* Remove debug flag from a pricing rule query

* Remove python 3.6 version from travis.yml

* Fix improper query issue

* Fix incorrect query

* Fix a query

- This fix need to be changed when we will  start supporting postgres
since date_format is not supported by postgres

* Get price list map as dict

* Convert price_list_currency_map to dict
"
fd345f8e9066e4158e54b8e1796192cc6ce10fcc,frappe/erpnext,"Hub (#10934)

* [WIP]Hub

* [listing] Show items, users and item_groups

* Show filters

* [start] cart, api for rfq and opp

* rfq working

* [wip] keys

* wip quotes

* [hub] register/unregister

* [hub] rename password to access_token, remove passed company field

* [hub] publishing cases, api call wrapper

* [hub] add and remove fields working

* [hub] fix flags, update on client save working

* [hub] new hub page, client item CUD at hub working

* listing, standard rate, local site hack

* item listing, item page, search, back to home

* [hub] implement hub company

* [hub] company filter

* [hub] basic rfq-ing, item page cleanup

* categories wip

* [hub] use get_doc_before_save()

* [hub] send opportunity message to hub, api to make locally

* [hub] enqueueing in hub api request wrapper

* cleanup

* [hub] refactor shopping cart's product.py to reuse

* sync dynamic item fields daily

* Scheduler heartbeat check

* [wip] hub categories

* [hub] wip enqueued callbacks

* [hub] outgoing messages, fixing callback loop

* [hub] bug: callback save after primary save

* [hub] pricing, stock, currency

* [hub] replace send_hub_request with make_and_enqueue

* add hub.less, refactor code

* Remove template html files, add styling for hub item cards

* fix paging

* add breadcrumb

* Add sidebar

* [hub] add company page, change country

* [hub] order_by filters

* [hub] make hub category a tree

* [hub] enqueue batched item enqueueing

* [hub] requested products page

* [minor]

* update hub url

* [fix] url

* [fix] more reform

* fix recursion

* [hub] data migration plans as jsons

* Hub register, create data connector, sync with run

* [add] user registration by session user

* Removed hub_message

* Remove sync code from hub_settings

* Remove hub methods from item.py

* Update Hub Sync plan

* Hub unregister

* Update Hub connector on reregister

* Dont delete Hub Connector on unregister

* Enable hub on success response

* Add new hub whitelisted methods

* [hub] list working

* Hub register from hub page

* [hub] Add hub logo in desk icon, link to page

* [hub] hide page head on empty state

* [hub] make rfq

* [hub] push opportunity doc, poll for opportunity docs

* add fields to item mapping

* update hub mappings

* Make RFQ

* [hub] item, home routing

* Make rfq and send opportunity refactor

* [hub][fix] remote lead data

* images passed as base64

* set default company on register

* Revert ""images passed as base64""

This reverts commit 0b033a5fb7072b2d39a1b87a47dc41e7af707bb4.

* Add sync to hub page

* Prompt for publish items to hub

* add post process to hub document to lead

* Rename Hub document to Hub message, create opportunity in post process
"
cdc895734f250cdeb4695ca86f1cb57c72d817eb,frappe/erpnext,"Merge pull request #6819 from rohitwaghchaure/hotfix_issues

cleanup and fixes"
bf495c9a6d6ec643d787b9d09b94a9a05dbe1e4f,frappe/erpnext,"GL Control rewrite and many other cleanup using inheritence
"
8281b36a2620f11c01f761a91685110dbbea0285,frappe/erpnext,"Merge pull request #7380 from KanchanChauhan/emailid-to-emailaddress

Email ID renamed to Email Address"
982ad35fd23413ed8507bcad9ca4d529076b56db,frappe/erpnext,"[cleanup] Removed Warehouse Type
"
26c9b94cc6af7aced485321a6d778605215a78a1,frappe/erpnext,"[ Improv ] Loyalty Program more fixes and test case (#14888)

* remove console statements

* set account & cost center for redemption

* add test case for single/multi tier & is_return scenario

* reset tier when changing loyalty program

* make loyalty fields non copy type

* fix test case - delete si after every test to avoid interference
"
e94d18b4cd83250780fdd2e2156d55b19bc1da09,frappe/erpnext,"Rename Time Sheet doctype
"
5a834209d081765f2cb3dd1441fb9aa0ee411a1a,frappe/erpnext,"Cleanup of PO schedule date pull requests
"
b0408d1ffb637eccc23a017ba6680ec428b24926,ioam/holoviews,"Merge pull request #12 from philippjfr/viewtree

Refactoring Dimensioned objects for uniform API"
9fd1eb51b3a51a189d86342d5b2f49c5383a311a,ioam/holoviews,"Removed unnecessary references to matplotlib in docstrings
"
621c3cd8abf227963f1b59589f22533d552f838a,ioam/holoviews,"Improved bokeh json patch computation

Improved code that tidies up bokeh json patches to update plots.
Should result in an overall reduction of 30-50% in the json size
"
5686696726b9a9e03192f0e3b50ed07dfd840e74,ioam/holoviews,"Datetime improvements (#2267)

"
c56024cd1046ef97d35cdaef1d10864894de9058,ioam/holoviews,"Renamed view subpackage to element
"
7af9fd58d0abaef93d121d65f6f59dd56abd994e,kadena-io/pact,"Clean up `toQ` view pattern.
"
c022f54d9893a0390c9db184fd773f51f4b65762,kadena-io/pact,"Introduce TagId separate from UniqueId
"
0ca3649d1e667a91c1283576ac2a255f10c1ad91,kaltura/kmc-ng,"feat: add tool to extract dependency licenses
"
08ac37243eeac5801b81be73059199015a4697fd,keybase/client,"make desktop threads load faster with inline video (#13331)

* fix loading problems

* all are playable

* indicator
"
2240f34183d992732e4fd31464001551660c7b10,keybase/client,"move the ephemeral notify routine out of storage CORE-8188 (#12534)

* wip

* wip

* run EphemeralPurge from convsource
"
84f860a89167030b4c2552a07ad1d8294e6f0cda,keybase/client,"cleanup
"
331f0831a72b44b359fcdf6b02c5cf1116d40777,keybase/client,"Merge pull request #6939 from keybase/miles/puk-rename

Move from SharedDHKey to PerUserKey"
8031b2c6c7361427dce0c7a7c48090019478ec89,keybase/client,"Desktop 1774 part 1 (#4199)

* Update autogenerated files

* Fix type errors

* Use type instead of tag

* Better checks on module.hot

* Desktop 1774 redux defs (#4273)

* Add type defs

* Fix flow errors from adding typed connector

* Attribution

* Make loggerMiddleware type any

* Update vendor stuff
"
ae3a26edcafc6d88516f8d3bca9925e981a68daa,keybase/client,"mount_test: check that TLF renaming works

Issue: KBFS-861
"
16d1b309ec9cbeb00f2157fd326d28e42a3b4c8a,keybase/client,"thread through context to IDTable#Identify, PVL and proof checkers (#5228)

* thread through context to IDTable#Identify, PVL and proof checkers

- found some stragglers that were using the old global G

* clean up cloning mess, a bit

* spread context to other files
"
ecbb44690dbb870c76f2b7ba5f5dba9ad7605928,keybase/client,"Use DummyStellarLoader instead of nil check (#13644)

"
e66653ab8d475cefbdcc62e7a9c97f9db867d55c,keybase/client,"Cleanup test target.
"
166e2c80a846041821cf4c6e66a3433573e85129,keybase/client,"get chat encryption and decryption to work via FTL (#13569)

* get chat encryption and decryption to work via FTL

* fix seqtype checking to work without seqtypes in links

* plumb through updates to latest seqno

- also keep going if we fail FTL on an ""ftl outdated error"" as per @mlsteele

* do not go to server if no keys needed

* wips

* add a CLI tester for testing caching

* comments and clarify

* better debug

* more test coverage; key case was broken

* fix broken tests

* fix some fix

* fix a bug that came up on the live app

* more test coverage

* cleanup

* fix another bug that i found when playing with real data

* one way to fix the subteam rename problem

* small cleanups

* generic feature flagging system

- server can reply to an API call with a FEATURE_FLAG status code, in which case the client is locked out from that feature
- client can cache this reply to not spam the feature attempt
- client should obviously have a fallback in mind

* better code org

* fix feature flag bugs

* fix lint error

* use pessimistic feature flag systme

* allow mobile v desktop

* timing info on load and audit

* fix a bug found after app wakes up from sleep

* further cleanups

* run team auditor on slow team loads (#13661)

* run team auditor on slow team loads

- the team auditor more or less drops into place, but the one tricky aspect here is that we need to plumb through the ""merkle head seqno"", which is the last known merkle seqno when the team head was fabricated.
- we don't want to blow away loader caches, so if it's not there in the state, we backfill it, and check server replies against the previously verified chain link ID for seqno=1
- on a fresh load, we just load it from disk
- test that makes sure the back-fill of merkle head works

* install auditor

* do not run auditor on canned sigchains in test

* comment from review
"
d6611974bd3908ad88837b5295da1e9dc239a89c,keybase/client,"support video attachments better CORE-7902 (#13067)

* wip

* wip

* kind of works!

* works

* fix play button

* wip

* compiles on both

* wip

* wip

* wip

* save

* fix

* dummy

* fix

* maybe I could just use cpp

* miss

* generate blank preview for platforms not implemented for yet

* better stash

* debug

* comments

* use KBFS mimetypes map as backup

* lower

* fix

* filepath

* remove some cruft

* film strip

* duration

* fix from refactor

* update story

* feedback
"
6faa85879c8f832a1dea271ad875ef0c29b73cb6,keybase/client,"Rename xlogin to login
"
3fa31c9b0ba87106cc7400574e1c1686110747ea,keybase/client,"OSX install/update related changes. Fixing pod and framework issues.

Calling into go for status and install for those services.
Build script include staging.
Move old dependency (KBAppKit -> Tikppa, Appkit backwards).
Move KBKit to it's own podspec (Fix xcode framework issues and make stuff in
there usable to Electron app if needed). Will still be useful for extensions.
Pod fixes.
"
ebb4477040ff39cd53eb45d0ff84ba6fd309a3af,keybase/client,"dirty_file: separate states for block copy and block state

Suggested by @jzila.

Issue: #24
"
fc54e182a682dce0a3fa10d219ba0f7565e82e98,keybase/client,"change clipboard paste attachment send to use a temp file managed by service CORE-8306 (#14258)

* works

* move to platform

* write file in go

* feedback

* fix
"
a72f4384ac8d08bffdace9cb9d8bd6ecfa755a0a,keybase/client,"Refactor stellar chat integration for send payments (#13587)

* Add UIPaymentInfo to UIMessageValid protocol

* More plumbing

* Loader

* Working on test

* Test passes, need to fill in uiInfo

* Step 1 move transformPaymentSummary

* Refactor complete

* Change so that payment delta can be calculated

* Cleanup

* Make DefaultPaymentLoader instance

* Check the fields in the notification

* Rename pair -> chatMsg

* Check recipient notification

* Make after rebase

* Put PaymentLoader interface back on globals.Context

* Add done status to loader
"
1ee942c146e821288426f9144b5504e507a35210,keybase/client,"fetch limited set of missing messages on a body cache miss CORE-3936 (#7052)

* wip

* working

* testing

* merge

* cleanup

* if the oldest message from a fetch is a hole, consider it a cache miss

* logging
"
d6ebce5bacd5b58182507bd276cc6cfb1f353fc9,keybase/client,"Revendor keybase/client after externals refactor

- change libkb -> externals for NormalizeSocialAssertion and friends
"
a22f4198b5ea090e9038980c1c0f081432a0c310,keybase/client,"[KBFS-906] Add new CodecEqual and CodecUpdate functions

Use them instead of various DeepCopy / DeepEqual
functions.

Refuse to serialize a nil TlfID.

Use 'omitemptycheckstruct' to make WriterMetadataExtra
not a pointer, and avoid some subtle nil-checking
code.

This closes #889.
"
3a4e334e48fec3888d67ce5ab5c55071ad87e5ee,keybase/client,"improve logging around clearing data from body storage (#11465)

* improve logging around clearing data from body storage

* fix tests
"
8b743e0e042ad48a524a1d0339ab6ece42f9db36,keybase/client,"Only the status command displays public keys, so remove
that from the User record and separate into a new method.
Also simplifying the loadUser method.
"
0b62ac6ce9833930416f9d39a774dd5944388d82,keybase/client,"only run crypt keys if we have a conv for user changed handler CORE-4439 (#5486)

* wip

* fix

* debug

* rework how background identify is handled

* wip

* dlkfdkjfdkfjdkfjdk
"
a02453552d167e9e966f8b5adb6f4a552399c4cb,keybase/client,"New New Conversation in Chat (#13486)

* Boilerplate

* WIP: Add some helpers, create the team box + go button

* Fix HMR in Storybook

* WIP

* MVP of search screen

* WIP

* WIP

* Fix flow errors

* Fix the stories

* Update snapshots

* WIP

* WIP

* WIP

* First ""usable"" version on the new conversation builder.

Lots of things are not implemented, for starters:
* Search counts on other services.
* Search in other services (besides keybase)
* Optimizations of any kind
  * (Serious render thrashing when using the arrow keys)
* Pending states
* No search results state
* A mobile version
* Tooltips (they are there, but have z-index issues)
* ... A bunch of other little things

What is Implemented
* Ground work to iterate on
* Store, actions, container
* Search on keybase
* Building up a team
* Special keys: up,down, enter, backspace
* Creating the conversation.

Caveats aside, if you want to use it, add this feature flag:
`newTeamBuildingForChat=1`

* Fix tests

* Add memoize-one

* WIP

* Set selected index

* WIP

* WIP

* Remove the *Prop version

* Remove curlies from string literals

* Update lock file

* Name component

* If is keybase user, set id to be keybase username (on other service search)

* Fix merge err

* Update stories

* Mock timestamp for stories

* Update story snapshots

* Use plainInput

* Add service result count search with saga workers

* Move things around

* Clear text when removing with the enter key

* Update tests

* Nits

* Update snapshots
"
0499f6d1f07616a0c8d8eb54d24b556bbb8df5a9,keybase/client,"block_retrieval_queue: Factor out cache handling from the prefetcher back to the block retrieval queue.
"
33e8abd8588ae9aab901a37255d721bff9e9c4a7,keybase/client,"WIP refactoring tabs
"
cf7b75d06cd6bf50431ea6d28c3624b8b4983a3d,keybase/client,Fix build script. Add test CLI and test cleanup.
97edbb0686b889b5425e14eeda68c7102e45ce98,keybase/client,"Refactored engine object

rebase

remove engine/index.js.flow file. flow broken

fix flow

RN can't do assign on actual class objects w/ proto chains

output waiting state in log

spacing

manage mutating onConnectHandlers while connecting

add dangling flag for immortal sessions. add _startmethod to help debug sessions. add incomingcallhandler for unhandled rpcs that should be in the session

you shouldn't destructure objects!

plumb through cancel

remove call map middleware. fix actionbarReady

cleanup flow generation

dont export rpcs that are ui incoming ones

removing non-ui calls from the incomingcallmap type

removing engine error stuff. moved enums over to flow-types

fixing rebase

fixing rebase

remove old comment

rebasing master

rebasing
"
e00eeea5dc83aab4b1b37bf8e3697ee8aab0a480,keybase/client,"Normalize typing for floating things (#13815)

* function isn't nullable and use ElementRef for refs everywhere

* use React.Component for stronger typing and move some refs out of state
"
21e016a7e17860036fd6d189e6e0f950172f083f,keybase/client,"Separate out []PublicKey from User.
"
fccdc414d50815083bdef975cdeefeb9080e6aab,keybase/client,"Update `green` and remove `green2`. (#14084)

* Update green and remove green2.

* Update icons.

* Add follower images.

* Optimize images.
"
91a9a04f2c991f1252cfb493de384fe898b4c53f,keybase/client,"Move RootMetadataSigned to kbfsmd (#1282)

Make libkbfs.RootMetadataSigned wrap kbfsmd.RootMetadataSigned.

Also remove merkle types unused by the client. This code will be moved
to the server.

Make DecodeRootMetadata{,Signed} use a helper function with common
code."
3323e88d02839c0fb134a5537cfe91a311f4168a,keybase/client,"Flow everywhere (#4465)

* utils

* add settings, store, test, tracker, chai/mocha

* add router

* reducers

* profile

* people

* no-tab

* nav

* native

* shared

* desktop , react-native

* allow flow in cli scripts

* desktop renderer

* desktop app

* desktop app

* simplify node stuff in package.json

* sort icons

* remove deprecated flow-vars plugin

* Update vendored deps

* wrong helper in audit

* Update vendored deps

* fixing new flow errors

* move vendor check up

* make flow more consistent

* make flow more consistent
"
3df8dea7dee431048f927bac7dafa5c80a97497a,keybase/client,"optimization pass for keybasefriends loading (#12545)

* optimization pass for keybasefriends loading

- we were spending a fair amount of time in DeepCopy()s of the loader state, so try to skirt it as much as possible
- attempts to get more aggressive resulted in test failures that I didn't track down
- the minimal full load kbfriends is about ~8s on my machine at this point
- if CheapCopy() is replaced with the shallowest possible, then the load takes about ~6s
- if CheapCopy() is replaced with DeepCopy(), then the load teaks about ~9.5s

* faster version

* slight refactor

* replace cheapcopy with move (crashes)

* get rid of persistent player idea

* rename

* human output

* profiling

* feedback
"
e84af6c63963a6ad11a0af99099b1b29b6faec5b,keybase/client,"Closed #147

renamed P3SKB => SKB.
"
36087e5e5755176ab79232905ff3e39887f396ff,keybase/client,"basic search with indexer (#14018)

* basic search with indexer

* cleanup
"
4c8a20f43b5caeada2edac82c2e6f3efe266fb0d,keybase/client,"cr: support setAttr(mtime) for directories

Previously, we treated all setAttr(mtime) operations as if they
happened on files, when in fact that is a valid operation for a
directory. Even though setAttrs affect directory entries, they really
apply to the target node itself (which may be moved around in another
branch).  Thus, the CR chains ""pin"" setAttr operations to the node,
and then apply them to the node's final merged parent block.

This is somewhat straightforward with files, since all file-related
operations work this way (syncOps+setAttrOps).  With directories
however, this isn't the case, since a directory may both have its
mtime set and have a new entry created within it; therefore, we must
pick and choose which operations get applied to the parent block
containing the directory's directory entry.

To make this happen, this commit does the following:

* A crChain identifies a file type by fetching the actual block, when
  it isn't possible to identify it using operations alone.

* ConflictResolver splits up the actions relating to a directory's
  mtime into a separate list, and applied them to the directory's
  parent.  If the parent didn't yet have any actions, it must be added
  to the list of unmergedPaths.

* Add a new error type for when a block can't be decoded into its
  expected type, so we can easily distinguish that and use it to help
  determine a chain's type.

* If a directory's mtime is modified in both branches, resolve the
  conflict by creating a symlink (imbued with the unmerged mtime)
  pointing to the real entry.

* In order to support reading the mtime of a symlink, change the DSL
  to not resolve the final symlink in a path for the mtime operations,
  and fix up the libkbfs engine accordingly.

Issue: KBFS-1163
"
62309bec2ab10cab24dcf2ad79fe82503fddcfbe,keybase/client,"[KBFS-1006] Untangle various test methods (#985)

In particular, replace NewFolder() et al. with
more test-specific code.

Add helper function to interpose a
daemonKBPKI so that tests can just use
ParseTlfHandle normally.

Make MDServer take BareTlfHandle.

Consistently use BareTlfHandle in server
and server-like tests.

Various tiny cleanups."
0d2c143346e21f5015f81882a427d2b87a61635d,keybase/client,"renamed protocol package keybase_1 -> keybase1
"
befba648462fc63cbc426d4f4ec4948d15ec8f93,keybase/client,"typing notification support CORE-5074 (#6956)

* protocol

* local rpcs

* hook up notification

* separate remote an local update

* rework

* testing

* despam

* fix tests
"
98327b58939a5b769fb2025743a31fcd08c7265b,keybase/client,"Seitan V2 implementation (#10333)

* Seitan V2 implementation

* Refactor for review comments

* Move generatePackedEncryptedKeyWithSecretKey to SIKeyV2 to avoid stretching the key twice

* Keep V1 integration tests

* Cleanup

* Write seitan v1 by default, remove log

* Address review comments

* Review comments

* Add signature verification fail tests

* review comments
"
bed5ef31ea68368fb47a19e760d2db9e3ad79819,keybase/client,"Manage channels! Join / leave channels! (#8206)

* WIP

* WIP

* working mobile

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* manage channels on mobile

* WIP

* WIP

* PR feedback. refactor entities to be flatter

* service rpc call changed. now has descriptions

* pr fixes
"
fd1e9586faa6ed28dfbed0e1bfecd5361931574d,keybase/client,"factor out encrypteddb
"
b968adee23128d0f09ae50840a32bd6a351a7121,keybase/client,"Use push state to store exploding modes for conversations (#11924)

* WIP set otr mode

* set modes and handle updates

* dismiss category for seconds == 0

* use const prefix

* otr -> exploding

* add logging on success & error

* clarify comment

* swap params

* Send exploding messages (#11943)

* send etime with message

* remove jsonkeys and mpackkeys

* read exploding message data

* don't pipe through for pending message

* typo

* cleanup

* take state first
"
cb3f1e68c1cdd37475c79f794b20abcb67c4344b,keybase/client,"flow 3: Flow updates to constants-dev (#3779)

* flow in actions

* cleanup flow of common-adapters
cleanup of React.Component variants in flow files

* cleanup flow of constants and dev

* fixing flow

* sort fix

* remove unused constants

* removed some unused stuff. refactor existing-device
"
ce32385e848f7f7937d5f588a87792ce1463c551,keybase/client,"Implemented PR feedback to move Social Assertions to keybase1.common

Signed-off-by: John Zila <a51dda7c7ff50b61eaea0444371f4a6a9301e501@keyba.se>
"
87562c74985a355c5a4de4cb68a3aac1fbaf0369,keybase/client,"cleanup old feature flags (avatar upload, exploding, simplemarkdown) (#15058)

* WIP

* WIP

* WIP

* WIP
"
18192fcb41cbef12dcf0daa8532d4beae1cf016b,keybase/client,"[KBFS-988] Remove TlfHandle/CanonicalTlfName caching (#946)

Instead, explicitly compute them on construction if needed.

This makes it much less annoying to get the TlfHandle/name,
since we don't have to always plumb through the objects
needed to generate them.

Get rid of TlfHandle.ToString() -- instead, use GetCanonicalName()
or GetCanonicalPath().

Split TlfHandle into BareTlfHandle and TlfHandle types;
server code only needs BareTlfHandle.

Tighten up RootMetadata verification -- in particular, disallow
empty signatures."
3a80e6fc83067b48d37c9d3319e5f96fec374f07,keybase/client,"Inbox refactor (#8599)

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* WIP

* fix mobile
"
095915ab0b98f5e971cdecaa0462d8ea19e655fa,keybase/client,"mdserver: rearrange and rename params on Put*()
"
8eb5d753cf92f169cdd27b1ed65d10654afb8a6c,leancloud/docs,"Merge branch 'refs/heads/sun' into reorganize
"
9e5ff424bc59246bc7a76633705f6693b167ae6c,marekjm/viuavm,"Rename ExternalFunction to ForeignFunction
"
4724c0c460ffdac46dbb116737fdf896c1690414,marekjm/viuavm,"Give the ""fixed*"" group of instructions a better name
"
051c4978c76499855eea922e91ddac30a0de6baa,marekjm/viuavm,"Refactoring and a few FIXMEs
"
4d772c62e12a5d1e7ce3f3d64f76c7546a73bde6,metosin/reitit,"Polish implementations
"
903bad1906540e7202343483197f45bcd3a10458,mozilla/pdf.js,"Remove `Util.appendToArray` and `Util.prependToArray`

The former may be replaced by regular JavaScript array concatenation and
the latter is unused. This avoids unnecessary function calls/imports.
"
96f6fcf8ba6ad52c399f9d95e1cca7dc5d631cd0,mozilla/pdf.js,"Convert cid to Unicode when rebuilding Type 2 CID fonts encoded with non-Identity CMap
"
dbccbaaa273cc9956882f1ae811facb3b735abb2,mozilla/pdf.js,"Make getOperatorList() calls independent and merge queues at end
"
6f65fef64b747bf3f5141bdd52b5cbf7b1b0b36c,mozilla/pdf.js,"Sharpen the patterns.

Draw the patterns with the intended resolution instead of scaling
afterwards. Scaling leads to unclear patterns.

Also:
Make TilingPattern function for paintType switch case.
Make TilingPattern function for bbox clipping.
Make TilingPattern functions for scaling code.
Increase MAX_PATTERN_SIZE to 4096.
Add Singular Value Decomposition function.
"
e2ca1d0e5e048eed10aa8fae442b995477977f8a,mozilla/pdf.js,"Merge pull request #3613 from Snuffleupagus/remove-dead-find-code

Remove old dead find related code from viewer.js"
538dda1096b36d76d75af9eb63a3675fedbe2d19,mozilla/pdf.js,"Merge pull request #9479 from Snuffleupagus/refactor-viewer-options

[api-major] Refactor viewer components initialization to reduce their dependency on the global `PDFJS` object"
0ca4ca60778059fa5c495c877f73aaf9aaca51c3,mozilla/pdf.js,"Improving invalid operations syntax recovery (#1466) (see also #589)
"
7963f2254553ae8caed488c2ae06380c7576cc6f,mozilla/pdf.js,"Merge pull request #4259 from brendandahl/built-in-cmaps-squash

Adds built in CMaps and unifies the glyph mapping."
8e060bdbca7fab0d7f65d4a247b63d24a825fd58,mozilla/pdf.js,"Use [] instead of new Array(...).
"
74b31ab18f1a368963f7337e2b7313a5f335e618,mozilla/pdf.js,"Merge pull request #8203 from Snuffleupagus/es6-modules-web

Convert the files in the `/web` folder to ES6 modules"
8a45177be08b8672ba373038d8335a33b2abcc6a,mozilla/pdf.js,Make Dict handle all the fetching of Refs.
5ecce4996b787fc891246d2b9cab5c86ba0f45ca,mozilla/pdf.js,"Split files into worker and main thread pieces.
"
0029b34d4522bd233e35fb92fdd9fe71f4f1a1c5,mozilla/pdf.js,"Refactors getRgb and makeCssRgb calls; reduces amount of created objects
"
59526a7cf1fed7f04592afe2475a8010db5e935e,mozilla/pdf.js,"Merge pull request #4189 from yurydelendik/split-pattern

Refactors shared/pattern.js into core/ and display/"
30bb5b81a027a0566aa4719a94e8258ae12ab153,oinume/lekcije,"Merge pull request #47 from oinume/feature/refactor-model

Global variables ****Service"
955a234c7bcea94e00671e4fb1b2d83733007d90,oinume/lekcije,"Refactor email sender
"
e9a59d3cf3dbbf7e1b048c3e0a7b1bc1f33dc1c3,openego/eDisGo,"Make projection variable
"
407d27585f109e3381bb49041abc49a14b7b5bfe,opnfv/functest,"Switch TestcaseBase to TestCase

It partially reverts ""Rename TestCasesBase into TestcaseBase"" [1] and
removes the useless suffix too.

[1] https://gerrit.opnfv.org/gerrit/#/c/25391/

Change-Id: Iddf2ec8d6c1dafe6e4c6713c2e69969613317471
Signed-off-by: C√©dric Ollivier <d48310251a4a484d041bc5d09a9ac4d86d20f793@orange.com>
"
5f0d2316d91b40a6cf62b15b309b0c2e2d2f582c,opnfv/functest,"Merge ""Shorter test case names are accepted for tempest blacklist file"""
c36f96b80c00a23164a194c6c74d7281c9835e12,opnfv/functest,"Removal of deprecated SNAPS-OO classes.

JIRA: SNAPS-202

Change-Id: I115b4927b287a5525f4c1b95128d91f5229c7856
Signed-off-by: spisarski <cc896baba49c9aa0ae6ef6522361a2dc54c6f08b@cablelabs.com>
"
1825aa713952288e4204ea3b38f0d3c0635a6918,opnfv/functest,"Rename a common credential file for OS and K8S

Change-Id: Ib8d24be4b29ab1de00d5dd5e3442146b2437cb94
Signed-off-by: Linda Wang <81613bebe84fa394bbc7c5cc1c21989c9bff2c52@huawei.com>
"
18ffb2a431fd82055cd5abf656f00f2c90af7146,opnfv/functest,"Merge ""Rename testcase_base to testcase"""
dc733c31177b0ffdc4c30b9c4801b765909f1c50,opnfv/functest,"Rename TestCasesBase into TestcaseBase

JIRA: FUNCTEST-628
1. rename the TestCasesBase into TestcaseBase
2. updated the module name to testcase_base.py

Change-Id: Ic6b5d8209098c136613a2419c3790668fdbd493e
Signed-off-by: helenyao <3eb787ab97713f28a85d5a5517e91512dad61756@huawei.com>
"
c94a1c01e46b21f0139a8b1419f26c8b9f867a41,opnfv/functest,"Merge ""unify functest_yaml obtain process"""
131ee94f5389378edc5cfb4231b2cbc7f871fb0f,riganti/dotvvm,"Renamed Tracing.Miniprofiler to Tracing.MiniProfiler.AspNetCore, Added owin sample
"
d78977e5f0ab9f58faa8c819446affa4e78b03bc,riganti/dotvvm,"merge master -> dotnetUnified
"
b378c9c2c622da1b6cd454da2e9ed283208c922c,riganti/dotvvm,"Merge branch 'master' into js-postback-refactoring
"
a925a9e19aad8a3c053cb3c3507b56643c4aa16f,riganti/dotvvm,"Merge master -> perf-controlLifecycle
"
b54cb88d96c35e6415558a807a8ab1f1cc362124,riganti/dotvvm,"Literal control split into Literal and HtmlLiteral
"
c59edbe75b2e45c16763bcbdff0e8ba43eef4b3f,riganti/dotvvm,"Merge master -> localizable-presenter
"
453516a6214bd8f6548db932139a8ed116eb652e,swaywm/wlroots,"Merge pull request #735 from emersion/split-render-h

render: split render.h into wlr_renderer.h and wlr_texture.h"
c01248cf17b0556145d973449d0b12cad0b96a8c,swaywm/wlroots,"Merge branch 'master' into feature/xwm-rewrite
"
0f7f6b1373438675b5f4d6a6ca0b4b88b472e322,swaywm/wlroots,"xwm: refactor xwm init
"
724e812972cdaf55b0c2e8d3ebbb31637c405f57,syuilo/Misskey,"Refactor
"
2ad63b16a92735b10131625d93879ba6ec5e71f3,texta-tk/texta,"max coocc show, fixes, cleanup
"
4e4f5dc054a8db6c7a850770eab09e671c8dc314,tutao/tutanota,"refactor MailModel part 1
"
d7899b4b2b0f40a014e6e9b5796fae0aa0ffa520,ARMmbed/mbed-os,"Removed custom targets from config system

Custom targets were the origin of a number of issues with the mbed
tools, so it was decided that they need to be removed. This PR does just
that (and moves the ""custom_targets"" part of the config system tests
into a separate, per-test ""targets.json"" file to preserve the test
functionality).
"
aa90f0df652b8686820a62767cd98345b8cbe457,ARMmbed/mbed-os,"rely solely on random vlalue to know if already calculating

simplify by setting a fake random value at the start so that first run is the same as subsequent runs
"
3a273f78f2d4a63cef2dc5176f0d781e750057f0,ARMmbed/mbed-os,"Create and enable exporter flag mbed_conf_active for exporters

The mbed_conf_active feature disables configuration macros on the
command line and replaces them with a preinclude header file
"
fe322adc9c4119cefc322f548c3a0a089594c92b,ARMmbed/mbed-os,"Make selection of c library used consistent.

* rename ""default_build"" property into ""default_lib""
* rename ""standard"" value for ""default_build"" into ""std"".
"
a566cec48876168922c33f2d87e0db199dfabe0e,CanalTP/navitia,"Jormungandr: refactoring journey auth

add a get_region in Journey

and tests added.

still lot's of work to do in authentification process and in the tests
"
899965c591da52d5a8b3cea1d3f33a0d7ff03615,CanalTP/navitia,"routing: refactor best_stoptime in next_stop_time

This refactor abstract all the next_stop_time mechanic
and allow futur optimizations as LRU for the stop time
validities
"
ba0a230874343576adb98d91211fce0dcdc8554c,CanalTP/navitia,"Merge pull request #2057 from azime/refactoring

Jormungandr: cleanup import + little places serialize refactor"
aa1c3b8b2c8e1b51c6f65e42e065691346e9b634,DGA-MI-SSI/YaCo,"all: move logger to cpp & add logs to ida console
"
e72ac11539023169eaf2878a7b25db894ed7fbe6,DeDiS/cothority,"Merge pull request #108 from DeDiS/revise_readmes

Revise READMEs"
90ff43c952c8b3c4134737ce64276a8727c851a8,DeDiS/cothority,"Trying to clean-up this branch: remove ssh-ks, remove/update obsolete tests
"
8197eebfe47737a498c526835eb9d9e4e1858c20,DeDiS/cothority,"moved to top level
"
a3c74bf3bb6cb8807d18bf020dfe63b42d635491,GetStream/Winds,"Merge pull request #426 from GetStream/cleanup/controllers

Cleanup/controllers"
f6bdcd42cf5badd9e16285d846735f5af8ac269c,GetStream/Winds,"Merge branch 'master' into feature/sentry-refactoring
"
aa7207bbfd7ca8413d3460b86b1df6ff929258e3,GetStream/Winds,"merge master into cleanup
"
40d11474554723ac7fb0fb0b410c5b3882d997f3,NCI-Agency/anet,"NCI-Agency/anet#323 Fix merge issues refactor Poam to Task
"
f79adfd113c4b51e7990727b6565b82a5fd01135,NCI-Agency/anet,"Refactor lots of report/form.ftl
"
cc9add3002fe4aa46da34144f2d7e2b9f578eecb,NCI-Agency/anet,"Merge pull request #664 from NCI-Agency/GH-645-fix

NCI-Agency/anet#641: Remove obsolete currentUser prop"
ccde233d20ca9aef57120cc0da243a620c83cb26,PayBreak/basket,"Move files
"
0e82588eed13de72fc1ef44b5291518a455e94d4,SpinVR/three.js,"ExtrudeGeometry: Refactor interface.
"
cb3f2fff7d7ff592121331f95b6d4aa8b424c945,SpinVR/three.js,"Fleshed out RollCamera: refactored code out of example, add more keyboard controls, API and made it framerate independent.
"
f2af3864cc8fcb7161ec94142ce33d36d15d4aad,SpinVR/three.js,Matrix4 public and static methods clean up.
70f29cc24031360b5b7aecafa49080c522628f81,SpinVR/three.js,"Revert conflicting cleanup.
"
e58553d1ba2b32dd13b910d8ec3e82a3c8fa82b3,SpinVR/three.js,"Renamed ParticleSystem to Points and ParticleSystemMaterial to PointsMaterial. See #4726.
"
1be8477ac40cb89da749ea94127ad9d0d36d7670,SpinVR/three.js,"Merge remote-tracking branch 'upstream/dev' into webglrendertarget-refactor

Conflicts:
	src/renderers/WebGLRenderTarget.js
"
a0cd79d6a7968d9b1567d0dd09ceea855aff6472,SpinVR/three.js,"Merge pull request #10630 from mrdoob/revert-10627-FixCircularReferences

Revert ""Fix circular references and improve closure performance"""
bfdb10a85a3082661e6321dc04312b6ab166183b,SpinVR/three.js,Updated all examples so they use the renamed geometry classes.
bcbeb2f4f66c9846207d207aae95cde3c0c8960d,SpinVR/three.js,"rename all .coord to .uv
"
c84097364b9865e5b8482a98110f725953fa1d42,SpinVR/three.js,"Moved sprite material properties from Sprite object into SpriteMaterial.

See discussion in https://github.com/alteredq/three.js/commit/73922dc797557132a36de1418c78f755185a3a53
"
05cbaf5a3324d5770b8f52c0a3fc886344d8b932,SpinVR/three.js,Replaced *Count with *Lib system.
892ce9b027e808e294c451e0952d74d5db172758,Wandalen/wFiles,"str renames
"
8542da40ba1af16bcf5810adda987198c85e8c21,Wandalen/wTools,"remove diagnosticWatchObject, rename _.filter -> _.field
"
793cf7f7cf1821fd5d473a78edab356bc7e98a85,cloudera/Impala,"Add Catalog Service and support for automatic metadata refresh

The Impala CatalogService manages the caching and dissemination of cluster-wide metadata.
The CatalogService combines the metadata from the Hive Metastore, the NameNode,
and potentially additional sources in the future. The CatalogService uses the
StateStore to broadcast metadata updates across the cluster.
The CatalogService also directly handles executing metadata updates request from
impalad servers (DDL requests). It exposes a Thrift interface to allow impalads to
directly connect execute their DDL operations.
The CatalogService has two main components - a C++ server that implements StateStore
integration, Thrift service implementiation, and exporting of the debug webpage/metrics.
The other main component is the Java Catalog that manages caching and updating of of all
the metadata. For each StateStore heartbeat, a delta of all metadata updates is broadcast
to the rest of the cluster.

Some Notes On the Changes
---
* The metadata is all sent as thrift structs. To do this all catalog objects (Tables/Views,
Databases, UDFs) have thrift struct to represent them. These are sent with each statestore
delta update.
* The existing Catalog class has been seperated into two seperate sub-classes. An
ImpladCatalog and a CatalogServiceCatalog. See the comments on those classes for more
details.

What is working:
* New CatalogService created
* Working with statestore delta updates and latest UDF changes
* DDL performed on Node 1 is now visible on all other nodes without a ""refresh"".
* Each DDL operation against the Catalog Service will return the catalog version that
  contains the change. An impalad will wait for the statestore heartbeat that contains this
  version before returning from the DDL comment.
* All table types (Hbase, Hdfs, Views) getting their metadata propagated properly
* Block location information included in CS updates and used by Impalads
* Column and table stats included in CS updates and used by Impalads
* Query tests are all passing

Still TODO:
* Directly return catalog object metadata from DDL requests
* Poll the Hive Metastore to detect new/dropped/modified tables
* Reorganize the FE code for the Catalog Service. I don't think we want everything in the
  same JAR.

Change-Id: I8c61296dac28fb98bcfdc17361f4f141d3977eda
Reviewed-on: http://gerrit.ent.cloudera.com:8080/601
Reviewed-by: Lenni Kuff <724b7df200764f5dc1b723c05ee6c6adabd11bb1@cloudera.com>
Tested-by: Lenni Kuff <724b7df200764f5dc1b723c05ee6c6adabd11bb1@cloudera.com>
"
41c1d24da9d7e5c267b04eff434932015831faa4,cloudera/Impala,"Enable lazy loading of table metadata for the CatalogService/Impalad

This change adds support for lazy loading of table metadata to the
CatalogService/Impalad. The way this works is that the CatalogService initially
sends out an update with only the databases and table names (wrapped as
IncompleteTables). When an Impalad encounters one of these tables, it will contact
the catalog service to get the metadata, possibly triggering a metadata load if the
catalog server has not yet loaded this table.

With these changes the catalog server starts up in just seconds, even for large
metastores since it only needs to call into the metastore to get the list of tables
and databases. The performance of ""invalidate metadata"" also improves for the same reason.

I also picked up the catalog cleanup patch I had to make the APIs a bit more consistent and
remove the need for using a LoadingCache for databases.

This also fixes up the FE tests to run in a more realistic fashion. The FE tests now run
against catalog object recieved from the catalog server. This actually turned up some bugs
in our previous test configuration where we were not running with the correct column stats
(we were always running with avgSerializedSize = slotSize).  This changed some plans so the
planner tests needed to be updated.

Still TODO:
This does not include the changes to perform background metadata loading. I will send
that out as a separate patch on top of this.

Change-Id: Ied16f8a7f3a3393e89d6bfea78f0ba708d0ddd0e

Saving changes

Change-Id: I48c34408826b7396004177f5fc61a9523e664acc
Reviewed-on: http://gerrit.ent.cloudera.com:8080/1328
Tested-by: jenkins
Reviewed-by: Lenni Kuff <724b7df200764f5dc1b723c05ee6c6adabd11bb1@cloudera.com>
Reviewed-on: http://gerrit.ent.cloudera.com:8080/1338
Tested-by: Lenni Kuff <724b7df200764f5dc1b723c05ee6c6adabd11bb1@cloudera.com>
"
d94013a7cf68aad6e0ef49fe8fb2d348220261c1,cloudera/Impala,"Metric changes

This patch reworks a lot of the metrics subsystem, laying much of the
groundwork for unifying runtime profiles and metrics in the future, as
well as enabling better rendering of metric data in our webpages, and
richer integration with thirdparty monitoring tools like CM.

There are lots of changes. The most significant are below.

TODO (incomplete list):

* Add descriptions for all metrics
* Settle on a standard hierarchy for process-wide metric groups
* Add path-based resolution for searching for metrics (i.e. resolve
  ""group1.group2.metric_name"")
* Add a histogram metric type

Improvements for all metrics:

** New 'description' field, which allows a human-readable description to
   be provided for each metric.
** Metrics must serialise themselves to JSON via the RapidJson
   library (all by-hand JSON serialisation has been removed).
** Metrics are contained in MetricGroups (replacing the old 'Metrics'
   class), which are hierarchically arranged to make grouping metrics
   into smaller subsystems more natural.
** Metrics are rendered via the new webserver templating engine,
   replacing the old /metrics endpoint. The old /jsonmetrics endpoint is
   retained for backwards compatibility.

Improvements for 'simple' metrics:

** SimpleMetric replaces the old PrimitiveMetric class (using much of
   the same code), and are metrics whose value does not itself have
   relevant structure (as opposed to sets, lists, etc).
** SimpleMetrics have 'kinds' (counter, gauge, property etc)
** ... and units (from TCounterType), to make pretty-printing easier.

Change-Id: Ida1d125172d8572dfe9541b4271604eff95cfea6
Reviewed-on: http://gerrit.sjc.cloudera.com:8080/5722
Tested-by: jenkins
Reviewed-by: Henry Robinson <3eca10f30041813f045165784e24b5a950a6cc7e@cloudera.com>
"
a091d9ca0680583ac3ab3d2ecf722d41aded07f4,cloudera/Impala,"IMPALA-5844: use a MemPool for expr result allocations

This is also a step towards IMPALA-2399 (remove QueryMaintenance()).

""local"" allocations containing expression results (either intermediate
or final results) have the following properties:
* They are usually small allocations
* They can be made frequently (e.g. every function call)
* They are owned and managed by the Impala runtime
* They are freed in bulk at various points in query execution.

A MemPool (i.e. bump allocator) is the right mechanism to manage
allocations with the above properties. Before this patch
FunctionContext's used a FreePool + vector of allocations to emulate the
above behaviour. This patch switches to using a MemPool to bring these
allocations in line with the rest of the codebase.

The steps required to do this conversion.
* Use a MemPool for FunctionContext local allocations.
* Identify appropriate MemPools for all of the local allocations from
  function contexts so that the memory lifetime is correct.
* Various cleanup and documentation of existing MemPools.
* Replaces calls to FreeLocalAllocations() with calls to
  MemPool::Clear()

More involved surgery was required in a few places:
* Made the Sorter own its comparator, exprs and MemPool.
* Remove FunctionContextImpl::ReallocateLocal() and just have
  StringFunctions::Replace() do the doubling itself to avoid
  the need for a special interface. Worst-case this doubles
  the memory requirements for Replace() since n / 2 + n / 4
  + n / 8 + .... bytes of memory could be wasted instead of recycled
  for an n-byte output string.
* Provide a way redirect agg fn Serialize()/Finalize() allocations
  to come directly from the output RowBatch's MemPool. This is
  also potentially applicable to other places where we currently
  copy out strings from local allocations, e.g.
  AnalyticEvalNode::AddResultTuple() and Tuple::MaterializeExprs().
* --stress_free_pool_alloc was changed to instead intercept at the
  FunctionContext layer so that it retains the old behaviour even
  though allocations do not all come from FreePools.

The ""local"" allocation concept was not exposed directly in udf.h so this
patch also renames them to better reflect that they're used for expr
results.

Testing:
* ran exhaustive and ASAN

Change-Id: I4ba5a7542ed90a49a4b5586c040b5985a7d45b61
Reviewed-on: http://gerrit.cloudera.org:8080/8025
Reviewed-by: Tim Armstrong <2f8e34250f03a653da3dc27f7ec203eafdde80fc@cloudera.com>
Tested-by: Impala Public Jenkins
"
2b865d60bf2ef0b37e92bfa00608da8f674d09d1,cloudera/Impala,"Consolidate test and cluster logs under a single directory.

All logs, test results and SQL files generated during data
loading and testing are now consolidated under a single new
directory $IMPALA_HOME/logs. The goal is to simplify archiving
in Jenkins runs and debugging.

The new structure is as follows:

$IMPALA_HOME/logs/cluster
- logs of Hadoop components and Impala

$IMPALA_HOME/logs/data_loading
- logs and SQL files produced in data loading

$IMPALA_HOME/logs/fe_tests
- logs and test output of Frontend unit tests

$IMPALA_HOME/logs/be_tests
- logs and test output of Backend unit tests

$IMPALA_HOME/logs/ee_tests
- logs and test output of end-to-end tests

$IMPALA_HOME/logs/custom_cluster_tests
- logs and test output of custom cluster tests

I tested this change with a full data load which
was successful.

Change-Id: Ief1f58f3320ec39d31b3c6bc6ef87f58ff7dfdfa
Reviewed-on: http://gerrit.cloudera.org:8080/2456
Reviewed-by: Alex Behm <fe1626037acfc2dc542d2aa723a6d14f2464a20c@cloudera.com>
Tested-by: Internal Jenkins
"
04eefaf4642c3f83a2e74e5e701b717d3ed06b45,codebar/planner,"Merge pull request #77 from despo/update-emails-and-rename-session-to-workshop

Update emails and rename session to workshop"
ff13b9b1af8257b8e7ad1ed77958a5dc10766ac9,craws/OpenAtlas,"Moved model and database connection to g object
"
cc88f5f41503eda5634bd988bdeadbaf43fd1a8a,craws/OpenAtlas,"Refactored dates using astropy lib
"
cab01514691aacfb07f1403d8a59c4ca50e03bbf,crowdAI/crowdai,"Merge pull request #144 from salathegroup/timeline_refactor

Timeline refactor"
96531d6ffe806489f1a03fd750364774e411ba2e,danmar/cppcheck,"TokenList::createAst() doesn't validate itself anymore. Remove some duplicated code and fix glitch in TestGarbage::garbageCode162
"
42588e97298e4faf074c651ef367444fab844219,danmar/cppcheck,"Fixed #4535 (Simplify checks by caching symbol database Variable pointer in Token)
"
89719b023ea5f41c0be2542355911d65c5b2d5c6,danmar/cppcheck,"unit testing: made Tokenizer functions public so they can be unit tested
"
0c475554238d16e47cee29d68e9eb6b4f3f1d994,danmar/cppcheck,"CheckNullPointer: use library instead of hard coded info
"
71c1ce71ce8a4dc3cefd86341d22203340942df2,danmar/cppcheck,"Tokenizer::simplifyKnownVariables: Simplify known variables for struct members
"
5ce5c7ab63bae0cc4bf1dc9b84748895df0053aa,danmar/cppcheck,"Preprocessor: Minor refactoring and improved testing

"
8416be4d9d420fd96bbcd52c9f6dab4a79b64dad,danmar/cppcheck,"#6345 Tokenizer::simplifyTypedef() adds redundant 'typename' to declaration
"
64b4960acc0054979472a9b8474434fe138b3c6c,danmar/cppcheck,"Tokenizer: simplify GCC '({ %var%|%num% ; })' to '%var%|%num%'.
Remove useless brace around condition in simplifyFlowControl.
"
d0e122079fb6d175a794960c240657fd80f3edcc,danmar/cppcheck,"Refactoring: Removed possibleError messages from CheckMemoryLeaks
"
a573c62cd532d3bdae381f8cf4696ec2e2eccd0a,danmar/cppcheck,"refactoring: first step - started with checkstl
"
df8a93bf976341a75496b599045f42920fbc478d,danmar/cppcheck,"Null pointers: Broke out the checking into separate file
"
17b4721bd261d2ce5de6ca221c303276b0c5fe55,danmar/cppcheck,"C++17: Support ""if constexpr"" (by simplifying it to plain if() statement)

This might lead to complaints about constant expressions as if() statement, but should fix syntax errors.
"
adf38fcfd028c7ff5e37fa26596bb0a35dc049ef,danmar/cppcheck,"Further include cleanup
"
44a629ec748c582c36d85497a862793b750640ef,danmar/cppcheck,"Fixed #1141 (Tokenizer: Wrong simplification of calculations)
"
4d80df2f4ab2af63f30483ea6f7e9c6f97a3d7e7,danmar/cppcheck,"Added pointer to Type to Token (similar to Token::Variable() and Token::function()):
- Accessible via Token::type()
- Renamed former Token::type() to Token::tokType()
- Removed SymbolDatabase::isClassOrStruct()
"
b8d39a222920c57729b3b006bd04a4e564972e65,danmar/cppcheck,"Refactorizations:
- Improve performance of simplifyTypedef by using Token::simpleMatch by ~15%
- Simplified code in simplifyTypedef
- Ran AStyle
"
ad0394939a1223e92970c1c9126bd5fda24d4a49,danmar/cppcheck,"Refactor ErrorMessage constructor to take Severity::SeverityType.

This removes lots of unneeded casting as everybody now uses the
Severity::SeverityType.
"
5d5f7085bfeaed091fa5b6ca4660935f0d733f84,danmar/cppcheck,"Updating year 2012 -> 2013 to .cpp and .h files and man page.
"
ac38c1395d0bf38c43136f03883ffe35adce3456,demisto/content,"Add CIRCL integration (#2667)

* CIRCL integration.

* Add CIRCL playbook to tests/conf.json.

* Change CIRCL default url

* CIRCL integration - added 'tests' field.

* conf.json indent fix

* Review fixes

* Fix naming conventions.

* Add logo.

* http_get function used instead of requests.get

* renamed proxy parameter.

* Added template features

* Split http functions.

* Review fixes of names

* Review - put demisto.results inside the command functions. Also 1 more Sha1->SHA fix.

* Error messages for bad input

* Fix - handle extendedKeyUsage not returned.

* get-certificate HumanReadable

* Human readable and handle list ip cert returning broken data.

* Http function used similarly to other integrations.

* Review fixes.

* CIRCL test playbook extended.
"
abcaee461157b43f059087200024eccc41598549,elabftw/elabftw,"moved the classes to app folder. inc/ will disappear.
"
8f699cf45b870eb349f21dc575a19875b6963b34,elabftw/elabftw,"better admin.php, add doc on docker update"" and use shorthand <=

instead of echo
"
2279188e354fc9e0fa0842aaa0d47b6760e1876d,elnormous/ouzel,"Move native window functionality to WindowResource subclasses
"
3964820f32e023d0acbf1f764751af15f51066b9,elnormous/ouzel,"Rename Submix to group
Restore audio code in samples
"
f3e7accd6de1fd9bdd3e09fa0c6827157e20f1af,elnormous/ouzel,"Move STB image loader to a separate class
"
663f9b47cba3bba2f7b5c63bdbcbc2a2ef262582,elnormous/ouzel,"More code cleanup
Rename FTFont to TTFont
"
fc533b853155f664a6a094d7a9b12a7c5cd3ad23,elnormous/ouzel,"Move KeyboardKey enum to Keyboard class, MouseButton enum to Mouse class and GamepadButton to Gamepad class
"
893b58e810f3b55921fdf1408455c484878ddd05,elnormous/ouzel,"Fix the build
Add FTFont
Clean up the code
"
30cbb4965a21214f4e41e2e262cba37c91719559,elnormous/ouzel,"Refactor macOS OpenGL renderer
"
f3a5c405702a7fcafe90a02a77790ced6f4b2ec9,elnormous/ouzel,"Rename Raspberry Pi defines to Raspbian
"
cbc263fba0a34f9ee0dbc0bd5ff4cb081af6bc78,elnormous/ouzel,"Replace audio files in Visual Studio project
"
fbe4ab575d2e033c30e4915f9e5fa2462c9c276d,elnormous/ouzel,"Fix tvOS build
Remove unneeded includes
"
55153f369ff7b01445e3fd2251a1409fa3fb03cc,elnormous/ouzel,"Code cleanup
Keep pointer to font
"
4aad67e251741fefee4d2d1b3be88949449f1a03,eranif/codelite,"Fixed: environment variables: if an environment is no longer exists, use wxUnsetEnv to remove it instead of wxSetEnv with empty value
clang: added 'SCHEMA_VERSION' table for the compilation.db file. This is needed to future upgrades

git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@5770 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
7a678617c05f110b9779122a76ed77a786c4dc23,eranif/codelite,"Code refactoring: moved the TreeCtrl + ListCtrl built-in search into the base classes clThemedTreeCtrl & clThemedTreeCtrl
"
653349e518285e0b00c0a3561fd3637e9c8f52ea,eranif/codelite,"- Tags Cache: is now disabled until all problems will be fixed
- Include crawler: code is now integrated into the parser thread, however it is commented out until the feature completness. Currently after savin a file, the parser thread invokes the crawler to extract all 'include' files from the file (and recursively) currently it uses a hard coded search paths, but this will be changed to be user configurable from within the 'Tags Settings' dialog, once the list is retrieved, it filter the 'already-parsed-and-not-modified' files from that list and then parse them for tags and store the results into the database

git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@3153 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
eb235644a597b781de3895f5d1dd2db7197c53ea,eranif/codelite,"- moved incldue finder code to differnt lexer to avoid clashing

git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@3432 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
26fbe119ddd6569ce8490cb094868b403712ef04,eranif/codelite,"- initial work on Refactoring (rename method/function)
- fixed build issue on Linux


git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@1505 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
225eef8194b59f7ce18857027975c70604c95124,eranif/codelite,"- Fixed: packaging scripts now correctly adds 4.4.1 in the windows installer output
- New: UI: the find bar (Ctrl-F) now can be placed on top of the editor or at the bottom (configurable from the settings -> global editor pereferences -> docking windows)
- Removed obsolete entries from the global editor perferences dialog
- Fixed various assertions when using debug build of codelite + wxwidgets29 (DavidGH)
- Fixed small layout problem with the Output Pane' when compiling codelite with wx29 (DavidGH)

git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@3968 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
d2ae2c373c13bcbd3eafca90a81fbff9f426c298,forkcms/forkcms,"Merge branch 'rewrite-navigation-cache-file' of git://github.com/janmoesen/forkcms into jan
"
15b2c17ad1dc429cc01f2bb0c590b08706eb2813,forkcms/forkcms,"Merge pull request #1788 from forkcms/button-icon-margin-vs-padding

Use margin instead of padding to space the icon from the text in a bu‚Ä¶"
636d4091a0c0d8fffe8a5bbe7bd91e7317fcc52f,forkcms/forkcms,"Removed obsolete code
"
845a09be71aac66bb0824a9822f7ad0ccbf32afa,forkcms/forkcms,"Bugfix: when no credentials given for mailserver the mail-function was used instead of SMTP
"
3931aac42f76fc8641c93dc3dca0f6dbfe848da4,forkcms/forkcms,"Rename banner to a more generic image
"
e9f7ed63c062897616cf3463b5ca4e0cf34c7675,forkcms/forkcms,"Merge pull request #1791 from justcarakas/remove-unused-code-found-by-scrutinizer

Remove unused code found by scrutinizer"
d529e81febaae89c9b30eb2145c344b0b4dcd194,forkcms/forkcms,"Switch the core code to use booleans instead of Y and N
"
fc0415a8a9f73efa9d1322322275dd214560a4d3,forkcms/forkcms,"Merge branch 'master' of github.com:forkcms/forkcms into refactor-analytics
"
a6e239b2e0816c17acb03d7c3a00db691742dcfa,forkcms/forkcms,"Frontend: refactor 'template' to DI container.
"
ca3ca513fa1fad4b9f5c687996416e01b9802e33,forkcms/forkcms,"Clean up the frontend of the mailmotor module
"
ecdfabeb67249ae8f79e79804013714ddc3b401d,freeciv/freeciv,"Move the rule that an actor must have the Diplomat flag to the ruleset

The Diplomat unit type flag should now only be about the ability to defend
against spy actions.

See patch #5131

[[originally from svn r26132]]
"
d3a7ddd8c9551dbca61a5024e7418983442b25e6,freeciv/freeciv,"Separated musicset from soundset.

See patch #4559

[[originally from svn r24622]]
"
a853d9e7c1345bf724d8dfd012318e8198b5cb35,freeciv/freeciv,"The rule that a spy unit must have moves left to act now lives in the ruleset

If the requirement is removed from the spy action's action enabler the player
can do the action even if the actor (spy) is out of moves. Without moves the
actor will be limited to act against his own tile. It therefore has to be on or
be transported to the target tile.

A spy unit using its final move will lose its focus. If the player had wanted it
to act against the tile the unit ended up on he would have selected the action
in stead of ""Keep moving"" choosing how to spend the last move fragment.

See patch #5048

[[originally from svn r25941]]
"
49e390d89b5e33549b8d0fb776ea0c034cc3b886,freeciv/freeciv,"Split ""Investigate City"".

Stop relying on the Spy unit type flag to decide if ""Investigate City""
consumes the actor unit. Split ""Investigate City"" in an actor unit consuming
and in a non actor unit consuming version.

Requested by David Fernandez

See hrm Feature #655676

[[originally from svn r35349]]
"
6ee86be2efc900373cb8210153a9efc0fe5f6931,freeciv/freeciv,"Remove unnecessary TECH_GAIN packet.

See gna patch #5115

[[originally from svn r26125]]
"
e207f7714089d9de4d6d0db8ab0d41ec0e0d6b1b,freeciv/freeciv,"Added effect multipliers support to rulesets and gtk-clients.

Original patch by S≈Çawomir Lach <lachu>, reworked by me

See patch #4830

[[originally from svn r25801]]
"
1cd679bba0e9c133e66e5e36706b917ad44a2c2d,freeciv/freeciv,"Split international traderoute types to different types depending on
diplomatic relations between the nations.

See patch #4499

[[originally from svn r24649]]
"
eea37d6cb5d3a78464d4720b354b7215b765b18b,freeciv/freeciv,"Renamed translation domain 'freeciv' as 'freeciv-core'

See patch #7021

[[originally from svn r32151]]
"
57586c29cf3073a67717da424b93b3abdac69a22,freeciv/freeciv,"Made it possible to unload from or load to unreachable units only if they are
in a city or native base. Similar to targeting attacks against unreachable
units, some cargo units may be marked to ignore these restrictions.

Patch by Emmet Hikory <persia>

See patch #3804

[[originally from svn r22770]]
"
6dd2245cf1564c5fd8641af33e83a760b5919a80,freeciv/freeciv,"orders system: replace ORDER_BUILD_WONDER with ORDER_PERFORM_ACTION

See patch #6202

[[originally from svn r29424]]
"
846b47abd4a52f93cf5153300d4d29bcf1ab348c,freeciv/freeciv,"Renamed unit_type() as unit_type_get()

See patch #6404

[[originally from svn r30060]]
"
0a02a59b56dd7a86b3d544dbeb4891210e48c4ae,freeciv/freeciv,"Add action enablers for ""Establish Trade Route"" and ""Enter Marketplace"".

Start making the caravan actions ""Establish Trade Route"" and ""Enter Marketplace""
action enabler controlled. The initial patch has to be this huge to avoid
regressions.

See patch #5464

[[originally from svn r27138]]
"
86eeb6e2734cf4bf0cc856def3dc2c06cf6ee7c1,freeciv/freeciv,"Message window cleanup.

See gna bug #16702.

[[originally from svn r18082]]
"
e615845153b26c6f27eeb0dba614fa7701a24996,freeciv/freeciv,"Moved tech_want data from advisors to default AI

See patch #4857

[[originally from svn r25366]]
"
d09bf2353426f6a8b8c4281e03671d6a0d7e9c01,freeciv/freeciv,"Action actor/target kind functions: id to action.

The functions action_id_get_actor_kind() and action_get_target_kind() have
taken an action id rather than an action as parameter. Split them in an
action structure variant and an action id variant.

See patch #7695

[[originally from svn r33828]]
"
2fb22516ca822b9f59ffc78131f32763d7947d0c,freeciv/freeciv,"Implement server settings of type bitwise. Lot of related cleanup, notably for
enumerator and boolean settings.

Update capability string as a new packet type has been defined.

See gna patch #1955.

[[originally from svn r18214]]
"
afa16c110b9bc1b736636728e80cadc49712cc38,freeciv/freeciv,"Make names of action rule name getters similar.

Rename action_get_rule_name() to action_id_rule_name(). Move the header
declaration of action_rule_name() next to it.

See patch #7788

[[originally from svn r34059]]
"
155b3579d7e37e4f765b118dda7e4a4f11c09ba6,freeciv/freeciv,"Separated MAX_LEN_CITYNAME from MAX_LEN_NAME, increased its value to 80.

See patch #7305

[[originally from svn r33048]]
"
71c4c61f0d9c3cdc34f7387716aa507945d877ab,freeciv/freeciv,"Mark actions with rare act sel dlg pop ups

A unit's ability to perform an action can cause the action selection dialog
to pop up before the player asks for it. It can happen when a unit is
transported into a city it is capable of performing an action to. It can
happen when a unit tries to move to a tile that has a target it may act
against.

This behavior isn't desirable for all actions. An action that can be
performed against almost every tile will annoy the user with a pop up each
time it moves. Being offered to do something dangerous is a situation where
it would be destructive can lead to the player's reflexes to accidentally
perform it.

Introduce the new action property rare_pop_up. A unit's ability to perform
an action where it is true will only pop up the action selection dialog
before the player asks for it in exceptional cases. At the moment that is
limited to the case when the player tries to move a unit to a tile it can't
move to but can perform the action to.

Have the rare_pop_up action property replace the special rules for when a
(potentially) legal action with a tile target can pop up the action
selection dialog.

Give the rare_pop_up action property to the actions ""Explode Nuclear"",
""Found City"", ""Join City"" and ""Recycle Unit"".

Inspired by Marko Lindqvist <cazfi>'s ""user_initiated"" action property idea
in patch #6168.

See patch #6413

[[originally from svn r30092]]
"
54f395a011e89b70c23bb7af737dfb2dfdb15b2e,fthomas/refined,"Merge pull request #483 from fthomas/topic/AsValueOf

Unify numeric type class instances"
696bf135e7fc79f58f0e80cc846cb96daeda22b1,gatling/gatling,"Move gatling-sbt's test framework into Core, close #2426
"
6a1d0fcb61db834800e860f42db6587f905dbee8,gatling/gatling,"Move ZincCompiler to a separate module and run it independently, close #2289, close #2290
"
acbc22e8c5a47bc759559c981aaa30780fbcbd8a,gatsbyjs/gatsby,"[1.0] optimizations around prefetching page resources (#1133)

* Copy cache-dir files into site's .cache

* Got new loader/componentrenderer working in development

* Use ComponentRenderer for rendering

* On demand loading of async page resources working for prod builds

* Use script loader so loading scripts don't block rendering

* Add gatsby-module-loader to replace bundle-loader to add ability to delay executing scripts after loading

* Split out loading/executing resources into functions

* Add prefetcher

* changing order to see if it fixes not removing event handler

* Just don't have a loader for now

* Updates to service worker plugin

* Add tests for find-page + make it work with prefixed links

* Proritize links that mount first i.e. are higher on the page

* Wait for all links to mount before fetching so resource count is correct

* Add plop template for adding new example sites

* Add plugin for nprogress to auto show when page loading is delayed

* Don't break layout if there's no content

* Log at end of build how long build took

* Not using this package

* Remove logging + run format

* Add the nprogress plugin

* Fix some emitter code

* Make it easy to override the default color of the nprogress bar

* Fix check on variable

* Fix prefetching

* Fix test

* Add nprogress plugin to list
"
ef121744e3a3bd123a8aabcadf825a7d089ef1b9,gatsbyjs/gatsby,"Do not overwrite global options in image optimization (#2040)

responsiveSizes overwrites the global gatsby-remark-images plugin
options. This is especially problematic as options.sizes depends on the
image which is currently being optimized.

This is a bug right now which results in all images to be sized
according to the first image passed to responsiveSizes. This is not
desired, produces the wrong result and is not determistic."
094931a981757a244cd279e263734c6826c925a8,gatsbyjs/gatsby,"Split part 4 into three parts (#4393)

* Split part 4 into three parts

Also considering 3 new related PR's:
1. using GraphiQL iframes instead of screenshots
2. Using just one starter for the whole set of tutorials
3. Once no. 2 is finished, renaming the tutorials in more human terms, like ""Starting your Gatsby blog"", etc.

Co-Authored-By: Amberley <cab4981370360f8c5b02576e78e7c42509d878f7@users.noreply.github.com>

* Updating sidebar and tutorial hompage
"
17d8ce46210f2b44b815504a49add91e83f02fb2,gatsbyjs/gatsby,"Publish

 - babel-plugin-remove-graphql-queries@2.0.1-9
 - gatsby-1-config-css-modules@1.0.10-11
 - gatsby-1-config-extract-plugin@1.0.4-6
 - gatsby-cli@1.1.41-11
 - gatsby-dev-cli@1.2.12-8
 - gatsby-image@2.0.0-alpha.3
 - gatsby-link@1.6.38-12
 - gatsby-plugin-canonical-urls@1.0.14-10
 - gatsby-plugin-catch-links@2.0.1-11
 - gatsby-plugin-coffeescript@2.0.0-alpha.13
 - gatsby-plugin-create-client-paths@1.0.6-9
 - gatsby-plugin-emotion@2.0.0-alpha.10
 - gatsby-plugin-facebook-analytics@1.0.4-7
 - gatsby-plugin-feed@1.3.19-11
 - gatsby-plugin-fullstory@1.0.4-7
 - gatsby-plugin-glamor@2.0.0-alpha.13
 - gatsby-plugin-google-analytics@1.0.20-10
 - gatsby-plugin-google-tagmanager@1.0.15-11
 - gatsby-plugin-guess-js@1.0.0-alpha.8
 - gatsby-plugin-jss@2.0.1-10
 - gatsby-plugin-less@2.0.0-alpha.15
 - gatsby-plugin-lodash@3.0.0-alpha.12
 - gatsby-plugin-manifest@2.0.1-17
 - gatsby-plugin-netlify-cms@1.0.8-11
 - gatsby-plugin-netlify@1.0.19-11
 - gatsby-plugin-nprogress@2.0.0-alpha.12
 - gatsby-plugin-offline@2.0.0-alpha.15
 - gatsby-plugin-preact@2.0.1-11
 - gatsby-plugin-react-css-modules@2.0.0-alpha.12
 - gatsby-plugin-react-helmet@2.0.12-7
 - gatsby-plugin-react-next@2.0.1-11
 - gatsby-plugin-remove-trailing-slashes@1.0.6-9
 - gatsby-plugin-sass@2.0.0-alpha.15
 - gatsby-plugin-sharp@2.0.0-alpha.19
 - gatsby-plugin-sitemap@1.2.14-10
 - gatsby-plugin-styled-components@3.0.0-alpha.7
 - gatsby-plugin-styled-jsx@3.0.0-alpha.10
 - gatsby-plugin-styletron@1.0.13-11
 - gatsby-plugin-stylus@1.1.16-12
 - gatsby-plugin-twitter@1.0.18-11
 - gatsby-plugin-typescript@1.4.17-11
 - gatsby-plugin-typography@2.0.1-11
 - gatsby-react-router-scroll@1.0.12-10
 - gatsby-remark-autolink-headers@1.4.13-11
 - gatsby-remark-code-repls@1.0.18-10
 - gatsby-remark-copy-linked-files@1.5.28-10
 - gatsby-remark-custom-blocks@1.0.4-11
 - gatsby-remark-embed-snippet@1.0.10-12
 - gatsby-remark-images@2.0.0-alpha.21
 - gatsby-remark-katex@1.0.13-10
 - gatsby-remark-prismjs@1.2.16-11
 - gatsby-remark-responsive-iframe@1.4.18-10
 - gatsby-remark-smartypants@1.4.12-11
 - gatsby-source-contentful@2.0.0-alpha.18
 - gatsby-source-drupal@2.1.0-alpha.15
 - gatsby-source-faker@1.0.3-10
 - gatsby-source-filesystem@2.0.0-alpha.15
 - gatsby-source-hacker-news@1.0.11-10
 - gatsby-source-lever@1.0.9-11
 - gatsby-source-medium@1.0.13-10
 - gatsby-source-mongodb@1.5.16-10
 - gatsby-source-npm-package-search@1.0.9-6
 - gatsby-source-wikipedia@1.0.0-alpha.7
 - gatsby-source-wordpress@2.0.57-15
 - gatsby-transformer-csv@1.3.9-10
 - gatsby-transformer-documentationjs@1.4.10-10
 - gatsby-transformer-excel@2.0.1-10
 - gatsby-transformer-hjson@2.0.1-10
 - gatsby-transformer-javascript-frontmatter@1.0.6-9
 - gatsby-transformer-javascript-static-exports@2.0.1-10
 - gatsby-transformer-json@2.0.1-11
 - gatsby-transformer-pdfimages@1.0.6-8
 - gatsby-transformer-react-docgen@2.0.1-11
 - gatsby-transformer-remark@2.0.1-13
 - gatsby-transformer-screenshot@1.0.3-11
 - gatsby-transformer-sharp@2.0.1-12
 - gatsby-transformer-sqip@0.0.4-2
 - gatsby-transformer-toml@2.0.1-10
 - gatsby-transformer-xml@1.0.16-7
 - gatsby-transformer-yaml@2.0.1-11
 - gatsby@2.0.0-alpha.46
 - graphql-skip-limit@2.0.0-alpha.7
"
7f035a489bfe86b2623b8c62cdbc24bc32584c91,gatsbyjs/gatsby,"[v2][www] Fix missing search sidebar for plugins/packages pages (#5550)

* Add react-instantsearch package required by plugins searchbar

* Add package searchbar to pages that require them

* Rename searchbar to plugin-searchbar
"
27c644bbd0f1dab50afac647e55ecdd0d8407a36,gatsbyjs/gatsby,"[v2] Hulksmash build slowdowns on larger sites (#6226)

* Hulksmash slowdowns on larger sites

* Switch more existsSync to use caching version

* Convert node reducer to use Map

* Fix most lint errors

* Split writing page data json files into 999 folders to speed writes

* Use forEach instead of reduce when prepping page data

For building a 25k page site, it reduced the time spent writing out page
data from 32 seconds to 0.32 seconds üò±

* Profiled code and fixed hot functions

* WIP commit to dramatically speed up graphql queries

Not really loving all the nested caching I'm adding... but it's
necessary. Will revisit this Monday to see if there's a cleaner way
to cache things.

* Handle picking directory to write StaticQuery results

* Speed up resolving queries when the query is querying a node by id

* Show pages rendered / second while building HTML

* Add sites for benchmarking

* Persist activity status at end and show queries/second for graphql

* Restore creating SitePage nodes as no longer slow

* Correct storing/using/deleting nodes

* Disable profiling

* Remove extra dependencies

* Format + fix linting

* remove console.log and unused profile

* Remove another profile

* Fix tests (hopefully)

* Check if nodes exists, sometimes a test fails otherwise

* debugging...

* Work around...

* Don't need to run bootstrap on tests as jest compiles code

* Lodash uses Object.entries which fails on node 6... :-""

* Ok, do need bootstrap to link packages

* Try try again

* Ugh, problem was Object.entries isn't in Node 6
"
ce31b9df2dab5adf57a3a8950c35ee3308d1ffbf,gatsbyjs/gatsby,"Merge pull request #1944 from gatsbyjs/tweaks

Clean up some broken stuff"
7014bc529dc3b0fd097c85d85033bc6a6222f75a,gatsbyjs/gatsby,"Improve SSR errors (#1967)

:+1:"
e1c4337076295fe51d9def3ccc167c901c058d91,graknlabs/grakn,"Add `grakn-grpc` module (#2609)

* Add `grakn-grpc` module

* Create `GrpcUtil` class

* Better encapsulate grpc classes

* Move `SynchronousObserver` into `grakn-grpc`

* Move `GrpcTestUtil` into same package as `GrpcUtil`

* Specialise `SynchronousObserver`

* Change `SynchronousObserver#create`

* Handle interrupts properly

* Specialise `Throwable` to `StatusRuntimeException`

* Rename a bunch of stuff

* Fix name

* Use new proto file def

* Better hide grpc TxType

* Add an assertion

* Remove a static import

* Fix dependency issue

* Really fix dependency issue
"
2e3af4fe58e38014da2bce5aca1702ad86da5031,graknlabs/grakn,"Test refactor - Move Graql Tests back into graql module (#1777)

* GraphLoader Can now load graphs via graql files

* Move GraphLoader test into graql. I think it should be in the lowest possible dependency

* Build system keyspace without using graql yay . . . and a bunch of other REALLY HORRIBLE CHANGES

* Get rid of stuff from the system keyspace which is no longer needed

* Refactor and deprecate GraphContext to GraphContextOld

* Pickup rogue dependency

* Crearte new graph context which wraps GraphLoader and start a cass instance if needed

* Move test graph and movie graph into grakn-test-tools

* Move GraknMatchers into grakn-test-tools

* VICTORYgit add -A .git add -A . MatchQueryTest is back in it's module

* Move even more graql tests

* Move all graql query tests back into graql module

* Get rid of redudent AggregateTest and MatchQueryTest

* make PMD happy

* More tests back where they belong.

* Fix PMD and checkstyle issues

* Fix more dumb errors

* Fix another dumb type

* Fix failing test

* Start removing uses of GraphContext#factory()

* How on earth did this happen

* Add another mock of factory

* Get rid of more uses of GraphContextOld

* Get rid of even more usages of GraphContextOld

* Less uses of GraphContextOld

* I dont even know anymore :(

* :(

* :( :(

* FINALLY get rid of GraphContextOld

* Deal with goat comments

* Final code cleanups
"
cd85d4dd140bbc09974cde6fff295c7902291bd8,graknlabs/grakn,"Reorganise query iterators (#1561)

* WIP

* cleanup

* fix comment

* update javadoc

* add query factory

* fix atomicity condition

* add licences

* remove import and unused private var

* remove unused imports

* remove redundant elses

* update logging and fix problem with .clear()
"
ce157ed62b82d28c065bdf5ba465ad6aa2d383a9,graknlabs/grakn,"Make reasoner functions static (#934)

* make all reasoner functions static

* cleanup
"
e5de6a5906f8fc186798c88d481511c68246fe66,graknlabs/grakn,"Major refactor of Graql (#98)

* Move static API methods into a single Graql class

* Move inner Admin classes to new package

* Separate abstract classes from several interfaces

* Move admin package out of internal
"
39905dbab6151da668d9b0928d14e02450ae7fb2,graknlabs/grakn,"Introduce more `TestRule` classes (#2337)

* Remove some unused KBs

* Make `EmbeddedRedis` and `Cassandra` junit rules

* Clean up `SampleKBContext`

Conflicts:
	grakn-graql/src/test/java/ai/grakn/graql/SampleKBContext.java
	grakn-graql/src/test/java/ai/grakn/graql/internal/reasoner/BenchmarkTests.java
	grakn-test-tools/src/main/java/ai/grakn/test/SampleKBContext.java

* Re-add some annotations

* Use composite TestRules where appropriate

* Move `SampleKBLoaderTest` back to `grakn-graql`

* Remove duplicate `SparkContext`

* Remove `GraknTestEngineSetup`

* Remove `ControllerFixture`

* Add javadoc

* PMD stop yelling at me

* Test change

* Don't use EmbeddedCass for EngineContext

* Cleanup

* Fix ClientTest

* Pedantic changes

* Randomise redis port for tests and redefine GraknEngineStartTest

* Remove old GraknEngineStartTest

* Cleanup after merge

* get rid of another user of EngineTestHelper

* One more use of EngineTestHelper gone

* Get rid of another use of EngineTestHelper

* Fix CLientTest

* Fix TaskManagerTest. . .  Even thought I don't think it is relevant anymore

* hangouts makes things dumb

* Get SystemKeysoaceTests working without EngineTestHelper

* Simplify test. At some point we may want to make it more useful

* get rid of redudent flag

* Delete irrelevant test and change to in memory redis

* Get rid of EnginTestHelper FINALLY

* Code review comments

* More code review comments

* Cleanup TaskManagerTest

* Fix SystemKeyspaceTest hopefully
"
804fc7d94fd11c1e730fe35c2f67fc41df1a45cf,graknlabs/grakn,"Archive cassandra logs and increase timeout (#2301)

* Archive cassandra logs

* Double timeout when contacting cassandra

* Units are important

* Add timeout to other configs
"
5ac34f8556a8504283f421e79cc85d5cd50446eb,graknlabs/grakn,"Remove `PatternBuilder` and `VarPatternBuilder` (#1791)

* Make `Var` extend `VarPattern`

* Extract `AbstractVarPattern` from `VarPatternImpl`

* Change `AbstractVarPattern` to construct patterns with factory method

* Change `VarImpl` to extend `AbstractVarPattern`

* Change test because behaviour has now chnaged

* Remove `PatternBuilder` and `VarPatternBuilder`

* Remove some redundant code

* Fix a bug due to change in `VarPattern#toString` behaviour
"
5f2e51a270381c0fa3a0e5a39b170a0e359c075f,graknlabs/grakn,"Tiny Code Cleanups (#917)

* Remove redudent modifier from interface

* Minor code cleanups

* Ignore low priority test

* Ignore another low priority test
"
cf4d52465bcd14d5de9834632c9b78194108a971,graknlabs/grakn,"Improve internal caching (#2259)

* Create factories for caches

* Use internal registers for flushing and clearing caches

* Find bugs keeps yelling at me

* Fix failing tests

* Hmmmmm . . .

* Least smelly approach
"
8c0b358efc5a95706e9ef5d12866bf91f0b9d5b9,graknlabs/grakn,"Some overdue cleanups in graph API (#1675)

* Remove getting concept by raw vertex ID. Index works just as well

* More minor cleanups

* Update some old crappy tests
"
1c45f2d8d248794105b6faad91cd31f1869249de,graknlabs/grakn,"Single Queue task manager (#1212)

* on cluster

* TaskRunner improvements

* TaskRunner improvements

* javadoc

* more logging

* Scheduler things and SIGTERM

* Removing unneeded commit syncs

* Fix findbugs

* Remove wait for join in tm, gracefull executor shutdown in taskrunner

* Scheduler will not rerun tasks it reencounters frm queue

* New rebalance listener

* Adding comment to Scheduler

* Readding in removed functionality

* Test fixes

* Remove configuration when marking as COMPLETED to save space in ZK

* Fix PMD violation

* Moved & renamed a ton of engine things

* Renamed distributed to 'multiqueue'

* Single Queue classes

* Change package structure and add JavaDoc

* Filling out SingleQueueTaskManager

* Engine test structure mimics engine package

* Zookeeper atomic tests

* Make `TaskState` use a `Class` instead of a `String` for the task class

* Add `TaskStateStorage#containsState`

* Add support for copying and `toString` on `TaskState`

* Add support for generating test tasks, including failing tasks

* Add tests for `SingleQueueTaskRunner`

* Add simple `SingleQueueTaskRunner` implementation

* Fix `TaskStateZookerStore#containsState` to use `executeWithMutex`

* Use executor in task runner

* Atomic ZK writes

* Removing some extra methods in Zookeeper connection

* Task failover and tests

* TaskManager interface change

* TaskManager code written

* Fix compilation errors

* Add `TaskId` class to represent an ID for a task

* Add method for mock consumer to call when queue is empty

* Generate more task states and make them run longer with a sleep

* Change test to use executor that throws when full

* Change task runner to handle when thread pool is full

* Fix compilation errors

* TaskManager test passing, TaskRunner contains put for ZK storage

* Some fixes and todos

* Adding configuration option for task manager

* Serializer not working

* Serializer working and controller tests passing

* Postprocessing test fix

* Some more test fixed, SingleQueueTaskRunner & TaskFailover tests still failiing

* Add `TaskSchedule` class

* fix stuff maybe

* Fixes from merge

* Fixes for failer TaskFailover test

* TaskStateGraphStore test passing

* Added TaskState serializer and deserializer

* Make `creator` an immutable property of `TaskState`

* Make `schedule` an immutable property of `TaskState`

* Make `configuration` a property set at construction of `TaskState`

* Create static factory method `TaskState#of`

* Make `TaskState#serialize` non-static

* Added TaskState string serializer

* Made tests test

* Fix single queue test to expect correct completed tasks

* Rename `FailingTask` to `FailingTestTask`

* Move recorded completed tasks to `BackgroundTaskTestUtils`

* Un-Ignoring LoaderClient tests

* Adding default to switch statement in FailoverElector

* Deserializer using UTF8

* InMemoryTaskStore checks for null

* Catching throwable instead of Exception

* Various PMD fixes

* Refactor `SingleQueue` tests

* SingleQueueTaskManager test uses tasks with unique ids

* Reduce size of LoaderClientTest

* Hide logs in LoaderClientTest

* Fix some memory issues

* Removed executor from TaskRunner

* ExternalStorageRebalancer catches exceptions, remove TaskRunnerResserection

* Internalised the TaskRunner consumer to the TaskRunner class

* Removing logging

* PMD fixes

* Errors from merge

* Don't clean up Kafka in tests

* Clear completed tasks after running engine context

* Cleanup in before method

* Adding dependency on XML migration to dist (#1211)

* Remove surplus iterator accumulator (#1208)

* remove surplus accumulator

* fix lazy test

* Cleaup after tests

* Test refactors
"
9f4f0923b3d9c06762da093e1ff38dadc617e2b2,graknlabs/grakn,"BUG #13760 - loader client de-duplicates batches of queries (#1576)

* allow all write queries enabled, waiting for bugfix

* added LoaderTask test

* added LoaderClient test to reject read only queries

* refactor and javadoc

* had not set task class name

* regression test plus bugfix

* pmd violation fixed

* fixed a test that was asserting the wrong behaviour
"
be8c7415e8ce3d78a4719076b6dfef3227b1dee2,graknlabs/grakn,"[Stable] Introduce multiunifier (#2158)

* WIP

* more work

* stable

* sorted permutations

* cleanup

* fix test

* update cache

* explicit distinction between exact and inexact unification

* update javadocs

* fix problem with relation mappings and add tests

* add test description
"
90c599a90b119cc54d5d327761267dff26c36257,graknlabs/grakn,"Introduce structural query cache (aka caching graql traversals) (#2121)

* cleanup cache calls

* WIP

* fix structural comparisons and add tests

* make structural cache internal to cache

* more cleanup

* update structural cache

* sorted out fitting the traversal plan to different queries

* working order

* some cleanup

* merge from master

* merge from master

* use guava equivalence
"
56dfcce131c6cc7b45ef876f6697aaf1eb400ee1,graknlabs/grakn,"Improve GraknConfigKey abstraction (#2657)

* Remove all optional config keys

* Introduce KeyParser interface

* Let KeyParser also write to string

* Forget optionals all together

* Remove unused methods

* Make some stuff public
"
e139e57031430949856f5287367708b756cb5205,graknlabs/grakn,"Merge Unstable Branch Into Master (#1383)

* Migrator skips empty templates, can parse multiple queries

* Allowing multiple role players for a single role (#1199)

* Improve JavaDoc for `BaseGraknGraph` `put` methods

* Introduce quick check with some generators

* Add tests for `GraknGraph` `put` properties using quickcheck

* Tidy up some tests

* Refactor and improve comments on generators

* Remove very dubmb test

* Fix test which checks what happens when you call putType(meta)

* Fix whenCallingPutRoleTypeWithAnExistingRoleTypeNameThenItReturnsThatType

* Improved exception messages

* Fix whenCallingPutResourceTypeWithThePropertiesOfAnExistingNonUniqueResourceTypeThenItReturnsThatType

* Add support for generating arbitrary patterns

* Add test for `getConcept`

* Add all tests for `getConcept`

* Fix whenCallingIsUniqueOnMetaResourceTypeThenResultIsFalse

* Fix whenDeletingMetaEntityTypeThenThrow

* Add all tests for `getType`

* Fix whenSetRegexOnMetaResourceTypeThenThrow

* Unignore whenCallingPutRelationTypeWithAnExistingRelationTypeNameThenItReturnsThatType

* Unignore whenCallingPutRuleTypeWithAnExistingRuleTypeNameThenItReturnsThatType

* Make sxception more specific for whenCallingPutRuleTypeWithAnExistingNonRuleTypeNameThenThrow

* More specific exception for whenCallingPutEntityTypeWithAnExistingNonEntityTypeNameThenThrow

* Unignore whenCallingPutEntityTypeWithAnExistingEntityTypeNameThenItReturnsThatType

* More specific exception for whenCallingPutResourceTypeWithAnExistingNonResourceTypeNameThenThrow

* Fix newly broken test

* Some testing cleanups

* Fix whenCreateInstanceOfMetaResourceTypeThenThrow

* Add resources to generated graphs

* Unignore whenDeletingMetaEntityTypeThenThrow again

* Improve generators

* Add tests for `getResourcesByValue`

* Temporarily disable disjunction/conjunction generators

* Add test to catch bug found in generator

* Add `@Open` and `@Closed` annotations to `GraknGraphs`

* Add test to confirm most methods throw when graph is closed

* Add test to confirm that any method passed a null will throw an NPE

* Add an underscore to test names for readability

* Add final tests to complete coverage of `BaseGraknGraph` interface

* Add assumption to test

* Change generates to generate edge cases more frequently

* General refactors

* More refactors, plus ignoring any failing tests

* Move exception to inner class

* Add more tests

* Refactor generators

* Remove faulty test

* Miscellaneous test fixes

* Fix import

* Undo dumb commited thing

* Add tests that should be true for all `put<Type>` methods

* Fix mistake when merging

* Add more tests to confirm default properties of new types

* Correct some tests to use implicit concepts and meta types

* Add tests for case of mixing up unique- and non-unique- resource types

* Update JavaDoc to reflect expected behaviour

* Create more general genrator for methods of a class

* Improve generators

* Make `GraknGraphPropertyTest` into an integration test

* Remove commented graph cache code

* Support `toString` of deleted concepts

* Add concept property tests

* Add generator to produce ""normal"" strings more frequently

* Add tests for `isType`, `asType` etc. methods

* Simplify some code thanks to `CommonStrings` generator

* Remove several unused Graql generators

* Add test for passing an unsupported argument to `getResourcesByValue`

* Add dumb implementation of new `rolePlayers` method

* Add tests for multiple role players in relations

* Add use of multiple role-players to movie graph

* Add tests for matching multiple role-players in Graql

* Add tests for inserting multiple role-players in Graql

* Revert bug

* Un-ignore test

* Refactor + remove roleplayer method definiton

* WIP

* Simple test

* Add all roleplayers because it is needed interanally anyway

* Get internal hash to tak into account multiple roleplayers

* Fix some tests

* FIX PP AGAIN FOR THE 213456789th time

* Cleanup PP a bit

* Fix whenARoleInARelationIsPlayedAZillionTimes_TheGraphIsValid

* Fix validation issue

* Fix validation test

* Arguably less bad implementation of new RolePLayers method

* Get rid of some uses of old roleplayers method and redefine adding shortcut edges

* Get rid of calls to old role players in grakn graph

* Get rid of another usage of old rolePlayers method in HALConceptData

* Another call to old roleplayers gone

* Make PMD happy

* More cleanups of roleplayers

* Remove reference in graql printer

* Only one more call to old roleplayers left

* get rid of final call to old roleplayers in InstanceMapper

* Get rid of old roleplayers method

* Change new role players method name

* Remove method I will implement in another PR

* Fix faulty tests

* Fix equality bug with `Var` instances

* Fix shortcut edges not being created bug

* Fix shortcut test

* Incorrectlty defined test

* Fix another test which assumed ontology matched actual relation structure

* Fix potential bug in HALConceptData

* Some code cleanups

* Add some details to test

* Making shortcut edge creation clearer

* More logging for ghosts (#1239)

* More logging unstable (#1240)

* More logging for ghosts

* Simplified Logging

* Fix merge error (#1241)

* Experimental Scoping Of Types (#1235)

* Move scope implementation to conceptImpl and add scope to type interface

* Update tests to use new scoping

* WIP

* Cleanup old usages of Scope

* Fix dumb typo

* Fix PMD error

* Basic explanation facility (WIP) (#1238)

* basic explanation facility

* cleanup

* cleanup

* bring differential join back

* change explanation handling

* Minor fix after merge

* Even more logging

* Unstable night (#1255)

* Limit double click results in dashboard

  - added new query limit param in dashboard
  - when double clicking on a node it will limit the connected concepts returned
  - align node vertically functionality added to context menu

* Added ctrl+drag option to move neighbours nodes together with the selected one

* New types panel

* New shift+click behaviour

* changes to colours and avoidOverlap

* something

* fix merging

* Explanation facility mk ii (#1263)

* recursive structure for explanations together with rules

* cleanup and restructure

* remove extra semicolons

* remove unused private method

* reinstate differential join

* remove more unused constructs

* Change the way we validate vertices and build unknown concepts. This should be more robust. (#1270)

* Remove redudent read. Might not be needed anymore

* New approach to building concepts whose base types are unknown for whatever reason

* Fix findbugs issue

* Dashboard features and bug fix (#1265)

* Limit double click results in dashboard

  - added new query limit param in dashboard
  - when double clicking on a node it will limit the connected concepts returned
  - align node vertically functionality added to context menu

* Added ctrl+drag option to move neighbours nodes together with the selected one

* New types panel

* New shift+click behaviour

* changes to colours and avoidOverlap

* something

* Two bugs fixed

  - when building HALOntology concept there was no offset&limit params in href
  - new ontolgogy buttons(entities,relations,etc) were not working in console page

* Solved bug where dashboard was trying to use old keyspace even if does not exist

* Clicked node remains fixed and moves only drawn nodes that are also in the response.

* fixed bug in attaching relations to entities - generateEntityEmbedded

* added freezeNodes toggle

* fixed analytics results bug

* When toggle freezeNodes is off, se still dragged lock to current position.

* added releaseAllNodes and fixAllNodes methods, used when switching on/off toggle

* reinstate correct cache behaviour

* removed unused import

* New shortcut edges - WIP (#1267)

New shortcut edges

* Explanation fixes (#1277)

* stable

* reinstate genealogy rule patterns

* WIP on queries

* fixed tests

* fixed issues

* cleanup

* shallow explanation copy for query answer

* fixes for pmd

* remove commented code

* Hal fixes (#1285)

* HAL builder changes:

  - don't attach relations that connect a relation to its resources
  - limit number of resource owners, usual offset limit system

* removed titan from pom and new GraknEngineServerException in GraphFactoryController

* Fixed error in merging

* New fix in script to use new config file name

* fixed new config file issues in scripts

* Optional explanation and some fixes (#1289)

* stable

* reinstate genealogy rule patterns

* WIP on queries

* fixed tests

* fixed issues

* cleanup

* shallow explanation copy for query answer

* fixes for pmd

* optional explanation and some cleanup

* cleanup

* fix issue with missing explanation

* reinstated inverse joins and added tests

* Default labels (#1308)

* HAL builder changes:

  - don't attach relations that connect a relation to its resources
  - limit number of resource owners, usual offset limit system

* removed titan from pom and new GraknEngineServerException in GraphFactoryController

* Fixed error in merging

* New fix in script to use new config file name

* fixed new config file issues in scripts

* Node labels preferences are now store in localStorage. Need to read from it when adding node to the canvas.

* fixed default label on nodes to be type:id and fixed position on aligned nodes when all other nodes are unlocked

* labels to type:id

* remove taskspage

* removed WIP files

* Node labels changes (#1311)

- now the node labels preferences are stored in localStorage
      - 'type' can be selected as a node label

* Fixes after merge

* Dont build generated relation if user specify relation variable (#1317)

* Fixes for unstable (#1319)

* fixes for match all queries and removed doing result inverses

* remove unnecessary import

* New button to scroll up Graql editor when query is (#1330)

on multiple lines.

* make pmd happy

* rebuild

* Fix bug with Graql output of relations with multiple role-payers (#1351)

* Lazy resources (#1357)

* New button to scroll up Graql editor when query is
on multiple lines.

* refactor and lazy loading resources in progress

* refactor and lazy in progress again

* Almost done refactoring

* Added events to close tooltip and context menu from canvas handler to graph page

* Small refactoring to fix rectangle drawing. Moving to lazy-resources

* Finished first version of lazy loading of resources

* fixed error on analytics response

* Make PMD happy

* Add explicit path function to answer class (#1361)

* added explicit path function to answer class

* add specific query test and licence

* Graql-native explanation (#1370)

* added explicit path function to answer class

* add specific query test and licence

* remove reasoner endpoint and turn explanation on

* add java doc description

* remove unused imports

* Move and rename `RelationPropertyIT`

* Change string ""putRolePlayer"" to ""addRolePlayer""

* Fix merge of `GraknGraphs`
"
097d37e4974e30fa019ea7355e8b4b37d9ed08bf,graknlabs/grakn,"Merge from stable (#2422)

* Upload perf logs s3 (#2294)

* upload benchmark json to s3

* Test run upload for PR.

* archiveArtifactsS3 as a method.

* Change trigger back to !rtg (#2408)

* Add academy to top navigation (#2411)

* [Stable] Enable reasoning by default (#2406)

* enable reasoning by default

* --amend

* add pattern validation to MatchInfer

* fix graql tests

* sort out exception handling when reasoning

* switch off reasoning when validating docs

* [Stable] More informative rule validation (#2409)

* disallow non-insertable relation players in rule heads

(cherry picked from commit 38cddb8209d1273a41a1a8c4f1c010eca3a04d3d)

Conflicts:
	grakn-graql/src/test/java/ai/grakn/kb/internal/RuleTest.java

* provide clearer validation errors for rule validation

(cherry picked from commit 473934d5982caf3ce9942cd36a1d9b660139dc35)

Conflicts:
	grakn-core/src/main/java/ai/grakn/graql/admin/Atomic.java
	grakn-graql/src/main/java/ai/grakn/graql/internal/reasoner/atom/binary/type/IsaAtom.java
	grakn-graql/src/test/java/ai/grakn/kb/internal/RuleTest.java

* add boundedness checking for resources

(cherry picked from commit a4a215042196b84315fbece03b7a2ad436ce8afe)

Conflicts:
	grakn-graql/src/main/java/ai/grakn/graql/internal/reasoner/atom/binary/ResourceAtom.java
	grakn-graql/src/test/java/ai/grakn/kb/internal/RuleTest.java

* add boundedness check

* add validation precedence

* ignore tests failing validation

* Handle parsing extremely large Graql files in constant memory (#2421)

* Add WIP fix for large queries

* Clean up error handling in parser

* Clean up with a helper class

* correctly rewrite rule heads with resources (#2417)
"
d7a6182186cba33f875117e049e46ba89540f0fe,graknlabs/grakn,"Rename `VarName` to `Var` (#1604)

* Rename `Var` to `VarPattern`

* Rename `VarName` to `Var`
"
0ed968b558d429e6b12363673a8b918e72a184a9,graknlabs/grakn,"Remove sets from tests (#2190)

* cleanup ReasonerTest

* cleanup GenealogyTest

* cleanup GeoTest

* cleanup recursive tests

* cleanup snb tests

* final cleanup
"
41cbb6339b81982d507abbd7dd41d65a647d43f0,graknlabs/grakn,"Bolerio/master (#1210)

* Fix compile problems in Eclipse

* Added XML migrator module and a small Eclipse compilation fix.

* refactor XML migrator to latest framework, fix checkstyle problems
"
cac93473f4bc09c9c646acb3c789eb5e52975b4b,graknlabs/grakn,"Merge janus-factory into grakn-factory (#2632)

* Merge janus-factory into grakn-factory

* Get rid of big table

* Who has their own implementation of Iterables??

* Dependency fun times for all
"
459e51a706548bd5c7af38fe0f42b7895348251c,graknlabs/grakn,"Remove dead and unused code (#2610)

* Add APi annotation

* Skip

* Get rid of potentially dead method

* Another potential dead method

* Add API ammptation

* skip

* Notes for Jason

* More notes

* More cleanup

* More cleanup

* Void

* Redudent mathod go bye bye

* Kill aparantly unused method

* More cleanup

* Felix note

* More code cleanup

* More cleanup

* Almost there

* Delete completely unused class

* More clanup

* More cleanup. Almost there some more

* More cleanup

* final cleanup maybe

* Fear the BEC

* Felix I am sorry :(

* Dealing with code review stuff

* More cleanup

* More stuff

* More cleanup

* More code review comments

* Bye Jason tags

* Death to all unused code

* Bye Felix Tag

* Fix crap

* Clean

* Create debugger class. Not a fan of this but since we don't want to get rid of the methods this is the next best thing

* Fix test

* Bye raw types

* Felix code review stuff

* Raw types

* Jason comment

* cleanup the cleanup xD

* Get rid of unused method

* Fixy
"
805c1f8ae9ef2f78d2217cb85723dd9da855bb55,graknlabs/grakn,"Introduce `get` query (#2048)

* Add `GetQuery` interface and implementation

* Make `MatchQuery` not a query and fix compilation errors

* Add `get` queries to grammar

* Fix some tests

* Remove some unused methods

* Fix another test!

* Remove `select` from parser

* Remove tests and usages of `MatchQuery#select`

* Remove `MatchQuery#select` method

* Remove `distinct` from parser

* Remove `MatchQuery#distinct` method

* Fix test

* Rename occurrences of `MatchQuery` to `Match`

* Remove more references to ""match query""

* Fix some more tests

* Fix graql doc examples

* Fix java doc examples

* Fix randomly failing test

* Fix Jenkinsfile

* Fix some engine tests

* Fix bash tests

* Clean up docs

* what's a graph?

* Split off `GetQueryTest`

* Add back test

* Fix `MatchModifierTest` to avoid `GetQuery`

* Fix a failing test

* Fix another test...
"
cc1a7c988a1ed8c8faa2267d62d526d1195c86b9,graknlabs/grakn,"some query equivalence cleanup (#2577)

"
0631bbbd37c21f8ef8ae8dc9ba6e62e517df92af,graknlabs/grakn,"Engine failover tests & Backoff refactor (#1353)

* Testing running and sending tasks to two engines

* Test for tasks running on more than one engine

* Restart in Distribution context

* Ranlomly killing engine test- fails

* Tests sleep for random time- PP OFF THiS IS BAD

* Task backoff with time since last handled task

* Remove unused imports

* Make backoff configurable

* Increase backoff time

* Remove timeout waiting for tasks to complete, add warning

* Equality checking task completion

* Reduce max number tasks in randomly killing tests
"
2672d017bd0228cc597894d421e55410054509b1,hande-qmc/hande,"reply part 6: restructure pattempt_single update

Conflicts:
	src/ccmc.f90
"
0120bef228079f9a768462e7b26f0f628e55d8c1,hande-qmc/hande,"Split up diagonalisation.

Separate modules for controlling the diagonalisation, full diagonalisation and
lanczos diagonalisation.
"
1a6a7e1fe2f27c4a68c6faae205373f5e1092d77,hande-qmc/hande,"Remove unused variables.
"
1e0b9cbf35f302baecec2b492a0ed4df644642b4,hashicorp/nomad,"Merge pull request #3175 from jen20/multi-vagrant

build: Rework Vagrant for multiple operating systems; add FreeBSD support"
aac319cd169fa58139c6b7825855171cb97c2692,hashicorp/nomad,"Merge pull request #2654 from hashicorp/f-env-consul

Add envconsul-like support and refactor environment handling"
ba8e3fcbae996b825ca3b472097cd685ce421de3,hashicorp/nomad,"Merge pull request #455 from hashicorp/f-consul-check

Refactor consul check"
84594781a70a1a6623a84f0b52a733c1fe9214f6,hashicorp/nomad,"Merge pull request #1920 from hashicorp/sethvargo/agent_divorce

Separate agent configuration into its own pages"
92f5e82b31532a9a916231d65edbe03548f944ff,hashicorp/nomad,"Merge pull request #2512 from hashicorp/f-logs-startedat

Track task start/finish time & improve logs errors"
c86a07d834652073d501299397c74c4e341392fb,hashicorp/nomad,"Separate agent configuration into its own pages

I apologize in advance for the rather long PR, but unfortunately there
is not an easy way to break this up into smaller chunks. This separates
the agent configuration into smaller, more consumable pieces just like
the job specification.
"
f6ca06ce431f32bb7091ccf95255d9820074b2cf,hashicorp/nomad,"refactor and fixups from code review
"
296141bb585b7c43bd3006d2cce6a1e9fd536103,hashicorp/nomad,"Merge pull request #5002 from hashicorp/b-task-config-resources

Convert driver resource to AllocatedTaskResource"
5e8151d700654e433d4d1ef5c48be180796ce651,hashicorp/nomad,"refactor Fingerprint to request/response construct
"
4a8c33cca36b6e188d5c41f45e5c9e5a32e58c01,hashicorp/vault,"Disable the `sys/raw` endpoint by default (#3329)

* disable raw endpoint by default

* adding docs

* config option raw -> raw_storage_endpoint

* docs updates

* adding listing on raw endpoint

* reworking tests for enabled raw endpoints

* root protecting base raw endpoint
"
d5ad857a862dfd4c1d69eeea4f9c0b00f9ec96bb,hashicorp/vault,"Capabilities responds considering policies on entities and groups (#3522)

* Capabilities endpoint will now return considering policies on entities and groups

* refactor the policy derivation into a separate function

* Docs: Update docs to reflect the change in capabilities endpoint
"
213b8137a3ddf91f8c23dbc022fd3dec2ecbc873,jaamsim/jaamsim,"JS: move basic datatype code to a jaamsim package

Signed-off-by: Harvey Harrison <eadbd6b462bf3c97df0300a934c12bc2e5d1fe51@ausenco.com>
"
749a5ed1f9d2d86658cce9acd77329e578e7285d,jobisoft/TbSync,"Rewrite of sync management (sequential -> parallel)

- contact sync is disabled for now
- drop currentProzess
- each account gets its own sync obj (syncdata)
- messenger is no longer showing, what is beeing synced, but a simple
busy indicator
"
52d342a780274432045863191b67087f9473407e,kbase/narrative,"Merge pull request #664 from kbase/vis-cell-refactor

Narrative Cell Update / Narrative v3.0.0-alpha-1"
7270977e07862702164acb700400eaad0b492451,kbase/narrative,"Merge remote-tracking branch 'upstream/vis-cell-refactor' into vis-cell-refactor
And then changes to make it work
Note - the run_app output is currently disabled in order to let the
method cell work; this will be merged into the method, er, app cell and
also forked into its own standalone code cell type.
"
e1036a335d36fe6ffca18712948f9e72b80ad68a,kbase/narrative,"Merge pull request #617 from briehl/vis-cell-refactor

Vis cell refactor"
137c9fc1ed50308796ac6fc932851b60c590f188,kbase/narrative,"Merge remote-tracking branch 'upstream/vis-cell-refactor' into vis-cell-refactor

# Conflicts:
#	src/biokbase/narrative/jobs/appmanager.py
"
738d5162d994dfa304d25158583e9a311de953a8,kbase/narrative,"Merge pull request #899 from eapearson/grouped-parameters-cleanup

Fixed view cell regression, better view cell error handling"
78533de0ffdaa2bb3c163d69a4488ec30816355f,kbase/narrative,"Merge pull request #606 from briehl/vis-cell-refactor

Initial commit of job and method manager"
b4e0e7f87db747b13fb743693a37704d4acefb4b,kiwiirc/kiwiirc,"Make sidebar toggle on larger screen (#650)

* Make sidebar toggle on larger screen

* Cleanup SidebarState.vue

* Restore overlay styling when sidebar is open on mobile

* rename classes to better suit their new functions

* rename canPin to canOpen

* More cleanup

* Fix sidebar.toggle event listener

* Allow the sidebar to be opened by default

* fix css classes

* Simplified SidebarState properties; Overlay fixes;
"
8110fc7b5ee9be2bbd15ad1c69ffd4ef6bf4ca24,lexus2k/ssd1306,"VGA files are refactored
"
e6dbda34778fa7987de8650e549ef2214829dff4,libMesh/libmesh,"Remove redundant libmesh_config.h rule

I'm not sure how that keeps getting added - something wrong with the
rebuild_makefile script?
"
db37f3cc3adfc320679d535185c2c6e1dde47825,libvirt/libvirt,"qemu: Clean up old leftovers in qemuMonitorDrivePivot

There are two leftover unused variables. Remove them and clean up the
fallout of the change.
"
02eaf1821ce643f8c2984cd6004478bd0843116e,libvirt/libvirt,"virsh: Rename vshMakeStdinRaw to vshTTYMakeRaw and move it to virsh.c

Move the function to virsh.c to the rest of the TTY managing functions
and change the code so that it mirrors the rest.
"
0c9fd4cfe98a90877ad8b974b28358127ea6cf43,libvirt/libvirt,"Rewrite virAtomic APIs using GLib's atomic ops code

There are a few issues with the current virAtomic APIs

 - They require use of a virAtomicInt struct instead of a plain
   int type
 - Several of the methods do not implement memory barriers
 - The methods do not implement compiler re-ordering barriers
 - There is no Win32 native impl

The GLib library has a nice LGPLv2+ licensed impl of atomic
ops that works with GCC, Win32, or pthreads.h that addresses
all these problems. The main downside to their code is that
the pthreads impl uses a single global mutex, instead of
a per-variable mutex. Given that it does have a Win32 impl
though, we don't expect anyone to seriously use the pthread.h
impl, so this downside is not significant.

* .gitignore: Ignore test case
* configure.ac: Check for which atomic ops impl to use
* src/Makefile.am: Add viratomic.c
* src/nwfilter/nwfilter_dhcpsnoop.c: Switch to new atomic
  ops APIs and plain int datatype
* src/util/viratomic.h: inline impls of all atomic ops
  for GCC, Win32 and pthreads
* src/util/viratomic.c: Global pthreads mutex for atomic
  ops
* tests/viratomictest.c: Test validate to validate safety
  of atomic ops.

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
6826c99ac196eeacb1e78bdcb5b26d4ea8c27bd6,libvirt/libvirt,"qemu: deprecate QEMU_CAPS_PCI_MULTIFUNCTION

Supported since QEMU 0.13, but we require QEMU 1.5.0.

Signed-off-by: J√°n Tomko <4cab11cfb98d3c937327354a78eb07dbb6ee2bc6@redhat.com>
Reviewed-by: Andrea Bolognani <3ada0bee826c753786fdbba72243dfba997094cf@redhat.com>
"
497adba2d432d37f236495b2309c469886dbbd33,libvirt/libvirt,"Expand virSocketFormat to be more flexible

The getnameinfo() function is more flexible than inet_ntop()
avoiding the need to if/else the code based on socket family.
Also make it support UNIX socket addrs and allow inclusion
of a port (service) address. Finally do proper error reporting
via normal APIs.

* src/conf/domain_conf.c, src/nwfilter/nwfilter_ebiptables_driver.c,
  src/qemu/qemu_conf.c: Fix error handling with virSocketFormat
* src/util/network.c: Rewrite virSocketFormat to use getnameinfo
  and cope with UNIX socket addrs.
"
de4b32e4bf7394bc697e87133d0461db87f4a392,libvirt/libvirt,"Move LXC monitor code out into separate file

Move the code that handles the LXC monitor out of the
lxc_process.c file and into lxc_monitor.{c,h}

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
e764ec7ae36ee99e27fcd86819899ab05c61a038,libvirt/libvirt,"numatune: unify numatune struct and enum names

Since there was already public virDomainNumatune*, I changed the
private virNumaTune to match the same, so all the uses are unified and
public API is kept:

s/vir\(Domain\)\?Numa[tT]une/virDomainNumatune/g

then shrunk long lines, and mainly functions, that were created after
that:

sed -i 's/virDomainNumatuneMemPlacementMode/virDomainNumatunePlacement/g'

And to cope with the enum name, I haad to change the constants as
well:

s/VIR_NUMA_TUNE_MEM_PLACEMENT_MODE/VIR_DOMAIN_NUMATUNE_PLACEMENT/g

Last thing I did was at least a little shortening of already long
name:

s/virDomainNumatuneDef/virDomainNumatune/g

Signed-off-by: Martin Kletzander <e82f23e74d43760279ebcc505dac4ae70d5627d0@redhat.com>
"
c08a47b85344cba022040997cc9b15a51a778442,libvirt/libvirt,"Refactor storage backends to avoid dependancy from config parser to implementation
"
9b8f307c6ad002a17a0510513883d06395636793,libvirt/libvirt,"Make virCommand env handling robust in setuid env

When running setuid, we must be careful about what env vars
we allow commands to inherit from us. Replace the
virCommandAddEnvPass function with two new ones which do
filtering

  virCommandAddEnvPassAllowSUID
  virCommandAddEnvPassBlockSUID

And make virCommandAddEnvPassCommon use the appropriate
ones

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
03346def06ea92a311622fda32271c91832e5543,libvirt/libvirt,"util: Move scsi_host specific functions from virutil

Create a virscsihost.c and place the functions there. That removes the
last #ifdef __linux__ from virutil.c.

Take the opporunity to also change the function names and in one case
the parameters slightly
"
dad4b5d47f8ce8ea44ca2ef462c43eb3d5954bf5,libvirt/libvirt,"Re-write virsh console to use streams

This re-writes the 'virsh console' command so that it uses
the new streams API. This lets it run remotely and/or as a
non-root user. This requires that virsh be linked against
the simple event loop from libvirtd in daemon/event.c
As an added bonus, it can now connect to any console device,
not just the first one.

* tools/Makefile.am: Link to event.c
* tools/console.c, tools/console.h: Rewrite to use the
  virDomainOpenConsole() APIs with streams
* tools/virsh.c: Support choosing the console name
  via --devname $NAME
"
7bd8312e7f764aef2878382f016ab4c5b7abc33b,libvirt/libvirt,"conf: Move the privateData from virDomainChrDef to virDomainChrSourceDef

Commit id '5f2a132786' should have placed the data in the host source
def structure since that's also used by smartcard, redirdev, and rng in
order to provide a backend tcp channel.  The data in the private structure
will be necessary in order to provide the secret properly.

This also renames the previous names from ""Chardev"" to ""ChrSource"" for
the private data structures and API's
"
8215aab0036e65da47a2646f85749e9f5ea5d252,libvirt/libvirt,"qemu: Move and rename qemuBufferEscapeComma

Move to virqemu and rename to virQEMUBuildBufferEscapeComma. This can then
be shared by the storage driver when it builds the command line for qemuimg
"
32a9aac2e04c991340b66c855a1095e4e6445e54,libvirt/libvirt,"Use XDG Base Directories instead of storing in home directory

As defined in:
http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html

This offers a number of advantages:
 * Allows sharing a home directory between different machines, or
sessions (eg. using NFS)
 * Cleanly separates cache, runtime (eg. sockets), or app data from
user settings
 * Supports performing smart or selective migration of settings
between different OS versions
 * Supports reseting settings without breaking things
 * Makes it possible to clear cache data to make room when the disk
is filling up
 * Allows us to write a robust and efficient backup solution
 * Allows an admin flexibility to change where data and settings are stored
 * Dramatically reduces the complexity and incoherence of the
system for administrators
"
994e7567b69bdb3bad588ed2022b941927f34c1f,libvirt/libvirt,"maint: kill all remaining uses of old DEBUG macro

Done mechanically with:
$ git grep -l '\bDEBUG0\? *(' | xargs -L1 sed -i 's/\bDEBUG0\? *(/VIR_&/'

followed by manual deletion of qemudDebug in daemon/libvirtd.c, along
with a single 'make syntax-check' fallout in the same file, and the
actual deletion in src/util/logging.h.

* src/util/logging.h (DEBUG, DEBUG0): Delete.
* daemon/libvirtd.h (qemudDebug): Likewise.
* global: Change remaining clients over to VIR_DEBUG counterpart.
"
ccff335f8384892645f1a242214d58eb125fa5a7,libvirt/libvirt,"Support for static routes on a virtual bridge

network: static route support for <network>

This patch adds the <route> subelement of <network> to define a static
route.  the address and prefix (or netmask) attribute identify the
destination network, and the gateway attribute specifies the next hop
address (which must be directly reachable from the containing
<network>) which is to receive the packets destined for
""address/(prefix|netmask)"".

These attributes are translated into an ""ip route add"" command that is
executed when the network is started. The command used is of the
following form:

  ip route add <address>/<prefix> via <gateway> \
               dev <virbr-bridge> proto static metric <metric>

Tests are done to validate that the input data are correct.  For
example, for a static route ip definition, the address must be a
network address and not a host address.  Additional checks are added
to ensure that the specified gateway is directly reachable via this
network (i.e. that the gateway IP address is in the same subnet as one
of the IP's defined for the network).

prefix='0' is supported for both family='ipv4' address='0.0.0.0'
netmask='0.0.0.0' or prefix='0', and for family='ipv6' address='::',
prefix=0', although care should be taken to not override a desired
system default route.

Anytime an attempt is made to define a static route which *exactly*
duplicates an existing static route (for example, address=::,
prefix=0, metric=1), the following error message will be sent to
syslog:

    RTNETLINK answers: File exists

This can be overridden by decreasing the metric value for the route
that should be preferred, or increasing the metric for the route that
shouldn't be preferred (and is thus in place only in anticipation that
the preferred route may be removed in the future).  Caution should be
used when manipulating route metrics, especially for a default route.

Note: The use of the command-line interface should be replaced by
direct use of libnl so that error conditions can be handled better.  But,
that is being left as an exercise for another day.

Signed-off-by: Gene Czarcinski <bdc8e6790aae8f6a22207d77eb88510bcf8f261a@czarc.net>
Signed-off-by: Laine Stump <c23361c43fbf79fed83e8b76173707b083d6caf5@laine.org>
"
1d632c392410d2be0c50b3a723f89884776b660b,libvirt/libvirt,"secret: util: Refactor virSecretGetSecretString

Call the internal driver callbacks rather than the public APIs to avoid
calling unnecessarily the error dispatching code and don't overwrite
the error messages provided by the APIs. They are good enough to
describe which secret is missing either by UUID or the usage (basically
name).
"
45e9d27ad8c555947d36ec11cd94917417c8a899,libvirt/libvirt,"NUMA: cleanup for numa related codes

Intend to reduce the redundant code,use virNumaSetupMemoryPolicy
to replace virLXCControllerSetupNUMAPolicy and
qemuProcessInitNumaMemoryPolicy.

This patch also moves the numa related codes to the
file virnuma.c and virnuma.h

Signed-off-by: Gao feng <7e9c653c8ec3abfdd967a0616fd143ca77e7b405@cn.fujitsu.com>
"
5f1ace8e3827145be4408ab70160e993323d0e11,libvirt/libvirt,"configure: move remote driver check to its own file

Signed-off-by: Pavel Hrdina <d4772d05997b8abf035041e3b4f4996380ea7e7a@redhat.com>
"
449442c34d20753ca57852d9d7957dd7ba868fae,libvirt/libvirt,"util: Reintroduce virBitmapSubtract

Already introduced in the past with 9479642fd3c5, but then renamed to
virBitmapIntersect by a908e9e45eb2.  This time we'll really use it.

Signed-off-by: Martin Kletzander <e82f23e74d43760279ebcc505dac4ae70d5627d0@redhat.com>
Reviewed-by: John Ferlan <87558058f6f829e5ec976c8ef960720af4ff9c7d@redhat.com>
"
cb110a67e36ba5418ce2bbc869115aa2ac3b2bd2,libvirt/libvirt,"libxl: introduce libxl_capabilities.{ch}

Move capabilities code out of libxl_conf.{ch} and into new
libxl_capabilities.{ch} files.

Signed-off-by: Jim Fehlig <39929b5b86d72d51fceac59b52303e3fe8a3083e@suse.com>
"
b9dd878ff8a03a605865d347e01c0b80b0ee7798,libvirt/libvirt,"util: make it easier to grab only regular command exit

Auditing all callers of virCommandRun and virCommandWait that
passed a non-NULL pointer for exit status turned up some
interesting observations.  Many callers were merely passing
a pointer to avoid the overall command dying, but without
caring what the exit status was - but these callers would
be better off treating a child death by signal as an abnormal
exit.  Other callers were actually acting on the status, but
not all of them remembered to filter by WIFEXITED and convert
with WEXITSTATUS; depending on the platform, this can result
in a status being reported as 256 times too big.  And among
those that correctly parse the output, it gets rather verbose.
Finally, there were the callers that explicitly checked that
the status was 0, and gave their own message, but with fewer
details than what virCommand gives for free.

So the best idea is to move the complexity out of callers and
into virCommand - by default, we return the actual exit status
already cleaned through WEXITSTATUS and treat signals as a
failed command; but the few callers that care can ask for raw
status and act on it themselves.

* src/util/vircommand.h (virCommandRawStatus): New prototype.
* src/libvirt_private.syms (util/command.h): Export it.
* docs/internals/command.html.in: Document it.
* src/util/vircommand.c (virCommandRawStatus): New function.
(virCommandWait): Adjust semantics.
* tests/commandtest.c (test1): Test it.
* daemon/remote.c (remoteDispatchAuthPolkit): Adjust callers.
* src/access/viraccessdriverpolkit.c (virAccessDriverPolkitCheck):
Likewise.
* src/fdstream.c (virFDStreamCloseInt): Likewise.
* src/lxc/lxc_process.c (virLXCProcessStart): Likewise.
* src/qemu/qemu_command.c (qemuCreateInBridgePortWithHelper):
Likewise.
* src/xen/xen_driver.c (xenUnifiedXendProbe): Simplify.
* tests/reconnect.c (mymain): Likewise.
* tests/statstest.c (mymain): Likewise.
* src/bhyve/bhyve_process.c (virBhyveProcessStart)
(virBhyveProcessStop): Don't overwrite virCommand error.
* src/libvirt.c (virConnectAuthGainPolkit): Likewise.
* src/openvz/openvz_driver.c (openvzDomainGetBarrierLimit)
(openvzDomainSetBarrierLimit): Likewise.
* src/util/virebtables.c (virEbTablesOnceInit): Likewise.
* src/util/viriptables.c (virIpTablesOnceInit): Likewise.
* src/util/virnetdevveth.c (virNetDevVethCreate): Fix debug
message.
* src/qemu/qemu_capabilities.c (virQEMUCapsInitQMP): Add comment.
* src/storage/storage_backend_iscsi.c
(virStorageBackendISCSINodeUpdate): Likewise.

Signed-off-by: Eric Blake <a9da18479c871fe903d9590822cfe2629c6a4d11@redhat.com>
"
ddf3bd32ce1246d466f4ffc12ee3a8e41db1d0e9,libvirt/libvirt,"Rewrite all the DTrace/SystemTAP probing

The libvirtd daemon had a few crude system tap probes. Some of
these were broken during the RPC rewrite. The new modular RPC
code is structured in a way that allows much more effective
tracing. Instead of trying to hook up the original probes,
define a new set of probes for the RPC and event code.

The master probes file is now src/probes.d.  This contains
probes for virNetServerClientPtr, virNetClientPtr, virSocketPtr
virNetTLSContextPtr and virNetTLSSessionPtr modules. Also add
probes for the poll event loop.

The src/dtrace2systemtap.pl script can convert the probes.d
file into a libvirt_probes.stp file to make use from systemtap
much simpler.

The src/rpc/gensystemtap.pl script can generate a set of
systemtap functions for translating RPC enum values into
printable strings. This works for all RPC header enums (program,
type, status, procedure) and also the authentication enum

The PROBE macro will automatically generate a VIR_DEBUG
statement, so any place with a PROBE can remove any existing
manual DEBUG statements.

* daemon/libvirtd.stp, daemon/probes.d: Remove obsolete probing
* daemon/libvirtd.h: Remove probe macros
* daemon/Makefile.am: Remove all probe buildings/install
* daemon/remote.c: Update authentication probes
* src/dtrace2systemtap.pl, src/rpc/gensystemtap.pl: Scripts
  to generate STP files
* src/internal.h: Add probe macros
* src/probes.d: Master list of probes
* src/rpc/virnetclient.c, src/rpc/virnetserverclient.c,
  src/rpc/virnetsocket.c, src/rpc/virnettlscontext.c,
  src/util/event_poll.c: Insert probe points, removing any
  DEBUG statements that duplicate the info
"
cfc0a3d4ce6b1075e50c3fa3ef4f1e29445b72f3,libvirt/libvirt,"qemu: blockjob: Separate qemuDomainBlockJobAbort from qemuDomainBlockJobImpl

Sacrifice a few lines of code in favor of the code being more readable.
"
53f94377484e91d2b330942be450bba45294cc61,libvirt/libvirt,"qemu: deprecate QEMU_CAPS_DRIVE_CACHE_DIRECTSYNC

Implied by QEMU >= 1.2.0.

Signed-off-by: J√°n Tomko <4cab11cfb98d3c937327354a78eb07dbb6ee2bc6@redhat.com>
Reviewed-by: Andrea Bolognani <3ada0bee826c753786fdbba72243dfba997094cf@redhat.com>
"
e4a0e900d3a8915e7b03ebcc33b3ba830311d972,libvirt/libvirt,"libxl: use job functions when cleaning up a domain

When explicitly destroying a domain (libxlDomainDestroyFlags), or
handling an out-of-band domain shutdown event, cleanup the domain
in the context of a job.  Introduce libxlVmCleanupJob to wrap
libxlVmCleanup in a job block.
"
8c170c9fe63bed078d0fc77850780c573c81af0a,libvirt/libvirt,"storage: make disk source pool translation generic

Currently, qemu driver uses qemuTranslateDiskSourcePool()
to translate disk volume information. This function is
general enough and could be used for other drivers as well,
so move it to conf/domain_conf.c along with its helpers.

 - qemuTranslateDiskSourcePool: move to storage/storage_driver.c
   and rename to virStorageTranslateDiskSourcePool,
 - qemuAddISCSIPoolSourceHost: move to storage/storage_driver.c
   and rename to virStorageAddISCSIPoolSourceHost,
 - qemuTranslateDiskSourcePoolAuth: move to storage/storage_driver.c
   and rename to virStorageTranslateDiskSourcePoolAuth,
 - Update users of qemuTranslateDiskSourcePool to use a
   new name.
"
75ba06e44afd60c358aa08b9bbf75d35d0f7ec23,libvirt/libvirt,"qemu: Rename qemuAliasTLSObjFromChardevAlias

It's not really 'Chardev' specific - we can reuse this for other objects.

Signed-off-by: John Ferlan <87558058f6f829e5ec976c8ef960720af4ff9c7d@redhat.com>
"
fbc58cfcaeffdd4a350cf6abd67da6006f01b148,libvirt/libvirt,"qemu: Extract logic to determine the mlock limit size for VFIO

New function qemuDomainGetMlockLimitBytes will now handle the
calculation so that it unifies the logic to one place and allows later
reuse.
"
fee840cc96d5da3869522c2f00fbd26209b8a744,libvirt/libvirt,"conf: move virStorageTranslateDiskSourcePool into domain conf

The virStorageTranslateDiskSourcePool method modifies a virDomainDiskDef
to resolve any storage pool reference. For some reason this was added
into the storage driver code, despite working entirely in terms of the
public APIs. Move it into the domain conf file and rename it to match the
object it modifies.

Signed-off-by: Daniel P. Berrang√© <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
9817604afc3fd0d83f97c9f8dda526c41764cd8d,libvirt/libvirt,"Rename internal DumpXML functions to GetXMLDesc

This matches the public API and helps to get rid of some special
case code in the remote generator.

Rename driver API functions and XDR protocol structs.

No functional change included outside of the remote generator.
"
6887af392cbb155ebbb7d24692a73c13ed714cc8,libvirt/libvirt,"Utilize virDomainDiskAuth for domain disk

Replace the inline ""auth"" struct in virStorageSource with a pointer
to a virStorageAuthDefPtr and utilize between the domain_conf, qemu_conf,
and qemu_command sources for finding the auth data for a domain disk
"
cf8b828a724c0d0080351a5c256595db3bbe7a09,libvirt/libvirt,"Rename virDomainIOThreadsInfoFree to virDomainIOThreadInfoFree

This function only frees the info for one thread.
"
f9ce7dad60e9988e0d7ed9b7a70a39af5f9cb5cf,libvirt/libvirt,"Desert the FSF address in copyright

Per the FSF address could be changed from time to time, and GNU
recommends the following now: (http://www.gnu.org/licenses/gpl-howto.html)

  You should have received a copy of the GNU General Public License
  along with Foobar.  If not, see <http://www.gnu.org/licenses/>.

This patch removes the explicit FSF address, and uses above instead
(of course, with inserting 'Lesser' before 'General').

Except a bunch of files for security driver, all others are changed
automatically, the copyright for securify files are not complete,
that's why to do it manually:

  src/security/security_selinux.h
  src/security/security_driver.h
  src/security/security_selinux.c
  src/security/security_apparmor.h
  src/security/security_apparmor.c
  src/security/security_driver.c
"
7b7cb1ecc989db87f3ede16b9aefc0dd3fbd8301,libvirt/libvirt,"deprecate fclose() and introduce VIR_{FORCE_}FCLOSE()

Similarly to deprecating close(), I am now deprecating fclose() and
introduce VIR_FORCE_FCLOSE() and VIR_FCLOSE(). Also, fdopen() is replaced with
VIR_FDOPEN().

Most of the files are opened in read-only mode, so usage of
VIR_FORCE_CLOSE() seemed appropriate. Others that are opened in write
mode already had the fclose()<  0 check and I converted those to
VIR_FCLOSE()<  0.

I did not find occurrences of possible double-closed files on the way.
"
d596c6dc9b64ca0c910a87127de72ed2ef47b692,libvirt/libvirt,"new virSetUIDGID() utility function

virSetUIDGID() sets both the real and effective group and user of the
process, and additionally calls initgroups() to assure that the
process joins all the auxiliary groups that the given uid is a member
of.
"
56540950e73d331fc04443409c578e4354337309,libvirt/libvirt,"qemu: command: always use -chardev for monitor config

AFAIK there aren't any cases where we will/should hit the old code
path for our supported qemu versions, so drop the old code.

Massive test suite churn follows

Reviewed-by: Andrea Bolognani <3ada0bee826c753786fdbba72243dfba997094cf@redhat.com>
Signed-off-by: Cole Robinson <7cd45ff6ad1fb7cf556a02797d774247851499f8@redhat.com>
"
65532f4558abf88f80204762e29cfa8f8ee47ca3,libvirt/libvirt,"maint: improve tests distribution

* tests/Makefile.am (EXTRA_DIST): Sort, and add directories.
(SUBDIRS): Drop automake recursion into subdirs.
* tests/commanddata/Makefile.am: Delete.
* tests/confdata/Makefile.am: Likewise.
* tests/sexpr2xmldata/Makefile.am: Likewise.
* tests/xencapsdata/Makefile.am: Likewise.
* tests/xmconfigdata/Makefile.am: Likewise.
* tests/xml2sexprdata/Makefile.am: Likewise.
"
c94bb0427b46f2e7bad6b632c6908e54edec752f,libvirt/libvirt,"vboxDumpSharedFolders: return a value

The allocation errors in this function are already handled by jumping
to a cleanup label.

Change the return type from void to int and return -1 on error.

Signed-off-by: J√°n Tomko <4cab11cfb98d3c937327354a78eb07dbb6ee2bc6@redhat.com>
"
9838cad9cd9b7969162e4fe1546689e26af33902,libvirt/libvirt,"conf: use struct instead of int for each slot in virDomainPCIAddressBus

When keeping track of which functions of which slots are allocated, we
will need to have more information than just the current bitmap with a
bit for each function that is currently stored for each slot in a
virDomainPCIAddressBus. To prepare for adding more per-slot info, this
patch changes ""uint8_t slots"" into ""virDomainPCIAddressSlot slot"", which
currently has a single member named ""functions"" that serves the same
purpose previously served directly by ""slots"".
"
43e532d3218d56639cc762aaa5585bda374c710a,libvirt/libvirt,"Move cgroup setup code out of lxc_controller.c

Move the cgroup setup code out of the lxc_controller.c file
and into lxc_cgroup.{c,h}. This reduces the size of the
lxc_controller.c file and paves the way to invoke cgroup
setup from lxc_driver.c instead of lxc_controller.c in the
future

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
2005f7b55218cb2f05135feaab8d7d066d088bd9,libvirt/libvirt,"Rename buf.{c,h} to virbuffer.{c,h}

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
63834faadbdee72508f43ec5d6f34f5fdce5c7a8,libvirt/libvirt,"storage: Move readonly and shared flags to disk source from disk def

In the future we might need to track state of individual images. Move
the readonly and shared flags to the virStorageSource struct so that we
can keep them in a per-image basis.
"
4ea700d982f626af3ff540e2d3354a69ecf5466d,linq2db/linq2db,"Merge remote-tracking branch 'origin/master' into test-refactoring

# Conflicts:
#	Source/LinqToDB/SqlQuery/QueryHelper.cs
#	Tests/Linq/Create/CreateData.cs
#	Tests/Linq/DataProvider/OracleTests.cs
#	Tests/Linq/DataProvider/SapHanaTests.cs
#	Tests/Linq/DataProvider/SqlServerTests.cs
#	Tests/Linq/Linq/CountTests.cs
#	Tests/Linq/Linq/DynamicColumnsTests.cs
#	Tests/Linq/UserTests/Issue1164Tests.cs
#	Tests/Linq/UserTests/Issue1363Tests.cs
#	Tests/Linq/UserTests/Issue792Tests.cs
"
4d08745bf9568e40d8ef983ffb5356b2e9fc242d,linq2db/linq2db,"Optimized stack.
"
0de14543d9c50a4e3127052eb76fe49b37850b4c,mrdoob/three.js,"Renamed MeshPhysicalMaterial back to MeshStandardMaterial.
"
d821397c16a8cd997ad4c636c0fd81d1fc043c4d,mrdoob/three.js,"fixed #2728, Moved geometry primitives out of src/core into src/math.  src/core is now exclusive scene primitives.
"
e70380d1048e2589e8a9592bc18e279c85c36203,mrdoob/three.js,"WebGLRenderer: Code clean up.
"
f1d3105ca600da8cd089a36e2883d1dc2e75b731,mrdoob/three.js,"Refactored Light's shadow API.
"
cc2a20d411fe9d9c42e491604f36bc1d46e674ec,mrdoob/three.js,"Box3: Renamed .setFromBuffer to .setFromBufferAttribute
"
275f339a64b386e8c0d1575efa88c0cf28bc19be,mrdoob/three.js,"Clean up.
"
6fb5b91c4a3cced5843372313cbb65bcfa979d1b,mrdoob/three.js,"Updated scene format to use singular ""material"" property instead of ""materials"" array for meshes.

Bumped scene format version to 3.2

Modified correspondingly SceneLoader, SceneExporter, Blender scene exporter and example scene files.

See #2628
"
39db179b8266186afaaca1df65642debd877058f,mrdoob/three.js,"WebGLDeferredRenderer: made attenuation parameters properties of AreaLight instead of hardcoded constants.
"
5d90fb755447cd058895f83f510089480fdbae30,mrdoob/three.js,"Merge pull request #10627 from TristanVALCKE/FixCircularReferences

Fix circular references and improve closure performance"
63ec9dbfa812122324c34a66a455c045ba2b8ab0,mrdoob/three.js,"Reimplemented Undo/Redo for Scripts-Editor

Issues #29, #28

Removed CmdSetScriptName and CmdSetScriptSource => merged into
CmdSetScriptValue
"
74f28136562092487799b92656fff74033bbb58a,mrdoob/three.js,"Simplified *Light.toJSON()
"
72338e1b139b19249056db290ef1c10c43548772,mrdoob/three.js,"Merge pull request #13241 from donmccurdy/feat-gltfloader-buffergeometry-groups

BufferGeometryUtils: Add mergeBufferGeometries() helper."
9ed6562ea9d258a410f40bbb59807faa771c3ac3,mrdoob/three.js,"Merge pull request #6287 from JanWaller/dev

Use unified Log,Warn & Error handlers, rather than directly using console.error/warn/log"
bc75eba7f4b1e88f54069d7a97f565893f09eee9,mrdoob/three.js,"Editor: Saving panels collapsed state to localStorage.
"
92465c4e4cb89e3a4ee734d7d5c11d807c67d728,mrdoob/three.js,"Refactored ExtrudeGeometry.bevel to use less temporary vectors.

Didn't help much, there is still a lot of garbage collection showing up in profiler (~18 %).

Also, real hotspot are loops in Shape.Utils.triangulateShape (with ~27% of total time spend on Vector2.equal). This maybe could be refactored with hashmaps.
"
6b8d11c282d8092923616b600c8a6f3b7418eb57,mrdoob/three.js,"GLTFExporter: Rename padByte with paddingByte.
"
061505cbfa04bb3082e88844b34b5e13bc316c60,mrdoob/three.js,"Deprecated UniformsUtils. See #8016.
"
ea075f5595b8f42970559ebe3683c6e7acfd3768,mrdoob/three.js,"Renamed command names
"
87cf8392e8707b710e4260829aec4ddf72fab92e,mrdoob/three.js,"MD2 Clean up.
"
f8dc0a9335a18eda38bf028e54cca562ea11e0d5,mrdoob/three.js,"ObjectLoader: Refactored MultiMatrial cache code.
"
a79ac5e706d5fa9c6efcbc560e6f96f1f88628e5,ngageoint/scale,"issue #349: renamed to ingestRecordDetails, added click function from ingest records grid, and removed search control since searching will be done with the grid
"
c908df1524d6afabba02a9aea50e95ccb2728773,onap-sdc/sdc-ui,Merge branch 'master' into drop-down-patch1
c90b3a676384fc4c7d0e12eb1e3186a14a360208,openstack/kolla,"Merge ""Make Heka collect Keystone logs"""
a028c9ac50f39a04a1f7b0cf6a89e8321fc0e0c5,openstack/kolla,"Merge ""Make Heka collect HAProxy and Keepalived logs"""
4af4b1ec6f35fdc5b7687f5a7819bbab1fdb721a,openstack/kolla,"Remove dead code related to the Vagrant dev environment

The Vagrant dev environment is now in kolla-ansible so this code
is not needed any more in kolla repo.

Change-Id: I066f75057f03009810d2bb00ed09e832d328b52c
Depends-On: I6b56822d50472f8eda6fc60f69196d3c9b8b6cf8
Related-Bug: 1693847
"
dff2c6a6d0c9ae8b3fe99270f0736244a737aa72,openwrt/openwrt,"Update mac80211 and make b43 driver build and load on targets other than brcm47xx (#4266)

Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>

SVN-Revision: 13431
"
0658527e1ebe666cabde9267b6afbe543314160c,openwrt/openwrt,"switch to the new usbport LED trigger

This makes init.d script handle existing UCI entries using the new
trigger. It also switches all targets to use its package.

Signed-off-by: Rafa≈Ç Mi≈Çecki <68396d1faf4100deae824f26e1be60d81c1ce164@milecki.pl>
"
80829022b044d2109056b5e6e35bf16b9daf0719,openwrt/openwrt,"ramips: add support for the HNET C108

The HNET C108
(http://www.szhwtech88.com/Product-product-cid-100-id-4374.html) is a
mifi based on MT7602A, which has the following specifications:

* CPU: MT7620A
* 1x 10/100Mbps Ethernet.
* 16 MB Flash.
* 64 MB RAM.
* 1x USB 2.0 port. Only power is connected, this port is meant for
charging other devices.
* 1x mini-PCIe slots.
* 1x SIM slots.
* 1x 2.4Ghz WIFI.
* 1x button.
* 6000 mAh battery.
* 5x controllable LEDs.

Works:
* Wifi.
* Switch.
* mini-PCIe slot. Only tested with a USB device (a modem).
* SIM slot.
* Sysupgrade.
* Button (reset).

Not working (also applies to the factory firmware):
* Wifi LED. It is always switched on, there is no relation to the
up/down state or activity of the wireless interface.

Not tested:
* SD card reader.

Notes:
* The C108 has no dedicated status LED. I therefore set the LAN LED as
status LED.

Installation:
The router comes pre-installed with OpenWRT, including a variant of
Luci. The initial firmware install can be done through this UI,
following normal procedure. I.e., access the UI and update the firmware
using the sysupgrade-image. Remember to select that you do not want to
keep existing settings.

Recovery:
If you brick the device, the C108 supports recovery using TFTP. Keep the
reset button pressed for ~5sec when booting to trigger TFTP. Set the
address of the network interface on your machine to 10.10.10.3/24, and
rename your image file to Kernal.bin.

Signed-off-by: Kristian Evensen <ed4b9e36d7b45c95d901f5fd73a0ec1ecb6083b0@gmail.com>
"
fcc67b55b1aeb7943f4cb3621d349da7764e4bbd,openwrt/openwrt,"move common CONFIG_MMC entries to generic

SVN-Revision: 17948
"
0393e52623d65915d177829d3034c2f2878c4a56,openwrt/openwrt,"netifd: Rewrite IPv6 prefix assignment * Add ip6hint option to specify assigned subprefixes * Add preliminary support for RFC 6603 prefix exclusion

SVN-Revision: 36193
"
37a8f3522fcfb961c94f102b4a5d9ad936d04de7,openwrt/openwrt,"Move CONFIG_LZMA_{DE,}COMPRESS to generic config

It is selected by CONFIG_JFFS2_LZMA which is set in the generic config.

SVN-Revision: 21437
"
7f9f42d42eff837d2eca5b4862cbb3b1ccebbefd,openwrt/openwrt,"ar71xx: add support for ALFA Network AP91-5G

ALFA Network AP91-5G is a 5 GHz outdoor AP/CPE board, based on Atheros
AR7240 + AR9280.

Specification:

- 400/400/200 MHz (CPU/DDR/AHB)
- 32 MB of RAM (DDR1)
- 8 MB of FLASH (SPI NOR)
- 1x 10/100 Mbps Ethernet, with passive PoE support (24 V)
- 1T1R 5 GHz (AR9280), with ext. PA (SE5004L) and LNA, up to 27 dBm
- 6x LED (5 are driven by GPIO)
- 1x button (reset)
- external h/w watchdog (EM6324QYSP5B, disabled and not used)
- header for optional 802.3at/af PoE module
- DC jack for main power input (optional, not installed by default)
- UART and LEDs headers on PCB

Flash instruction:

Use ""factory"" image in vendor GUI (in case of problems, make sure your
board has up to date firmware). Alternatively, TFTP in U-Boot can be
used: select option ""2. Load system code then write to Flash via TFTP""
during early boot and use ""sysupgrade"" image.

Signed-off-by: Piotr Dymacz <a417921c44df4ef794596f685bcb77437ecb1bc6@gmail.com>
"
342946d8580d1284d7ece9893be8da2fadce46fc,openwrt/openwrt,"ar71xx: use uimage split for dlrtdev

Signed-off-by: Felix Fietkau <nbd@openwrt.org>

SVN-Revision: 37302
"
eb896ce900cf69fdb2afb876dbda3a26be4f7895,openwrt/openwrt,"mac80211: reorganize patches

SVN-Revision: 33289
"
6bff4562123b54603b741b42267bc1e83b38077c,openwrt/openwrt,"ar71xx: enable uimage split for wzr-hp-ag300h/wzr-600dhp

Signed-off-by: Felix Fietkau <nbd@openwrt.org>

SVN-Revision: 37294
"
18ec16ced556ee8055ab565020ec2a08161217fe,part-up/part-up,"Ft discover redesign (#769)

* feat(networks-discover): added searchindex to network name and description

* feat(networks-discover): added Networks.findForDiscover with all needed search options

* feat(networks-discover): added /tribes/discover routeComposit

* feat(network-discover): added count route

* feat(network-discover): added network helpers to crud partup_names

* feat(network-discover): updated all methods where partup name changes to update the array in the network

* feat(network-discover): added migration to update all current networks with their partup names

* feat(network-discover): search for partup names in networks

* refactor(discover): discover layout refactored

* feat(discover): added discover/partups and made the /discover default to tribes

* feat(discover): tribes discover

* feat(discover): added tribes discover and refactored partup discover to new layout

* fix(discover): implemented sort filter and infinite scroll

* fix(discover): added recommendations button to discover tabs

* fix(discover): added correct classes to recommendations button

* fix(discover): Temporarily disabled network discover

* fix(infinite-scroll): fixed the trigger-happy infinite scroll
"
37440f20a1bc524671cf5d11301ccc89ffb2b523,part-up/part-up,"Merge remote-tracking branch 'origin/master' into ft-react-app-start-page

* origin/master: (139 commits)
  chore(release): bump package version and update changelog
  feat(upgrade): Upgraded node in docker file
  feat(meteor): Update to Meteor 1.6
  fix(boardview): Replace timeout by loading state
  Updated locale file phraseapp.nl.i18n.json
  Updated locale file phraseapp.fr.i18n.json
  Updated locale file phraseapp.en.i18n.json
  Updated locale file phraseapp.de.i18n.json
  Updated locale file phraseapp.hr.i18n.json
  Updated locale file phraseapp.nl.i18n.json
  Updated locale file phraseapp.fr.i18n.json
  Updated locale file phraseapp.en.i18n.json
  Updated locale file phraseapp.de.i18n.json
  Updated locale file phraseapp.hr.i18n.json
  chore(release): bump package version and update changelog
  fix(meteor): Set default value for files
  fix(subscription): Set default value for images to empty array
  fix(subscriptions): (Re)move and replace subscriptions
  Updated locale file phraseapp.nl.i18n.json
  Updated locale file phraseapp.fr.i18n.json
  ...
"
d207fb3ab0b533a557a24c9fbf50d0d071c897ae,part-up/part-up,"refactor(home): stripped homepage and started work on the header, also seperated all segments into their own components
"
a2ee68593e3f05a24b5d87cf315a27619e332b3a,percy/percy-web,"Upgrade ember to 2.13.2. (#121)

* Upgrade to ember 2.13.2.

* Upgrade ember-source.

* Restore missing upgrade items.

* Update ember-cli-mirage

* Remove deprecated Ember.MODEL_FACTORY_INJECTIONS

* Upgrade ember-cli-mocha ember-cli-moment-shim ember-moment glob morgan

* Upgrade ember-cli-dependency-checker ember-concurrency

* Upgrade ember-cli-htmlbars

* Reset yarn.lock file

* Remove unused ember-data-factory-guy
"
5b7278764c89c1823156c4bb71350fb0a9bede9e,prestodb/presto,"Add support for range predicate pushdowns

This work is a complete refactor of how we generate Partitions in the planning/execution phases.
Instead of generating Partitions after planning, we now integrate the generation directly
into the optimization planning phase so that we can iterate our plan based on data returned
by the Partitions that we discover. This not only provides a number of opportunities for
optimization, but also significantly simplifies the amount of cross-talk between the
split generation and the planning phases. As a result of these changes, it makes
it much easier to build native range predicate push downs.
"
b256e7a62c4d5b2f5b10faf889c893a62ec4f9c4,prestodb/presto,"Use createUnboundedVarcharType in Hive connector

Use explicit VarcharType.createUnboundedVarcharType instead of VarcharType.VARCHAR
constant in Hive connector.

Varchar type should always be parametrized, and it must be checked with
`Varchars.isVarcharType(type)` instead of `type.equals(VarcharType.VARCHAR)`,
so the varchar with the length less then MAX_LENGTH is being handled properly.

Having the `VarcharType.VARCHAR` constant is confusing and error prone, cause it
suggests user that the only one single unparametrized `VARCHAR` type is available.

After refactor all the other connecotors and `VARCHAR` operators that constant
must be removed at all.
"
804be1afe3a5a88c035ef6aeec76fdb033c8bb92,prestodb/presto,"Replace ColumnType with Type
"
0ed36a95d3974bff8db759830add6bf4bfeb458e,prestodb/presto,"Add more data to sys.query and sys.task

Rename heartBeat to heartbeat
"
8ac4b8466a7db96d9941e27cecf7aaf64c85bfaf,prestodb/presto,"Use JVM time zone rules in Joda

Mixed use of joda and java.time results in two different versions of
tzdata being used at the same time for a query. This has lead to
inconsistencies that had resulted in incorrect query results, and
query execution failure.

This commit makes joda and java.time use the same tzdata by making
joda delegate to java.time for all time zone rules.
"
6eb44ccf7deeea8006ff73b98c0063d084391bed,prestodb/presto,"Extract StatusPrinter
"
7b404d56da253bd97ca6a573fc79223f902aa61f,project-ncl/pnc,"[NCL-1109] Refactor build coordinator

Remove BuildTasksTree
Update test cases
Remove jboss-common-core dependency
"
6716d84fcb65b5d2b996466233cd93bf9136febd,project-ncl/pnc,"Remove unused buildSetStatusChangedEventNotifier local variable
"
f70ad289a9838beeefb0f39c638cd9b12b47337a,project-ncl/pnc,"[NCL-1281] Refactor artifact model

Fix relation between artifacts and build record so that a single artifact can be a
dependency of multiple build records.
"
2e1fd5fa8460102b21188cc98663a4a510fa2506,project-ncl/pnc,"Renamed ProjectBuildConfiguration -> BuildConfiguration; ProjectBuildResult -> BuildRecord
"
57142dea6f1301726b4e5b0c7da78059f9940032,project-ncl/pnc,"after megre cleanup
"
e79e11dfca3b38191ccd37047f7cf622ef1869bb,project-ncl/pnc,"Removed unnecessary data- prefixes on ng attributes
"
f60184e36b7643936ec25915e9fbd72b57ffe3f0,project-ncl/pnc,"Extract build executor from coordinator.
"
74f04b2226620cc01ea14064ef96018d56971de1,project-ncl/pnc,"NCL-2293 ssh credentials moved to rest api
"
bf9cea99c15698d8392f85fef62cad6144955c29,project-ncl/pnc,"[NCL-1109] Improvements based on feedback from initial PR
"
4e77d8896339221aeb2199b5be6eaff4b3a74068,project-ncl/pnc,"NCL-1032 refactored common -> split into 2 modules
"
53770f678fc99f7e72bf90d6794ff77f9c08862f,project-ncl/pnc,"Re-added beginnings of rebuild build-config module, now using ui.router and removed faulty directives
"
4ff8f90755fe31cae1d59ff92bd4e324ea725b35,pymedusa/Medusa,"vueify start of showheader (#5087)

* vueify start of showheader

Signed-off-by: Alexis Tyler <e88b9d37b08158b49354fd85a3c4e095e065bc76@wvvw.me>

* lint

* rebuild themes

* moved seasonEpisode to showheader and vueify

* vueify showheader summary

Signed-off-by: Alexis Tyler <e88b9d37b08158b49354fd85a3c4e095e065bc76@wvvw.me>

* reflow page on show change and vueify hiding div

* lint

Signed-off-by: Alexis Tyler <e88b9d37b08158b49354fd85a3c4e095e065bc76@wvvw.me>

* Fix subtitles in show-header

* review

* review

Signed-off-by: Alexis Tyler <e88b9d37b08158b49354fd85a3c4e095e065bc76@wvvw.me>

* vueify show.genres

Signed-off-by: Alexis Tyler <e88b9d37b08158b49354fd85a3c4e095e065bc76@wvvw.me>

* review

Signed-off-by: Alexis Tyler <e88b9d37b08158b49354fd85a3c4e095e065bc76@wvvw.me>

* convert Default EP Status and fix snatch selection reverse/dedupeGenres

* fix season pack search showing episode

* review

Signed-off-by: Alexis Tyler <e88b9d37b08158b49354fd85a3c4e095e065bc76@wvvw.me>

* Rebuild

* Fix snatch selection:

- IMDB tooltip
- Remove unused IMDB stars jQuery function
- reflowLayout after `show` changes
- Update load/resize event handlers

* vueify link to show on indexer

* Fix `Display Specials` not showing up

* Fix `images/null` warning

* Update changelog
"
1fe82bed4b865a30d33eb92107a4715f1ce7712a,pymedusa/Medusa,"Update subliminal to latest version (c3c0c45)

# Refactor some code
# Improves legendastv
# Fixes podnapisi url
"
c8f889a593ad5ca765394c41a7f1beb120285e2b,pymedusa/Medusa,"Merge pull request #1961 from miigotu/indexer-fix

Limit newznab searches to 400 results, clean up logging"
d944bc055618892bb5eae516152a68f3044c3971,pymedusa/Medusa,"Refactoring issue submission and log files reader (#945)

* Refactoring issue submission and log files reader

* No need to sort errors since they're already sorted

* Removing print statement from logger.py

* Fixing issue title

* Fixing missing docstring

* Removing useless test

* More logging improvements

* Adding log filter by period

* Fix for #592: tornado logging

* Allow logging reconfiguration without the need of restart

* Log reconfiguration on the fly

* Improving issue submitter to list repo issues only one time. Increasing similar issues period to 6 months

* Refactoring duplicated logic in cmd logs in api v1. Improving read_loglines to accept predicate and formatter functions.

* Missing max_lines parameter in read_loglines. Change log default to 24h (only when first opening the page)

* Default api cmd_logs level as INFO not ERROR

as in viewlogs

* Adding links to issue submission

* Fixing log_re when logline contains extra/provider_name

* Adding APP SUBMITTED back to issue reporting

* Adding more tests for issuesubmitter and logger

* Fixing failing test

* Moving loggers initialization to init_logging to avoid import errors

* Adding some more tests
"
7eaa6c5fb073cc15e724572f880839a1570ad364,pymedusa/Medusa,"Merge pull request #309 from MGaetan89/tests

Move findCertainShow() to sickrage module and add tests"
24ddc49daa0774a2330754a312e2759945ae8fe0,pymedusa/Medusa,"Fix snatch same proper over and over (#528)

* Fix snatch same proper over and over
* Moved the remove_strings into the remove_non_release_groups() function. Improving maintainability. Made it optional using args. (#559)
* Removed all the camelCase vars, where possible.
* Added ""[req] "" as prefix that needs to be removed in removewords.
* Moved the [REQ] to non_release_names
"
7524262fea784816b083105f6310add75e99b932,pymedusa/Medusa,"Vueify IRC page (#5089)

* Vueify IRC page

* Update changelog

* Add test

* Rename `gitUserName` to `gitUsername`.

It's the correct spelling of the noun.
"
e11deb67d95f614f6ed0b2a9f63622e4c0481b8c,pymedusa/Medusa,"Replace all instances of searchURL for search_url in providers
Rework cpasbian, but it is blocking us with CF with the js page, disabled in code until it can be resolved
"
033431077ae77981f1b38c66cc7186658cde6331,pymedusa/Medusa,"More quality improvements (#1709)

* Improve should_replace method

* More tests
"
88e8ff59bdee2d143a49799a0efeaeb2314ff3bf,pymedusa/Medusa,"added more css to bower, removed unused fonts/libs
"
8004685d3f6926083612c4e7096c08a9c5668ef9,pymedusa/Medusa,"Re-wrote the indexerApi wrapper, was causing a bottlekneck
Fixed bug when show folder is deleted before being deleted from SB
New Show searches now confirm results have a valid firstaired date
"
222c79d4249ad46d8a1e558c5dc1855e92653c7c,pymedusa/Medusa,"Refactor Shutdown.py -> shutdown.py
"
0e9c4407065fbb3cabd310a1a82ed17d1c1e00cd,pymedusa/Medusa,"Refactor ehandler.py -> exception_handler.py
"
6022535188ae44113850b3b09714b2a27e45d2ad,pymedusa/Medusa,"More renamings 2
"
ef8e7de24a8dc54b57a4dfd19e0a47a468e4efb1,pymedusa/Medusa,"Refactor searches (#797)

* Refactor search -> search/core

* Refactor searchBacklog -> search/backlog

* Refactor dailysearcher -> search/daily

* Refactor manual_search -> search/manual

* Refactor properFinder -> search/proper

* Refactor search_queue -> search/queue

* Refactor

* Fixing flake8 issues

* Remove unused import
"
77a22112d3d874841516866f5478b0e1a5c73f2a,pymedusa/Medusa,"Added decorator to fallback to plex tvdb mirror with tvdb is down (#2375)

* Added decorator to fallback to plex tvdb mirror after 3 failures/exceptions.

* Moved the initial authentication out of tvdb. And moved it into the @fallback decorator.
Meaning on every call it will perform a check if it has the search_api attribute.
Note! Need to check if I can do this, and don't need to reauthenticate.

* removed the tvdb_connect_failures_count, as i'm now directly switching over to plex mirror.

* Disable self.create_indexer() call as it's not needed in that method.

* Removed the tvdb_connect_failures_count references.

* flake

* Change default fallback timer to 3 hours.
* Added notification for user when falling back.
* Added notification for user during fallback with the remaining fallback duration.

* Changed apikey back to the working key.
I changed this to test fallback.

* Added plex fallback configuration settings.
* Created a new section in general settings, specifically for indexers.
* Added settings to disable fallback, change timeout and enable/disable notifications.
* Removed mismatching string format parameters.
* Settings are taking effect whereever the indexer api object is not cached. We need to initialize a new instance for it.

TODO:
* notification settings is not working
* fallback timeout incorrectly showing in general settings form.

* * Enable the option to disable notifications. For now only enabled for the recurring notifications. When we initially switch to plex fallback, we still show it.
* Renamed option.

* Committed the bad api key again.

* Replace urllib3 with requests in tvdbapiv2 lib.

* Moved the tvdb libs search, series, update objects to session object.
Needed to change the api_client.host when switching to alternate tvdb proxy.

* Restored api key (testing)

* Changed iteritems -> items (py3 comp).
Flake fixes.

* flake

* Added optional param to jwt auth hook. As it needs to be able to be used with a fallback url.

* Moved tvdb api key to app.

* Moved tvdb api_client to session.
* re-initialize auth hook when falling back to plex. And reinitialize when returning back to tvdb.

* Removed blank line.

* Flake.

* Fix trakt recomm shows.

* Also log when using plex (#2594)

* Disabled ssl verify on the jwt token refresh.
This needs to be reverted before the PR is merged!

It's useful for testing. As when you use fiddler to autorespond with a 503, you will have to handle the self signed fiddler certificate.

* Moved all of the fallback code (inclusive configuration) to Class based decorators.
* Configuration is now fully attached to the session.

* Fixed some merge conflicts after rebase.

* Removed plex_fallback settings from indexer_config and indexer_base, as we're controlling the settings directly in the session object.
* Fixed rebase conflicts.

* Flake.

* flake
"
0209852af5c4af2bacfd5759f1bea6325b03e62d,pymedusa/Medusa,"Fixed issues with network timezone downloads crashing on a empty return.
Changed version checker url and moved code to Home class.
Fixed WebUI issues caused by calling redirect method.
Fixed update checking issues, added no cache header.
Fixed WebAPI builder issues with show.delete cmd.
Fixed article sorting for both WebAPI and WebUI.
"
d9bfda3772770f9840a9f031c4b33a8e2b3594f0,pymedusa/Medusa,"Rename references to SiCKRAGETV to SickRage
"
8bd740179469f2281588cc8e2859d7dc7fb0e025,pymedusa/Medusa,"Merge pull request #1397 from pymedusa/refactors

Refactor showUpdater.py -> show_updater.py"
c2685871bc3d6587583ada3545432be41104770f,pymedusa/Medusa,"Added a new partial for the showheaders of displayShow and snatchSelection pages.

* Needed to add a few queries to the snatchSelection handler, as those wheren't ported to the existing page, and are now by the partial.

* Fixed the top and bottom spacing of the buttons. Removed btn-xs from classes, as that's not used.
"
12a99cd1da8de76d4f88ed46818c65fdc946e38a,pymedusa/Medusa,"Improve loading of config_general.mako (#885)

"
34ec2cb0c5d375cf36d15b307e9ebdb6c87c3fd3,pymedusa/Medusa,"Moved more js to own files
"
68ceb38e9367d43eafca62f024fc56e8796a0f1a,pymedusa/Medusa,"Move News, IRC, and Support to Tools menu

Also reorganize the menu a bit and add a couple dividers.
"
de4b5a1b4279ea4b109689ccd6aff308bd62ca4f,pymedusa/Medusa,"Refactor file-browser component and use in select pages (#4348)

* Start changing file-browser making it support multiple file-browsers on the same page.

Not working, but it's a start.

* Fix the file-browser.mako for usage with multiple file-browser components on one page.

* Use file-browser.mako component for config_search.mako.
Fixed file-browser locations losing backslashes on windows.

* Fix file-browsers titles.

* Synced themes.

* Need to close the component tag.

* Review comments

* Set initial value for currentPath in data()

* Emit as 'update' not 'update:location'

* Remove unused file-browser `id=`s

* backuprestore: Use local-storage-key, update titles

* Fix browser dialog location and update initialDir watch

* Refactor file-browser

- Minor adjustments
- Split into methods
- localStorage and browse button
- Fix showBrowseButton option
- Simplify toggle folder icon
- Remove options and defaults, fix autocomplete for files
- Probably some things I forgot to write

* Use `json.dumps` on config_search.mako ...

and fix torrent download and seed location browsers

* Fix NZB Search bugs
"
36643acf5e761c715c6e1fde647baa18c8eb54c3,pymedusa/Medusa,"Added TVRage support to our scene numbering lookups.

Tweaked our API's HTTP Handlers for better performance.

Fixed a bug in metadata parser that was preventing TVRage shows from getting images.
"
29da4200408336de4f1ea81a125fb0fe7833cb79,pymedusa/Medusa,"Merge pull request #2104 from pymedusa/feature/code-cleanup-3

Clean up tv package"
75791a61ba3aa9335b629bfff7527f0d5c05ba78,pymedusa/Medusa,"Refactor ComingEpisodes.py -> coming_episodes.py
"
214a922359574a8b1253347447863a4e062faff1,pymedusa/Medusa,"Merge pull request #476 from SickRage/remove-archive-first-match

Remove archive on first match, it is replaced by comprehension method‚Ä¶"
55b472b377f5e6c89142eb3c211602ceb1084f3b,pymedusa/Medusa,"Split composite status into status and quality, add Unknown as valid quality (#4221)

* Added ep_status and ep_quality to tv_episodes table

* Replaced ep_status and ep_quality with status and quality.

* Adapted Episode class to use separated status and quality.

* -1 is also a valid status.
* Missed self.quality.

* Refactored most of the composite statussus / quality into separate attributes.

* Missed quality field in query

* -1 is not a valid default quality.

* Fixed default init of quality.

* Fix call to overview status.

* Adapted the history table.
Action will include the status, quality (hasn't changed) but will include quality.
Action will only have status, quality has been removed from it.
* Changed show/history.py, to include quality. As we can't get it from action anymore.

* Synced template changes.

* Fix trying to iterate int

* Update should_search. Requires 4 arguments now

* Fix schedule page

* Fix backlog overview

* Fix queries with references to Quality.STATUS.
Replace other occurrences of Quality.STATUS.

* Fixed some typos.

* Reset quality UNKONWN to NONE.

* Fixed get_overview() calls.

* Removed some more composite_status method calls.

* Fix snatchSelection page. Missed quality in select.

* Changed sql query DDL, to uppercase.

* Convert all status on each startup to status/quality.
This to keep the db sane, while changing all the composite statusses.

* Finish conversion of APIv1 funny code

* Remove last few split_composite_status

* Completely remove Quality.{status} from mako

* Missed one quality compare in series

* Fix status check in subtitles

* Reorder subtitles imports

* Make UNKNOWN the lowest possible quality

* Hide N/A from displayshow and backlog, fix quality comments

* Make default quality explicit

* Rename update_state to update_status_quality

* Fix old statusPrefixes reference

* Update comment

* Add GROUP BY, to make the transition queries a little bit more efficient.

* Transform failed.db/history: old_status to status + quality fields

* Fix bug in failed.db history migration.

* Finish failed_db upgrade

* Small fix

* Remove unused functions

* Clear provider tables for cache.db, lint sql a bit, finish db upgrade

* UNSET status should always have NA quality

* Fix APIv1 show.stats

* Fix most tests

* Fix remaining tests

* flake8

* Remove old Unknown Quality hacks

* Update tests and add cases

* Fix SQL statement

* Put provider name in quotes. Thanks @sharkykh

* Add space in SQL query

* Fix qualities not showing after a manual snatch

* Fix status compare. Thanks @sharkykh

* Use explicit status/quality instead of integers

* Improve log message and doc

* Improve trakt_checker.py coding style

* Compare quality value instead of name

* Removed extra space from SQL query

* Fix doc in series, remove try_int and or

* Renamed logSubtitle to log_subtitle

* Remove superfluous parenthesis and variable

* Fix APIv1 history call. Thanks @sharkykh

* Move handling unknown qualities to ShiftQualities migration

* Remove fix_status_qualities sanity check

* Update <InitialSchema>s

* Update AddSeparatedStatusQualityFields migration

* Remove commented out convert_archived_to_compound sanity check

* Fix for new databases

* Fix typo

* Remove composite_status_quality from Quality class

* flake8

* Improve Unset status comment

* Remove super-ugly --------------- option

* Fix default status on failed.db history table schema

* Fix composite_status splitting

* Update to_guessit_format code and explaination

* Update Quality.to_guessit docstring

* Use status constants in SQL queries

* fix import order

* Fix inconsistency with ""file name"" column and episode number tooltip

* Update Series.refresh_dir

* Set status to app.EP_DEFAULT_DELETED_STATUS if episode file was delete and old status was ARCHIVED or DOWNLOADED or IGNORED or SKIPPED

* Add some episode attributes that should be reset if a file is deleted

* More inconsistencies in displayShow

* Restore compact history functionality

+ fix quality sorting

* Remove redundant quality from CompactItem

* Should fix N/A quality in displayShow, thanks @medariox

* Remove superfluous check

* Fix Overview referenced but not imported.

* Fix allowed_qualities referenced before assigned.

* Cast whichStatus to int.

* Fix DB upgrade with older DBs, improve upgrade logging

* Indent manage_episodeStatuses.mako

* Gulp sync
"
481b01906427501474c89b1592ade3ae15edac21,pymedusa/Medusa,"Merge pull request #1777 from pymedusa/feature/rename_functions

Rename helpers and common.py functions to lowercase"
7d4cd68d4f163208f0c503930c6ac456586c3346,quintel/etmodel,"renamed WKK's and WKKs to WKK and CHPs to CHP or CHP plants. Closes #1294.
"
a7d544424c40d600d6caa1407b6823087a07998d,ray-project/ray,"[tune] Experiment Management API (#1328)

* init for exposing external interface

* revisions

* http server

* small

* simplify

* ui

* fixes

* test

* nit

* nit

* merge

* untested

* nits

* nit

* init tests

* tests

* more tests

* nit

* fix hyperband

* cleanup

* nits

* good stuff

* cleanup

* comments and need to test

* nit

* notebook

* testing

* test and expose server

* server_tests

* docs

* periods

* fix tests

* committing test

* fi
"
d3697ce4e1b435066b40270b19f479cb708a2540,ray-project/ray,"Ready queue refactor to make Dispatching tasks more efficient (#3324)

* put queues outside

* working version, still needs to be optimized

* implement round robin

* proper round robin

* fix spillback

* update

* fix

* cleanup

* more cleanups

* fix

* fix

* add documentation

* explanation for hash combiner

* speed it up

* cleanup and linting

* linting

* comments

* Update scheduling_queue.h

* temp commit

* fixes

* update

* fix

* cleanup

* cleanup

* lint

* more prints

* more prints

* increase sleep

* documentation

* sleep

* fix

* fix

* sleep longer

* update

* fix

* fix

* fix

* Add ordered_set container.

* Fix

* Linting

* Constructors

* Remove O(n) call to list.size().

* fixes

* use ordered set

* Fix.

* Add documentation.

* Add iterators to ordered_set container implementation.

* iterator_type -> iterator

* Make typedefs private

* Add const_iterator

* fix

* fix test

* linting

* lint

* update

* add documentation

* linting
"
8c4bfcc58da21d4f95c50623e8f46bfae489c745,realm/SwiftLint,"Merge branch 'master' into identifier-rule

* master: (44 commits)
  make valid_docs rule opt-in
  update LineLengthConfiguration.consoleDescription after #1264
  small refactoring after #1264
  fix for_where violation in CompilerProtocolInitRule.swift
  Add for_where rule
  explicitly set podspec dependency versions
  Add changelog entry
  Fix existing violations
  Navigate substructure even for different kinds
  Small style changes
  Modified so that kinds(forByteOffset:) does not require a separate filter() setup of the results
  Changes from PR feedback. Long comments following code in a line will now trigger,  configuration will now fail if invalud value types are set for options
  Fix false positive on large_tuple when using generics inside a tuple
  fix wording in changelog
  disable docs rules in Swift 2.3 and later
  Fix deadlock when stderr fills up OS buffer
  small Danger/oss-check improvements
  Fix links
  Fix cleanup
  Always use Xcode reporter on oss-check
  ...
"
b3624c470792e16e5313e913e7d5da9a48b515b4,realm/SwiftLint,"Merge pull request #185 from realm/jp-rule-description

Perform major refactor of rule description, identifiers and examples"
f5a0f92647cd48cf7fa4ec9fa08dffcaf552ddf0,rematch/rematch,"WIP - plugins api refactor
"
cf66fdacc229f53bd2e33db57db06bc9616d6e80,saulpw/visidata,"EscapeException status cleanup
"
99698d04132a99c27c69ee1a55a288f2b25d38ed,sdl/dxa-modules,"Automatic merge from release/1.0.0 -> develop

* commit '3fde400fa07e4c9a6ac2f2b3e45cad92a535b870':
  KCWA-321 Navigate to root off application when clicking on Home inside breadcrumbs / SDL icon inside top bar
  KCWA-321 Fixed index redirects
  KCWA-321 Update mock data for toc
  KCWA-321 Renamed Html to HtmlUtil
  KCWA-321 Changed HtmlProcessException type to RuntimeException
  KCWA-321 Removed maven-compiler-plugin from ish module pom + added version info for maven compiler plugin in the root pom
  KCWA-321 Set correct context path for Url for Toc api
  KCWA-321 Fixed merge issues
  KCWA-321 Updated mocks
  KCWA-321 Fixed UI implementation
  KCWA-321 Updated mock data
  KCWA-321 Removed useBasename from history
  KCWA-321 Added some more code documentation
  KCWA-321 Process topic body links in case context path is not set to the root
"
c18a14bf66ccc56b925d469d3a9bd739551f1d0b,sdl/dxa-modules,"Merge pull request #202 in KCWA/web-app from subtask/KCWA-366 to feature/KCWA-73

* commit 'a8d8008527d86fbeefd7f678caa45ed86f39caca':
  KCWA-366 updated test
  KCWA-366 based on review;
  KCWA-366 Attempt to make createNode function readable.
  KCWA-366 added hack to show an error in the Toc item
"
5f7395095495b736726134788c454d07d34059c8,sdl/dxa-modules,"Merge pull request #49 in KCWA/web-app from subtask/KCWA-161 to feature/KCWA-74-React-router

* commit '1a0f856253663bc6f39f75d939f8fdad095bc013':
  KCWA-161 Added some tests to increase code coverage
  KCWA-161 Removed IRouting + all off it's implementations
"
06b1d1d0ced71211f9b58e9f33f5ce1f1ad06cc6,sdl/dxa-modules,"Merge pull request #48 in KCWA/web-app from feature/KCWA-162-Rename-AppWrapper to feature/KCWA-74-React-router

* commit '23f86038497381419bc7942d73842f7c50404572':
  KCWA-162 | Rename AppWrapper and App components
"
9e338572997510630f8efbd9cdfadc6c9c23c117,servo/webrender,"Introduce GPU resource cache.

This adds an incremental LRU cache that can be used to store values
that vertex shaders need to access.

The intent is to replace the use of the GPU store type, which
currently uploads the entire buffer each frame, and has a lot
of limitations (such as requiring allocation up front).

The new interface supports building GPU data on demand, as required,
which will improve CPU a lot for large pages.

For now, I have ported borders and rectangles to use the new type.
The patch is already large enough - this will allow us to port
each primitive type to use the GPU cache incrementally. The current
code also doesn't actually take advantage of building the data on
demand yet - they are just copied when needed.

Follow up work includes:
 * Porting more types to use the GPU cache.
 * Removing the old gpu store interfaces.
 * Profiling and optimizing various GL incremental update APIs.
 * Supporting resizing of the GPU cache backing store.
"
7b5a93d41f99788bb378880d2db0b44896a1b63b,servo/webrender,"Reduce per-instance size from 32 -> 16 bytes.

Add a new PrimitiveHeader concept, which contains all the common
information for a given primitive (such as scroll node, render
task, z value etc).

Instances contain an index to the primitive header, and read the
information from that. This allows the instance size to be
halved. There is a slight extra vertex shader cost, due to
an extra indirection. However, this was not apparent in any
profiling I did, since the vertex shader time typically makes
up a very small amount of overall time. Additionally, the
primitive header texels are likely to be in the texture cache
for each glyph that is fetched. A possible future improvement
is to remove that extra indirection by writing some of that
data, such as the render task address, directly into the primitive
header.

On sites such as nytimes.com or wikipedia.org, where there are
typically a large number of glyphs, this saves several hundred
kB per frame of data being sent to the GPU, which improves the
compositor / driver CPU time.

Also remove the local_clip_chains vector and texture. Now, we just
calculate this as part of the primitive header and include it
there. This can save significant amounts of texture upload on
pages that have a lot of clip chains or clip nodes, relative to
the visible primitive count.

In future, both the PrimitiveHeader and instance structures can
easily be further compressed again, but this can be done as a
follow up.

Finally, although this is a useful optimization by itself, it's
mostly prep work for some changes I have planned related to
how we store and upload scroll nodes. Hopefully these changes will
be both an optimization and make it easier to fix some of the
correctness issues we have with nested 3d transforms.
"
c2015a7df5cbdcc33b3fdf62dcaef31a4f46f44e,servo/webrender,"Auto merge of #2245 - lsalzman:synthetic-italics, r=lsalzman

implement synthetic italics with a skew transform on all platforms

This tries to implement synthetic italics in a way that is compatible with how Gecko does it. That means we no longer use the myriad backend APIs for this, but instead supply skew transforms for the outline that match the transform Gecko is using for metrics.

FreeType requires a bit of extra care in that transforms only apply to outlines and not to bitmaps. So bitmap data must unfortunately be manually transformed to accomplish this.  However, FreeType's own synthetic italics mechanism did not work for bitmaps at all either, so this rewrite was a necessity there anyway. The Windows/Mac backends take care of the bitmap data transforms themselves, so we at least avoid the complexity in those.

<!-- Reviewable:start -->
---
This change is‚ÄÇ[<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/2245)
<!-- Reviewable:end -->
"
7fa14aed08db63e15569b47a57a910f8a62222be,servo/webrender,"Combine texture creation and initialization into the same API.

Differential Revision: https://phabricator.services.mozilla.com/D8165
"
f685027ab34ac057b177217680af4bfee1c3f32b,servo/webrender,"Auto merge of #2623 - kvark:shader-module, r=glennw

Separate primitive shaders from clip shaders

Includes #2622

Note: this is not done because I'm bored.
The problem Szeged team has bumped into is that `aDataX` attributes end up being used in the shaders they don't relate to (e.g. clip shaders). This isn't affecting GLSL but it does affect GLSL -> SPIRV -> XXX shader pipelines.

The solution I came up with involves moving parts of `prim_shared` into separate shared modules, and turning `clip_shared` into a catch-all header of clip shades.

Downsides: more shader modules (but not programs) to navigate between.
Any suggestions on alternative solutions are welcome ;)

<!-- Reviewable:start -->
---
This change is‚ÄÇ[<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/2623)
<!-- Reviewable:end -->
"
3669b8e9183ee761693ca32e9d53dd639462309d,servo/webrender,"Move per-font-instance parameters from GlyphKey to FontInstanceKey.

This is prep work only. It splits fields up into a separate struct
that has values that change per-font-instance vs per-glyph.

This makes several upcoming changes feasible that will reduce the
amount and cost of hash lookups we do in the resource cache.
"
2b64aec136ad778204116080d51743e152580b60,servo/webrender,"Auto merge of #3291 - nical:signed-coords, r=jrmuizel

Use DeviceInt* instead of DeviceUint*.

We currently use a mix of both which can be untidy at places and is error prone when doing intermediate computations that may go through negative values.

<!-- Reviewable:start -->
---
This change is‚ÄÇ[<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/3291)
<!-- Reviewable:end -->
"
035f07094ce88581129692e1e0cd72ea5799a73d,servo/webrender,"Tidy more files

Expand servo-tidy to include webrender_api/ and webrender/ (except the
main source directory). The ordering rules for use statements seem a
little capricious, but at least these will be in line with how Servo is
formatted.
"
9b18fe345e4a37bbc8134d45e3013df1e14a92f8,servo/webrender,"Port borders to be interned primitives.

This is mostly a straightforward conversion of borders
to make use of primitive interning.

It also adds support during batching and clip task creation for
interned primitives that make use of segments. This is needed
for porting the rest of the primitives, and should make the
conversion of the other primitive types simple.
"
2a71ccb0249601b25ef156f9a585a001c8d606cb,servo/webrender,"Auto merge of #231 - pcwalton:faster-display-list-transfer, r=glennw

Flatten display list transfer into a separately-transferred byte array, and consolidate the multitude of display list messages into one.

Along with the corresponding patches to other Servo repositories, this
improves display list building performance on small display lists by
about 3x.

r? @glennw
"
ebfee8fdb22f5d0f095687eaa3e7435d5da7714d,servo/webrender,"There's a large number of related changes in this
patch. The overall goal is to make clip chain handling
not depend on screen rectangle generation. This
will make it much easier to implement local space
picture rasterization for perspective elements. In
addition to that, we unify how user / hierarchical and
primitive clip chain nodes are handled.

Clip chain instances are built on demand now, as
required by primitives. Right now, none of the
clip chain information is cached between primitives.
In general, now that the calculations are done in
local space, they are much faster - however we can
easily start to cache the common clip-chain state
(per raster coordinate system) if it ever shows up
in a profile. Additionally, since we only build
clip chains on demand, and clip chains for non-
visible primitives are not built, which is a
decent saving on many pages.

Remove ClipNode altogether. Instead, during flattening
we map directly from a ClipId to a ClipChainId
as appropriate. Clip chains are now created during
flattening and the links remain constant. It's only
during construction of a clip chain instance that we
include and exclude parts of the specified clip
chain. This unifies how we handle user defined clip
chains and legacy hierarchical clip chains. At the
same time, unify how the optional primitive specific
complex clip is handled with clip chains. Now, if
a primitive has a complex clip, it's added as a
normal clip chain node, and linked to the parent
clip chain that this primitive would otherwise
be attached to.

Primitive runs now only depend on the spatial node.
This results in far fewer primitive run breaks.

ClipWorkItems are now stored as a single contiguous
array in the ClipStore. To achieve this they are
stored as an index buffer, and a clip node range
is simply an (index, count). These are a lot
cheaper to pass to clip masks, and also require
fewer heap allocations.

Port hit testing to use the same clip chain data
structures that the main clip code uses, now that
the hierarchical and user defined clip chains are
handled in a uniform way.

Remove the need for Arc in clip chain code, since
clip chains are now stored in a contiguous index
buffer style structure.
"
328fb2e97abbaa168323937a2520bc6b92efc734,servo/webrender,"Flatten the display list in the API

This changes brings the WebRender API more into line with the Servo
display list and also the frames generated inside WebRender itself.
Most intermediate display list representations are removed as well as
their place on the resource cache. Perhaps most notably, stacking
contexts are started via a PushStackingContext display item and ended
via a PopStackingContext item. Additionally, the flatten pass has been
significantly simplified to account for these changes.
"
f5cf72c6196ec0a7743d9d626cdc360ec0c569a1,servo/webrender,"Auto merge of #2509 - glennw:remove-hw-composite6, r=kvark

Use brush_image for blurs, instead of 2d hardware composite.

Once this lands, we can fix drop-shadows by making use of this
functionality, and port the other remaining uses of ps_hardware_composite
to use brush_image. Then, ps_hardware_composite can be removed,
and everything except 3d plane-splits will then be drawn as
normal primitives.

Incidentally, this fixes the way we handle blurs when the source
picture is clipped by either the screen bounds or a clip-chain.
The code will now inflate the rendered portion of the source
render task correctly, so include enough pixels to get a correct
blur result at the edges.

<!-- Reviewable:start -->
---
This change is‚ÄÇ[<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/2509)
<!-- Reviewable:end -->
"
72770bf8f64abcf7c19ed0261f5456b7ef18100d,servo/webrender,"Auto merge of #514 - glennw:glyph-dims, r=pcwalton,kvark

Use glyph metrics to calculate text run bounds and offsets.

Instead of rasterizing glyphs, and using that to calculate the
bounding box of text runs, use glyph metrics instead.

This is important, since it allows us to delay rasterization of
glyphs until later in the frame, which means we can delay the
decision on whether to rasterize a glyph with subpixel
antialising or not.

It also removes the concept of ""user data"" in the texture cache
since the resource cache is now used to extract glyph metrics.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/514)
<!-- Reviewable:end -->
"
d3c1f7c4da617dc6c5e1731658942d407ac37ea0,servo/webrender,"Rewrite the alpha batcher to use a simple shortest-common-subsequence
approximation algorithm.

This makes the batcher simpler and more scalable and improves its output
at the cost of a small constant overhead. Because of the scalability
improvements, this patch lifts the cap on the number of alpha batches
per render phase to 4.

Before-and-after measurements on
http://en.wikipedia.org/wiki/Servomechanism:

* Draw calls: 161 ‚Üí 77 (2.1x fewer)
* Backend CPU time: 3.15ms ‚Üí 3.32ms (5.4% slower)
* CPU compositor time: 1.03ms ‚Üí 0.53ms (94% faster)
* GPU time: 1.83ms ‚Üí 1.80ms (1.7% faster)
"
425155a2a5a7747b8f4119553c192ee17a520f45,servo/webrender,"Eliminate need for root stacking context

This makes the code quit a bit cleaner and allows for a greater variety
of display lists.

Fixes #1195.
"
cdbea4a2573c366bfd16ed58c8f4c8879f38112f,servo/webrender,"Various fixes and refactorings to lay groundwork for future work, such as GPU clipping, scroll layers with transforms etc.

* Fix mix-blend-mode.
* Use AABB tree per render target / scroll layer.
* Change composite batching to create render target per tree layer.
* Refactor stacking context flattening to clean up code.
* Add debugging support to freelist.
* Handle render target dependencies for composite batching.
* Fix framebuffer readback during composite batching.
* Fix various warnings.
* Change render target allocation strategy (prep work for later).

(This passes tests but causes some perf regressions that will be fixed in follow up patches).
"
6d950144cf87e6e0c4c427e6f199321f1b172b3c,servo/webrender,"Auto merge of #439 - glennw:bs-clean, r=pcwalton

Remove some unused wr1-related code.

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/439)
<!-- Reviewable:end -->
"
d8018f7fbe1810dadb1bf87b8b2b18c8d1f2068c,sklintyg/common,"Updated view-cert.html according to changes in internal model

- Refactored internal model so method usage in angular is more intuitive
- Added mock data in RliViewServices to test view-cert
- Fixed errors in enum SjukdomsKannedom
"
768e65d002e6d9be85dbe421c7d3d06cdb5bd6ab,sozu-proxy/sozu,"log cleanup
"
f1cf576ca46f7c67febb6618531b943faa3b1b13,sozu-proxy/sozu,"Add roundrobin load balancing algorithm (#459)

* Modify the backends declarations in the config.toml to take account of new load balancing options e.g. weight

* Add load balancing parameters in the AddBackend config message

* Add load balancing algorithm in AddApplication configuration message

* Add load balancing algo reference in BackendList

* Keep random as load balancing algo

The implementation already exist

* Add load balancing strategies: round robin, random

* Add weight parameter in Backend struct

* Change the next_available_backend behavior by using the load balancing parameter and enable to modify the load balancing algo at runtime

* Modify the backends declaration example in config.toml

* Move load_balancing to a simple file

* Rename load_balancing_algo to load_balancing_policy and set lb_params to Option to skip serializing if lb params is not needed

The remove command use a Backend definition and we don't need the load balacing part to remove it

* Rename to use policy instead of algo and add units tests

* Set the lb policy when an application is saved

* Fix typo LoadBalancingParams

* Add load balancing for openssl

* Add load balancing for rusttls

* Add load balancing policy to tcp

* Set tcp backend port in config.toml at 8081

* Remove abbreviations for some variables name and modify some ports in tests and config examples

* Pass load balancing parameter in Backend struct instead of just passing the weigth

We'll need in the futur more load balancing parameters, so it's better to use a struct directly to contain them

* Load balancing only on available backends

* Remove old backends declaration and add an example of load_balancing_policy declaration

* Fix typos

* Refactor the next backend calculation for the load balancing
"
62a2fa56684018a0866936904a16923030f7c301,structr/structr,"First steps towards separate JSON/database names for properties.
"
f0cd4b21e2a728ba4b026750773a1a587af8677d,structr/structr,"Merge branch 'master' into supernode-optimizations
"
66bedb8980d117b9ef5b028e032ce4646ba15ff8,structr/structr,"Simplified synchronization of access grants for dynamic schema resources by creating a special class 'DynamicResourceAccess' and recreating them on schema reload.
"
d8a8b8642e145a17a4c3ff22dc8635f3b3fc0e9c,structr/structr,"Replaced GenericRelatioship instantiation with factory method in NodeRelationshipsCommand, WIP on named relations.
"
5e34e700cdb8a5532f83b0083788f85af97509ab,structr/structr,"refactoring for better method reuse
"
70997115418521202b5fee688e0e2a2552586ac1,structr/structr,"minor cleanup: always use semicolon to end a statement (even though it is not strictly necessary) and remove trailing commas in object definition to improve browser compatibility
"
d9cd14a8466981b362c811221f1744bf971a2b55,structr/structr,"smaller CHM sizes for slightly better performance
"
fd10e9c64b1b4ff0859d68bfaff8609a63765611,structr/structr,"Modifies node creation to improve write performance with the new Bolt driver.
"
a782122e4f7d0e6741ca26d4023cdc4c90ad12fe,structr/structr,"Next step towards a unified core layer, work in progress, failing tests.
"
7b3addba9d7f41362577ff4471d8414ce1eb917d,structr/structr,"first working version of permission management through ui
some refactoring
new and modified websocket commands
"
45cae415ed21f8a79c8d63d82336bcc0daebe287,structr/structr,"Work in progress on experimental performance optimizations.
"
b41b9d2ae9d1139a3d4d5eb7ad7b100ffa3ee6db,systemd/systemd,"systemctl: add a way to explicitly request client-side unit installing

This adds support for a new environment variable
SYSTEMCTL_INSTALL_CLIENT_SIDE, that ensures that systemctl executes
install operations client-side instead of passing them to PID1. This is
useful in debugging situations, but even beyond that. However, we don't
want to make it official API, hence let's just make it an undocumented
environment variable.

Similar, add a second variable, SYSTEMCTL_SKIP_SYSV which allows
skipping the SysV chkconfig fall-back if set. This is useful for similar
reasons, and exposed as undocumented as environment variable for similar
reasons, too.
"
de0671ee7fe465e108f62dcbbbe9366f81dd9e9a,systemd/systemd,"Remove unnecessary casts in printfs

No functional change expected :)
"
6606089752df90f3eeb4924af109046f1c73554c,systemd/systemd,"path-util: unify code for detecting OS trees

This also makes sure we always detect an OS tree the same way, by
checking for /etc/os-release.
"
765d143b5fc8dcb44f5fbd391ef36d0835793e7c,systemd/systemd,"util: rename parse_cpu_set() to parse_cpu_set_and_warn()

It's pretty untypical for our parsing functions to log on their own.
Clarify in the name that this one does.
"
17df7223be064b1542dbe868e3b35cca977ee639,systemd/systemd,"core: rework syscall filter

- Allow configuration of an errno error to return from blacklisted
  syscalls, instead of immediately terminating a process.

- Fix parsing logic when libseccomp support is turned off

- Only keep the actual syscall set in the ExecContext, and generate the
  string version only on demand.
"
cad45ba11ec3572296361f53f5852ffb97a97fa3,systemd/systemd,"selinux: rework selinux access check logic

a) Instead of parsing the bus messages inside of selinux-access.c
simply pass everything pre-parsed in the functions

b) implement the access checking with a macro that resolves to nothing
on non-selinux builds

c) split out the selinux checks into their own sources
selinux-util.[ch]

d) this unifies the job creation code behind the D-Bus calls
Manager.StartUnit() and Unit.Start().
"
bbac65bcc20377cd22c005874bd95724bad6d66e,systemd/systemd,"Merge pull request #9157 from poettering/unit-config-load-error

introduce a new ""bad-setting"" unit load state in order to improve ""systemctl status"" output when bad settings are used"
32ee7d3309816994a02b3ff000e9734120d71214,systemd/systemd,"cgroup: add support for net_cls controllers

Add a new config directive called NetClass= to CGroup enabled units.
Allowed values are positive numbers for fix assignments and ""auto"" for
picking a free value automatically, for which we need to keep track of
dynamically assigned net class IDs of units. Introduce a hash table for
this, and also record the last ID that was given out, so the allocator
can start its search for the next 'hole' from there. This could
eventually be optimized with something like an irb.

The class IDs up to 65536 are considered reserved and won't be
assigned automatically by systemd. This barrier can be made a config
directive in the future.

Values set in unit files are stored in the CGroupContext of the
unit and considered read-only. The actually assigned number (which
may have been chosen dynamically) is stored in the unit itself and
is guaranteed to remain stable as long as the unit is active.

In the CGroup controller, set the configured CGroup net class to
net_cls.classid. Multiple unit may share the same net class ID,
and those which do are linked together.
"
2b583ce6576d4a074ce6f1570b3e60b65c64ae7d,systemd/systemd,"use /run instead of /dev/.run

Instead of the /dev/.run trick we have currently implemented, we decided
to move the early-boot runtime dir to /run.

An existing /var/run directory is bind-mounted to /run. If /var/run is
already a symlink, no action is taken.

An existing /var/lock directory is bind-mounted to /run/lock.
If /var/lock is already a symlink, no action is taken.

To implement the directory vs. symlink logic, we have a:
  ConditionPathIsDirectory=
now, which is used in the mount units.

Skipped mount unit in case of symlink:
  $ systemctl status var-run.mount
  var-run.mount - Runtime Directory
    Loaded: loaded (/lib/systemd/system/var-run.mount)
    Active: inactive (dead)
            start condition failed at Fri, 25 Mar 2011 04:51:41 +0100; 6min ago
     Where: /var/run
      What: /run
    CGroup: name=systemd:/system/var-run.mount

The systemd rpm needs to make sure to add something like:
  %pre
  mkdir -p -m0755 /run >/dev/null 2>&1 || :
or it needs to be added to filesystem.rpm.

Udev -git already uses /run if that exists, and is writable at bootup.
Otherwise it falls back to the current /dev/.udev.

Dracut and plymouth need to be adopted to switch from /dev/.run to run
too.

Cheers,
Kay
"
0d0696812980d8f41c54739ad73716a233a2fa7c,systemd/systemd,"Merge pull request #1691 from poettering/util-lib-3

split up util.h and macro.h into even more bits"
069a92c6581a2ee4fc0f0f9430f54412e6e3026b,systemd/systemd,"Merge pull request #3685 from kinvolk/alessandro/inaccessible-paths

namespace: unify limit behavior on non-directory paths"
fa65c28176c09a8f56953898771af25db0d67d79,systemd/systemd,"namespace: rename parse_protect_{home,system}_or_bool() to protect_{home,system}_or_bool_to_string()

Hence, we can define config_parse_protect_{home,system}() by using
DEFINE_CONFIG_PARSE_ENUM() macro.
"
c2e84cab3afb09e726be40ce80b6ce6129c8af32,systemd/systemd,"resolvectl: rename systemd-resolve to resolvectl

For the compatibility, `systemd-resolve` will be created as a symbolic
link to `resolvectl`.
"
28dd66ecfce743b1ea9046c7bb501e0fcaeff724,systemd/systemd,"core: evaluate presets after generators have run (#6526)

This commit moves the first-boot system preset-settings evaluation out
of main and into the manager startup logic itself. Notably, it reverses
the order between generators and presets evaluation, so that any changes
performed by first-boot generators are taken into the account by presets
logic.

After this change, units created by a generator can be enabled as part
of a preset.
"
84c3409631f48869dcb59c0a74eba6d4ac40ad93,systemd/systemd,"networkd: rename BPDUGuard to UseBPDU

Rename to follow the follow the style of other options.

In general ""positive"" options are preferred to ""negative"" ones,
because they are easier to describe and easier for humans to
parse (c.f. the shortening on the man page entry).
"
b7def684941808600c344f0be7a2b9fcdda97e0f,systemd/systemd,"util: rename join() to strjoin()

This is to match strappend() and the other string related functions.
"
2928b0a863091f8f291fddb168988711afd389ef,systemd/systemd,"core: add support for a configurable system-wide start-up timeout

When this system-wide start-up timeout is hit we execute one of the
failure actions already implemented for services that fail.

This should not only be useful on embedded devices, but also on laptops
which have the power-button reachable when the lid is closed. This
devices, when in a backpack might get powered on by accident due to the
easily reachable power button. We want to make sure that the system
turns itself off if it starts up due this after a while.

When the system manages to fully start-up logind will suspend the
machine by default if the lid is closed. However, in some cases we don't
even get as far as logind, and the boot hangs much earlier, for example
because we ask for a LUKS password that nobody ever enters.

Yeah, this is a real-life problem on my Yoga 13, which has one of those
easily accessible power buttons, even if the device is closed.
"
b08020893af11b9f5fd99b6e6fe1755d4fbcd811,systemd/systemd,"Merge pull request #10809 from keszybz/unit-log-result

Add helper function for logging unit results"
6cc7e918ffe2f6a08be2b3ea221b8dbb79e41a97,systemd/systemd,"Merge pull request #8314 from poettering/rearrange-stdio

refactor how we rearrange fds for stdin/stdout/stderr"
b82f27e7a31d6fdc1738aa9e0f73e3b800f64cad,systemd/systemd,"man: document unit load paths

So far we didn't document control, transient, dbus config, or generator paths.
But those paths are visible to users, and they need to understand why systemd
loads units from those paths, and how the precedence hierarchy looks.
The whole thing is a bit messy, since the list of paths is quite long.
I made the tables a bit shorter by combining rows for the alternatives
where $XDG_* is set and the fallback.

In various places, tags are split like <element
  param=""blah"">
this. This is necessary to keep everyting in one logical XML line so that
docbook renders the table properly.

Replaces #8050.
"
717fb9bc24be79922847b2c0f611cb03ffb7eb6c,systemd/systemd,"Merge pull request #8950 from dtardon/cleanup

use automatic cleanup more"
74df0fca09b3c31ed19e14ba80f996fdff772417,systemd/systemd,"util: unify reading of /proc/cmdline

Instead of individually checking for containers in each user do this
once in a new call proc_cmdline() that read the file only if we are not
in a container.
"
7b50eb2efa122200e39646c19a29abab302f7d24,systemd/systemd,"resolved: internalize string buffer of dns_resource_record_to_string()

Let's simplify usage and memory management of DnsResourceRecord's
dns_resource_record_to_string() call: cache the formatted string as
part of the object, and return it on subsequent calls, freeing it when
the DnsResourceRecord itself is freed.
"
29a3db75fd97914434a232a9c01d7ffdccd54d8b,systemd/systemd,"util: rename signal_from_string_try_harder() to signal_from_string()

Also this makes the new `signal_from_string()` function reject
e.g, `SIG3` or `SIG+5`.
"
349cc4a507c4d84fcadf61f42159ea6412717896,systemd/systemd,"build-sys: use #if Y instead of #ifdef Y everywhere

The advantage is that is the name is mispellt, cpp will warn us.

$ git grep -Ee ""conf.set\('(HAVE|ENABLE)_"" -l|xargs sed -r -i ""s/conf.set\('(HAVE|ENABLE)_/conf.set10('\1_/""
$ git grep -Ee '#ifn?def (HAVE|ENABLE)' -l|xargs sed -r -i 's/#ifdef (HAVE|ENABLE)/#if \1/; s/#ifndef (HAVE|ENABLE)/#if ! \1/;'
$ git grep -Ee 'if.*defined\(HAVE' -l|xargs sed -i -r 's/defined\((HAVE_[A-Z0-9_]*)\)/\1/g'
$ git grep -Ee 'if.*defined\(ENABLE' -l|xargs sed -i -r 's/defined\((ENABLE_[A-Z0-9_]*)\)/\1/g'
+ manual changes to meson.build

squash! build-sys: use #if Y instead of #ifdef Y everywhere

v2:
- fix incorrect setting of HAVE_LIBIDN2
"
b826ab586c9e0a9c0d438a75c28cf3a8ab485929,systemd/systemd,"hashmap: refactor hash_func

All our hash functions are based on siphash24(), factor out
siphash_init() and siphash24_finalize() and pass the siphash
state to the hash functions rather than the hash key.

This simplifies the hash functions, and in particular makes
composition simpler as calling siphash24_compress() repeatedly
on separate chunks of input has the same effect as first
concatenating the input and then calling siphash23_compress()
on the result.
"
3df9bec57c3e2d96f7e2a25961585cfa609b61eb,systemd/systemd,"networkd: rework Domains= setting

Previously, .network files only knew a vaguely defined ""Domains="" concept, for which the documentation declared it was
the ""DNS domain"" for the network connection, without specifying what that means.

With this the Domains setting is reworked, so that there are now ""routing"" domains and ""search"" domains. The former are
to be used by resolved to route DNS request to specific network interfaces, the latter is to be used for searching
single-label hostnames with (in addition to being used for routing). Both settings are configured in the ""Domains=""
setting. Normal domain names listed in it are now considered search domains (for compatibility with existing setups),
while those prefixed with ""~"" are considered routing domains only. To route all lookups to a specific interface the
routing domain ""."" may be used, referring to the root domain. An alternative syntax for this is the ""*"", as was already
implemented before using the ""wildcard"" domain concept.

This commit adds proper parsers for this new logic, and exposes this via the sd-network API. This information is not
used by resolved yet, this will be added in a later commit.
"
b037141d1b86103450dbf95009c4aba97ac98cd5,systemd/systemd,"Merge pull request #8271 from poettering/unit-prefix-search

Search unit .d/ drop-in files also in all ""dash prefixes"" of a unit"
fc2f9534d07db2b185c02b1961428b53daf1986e,systemd/systemd,"networkd: split up networkd.h into per-object header files

No functional changes, just moving definitions into separate header
files.
"
da323858ef34a0216aa96f4089810053c90f09ce,systemd/systemd,"Merge pull request #1190 from poettering/rework-virt

basic: rework virtualization detection API"
cd81a8fc82c6fd175a02df291f5e4a5f78c537b8,systemd/systemd,"Merge pull request #8776 from poettering/mtu-cleanup

networkd/udev: clean up parsing and handling of MTU values"
c030a850ba59fbcdf796abfe48b2f220933c52c0,systemd/systemd,"busctl: add and use strcmp_ptr()

In member_compare_func(), it compares interface, type and name of
members.  But as it can contain NULL pointer, it needs to check them
before calling strcmp().  So make it as a separate strcmp_ptr
function (named after streq_ptr) so that it can be used by others.

Also let streq_ptr() to use it in order to make the code simpler.
"
634f0f983c57e41292dd36c7327e99316ff61aa3,systemd/systemd,"networkd: rework headers to avoid circular includes

Header files were organized in a way where the includer would add various
typedefs used by the includee before including it, resulting in a tangled
web of dependencies between files.

Replace this with the following logic:

          networkd.h
         /          \
networkd-link.h      \
networkd-ipv4ll.h--\__\
networkd-fdb.h         \
networkd-network.h    netword-netdev-*.h
networkd-route.h           \
                      networkd-netdev.h

If a pointer to a structure defined in a different header file is needed,
use a typedef line instead of including the whole header.
"
e14bdd88e9796ec3c70966dd1899add6667431f5,systemd/systemd,"libudev: monitor - add client socket filter for subsystem value

Messages send back by the udev daemon to the netlink socket are
multiplexed by the kernel and delivered to multiple clients. The
clients can upload a socket filter to let the kernel drop messages
not belonging to a certain subsystem. This prevent needless wakeups
and message processing for users who are only interested in a
subset of available events.

Recent kernels allow untrusted users to listen to the netlink
messages.

The messages send by the udev daemon are versioned, to prevent any
custom software reading them without libudev. The message wire format
may change with any udev version update.
"
1ee306e1248866617c96ed9f4263f375588ad838,systemd/systemd,"machined: split out machine registration stuff from logind

Embedded folks don't need the machine registration stuff, hence it's
nice to make this optional. Also, I'd expect that machinectl will grow
additional commands quickly, for example to join existing containers and
suchlike, hence it's better keeping that separate from loginctl.
"
ff2e33db54719bfe8feea833571652318c6d197c,systemd/systemd,"build-sys: make RPM macros installation path configurable (#5564)

--with-rpmmacrosdir=no disables installation of the macros."
486cd82c8f7642016895b72bcc09a1bfe885a783,systemd/systemd,"logind: remove unused session->closing field

This field is always false, drop it. If you want a reliable way to get
session state, call session_get_state(). Testing for any flags directly
doesn't work currently so don't pretend it would.
"
9c90e27767697e01b0cfb9f345b928763942b731,systemd/systemd,"Merge pull request #1333 from dvdhrm/sd-network-cleanup

sd-network: random API cleanups"
ef309a681f4c761503e4cd4cc6884d7d6ef70436,systemd/systemd,"util: unify how we see srand()
"
455971c1493fc6dc3125d235cf4ea6102cac626d,systemd/systemd,"sd-bus: rename ""connection name"" to ""description"" for the sd-bus API too

kdbus recently renamed this concept, and so should we in what we expose
in userspace.
"
eef85c4a3f8054d29383a176f6cebd1ef3a15b9a,systemd/systemd,"core: track why unit dependencies came to be

This replaces the dependencies Set* objects by Hashmap* objects, where
the key is the depending Unit, and the value is a bitmask encoding why
the specific dependency was created.

The bitmask contains a number of different, defined bits, that indicate
why dependencies exist, for example whether they are created due to
explicitly configured deps in files, by udev rules or implicitly.

Note that memory usage is not increased by this change, even though we
store more information, as we manage to encode the bit mask inside the
value pointer each Hashmap entry contains.

Why this all? When we know how a dependency came to be, we can update
dependencies correctly when a configuration source changes but others
are left unaltered. Specifically:

1. We can fix UDEV_WANTS dependency generation: so far we kept adding
   dependencies configured that way, but if a device lost such a
   dependency we couldn't them again as there was no scheme for removing
   of dependencies in place.

2. We can implement ""pin-pointed"" reload of unit files. If we know what
   dependencies were created as result of configuration in a unit file,
   then we know what to flush out when we want to reload it.

3. It's useful for debugging: ""systemd-analyze dump"" now shows
   this information, helping substantially with understanding how
   systemd's dependency tree came to be the way it came to be.
"
6dd67163b8f173649e7dc73740f35274714caafc,systemd/systemd,"util: remove normalize_env_assignment(), it's unused
"
1d98fef17d5fd746be163b3aac306068ecec3438,systemd/systemd,"core: when forcibly killing/aborting left-over unit processes log about it

Let's lot at LOG_NOTICE about any processes that we are going to
SIGKILL/SIGABRT because clean termination of them didn't work.

This turns the various boolean flag parameters to cg_kill(), cg_migrate() and
related calls into a single binary flags parameter, simply because the function
now gained even more parameters and the parameter listed shouldn't get too
long.

Logging for killing processes is done either when the kill signal is SIGABRT or
SIGKILL, or on explicit request if KILL_TERMINATE_AND_LOG instead of LOG_TERMINATE
is passed. This isn't used yet in this patch, but is made use of in a later
patch.
"
8fcde01280adcbd07e8205b91ac52b06305b6208,systemd/systemd,"util-lib: split stat()/statfs()/stavfs() related calls into stat-util.[ch]
"
8e38570ebed346c00e58c3fcc998a4b305e83a36,systemd/systemd,"tree-wide: htonl() is weird, let's use htobe32() instead (#3538)

Super-important change, yeah!"
3235b4e70cf42cd13fe1ac4f7341b623a852aed9,systemd/systemd,"Merge pull request #7492 from keszybz/coverity-fixes

A few more cleanups based on coverity and valgrind"
752b86150360b8f3de6a3e0baa4824d33f3a92c7,tensorflow/docs,"Merge changes from github.
END_PUBLIC

I also integrated #13073 by hand to make TAP happy.

---
Commit 92362d0f0 authored by Skye Wanderman-Milne<skyewm@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add WhileContext class and add plumbing for creating them.

This change introduces WhileContext, which stores information about a
while loop and will be used in future changes to generate while loop
gradient graphs. Exit nodes in a while loop now have a pointer to
their associated WhileContext. This will be used to retrieve the
context for a given loop.

This change adds an optional parameter to BuildWhileLoop() to create a
WhileContext for the while loop (currently this is always true, but
gradients will generate while loops without associated contexts). This
change also adds a as-yet-unused option to BuildWhileLoop() to return
the predicate output.

PiperOrigin-RevId: 168562303

---
Commit a4f6e7c1a authored by RJ Ryan<rjryan@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add mel-scale conversion matrix support to tf.contrib.signal.

PiperOrigin-RevId: 168560255

---
Commit b00b6d23c authored by Henry Tan<henrytan@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Fix a segmentation fault caused by invalid log directory in InternalFlush().

PiperOrigin-RevId: 168557063

---
Commit 2bc7a155a authored by Yong Tang<yong.tang.github@outlook.com>
Committed by Rasmus Munk Larsen<rmlarsen@google.com>:
Add uint16 support for tf.decode_raw (#12719)

* Add uint16 support for tf.decode_raw

This fix tries to address the request raised in 10124 where
uint16 support for tf.decode_raw is needed. tf.decode_raw
already support half, float32, float64, int8, int16, int32, int64,
uint8. And uint16 was not supported.

This fix adds uint16 support for tf.decode_raw.

This fix fixes 10124.

Signed-off-by: Yong Tang <yong.tang.github@outlook.com>

* Fix test failure caused by uint16 support of decode_raw and add unit tests.

Signed-off-by: Yong Tang <yong.tang.github@outlook.com>

---
Commit 009285c09 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Remove benchmark for TensorShapeOld.

PiperOrigin-RevId: 168551108

---
Commit dc1eda8a6 authored by Peter Hawkins<phawkins@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA] Fix CHECK-failure crash if a non-tuple was passed to GetTupleElement.

PiperOrigin-RevId: 168550703

---
Commit 010922ed9 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Go: Update generated wrapper functions for TensorFlow ops.

PiperOrigin-RevId: 168549989

---
Commit c8a6131e9 authored by Mark Daoust<markdaoust@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
make `tf.sets` examples executable

Fixes #12969

PiperOrigin-RevId: 168549712

---
Commit bece65c6f authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Use a map instead of a vector of Children() in the BeamEntry.

The assumption is that since the entries are sparse (they are all populated, but most are never Active()), using the map will save memory and make iterating over the Children() more efficient.

PiperOrigin-RevId: 168548814

---
Commit 0d5ab82ce authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Update ops-related pbtxt files.

PiperOrigin-RevId: 168548642

---
Commit 3331c574b authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Implementing gradients for tf.image.resize_bicubic.

PiperOrigin-RevId: 168547412

---
Commit 4982ef0fa authored by Martin Wicke<wicke@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add the ability to warn only once if deprecated functionality is used, and make that the default.

PiperOrigin-RevId: 168545655

---
Commit 99423416a authored by Peter Hawkins<phawkins@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA] Make shape inference error messages for the While HLO more readable. Build the error lazily.

PiperOrigin-RevId: 168531083

---
Commit d10374e45 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Discard some unneccessary logging commands.

PiperOrigin-RevId: 168500721

---
Commit 83cbabb85 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Fix wrong format of logging message.

PiperOrigin-RevId: 168497373

---
Commit eec4f1b3a authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Go: Update generated wrapper functions for TensorFlow ops.

PiperOrigin-RevId: 168494944

---
Commit 69301f352 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Update ops-related pbtxt files.

PiperOrigin-RevId: 168494220

---
Commit 9d56f419c authored by Mingxing Tan<tanmingxing@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add crop_and_decode_jpeg_op that combines the crop and decode for better
performance.

PiperOrigin-RevId: 168493125

---
Commit 48ddf64d0 authored by Chris Leary<leary@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA] Make large params test only run in opt builds.

PiperOrigin-RevId: 168491913

---
Commit 11d3ac29d authored by Chris Leary<leary@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA] Add tests for large numbers of parameter / return values and while loops.

PiperOrigin-RevId: 168487225

---
Commit 3cd6bdef5 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Added test cases on R4 slice.

PiperOrigin-RevId: 168482049

---
Commit 46a81b5c3 authored by Jacques Pienaar<jpienaar@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add cast S64 to F32 test.

PiperOrigin-RevId: 168473650

---
Commit 59bdf598d authored by Derek Murray<mrry@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add an automatically-generated ""tensorflow.python.platform.build_info"" script.

The motivation for this script is to provide better tools for
diagnosing load-time errors (such as the ones that plague the Windows
build due to DLL issues). Note that the script is intended to be
self-contained, so that it is possible to import it without loading
the entire TensorFlow runtime.

This generated script currently contains a single symbol,
`is_cuda_build`, which records whether the build has GPU support or not.

PiperOrigin-RevId: 168471034

---
Commit c3b86347f authored by Olivia Nordquist<nolivia@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
reenabling tests that are passing

PiperOrigin-RevId: 168466361

---
Commit c728665ec authored by Henry Tan<henrytan@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add const qualifiers whenever appropriate.

PiperOrigin-RevId: 168465926

---
Commit bf96fcd13 authored by Alexandre Passos<apassos@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Use the scalar cache in MeanGrad.

PiperOrigin-RevId: 168462267

---
Commit 1cada9ea2 authored by Olivia Nordquist<nolivia@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
reenabling test that passed after 100 runs w/o timing out

PiperOrigin-RevId: 168458634

---
Commit 00c865566 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Generate error (instead of segfault) when trying to copy string tensor
to GPU in EagerTensor constructor.

PiperOrigin-RevId: 168457320

---
Commit 655f26fc7 authored by Alexandre Passos<apassos@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Resurrects autograd-free eager gradients.

PiperOrigin-RevId: 168448557

---
Commit 8f37f3002 authored by Peter Hawkins<phawkins@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[TF:XLA] Cleanups to handling of arguments during XLA compilation:
* combine resource kinds in XlaCompiler::Argument::Kind, use a separate XlaResource::Kind field to distinguish different kinds of resource.
* merge XlaContext::HandleOrConstant and XlaExpression, which were almost identical.
* remove XlaContext::Argument; instead, build XlaExpressions directly from XlaCompiler and add them to the XlaContext.

PiperOrigin-RevId: 168439341

---
Commit 7f5346a80 authored by Gunhan Gulsoy<gunan@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Reduce cmake log mess.

* Echo off for the .bat scripts.
* TF cmake: disable warnings in some of the patched projects (gif,jpeg,lmdb).

PiperOrigin-RevId: 168432070

---
Commit 2ad85aa4d authored by Mark Heffernan<meheff@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Use xla/tests:xla_internal_test_main for all tests under tf/compiler/xla
and remove any main() definitions in tests. This enables use of flags
in all tests.

PiperOrigin-RevId: 168424796

---
Commit cd377811d authored by Henry Tan<henrytan@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Comment and error message consistency cleanup.

PiperOrigin-RevId: 168422582

---
Commit 7c19b82af authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Update tf.sparse_reset_shape so that when shrinking the shape of an empty
sparse tensor, the result has a shape of all zeros.

PiperOrigin-RevId: 168419639

---
Commit fcacb40d4 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
FirstReadyManager for scheduling nodes in VirtualScheduler.
The current FIFOManager may yield inefficient scheduling; _Recv pushed to the
FIFO blocks other nodes that can run before _Recv due to the node order in FIFO.
FirstReadyManager picks a node with the earliest time_ready in the queue,
avoiding this problem.

Also, fixed VirtualPlacer to properly set device when Node's device name does not
include job name and to set GPU:0 as default device.

PiperOrigin-RevId: 168418455

---
Commit 7e47624f5 authored by Asim Shankar<ashankar@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
eager: Initial support for iteration over tf.contrib.data.Dataset objects.

TODO:
- Support function-valued operation attributes in eager
  (Required for MapDataset, FilterDataset etc. which encode the
  per-element computation in a TensorFlow function)
PiperOrigin-RevId: 168418250

---
Commit b0a397fce authored by Asim Shankar<ashankar@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
eager: Remove unnecessary TFE_Context argument to TFE_OpSetDevice.

PiperOrigin-RevId: 168417999

---
Commit 86211d554 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Graph transform to flatten atrous (dilated) convolutions (i.e., a sequence of SpaceToBatchND-Conv-BatchToSpaceND ops) to a regular Conv op with upsampled filters.

PiperOrigin-RevId: 168414124

---
Commit 3438981ca authored by David G. Andersen<dga@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Apply exported symbol filtering to the c++ API analogously to
what is filtered for the C API.
Fixes bug reported in comments on #1924

PiperOrigin-RevId: 168413719

---
Commit 7e023d865 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA:CPU] Remove code from parallel CPU backend outlining that was causing unnecessary copies to be inserted, and which is no longer necessary since we added co-located buffer support for kCall.
*) All bitcast copy is no longer necessary as CopyInsertion will insert copies
at the root of the computation for a parameter which is live-out.
*) Copy if root does not define buffer no longer necessary because colocated
assignment looks at points-to set of root instruction.

PiperOrigin-RevId: 168412076

---
Commit 5da4df92c authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Simplify some code in grappler_item_builder.cc, no change in logic.

PiperOrigin-RevId: 168409110

---
Commit 82ec6241a authored by drpngx<drpngx@users.noreply.github.com>
Committed by GitHub<noreply@github.com>:
Add six and numpy imports
---
Commit 9c4ce2452 authored by Mark Heffernan<meheff@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add flag parsing to more tests in xla/service specifically those which build
HLO graphs. This enables, for example, dumping of the graphs with
--xla_generate_hlo_graph. Also remove some superfluous tensorflow test_main
dependencies.

PiperOrigin-RevId: 168406746

---
Commit d4efa695c authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Relax the feed_nodes collection check, which triggers a false positive in some modes where the feed node collection is auto-generated. Keep it as a warning to help correct user-provided feed node lists.

PiperOrigin-RevId: 168396408

---
Commit cbc46a856 authored by Changming Sun<chasun@microsoft.com>
Committed by gunan<gunan@google.com>:
Add a missing template explicit instantiation of SetZeroFunctor (#12791)

---
Commit 7bb08f5bf authored by Kevin Slagle<kjslag@gmail.com>
Committed by drpngx<drpngx@users.noreply.github.com>:
fix ExponentialMovingAverage documentation so that ExponentialMovingAverage.apply is evaluated within control_dependencies (#12987)

---
Commit e6b011763 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Extend c++ gradient_checker to complex types.

PiperOrigin-RevId: 168392949

---
Commit 4086219a4 authored by Lyndon White<oxinabox@ucc.asn.au>
Committed by drpngx<drpngx@users.noreply.github.com>:
Correct minor typo in substr docs example (#12991)

---
Commit f63aa7f49 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Migrate core TFGAN functions to opensource.

PiperOrigin-RevId: 168391923

---
Commit bc6b60f1b authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Fix tuple_losses bug caused by Python bug.

PiperOrigin-RevId: 168386341

---
Commit 7a8c63da3 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Migrate `leaky_relu` to `nn_ops.py`. Will be used for TFGAN.

PiperOrigin-RevId: 168386268

---
Commit f7ba16fdf authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Do not export from eval on train data steps.

PiperOrigin-RevId: 168374021

---
Commit 9b9e54b34 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Adding NCCL sum op, register all_sum gradient.
Streamlining nccl test.

PiperOrigin-RevId: 168347428

---
Commit bc300318e authored by Gunhan Gulsoy<gunan@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Update gemmlowp hash as the commit history seems to have changed in the
repository.

PiperOrigin-RevId: 168343607

---
Commit 1e96d54d9 authored by gunan<gunan@google.com>
Committed by GitHub<noreply@github.com>:
Also accept non-k8 CPU types in build pip package. (#12975)

* Also accept non-k8 CPU types in build pip package.
Fixes #12735

* Make the script work with `set -e`.

---
Commit c0a4c7ffc authored by Chris Leary<leary@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA] Fix bug in ShapeUtil::ShapeIs that would lead to type inference errors.

PiperOrigin-RevId: 168323589

---
Commit 4af9be964 authored by Amy<amy@infosleuth.net>
Committed by drpngx<drpngx@users.noreply.github.com>:
support passing in a source url to the mnist read_data_sets function, to make it easier to use 'fashion mnist' etc. (#12983)

---
Commit 9f848734f authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Tweak layer a bit to be eager friendly.

PiperOrigin-RevId: 168312865

---
Commit 60f15462b authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Change conv_input_scale and side_input_scale from attributes to inputs for improved flexibility, in fused_conv2d_bias_activation op.

PiperOrigin-RevId: 168311988

---
Commit 4b4e10f9c authored by Jianwei Xie<xiejw@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Adds dict support of eval metrics.

PiperOrigin-RevId: 168310444

---
Commit ab7f22de6 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Move FusedConvBiasActivationShape out of common_shape_fns.cc to a lambda inside the op.

PiperOrigin-RevId: 168300911

---
Commit 3a98035fa authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA] Augment metadata output with source-line info, as before.

PiperOrigin-RevId: 168292527

---
Commit 349188152 authored by Yao Zhang<yaozhang@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Enable fused batch norm, which is 15-20% faster for training and inference.

PiperOrigin-RevId: 168288154

---
Commit 08587d45b authored by Yuefeng Zhou<yuefengz@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Added back persistent memory tracking in queue op. The new tracking logic has avoided the crash in previous implementation:  the queue_ passed to CreateTypedQueue may be unreffed if the resource is already created by another resource op that shares the same resource name and type.

PiperOrigin-RevId: 168284509

---
Commit 733063d55 authored by Amit Patankar<amitpatankar@google.com>
Committed by Amit Patankar<amitpatankar@google.com>:
Fixing awkward wording.

---
Commit c7ad6bfef authored by Amit Patankar<amitpatankar@google.com>
Committed by Amit Patankar<amitpatankar@google.com>:
Removing accidental hash.

---
Commit 53dbc761a authored by Amit Patankar<amitpatankar@google.com>
Committed by Amit Patankar<amitpatankar@google.com>:
Adding Windows self check script to docs.

---
Commit ed1135994 authored by Andrew Harp<andrewharp@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add -latomic flag to benchmark_model target to fix Android x86 build.

PiperOrigin-RevId: 168281337

---
Commit c0348bb55 authored by Anna R<annarev@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Update tf_export.py to take constant name as an argument instead of a constant.

PiperOrigin-RevId: 168280613

---
Commit c3d19e40a authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Cleanup training_ops to reduce code redudancy.

PiperOrigin-RevId: 168280069

---
Commit 123fb01ee authored by Yao Zhang<yaozhang@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Set fused=False for batch norm, because the test assumes no bessel's
correction. Fused=True would add bessel's correction to variance.

PiperOrigin-RevId: 168274392

---
Commit f0e8c545e authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Switch resource variables from copy-on-read to copy-on-write.

RELNOTES: Change the signature of (C++) GetInputTensorFromVariable in
training_op_helpers to support new copy-on-write semenatics of resource
variables.
PiperOrigin-RevId: 168273249

---
Commit 495cc8e47 authored by Yuan (Terry) Tang<terrytangyuan@users.noreply.github.com>
Committed by drpngx<drpngx@users.noreply.github.com>:
Minor wording change in timeseries module's README (#12938)

* Minor wording change in timeseries module's README

* Address comments

---
Commit f13b876ed authored by Amit Patankar<amitpatankar@google.com>
Committed by Amit Patankar<amitpatankar@google.com>:
Making the default build from source version 1.4.0dev. The whl files that are built will be 1.3.0devDDMMYYYY.

---
Commit 2356c0ff4 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Delete ScopedTFStatus to avoid leaking it for long running trainers(1+day).

PiperOrigin-RevId: 168259652

---
Commit e15f4cae2 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Don't remove all aliases from linalg namespace.
Get rid of redundant aliases.

PiperOrigin-RevId: 168257658

---
Commit c58082642 authored by postBG<profile2697@gmail.com>
Committed by drpngx<drpngx@users.noreply.github.com>:
Fix minor typo in Programmers guide (#12965)

* Fix minor typo in Programmers guide

* change to ""this""

---
Commit 509372c2e authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add a lot of operations' flops calculations

PiperOrigin-RevId: 168256746

---
Commit 80ed8afc0 authored by Francois Chollet<fchollet@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add Flatten to core layers.

PiperOrigin-RevId: 168254118

---
Commit a6223c01a authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Fix locking of variables in SparseProximalGradientDescent,
AdagradDA, SparseAdagradDA.

PiperOrigin-RevId: 168252530

---
Commit abde00830 authored by Olivia Nordquist<nolivia@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
adding InputTensor class for symmetry with OutputTensor

PiperOrigin-RevId: 168250085

---
Commit 0451032ca authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA] Fix variable naming style guide violation.

PiperOrigin-RevId: 168245542

---
Commit a202a5a94 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Update ops-related pbtxt files.

PiperOrigin-RevId: 168245371

---
Commit f93e354cb authored by Derek Murray<mrry@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[tf.contrib.data] Switch backend Dataset representation to DT_VARIANT.

This change introduces a new `DatasetWrapper` type that wraps a
`DatasetBase*` and can be stored in a DT_VARIANT tensor. All Dataset
ops now consume and produce DT_VARIANT instead of DT_RESOURCE, and the
underlying implementation is simplified because the `DatasetWrapper`
can be passed directly by value without using the `ResourceMgr`.

PiperOrigin-RevId: 168240571

---
Commit a4042cd2a authored by Jianwei Xie<xiejw@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Introduces the placeholder for _TrainingExecutor, which serves the implementation of tf.estimator.train_and_evaluate.

PiperOrigin-RevId: 168240151

---
Commit 10ba148f7 authored by Peter Hawkins<phawkins@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Switch control_flow_ops library to use Resource variants of Stack operators, instead of deprecated Ref variants.

PiperOrigin-RevId: 168234822

---
Commit ca43fe82b authored by Ali Yahya<alive@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
TFE: Improves the interfaces of tape.watch_variable() and implicit_grad().

tape.watch_variable() replaces tape.watch() and now is called on ResourceVariable objects instead of their underlying handles.

implicit_grad() now returns a list of (gradient, variable) pairs to be consistent with tf.Optimizer's interface.

PiperOrigin-RevId: 168232055

---
Commit b72862dfc authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
internal change

PiperOrigin-RevId: 168225993

---
Commit da3280f4d authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Re-enable tsan for sdca_estimator_test.

PiperOrigin-RevId: 168186374

---
Commit c936c1155 authored by Yifei Feng<yifeif@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Fix pip tests for contrib/gan.
- Add *_impl.py so tests can still access removed symbols.
- Add /python directory layer to make *_impy.py and __init__.py not in the same dir.

PiperOrigin-RevId: 168161722

---
Commit ce9a2b00f authored by Toby Boyd<tobyboyd@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Performance guide update

PiperOrigin-RevId: 168159289

---
Commit 3bce4f9a0 authored by Shanqing Cai<cais@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
TFE: expose tfe.num_gpus()

PiperOrigin-RevId: 168154345

---
Commit 67a7cbc28 authored by Jianwei Xie<xiejw@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Changed the default eval throttle secs from 2 min to 10 mins.

PiperOrigin-RevId: 168120323

---
Commit 92bed178f authored by Eugene Brevdo<ebrevdo@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Reduce cmake log mess.

* Echo off for the .bat scripts.
* TF cmake: disable warnings in some of the patched projects (gif,jpeg,lmdb).

PiperOrigin-RevId: 168119914

---
Commit 702d59582 authored by joshkyh<joshkyh@users.noreply.github.com>
Committed by Yifei Feng<fengyifei2026@gmail.com>:
Corrected hyperlink for audio training tutorial (#12923)

---
Commit 877c9deca authored by Frank Chen<frankchn@gmail.com>
Committed by Yifei Feng<fengyifei2026@gmail.com>:
Reverse change eb75ded6 so that internal tests will pass. (#12933)

As support for int64 global steps is not ready in TPUs, I am reversing this change so that our internal performance and regression tests will pass.
---
Commit 665966438 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Re-enable grpc_session_test.

PiperOrigin-RevId: 168078694

---
Commit 405def792 authored by Chris Leary<leary@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA] Switch CallInliner to use CallGraph::VisitNodes.

PiperOrigin-RevId: 168078645

---
Commit aba3466f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Exposes Head and factory methods in tf.contrib.estimator.

PiperOrigin-RevId: 168071246

---
Commit b76565b39 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Some profiler fixes and cleanup.

PiperOrigin-RevId: 168069346

---
Commit 32ffc5a81 authored by Jonas<sauercrowd@users.noreply.github.com>
Committed by Yifei Feng<fengyifei2026@gmail.com>:
Just a dot in order to be consistent (#12919)

added a dot to the `7` to make clear it's a float (like every other number)
---
Commit 0753b0c79 authored by Alexandre Passos<apassos@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Scope the scalar cache in the context.

PiperOrigin-RevId: 168065417

---
Commit 48deb206b authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Migrate TFGAN features to third_party.

PiperOrigin-RevId: 168060880

---
Commit d2ae1311f authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Fixing an issue in the BUILD file of the LSH ops.

PiperOrigin-RevId: 168056645

---
Commit 2f440eda4 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Expose NumpyReader for reading timeseries data.

PiperOrigin-RevId: 168055838

---
Commit be1916ce7 authored by Daniel Grazian<dgr@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Added functionality to allow `SqlDataset` to interpret a database column as various numeric types, including several integer types and `dtypes.float64`.

PiperOrigin-RevId: 168055827

---
Commit fa2000a0b authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Supporting nightly windows pip packages.

PiperOrigin-RevId: 168054959

---
Commit a263ea626 authored by Asim Shankar<ashankar@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
eager: Treat eager tensors as constants during graph construction.

Unless capturing is explicitly enabled.

PiperOrigin-RevId: 168052675

---
Commit 6e402d0d2 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Make TODO a bit more specific.

PiperOrigin-RevId: 168051381

---
Commit c779384bc authored by Daniel Grazian<dgr@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Added code example to the doc string for `SqlDataset`.

PiperOrigin-RevId: 168049037

---
Commit ff6dd474a authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Use self._in_graph_mode consistently in ResourceVariable
instead of sometimes getting it from the context.

Also: fix formatting of a comment and use a more precise test to detect
if initial_value is set.
PiperOrigin-RevId: 168047258

---
Commit f331f528b authored by Alexandre Passos<apassos@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Removes ""fast paths"" which are not fast in eager mode.

PiperOrigin-RevId: 168046278

---
Commit 86f1713e5 authored by Jianwei Xie<xiejw@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Introduces TrainSpec and EvalSpec.

PiperOrigin-RevId: 168040435

---
Commit c8b9e92f0 authored by Asim Shankar<ashankar@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
eager: Move ""register_function"" to context.py

This will allow function registration from other
modules without having to import ""function.py"".
(And besides, the function really does belong on the context).

PiperOrigin-RevId: 168040411

---
Commit 74137f994 authored by Shanqing Cai<cais@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Fix signed int overflow issue in tensor_id.cc

When a node name has a long numeric suffix, e.g.,
""foo/y_0/gradient_debug_09684b60f2184c67b744721915034528"" (as has happened with tfdbg GradientsDebugger),

the parsing algorithm in ParseTensorName() may experience signed int overflow. Replacing the types with ""unsigned int"" resolves the issue.

PiperOrigin-RevId: 168039195

---
Commit 450c3b562 authored by Rohan Jain<rohanj@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Using rendezvous manager to pass args / rets between devices during function remote execution. This enables CPU->GPU remote device executions now.

PiperOrigin-RevId: 168038285

---
Commit 82cc6529f authored by Jianwei Xie<xiejw@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Fixes the wording about StopIteration.

PiperOrigin-RevId: 168034451

---
Commit fb5588002 authored by Gunhan Gulsoy<gunan@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
Add a statement on install/index.md on what os are supported.

PiperOrigin-RevId: 168032996

---
Commit f83f6b9ef authored by Chris Leary<leary@google.com>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
[XLA] Handle higher-order HLOs (e.g. While) in CallInliner and test.

PiperOrigin-RevId: 168029345

---
Commit 8988ae365 authored by A. Unique TensorFlower<gardener@tensorflow.org>
Committed by TensorFlower Gardener<gardener@tensorflow.org>:
BEGIN_PUBLIC
Automated g4 rollback of changelist 167916124

PiperOrigin-RevId: 168916710
"
b7804cdf7323a874897e2517ba9e3cd2a5c683d0,theborg3of5/ahk,"Minor hotstring cleanup.
"
c29e0e3918849659a0540206e1b4b9d7b35d3c2e,theborg3of5/ahk,"Switch captialization of various ActionObject constants, and update things that use them accordingly.

Also a little other cleanup.
"
14f02940cbb0c10c817ecf1b035b48bdeed1872d,tranquilit/WAPT,"Put socketio client in separate thread
"
29ba824d86231f512d97a9055fab99f58ae64f0f,tranquilit/WAPT,"Add print output to tasks logs
Move and rename LogInstallOutput to LogOutput
lower priority of WaptUpdateServerStatus tasks for audit
handle selected packages audit
"
3bcdfdde3253ca7b47a24369ca79aadc7b77179a,tranquilit/WAPT,"some cleanup in waptconsole
* utf8 handling
* handling of multiple connected interfaces
"
dfdfd7b48089122563ef3749df4a10efac4f1817,tranquilit/WAPT,"Ne fonctionne pas ! : WIP refactoring des paquets hosts

Subversion-branch: /trunk
Subversion-revision: 313
"
7a4c38215eb54df321e5f431499976cb48d6858a,tranquilit/WAPT,"Instanciate a Pool of postgresql db connections
Changes the configuration : db_url is replaced by explicit waptserver.ini parameters :
    'db_name':'wapt',
    'db_host':None,
    'db_user':None,
    'db_password':None,
    'db_max_connections':8,
    'db_stale_timeout':300,
"
aedd560e6cd546dc36d87601656fea45be4d6e14,tranquilit/WAPT,"default columns layout improvement in waptconsole.exe
progress on waptserverpostconf
removed postconf from waptserver.iss

Subversion-branch: /trunk
Subversion-revision: 1154
"
fb689d9c321a5541c94a42de96c0ba6aef2637f1,webpack/webpack,"Merge branch 'refactoring/plugin-system-compiler' into refactoring/plugin-system-all
"
e6687436b1299390d6bc5d4429092b429e09e0c1,webpack/webpack,"Merge pull request #6356 from webpack/buffer_from

Use Buffer.from instead of new Buffer"
5c8a0d23ba44fa0f78db085b55e2acc24b17e9c8,webpack/webpack,"Merge branch 'master' into next

# Conflicts:
#	test/statsCases/aggressive-splitting-entry/expected.txt
#	test/statsCases/aggressive-splitting-on-demand/expected.txt
#	test/statsCases/chunk-module-id-range/expected.txt
#	test/statsCases/chunks-development/expected.txt
#	test/statsCases/chunks/expected.txt
#	test/statsCases/color-disabled/expected.txt
#	test/statsCases/color-enabled-custom/expected.txt
#	test/statsCases/color-enabled/expected.txt
#	test/statsCases/commons-chunk-min-size-0/expected.txt
#	test/statsCases/commons-chunk-min-size-Infinity/expected.txt
#	test/statsCases/commons-plugin-issue-4980/expected.txt
#	test/statsCases/define-plugin/expected.txt
#	test/statsCases/exclude-with-loader/expected.txt
#	test/statsCases/external/expected.txt
#	test/statsCases/filter-warnings/expected.txt
#	test/statsCases/import-context-filter/expected.txt
#	test/statsCases/import-weak/expected.txt
#	test/statsCases/limit-chunk-count-plugin/expected.txt
#	test/statsCases/max-modules-default/expected.txt
#	test/statsCases/max-modules/expected.txt
#	test/statsCases/module-assets/expected.txt
#	test/statsCases/named-chunks-plugin-async/expected.txt
#	test/statsCases/named-chunks-plugin/expected.txt
#	test/statsCases/no-emit-on-errors-plugin-with-child-error/expected.txt
#	test/statsCases/optimize-chunks/expected.txt
#	test/statsCases/performance-different-mode-and-target/expected.txt
#	test/statsCases/preset-detailed/expected.txt
#	test/statsCases/preset-normal/expected.txt
#	test/statsCases/preset-verbose/expected.txt
#	test/statsCases/resolve-plugin-context/expected.txt
#	test/statsCases/reverse-sort-modules/expected.txt
#	test/statsCases/scope-hoisting-bailouts/expected.txt
#	test/statsCases/scope-hoisting-multi/expected.txt
#	test/statsCases/simple-more-info/expected.txt
#	test/statsCases/simple/expected.txt
#	test/statsCases/tree-shaking/expected.txt
#	test/statsCases/warnings-uglifyjs/expected.txt
"
a87b61f526a80c28b35384a806b0e6767d221dbf,webpack/webpack,"Include child compilation hash into parent hash computation (#3744)

Without it, child compilations like those added by ""extract-text-webpack-plugin"" are not included in stats hash and aren't properly displayed on change."
37b7474651d4cf68f5d14fae8b35f8fd45d51672,webpack/webpack,"Refactoring, make options simpler
breaking change: performance options changed
"
9c3e74a0dd37350515d563fb7fc920b464cb12ba,webpack/webpack,"splitted require polyfill into extra module
"
214801493ed33f3ee91215f45c38408327516a86,webpack/webpack,"improve NormalModule performance

cache source and meta hash
"
3fb63f94cc76792b09055676254f381462fa1be8,webpack/webpack,"Deprecate System.import() parser plugin

- `system: undefined`: Warns if `System.import()` is used
- `system: true`: Disable warning
- `system: false`: Skip `System.import()` instrumentation
"
1c2835a7f1f874f77004f65cf556401f536c55a2,webpack/webpack,"Merge pull request #5709 from webpack/refactor/sets

Use SortableSets for Chunk.parents/blocks"
dae9de6595bd5da493c439b5437695410220474b,webpack/webpack,"Merge branch 'next' into feature/validate-plugin-options

# Conflicts:
#	lib/SourceMapDevToolPlugin.js
#	lib/optimize/AggressiveSplittingPlugin.js
#	yarn.lock
"
2bac2c173757a97587e9738353f2ae7868d6f8a6,webpack/webpack,Merge branch 'master' into refactor-ContextDependencyTemplateAsId
6542e4207831433900fe6cebda402a962b32270a,webpack/webpack,"Merge pull request #4112 from timse/cleanup-chunk

Cleanup chunk"
7475e3b6987311cfbca34072bafd55c8b1f9a2e0,wildfly/wildfly,"Add begning of deployment model and split processor into parse and install
"
b1417d8e240eba9e6c3117c9ef6857af04c6d59d,wildfly/wildfly,"Merge pull request #9324 from mkouba/WFLY-6941-next

WFLY-6941 Split Weld subsystem"
ffe0464038aedde87ecd52338eb508728594b58a,wildfly/wildfly,"Rename j2eemanagement subsystem to jsr77
"
4625b6ff46089953dca7b0b042aacf3589b86836,wildfly/wildfly,"[AS7-2973] Separate service configuration from OSGi domain model
"
fe0f0069efb60850280abd759b5dff3e6231370a,wildfly/wildfly,"[AS7-1652] Move OperationValidator into controller module, an a validate-operation operation handler.
"
f3ce38d34e214f0933fe24679bb030132ad8faf0,wildfly/wildfly,"AS7-1062 Rename ModelNodeRegistration to ManagementResourceRegistration
"
d6334f4c174fa8270c0380d60703a244665d92d8,wildfly/wildfly,"[AS7-4618] [AS7-4621] JMS CF attributes

* HornetQ API no longer allows to set backup connector name on a
  connector reference
* add warning when parsing XML that backup-connector-name is deprecated
* do not write it when outputing XML
* update XSD and resource description that the backup is deprecated and
  not taken into account
* when populating the model for the ConnectionFactory ADD operation,
  check that 1 and only 1 of CONNECTOR or DISCOVERY_GROUP_NAME is
  present
* add same check when the XML configuration is parsed
* refactor code when parsing XML configuration as the check for
  discovery-group-ref vs connectors also apply to cluster connections
  and bridges
"
be697588aff9a4ddd86623816eca02d59a5bca80,wildfly/wildfly,"Break the component install process into multiple processors.  Also utilize the component config for attaching required configs
"
fc66f7313b49efbce0fb252ad2e625c5b53f85f7,wildfly/wildfly,"Separate jaxr/juddi into standalone project
"
111c051734520b9eb9e8fea4e8454be8d30361c0,wildfly/wildfly,"rename executionContext to operation
"
2c5d8ecfacde453479cb7ad0977b38296dddae3d,zaproxy/zaproxy,"Issue 1184 - Improve support for IBM JDK

 - Changed SSLConnector to use the default implementation of KeyManagerFactory (""SunX509"", ""IbmX509"", ...) for certificate generation;
 - Changed OptionsParamCertificate to also set the IBM JDK system property for SSL renegotiation;
 - Changed SSLContextManager to also use the PKCS#11 provider of IBM JDK (updated the corresponding test class to also check for IBM JDK PKCS#11 provider);
 - Renamed the class SunPKCS11Configuration to PKCS11Configuration to be JRE/JDK agnostic, changed it to be immutable and use the builder pattern (renamed the corresponding test class and updated it to test the new behaviour);
 - Changed OptionsCertificatePanel to show (and log) errors which also mention the IBM JDK PKCS#11 provider.
"
9a48f0eddefa51c353c0cc7e361d65f72bab806b,CZ-NIC/turris-os,"brcm63xx: fix HG556a boards and remove fallback board

This changes board info to match the Wiki
http://wiki.openwrt.org/toh/huawei/hg556a, removes the no longer needed
fallback board and fixes HG556 Ralink eeprom extraction.

Signed-off-by: √Ålvaro Fern√°ndez Rojas <noltari@gmail.com>
[jogo: rename partitions instead]
Signed-off-by: Jonas Gorski <jogo@openwrt.org>

git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@42206 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
e4884f2c405f7bf6c192a3fbd25e01f8a055517c,CZ-NIC/turris-os,"kernel: drop obsolete linux 3.10 related dependencies/checks

Signed-off-by: Felix Fietkau <nbd@openwrt.org>

git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@45361 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
d6a5fc493b8833f14fe49a9ad4b6b5f4ee49c893,CZ-NIC/turris-os,"ar71xx: simplify WP543 image generation, and fix rootfs offset


git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@20063 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
d8a99a038c06178cb1d08b3f96912cfc4d853236,CZ-NIC/turris-os,"b43: Add support for removing unnecessary firmware files to reduce the image size.


git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@14929 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
fb4930441077957f7bad0e52c2667c255fd34d72,CapsAdmin/goluwa,"refactor how filling the gbuffer is done
"
9951b56dc92ee7016472d2c139ed978014caf62b,Mirantis/virtlet,"Merge pull request #205 from Mirantis/metadata_access_refactor

metadata: Refactor boltdb storage"
d8f0fba2c7aa966fb0dffcdeb6d7c681b146b2f3,Mirantis/virtlet,"Merge pull request #297 from Mirantis/ivan4th/refactor-libvirttools

Fix testability of libvirttools & improve build/cmd.sh"
093d64bd52e7291c06160f6bc4fca280ff9292ab,RectorPHP/Rector,"phpstan cleanups
"
76e88e6d1076708e23eadace6551ab3e77b5fb8b,RectorPHP/Rector,"composer: drop unused better-reflection
"
caf496628bfaf4b99e89d23ca7fd3d44453a98b6,RectorPHP/Rector,"[DeprecationExtractor] cleanup - drop ClassAndMethodMatcher
"
a079a29f6b1e80d389aed8af62a49c943b712056,RectorPHP/Rector,"rename DescribeCommand to GenerateRectorOverviewCommand
"
e0ffef5ef4520ddc142258dc2698b68559ec9a97,Talend/data-prep,"[Backend] Moves uk.co.datumedge dependency (version definition) to backend module.
[Dataset] Removes duplicate dependency in pom.xml for uk.co.datumedge json library.
[Dataset] Adds static import to uk.co.datumedge json library method.
"
078640514ea4c78e7f9a092706de337dafde9051,Talend/data-prep,"TDP-11: ""Spark engine - jar allows a basic transformation"" (Transformation service)

[API] Renames ""services"" to ""api"".
[API] Adds unit test for api (includes calls to underlying services).
[API] Adds API service to backend POM.
[Backend] Names Configuration beans to prevent default name collisions.
[Transformation service]: Actions are now expected to be Base64-encoded.
(https://jira.talendforge.org/browse/TDP-11)
"
5ad74eab29b8d05ceaf4d0632b8d052a50627160,Talend/data-prep,"[Services] Adds a docker application.properties.
[Platform] Moves configuration from volumes to environment variables.
"
91ca69619c03322aab87beeeebe0f5a0dca4e333,Talend/data-prep,"chore(TDP-4490): Create isolated service for scheduled actions  (#824)

chore(TDP-4490): Create isolated service for scheduled actions
* Create dataprep-maintenance module.
* Move scheduled class to maintenance module.

[Review]
* add some comments here and there
* move the maintenance product within backend

(cherry picked from commit 445d3b5)
"
f4f8127db8561e7cbf71af62bb85cb94302acdbc,Talend/data-prep,"Adds support for ""date"" type.
Fixes query retry in case of HTTP 202 (accepted).
Review asynchronous analysis steps.
Removes unused method in content store.
"
d25e28075689fb622f30ae98b2ca24badcd86111,ZeroK-RTS/Zero-K,"Refactored and re-added tactical missile sub to Strider Hub, rework or revert to follow.
"
1419c7851103910a08faad8c818ea8e02fce4388,ZeroK-RTS/Zero-K,"Auto Reclaim/Heal/Assist: Rename file (puts it under Units category in widget list); clean up code.
Auto Reclaim/Heal/Assist, News Ticker and Unit Groups do not intrude on cutscenes.
Remove debug echo from Epic Menu.

svn path=/trunk/mods/zk/; revision=9471
"
c30b38e2aa05defb08c4152b1e6e0eee5c63a792,bazelbuild/bazel,"Remote+BES: Stabilize command line flags.

Update the command line flags used by remote execution/caching as well as the
build event service (BES).

Major changes:
 - Remote execution/caching and BES share flags for authentication and TLS.
 - Removed API Key authentication from BES, as it's not being used.
 - Add TLS support to BES upload.
 - Add --bes_project_id flag. If set, the value is propagated as part of BES
   lifecycle events.

For reviewers:
Start your review at CommonRemoteAndBesOptions, BuildEventServiceOptions and
RemoteOptions. The other changes are mostly automatic IDE renames of fields and
flag updates in shell script tests.

RELNOTES: None.
PiperOrigin-RevId: 156553857
"
b5fd7611017f95e1303aa1f2c4a0a2962f2cc4eb,bazelbuild/bazel,"Rename --keep_incrementality_data to --track_incremental_state.

New name clears the namespace a 2nd flag that will wipe the build graph after the build. The old name would be confusing as it could easily apply to that, and so needs to be more specifically just about tracking state in the first place. The new flag can be clearly separate and about keeping state after the build.

Partial roll forward of https://github.com/bazelbuild/bazel/commit/9321316b34767b06c3071b2cf2a4de189874fcce, with fixes to documentation that are still relevant.

RELNOTES: Rename --keep_incrementality_data to --track_incremental_state
PiperOrigin-RevId: 179078292
"
49b5bbc665b0cef3bcc9686cb2148e5a2d4ee7c6,bazelbuild/bazel,"Remove FeaturePolicyConfiguration et al. in favor of the new Whitelisting.

This migrates the config_feature_flag implementation over and removes the
old flag (which was not used except to test it). Fare thee well, old flag.

RELNOTES: None.
PiperOrigin-RevId: 165995681
"
bb50580a7f3eb3f4e7c5fba8e92d20e931591a70,bazelbuild/bazel,"Inline CustomCommandLine methods that can be expressed using VectorArg.

This whole CL was done using IDE refactoring tools and should be safe.

PiperOrigin-RevId: 168275575
"
000494327d4efab63362f3a940db74ffa8b9d712,bazelbuild/bazel,"Implement the core structure for dynamic configurations.

This is a big change, so let me walk you through the key pieces:

1) This cl provides an alternative mechanism for creating configurations and doing configuration transitions that's ""dynamic"" in that the configurations can be created on the fly and the transitions are arbitrary mappings from BuildOptions --> BuildOptions that can also be created on the fly. It also integrates this with ConfiguredTargetFunction, so the configured target graph automatically uses this framework.

2) It does *not* replace old-style (which we'll call ""static"") configurations. For a number of important reasons: It's not yet at feature parity (particularly: no LIPO). It's not remotely tested across real projects enough to have confidence that it's battle-ready. It doesn't yet handle certain ""special"" functions like BuildConfiguration.prepareToBuild() and BuildConfiguration.getRoots(). It still relies on the old static transition logic to determine what transitions to apply (eventually we'll distribute that logic out, but that's too much for a single cl). We need the option to toggle it on and off until we have enough confidence in it. So with this cl, builds can be done in either mode.

3) The new flag --experimental_dynamic_configs toggles use of dynamic configurations.

4) Dynamic configurations are created with the Skyframe function BuildConfigurationFunction (this was already created in an earlier change). This consumes a BuildOptions and a set of configuration fragments to produce a BuildConfiguration.

5) Dynamic transitions are instances of the new class PatchTransition, which simply maps an input BuildOptions to an output BuildOptions.

6) Since static and dynamic configurations have to co-exist (for now), this cl tries hard to keep today's transition logic defined in a single place (vs. forking a dedicated copy for each configuration style). This is done via the new interface BuildConfiguration.TransitionApplier. BuildConfiguration.evaluateTransition is modified to feed its transition logic into TransitionApplier's common API. Both dynamic and static configurations have their own implementations that ""do the right thing"" with the results.

7) The transition applier for dynamic configurations basically stores the Transition, then allows DependencyResolver (which calls BuildConfiguration.evaluateTransition) to return Dependency instances containing that Transition (vs. a BuildConfiguration, which they traditionally contain).

7.5) An earlier variation of the dynamic transition applier retained BuildOptions (e.g. when it got a Transition it immediately applied it to get its output BuildOptions, then stored that). This had the advantage of making composing of transitions easier, especially within BuildConfiguration.evaluateTransition (which can theoretically apply multiple transitions to the input configuration). But it turns out that applying transitions has a cost, and it's simply more performant to pass them through until they're really needed.

8) In dynamic configuration mode, after ConfiguredTargetFunction gets its deps (e.g. an <Attribute, Dependency> multimap), it ""trims"" the configurations for its dependencies by a) only including config fragments required by the deps' subtrees and b) applying the transitions that came from 7). This all happens in the new method ConfiguredTargetFunction.trimConfigurations.

9) trimConfigurations is heavily performance-optimized based on a lot of experience running this through a large project within Google. As it turns out, the cost of host transitions can be atrocious (because there are a lot of them). Also, BuildOptions.clone() is expensive. And just creating BuildConfiguration SkyKeys also has a cost (largely because of BuildOptions cloning), so that shouldn't be done except when really necessary. My experience with this convinced me it's worth making this method complicated for the sake of making it fast. Since it basically visits every edge in the configured target graph (at least), it really needs to be slick.

10) Since host transitions in particular are problematic w.r.t. speed, I compute the host *once* in ConfigurationCollectionFunction.getHostConfiguration() and expose that reference to ConfiguredTargetFunction and other Skyframe functions. This limits recomputation to just when the fragments are trimmed.

11) Since options cloning is expensive, I'm doing something scary: exposing a BuildConfiguration.getOptions() method that returns a direct reference. Since BuildOptions is mutable, this is dangerous in the wrong hands. I can experiment with going back to cloning (with the caching of host transitions it may not matter as much), but we may ultimately have to put up with this risk for the sake of performant analysis time. What would be *really* awesome would be to make BuildOptions immutable. But that's not going to happen in this cl.

So in short, the key abstractions in this cl are:
 - PatchTransition
 - BuildConfiguration.TransitionApplier
 - ConfiguredTargetFunction.trimConfigurations

The current implementation imposes no analysis time penalty

--
MOS_MIGRATED_REVID=101474620
"
8a2baea4513f0989be8dc5ea89ca9ddb5b2555eb,bazelbuild/bazel,"Consolidate instances of the --keep_going flag.

RELNOTES: None.
PiperOrigin-RevId: 179468685
"
ef651712e9bee512967d8ec6ac6d63fda41addab,bazelbuild/bazel,"Add a source_jars variable to OutputJar.

Having a correlation between an output jar and a source jar is not enough.
There may be situations when an output jar is generated from more source jars,
not just one. We need this flexibility especially in Skylark for the java
sandwich, when the user can compile multiple source jars.

--
PiperOrigin-RevId: 149510534
MOS_MIGRATED_REVID=149510534
"
e9b10399f6a148a3d20442f2c5020b05fa891873,bazelbuild/bazel,"Move hard-coded compilation-mode-specific flags in ObjcConfiguration.

PiperOrigin-RevId: 172932367
"
a6c88966a5dc7713df4ec64bbf935bc5023e2f9d,bazelbuild/bazel,"Don't crash when building environment groups directly
(following PackageGroup's precedent).

Also cleanup: generalize the pattern by which we determine
non-configurable target types.

--
MOS_MIGRATED_REVID=104125803
"
75aa6a46a304c0ccdf16c5e3dffbc1b98c241adb,bazelbuild/bazel,"Move the mobile_install command to a separate package and module

The mobile_install command has a hard dependency on the Android rules. For
mu-Bazel, we're trying to build a minimally useful Bazel binary, and that
should not contain the Android rules. Moving the mobile install command
implementation to a separate package is one step towards that.

--
PiperOrigin-RevId: 144680452
MOS_MIGRATED_REVID=144680452
"
22616ae8ea53df3909fd16b74e0d9210138dc2c2,bazelbuild/bazel,"Add Android IDL jar outputs.

These outputs are a jar and source jar for the results of aidl processing. 

This is used to add aidl output to IDEs separate from the source code,
similar to annotation output (gen jars).

--
MOS_MIGRATED_REVID=104024453
"
ab64e592fe5f5fb2e5dd2996b72c75416b2de721,bazelbuild/bazel,"Make --experimental_interleave_loading_and_analysis a no-op.

This is now enabled by default, and this change removes the code path where
it's disabled.

Remove a few tests that were testing the removed code, and rewrite some others
that still seem useful. We still drop configured targets on configuration
changes, so we use that to check that things are dropped from Skyframe.

--
MOS_MIGRATED_REVID=132226208
"
e8d9c4cb9b7ce0a41cde67622997a86be876ede9,bazelbuild/bazel,"Rewrite workspace creation to use a builder class.

An instance of the builder is passed to all modules, which can each add / set
things on the builder. This reduces the BlazeModule API surface, while also
being more flexible for future changes.

--
MOS_MIGRATED_REVID=126613981
"
922d1e671bc02086afdcfb8ae1636eefc53e0ee2,bazelbuild/bazel,"remote: Add interceptor for logging gRPC calls during remote execution/caching

This provides a io.grpc.ClientInterceptor implementation that can be used to log gRPC call information. The interceptor can select a logging handler to use based on the gRPC method being called (Watch, Execute, Write, etc) to build a LogEntry, which can then be logged after the call has finished. Unit tests for the interceptor are included.

In this change, the interceptor is never invoked, nor are there any handlers implemented for any gRPC methods. The interceptor also never tries to log any entries.

To avoid circular dependency issues (Remote library will depend on logger which depends on remote library for utils), I've factored out the utility classes from the remote library into their own directory/package as part of this change.

PiperOrigin-RevId: 187926516
"
ba8b2d987674c6cc670b85743c0fc75e86b721c3,bazelbuild/bazel,"Automated g4 rollback of commit 045104899738594d85f9ab9b0b9ccbde320b8055.

*** Reason for rollback ***

Breaks internal tests that use nonstandard crosstools

*** Original change description ***

Make C++ archiving use action_configs instead of hardcoded flags

RELNOTES: Use action_config in crosstool for static library archiving, remove ar_flag.
PiperOrigin-RevId: 153344597
"
5ea2b14a9cece2e42779a8b3e4e8f3483e991ee1,bazelbuild/bazel,"Clean up the semantics of input discovering actions a bit by making updateInputs() and inputsKnown() non-overridable and removing setInputs().

This comes at the cost of adding a flag to every action instance that's not used for non-input-discovering actions, but I think that's a deal. Simpler APIs are good, mmmmkay?

Also fixed a few pre-existing issues in TestAction and ObjcCompileAction.

--
PiperOrigin-RevId: 148749734
MOS_MIGRATED_REVID=148749734
"
656a0bab1e025ff3c27d595284a4bf1c5a8d8028,bazelbuild/bazel,"Big round of sandbox fixes / performance improvements.

- The number of stat() syscalls in the SymlinkedSandboxedSpawn was way too high. Do less, feel better.

- When using --experimental_sandbox_base, ensure that symlinks in the path are resolved. Before this, you had to check whether on your system /dev/shm is a symlink to /run/shm and then use that instead. Now it no longer matters, as symlinks are resolved.

- Remove an unnecessary directory creation from each sandboxed invocation. Turns out that the ""tmpdir"" that we created was no longer used after some changes to Bazel's TMPDIR handling.

- Use simpler sandbox paths, by using the unique ID for each Spawn provided by SpawnExecutionPolicy instead of a randomly generated temp folder name. This also saves a round-trip from our VFS to NIO and back. Clean up the sandbox base before each build to ensure that the unique IDs are actually unique. ;)

- Use Java 8's Process#isAlive to check whether a process is alive instead of trying to get the exitcode and catching an exception.

Closes #4913.

PiperOrigin-RevId: 190472170
"
8b4f9f51f664c722f76d224a4d19c41d10cd20b7,bazelbuild/bazel,"Remove ConfigurationCollection{Function,Value}, BuildConfigurationCollection.Transitions.

Part of the static config cleanup effort.

PiperOrigin-RevId: 165607492
"
d9e733d8cd64450ab8690ab3227bba6b254e5898,bazelbuild/bazel,"Remove support for the deprecated include() statement in order to be able to separate Skylark from the rest of the code so that Label parsing can be simplified.

This is another go at []: now that the tests were fixed in [] and [] it can be submitted again.

--
MOS_MIGRATED_REVID=103364881
"
77c9f5ec751f4adf3a8095e2e2943ec59dc12d26,bazelbuild/bazel,"Rewrite the Executor/ActionExecutionContext split

Move everything to ActionExecutionContext, and drop Executor whereever possible.
This clarifies the API, makes it simpler to test, and simplifies the code.

PiperOrigin-RevId: 159414816
"
9409109c3016c51403ed4387ecda6c99459f1a8d,bazelbuild/bazel,"build_windows_jni.sh: move file to subdirectory

The script more logically belongs in
src/main/native/windows than in src/main/native.

Also move the //src/main/native:windows_jni rule
into //src/main/native/windows:windows_jni, so the
logic of building the JNI library is fully
contained in that package.

Change-Id: I96e19003932cc0ddc5af3471b0b31a1aec09b8fa
PiperOrigin-RevId: 160876594
"
490b0956e6cc8449072f3010c5197d9d6c621d09,bazelbuild/bazel,"Factor out BuildConfigurationCollection.Transitions.getDynamicTransition.

This is a legacy dependency on the configuration transition table, which is
only needed for static configurations. Dynamic configurations didn't actually
use anything in that table: this was just a convenience interface that could
have equally been defined somewhere else. So this cl defines it somewhere else.

There's still one last dependency: Transitions.configurationHook. We'll tackle
that in a followup cl.

PiperOrigin-RevId: 161141650
"
22d3570c5ee212291d98e29cdccbe6ff350c7a38,bazelbuild/bazel,"Move the useHeaderModules member from CppCompilationContext into the
CppCompileAction. It seems wrong to bind this to a context. Instead, we should
be able to determine for each action, whether it can use modules or not. Also
allow overwriting the value obtained by the feature configuration in the
CppCompileActionBuilder. This can e.g. be used to disable modules in
CppSemantics.finalizeCompileActionBuilder(), if modules cannot be supported
under certain circumstances.

--
MOS_MIGRATED_REVID=140610096
"
1ed3c47564e48bcdfff76a356da80ccc9da36c5b,bazelbuild/bazel,"Move the Error Prone plugin into Bazel

--
MOS_MIGRATED_REVID=96365813
"
4a81538fa6ea546b5b762c477efec8070fa2d3d3,bazelbuild/bazel,"Remove the ""glibc"" selector from CppConfiguration.

It's not used and it causes difficulties, since it's a function of the CROSSTOOL file, which we want not to affect configurations (eventually).

--
MOS_MIGRATED_REVID=125455664
"
3fbcc611533ba19f283afa3e01240456de9e788e,bazelbuild/bazel,"Add a Constants.TOOLS_PREFIX constant that will serve to redirect the Bazel tools repository.

This is a no-op refactoring CL. The actual switch will be made once everything passes with the new setup.

As a side cleanup, change the awkward realAndroidSdk() / realAndroidCrosstoolTop() mechanism to a converter.

--
MOS_MIGRATED_REVID=104649067
"
918814e9fc0c2055d275b22fea0a8d9bd2e011d8,bazelbuild/bazel,"Bazel client: retry moving install base directory

Do not give up immediately if renaming/moving the
install base directory fails, wait and retry
instead.

This is necessary because on Windows the directory
we just created and populated with the extracted
embedded binaries may still be scanned by the
antivirus, so there are open file handles in it so
it cannot be renamed. This new logic ensures the
AV has enough time to scan all files, close the
handles, letting us successfully rename the
directory.

Fixes the occasional ""install base directory
cannot be renamed in place"" error messages on
Windows.

See https://github.com/bazelbuild/bazel/issues/2107

--
PiperOrigin-RevId: 146899919
MOS_MIGRATED_REVID=146899919
"
4f3d7780dbadc36fdc3c5992d3d094e086b9c619,bazelbuild/bazel,"Rename android_studio_ide_info proto and members.

android_studio_ide_info -> intellij_ide_info
RuleIdeInfo -> TargetIdeInfo
Drop ""rule"" from all sub-ide infos (eg. JavaRuleIdeInfo -> JavaIdeInfo)

--
MOS_MIGRATED_REVID=140438983
"
692f763fe7bfb36610a711a4ca05194db721a34b,bazelbuild/bazel,"Replace Transitions.configurationHook with equivalent rule class transitions.

This removes the last dynamic dependency on the static configuration
transition table.

PiperOrigin-RevId: 161162272
"
d63ee814e2493bc74b74842744a8471a0aeeb0ef,bazelbuild/bazel,"Remove ConfigurationFactory as part of the static configuration cleanup.

PiperOrigin-RevId: 165478994
"
77a512712317396e2a7d01cbe3204664e740de4b,bjadamson/BoomHS,"Tie near/far planes together, removing two sets of redundant fields.
"
74c1aa74f1f2415e2df27789824b7566fc6badd5,bjadamson/BoomHS,"rename ScreenViewport -> Viewport
"
c39adfb177068909c8d34e154f60c3b6eadcc8ce,bjadamson/BoomHS,"Remove viewport from EngineState. Also renamed Rectangle -> FloatRectangle.
"
8e50369359ff763e064004830a008a5c0eb91c81,bjadamson/BoomHS,"Big refactor working towards getting view frustum figured out.
"
c42d4d20fc497200ccc42b890122c5551fbb166a,bjadamson/BoomHS,"cleanup
"
e7f3484cb68163bcd3e8b077350340991caa8dfa,bjadamson/BoomHS,"Cleanup a lot of things, working towards FPS and TPS camera.
"
a5c73e177fd2884e13b7b0e08d3615f97f3055c3,bjadamson/BoomHS,"simplify adding new pipelines
"
3a31da2efa7ffe190f724ae4bf382b7589a61e42,bjadamson/BoomHS,"cleanup
"
b6acc1d8b92460cf43281781110d19e6c934536d,bjadamson/BoomHS,"Move common glsl code out to library file.

Update build infrastructure to manage which files get prepended with common code.
"
1b1e0c2c7da7d4da738433f44912b7cde6c76a84,bobintetley/asm3,"27/04/15 Merge duplicate records option when importing CSV files #36
"
fd721f0aa23f317e1e6e609c270e068180cf71a5,bobintetley/asm3,"Refactor db.get_database to remove boilerplate and simplify #468
"
43363c9c6b7aa55b516009d9ea2f9b63f8d503c3,bobintetley/asm3,"Move create of sequences/views/sp into db objects with get_id #230
"
1cfa426c2405e4060d9050db3414baf0638a305e,carsenk/denarius,"More cleanup/Mandatory Procotol Update
"
2fada873d31f484397313a43bc857efbb144df54,cloudfoundry/cli,"embed stack and application in unified pushaction.Application

[#149195571]

Signed-off-by: Alex Melnik <d8d38b2b5e79d5bbc1987e042c4cf1e377fad8e2@suse.com>
"
ff50217d4f50e182e8ede79ff485cb1e3562dd26,cloudfoundry/cli,"Refactor install plugin to use counterfeiter fake.

[#79964866]

Signed-off-by: Tyler Schultz <6b7a73f4f7cffc2a148becd12890940350ddfa95@pivotallabs.com>
"
780a0e88de008e780f4b743479fbe0c16f1bcb19,cloudfoundry/cli,"remove changes to refactored code now that rata has been updated

[finish #150153617]

Signed-off-by: Maria Shaldibina <dc03896a0185453e5852a5e0f0fab6cbd2e026ff@pivotal.io>
"
1aaeb106ca930ade5e1b38acb4822d0e40b4fb41,cloudfoundry/cli,"Refactored commands to be run with a runner, adding possibility for command requirements

Signed-off-by: Casey McTaggart <63faea5928dfbe587b38d2b4ebf883283a0e7d8a@pivotallabs.com>
"
140ba2b16f743d8973b5ef542a79c52168346bdd,cloudfoundry/cli,"refactor listing domains

During push, all domains are requested

[#64525814]
"
d21b8e836cf014e02d7ff731e80fa4e9e314f377,compbiomed/celda,"Perplexity function fixes (#298)

* Fixed bug in calculatePerplexity where the type needed to return both counts and posterior from the call to factorizeMatrix

* Fixed calculatePerplexityWithResampling functions to run factorizeMatrix on the original counts matrix and predict perplexity on the newly sampled matrices.

* Refactored perplexity resampling and plotting functions to take in a celda.list object as input. calculatePerplexityWithResampling now adds a perplexity data.frame back to the object. New model-specific plotting functions were added

* Added s3 generic for plotGridSearchPerplexity. Changed output object of celdaGridSearch to have both 'celda_list' and the celda model type as classes.

* updated documentation

* add new documentation files

* Updated unit tests to handle new perplexity functions and plots. Removed all references to 'validate.counts' in factorizeMatrix functions. Added 2nd level class to celda_list objects to indicate which model. Fixed bug in simulatedCounts by moving call to 'processCounts' before the new celda object is made. Also added checksum to new celda object.

* Updated documentation

* fixed documentation
"
c3fbe798cc661a16d5c7c93d5bcc698d80a3b3d7,compbiomed/celda,"Completed renaming of calculate_loglik_from_variables #137
"
cde1949a097b43c6a42f97f9c92d630d93639107,compbiomed/celda,"Merge pull request #145 from compbiomed/branch-fix

Fix broken build. Clean up some Travis messages."
b9a079365ee86892826dbcdebc66f7b813896e72,compbiomed/celda,"Updates to celda: (#230)

* Added new distance metrics to celda

* Add library(SummarizedExperiment) to tests

* rename diffExp to diffExpBetweenCellStates

* Add K-detemination fxn alongside pre-run object for output. Vignette modifications

* Vignette, modify

* New fxn: looks up transcriptional state of a gene

* fix lookup fxn

* new heatmap fxn, added R object for calcPerplexity result, update to vignette

* Minor formatting update for vignette

* Minor modification to vignette

* Vignette update. Finalized PBMC analysis. PBMC celda object updated for 2nd-pass run. renderProbability heatmap split to two fxns.

* fix to issues #241 and #242
"
e878db0ed7d673f4ab9a08445ce352f18f04c12b,compbiomed/celda,"Fast matrix multiplication with RcppEigen (#247)

* Require class check on count matrix.

Require that all provided count matrices are checked to see if they're integer type, and if not, casting them to be that type.
Explicitly cast simulateCells() simulated count matrices to integer. Added unit tests to ensure this happens for this function.

* Updating documentation

* Fixing broken unit tests

* Moving dangling references to process.counts param

* Set integer storage.mode in processCounts()

* RcppEigen for fast matrix multiplication in celda_C EM

Use RcppEigen to do fast matrix multiplication in the newly implemented EM optimizations in celda_C.

* Fixed call to eigenMatMultInt. Added documentation.

* Rename rowsum functions. Documentation for eigenMatMultInt.

* Fixing loading of C++ function
"
471274753b440e8fa9e086b2a0916e28ee3775be,compbiomed/celda,"Made S3 Generic for factorizeMatrix. Reordered params for that fn.
"
3db2b01228cfc920454acf00f5e276611ba8f933,compbiomed/celda,"Retrying removing obsolete dependencies.

* Reverted previous commit
* Merged from compbiomed/celda@master
* Removed known obsolete dependencies
* Added example for celda.CG.grid.search.res
"
df0709b733a63614b426fce4a176253fb5766df8,compbiomed/celda,"Incorporates fxn name changes, moduleHeatmap refactored
"
5d7017f3392114f23f42deed5c27b4720cf324ee,create3000/x_ite,"Renamed modelMatrix.
"
08aca748017daacdadfe63c8aad817ef84917576,danger/danger-js,"Refactorings to pull out the Git DSL from the GitHub filr
"
2bb1aafaafc66f597283aaebe3586af6b21d9e61,edx/edx-platform,"Merge pull request #6752 from cpennington/modulestore-test-case-cleanup

Clean up ModuleStoreTestCase"
4381674ec57aca5eb796f94eaa81b302bdb89dec,edx/edx-platform,"Move common scss mixins to common/static/sass, and tweak the video player to have more in common between the cms and the lms
"
c6777a5b25b3423cd21ee2612bb9fdcda51e8b4e,edx/edx-platform,"Bok Choy tests for the split payment and verification flow

Adds mode creation endpoint to course_modes app and ability to bypass media device access prompt when proceeding through verification flow in a testing environment.
"
6cf2742e32f9ace474b0a1e4ae4d898b0c868c3c,edx/edx-platform,"Trim unneeded files
"
bcef7611d40b10439699b773c1d8f77153cea28b,edx/edx-platform,"Clean up logistration copy
"
ec3011635dbfb8c86253d1db0bfed9f9078c3e88,edx/edx-platform,"LMS-11179 Fix Assets with Split
"
bd7715a393d82abb1e0d17539b8d8e2e5326b303,edx/edx-platform,"Clean up after track selection experiment
"
d9f3c70e75d3b468ad9db51c509fa29e2134f23e,edx/edx-platform,"Merge pull request #13626 from edx/efischer/grades_rc_fix

Grades RC cleanup"
fd1ed2ce6d0f122650eec6528681e231adb9e568,edx/edx-platform,"Remove unneeded validation on grades model

These checks are causing SQL query numbers to scale linearly with the
number of subsections being created/updated, and the errors they
check for have not been seen in prod.

TNL-6225
"
b93f00e02fa2ef8b63fd5eb6d7fd1d52daa9cf88,edx/edx-platform,"Rename system_test to get_test_system
"
3ce87583ab6be7fde4ccfa5aa7be360ff451f505,edx/edx-platform,"Shift enroll/unenroll logic to CourseEnrollment model, add is_active and mode.

Features coming down the pipe will want to be able to:
* Refer to enrollments before they are actually activated (approval step).
* See what courses a user used to be enrolled in for when they re-enroll in
  the same course, or a different run of that course.
* Have different ""modes"" of enrolling in a course, representing things like
  honor certificate enrollment, auditing (no certs), etc.

This change adds an is_active flag and mode (with default being ""honor"").
The commit is only as large as it is because many parts of the codebase were
manipulating enrollments by adding and removing CourseEnrollment objects
directly. It was necessary to create classmethods on CourseEnrollment to
encapsulate this functionality and then port everything over to using them.

The migration to add columns has been tested on a prod replica, and seems to be
fine for running on a live system with single digit millions of rows of
enrollments.
"
e26fc08d2b08efe7e6409159ad29db942eee63d1,edx/edx-platform,"Update logging.getLogger() calls to use edx instead of mitx
"
e612572bad599a588a1dba239e4d0f1576113838,edx/edx-platform,"MITX -> MITx
"
6fbf2f9720ae153021e92e94fc1ff60eb1b0bc36,edx/edx-platform,"revert toString changes; use attr('data-id') instead of data('id') when mongo ids are involved
"
ec548fda0a6550b8cbc19a1789a4e8e7ee8f3f77,edx/edx-platform,"Added style for sequence nav and reworked courseware problems
"
1932c126b811789835e5208a96ced630437b688d,edx/edx-platform,"Rename DbModel to KvsFieldData.
"
5e69224c32484ef9e0507f469babccd71a85c09b,edx/edx-platform,"Deprecate escaping in display_name_with_default

- Remove escaping in display_name_with_default
- Move escaped version to deprecated display_name_with_default_escaped
- Does not include any other changes to remove double-escaping

Thanks to agaylard who initiated this work:
https://github.com/edx/edx-platform/pull/10756

TNL-3425
"
c44e52761518d468d9e08358695b4677916b26d8,edx/edx-platform,"Remove unused forums-related cruft
"
42f44848e5dfba4517769edaaf794bc302f6ef54,edx/edx-platform,"Merge pull request #12585 from edx/andya/course-navigation-safe-template

Refactor staff preview menu logic out of template"
bd1a0d96cf249899de41973406ff79da3d57f720,edx/edx-platform,"More Sass quality fixes
"
ef43840a79e58c8c7555880ad6f8203bf040bd9b,edx/edx-platform,"Ignore invalid-name errors for settings files

path.py objects report themselves as class objects, which confuses the heck out of
pylint. It tries to match variable names using the class-rgx regular expression
instead of the constant-rgx regular expression, and it doesn't match, so it
throws an error. Not sure how to fix pylint, so we'll just ignore these errors.
"
85814f0bbf75974f22264c84047b3a8984e49dd0,edx/edx-platform,"Support running Studio with optimized assets
"
88a3a69c7114fcbe1e4069b744a4b0f139b7aabc,edx/edx-platform,"added a bunch more overall style

--HG--
branch : kf-refactor
"
596634ebd6d562b49e1c06a50e31b60ca84dc3c3,edx/edx-platform,"Merge pull request #14426 from edx/andya/new-course-tab

Implement the new unified course tab with a separate outline page"
181b1e979b22a119220c4e211f86f7f9d4cdf38c,edx/edx-platform,"Remove unused imports from common, as reported by pylint.
"
ad84a961da90669a2f8809d11bdf9063271a77de,edx/edx-platform,"new header styles; collapse all button added to courseware
"
dfa7c27e77a14a26e564d91872f0353109278b1b,edx/edx-platform,"Add multiple transcripts editor.

Fix donwload subs for non youtube videos and non-en language - continue.
Add acceptance tests.
Add detetion of assets on request.
Updated docstring.
Add fixes and acceptance tests.
Fix acceptance tests.
Update docsrtings and cleanup code, resful for language_id.
Specify exception type in POST.
Fix url in upload module.
Improve exception handling.
Remove 'en' and catching in editable_metadata.
Move descriptor.get_context test to lms tests.
Add query parameter to translation dispatch.
Response to format parameter of translatin GET request.
Fix Acceprance test: Metadata Editor.
move handlers to proper scores.
Split video player into smaller files.
Add ugettext and fix typoes.
Add changelog.
Support for downloading non-ascii filenames.
Change event binding.
Add content-language to download requests.
Reractor POST handler to not update self.transcripts.
"
3682fac83294f6f397829bea730b58a3c08ccf28,edx/edx-platform,"Add json escaping to Studio

Make escaping for json simpler and more consistent in Mako templates
- add escape_json_dumps to escape and json.dumps
- add escape_js_str to escape javascript string
- refactor Studio to use escape_json_dumps in Mako templates

TNL-2646: Escape json.dumps
"
e87388e24cb4faf8f8683b514ffed6c537b57d2b,edx/edx-platform,"Grades cleanup before updating grade report

Remove deprecated SingleSectionGrader.  TNL-5987
Remove display_name and module_id from Scores objects
Update CourseGradeFactory.__init__ to not be user-specific
Update some callers to use CourseGrade class instead of ""summary"" dict
Remove no longer needed course_grades.py module.
Renamed django signal from GRADES_UPDATED to COURSE_GRADE_CHANGED
"
d6f8def73321daddcdab035d8ffd760996ae2925,edx/edx-platform,"Move over rubric parsing logic to rubric module
"
308fe26b65cede710374bd2aa9566fd8b63afd0a,edx/edx-platform,"Clean up pep8 E128 issues
"
a3211a7405d92d09d59d3e2fe9ef437051324bcb,edx/edx-platform,"Introduction of the Microsite feature which allows for limited multi-tenant branding on a subdomain basis, e.g. foo.edx.org and bar.edx.org

fix errorenous logic when running a microsite that could reside in a hosting environment with a marketing site in front of it

pep8/pylint fixes

address PR feedback, remove underscore from test hostname

more pep8/pylint cleanup. Skip test_microsites test, it works on localdev, not on Jenkins. Need to talk with QA team

manually add Ned's single-to-double quote fix

change aws.py runtimes so that the microsite_dir that is read from configuration is changed to a python path

Conflicts:
	lms/templates/help_modal.html
"
47d1173394fa5b8302cd1bcc98285c1b4ec3a1ce,edx/edx-platform,"Refactoring and cleaning of code.
"
52f4f6afbc4f95143c82513875ca650370cee173,edx/edx-platform,"Pull modal cover and date utils into their own files.

Move overview-specific functions into overview.js.
"
03c8c0e1e7ab8ee7e050e92e17366621b6c9862c,edx/edx-platform,"Merge pull request #1880 from edx/db/mitx-edx-locmem

update LocMemCache location to use edx instead of mitx"
8c52c92bcbfe43a134ff846c05cd8afa487aadfb,edx/edx-platform,"Reverification iOS support and refactor

* Delete reverification templates
* Delete photocapture.js
* Delete unused ""name change"" end-points
* Rebuild the reverification views using Backbone sub-views
* Stop passing template names to the JavaScript code
* Avoid hard-coding the parent view ID in the webcam view (for getting the capture click sound URL)
"
b92ad0ad133d9135dc5ac3c250c792a23d9de645,edx/edx-platform,"TNL-2291 Add caching to discussion forum permissions

Caches all permissions per user per course. Adds caching functionality to has_permission and replaces all instances of cached_has_permission with has_permission.
"
aa078dfda2c07c6d5a0bde8f0bfd712ba9f33349,edx/edx-platform,"Pwattenberger/sailthru enroll (#12816)

* Partial changes for purchase tracking

* Continued changes for purchase tracking

* Clean up code quality issues

* Clean up code quality issues

* Responses to code review

* Fix code quality flaged issues

* Fix code quality flaged issues

* Fix code quality flaged issues

* Fix problem processing sailthru_content cookie
"
905d884aa7a517bdc11cde348f5b8fb76ccef093,edx/edx-platform,"Removed a unnecessary imports from mongo_login_helpers.py and repeated code from tests.py.
"
a5cce4769e5746362ea4f3c81b3f78d8a737516e,edx/edx-platform,"add accommodation listing, and revise error messages
"
f47a5e1b6804e330aa3221fc6a321cf0171eed1d,edx/edx-platform,"Merge pull request #5498 from edx/jeskew/split_fix_auto_auth

Optimize LMS views for Split courses."
7d110a86d43247505ed7090dfea55a855dbe9731,edx/edx-platform,"cleanup to PR feedback for shoppingcart and instructor2 scss partials
"
b946a10c0c4401b9f26e27224c68749edd38b9fc,edx/edx-platform,"cleaned up topic header to allow for multiple line titles still being visible
"
ac8b75ca7f985eb3eda7dff6c76e8c4aadbfc8da,edx/edx-platform,"Merge pull request #7804 from edx/diana/progress-summary-refactor

Implement the Weighted Problem Grade Report"
cc6dfbbc75b9b4466b0f6ecaa0f5ead2c39dce9a,edx/edx-platform,"Asset support in split
LMS-2876
"
f91c5ffd1f53d7b69f74a5aaeba9a08a771fc115,edx/edx-platform,"Merge pull request #6099 from edx/marco/sass-variable-patterns-cleanup

SASS compilation variable conventions update"
fa7b9a132a8d94764e42b3af501cfc6badb3e0ed,edx/edx-platform,"Move the org_list and exclude code into the resolvers
"
bf7aef1bcf683cc4afad06259c1f002795ffe175,edx/edx-platform,"Convert CAPA inputtype statuses from strings to objects, in order to
simplify css class management and internationalization of status strings
(potentially) displayed to the user.
"
ac72e262560527d87d228edbc7e739f1ec54820f,edx/edx-platform,"Fixed the empty list price issue.
Added columns to the CC purchases report. (added Qty and Total Discount. Moved the Total Amount to the last index).
Coupon code report.
"
844edac4434c4804f280c572dd825ec82fb56446,edx/edx-platform,"Optimize OpenID Course Claims for users.
- Course overviews will cache courses upon publish.
- Added management command to warm up cache.
- OAuth2 handler returns courses via course overviews.
"
d48100d386d16f611968f147c84fb03be45ed9d7,edx/edx-platform,"[LEARNER-1367] Move Program Marketing page from private themes repo to edx platform repo
[LEARNER-311] Enable a purchase button on the Program page - platform (WL)
"
e624ff3b04bde9f4afb96bd474e33d7bb00090e0,edx/edx-platform,"Make path_to_location use bulk_write_operation for performance.
"
0e7e266a5bab40a552ba9133db011d6ff8b3bcd4,edx/edx-platform,"Push bulk_write_operations up into ModuleStoreRead, and rename to remove reference to writes
"
467f2988e1a33eabf4f6d0a07b82b35c4658a73d,edx/edx-platform,"Quality cleanup
"
094a47fc1dfe297d960260fbfe36c3887aba4324,ehcache/ehcache3,"Closes #1678 Refactor codecs to reuse configuration encoding and decoding logic for extensibility
"
fef67b8d55b5473f0173058326ab2c6d4e4c7c35,ehcache/ehcache3,":construction: #1194 Move package messages to common.internal
"
e26365026943a6f346bb68330f323c8c6f7708a1,ehcache/ehcache3,":construction: #1090 Minor logging improvements

* Use slf4j substitution instead of string concatenation
* Fix plural
"
1b11c8b33398161fade50e58d45b903aafcfcb8f,ehcache/ehcache3,"Issue #165 Refactor store events handling

Store exposes and StoreEventSource on which listeners and filters can
 be registered.
It also supports requesting events in an ordered fashion.
The cache level will be responsible for translating store events into
 cache events and handling the sync / async part.
"
24ab797b18374940eae053dc91cf2f84a79902eb,ehcache/ehcache3,":construction: #1246 Moving code to internal package

* common.exceptions to common.internal.exceptions
* common.store to common.internal.store
"
af145148f91863bc79e91e6789c5fa75cd1eeb42,formio/formio.js,"FOR-1112: Improved solution + fixed ESLint errors.
"
5537ec10ab7788a2f6556662fdc230f8cf7dec69,formio/formio.js,"Merge pull request #354 from formio/bugfix/for-923-incorrect-requests-order

Improvement: Refactoring."
23f7510435a9d9d238a8a9a8093a0a61fe71b19e,formio/formio.js,"Merge branch 'master' of https://github.com/formio/formio.js into refactor-http-requests
"
37fd41c7da7b49d895cb1ddbbbc4b010d8039c88,formio/formio.js,"Remove unnecessary data set.
"
4cc7e0862826e6703642cfbf6440e3ef8fd8da0e,google/syzkaller,"all: use osutil.IsExist instead of os.Stat
"
e785085d0db44743691beb6f880eee9420316ea8,groue/GRDB.swift,"Cleanup our code thanks to DispatchQueue.sync<T>(block: @noescape () throws -> T) rethrows.
"
e0ea5af18eca9e2f82d3b7a55f1674a530e52f11,groue/GRDB.swift,"Refactor database events filtering
"
e0167258145db108e7e8e20dae7e5355e19386cb,groue/GRDB.swift,"FetchedRecordsController cleanup
"
d8b935369b3f2141eec45ef6f5c0ee90cb1b6d58,groue/GRDB.swift,"RowAdapter refactoring
"
ff6e25937e8f43404c430e7955cf3b5466d8e1a4,groue/GRDB.swift,"Rename SQLiteXXX types DatabaseXXX
"
04bfc61b142b97452fa447edf019c441f9270f01,kactus-io/kactus,"unify win32 registry lookup code, flow more types around
"
d47f84383fc02495aca079a9ac87af2e3c94b6be,kactus-io/kactus,"convert getLogger to be an async function, hide this plumbing away
"
8c35fd22ea89278e2ddc4086188d79212a7f79c8,microhh/microhh2,"Use static_cast instead of dynamic_cast. The IBM compiler returns a NULL
pointer.
"
5ff0446379a1c5c0e88f2dd71cac12574713c970,namhyung/uftrace,"Merge branch 'trigger-update'

Sometimes it's tedious to type long functions names repeatedly for
filters, triggers, arguments and return values.  While it could use
regex pattern, it doesn't still feel good to repeat them.

Clean up trigger code and let -T option can specify any kind of trigger
actions including filters and arguments.  For complex command line,
users now can use a single -T option to specify actions for a single
function (or pattern).

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
86b6701263c1a70a7599dbf16714812d16ada73b,namhyung/uftrace,"Merge branch 'mcount-update'

A couple of cleanups in the mcount code.

 * split unrelated code to separate files
 * add debug-domain test case to unit test

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
9edb2bbec434771dd3a0db7b052513bbcdb52b3d,namhyung/uftrace,"Merge pull request #58 from Taeung/enum_color_setting

Minor refactoring about color setting

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>"
d98bb3ec82627d785db67db948b5cd3faf70af87,namhyung/uftrace,"kernel: Introduce has_kernel_data()

Since the kernel info was moved into the file handle, it needs a way to
determine whether kernel trace data is available.

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
5dfdf1eb62ea4ff555c4f494bb7a1d945e236438,namhyung/uftrace,"record: Add -A/--argument option

The -A/--argument option is to set function arguments to be printed.
The argument spec is recorded in the info file for replay.

Example looks like below:

  $ ftrace -A 'foo@arg1' -A 'bar@arg2'

Above example records the first argument of 'foo' function and the
second argument of 'bar' function.  It's possible to record more than
one arguments (separated by comma) of a function.

  $ ftrace -A 'foo@arg1,arg2'

It's user's responsibility to pass correct argument spec of functions.

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
5c4cd8d4a0c341add603fb3337cd177f05e8a44a,namhyung/uftrace,"Merge branch 'kernel-update'

Simplify kernel options but it's not compatible to previous versions
since now -K options takes an argument (kernel depth).  The
 --kernel-full option was also changed to have an opposite meaning of
 --kernel-sip-out which is deprecated from now on.

Also auto-tune default kernel tracing parameter so that it can
reduce (possibly eliminate?) LOST records from kernel.

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
aaa4c0c576c81989c110405a7b1a371d80942a7a,namhyung/uftrace,"Merge pull request #467 from taeguk/uftrace/fix-memory-leaks-and-safety

Fix memory leaks and improve memory safety by Taeguk.

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>"
e3c2d57f653ce70eae26ffde96d2a5ba3a48147b,namhyung/uftrace,"mcount: Convert access to thread data to use get_thread_data()

Instead of calling pthread_getspecific() directly, use get_thread_data
macro.  It can eliminate the calls for single-threaded processes.

And it makes the mtdp being NULL check meaningless for single thread
case.  Abstract the check to check_thread_data() to see the mtdp->rstack.

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
e6a23eb62db60fe9ae7f8ad0b015083325518b43,openstack/cinder,"Merge ""Move resource usage sync functions to db backend"""
e58113ac55593584d909ff19d075f21018b8f41a,openstack/cinder,"Merge ""Storwize: Split up __init__ into separate files"""
02239242ebf451ba7316d6ed9c4aef70147d6d29,openstack/cinder,"Merge ""Improve entity validation in volumes APIs"""
d0285562632c329f45cc1cf65eae71f9532d3613,openstack/cinder,"Implement QoS support for volumes

This patch is to implement generic Quality-of-Service(QoS) support for volumes.
The goal is to add an interface so that cloud/Cinder admins can use to set
volume QoS, which can be enforced either in hypervisor or on Cinder back-end
or both. QoS specifications are added as a standalone (only visible to admin)
entity.  So admin can create/update/delete and associate/disassociate QoS
specifications to other entities, in this case volume types.

Note that while it's possible for Cinder to set the granularity of QoS control
to every single volume, this patch puts the control granularity to the level
of volumes of the same type to minimize the impact of other Cinder parts.
In other words, the design is to bond QoS with volume types. So Cinder admin
can associate volume types with QoS specifications, and volumes of same volume
type share the same QoS specifications.

QoS can mean a lot different things that it's unlikely we can come up with a
interpretation that all vendors can agree on.  So the approach this
implementation takes is to make Quality-of-Service specs as free-from, i.e.
expressed as key/value pairs.

Changes:
 - Add a quality_of_service_specs table, using adjacency list relation to store
 a specs entry and its detailed specs in key/values. Note that to be able to
 distinguish where should the QoS specs be consumed, each QoS specs entity
 will have a 'consumer' (i.e. fixed key) with the value of where admin would
 like the QoS policy to be enforced/consumed, currently these three values are
 considered valid: 'front-end' (Nova Compute), 'back-end' (Cinder back-end),
 'both'. The default value for 'consumer' is 'back-end';
 - Add a new API extension 'qos_specs_manage' to allow list/create/update/
 delete/associate/disassociate of QoS specs;
 - Add volume/qos_specs internal API for qos specs manipulation;
 - Add 'qos_specs' info to data structure when
 initialize_connection() is called.
 - Add 'qos_specs' to request_specs and filter properties for
 a volume create request.

 TODO
 - Modify 'type_manage' API extension to be able to accept qos info.
 - Modify volume_types.create() to accept qos info and do the checks.

DocImpact

implement blueprint: pass-ratelimit-info-to-nova

Change-Id: Iabc61b941aaff10395b30e2045e3421369a317e2
"
8aac388cc091b6c79c2d0650810acf72a1097446,openstack/cinder,"Move volume_clear and clear_size opts up to driver

The block_device driver pulled in the clear and clear_size
options for it's own use and broke the inheritance model needed
for multiple backend configs.

This change moves the two configs up higher in the heirarchy to
driver.py so that it can be shared/used by all drivers if they desire.

This means that they are now set properly in volume_opts.  At some
point we shoudl restructure this a bit to allow multi-backends to
specify independent settings for these configs.

Fixes bug: 1208964

Change-Id: I6afbdecea637f7e7d3417be537ab71fe97bffda3
"
ed69db62249811661392570d15c3ca093d2777e4,openstack/cinder,"Remove _create_volume function from several tests

Remove _create_volume function from
- db/test_transfers.py
- api/contrib/test_backups.py
- test_gpfs.py
- test_volume_transfer.py
- test_volume.py
And use create_volume from tests/utils.py instead

Change-Id: I446220d0cfaa2850a5262a968ed35b7827b90a03
"
ed559abe667f5f434b6bcf02612a0ea6c87f3afa,openstack/cinder,"Switch _create_temp_cloned_volume in driver to VO

This commit updates _create_temp_cloned_volume and
_create_temp_volume_from_snapshot methods in driver.py
to use Volume object instead of SQLAlchemy model.

Related-Bug: #1602210
Change-Id: I17eab820fd2cbc004960ae75a2dd4cab6ab6e055
"
960cbb21e359a3526e9ff9bf4ca78db1eca3a743,openstack/cinder,"VMware: Integrate VMDK driver with oslo.vmware

The common code between various VMware drivers was moved to
oslo.vmware library during Icehouse release. The VMDK driver
should be updated to use this library. Changes are mostly
replacing import statements and removing redundant modules
and corresponding test cases.

Summary of changes:
* Replace api with oslo.vmware.api
* Replace vim with oslo.vmware.vim
* Replace pbm with oslo.vmware.pbm
* Replace io_util with oslo.vmware.image_transfer
* Replace vmware_images with oslo.vmware.image_transfer
* Replace read_write_util with oslo.vmware.rw_handles
* Remove error_util and use oslo.vmware.exceptions
* Move VMDK driver specific exceptions to a new module
  'exceptions'
* Replace PBM WSDL files with the corresponding files in
  oslo.vmware
* Replace PBM related methods in volumeops with the
  corresponding ones in oslo.vmware.pbm

Implements: blueprint vmdk-oslo.vmware
Change-Id: Ib484fabffb8ef1a56051d7e1bed5218b633306bb
"
f709c9d3db7578afd2c05f723f9bd4160e1c80d8,openstack/cinder,"clean up numeric expressions in test

Replace numeric expressions with constants in tests
to make code more readable.

Change-Id: I42469cdbe3cafd36f8d9855c8284f885ffa7f465
"
18744ba1991a7e1599d256857727454bac1ae2d2,openstack/cinder,"Tiramisu: replication group support

This patch adds support for replication group.
It is built upon the generic volume groups.
It supports enable replication, disable replication,
failover replication, and list replication targets.

Client side patch is here:
    https://review.openstack.org/#/c/352229/

To test this server side patch using the client side patch:
export OS_VOLUME_API_VERSION=3.38

Make sure the group type has group_replication_enabled or
consistent_group_replication_enabled set in group specs,
and the volume types have replication_enabled set in extra specs
(to be compatible with Cheesecake).

cinder group-type-show my_group_type
+-------------+---------------------------------------+
| Property    | Value                                 |
+-------------+---------------------------------------+
| description | None                                  |
| group_specs | group_replication_enabled : <is> True |
| id          | 66462b5c-38e5-4a1a-88d6-7a7889ffec55  |
| is_public   | True                                  |
| name        | my_group_type                         |
+-------------+---------------------------------------+

cinder type-show my_volume_type
+---------------------------------+--------------------------------------+
| Property                        | Value                                |
+---------------------------------+--------------------------------------+
| description                     | None                                 |
| extra_specs                     | replication_enabled : <is> True      |
| id                              | 09c1ce01-87d5-489e-82c6-9f084107dc5c |
| is_public                       | True                                 |
| name                            | my_volume_type                       |
| os-volume-type-access:is_public | True                                 |
| qos_specs_id                    | None                                 |
+---------------------------------+--------------------------------------+

Create a group:
cinder group-create --name my_group my_group_type my_volume_type
cinder group-show my_group

Enable replication group on the primary storage:
    cinder group-enable-replication my_group
Expected results: replication_status becomes ‚Äúenabled‚Äù.

Failover replication group to the secondary storage.
If secondary-backend-id is not specified, it will go to the
secondary-backend-id configured in cinder.conf:
    cinder group-failover-replication my_group
If secondary-backend-id is specified (not ‚Äúdefault‚Äù), it will go to
the specified backend id:
    cinder group-failover-replication my_group
--secondary-backend-id <backend_id>
Expected results: replication_status becomes ‚Äúfailed-over‚Äù.

Run failover replication group again to fail the group back to
the primary storage:
    cinder group-failover-replication my_group
--secondary-backend-id default
Expected results: replication_status becomes ‚Äúenabled‚Äù.

Disable replication group:
    cinder group-disable-replication my_group
Expected results: replication_status becomes ‚Äúdisabled‚Äù.

APIImpact
DocImpact
Implements: blueprint replication-cg

Change-Id: I4d488252bd670b3ebabbcc9f5e29e0e4e913765a
"
d99fb6011cc610b78d42891800189feed0391742,openstack/cinder,"Implement ability to Clone volumes in Cinder.

This implements the capability to create usable volume clones in Cinder,
for the LVM case we create a temporary snapshot to copy from so that
volumes can remain attached during cloning.  This works by passing
in a source-volume-id to the create command (similar to create-from-snapshot).

Currently we limit clone to the same Cinder node, and only for the base LVM driver.
All other drivers should raise NotImplemented, most inherit from the SANISCSIDriver,
so move the function there and raise until we have a general implementation
for SANISCSI based drivers.

Those drivers that inherit from ISCSI directly instead of SANISCSI,
add the function explicitly and raise NotImplementedError there as well.

Implements blueprint add-cloning-support-to-cinder

Change-Id: I72bf90baf22bec2d4806d00e2b827a594ed213f4
"
809567661d6732eaf4a5e77d2f2df07621ee5114,openstack/cinder,"Fix volume lookups in SolidFire template caching

There's a number of issues with the SolidFire template caching
code.  There are a number of metadata items that aren't consistent
between Glance API V1 and V2, there's also some problems with how
the code is dealing with it's internal volume and just flat out
wrong account checking.

This patch focuses mainly on fixing up the account and volumeID
issues.  The _do_clone method currently expects to find the src
volume under the same account as the dest volume.  That's fine
for most cases, but doesn't work for either the SolidFire template
caching, or for the use of generic image caching in Cinder.

We fix that easily by modifying the _get_sf_volume call to have an
option to search all active volumes on the Cluster instead of just
those for a specified account.  For now we only change the clone
methods, as they're the only case where we fall into the case of
cross-ownership of volumes in the same context.

The other issue is around the cleanup/delete in the case of a
failed template-volume create.  In this case we were passing in
the Cinder UUID to a direct SolidFire API delete cmd, which
is wrong.  The direct call for the SolidFire API call requires
that the actual SolidFire ID be used.  So we leverage the modified
_get_sf_volume call here as well.

Another issue that was introduced was the introduction of
a connector object to the intialize_connection call.  We
got around this once already by just passing in a fake
connector that was actually a string.  That was fine, but
the initialize_connection routine also now checks the connector
for multi_attach, so it fails the _get call on a string.  We
fix that by just building a dict and using that instead of
a fake string.

Finally, the method of relying on the Glance metadata virt size
has been problematic, it's not set by default, it's not accurate
and it's a bit inefficient.  There have been a number of issues
with this method of size determination, so we'll dump that and
just leverage the image_utils methods directly.

Change-Id: Icfd6668389049d3d5686acdb832847aa2d2fce52
Closes-Bug: #1494830
Closes-Bug: #1494927
"
509e411af7513738752a62af37bbd31ccacec7ed,openstack/cinder,"Use six.reraise() for Python 3 compatibility

Replace ""raise a, b, c"" with ""six.reraise(a, b, c)"" to make the Cinder
code compatible with Python 3.

This patch was generated by the raise operation of the sixer tool:
https://pypi.python.org/pypi/sixer

Blueprint cinder-python3
Change-Id: Iab9e12763e2a7641fc2671acdd4f2ff84be584f3
"
6458931789503b52d6f00267c81b0587e5cd87ef,openstack/cinder,"Remove inheritance from deprecated classes

The following classes are deprecated and should not be inherited
(according to the class docstrings):
* LocalVD
* SnapshotVD
* ConsistencyGroupVD
* ExtendVD
* TransferVD

Change-Id: Ia9098eb4d48ed34552c9e7dee44ccadd90b0833a
"
ca97a7461f0f56835a0f2dceb9afaebac756f7c3,openstack/cinder,"Enhance iSCSI multipath support

Currently, nova-compute and brick support multipath for iSCSI volume
data path. It depends on response to targets discovery of the main
iSCSI portal, expecting multiple portal addresses to be contained.

However, some arrays only respond to discovery with a single portal
address, even if secondary portals are available. In this case,
the connector cannot know secondary portals and corresponding
iSCSI target IQN, so cannot establish multiple sessions for
the target(s). To enable the connector to login to secondary portals,
cinder should tell all the portal addresses and corresponding
target iqns/luns.

With this patch initialize_connection API will return connection_info
with multiple portal addresses/iqns/luns when multipath=True is
specified in the connector info. For example:

  {""driver_volume_type"": ""iscsi"",
   ""data"": {""target_portals"": [""10.0.2.15:3260"", ""10.0.3.15:3260""],
            ""target_iqns"": [""iqn.2010-10.org.example:target-01"",
                            ""iqn.2010-10.org.example:target-02""],
            ""target_luns"": [1, 2],
            ...}}

This also modify brick/iscsi/connector.py to make the parameter
recognized and to login to every target.

In addition, this adds an config option
'iscsi_secondary_ip_addresses' to specify a list of secondary
portal addresses for LVM iSCSI Driver.

Change-Id: I2a650c8ae70189b738937eaea7e5cd28f896257c
Implements: blueprint iscsi-multipath-enhancement
"
200a65fa26415b9aa9f3ea7afc7fa2b8f2aee4b5,openstack/cinder,"Cleanup for SnapshotObject

Mostly switched from dictionary notation (obj['prop']) to object
notation (obj.prop).
This patch doesn't contain changes for drivers. Drivers need to be
fixed in other patch.

Partial-Implements: blueprint cinder-objects
Change-Id: I98dd519e6dc84315df6caa768ce3f5fc4274431c
"
30d68cebc62b31dcefdff82b7f00e75a8a4fbbc9,openstack/cinder,"Rename Huawei drivers

Rename Huawei18000ISCSIDriver and Huawei18000FCDriver
to HuaweiISCSIDriver and HuaweiFCDriver.

DocImpact
Implements: blueprint huawei-driver-rename
Change-Id: I21f5a2d5bbf9a0af9e9b01878c271e9329f44cff
"
f586043fa969b9d1dcf4933aacbf615f53691093,openstack/cinder,"Add support for file I/O volume migration

This patch changes the generic volume migration logic to support
non-attachable volumes.  Non-attachable refers to volume drivers that do
not support attachment via the typical iSCSI or similar protocols where
a block device is made available on the host machine.  Device drivers
such as RBD make volumes available to cinder via a file handle that
proxies read() and write() calls to the Ceph cluster.

This patch improves the generic migration logic to determine whether a
migration operation can proceed with dd using block device paths or file
operations on handles returned from the os-brick connectors.

Changes to the RBD driver are included to correctly rename the target
volume during the completion phase of a successful migration.

It appears there is still some work to be done for attached in-use
volume migration for certain configurations.  Successful tests were seen
for:

  LVM to LVM (available and in-use)
  LVM to/from NFS (available and in-use)
  LVM to/from Ceph (available)
  Ceph to LVM (in-use)
  NFS to/from Ceph (available)
  Ceph to NFS (in-use)

Failures were seen (due to Nova) for the following:

  LVM to Ceph (in-use)
  NFS to Ceph (in-use)

(Pulled from gate, cinder can no longer pass unit tests)

Blueprint: generic-volume-migration
Closes-Bug: #1489335
Closes-Bug: #1489337
Change-Id: Iece2776fa751152f97b389ddab426e50c6f79bea"
a55a6b5c717c0802288ab802a8fbff287a4b6b66,openstack/cinder,"Remove log translations

Log messages are no longer being translated. This removes all use of
the _LE, _LI, and _LW translation markers to simplify logging and to
avoid confusion with new contributions.

See:
http://lists.openstack.org/pipermail/openstack-i18n/2016-November/002574.html
http://lists.openstack.org/pipermail/openstack-dev/2017-March/113365.html

Change-Id: I4c96f3590d46205c45d12ee4ead8c208e11c52c5
"
22e6998868ff7edd125ac64f5196b39a88b2c6fe,openstack/cinder,"Add new attachment APIS

Replaces the original patch:
  https://review.openstack.org/#/c/387712/

Use the python-cinderclient WIP:
  https://review.openstack.org/#/c/387716/

Here's what you can do currently:
  `cinder attachment-create <volume-uuid>`
      Currently only tested/implemented the reserve piece
      Will create an attachment object, set volume to a
      status of 'reserved'
  `cinder attachment-list`
      Simple list output of attachments
  `cinder attachment-show <attachment-uuid>`
      Detailed list of specified attachment
  `cinder attachment-delete <attachment-uuid>`
      Removes an attachment

Change-Id: Ie15233c99d91de67279b56d27a5508c5ea98d769
"
c55589b131828f3a595903f6796cb2d0babb772f,openstack/cinder,"Tidy up the SSH call to avoid injection attacks for HP's driver

Let the command and arguments form up a list and avoid the extra arguments
attackers inserted to the command string.

And modify the interface of _cli_run, there is no need for a extra argument.

fix bug 1192971
Change-Id: Iff6a3ecb64feccae1b29164117576cab9943200a
"
504b466295f3d97307216095f450ff8421796319,openstack/cinder,"Remove remotable from OVOs

In Cinder we don't have an indirection service to forward object methods
like Nova does (Conductor) so we shouldn't be defining all methods as
remotable since they are not.

If we ever decide to have a Conductor we can easily add them back where
appropriate, but for now they are only a hindrance:

- It's confusing, because most people don't understand what it actually
  means in Cinder and they just add it to the methods because they see
  it in other OVO methods.
- Every time we change a remote method's signature or add a new remote
  method to an object the hash of that object changes and we need to
  update our test_versions test, which is not necessary.
- This makes the linking of VOs with their list counterparts
  problematic, because everyone will need to know that there is no need
  to bump the version of a list object whenever they add or modify a
  remotable method.
- We are executing unnecessary code with decorators, even if it's not
  much, it's still wasted CPU time .

This patch removes all appearances of remotable and remotable_class
decorators thus making our OVOs consistent with our implementation and
removing the need of updating our tests on unrelated OVO changes.

Change-Id: I18a0f619b4b108c553d9567b5f21f978466f1670
"
ad3fc57161d3416b95c6be5e0294cd26b34b9eab,openstack/ironic,"Merge ""Move and rename ValidTypes"""
49eaaaf5b923d3167e3a41357acb286959a60db4,openstack/ironic,"Convert drivers to use process_event()

Convert all instances where a driver is directly setting
node.provision_state to instead use task.process_event()

By calling task.process_event() directly, the _continue_deploy() method
of both pxe and ilo drivers may now raise an InvalidState exception.
Previously, these would merely log an error message and return.

Co-Authored-By: David Shrewsbury <30f4d146700c9f76529c3a4abe557f7dd253a8b6@gmail.com>
Change-Id: Ie4ecc9fc32aa5383d026b2f6d64f4e44908321ef
Related-to: blueprint new-ironic-state-machine
"
216969427b964d91079c0f781b8579a6aaa8290c,openstack/ironic,"Remove 'node' parameter from the validate() methods

The node parameter is redundant since the node object is an attribute
of the task object.

Closes-Bug: #1312632
Change-Id: Ia4193ea561a31e54754049d9964c6c9021474caf
"
c023f3394d4b2ffd92849fa0eed8d1dfbbb1165b,openstack/ironic,"Better handling of missing drivers

Instead of loading all available drivers, this patch adds add a CONF
option for ""enabled_drivers"" which explicitly sets the expected drivers.
A failure to load an enabled driver will prevent the conductor service
from starting.

Use a callback hook in stevedore to capture and clean up import exceptions.
Third-party drivers are expected to use importutils to attempt to load
their external requirements, and when unable to, they should raise a
DriverNotFound error to tie into this hook.

Sets the default enabled drivers to:
- pxe_ssh
- pxe_ipmitool

tests/api/v1/test_ports was creating a ConductorManager instance
instead of appropriately mocking the conductor.rpcapi, which led to test
failures when changing how ConductorManager loads drivers. This patch
corrects this by properly mocking the rpcapi within that test class.

Change-Id: I2da37409cea98731a2ca18dfe7298861fde37783
Closes-bug: #1298529
Closes-bug: #1302562
"
53e7baef4205767af8e6c15e6e0e5369e04aea5e,openstack/ironic,"Remove support for creating and loading classic drivers

* removes any bits related to loading classic drivers from
  the drivers factory code
* removes exceptions that only happen when classic drivers
  can be loaded
* removes the BaseDriver, moves the useful functionality to
  the BareDriver class
* /v1/drivers/?type=classic now always returns an empty list
* removes the migration updating classic drivers to hardware
  types

The documentation will be updated separately.

Change-Id: I8ee58dfade87ae2a2544c5dcc27702c069f5089d
"
39a5a507bf1335ded27d2ce14991556c34e4fd91,openstack/ironic,"Remove gettextutils _ injection

Now that ironic supports oslo.i18n, using the install function to
inject _ into the builtin has been deprecated. New i18n common module
used instead. In one module _ was imported from gettextutils, now
also changed to i18n import.

Closes-bug: #1346406
Change-Id: I672a975d479991982c24031e834a26e2c2811890
"
257e5b78ab55e7efde86342460935edc68880c15,openstack/ironic,"Merge ""Move interface validation from API to conductor side"""
31975f0eaab7b5809685f97db5cb86e2ef3be33e,openstack/ironic,"Merge ""Convert internal RPC continue_node_cleaning to a ""cast"""""
c65ab6987c6d8af592022e27906b5aec9a388625,openstack/ironic,"Remove unnecessary json dumps/loads from tests

Tests used json dumps/loads to make sure each one will have a
separate copy of test data instead of pointer to original one.
Refactored this so now we have utility methods that return new
instance of test data each time.

Change-Id: I2306ba120fd61ede47e2762d910e004e66d6ce7f
"
06b6463371f59e15aae93892a3e0de78f664bfcd,openstack/ironic,"Improve strictness of iLO test cases error checking

The 'spec_set' option of Mock object directs stricter checking than
'spec' option.
The commit cdfcebca1a4f49ec4bd732b21691dbff12a7b101 assigned
'spec_set' to the external functions of proliantutils, but it assigned
'spec' to the internal functions.
This patch makes strictness of the error checking consistent among
iLO test cases.

Change-Id: I478afd25cc25ac7a0f471f92122937b30f500158
"
c871725c7d568c4922c80f1360504a18192f55ac,openstack/ironic,"Merge ""Implement instance rebuild in nova.virt.driver"""
7a8b26db6b48f5593786bb92cf09fa1d6afcc1ea,openstack/ironic,"Tear down console during unprovisioning

Before this patch, when unprovisioning a node, the console was left
running. This allowed a user to view the console even after the instance
was gone. Stop the console during unprovisioning to block this.

ConductorManager._set_console_mode will now bubble up any exceptions
raised, so that we can explode as needed during unprovisioning. This
does not have any side effects, as elsewhere it is run in it's own
thread and execution was complete after handling the exception.

Also change a few mock.ANY in the relevant unit tests to the actual task
object, as cleanup.

Change-Id: Iec128444d692e0b0fbc1737eb21b0e6f69b7ec1e
Partial-Bug: #1769817
Story: #2002000
Task: #19634
"
c96197cf18bf237e0ac21dd05a10a0a31c3d5535,openstack/ironic,"Make _send_sensors_data concurrent

The method _send_sensor data is executed in a single
thread for all nodes consequently and slow down
collecting sensor data process.
This makes this task concurrent by node distribution
among configured in conductor number of workers using
synchronized queue.

Change-Id: Ic97bd798f2aa74998d185b6f50635f5862a677f5
Closes-Bug: 1642285
"
2b2022c331d78b5ca1df6d06a58d2229af3036b7,openstack/ironic,"TaskManager: Only support single node locking

The multi-node locking is not used and there's no plan to use it.
Removing it allows us to clean up a lot of code.

The TaskManager tests are refactored to not use the DB.

Removed 'node' from get_node_mac_addresses() in driver/utils as it's
no longer needed.

Partial-Bug: 1312632

Change-Id: Ie3577ba150df6c84fc34a4b08775e5011f8925cb
"
72bc3a5476632ef9867eded69eeb68a79ae66ade,openstreetmap/iD,Move up maxspeed field (fixes #1763)
b5c95af3b7eb6e213f35dc072d0a1b4e0f65f35a,openstreetmap/iD,"Refactor from `coreConnection` to `serviceOsm`
(closes #3497)
"
26d62515fabd5c3a81b859d4bbd620ca76ba1e0d,openstreetmap/iD,"Merge pull request #1103 from systemed/commit-cleanup

Commit cleanup"
522e593f112d3c628604a54a2d0ca0bae11dc5c3,openstreetmap/iD,"Improvements to access field (closes #2763)
"
c0921ac44a1ee4f593809bc2643956e27258fb97,openstreetmap/iD,"Move tag reference to its own file
"
0180367399183ca5d3fbe96ba83935fcc569bc8b,openstreetmap/iD,"Refactor BackgroundSource
"
79ae9346e72d4904ef0d0d833bf5713b5c6e49d6,openstreetmap/iD,"Simplify layer structure

Also, always give SVG elements an explicit size -- seems
to be necessary for Firefox to render them correctly.

Fixes #1436."
901f84a1934abc165888bc4135c2c08dd6cb5214,orfeotoolbox/OTB,"ENH : rename the namespace Transform to TransformDirection to avoid conflicts
"
6e03745bde2b3760c05f57c17f1c577d70590bac,pantsbuild/pants,"Rename pants.goal.goal.Goal to pants.goal.task_registrar.TaskRegistrar.

Rename pants.command.goal.Goal to pants.command.goal_runner.GoalRunner.

There is now no class called Goal, no file called goal.py and no target called :goal anywhere.
"
2c602db227c8894732f83feba2d321c5629b5448,pantsbuild/pants,"Retry on failed scm push.  Also pull with rebase, to increase the odds of success.  Don't pull before tagging.

In addition, separate commit from push; this means that SVN will no longer be supportable, but that's OK because SVN users could use git-svn (which is supportable if anyone cares).

This review is meant to apply on to of https://rbcommons.com/s/twitter/r/1082/ -- when we're happy with 1082, I'll rewrite this one as necessary.

Testing Done:
Ran unit and integration tests for jar_publish. Also for git.

Reviewed at https://rbcommons.com/s/twitter/r/1083/
"
775600e948c88f6ab2f6d5b4c57b83c55da8fb61,pantsbuild/pants,"Fix resource handling for the python backend.

Previously resource handling was broken in a few ways:
1. Resources targets in the same build file could not be addressed
   via `PythonTarget.resources` because relative_to was not passed to
   the build_graph.
2. Since resource targets were not modelled as dependencies, they
   could not be found via the `PythonTarget.resources` property since
   they never were loaded into the build graph.
3. SetupPy only honored resources set via the `PythonTarget`
   `resources` constructor parameter.

This change fixes resources to be modelled as dependencies like they
are for `JvmTarget`, solving 2 above, and fixes resources target
resolution to use `relative_to` solving 1 above.  `SetupPy` now reads
resources from the fixed `PythonTarget.resources` property and gathers
resource sources like it does for all other dependencies fixing 3
above.

All existing python targets are updated to use `target_resources`
instead of `resources` as dogfood and a unit test is added to ensure
both modes of expressing resources work.

Testing Done:
CI went green here:
  https://travis-ci.org/pantsbuild/pants/builds/80315273

Bugs closed: 309, 1841, 2191

Reviewed at https://rbcommons.com/s/twitter/r/2817/
"
92901321dfed0470ed795bbed4bf0f4c4d1a9c86,pantsbuild/pants,"Split up the travis run into a unit-test shard and multiple IT shards.

Also move tests/python/pants_test/tasks/jvm_compile/java:test_java_compile_integration
out of the unit test suite.

Testing Done:
CI went green here: https://travis-ci.org/pantsbuild/pants/builds/40216412

Bugs closed: 773

Reviewed at https://rbcommons.com/s/twitter/r/1290/
"
8c745aad01f02febea8f04d1d4364e0ef175233c,pantsbuild/pants,"Prepare the 0.0.66 release

- Remove deprecated modules
- Add release notes for 0.0.66

Testing Done:
https://travis-ci.org/pantsbuild/pants/builds/99785723

Bugs closed: 2761

Reviewed at https://rbcommons.com/s/twitter/r/3288/
"
3d7c03ab5a7fcd2459128d9cc849031b28b3f350,pantsbuild/pants,"Fix mixed classpaths where internal-only is needed.

DetectDuplicates, DxCompile and JarTask all make distinctions in their
processing between internal classpath elements and external ones.
Although DxCompile was handled in 2d515b55, DetectDuplicates and
JarTask were not.  This change fixes the latter two and makes the
handling of the former uniform via a new `ClasspathUtil` helper method
that can return the `internal_classpath`.

The `DuplicateDetectorTest` is re-vamped to cover duplicates between
jars, between internal targets and across both types of targets to
exercise the case that triggered
https://github.com/pantsbuild/pants/issues/2358.

The `BinaryCreateIntegrationTest.test_deploy_excludes` is unmarked fail
as a result of the `JarTask` fix and now successfully tests the case
that triggered https://github.com/pantsbuild/pants/issues/2359.

In the course of adding `ClasspathUtil.internal_classpath`,
`ClasspathUtil.compute_classpath` is removed since it was only called
by `ClasspathUtilTest`.  That test is fixed to exercise the production
codepath used by `JvmCompile`,
`ClasspathUtil.compute_classpath_for_target`.  The unused
`target_closure` is also removed from that method as well as from its
call chain through `JvmCompile`.

Testing Done:
CI went green here:
  https://travis-ci.org/pantsbuild/pants/builds/84961315

Bugs closed: 2358, 2359, 2363

Reviewed at https://rbcommons.com/s/twitter/r/2964/
"
1dda3a05a832569ea6a5ed9ff5056947ab181b99,pantsbuild/pants,"Reimplement the jvm tool registration mechanism via the options system.

Instead of reaching in to config directly, the tool registration simply
registers an appropriately-named option, and then registers the fact
that this option is in fact a jvm tool.

The option value is a list of specs. We set sensible defaults in the code,
which are specs in a root-level BUILD.tools file.

There's one slight quirk, which is that we must the register function into
our calls to register_jvm_tool(). This is because the JvmToolTaskMixin can't
have its own register_options() method (because it comes after TaskBase
in the mro, and chained super-calls to register_options() stop at TaskBase).

NOTE: This is a larger change that I would have liked, but it's pretty easy to review, as almost every file it touches is made simpler.

Testing Done:
CI passed other than one unrelated unittest failure. Another one baking, just in case.
Doing some ongoing manual testing to see that options work.

Reviewed at https://rbcommons.com/s/twitter/r/1521/
"
0ea28ad0dfa94411a51d8c666aa780d3f254d786,pantsbuild/pants,"Protobuf and payload cleanups

Moved some of the protobuf examples around to be more consistent.
Some cleanups from payload refactoring
Added a deprecation message for the unused 'buildflags' attribute in java_protobuf_library
Removed the ability to use a jar_dependency in java_protobuf_library imports.

Testing Done:
CI is green.
Added a unit test for the java_protobuf_library target

Bugs closed: 623

Reviewed at https://rbcommons.com/s/twitter/r/1099/
"
751d3e6e3cd906a887fa93732207565329de64c4,pculture/unisubs,"Refactor the DFXP parser to *only* work with nodes instead of indexes.
"
e1c1a18a7980d63fc439a1b6b96b51214476baad,pculture/unisubs,"Refactored action code

Split perform() into several parts:
  - validate() handles the validation part
  - update_language() handles updating the SubtitleLanguage in
    add_subtitles().
  - perform() handles the stuff that used to be done in do_perform().

The main improvement is that perform() isn't called until after the
add_subtitles() transaction is committed, which seems more correct.
For example if we want to try to send a ping to some external service
we shouldn't do it until we have actually saved the data in the DB.

I also think that the code is a bit simpler now.  Calling the function
do_perform() was a bit awkward.  Also we don't need the send_signals()
function anymore, we can move that code into perform().

I think the tasks code should still work.  One difference is that the
code that was in do_perform() is being called later on, after the
subtitles are saved.  However, this is basically the same process as
saving a draft, then clicking the Complete/Approve/Send Back button
without any extra changes.
"
b9d402d9be8f7bc8f05af30c14a5581f282c0868,pculture/unisubs,"Bugfixes for refactored widget.js code and new forking functionality.
"
84e594e163852389a6df19f0cab6129f46ba1d53,pculture/unisubs,"Merge branch 'staging' into homepage-rework
"
3ed15271e4768f98cf23ea2c164d7af80a55fdfd,pculture/unisubs,"Add task list language filtering.

This is done with a separate request instead of inline in the page so that we
can add pagination later if necessary.  Doing it inline would mean that we would
always need to pull every task from the DB even if we weren't going to display
them.
"
5a91060fb75e09a4b2a224b59a00ab07b377e453,pculture/unisubs,"Merge branch 'dev' into x-data-model-refactor
"
b5bb1776a5588fe2f60f78144302a1042a45b93f,pculture/unisubs,"Refactored user email notification settings
"
082888fc5d5295c54bb26fe8fdad3de39730b79b,pculture/unisubs,"Rename/Refactor the team members pages

Changed the name to ""members"" from ""details_members"".  It seems like
simpler is better to me.

Created a new url ""team:admin-list"" to view the list of admins.  This
page is for giving users a way to join invite-only teams.

Reworked the urlconf so that these pages go to the new_views module.
Right now we just forward the request right back to the old views.py
code.  The next step is implementing a new view for new-style teams.
"
2eebd70216d4e767e271178d2739df78c0c66a1e,pculture/unisubs,"Merge pull request #2751 from pculture/gh-amara-enterprise-876

Switch to using atomic() instead of commit_on_success()"
854c76935016ef9b5fc8c218ec5c38a5b645113c,pculture/unisubs,"Started using staticmedia instead of unisubs_compressor in our templates

Added template tag to include a media bundle.  It doesn't support S3
yet.

Changed the URL conf for our media urls.  Now bundles are put into
the css/js subdirectories, which mimics the old structure.  Also we
now serve up the images and fonts directory in the urlconf.  This is
needed for our CSS relative paths to work (for example
url(../images/amara-logo.png)).

Removed a bunch of things that we no longer use/need:
  - pagedemo app
  - The unisubs-stat js file (It wasn't used by any of our apps, but
    it got built and uploaded to
    http://s3.www.universalsubtitles.org/js/unisubs-statwidget.js)
  - The test_form page (/videos/test)
  - The jstesting app (bunch of pages that start with /jstesting/)
  - The streamer app (bunch of pages that start with /streamer/)

Removed some javascript calls to the closure code:
  - unisubs.widget.WidgetController.makeGeneralSettings.  I think this
    is no longer needed with the new embedder.
  - unisubs.messaging.simplemessage.displayPendingMessages.  I don't
    think we use the simplemessage framework anymore.

No longer include unisubs-onsite-compiled.js I think this was only
needed for the old widget and we don't use that on our site anymore.
We were also sometimes using offsite-compiled for our own pages which
seems strange.

Added a semicolon at the end of jquery.chosen.min.js.  I guess it left
it out to save the byte, but this doesn't work when we combine
javascript files together.

Still to do:
  - new editor JS
  - embedder (both JS and CSS)
  - old embedder
  - widgitizer
"
e9338ae11a64b41cbacb441cb69fbd85df5af6c5,pculture/unisubs,"Merge branch 'x-data-model-refactor' into dev
"
00fd22aa34c6265db6eb9395a55f8c5a2b1635db,pculture/unisubs,"Merge branch 'dev' into x-data-model-refactor
"
0dfaa1f82d3608f23b11e7735690e755734f304a,pculture/unisubs,"Made sure we don't thrown an error on pages non members can't see and that we return a forbidden, not a 404 error
"
13ab0d127df25fb2a8278a55dfd1b2bf4b1bdd88,pculture/unisubs,"Merge branch 'dev' into x-data-model-refactor
"
8027e385fd986c0d0be41335291f92758e1d87a4,pculture/unisubs,"Refactored rpc into regular and null components. Altered widget to work with new rpc. Moved widget urls to widget-specific urls file. Altered null widget calling mechanism.
"
cbb0a9411224eb735b9d86f7edea1c023e98c911,pculture/unisubs,"Use ints instead of floats on the dfxp wrapper to make life a tad easier
"
9bc5fb6e76a4dfbcda9cc5d0657fbc42ffc43518,pculture/unisubs,"Added back review mode in the editor

Changed the workflow controller code.  Now we have three controllers:

- WorkflowController: handles basic tasks like poping up the edit
  title/description dialog, then delegates the rest of the work to one
  of other controllers.
- NormalWorkflowController handles normal mode -- the same as the old
  WorkflowProgressionController
- ReviewWorkflowController handles review mode

Added some HTML for review mode.  Split up workflow.html into 2 files
-- one for each mode.

Made the video/help section not use WorkflowProgressionController.

- For help we didn't need it at all, because we setup $scope.workflow
  in the AppController
- For video we just needed to move the code that handles the overlay.
  Also renamed same variables that had to do the the subtitle overlay
  to avoid a naming conflict.  Lastly, added some code to actually use
  showSubtitle (previously showOverlay) to hide the subtitles when
  there isn't an active one.
"
d6cf3d2dbbba3ac24086eb2c47c0eeef2a0cb332,phetsims/scenery,"Collapsing unused params ob
"
e8f31d318c261746a83265d9c0b68ecc29e79a67,phetsims/scenery,"Improved rendering for pixi rectangle, see #350
"
ced2fa6bfeebbf56518adb246ba4332eadf9b272,phetsims/scenery,"node.hasSelf() => node.isPainted() rename, + other associated name changes
"
f1e26fa354520513a08f3eff4f0b1415921fee65,phetsims/scenery,"Initial Scenery rebranding (need deliverable and namespace renaming)
"
feb30c14b2d7de6349fb187afc0a60524684637e,phetsims/scenery,"moved all phet-io/js/types to tandem/js/types (not ArrayIO), updated usages in whole project, https://github.com/phetsims/phet-io/issues/1396
"
22e1e12f101d5e79781eb94e791228393dedce9f,phetsims/scenery,"Improved drawable iteration
"
f6449d6e73cc61dedc0a4d017eb226e2e00fa305,prebid/Prebid.js,"Modules (#1177)

* initial implementation of module system

* express module

* conversion of rubicon adapter to module system

* use var instead of let in node scripts

* example of using modules for concatenation through webpack code-splitting

* fixes for webpack code-splitting

* changes including config through setConfig and getConfig callback

* external modules working, but node_modules in project still needs babel-laoder fix

* gulp watch bundle building

* fix for babel-loader node_modules exclusion and bundle only

* updated express module to work in new webpack module format

* gulp default, don't bundle

* updated rubicon adapter to latest

* added appnexus and appnexusAst to modules.  added support for native and video registering

* added logging for files getting bundled

* fixed bug in bundling external modules

* aardvark bid adapter converted to module

* upadte appnexus bid adpater names and get ride of mocha loader tests

* adblade bid adapter converted to module

* adblund bid adapter converted to module

* adbutler bid adapter converted to module

* adequant bid adapter converted to module

* adform bid adapter converted to module

* adkernel bid adapter converted to module

* admedia bid adapter converted to module

* admixer bid adapter converted to module

* fix pbjs global for tests so load order doesn't matter

* adsuppply bid adpater converted to module

* use $$PREBID_GLOBAL$$ rather than pbjs in test files

* adyoulike bid adapter converted to module

* fixed adapter location in some adapters

* aol bid adapter converted to module

* atomx bid adapter converted to module

* audienceNetwork bid adapter converted to module

* beachfront bid adapter converted to module

* bidfluence bid adapter converted to module

* brightcom bid adapter converted to module

* centro bid adapter converted to module

* rubicon spec file name changed

* conversant bid adapter converted to module

* criteo bid adapter converted to module

* districtmDMX bid adapter converted to module

* fidelity bid adapter converted to module

* getintent bid adapter converted to module

* gumgum bid adapter converted to module

* hiromedia bid adapter converted to module

* huddledmasses bid adapter converted to module

* indexExchange bid adapter converted to module

* inneractive bid adapter converted to module

* innity bid adapter converted to module

* jcm bid adapter converted to module

* komoona bid adapter converted to module

* kruxlink bid adapter converted to module

* lifestreet bid adapter converted to module

* mantis bid adapter converted to module

* memeglobal bid adapter converted to module

* nginad bid adapter converted to module

* openx bid adapter converted to module

* piximedia bid adapter converted to module

* prebidServer bid adapter converted to module

* pubgears bid adapter converted to module

* pubmatic bid adapter converted to module

* pulsepoint and pulsepointLite bid adapter converted to module

* quantcast bid adapter converted to module

* rhythmone bid adapter converted to module

* added adkernel alias to headbidding to adkernalBidAdapter module

* roxot bid adapter converted to module

* sekindoUM bid adapter converted to module

* remove baseAdapter

* serverbid bid adapter converted to module

* sharethrough bid adapter converted to module

* smartyads bid adapter converted to module

* update conversantBidAdapter to support video

* get rubiconBidAdapter latest

* move rubicon adapter to module properly

* sonobi bid adapter converted to module

* sovrn bid adapter converted to module

* springserve bid adpater converted to module

* stickyadstv bid adapter converted to module (and removed console logs)

* convert tapsense bid adapter to module

* thoughtleadr bid adapter converted to module

* trion bid adapter converted to module

* triplelift bid adapter converted to module

* twenga bid adapter converted to module

* underdogmedia bid adapter converted to module

* vertamedia bid adapter converted to module

* vertoz bid adapter converted to module

* wideorbit bid adapter converted to module

* widespace bid adapter converted to module

* xhb bid adapter converted to module

* yieldbot converted from bid adapter to module

* smartadserver bid adapter converted to module

* remove old adapter class in adapter folder

* converted analytics adapters to modules

* removed loaders from build

* added plugin to remove file manifest and jsonp code from webpack runtime

* cox bid adapter converted to module

* carambola bid adapter converted to module

* eplanning bid adapter converted to module

* --modules arg allows .json file as parameter

* removing config module for now

* don't bundle AnalyticsAdapter.js in common chunk

* unruly bid adapter converted to module

* fixed case-sensitivity in including webpack plugin

* can't use class keyword, updated to constructor function for plugin

* added jsdoc to express and new webpack plugin

* fixed sourcemaps for concat step in bundle

* use external sourcemap for bundle instead of inline

* rename prebid.js to prebid-core.js and main bundle outputs prebid.js now

* updated README.md to be module specific

* added filter to ignore hidden files in modules directory
"
0b4a1d50bd1ae3adefaf68e56d9f70066b9bc9b4,quintel/etsource,"Move AD subclasses to the end of the filename.

Instead of ""subclass.key.ad"" it is now ""key.subclass.ad"". This means
that documents are automatically sorted in alphanumeric order, rather
than being grouped by the subclass.
"
1707e92cdb4e6ca9e50fea1a02b8f1319a43ca89,radiasoft/sirepo,"Merge pull request #903 from mkeilman/master

 Refactoring to address Issue #888 and other features common to all apps"
e38b6442ebdb755160a708fd30aefa4d4a464727,rstudio/sparklyr,"rename ml_get_param/ml_get_params to ml_param/ml_params
"
79e0abe8b0e86cdd0279af5f1e982004c709b807,rstudio/sparklyr,"refactor; use 'getItem()' for array columns
"
26894741c76f46e24c1432093b1c527f385a7a78,rstudio/sparklyr,"Merge pull request #1682 from kevinykuo/feature/remove-ensure

Deprecate and remove usage of ensure_* functions"
3866a93b732ebb7781c36317bc95044771189f42,rstudio/sparklyr,"Merge pull request #248 from rstudio/feature/refactored-feature-transformers

refactor feature transformers; add Tokenizer + RegexTokenizer"
3bc753ac1087bc63bdd261133a526c59bdcb49de,rstudio/sparklyr,"spark_invoke_static_ctor -> spark_new
"
938407a89fccb9fed5d0d245571ad188d6346a73,salesforce/Argus,"Merge pull request #794 from salesforce/develop

 Made changes to refresh JPA cache for alert queries and added additional logging"
e3033bd511fa34fc26509d457f33cfbc5d0139d0,salesforce/Argus,"final updates to angular argus app refactoring.
"
f0e731c2eb3ab44ecf9f1a6dc02e0f675f67c0eb,scgmlz/BornAgain,"Rename: Lattice1DIFParameters to Lattice1DParameters and Lattice2DIFParameters to Lattice2DParameters
"
e4a927bdea450b397bd4487afafa953879b1f0b2,scgmlz/BornAgain,"Cleanup in SessionModel to get rid fromtopItemMap and family
"
13d6935809eb1cb42a99de2096e5a1dea0c2d43a,scgmlz/BornAgain,"Merge pull request #572 from anikhalder/develop

Optimize single 3D Particle creation and population on lattice"
4d61589abbab5931347cfb600cee8ce6782f432c,scgmlz/BornAgain,"Merge branch 'analyfutests' into develop: Further simplification of FutestSuite. This basically resolves #1291.
Still TODO: give clue to user where test output and reference data are located.
"
140cdbf523139d1e2051e4f6d9d1a414f9a16ecf,scgmlz/BornAgain,"Merge pull request #395 from DmitryYurov/develop

Redmine issue 1946: simplifying python-user interface of MaterialBySLD"
1d3dd144a0dfd78e6ed1f5e39f707591c16022f5,scgmlz/BornAgain,"Refactor population of 2D lattice interference by using core objects
"
85c0495c309b565a985c95eb43e6b2ac1b3c3acf,scgmlz/BornAgain,"Refactored FormFactorGauss
"
51a830a27fd5885e34bb07a5699da8c4dcf8c9d0,scgmlz/BornAgain,"SimulationRegistry -> SimulationFactory
"
a1ab53d423320f278a26efb93b2be039df18d9c8,scgmlz/BornAgain,"Parameter(s) -> FitParameter(s) where appropriate
"
b53dd3640589f969a04fca6ba1b1ea51f11de2ba,scgmlz/BornAgain,"Refactor: simplified IFormFactor.evaluate method + moved some implementations out of header file
"
5a76ef4c303a5ebe9a452b8d9a00b2b4da33c19e,smeighan/xLights,"New options for Garland for up/down/up+down/down+up/left/right/etc...
Optimize scrolling a bit by allowing an Effect to render it's background and render time and save it.
Allow Fire to be from top/left/right/bottom   Fixes #245 (kind of)
Start working on LSP import
"
8a5038233209b55acada36a03f55d3346acd3ca9,smeighan/xLights,"Add a bunch of GL logging, simplify (remove some optimizations) from 3.3 renderer to start trying to fix AMD issues
"
f6ba9133d6e04a1810bb7e78a9f43c95db801350,smeighan/xLights,"Preview file open-compare MyDisplay to sequence

Also renamed SEQ_STATIC_COLUMNS to XLIGHTS_SEQ_STATIC_COLUMNS and moved
it to globals.h
"
4017c8d9a6fcbcd28053402864a08b8b795a5cd9,smeighan/xLights,"Try to fix issue on windows by removing unneeded controls
"
ce837f4d88a3c74ecd6d2c07e5f91f929a1f31c1,smeighan/xLights,"Use the same class (direct copy of .cpp/.h) for read/writing fseq files as FPP
Unify FSEQ handling into one place and use FSEQFile
Supports reading fseq v2 files
"
e0a12fcbf4f49a9accd5285c25a5e9d089375ce5,smeighan/xLights,"Improve efficiency of effect background render on grid.  Let OpenGL do the clipping.
"
dcea66c7db4f8c06626bcaad9ef3281eafc778f2,Evolveum/midpoint,"TreeTablePanel rework - adding separate tables for child org. units, managers and members of org.
"
90180dddd7e0954888f1a6fe8e1ddb14c4390dd4,Evolveum/midpoint,"More tests and more fixes. Also some code cleanup.
"
4d37546d940272b371eb6ba519012cecafbeea31,Evolveum/midpoint,"Merge pull request #63 from Evolveum/unused-imports

Housekeeping - Removing unused imports"
5a7a8b296b5f2d64c6aec7d95e861c222ea1725c,Evolveum/midpoint,"Separating marshalling/unmarshalling from lower-level parsing/serialization.
"
0b268da1b1cd4411e0b8ffb0cd7c1917176902ce,Evolveum/midpoint,"Refactoring: getting rid of redundant default element name in prism.
"
c212f90951f48dc254f030a752bdb46304824df6,Evolveum/midpoint,"Modify valuePolicyPages, Remove obsolete pages, Pages still izolated wip
"
8175271056b0aeab291e98993ef2e6e7eb2a168f,Evolveum/midpoint,"Minor improvements in handling of indirectly present exclusion triggers.
"
da36c8295dc13a2ca54b5c6f857737cfd04a4a00,Evolveum/midpoint,"AddTask GUI action reworked.
JMX connection timeout.
Task scheduler starts later (in postInit).

"
01b942077d8130b71d928ae284dbf11a6037ec51,Evolveum/midpoint,"Moving expression classes to new repo-common component
"
0ce8b251a3092041e418524c533a4cf9cce060c6,Evolveum/midpoint,"creating expand-collapse button
"
d3937bb4f7ea10f952f90fc698e9aa77cbb0b011,Evolveum/midpoint,"More parallelism improvements, bugfixies and test improvements (MID-4154) ... but still work in progress
"
28f9043fe5ad20c21f56af0d4a3749db2c739311,Evolveum/midpoint,"Merge branch 'feature/expand-collapse' into new-system-configuration-page
"
1bf267056780b529a3fc38cbbebba13fd39770c8,Evolveum/midpoint,"Deprecating SimplePanel, cleaning up some of the initLayout methods, some work on progress reporter refactoring.
"
b39467d650c49f24e0026af3ff0b1df596fdd63e,Evolveum/midpoint,"Improved error handling which improved robustness when deadling with broken entitlements.
"
b4912546f30574d4e8b978d87dc60c5df22cbbd0,Evolveum/midpoint,"Refactoring of mapping evaluation
"
db8ba8816d3498c7906e9a6b80bf40edd1a37c3a,Evolveum/midpoint,"moved log message 'unsupported query element <type>' to debug level.
"
0094beb31323110eccae3e182df7862b9735c91b,Evolveum/midpoint,"yet another localization cleanup. MID-77
"
fdb927ff9867b5fcb50aa8137b0c6ec721509a07,Evolveum/midpoint,"Refactoring tolerant auxiliary object classes schema.
"
17a445f8fecae3a3f96d9062447f575c4c0e882c,Evolveum/midpoint,"renamed rcobjectreference to rassignmentreference, moving classes around just a bit.
"
2cbaada283a54d5dfd284926d6f031882432f1df,Evolveum/midpoint,"fixing MID-1594 shadow name and icf:name update after account is rename on the resource..
"
eb145af62be5b29d9e44d167f3eac12c682d4299,Evolveum/midpoint,"model-intest cleanup and fix
"
624877dfb0b5501114e20424958381c076f751fa,Evolveum/midpoint,"Attempt to move ModelContext entities to common-3 xmlns (to a separate xsd file). Not quite working yet.
"
861aa3c69a294af13765af617b460c60d1b15d28,Evolveum/midpoint,"Cleaned-up workflow notifications (API and SimpleWorktlowNotifier).
"
edd3b072cf33f304ca5792a5d53eff242c1a1480,Evolveum/midpoint,"Some wrapper factory cleanup, basic user wrapper test, test structure.
"
ff87207d92fa28328a3ecf40e9590e6760d9903a,Evolveum/midpoint,"removed obsolete properties files
"
b8e91a44fa1a43126f2906a2a10cb2c77a54c4ce,Evolveum/midpoint,"improving operations(add, delete, replace) on references in form
"
6ac1f98b7379decdc434cce8f07a45f1f352a412,Evolveum/midpoint,"Renamed WorkItemNewType back to WorkItemType.
"
935598a16d092b135f42e90fcd41723173f0829a,Evolveum/midpoint,"Authorization zone of control, cleaning up the intests.
"
e52e7f469e77a8b9e48da79f0afa074a1e5e8763,Evolveum/midpoint,"Support for multi-type object template (untested), tests for multi-accounts (intent) and some minor test refactoring.
"
6b2bea0a4fdc3133efa46c0275b770b53ecb8593,Evolveum/midpoint,"Various policy rules changes.

Continuing cleanup of constraint names.
Fixed debug dumps of rules/constraints.
min/maxAssignees also for objects as such.
"
6f493698848c96d453f1f2949e337df2abe28780,Evolveum/midpoint,"Refactoring after code review by Vilo. Added basic. perf. attr. profiling.
"
840a837679b8087dd7978e84155403c3da16844a,Expensify/Bedrock,"Optimize query
"
bd8b21d34282a0b4ddcde1f2a8dc6d144481a7b6,GNOME/gnome-music,"player: Remove obsolete discovery_status_field attribute

This is now equal to 11 for all views.
"
6442c2ddde8a6b9c168e3366795507e991c2fe26,JMRI/EngineDriver,"Support for Multiple GamePads  ‚Ä¶
- reworked checking code
"
fa82c48bb2f3740999bb3b1bff3df09c16fc3ce0,JMRI/EngineDriver,"more fling improvements, especially to Throttle (rbecker)
new jmdns version
"
6846db07d87707d823c95aaa85c45b7d681b903f,LBNL-UCB-STI/beam,"Re-activate lots of tests; simplify; analyse tolls (#929)

* Re-enable a test

* Re-enable another test

* Re-enable another test

* Re-enable another test

* Re-enable another test

* Remove duplicate functionality

* Simplify

* Fix test again

* Work on OtherPersonAgentSpec

* Work on OtherPersonAgentSpec

* Work on SingleModeSpec

* Remove PWD variable in beam.conf

* Reactivate OtherPersonAgentSpec

* Reactivate SingleModeSpec

* People can ""walk"" even in the ""walk_transit"" case

* RideHailIterationHistory shouldn't be an Actor

* Work on tests

* Add missing GTFS file

* Report paid amounts in PathTraversalEvent

* Re-enable test

* Limit Mockito's memory usage

* Remove unused class parameters

* Put a fare in PersonAgentSpec

* Pass toll from driving behavior to ""parent"" agent

* Ensure tolls reach personagent and cost events are thrown

* TollRevenueAnalysis

* Reformat

* Reformat

* Merge

* Update caches

* Spelling; cosmetics
"
3a153c031da2887da38119ccfb582d819c2d754d,LBNL-UCB-STI/beam,"Merge branch 'r5-router' into agentsim-person-cleanup
"
b92f523fb06397becbd6bb0a3a2efac3b294c5a8,LBNL-UCB-STI/beam,"fixes [#2] beam-2 consolidate / reorganize config data
"
520adafa54ae4711a4af9f98058d5544e2f8f429,LBNL-UCB-STI/beam,"use BEAM Mode instead of MATSim mode in legacy events, add these modes to config files
"
207ea8a4390333b2f377ff7ee216e96bd07e2e9b,NeblioTeam/neblio,"cleanup
"
5df371be3d42858f3207d7588178a2af295aa470,NewSpring/Apollos,"Onboarding (#444)

* added onboarding library, temporary assets, and the beginning storybook story.

* renamed welcome folder to onboarding and added the app slider to the story

* removed unnecessary text

* added a NEXT button and styles for it.

* added DONE and BACK buttons

* added a snapshot test

* added the export for the web

* added new artwork

* removed unused commented out functions and updated snapshots

* added the onboarding modal component skeleton

* added a comment on the done function

* added the read from AsyncStorage to show/not show the onboarding modal

* changed the name of the AsyncStorage key and added a console log in case of errors

* added the closeModal function to the onboarding modal component. passed that function down to the onboarding component.

* correctly passing a boolean to the visible prop of the modal

* Push on boarding logic into apollo-link-state

* changed button to chip for a better sized button

* updated snapshot

* new artwork

* changed the Done button to say Go

* tried to autofix lint errors
"
c0cbb8eb0da566ab7f4dd897f748c6b06cf18b59,NewSpring/Apollos,"Updating Apollos Assets (#404)

* updated branch names (#395) (#397)

* Added the favicon

* Added Splash for ios

* Added Android Splash

* updated splash and simplified file structure

* upstream ver. bump to jest caused a snapshot update.

* updated favicon url
"
d9c200714ef0c0bd9efb44eb20eadd4d18e2a6aa,NewSpring/Apollos,"Alpha to Beta (#470)

* 420 Content Titles (#423)

* swapping content title from H2 to H3

* updated ByLine styling to have some slightly better vertical rhythem.

* updated snapshots.

* 329 profile birthday (#434)

* fixing empty birthday value

* slightly better tests

* fix zero based moment.month() bug

* fixing block indent bug that was showing up in Song of Solomon. (#435)

* Giving / Checkout fixes (#436)

* updated branch names (#395) (#397)

* fix user signup for error

* fix front-end errors if items come back from Heighliner null

* push out to Safari on iOS give #363

* add payment failure messages

* fix issue with scheduling new recurring gift #415

* fix some potential error points

* Fix issue when giving to more then one fund #405

* update snapshots

* fix redirection state for scheduled giving

* Update env script Token (#438)

* updated env script with perm token

* updated location

* hi

* this hopefully fixes one of this forms bugs. (#439)

* fixed (#441)

* fix icons in checkout flow #402 (#442)

* fix icons in checkout flow #402

* remove console.log

* supposedly add support for iOS AppLinks (#325)

* supposedly add support for iOS AppLinks

* updated branch names (#395) (#397)

* fix deep links potentially

* add support for deep linking and universal links

* add support for in-app linking of search results

* fixes for them meddling ~kids~ tests :cookie:

* fix deep linking on fresh app boot

* 408 - Refresh queries after giving (#411)

* updated branch names (#395) (#397)

* refresh queries after giving

* Revert changes and remove refetchQueries param

* refetchQueries is no longer optional for setPaymentResult

* Add poll interval to ensure the giving dashboard is always up to date

* Fix DeepLinking white screen on app load (#445)

* Fix an issue where deep linking was being a little too proactive and routing to empty page

* fix universal linking

* Fix the white screen delay when loading app (#443)

* Fix the white screen delay when loading app

* remove stray console.log

* adding some TODO contex to address some future concerns.

* remove polling and fix give flow (#448)

* Give hotfix (#449)

* remove polling and fix give flow

* actually remove polling this time

* fix story heading #389 (#451)

* Fix contact us button on group finder

fix wherein we were double nesting touchables by way of default props on Link and Button. Fixed by passing one as the component to the other üï∫üí• (#452)

* Add liking ability to discover feed items (#450)

* Fix issue allowing group search with no input (#458)

* updated branch names (#395) (#397)

* First Commit

* Added validation test

* update formik dep and add support for initially valid

* Fix issue with universal link loading (#453)

* Fix issue with universal link loading

Fixes an issue with universal link loading on mount. Essentially, the
`DeepLinking` component was re-mounting when `AppRouter` was
re-rendering, causing the app to enter into a recursive cycle showing
an endless loading indicator.

* playing around with link loading + app stability

* whitelist certain universal linking domains, more debugging

* button up debugging messages

* clean up edge cases

* fix sentry source maps destination

* quick exp upgrade

* fix linter error

* revert change in linkinguri syntax

* removed rogue logs

* fix issue where can't open scheme-less links (#447)

* Performance: progressive image loading (#463)

* implement progressive image loading on content and content feeds

* progressive loading to album views

* add progressive images for album art and groups

* Flush out progressive images across app

* Update snapshots

* Add snapshot

* load js in background, fix splash background color (#462)

* Tweak copy for iOS checkout (#460)

* Tweak copy for iOS checkout

* update snapshots :cookie:

* update snaps with proper APP_ROOT

* Performance: content placeholders (#464)

* Add cache redirects for content

* Improve content placeholders

* remove isLoading placeholder from series

* Onboarding (#444)

* added onboarding library, temporary assets, and the beginning storybook story.

* renamed welcome folder to onboarding and added the app slider to the story

* removed unnecessary text

* added a NEXT button and styles for it.

* added DONE and BACK buttons

* added a snapshot test

* added the export for the web

* added new artwork

* removed unused commented out functions and updated snapshots

* added the onboarding modal component skeleton

* added a comment on the done function

* added the read from AsyncStorage to show/not show the onboarding modal

* changed the name of the AsyncStorage key and added a console log in case of errors

* added the closeModal function to the onboarding modal component. passed that function down to the onboarding component.

* correctly passing a boolean to the visible prop of the modal

* Push on boarding logic into apollo-link-state

* changed button to chip for a better sized button

* updated snapshot

* new artwork

* changed the Done button to say Go

* tried to autofix lint errors

* Fix contribution chart history link (#467)

* Force the display of 1:1 images if available (#466)

* udpated build numebrs (#468)

* Update Netlify.toml for Production (#391)

* testing netlify deploys

* updated production command
"
ce93ec49ceef028afb0350758de5687498b360aa,Or3stis/apparatus,":truck: move core modules to core dir
"
d174705e69702571891b03c88cde0141d98db8df,QuantConnect/Lean,"Performance improvement to backtests with many orders
"
68676a3dab1cd449727b88dd8a63db8a4eeb13ff,QuantConnect/Lean,"Change IUniverse -> abstract Universe class
"
2d9f8cb9e3b6bb72a03ec5484bc8f73cdcb9ece9,QuantConnect/Lean,"Updated charting lib to use series indexes instead of chart types. Obsolete ChartType enum
"
42671b0bcf511ceb6159fdb423fe2bc9b59d387c,QuantConnect/Lean,"Merge pull request #2650 from Martin-Molinero/refactor-2633-ivolatilitymodel-history-requirements

Refactor Volatility Models"
5e419ada8f22553e91e8159b12282252519e7e00,QuantConnect/Lean,"Some bug fixes/cleanup for IB live trading
"
72327507ad7ff13a28d235e3a761df59b18ce9bd,QuantConnect/Lean,"Rename MaximumUnrealizedProfitPerSecurty->MaximumUnrealizedProfitPercentPerSecurity

While it is a long name, this aims to provide consistency with it's inverted
brethern, the MaximumDrawdownPercentPerSecurity risk model
"
a642e734fd22cf595fbf7778a9144c25a9575af6,QuantConnect/Lean,"Rename Fundamental namespace to UniverseSelection
"
0144b8cd6107edab6bfadad0b8d76cea3a5fc68a,SMRUCC/GCModeller,"split source file
"
1876a8146cbf8fcd019ab2e898f321ae94a32e39,SMRUCC/GCModeller,"makes improvements on the graphics engine, handle svg and gdi
"
595e0e8c31419a39d02bccd4795d0471d0b7e9b2,SMRUCC/GCModeller,"renames object namespace and fix the namespace reference error
"
1d26d7097b4fae021055b58aa426a453d6d84800,SMRUCC/GCModeller,"fix the namespace reconstruct errors
"
fe61901d4284dcf566e5638320cb43227bfcdbba,SMRUCC/GCModeller,"code style improvements
"
c9d030d428191260ef47923ecfed603a0e4acad3,SMRUCC/GCModeller,"improvements on the 3D gdi canvas component
"
d73abef0ec399d4d8025fc6923f2c92f0508908f,SMRUCC/GCModeller,"Merge pull request #640 from xieguigang/master

object type renames"
d7012b541d899349ef5524d8634080dc02d60d9b,SMRUCC/GCModeller,"improvements on the ncbi namespace
"
539b49de9d7bb9655af9b4aaf709f48906b13dd1,SMRUCC/GCModeller,"split source files
"
9daac4ca7c48dfa692912b424c162c1b947eab4e,SMRUCC/GCModeller,"improvements on the binary data reader
"
c8ae4229b51086aa461f741d13aa891044df9a89,SMRUCC/GCModeller,"object renames
"
48bd764b8c98ea39e6c862209b507aec155b9211,SMRUCC/GCModeller,"data model API improvements
"
b7a4c01af901b975942cb28272e9c46cb9749c92,SMRUCC/GCModeller,"improvements on the kmeans 3D scatter visualize API
"
418358971589583a833199f7ab92552308b09d86,SMRUCC/GCModeller,"improvements on tthe ODE tools
"
524e6cff709ec79937d042e520afccf1a61e08f1,SMRUCC/GCModeller,"improvements on the math system
"
da387c6302d89c8118f073488d9968784430f7b6,SMRUCC/GCModeller,"improvements on the network API
"
b2d133326c968d68ae7e3c54dc77452bb03dc820,Seklfreak/Robyul2,"Optimize code
"
dc870177338cd4a2abc22ee8a2074bbedf42d0ba,Seklfreak/Robyul2,"[stats] rewrites voice session

stores voice sessions in elastic searches
uses voice Voice State Update event instead of polling all channels
"
5a88a2b3f99332b134b96ef9d77f25fdcc171e45,Seklfreak/Robyul2,"[core] replaces ChannelMessageSend and similar methods with helper methods

removes unused poll module on the way
"
1c6b0807b0a1941703823d6692ddc2b3a742352d,SickGear/SickGear,"Fixed backlog issues and improved cache and provider searches, this resolves issue #298
"
8004685d3f6926083612c4e7096c08a9c5668ef9,SickGear/SickGear,"Re-wrote the indexerApi wrapper, was causing a bottlekneck
Fixed bug when show folder is deleted before being deleted from SB
New Show searches now confirm results have a valid firstaired date
"
28cea6fb547309ff1b0c47e73fb458b16303bb63,SickGear/SickGear,"Add/Update/Remove Network logo's

* Change added and updated Discovery Network's channel logo's
* Remove unrequired duplicate network logo's
"
f0146f728e69282dc22b6d32b53cd0fb2960cca8,SickGear/SickGear,"Lowered CPU usage even further, re-wrote daemonizer code for startups, removed misc unrequired functions from providers.
"
d9e03aa1fb603df2f3b95b5e712d3fff8baf27b3,SickGear/SickGear,"Change improve searching torrent provider BTScene.

Change improve text for abandoned show IDs.
Change DRY refactor provider result creation.
Change catch failures to shutdown Emby socket.
"
d02c0bd6ebcf1cbfe43708b1093aace586f28481,SickGear/SickGear,"Fixed issues with editing/saving custom scene exceptions.

Fixed charmap issues for anime show names.

Fixed issues with display show page and epCat key errors.

Fixed duplicate log messages for clearing provider caches.

Fixed issues with email notifier ep names not properly being encoded to UTF-8.

TVDB<->TVRAGE Indexer ID mapping is now performed on demand to be used when needed such as newznab providers can be searched with tvrage_id's and some will return tvrage_id's that later can be used to create show objects from for faster and more accurate name parsing, mapping is done via Trakt API calls.

Added stop event signals to schedualed tasks, SR now waits indefinate till task has been fully stopped before completing a restart or shutdown event.

NameParserCache is now persistent and stores 200 parsed results at any given time for quicker lookups and better performance, this helps maintain results between updates or shutdown/startup events.

Black and White lists for anime now only get used for anime shows as intended, performance gain for non-anime shows that dont need to load these lists.

Internal name cache now builds it self on demand when needed per show request plus checks if show is already in cache and if true exits routine to save time.

Schedualer and QueueItems classes are now a sub-class of threading.Thread and a stop threading event signal has been added to each.

If I forgot to list something it doesn't mean its not fixed so please test and report back if anything is wrong or has been corrected by this new release.
"
403c2679538cc724a0107551168ee826010d4ed6,SickGear/SickGear,"Further improved memory handling of bs4 for torrent providers.
"
3a5a40f240bd1e25abec2daece1802cf7e9e3905,SickGear/SickGear,"Change improve security of cached image use.

Change add helper function to validate acceptable image file extension.
"
10637f8f2948a5aa3dfab119b7b6111db86340e4,SickGear/SickGear,"Code Clean up and regex fix for ""no repeats"" error (reverted from commit 8ecd5a196db7c4ef235a87c6110e91596bf5ca34)
"
8ecd5a196db7c4ef235a87c6110e91596bf5ca34,SickRage/SickRage,"Code cleanup and regex fix for ""no repeats"" error
"
2ed40fafd6bfa620db8f9e009c23ea7028853e10,SickRage/SickRage,"Added background fanart when displaying shows
Made config general template responsive
Added web view for getting poster urls
"
3aafe4d7526494f9b973fbce834a5d6218cea415,SickRage/SickRage,"Cleaned up CSS code
"
a7ee3ce3900cac7a60afa9a215bbc3ff13a00445,SickRage/SickRage,"Merge pull request #2522 from MGaetan89/encoding

Move encodingKludge to sickrage module"
08d8beffa431b2f855b1811bedbd508fe7e284cc,SickRage/SickRage,"Misc fixes and code cleanups.
"
939e18f603603b2d0a1e498b82b994c8cc1add46,SickRage/SickRage,"Extracted more gettext messages
"
3f23fd2ba9b84436b5163f9a60d139ff64ea6580,SickRage/SickRage,"refactored remaining database calls to use custom database calls
"
25c7e455d1fa830a2f69ce8166ae819cd2f51e5a,SickRage/SickRage,"new: v8.7.2
fix: Fixed issues with database migration of old sqlite data, moved database (init,migrate,compact) calls to start of core module init function
"
e26ad3ebc04c9428639c3e25135b7c57ad05c83e,SickRage/SickRage,"Converted Timezone Updater to class
"
09476224c58bf49ad1f9a8e1602306633b40f1e4,SickRage/SickRage,"Improved code for better performance of application memory and cpu usage.
"
43b6b4b5949a24ef6982575096cd72bea7f1eac0,SickRage/SickRage,"Improved XEM scene numbering converting.
Fixed release naming and parsing.
Improved overall application performance and foorprint.
"
b407d9c881c1344e0e1ff8b058c3e5031ef97c96,SickRage/SickRage,"refactored core code relating to instance variables
"
a0da42f3f66a2262ac5063c8017ba3150c856c9c,SickRage/SickRage,"Merge pull request #1934 from miigotu/more-log-cleaning

More log cleanup and fixes. Move lower level actions to debug"
82f787e8a63411bebe3a8d90cdc55f46f99d31eb,SuperTux/supertux,"Use new style C++ cast instead of old style C cast
"
5c7020e504303cf18e472283ab614ef08ad43b2c,SuperTux/supertux,"Replaced Ref and RefCounter with std::shared_ptr<>
"
52746d12590f8e8ac8a1b0cba9fc2f29e4ef5481,SuperTux/supertux,"Split Reader classes into separate files
"
30468d23aa43cdf4ec60e0084d01b2b656f991bc,SuperTux/supertux,"Made the code -Wconversion clean under clang
"
d9dc8937982d72f7f16848819f52ae424b5bb905,SuperTux/supertux,"Moved viewport related code into Viewport class
"
c81188d4c44a092ae96c6c60b7ebd7f92ec1f758,Ultimaker/Uranium,"Rename queueMesh to queueNode
"
4f675763f0dbe9376817a2887e28f7ed807cb159,WPGlobus/WPGlobus,"Started moving stuff from functions.php to Filters / Controller
"
9b78a748fd10c828ac06f087ff66a4b67bb2462b,WPGlobus/WPGlobus,"[Options2] New field ""Dropdown"" (simplified ""Select""); fixed default value for it.
"
26594311ee95305d5e9c420d04463a64706724d0,alphagov/rummager,"Merge pull request #212 from alphagov/unified_search_cleanups

Unified search cleanups"
f862c694c5a77d227b91692dbcc22f07d478327c,alphagov/rummager,"Simplify checking fields in parameter parser

Remove the hardcoded list of ""ALLOWED_FILTER_FIELDS"" in favour of
allowing any field which has a defined filter type to be used for
filtering.  This increases the number of fields which can be filtered on
considerably, but I'm happy with this since filtering imposes little
overhead in elasticsearch, so if callers want to do that we should let
them.

It also removes the restriction that fields which are defined for only a
few document types (such as finders) can only be filtered on if a
document_type restriction is added.  This was only ever done because it
was the easiest thing to implement, and removing it makes the code much
cleaner and easier to document.

""document_type"" needs to be added as a special case for the list of
allowed filter fields, since it's actually an alias for the internal
""_type"" field, and therefore doesn't appear in the schema.

As part of this, SearchParameterParser now needs to be given a
CombinedIndexSchema for the indexes which are being searched on;
previously, it was being given an `Index` object for the 'mainstream'
index, which was used to get the schema for the ""finder"" document types,
for allowing extra filter fields when filtering by `document_type`.
"
83291b55f77735eeacef9c7404398d7cacd94a2d,altair-viz/altair,"Merge pull request #756 from jakevdp/rename-theme

Rename alt.theme to alt.themes for consistency"
9fea97a447e3f5ce7158ff87c30732ee32a2e816,altair-viz/altair,"MAINT: refactor code generation tools
"
366bc8825d27105867333ac42e417d05fe49427f,altair-viz/altair,"Refactor: move trait_from_dict into FromDict()
"
495877fe2e7482a2af357c12c307f3d7ffda44cf,altair-viz/altair,"some code cleanup
"
9e4f70ac6aafbcdebb5326c788a683b1579e88cf,antest1/kcanotify,"fix implementation for fleet information

- two-column view for landscape view
- make pad for combined fleet view
- async loading for setting data
"
9b2ed994be693d0d74d89f37149de0a0b98995f8,audiokit/AudioKit,"Renamed AKAudioFile function parameters. Made AKMicrophoneRecorder and AKPhasedLockedVocoder use AKAudioFile. Edited OSX Playgrounds.
"
abfea1314fdd23e4eb11cc3611f851dbf00ced00,audiokit/AudioKit,"* move some akaudiofile methods into extensions
"
a5cc9cd783a31ec038890dbdb656ce22d7a18a59,audiokit/AudioKit,"Some fixes and a new AKSetting method to check if phones are plugged :-)

AKSettings: added static public var headPhonesPlugged
Returns true if headPhones are plugged, otherwise return false
AKAudioFile: removed convenience init form AVAudioFile (not needed and
almost never used, could do the same using super.init(nsurl:file.url)
AKAudioPlayer: fixed an annoying bug: crash chile trying to
replaceFile() an empty file when the previous file was empty. Now,
replaceFile and reloadFile both automatically play if they were playing
before (it was only the case with replaceFile() but not with
reloadFile)
Playgrounds: change AKAudioFile <-> AVAudioFile code to show how they
are equivalent.
Some typo and cleaning in AKAudioFile Part 2 playground.
"
95467a6008aa710d1ddef42aa2f4b56409eab91a,cars10/elasticvue,"adds github logos and does some refactoring
"
2942db6d6d7248fb4f2a61970b7048e2c7aa8b6c,coreboot/coreboot,"soc/amd: Move stoneyridge features out of agesawrapper

The AGESA wrapper should not use and CONFIG_STONEY* values, nor should
it make any assumptions about the capabilities of a particular device.
Move these into stoneyridge northbridge and southbridge files.

BUG=b:70670425
TEST=Build and run Kahlee

Change-Id: I706edbb6a048b64389ba3077d5df0fe6155070b3
Signed-off-by: Marshall Dawson <7e1f03060580a936245d826517caa1807214ea35@gmail.com>
Reviewed-on: https://review.coreboot.org/22886
Tested-by: build bot (Jenkins) <8254d1186852c26c9fb3d343db6a5be86317fea9@coreboot.org>
Reviewed-by: Aaron Durbin <af0622ab041e8b0f8e5819838dcc93898196e71f@chromium.org>
"
6544cb3f1b431f96bb6d16f86e2cb4f75a4188b3,coreboot/coreboot,"Separate bootsplash image menuconfig option from others

The possibility of adding a bootsplash image to ROM should be independent
from VGA_ROM_RUN and VESA menuconfig options.
For example, the stored image could be saved in CBFS not for coreboot
but for later use in SeaBIOS.

Change-Id: I3a0ed53489c40d4d44bd4ebc358ae6667e6c797f
Signed-off-by: Konstantin Aladyshev <37a2ea1dafbc52e14e286336b17fbb9fa7318601@nicevt.ru>
Reviewed-on: http://review.coreboot.org/12129
Tested-by: build bot (Jenkins)
Reviewed-by: Patrick Georgi <bc411205f21846a74924ee7b489c75617ec76078@google.com>
"
86fc11d0c9b799f916d69ced72dc8a26a07591a2,coreboot/coreboot,"arm/arm64: Generalize bootblock C entry point

When we first added ARM support to coreboot, it was clear that the
bootblock would need to do vastly different tasks than on x86, so we
moved its main logic under arch/. Now that we have several more
architectures, it turns out (as with so many things lately) that x86 is
really the odd one out, and all the others are trying to do pretty much
the same thing. This has already caused maintenance issues as the ARM32
bootblock developed and less-mature architectures were left behind with
old cruft.

This patch tries to address that problem by centralizing that logic
under lib/ for use by all architectures/SoCs that don't explicitly
opt-out (with the slightly adapted existing BOOTBLOCK_CUSTOM option).
This works great out of the box for ARM32 and ARM64. It could probably
be easily applied to MIPS and RISCV as well, but I don't have any of
those boards to test so I'll mark them as BOOTBLOCK_CUSTOM for now and
leave that for later cleanup.

BRANCH=None
BUG=None
TEST=Built Jerry and Falco, booted Oak.

Change-Id: Ibbf727ad93651e388aef20e76f03f5567f9860cb
Signed-off-by: Julius Werner <4d12f06cff3725783b352157673a720bc67c4afe@chromium.org>
Reviewed-on: http://review.coreboot.org/12076
Reviewed-by: Aaron Durbin <af0622ab041e8b0f8e5819838dcc93898196e71f@chromium.org>
Tested-by: build bot (Jenkins)
"
439356fabcacbbc3a3231f6e27b5298f8f5ad41f,coreboot/coreboot,"x86: remove cpu_incs as romstage Make variable

When building up which files to include in romstage there
were both 'cpu_incs' and 'cpu_incs-y' which were used to
generate crt0.S. Remove the former to settle on cpu_incs-y
as the way to be included.

BUG=chrome-os-partner:44827
BRANCH=None
TEST=Built rambi. No include file changes.

Change-Id: I8dc0631f8253c21c670f2f02928225ed5b869ce6
Signed-off-by: Aaron Durbin <af0622ab041e8b0f8e5819838dcc93898196e71f@chromium.org>
Reviewed-on: http://review.coreboot.org/11494
Tested-by: build bot (Jenkins)
Reviewed-by: Patrick Georgi <bc411205f21846a74924ee7b489c75617ec76078@google.com>
"
b5828d74455a91553d78ef3077936693ae36213f,coreboot/coreboot,"This patch drops the coreboot CMOS checksum ranges from Kconfig because
the information is already specified in cmos.layout. coreboot is changed
to use that version instead.

Signed-off-by: Stefan Reinauer <stepan@coresystems.de>
Acked-by: Ronald G. Minnich <rminnich@gmai.com>



git-svn-id: e63b70b9d30949e3d1a603ce8b251214fc4ea546@5313 2b7e53f0-3cfb-0310-b3e9-8179ed1497e1
"
3a113ee3efe296452f9c169a58713fdfe1873439,dpressel/baseline,"Feature/remote services (#161)

* WIP: add remote functionality

* move code into RemoteModel. still all in services.py

* move RemoteModel to model.py

* s2s uses predict instead of run method, added predict_next method to RemoteModel

* WIP: s2s service works remotely. exporter sets s2s src length key correctly. vectorizer sets integer type to int32. RemoteModel moved back to services.py.

* s2s exporting will default beam width to 30, can be set from command line

* encoder decoder service needs beam width information.

* s2s model wraps output in a list if predict is not used on a batch. Services incorporate RemoteModel into load. RemoteModel incorporates protobuf dependencies inside of the class

* vectorizers set types to int32

* tagger service will work with a remote service

* tagger service works remotely
* removed label lookup in tagger export
* added length key to tagger export
* service reads in label vocabulary
* remote model can check remote signature

* exporters save an assets json file

* exporters export a bundle with an asset json file, vectorizers, vocabs, and labels.

* services read from exported bundle. removed ability to read signature from remote model. RemoteModel stores lengths key, inputs, and beam variables.

* classify service handles remote model. removed print statement from vectorizer.

* move remote model to baseline/model.py

* s2s exports beam size to asset file

* add tensorflow_serving pb files to baseline

* rename transform to predict. add import for import_user_module in models.py. tagger service doesn't reference the words variable

* use predict method

* api examples mention that remote variables are optional

* update s2s exporter to support decoupled s2s model

* remote tf model moved to tf dir. services check backend for remote models

* rename remote model for TF. Language Model service run() renamed predict()

* services calls RemoteModelTensorFLow

* remove unused import
"
60f8a5e4b1c2ca3c49a61d1a1ec6b312c8c24fdd,dthain/basekernel,"Squashed commit of the following:

commit f52a36e72261e91786b3fc179d5e353c435e87a5
Merge: 2634d6d 2cccec7
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 17 13:42:46 2018 -0600

    Merge branch 'temp/dup-volume' of github.com:ethanmw/basekernel into temp/dup-volume

commit 2634d6de85644a1743569ae4990505b5718e15d2
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 21:09:19 2018 -0600

    Removed ALL block-sized stack allocations from kevinfs

commit ff31cba856ed8dbfbb27f58b256b5829c5ed71af
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 17:04:35 2018 -0600

    Improved memory handling

commit 27f3d9ff9c314f8ee502c0f477ad6f73e3776030
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 17:04:16 2018 -0600

    Improved error handling

commit 9002e498299833bb92c92ee1e557bff3030ae5c7
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 16:11:35 2018 -0600

    Use kmalloc instead of stack allocation in kevinfs_readdir

commit e22b81f0239f96b86c13141fe260606c3b89ffec
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 13:57:41 2018 -0600

    Added additional error checking to fs_dirent_copy

commit 96c4aba9ca1fd1150a0fcda3036647084c7ecc46
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:31:59 2018 -0500

    renamed cdtokev.c to copycdtokev.c

commit f1e1fa010a342f5b2cd3474b3bcf8529181a8d9f
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:24:38 2018 -0500

    Add error checking

commit 6b22a25c519a1bcb97b6157d5d4e42962e1a8c89
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:21:15 2018 -0500

    Fixed directory-checking logic

commit 6aaa8ccd251a6d5296695559d9f4f751ac5af4da
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:16:26 2018 -0500

    Add comment

commit 20ba1bc5edd65349c57c473c2dc1bcb6927b529b
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:14:56 2018 -0500

    Fix logic error in cdrom_dirent_load

commit 2009e9c82076c9c9235075ac5111ff4d1318dfb4
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:14:27 2018 -0500

    Change dup to copy for dup_volume

commit c14fc7d9fabe3850c8c0cf472ecb1fdeb2c058b2
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Tue Nov 20 12:07:04 2018 -0500

    Added resizing to fs_file_write -- now it actually works

commit ba6a3a79ae61a6b670c1c65a3e779a1ffce2ddf5
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Tue Nov 13 22:49:53 2018 -0500

    Fixed length checking when reading directories

commit f7101ef01f5fd9934e852caeec92b86f77a61c4b
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Nov 5 13:41:13 2018 -0500

    Remove debug newlist

commit 68fb6d05e4009130e70408b8104892e099a0666f
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 29 12:52:04 2018 -0400

    Unroll error checking for easier debugging

commit 6dfc03dd5115f3048248c4ba26e698dfb3bdbbf9
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 29 12:34:18 2018 -0400

    Fix error checking logic

commit 058529e58a9e8cc8f6e051387193b6c2e5ea9416
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 22 12:13:01 2018 -0400

    Bug fix

commit 7ba369bbcabf9028caeed5b5639352dcdb6fcb7b
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 22 10:45:05 2018 -0400

    Fix block counting and error checking

commit e444c0a3e78b0a98abda5989ddd7114eaf164c76
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 22 10:44:18 2018 -0400

    Fix fs_dirent_dup to read null-terminated dirent array

commit 4b27b47916ff1b8b58d00b15ba04664b5d3c9db5
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 8 00:13:33 2018 -0400

    Everything

commit 2cccec712eb364d3d7bab635961df77b87358be6
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 21:09:19 2018 -0600

    Removed ALL block-sized stack allocations from kevinfs

commit cefa292a2905ddf03940ea5050222dd0a7b7858a
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 17:04:35 2018 -0600

    Improved memory handling

commit a02a909ce209759fdd410802554e88dfa06afbdc
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 17:04:16 2018 -0600

    Improved error handling

commit 626b1af06618bce9a9ffdb832c02ba1c941e8965
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 16:11:35 2018 -0600

    Use kmalloc instead of stack allocation in kevinfs_readdir

commit cb607151a5704319188ba349f61ae61ac07620ba
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Sun Dec 16 13:57:41 2018 -0600

    Added additional error checking to fs_dirent_copy

commit a333b5a4045a69fd36c125f561fae6fff0b86f3e
Merge: a215368 0314912
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:39:35 2018 -0500

    Merge branch 'master' into temp/dup-volume

commit a2153689b968adaafff2b4f5f7aea817c8170244
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:37:20 2018 -0500

    Fix typo in user/Makefile

commit 16bc86d7d9985948b310981ec4a86a6c649ad20d
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:31:59 2018 -0500

    renamed cdtokev.c to copycdtokev.c

commit 04e3013ce2705d014f16382960d9831f9b49b1cd
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:24:38 2018 -0500

    Add error checking

commit 7c8a654e6daa0cb32a37b2b4fb059b24fd34f810
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:21:15 2018 -0500

    Fixed directory-checking logic

commit bb3b8aa6de4af6419355b6e0ea6ce2c31a14d68d
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:16:26 2018 -0500

    Add comment

commit fb3133979152237d17a7014ba7eca0e9701dd1db
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:14:56 2018 -0500

    Fix logic error in cdrom_dirent_load

commit 0197a164b66e13b91ba5417bd3ff40639cf422a3
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Dec 3 00:14:27 2018 -0500

    Change dup to copy for dup_volume

commit 2f9e701d205ca4151b32104af395e13134e7420c
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Tue Nov 20 12:07:04 2018 -0500

    Added resizing to fs_file_write -- now it actually works

commit a72c8359d52c4188400883fdbada95cc45b48d47
Merge: b5de298 2aa3ffc
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Tue Nov 13 22:53:21 2018 -0500

    Merge branch 'master' into temp/dup-volume

commit b5de298b66f843404efce05440595123ecff938b
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Tue Nov 13 22:49:53 2018 -0500

    Fixed length checking when reading directories

commit 4547ae7fee5c574498cf29474bdf741fdbcd904a
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Nov 12 23:01:28 2018 -0500

    Scale factor to convert FS blocks to ATA blocks -- IT WORKS NOW!!!

commit 212f229c72846f9d867154db4514ab0f052a2412
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Nov 5 13:41:13 2018 -0500

    Remove debug newlist

commit 701b656c69d8d7a1e388ec506efff9fa5687dbe3
Merge: eb71724 d7c5807
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Tue Oct 30 22:11:03 2018 -0400

    Merge branch 'master' into temp/dup-volume

commit eb717247594860182dd446b22e5945af6bed63b6
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 29 12:52:04 2018 -0400

    Unroll error checking for easier debugging

commit ecdca6e24daa60370e1e5d4856209984a4b454b0
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 29 12:34:18 2018 -0400

    Fix error checking logic

commit 8f5ab20e3697fe7b2d8ba55afe537dbc172bcd33
Merge: 0e5d118 a1db242
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 22 14:23:16 2018 -0400

    Merge branch 'fix/cdrom_dirent_read_dir' into temp/dup-volume

commit 0e5d118bb15b9dd523ddbbcd476339923e9d102c
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 22 12:13:01 2018 -0400

    Bug fix

commit 8fd043964dbc679d6ac7ea60ff6fa73a0721911f
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 22 10:53:10 2018 -0400

    Finish merge

commit fa263d16161f2f234af6239d50dc8253b68ff20f
Merge: 169700c 1a1d9c5
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 22 10:52:03 2018 -0400

    Merge branch 'master' into temp/dup-volume

commit 169700cc559ab79f87d3713dcbc6323d4af676ed
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 22 10:45:05 2018 -0400

    Fix block counting and error checking

commit 9fcd681c5b27e3efe9ffd09b04bc6554fdaa3232
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 22 10:44:18 2018 -0400

    Fix fs_dirent_dup to read null-terminated dirent array

commit 4c201aeee1592f6facbbc9d39b62b4f6bb0b34b3
Author: Ethan Williams <ewilli23@nd.edu>
Date:   Mon Oct 8 00:13:33 2018 -0400

    Everything
"
43fe82e1e52f1bec842f29c6c2428f29b70d8186,electron/electron,"Merge branch 'master' into rename-to-electron
"
e7bb553d3b041e175a6effd160702daf8c0eef0a,electron/electron,"consolidate code and rename for clarity
"
15ce235eed79637e2c4d075014623b3c928de9c2,electron/electron,"Merge pull request #12008 from electron/window-refactor-1

Refactor NativeWindow (Part 1): Remove WebContentsObserver methods"
afdad927b702fd98a4d78b7e7df416c8de773137,electron/electron,"Merge pull request #4976 from atom/electron-resources

Rename atom to electron in bundled resources"
f49e748020fc81cec3b0b4b2071ba282e440657b,electron/electron,"Merge pull request #9096 from electron/upgrade-brightray-for-cpp-cleanup

Upgrade brightray to latest"
159cbb30e31fa6fedd3453df70f4ee8bdd9cffda,gamejolt/gamejolt,"Search improve (#220)

* Progress on searching posts

* Remove outdated TODO comment

* Improve search page a bit

* Remove tag pages and posts returning in search autocomplete

* Encode channel name and search query to support special characters

* Remove the no results in ""all search results"" page. It's handled by the parent now.

* fix

* Bump frontend-lib
"
e2b35e86f15b72ac19e228744dfab86a7c5160cd,git-cola/git-cola,"browse: avoid using QStandardItem as dictionary keys

Python3 does not allow using QStandardItem instances as dictionary keys.
Work around it by using the item's path instead.

Closes #501
Reported-by: Andrew Chen <0e9e4681c0be98ef1ad0d5b010349858bcc0ba3a@gmail.com>
Signed-off-by: David Aguilar <9de348c050f7cd1ca590883733c4e531ce610bf4@gmail.com>
"
d7be10284b883fe8fc8f46cfa2a2999eaffe1b5c,git-cola/git-cola,"cola: add support for diff.tool

Now that difftool uses diff.tool instead of merge.tool
we teach cola to use merge.tool.

This also removes all usage of the --tool=<tool> parameter
to git-mergetool and git-difftool since the assumption is
that users will use the appropriate diff/merge.tool config variable.

Signed-off-by: David Aguilar <9de348c050f7cd1ca590883733c4e531ce610bf4@gmail.com>
"
1129adbef1601b83ceb8403db4023ee42375a59b,git-cola/git-cola,"Merge branch 'create-bare'

Add an action to the File menu for creating bare repositories.

* create-bare:
  doc/relnotes: mention ""New Bare Repositories"" for v3.1
  main: add menu actions for creating bare repositories
  editremotes: refactor to provide an add_remote() function
  guicmds: add commands for creating new bare repositories
  cmds: add a ""New Bare Repo"" command
  qtutils: fix the order of title, msg for prompt()
  startup: use a folder icon for the ""Open"" button
  editremotes: add a tooltip and use a folder icon
  qtutils: add space before button labels

Signed-off-by: David Aguilar <9de348c050f7cd1ca590883733c4e531ce610bf4@gmail.com>
"
cd5bfaf3cf820e60347723016bd02db95cd45076,git-cola/git-cola,"main: improve git-lfs detection

We were checking for the presence of the ""lfs"" object store as evidence
of ""git lfs"" being initialized, but it falsely identifies repositories
as having git lfs installed even after running ""git lfs uninstall"".

Make the LFS detection more robust by checking for the presence of the
lfs filter configuration and a ""git lfs install""-provided hook.  These
are both removed by ""git lfs uninstall"".

Closes #842
Reported-by: ÊûóÂçö‰ªÅ (Buo-ren Lin)
Signed-off-by: David Aguilar <9de348c050f7cd1ca590883733c4e531ce610bf4@gmail.com>
"
efb2c052114fcd74b4e414cc4a37159002c378b3,git-cola/git-cola,"Merge branch 'set-upstream-branch'

* set-upstream-branch:
  branch: add a menu for setting the upstream branch
  cmds: add SetUpstreamBranch
  gitcmds: add parse_remote_branch()
  gitcmds: move over more git functionality from the models
  git: make transform_kwargs() a standalone function
  gitcmds: rename default_remote() to upstream_remote()

Signed-off-by: David Aguilar <9de348c050f7cd1ca590883733c4e531ce610bf4@gmail.com>
"
daeed3fdf309771a1c6827ed5b024c2f883bbeb5,gitlabhq/gitlabhq,"Refactor colors and lists

* Introduce 2 color links: black and blue
* Use black color link for UI elements like lists
* Refactor lists to use .title nested under li
* Make all lists (events, todos, activity, projects etc) use style
* List colorschema is now 333 for links and 555 for text

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>
"
4213bd56dea1d6cdbfa8baed8faa7e3ab86e61ab,gitlabhq/gitlabhq,"Merge branch 'mattermost-configure-frontend' into 'zj-mattermost-slash-config'

Mattermost configuration frontend

## What does this MR do?

Adds mattermost configuration frontend.

## Are there points in the code the reviewer needs to double check?

:2db99e1f31e92bef2b3399d11c3856f3a0431200@zj to do the merge.

## Why was this MR needed?

## Screenshots (if relevant)

## Does this MR meet the acceptance criteria?

- [ ] [Changelog entry](https://docs.gitlab.com/ce/development/changelog.html) added
- [ ] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [ ] API support added
- Tests
  - [ ] Added for this feature/bug
  - [ ] All builds are passing
- [ ] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [ ] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [ ] Branch has no merge conflicts with `master` (if it does - rebase it please)
- [ ] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?

Closes #24769

See merge request !8079"
a89f18bf2c1421460fcb3f42aac538df51660912,gitlabhq/gitlabhq,"Renamed Gitaly services
"
ecc821a981984b8c1c7b29deab7c98a6958f4534,gitlabhq/gitlabhq,"Merge branch '44833-ide-clean-up-status-bar' into 'master'

Resolve ""Clean up bottom status bar Web IDE""

Closes #44833

See merge request gitlab-org/gitlab-ce!18756"
7af4f5215e28927830cbc74d383cdfeb9e4ef587,gitlabhq/gitlabhq,"Show warning if build doesn't have runners with specified tags or runners didn't connect recently

Slightly refactor runner status detection: moving it to Runner class

Signed-off-by: Kamil Trzcinski <b7f250438f25653cca593293143d9a21e24753ce@ayufan.eu>
"
a57890bcaa76d540aa675e0c89d50620c9d69018,gitlabhq/gitlabhq,"Add helpers for pipeline user link & user avatar
"
f93a14801d4543c52e4128db1ba1bf801f3b6ef1,gitlabhq/gitlabhq,"Remove duplicated include IgnorableColumn

It's probably duplicated during resolving a conflict?
"
498351cfacfc09b5a33281838f0f366a6b2961df,gitlabhq/gitlabhq,"Merge branch '26384-improve-omnibus-mattermost-command-installation-flow' into 'master'

Resolve ""Improve Omnibus-Mattermost Command installation flow""

See merge request !9257"
83c1395af2e457a1de919a67ff7a2b21dceaeeef,gitlabhq/gitlabhq,"Refactor authorized params in Admin::GroupsController

Signed-off-by: R√©my Coutable <4ea0184b9df19e0786dd00b28e6daa4d26baeb3e@rymai.me>
"
9aed32b1a2173e3d0cb1e3c651ab40d365151ab6,gitlabhq/gitlabhq,"Cleanup new branch/merge request form in issues
"
22d6e69ecf004060de31823a8242d249a88c4e46,gitlabhq/gitlabhq,"Merge branch 'improve-share-locking-feature-for-subgroups' into 'master'

Improve ""Share with group lock"" feature for subgroups

Closes #30550

See merge request !13944"
34ef6ce3d3dc46ffc2b34f5882ddf2a2454ec7b6,gitlabhq/gitlabhq,"Merge branch '26138-combine-webhooks-and-services-settings-pages' into 'master'

Moved the webhooks and services gear options to a single one called integrations

See merge request !8380"
b5d5da7b6f2076bbd72d929ae84dbd00582ff365,gitlabhq/gitlabhq,"add InspectRequests helper automatically to :js tests
"
a6f3f6b8cd2e79acbc824c401435284635071e1a,gitlabhq/gitlabhq,"extract favicon logic to lib class
"
c5ba87a2fbd4eb0bcce5431683e26e8d345db5c4,gitlabhq/gitlabhq,"Merge pull request #8096 from cirosantilli/regex-to-string

Replace regex methods by string ones since faster and more readable"
34cc2a8eca59442f94a27c15459a8c230398b6cd,gitlabhq/gitlabhq,"Improve DRYness of views
"
b3b4272cb756519f8921a1c64865db623d430c83,gitlabhq/gitlabhq,"tidy up component
added api spec
"
9d937293136afd7994218b8dc72bb0956fb19eeb,gitlabhq/gitlabhq,"Move projects import to separate resource. Add bare repo creation to repository controller

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>
"
734b84105b0f025e4d8c533ba4f41f2835d2976c,gitlabhq/gitlabhq,"Merge branch 'cache-refactor' into 'master'

Cache `#can_be_resolved_in_ui?` git operations

Closes gitaly#1051

See merge request gitlab-org/gitlab-ce!17589"
a01897446075beac31719ff44a9d742d81ce785d,gitlabhq/gitlabhq,"Convert remaining issue board components into ES module syntax
"
ceb1ebc9d9e96a567854a1cb1e12bcafd1b3a932,gitlabhq/gitlabhq,"Merge branch 'dm-fix-editing-files-on-forks' into 'master'

Refactor changing files in web UI

Closes #28711

See merge request !9323"
17388eb034de3808c5c7f80c19726575dd073ce1,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into fix-cancelling-pipelines

* upstream/master: (133 commits)
  Restructure steps for MM slash commands service
  Add Changelog entry for CI linter validation fix
  Fix entry lookup in CI config inheritance rules
  Extend specs for global ci configuration entry
  Remove unnecessary require_relative calls from service classes
  Use single quote for strings
  Ue svg from SVGs object
  Dont trigger CI builds [ci skip]
  Revert ""Test only migrations""
  Add custom copy for each empty stage
  Refactor Mattermost slash commands docs
  Fetch only one revision
  Highlight nav item on hover
  Test only migrations
  Fix migration paths tests
  Scroll CA stage panel on mobile
  Fix CSS declaration
  administer to administrator
  Move SVGs to JS objects for easy reuse
  Improve deploy command message
  ...
"
8c01f3110c8d8601fc16b17850dfa778f1f3d877,gitlabhq/gitlabhq,"Merge branch 'winh-namespace-rename-hooks' into 'master'

Add system hooks user_rename and group_rename

Closes #39596

See merge request gitlab-org/gitlab-ce!15123"
da7836956e7399d65add45f8907e95719821cb42,gitlabhq/gitlabhq,"Improve Debugging Capabilities For Helm Application Installs
"
db3bc89792c5450cb93e674d621d5ea996ee01f6,gitlabhq/gitlabhq,"refactor `app/helpers/projects_helper.rb:21:3`
"
6cd7ce33240f8984f5c835123c5e7a96b4abb167,gitlabhq/gitlabhq,"Merge branch 'backstage/gb/move-some-pipelines-code-from-ee-to-ee' into 'master'

Move to CE some EE pipelines-related code that belongs to CE

Closes gitlab-ee#3616

See merge request gitlab-org/gitlab-ce!14699"
32d83ee79fedc8760486ff40a2459ecb472fa51b,gitlabhq/gitlabhq,"Merge branch 'master' into ux/suppress-ci-yml-warning

* master: (24 commits)
  Fix runners admin view
  Fix migrations
  Run builds from projects with enabled CI
  Use Gitlab::Git instead of Ci::Git
  Fix last specs
  Fix specs
  Fix after column rename
  Fix errors
  Update badge
  Finishing touches
  Fix triggers tests
  Rename columns and rename migrations
  Reimplement Trigger API
  Remove ci_ prefix from all ci related things
  Add runners token
  Migrate CI::Project to Project
  Fix indentation and BuildsEmailService
  Change default values
  Enhance migrate CI emails
  Fix issue tracker service
  ...

Conflicts:
	spec/features/commits_spec.rb
"
3703cc4bbbb2d6562533c25648cc26269e419ab2,gitlabhq/gitlabhq,"Squashed commit of the following:

commit c35ca6594eb1d29cac46362d09036f3d128143ed
Merge: 87da74fb98a 13ea4b387dd
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 27 13:25:22 2018 +0900

    Merge branch 'master-ce' into artifact-format-v2

commit 87da74fb98aef1f664553ca2b8406ca154e4c19f
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 26 20:27:45 2018 +0900

    Remove unncessary GENERAL_ARCHIVE_FILE_TYPE

commit 5a3cfc1fdc8e81dd5647e275f87c0da2d93235b4
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 26 20:19:44 2018 +0900

    Expand  entities in JobRequest::Artifacts

commit 660f885ebb25a19182e601181050683d2b6134f6
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 26 20:06:14 2018 +0900

    Add tests

commit 60bca3dcfd055647a9f43523b79d5eebdc4bdc5a
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 26 19:30:52 2018 +0900

    Simplify build runner presenter

commit 81d1951d5562bec4086d719748360f3f24df4168
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 26 19:18:53 2018 +0900

    Simplify `scope :test_reports` in job_artifacts

commit 15d1d76ca1cb97501c82471eb1c927290071dcfb
Merge: f3327b2912d ffbfd18ce2f
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 26 19:01:53 2018 +0900

    Merge branch 'master-ce' into artifact-format-v2

commit f3327b2912d0b169e7a059dca7b4d15e77567075
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 26 19:01:44 2018 +0900

    Fix ""or string"" to ""or a string"". Use be_valid

commit 9aaae6d60f7537f55f862f4d61de7a0d3a3b6bc2
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 21:25:57 2018 +0900

    Fix spec file name - build_runner_presenter_spec.rb

commit 41c64c190e2e2efa7ab91a0daa0598da2d755f05
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 21:18:12 2018 +0900

    Rename to Ci::BuildRunnerPresenter

commit e9762299eb66c8f88734f80d05d38b9616a8fde8
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 21:14:44 2018 +0900

    Split methods into three in Ci::Builds::RunnerPresenter

commit 6e73070313a782eb63d4fbcbe324d9acaf67334b
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 20:23:53 2018 +0900

    Remove redandant as: :artifacts

commit 063f647e4829d9c71a71d227f9946bb47b93691f
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 20:04:58 2018 +0900

    Fix specs

commit a45975afd9b9391390c1adafbeab72c970e97b64
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 18:18:53 2018 +0900

    Created a separate presenter

commit 431ad666e080124c90e13cbaf0d4f0969aa7b2f2
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 18:10:04 2018 +0900

    Simplified config presenter

commit 2e106569ea258f5f7556a8b454a6dd0e9cbe6902
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 17:25:05 2018 +0900

    Skip file_format setting if the file_type is trace

commit 0572bd8357a2e9ea16118a0bd85264e3fb799322
Merge: 30ae33daa1d 6cb30f83255
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 17:13:55 2018 +0900

    Merge branch 'master-ce' into artifact-format-v2

commit 30ae33daa1d4afcb57e6335fba62a3c5fc98468a
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 25 17:13:23 2018 +0900

    Fix spec

commit ccb6eb75187030ff0fd3c6e69f89eeca79d2a929
Merge: 1ebaaaf2094 34c57e09b9f
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Tue Jul 24 14:27:48 2018 +0900

    Merge branch 'master-ce' into artifact-format-v2

commit 1ebaaaf2094c47c03e16745d2f8af736ec102b76
Merge: bfdf565800b dc7b4b7bb97
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 23 14:22:29 2018 +0900

    Merge branch 'master-ce' into artifact-format-v2

commit bfdf565800b58e838a760aa01d2fadb64e2d768f
Merge: 681bd6a878a 44dbeccbe10
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 19:10:47 2018 +0900

    Merge branch 'master-ce' into artifact-format-v2

commit 681bd6a878ad2a77c278f5619b51c542d7382aa2
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 18:19:46 2018 +0900

    Specify DOWNTIME=false

commit 59c4e31390e0d616d69babf8ac857e98f2dc774e
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 18:14:44 2018 +0900

    Wrap long lines

commit 3d85788edbe73fc74c72854508e47fe259d99236
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 18:05:31 2018 +0900

    Checking filr_format and file_type paring

commit 3c92a22faf6278e7a2d1ee13bd978bc659b72452
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 16:07:21 2018 +0900

    Fix build presenter spec

commit 36e69897b0524cdee6060c928c03af734afae664
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 16:02:09 2018 +0900

    Erase test reports at the proper timing

commit 402ae97ecf7f9e3fe541f2d6abef6e47ab740452
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 15:46:56 2018 +0900

    Make GENERAL_ARCHIVE_FILE_TYPE as a single entry

commit 75f75b3f5988398fff0660ca5f04aec756ab03bb
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 15:42:16 2018 +0900

    Implement config artifact presenter

commit 9ecaee914defba5f12a7a06375ea2876b4328d7f
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 14:27:54 2018 +0900

    Introduce ARCHIVE_LEGACY_TRACES_MIGRATION_VERSION check

commit 34ea9610ab9a249a576ee435f365b9e1fcca7f00
Merge: d88523ca884 b60364c0f37
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 20 13:46:52 2018 +0900

    Merge branch 'master-ce' into artifact-format-v2

commit d88523ca88420354f61bd36f533c62a6ca474423
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 21:00:40 2018 +0900

    Revert unnecessary change

commit d9beb10ede5e4e8abe388fadbd6412640293917a
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 20:57:03 2018 +0900

    Remove scattering around erase_test_reports!

commit c79f361ca01f8dbc0d395edee5fab7f5a0697934
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 20:53:00 2018 +0900

    Rever archive_metadata refactoring  (For simplifying)

commit 55bc71a404d8cf5fa87e187f6e88da92ab95afa9
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 20:45:19 2018 +0900

    Use array_of_strings_or_string in Command

commit 8a576b18c8ab8ead2344e2885aaf2fde11af0328
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 20:40:06 2018 +0900

    Fix spec

commit a2cda62fb922184aaf0e78699e06846c96565e0d
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 18:27:11 2018 +0900

    Fix presenter spec

commit 95502e605af9bcf1a61dbeb26f9be4d181f8a7ba
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 18:23:41 2018 +0900

    Fix artifact migratable

commit a3930853c93862007ba6814511bc32042c7f4986
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 18:15:41 2018 +0900

    Increment migration version to use `file_format` when archiving traces

commit e31121cb5e617b0f05e375c2150ece0e38e5e0d6
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 17:57:15 2018 +0900

    Impolement job_artifact.test_reports method

commit e54707fdf97392839cb2c4711160bd3bc89da196
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 16:49:27 2018 +0900

    Fix erase method

commit 20e95824341af1ebc5877d28dc5eba26f73eddf9
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 16:28:00 2018 +0900

    Fix spec

commit 7ade498101d02573b20a2405ebe0bdb8efd8aa3b
Merge: e7be6b2b362 98eccfc44c5
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 19 12:37:22 2018 +0900

    Merge branch 'master-ce' into artifact-format-v2

commit e7be6b2b3624ba44d56143084731cb9a6168f974
Merge: 5a8d4930e01 9bdc9b1ae69
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 18 15:43:36 2018 +0900

    Merge branch 'master' into artifact-format-v2

commit 5a8d4930e0127aae311bfa3da70d9ab9637791e3
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 18 15:43:28 2018 +0900

    Evaluate artifact_format

commit c3ce06aa9bc6481b37a16d175adf0fd1c37a1bc0
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 22:27:46 2018 +0900

    Fix sending junit.xml

commit e5ce3668ee65217aba610d5311efd5e82bacddf3
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 19:02:06 2018 +0900

    Add spec for Gitlab::Ci::Config::Entry::Artifacts

commit ede107caf13fb215045576dcce18e20eec776df1
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 17:58:28 2018 +0900

    Revert refactoring

commit 15531ba9feff669b2ac05936e0feaee1856c1571
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 17:57:31 2018 +0900

    Revert refactoring

commit 14821f3babcc210bc52e4e825adc8333752fbc88
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 17:55:41 2018 +0900

    Add spec for file format. Add spec for config_artifacts

commit 882faeab57ab39d18f72abd9b65d286db92e1011
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 17:20:28 2018 +0900

    Add file_format to factory

commit 3cd0513e254db15141cd748f6209179f462974f2
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 17:12:52 2018 +0900

    Rename migration file properly

commit f511933b5f618fc47d1512554878913922dfba61
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 17:09:57 2018 +0900

    Revert artifacts_archive_file refactoring

commit e295e8cbdee065ee3af6dd82f512729554237cad
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 16:03:26 2018 +0900

    Dry up the converion in Entry::Reports

commit b0ffa42f6410be4718e7a36cb21f7b585421750e
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 15:50:42 2018 +0900

    Set file_format at callers

commit f3dc7a2e02901c79a9e572514a1b731c680e43cc
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 15:47:51 2018 +0900

    Use presenter for presenting artifacts hash to runner

commit e5299526138be90d65cf13368134e734b46f7597
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 14:59:09 2018 +0900

    Support deleting junit artifact. Make wording explicit

commit cc81c34acf23323257d190c23030d0a89265bccc
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 14:35:12 2018 +0900

    Add changelog

commit abde0f2ab5c5c1d99b2f94a049984877bb5a4d77
Merge: 4c87e5b388f fabf6a5634f
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Mon Jul 16 13:22:22 2018 +0900

    Merge branch 'master' into artifact-format-v2

commit 4c87e5b388fb098fb6da71e17a47fa204033e4ac
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 13 17:33:07 2018 +0900

    Fix static analysis

commit bc96346be6990b75da9a36055814b24b5b805707
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 13 16:43:02 2018 +0900

    Fix Config::Entry::Artifacts

commit aac284613b9db43e3021198dc5b43b81806f1bce
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 13 14:40:20 2018 +0900

    Generalized by DEFAULT_FILE_FORMAT

commit a79299fdbb0ed74000ca37cff8fef8268cd29b13
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 13 13:55:02 2018 +0900

    Cleanup API::Entities::JobRequest::Artifacts

commit 1650249214768c23f6f46ec62c0c54448017eeb5
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 13 13:25:52 2018 +0900

    Simplified file_type relations

commit 981da91bc4c255ff992870e4e4c4393696f5bece
Merge: e79808425eb 924146a8d6b
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 13 13:18:20 2018 +0900

    Merge branch 'master' into artifact-format-v2

commit e79808425eb63c322a997e71d606d97b85e42048
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 12 18:16:52 2018 +0900

    Remove unnecessary change

commit a531bd7487955143489d286a0fb2e5d0984acc52
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 12 17:40:35 2018 +0900

    Fix errors typo

commit 57d6f21821c8ad934874c1aac3f627335c64c80d
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 12 13:32:35 2018 +0900

    Use the correct type name

commit da4ca63f25a27a1268317952061c81a28516653f
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 12 13:29:21 2018 +0900

    Refactor job_artifacts_metadata to job_artifacts_archive_metadata

commit 4098a8f10f92a6efa48080f8925809e251066f9d
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 12 13:23:55 2018 +0900

    Add job_artifacts_junit relation

commit 5342f07e100253713dbf50eb303da1977484077f
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 12 13:14:03 2018 +0900

    Fix raw to raw?

commit 15e0abcb22d9db3d8ef955e647f0a5d0a49c26b6
Merge: 31252fe8d75 ba38931d90b
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 12 13:12:38 2018 +0900

    Merge branch 'master' into artifact-format-v2

commit 31252fe8d751319c5390f898f66f0af4a8581013
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 11 19:05:51 2018 +0900

    Temporaly use type Hash for reports

commit 583165c0349f40e7be16a8039dbffb4139f94921
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 11 15:27:21 2018 +0900

    Revert unnecessary change

commit eb48369b8311b538f46f59a31f4a6d3f8c9e68e1
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 11 15:21:46 2018 +0900

    Use file_format raw for trace

commit fb69ae8349d58499ad21965c0d1cf95e2b79a8e3
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 11 15:20:10 2018 +0900

    Check the presence of the file_format

commit c0840224bc8789d35da032c2a0ee48aa9f2232aa
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 11 15:16:19 2018 +0900

    Add format_restriction validation

commit d64fbd388cb2294447df5185366d8b5016591949
Merge: 7ec81e7c7d1 c2a0a3ab1ae
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Wed Jul 11 15:11:44 2018 +0900

    Merge branch 'master' into artifact-format-v2

commit 7ec81e7c7d115f77d712892dfc79db72b9f5bc7a
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 6 20:23:54 2018 +0900

    Artifacts presenter (Halfway)

commit a3ccbe4c3a9b7d3095fe1929dee5fd9c57e168e0
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 6 20:22:52 2018 +0900

    Fix schema.rb

commit b630c670c707548799c6852e4465ef94fb4a0572
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 6 19:26:03 2018 +0900

    Allow reports type under artifacts. Allow junit keyword in it.

commit e7e37612487b556320d27f4fe0de32cd4ec20720
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 6 19:25:10 2018 +0900

    Change column name to artifact_format

commit f3f25d56a7c627f4bb9d91d19de175273a7a6a81
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 6 18:02:21 2018 +0900

    Rename metadata to archive_metadata, and compress to file_format

commit d7e0709319ab8fe35a2598a3d484eb89b1885934
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Fri Jul 6 17:47:18 2018 +0900

    Validate compression. Clean up schema

commit beb5990e7e3bfbb308245dc97284aaf9700bd982
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 5 19:06:54 2018 +0900

    Make compression params at the first level

commit 1e2e1c0db5412e1aed3bf47562350c20c69dc1a6
Author: Shinya Maeda <shinya@gitlab.com>
Date:   Thu Jul 5 16:31:03 2018 +0900

    Reorganize components
"
0c2dc7273819b29efcb77a347af0116aeb5a9927,gitlabhq/gitlabhq,"Merge branch 'breadcrumbs-extra-btns-remove' into 'master'

Moves the action buttons out of the breadcrumbs

Closes #36459

See merge request !14072"
a1f08a76b5292795ae32a1ccb3cfc919a894daaf,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into new-issue-by-email

* upstream/master: (38 commits)
  Remove useless new route
  Update gitlab-shell version to 3.2.1 in the 8.9->8.10 update guide
  Fix typo in Elixir CI template
  Add a spec for access_for_user_ids
  Fix typo in comment
  Rubocop offenses
  Optimize the invited group link access level check
  Incorporate review comments
  Optimize maximum user access level lookup in loading of notes
  Fix missing schema update for 20160722221922
  Whitelist 'Simplified BSD' license
  Fix a bug where forking a project from a repository storage to another would fail
  Remove inline scripts from import pages.
  Make branches sortable without push permission (!5462)
  Profile requests when a header is passed
  Upgrade database_cleaner from 1.4.1 to 1.5.3.
  Show release notes in tag list
  Fix expand all diffs button in compare view
  Add route for Import::GithubController#new
  Update CHANGELOG
  ...
"
bee837d7b5025a2e170dc0c857b188b4d89c014f,gitlabhq/gitlabhq,"some initial refactoring
"
af6968a15859a309cbb93a0327fc1d4be36041bc,gitlabhq/gitlabhq,"separate visibility_level_allowed logic from model validators
"
5aa4d7bfb4a3ffa7881bdba0a0dcc50cdb245684,gitlabhq/gitlabhq,"Merge branch 'master' into 42643-persist-external-ip-of-ingress-controller-gke

* master: (30 commits)
  Docs: Pages - clean up articles
  Only use features for events
  Put all event metrics exposed to prometheus behind a feature flag
  Add version which LFS lock was introduced
  Remove unecessary validate: true from belongs_to :project
  fix broken specs
  remove common_d3 bundle
  remove graphs_show webpack bundle
  Chart.html.haml refactor
  Remove extraneous tests from Issues API spec
  [GH Import] Create an empty wiki if wiki import failed
  Resolve ""group request membership mail with too long list of ""To:""""
  Add changelog entry
  Fix single digit value clipping
  specify date format
  Increase feature flag cache TTL to one hour
  Convert Gitaly commit parent IDs to array as early as possible
  Clarify changelog for squash encoding fix
  Avoid slow File Lock checks when not used
  Fix squash rebase not working when diff contained encoded data
  ...
"
8f178c4222d917b5f2878beb97642bff0ee5345e,gitlabhq/gitlabhq,"Prevent new / renamed project from using a repository path that already exists on disk

There are some redundancies in the validation steps, and that is to
preserve current error messages behavior

Also few specs have to be changed in order to fix madness in validation
logic.
"
30e3a49e23f8ce0c2a07b13addc45951d7fc6719,gitlabhq/gitlabhq,"optimized the email services
"
d4c05766c7a058cbf62186723216d754eebad92e,gitlabhq/gitlabhq,"Refactor GitLab Metrics docs

[ci skip]
"
8e4a33f2e26fa091c213dffb1163816b159f6204,gitlabhq/gitlabhq,"Merge branch '18849-project-snippets-page-isn-t-really-responsive' into 'master'

Update snippets UI

## What does this MR do?

Updates snippets UI _(mainly mobile view)_ to new UI proposed in #18849.

## Are there points in the code the reviewer needs to double check?

Does anyone know the implementation difference between `app/views/snippets/show.html.haml` and `app/views/projects/snippets/show.html.haml`? I have only been updating the latter as it's the only one I can find implemented. I assume the former is rendered somewhere seeing as there is controllers for it too. But this doesn't seem very DRY from my current perspective.

## Why was this MR needed?

## Screenshots (if relevant)

![Screen_Shot_2016-09-06_at_14.20.10](/uploads/ac124a3b0896872ce851b9f56fbe339c/Screen_Shot_2016-09-06_at_14.20.10.png)

![Screen_Shot_2016-09-06_at_14.20.32](/uploads/8d3c7b1d1a5f562ceb6dc22bde695289/Screen_Shot_2016-09-06_at_14.20.32.png)

![Screen_Shot_2016-09-06_at_14.20.48](/uploads/6b1c31ece6d2400bbfc3c673d9e82d4b/Screen_Shot_2016-09-06_at_14.20.48.png)

## Does this MR meet the acceptance criteria?

- [ ] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- [ ] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [ ] API support added
- Tests
  - [ ] Added for this feature/bug
  - [ ] All builds are passing
- [ ] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [ ] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [ ] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [ ] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?

Closes #18849

See merge request !6210"
e1af42ce4e2a5097374e0e0e6c37a3291abb8835,gitlabhq/gitlabhq,"Merge branch 'master' into 28248-use-page

* master:
  Renders pagination again for pipelines table
  Simplify Pages admin source docs
  Simplify Pages admin Omnibus docs
  Seed abuse reports
  Add active_when helper
"
bd8290d93e4a0669a78c23cecdd1f5d2164d19cf,gitlabhq/gitlabhq,"Rest of Dispatcher Refactor
"
79d90cb6bd99b7af572c65af89597c2e55217aea,gitlabhq/gitlabhq,"Use Projects::UpdateService to archive projects

System hooks were not being triggered when projects were archived or
unarchived. Reuse the Projects::UpdateService to automatically
trigger system hooks and increase code reuse.
"
8f5cf205d221ff43b04e3a0c2ad696914b387ae8,gitlabhq/gitlabhq,"Merge branch '23573-sort-functionality-for-project-member' into 'master'

Add sorting functionality for group/project members

## What does this MR do?

This MR adds sort functionality to group/project members list.

## Are there points in the code the reviewer needs to double check?

No.

## Why was this MR needed?

This MR helps the user to manage and find users of a group/project fast. It also improves UX.

## Screenshots (if relevant)

**Before**
![before-pr-member](/uploads/412bfdfddc63e48a62e2095d664660b5/before-pr-member.png)

**After**
![pr-after](/uploads/ae23a5c7689b46d26a948f22a0ac2360/pr-after.png)

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG.md) entry added
- Tests
  - [x] Added for this feature/bug
  - [x] All builds are passing
- [x] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if it does - rebase it please)
- [ ] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?

Closes #21622 


Closes #23573

See merge request !7032"
5e3c9475a9332d7104a791f7bdfef30e069dd848,gitlabhq/gitlabhq,"Add minor improvements in code related to issue move
"
b64b8377b9aa915a7278d17c61ce88bd20fa4814,gitlabhq/gitlabhq,"Merge branch '44846-improve-web-ide-left-panel-and-modes' into ide-sidebar-merge-request
"
3eef0e18e0d4561c320b4a5d9c17d7ae7aaa3d42,gitlabhq/gitlabhq,"Merge branch 'refactor-build-service' into 'master'

Refactor Ci::Commit and Ci::Build to have all builds for same :sha on single page

This makes Ci::Commit to have only :sha and simplifies routing to have only :sha in path. The :ref and :push_data is now parameter of Ci::Build.

All commit related data (git author, message and .gitlab-ci.yml) is read directly from repository.

All code related for creating builds is moved to CreateBuildsService.

Status deduction is rewritten to make if more efficient and easier to integrate with Commit Status API.

This is partially working, tests are not yet touched.

This slightly changes view of Commit:
![Screen_Shot_2015-10-02_at_15.21.47](https://gitlab.com/gitlab-org/gitlab-ce/uploads/ad3f1ccdcc87659ea437d8db6c5b9f94/Screen_Shot_2015-10-02_at_15.21.47.png)

@dzaporozhets What do you think?


See merge request !1502"
32ad31a16a6af4957193b35010965a6cedc8946c,gitlabhq/gitlabhq,"Merge branch 'master' into fl-38869-linked-tabs

* master: (136 commits)
  Ensure we set SUITE_FLAKY_RSPEC_REPORT_PATH to nil in RspecFlaky::Listener spec
  Gitaly feature flag metadata
  Add delete issue docs
  Adjust tooltips to adhere to 8px grid and make them more readable
  Fix JS lock issue specs
  Improve redirect uri state and fix all remaining tests
  Add 1000+ counters (instead of inifnite) to jobs controller
  Use short path project_clusters_url
  Change Clusters to Cluster in sidebar
  Security fix: redirection in google_api/authorizations_controller
  UX review
  Fix sidebar title Fix fixture
  Fix margins in edit form
  Use utc for time comparision
  Good old dangling comma
  Fix wording in the js messages
  Resetting of active Line + setting it for the async display functions
  Add some empty spaces
  Fix failing spec
  Refactor discussion lock docs
  ...
"
cff951912734a5aeea0ebb3e4ca01f704004a466,gitlabhq/gitlabhq,"Dashboard perfomance improved. Filter for projects page
"
de62d3b48c45030b91113e61bae0f3a2f24797e9,gitlabhq/gitlabhq,"Expand/collapse button -> Change to make it look like a toggle

Changed the expand/collapse button to look different when is
opened/closed
"
e45d6043e8dc8a159e276ec9ef1763f0e98afc39,gitlabhq/gitlabhq,"Merge branch 'js-content-for' into 'master'

Re-implement page-specific JS in a better way.

## What does this MR do?

This rebuilds the way we do page-specific JavaScript assets for a few reasons:

- The current implementation does not work with Subresource Integrity (!4808)
- The current implementation doesn't allow caching of libraries because each page we hook up with this system will have a separate application.js. Meaning that for every page that uses Ace Editor, we'd have to load Ace Editor plus any GitLab-specific scripts in the same file, making local caching of just Ace Editor impossible.
- The current implementation is rather hacky.

## Are there points in the code the reviewer needs to double check?

That Sprockets doesn't choke on this when we use precompiled assets.

## What are the relevant issue numbers?

#14372

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- [x] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [x] API support added
- Tests
  - [x] Added for this feature/bug
  - [x] All builds are passing
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

cc: e9a5c9dc0f6b0f78bc6e9aff28317f93c9ddd607@pavelloz

Thanks to @pavelloz for his example implementation which was very useful.

See merge request !4883"
4bf59f87b321d59de665a0100fed9114f4b747ea,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into fix-forbidden-for-build-api-for-deleted-project

* upstream/master: (333 commits)
  Fix typo
  Always use `fixture_file_upload` helper to upload files in tests.
  Add CHANGELOG
  Move admin application spinach test to rspec
  Move admin deploy keys spinach test to rspec
  Fix rubocop failures
  Store mattermost_url in settings
  Improve Mattermost Session specs
  Ensure the session is destroyed
  Improve session tests
  Setup mattermost session
  Fix query in Projects::ProjectMembersController to fetch members
  Improve test for sort dropdown on members page
  Fix sort dropdown alignment
  Undo changes on members search button stylesheet
  Use factories to create project/group membership on specs
  Remove unused id from shared members sort dropdown
  Fix sort functionality on project/group members to return invited users
  Refactor MembersHelper#filter_group_project_member_path
  Remove unnecessary curly braces from sort dropdown partial
  ...
"
5e2728891ecc375ee51d17aad1c40898cf3e16c1,gitlabhq/gitlabhq,"Cleanup somce css colors

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>
"
7c215dd23dfa942d6b83252403ce326df96ab3ea,gitlabhq/gitlabhq,"Merge branch 'master' into issue-discussions-refactor
"
c81db2442029417cf2836c62093b6772e35d2164,gitlabhq/gitlabhq,"Fix raw_path with the new job path, rename to job

in the tests
"
ed3b23fec9f030fe7868c70265324a732bf34fe9,gitlabhq/gitlabhq,"refactor wait_for_requests, add slow_requests block helper
"
35f8136479ce7d5c9d55a27243457ed6ea7ddbda,gitlabhq/gitlabhq,"Merge branch '29880-refactor-sidebar-hacks' into 'master'

Resolve ""Move sub_nav content above the content-wrapper class""

Closes #29880

See merge request !10163"
93c0729a1dfe197b9c345638b2ca2bb58217ab6b,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into add-ci_variables-environment_scope

* upstream/master: (226 commits)
  Polish sidebar toggle
  Add changelog entry
  Fix optional args for POST :id/variables
  Update CHANGELOG.md for 9.3.1
  Bump bootsnap to 1.1.1
  Add explicit message when no runners on admin
  Fix endpoint not being update correctly
  Remove unused Gitlab::Git::Commit#to_diff argument
  Drop GFM support for the title of Milestone/MergeRequest in template
  Handle Promise rejections in mr_widget_pipeline_spec.js
  Handle missing pipeline in merge request widget
  Store merge request ref_fetched status in the database
  Tag a spec as :nested_groups since it fails on MySQL
  Bump premailer-rails gem to 1.9.7 and its dependencies to prevent network retrieval of assets
  Truncate long job names in environment view; wrap author to next line
  Replaces 'dashboard/merge_requests' spinach with rspec
  Update GITLAB_SHELL_VERSION to 5.0.6
  Fix click not being able to find the current element to use trigger('click') instead
  make accepting mrs more prominent
  Remove last references to job for pipeline charts
  ...
"
d78037c246d14817937abbc4369e30ae12b022bc,gitlabhq/gitlabhq,"Use UserNoteEntity instead of UserEntity for notes
"
28b11963b1613f420aecbee6718d753a6f9733a9,gitlabhq/gitlabhq,"Move builds badge implementation to new badges controller
"
e7c8f8fb43d2d56c3db7cd09787f4c32077afc4a,gitlabhq/gitlabhq,"Merge branch 'master' of https://gitlab.com/gitlab-org/gitlab-ce into profile-bundle-tag-refactor
"
7ca57c59c8b29dfbf714b9921583f3544c76bdb3,gitlabhq/gitlabhq,"Merge branch 'master' into webpack

* master: (63 commits)
  Use `add_$role` helper in snippets specs
  removes old css class from everywhere
  Fixes broken build: Use jquery to get the element position in the page
  Check public snippets for spam
  Keep snippet visibility on error
  Update pipeline and commit URL and text on CI status change
  Support non-ASCII characters in GFM autocomplete
  Active tense test coverage
  Fix filtered search manager spec teaspoon error
  Reduce the number of loops that Cycle Analytics specs use
  Remove unnecessary returns / unset variables from the CoffeeScript -> JS conversion.
  update spec
  Change the reply shortcut to focus the field even without a selection.
  use destroy_all
  Remove settings cog from within admin scroll tabs; keep links centered
  add changelog
  remove old project members from project
  add spec replicating validation error
  Improve styling of the new issue message
  Don't capitalize environment name in show page
  ...
"
29ef25ccbce9c8cb9ba8650e72a1ca419ca81b4d,gitlabhq/gitlabhq,"Merge branch 'master' into list-multiple-clusters

* master: (22 commits)
  static-analysis fix
  refactored the hashed repository name
  removed 'only once' from the docs
  static analysis fix
  added changelog
  ignore hashed repositories when doing rake gitlab:cleanup:dirs
  Update prometheus Gem to fix compilation on centos 6 duo to GCC not recognizing `std=c11` option
  Add a feedback mechanism to `package-qa` manual action
  Update svg external dependency
  Drastically improve project search performance by no longer searching namespace name
  Deduplicate protected ref human_access_levels
  Fix ProtectedBranch access level validations
  Address feedback for AWS Runner autoscale article
  Clarify usage of Runner limit and AWS tags
  Finish rest of the sections
  Finish all sections except docker.machine
  Add runners.cache section
  Add Runner registration info
  Clear up sections
  Add skeleton
  ...
"
f7fefe82e5e6c72f15e2089816460d704c3ac783,gitlabhq/gitlabhq,"Merge branch '23674-simplify-milestone-summary' into 'master'

Resolve ""Simplify milestone summary""

Closes #23674

See merge request !10096"
f4149bcddca9c0e7aac078b3e7c198f5624ea107,gitlabhq/gitlabhq,"Refactor how repository makes commit with pre/post receive hooks
"
aa5d83d4c3511f296295dbb9d4a489f0846efea0,gitlabhq/gitlabhq,"Rename squash before merge vue component
"
60fe975452f6781198188ae985bad7329d1aff05,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into feature/1376-allow-write-access-deploy-keys

* upstream/master: (497 commits)
  Use single quote for strings
  Ue svg from SVGs object
  Dont trigger CI builds [ci skip]
  Revert ""Test only migrations""
  Add custom copy for each empty stage
  Fetch only one revision
  Highlight nav item on hover
  Test only migrations
  Fix migration paths tests
  Scroll CA stage panel on mobile
  Fix CSS declaration
  administer to administrator
  Move SVGs to JS objects for easy reuse
  Improve deploy command message
  No enough data to Not enough data
  Keep the cookie name as before
  Fix variable usage
  Evalute time_ago method instead of printing it
  Removed button styling from restricted visibility levels and added checkboxes with icons
  Do not show overview message if there‚Äôs already CA data
  ...
"
8e55acb063d46c9968f07ab6108a428e7b43d982,gitlabhq/gitlabhq,"Improve members view on mobile
"
bd269eaab993c4f2faa03e0e3a5cef72a82d3f2b,gitlabhq/gitlabhq,"Merge branch 'lazy-diffs' into 'master'

Lazy diffs

Needs https://gitlab.com/gitlab-org/gitlab_git/merge_requests/65

Fixes https://gitlab.com/gitlab-org/gitlab-ce/issues/10785

-   Use Gitlab::Git::DiffCollection which limits the result set size.
    This avoids loading unnecessary data from Git/SQL into memory.
-   Remove left-over Grit timeout handling code.
-   Use Gitlab::Git::Count.lines to count lines in strings.
-   Use more iterators.

See merge request !2705"
80b5ab5df091e7279166184519ed52c2a09d6129,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into show-status-from-branch

* upstream/master: (126 commits)
  Allow to search for user by secondary email address in the admin interface
  Rename :name search parameter to :search_query at /admin/users
  Fix project features default values
  Add a link to the Issue Boards API in main README
  Fix Markdown styling inside reference links
  Fix relative links in Markdown wiki when displayed in ""Project"" tab
  Flexbox webkit prefixes
  Tests update
  Tests update
  Changed where merge request link is
  New todos blank state
  Implement CreateMembers service to make controller thin
  Do not show tooltip for active element (!7105)
  Update CHANGELOG
  Assign local_assigns[:subject] to a variable on the shared label partial
  Use select instead of pluck on Project.group_ids
  Skip authorization check when searching for labels on IssuableFinder
  Use label subject to calculate number of issues/mrs within the group
  Remove unnecessary includes(:priorities) on Projects::LabelsController
  Add 8.13.2 CHANGELOG entries
  ...
"
a084437b5c1b7226ce64e74bab1972bb1dbd49e0,gitlabhq/gitlabhq,"Rename builds to jobs in docs

[ci skip]
"
8844f1f4f7d626293dd62643b1719a73071e08cc,gitlabhq/gitlabhq,"Merge branch 'master' into 5845-extract-ee-environments-files

* master: (79 commits)
  Project Sidebar: Split CI/CD into CI/CD and Operations
  Fix GPM content types for Doorkeeper
  Remove docker pull prefix from registry clipboard feature
  Remove unnecessary section-100 css class from application_row.vue
  Document the 3h timeout for GitLab.com shared Runners
  edit GitLab license info in regards to CC licensing
  Fix bug with long strings in issue boards
  Fix setting Gitlab metrics content types
  Add documentation for bulk editing of issues and merge requests
  Remove authentication for readonly endpoints in issues API
  Remote table-section from div holding cluster error messages
  Improve testing best practices guidelines
  Add a unique and not null constraint on the project_features.project_id column
  fix typos Frontend Guide, development_process.md
  Disable greedy mode when matching filename
  Add index on runner_type for ci_runners
  Improve the squash step in the 'Database Changes' MR template
  Update docs describing `fast_spec_helper` best practices
  Display help text below auto devops domain with nip.io domain name (#45561)
  Enable update_(build|pipeline) for maintainers
  ...
"
c9c0606297883a3a47a5e5e9433e495dc89938c7,gitlabhq/gitlabhq,"Improve version handling on component install tasks

Fixes an issue where, when using branch versions, the component wouldn't
be updated after the first branch checkout. We also save one step, since
checking out the FETCH_HEAD with `-f` already does what `reset --hard`
did.
"
396e7647f836c0cb87d19252fb6d31e91e0dbd6c,gitlabhq/gitlabhq,"Merge branch 'refactor-cluster-show-page-conservative' into 'master'

Refactor cluster show page

Closes #41335

See merge request gitlab-org/gitlab-ce!16089"
f12fdf16e3c1aee5203d0217f0b44b64bb80706c,gitlabhq/gitlabhq,"Merge branch 'improve-search-page' into 'master'

Improve search page

Fixes #1270

* added pagination support
* filter results by type
* when switch between context - search params stays
* redesign comment search results
* search Issues and MR by description too

## Screenshots:

![Screenshot 2014-08-27 09.56.18](https://dev.gitlab.org/uploads/gitlab/gitlabhq/2053220cd4/Screenshot_2014-08-27_09.56.18.png)

![Screenshot 2014-08-27 09.56.00](https://dev.gitlab.org/uploads/gitlab/gitlabhq/726c764da4/Screenshot_2014-08-27_09.56.00.png)

See merge request !1043
"
ac4b954c5fabbfa98fb72d88526a30713a20af5d,gitlabhq/gitlabhq,"Rename authentication activity observer methods
"
c7e323438e97bee1ed9171897f6ff2b3d44e08cb,gitlabhq/gitlabhq,"Merge branch 'ensure-ci-project' into 'master'

Ensure GitLab CI project exists when CI service is activated manually

When I check activeated checkbox in project services for GitLab CI it
cause half-working state when gitlab_ci_project is missing. This patch
fixes it until we have proper behaviour implemented later

This fix also bring us to the point when fork of project is a bit broken and have unnecessary code so I made cleanup. 

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>

cc @ayufan 

See merge request !1491"
9e1d8542533bf09623d790413ff2872921efda7e,gitlabhq/gitlabhq,"Merge branch 'sh-refactor-current-settings' into 'master'

If migrations are pending, make CurrentSettings use existing values and populate missing columns with defaults

See merge request !12253"
75ded1c73e5c1499947a3c951d9af54abfd2fd5c,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into test-pg-mysql

* upstream/master: (238 commits)
  Periodically clean up temporary upload files to recover storage space
  Add a name field to the group edit form
  Remove the User#is_admin? method
  Fix specs
  Enable RSpec/DescribeSymbol; update .rubocop_todo.yml
  Update rubocop-rspec 1.12.0 -> 1.15.0
  Rename displaying_blame to blame
  Actually include WaitForAjax!
  Don't show Copy contents button on Blame page
  alfredo review changes
  Give explicit height to SVG icons for Safari
  Update MR title change icon
  Put back usernames in activity and profile feed
  Wait for AJAX requests to complete so they don't blow up if they are only handled after DatabaseCleaner has already run
  Revert yarn.lock changes
  add CHANGELOG.md entry for !10522
  upgrade webpack-dev-server to fix issues with SockJS causing odd reload behavior in firefox
  upgrade webpack to v2.3.3 to resolve sourcemap issues
  Rever yarn.lock changes
  Revert yarn.lock file changes
  ...
"
235fa77312854b1d47f064a7fcbac68349526c38,gitlabhq/gitlabhq,"Merge branch 'move-last-ee-specific-js-files-to' into 'master'

Move the remaining EE-specific JS files to ee/

See merge request gitlab-org/gitlab-ce!17423"
f4dde5d564c76f8a6172b5b9d5f739b501f49a45,gitlabhq/gitlabhq,"Merge branch '24949-view-2-up-swipe-onion-skin-controls-for-merge-request-diff-containing-an-image' into 'master'

Add image controls to MR diffs

## What does this MR do?

Instantiates `ImageFile` in `Diff` which is instantiated in `MergeRequestTabs`.

## Are there points in the code the reviewer needs to double check?

## Why was this MR needed?

## Screenshots (if relevant)

![Screen_Shot_2016-12-04_at_11.11.21](/uploads/738c68ad3fa682c1c132421abce7165e/Screen_Shot_2016-12-04_at_11.11.21.png)

## Does this MR meet the acceptance criteria?

- [ ] [Changelog entry](https://docs.gitlab.com/ce/development/changelog.html) added
- [ ] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [ ] API support added
- Tests
  - [ ] Added for this feature/bug
  - [ ] All builds are passing
- [ ] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [ ] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [ ] Branch has no merge conflicts with `master` (if it does - rebase it please)
- [ ] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?


Closes #24949

See merge request !7919"
dc31aff3da6a2d576e0bd99249911c9373e56d98,gitlabhq/gitlabhq,"removes unused methods that I forgot
"
5551ccd7201ea6b45a2e2721502ba55e8f525d8f,gitlabhq/gitlabhq,"Code improvements
"
76dac550f33b3a8fec0db36cba15f6dd28d0753a,gitlabhq/gitlabhq,"Refactor environments components into vue files - part 3
"
768721dc5895467130b9a3ada9c740a050f4fdff,gitlabhq/gitlabhq,"Merge branch 'master' into ci/api-triggers

* master: (150 commits)
  fixes margin and padding
  Update mailroom/postfix documentation [ci skip]
  Fix css mess around git clone panel. Align it properly
  Fix missing padding for user/group pages
  Fix parse_gollum_tags matcher
  Update documentation on Banzai::Filter::GollumTagsFilter
  Add tests for the wiki pipeline
  Refactoring Banzai::Filter::GollumTagsFilter
  Make sure the .git is at the end on Gitlab::GithubImport::WikiFormatter
  Remove GollumTagsPipeline
  Refactoring Gitlab::GithubImport::Importer
  Remove unnecessary brackets on WIKI_SLUG_ID route constraints
  Move js function to removing accents to vendor/assets/javascripts
  Update CHANGELOG
  Use the WikiPipeline when rendering the wiki markdown content
  Add Banzai::Filter::GollumTagsFilter for parsing Gollum's tags in HTML
  Relax constraints for wiki slug
  Import GitHub wiki into GitLab
  Move Ci::Build#available_statuses to AVAILABLE_STATUSES constant in CommitStatus
  Revert changes to how the notes are paginated in the API
  ...

Conflicts:
	doc/api/README.md
	lib/api/entities.rb
"
1badaaf476db25974d9eb4119dcd9e7442086319,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into test-pg-mysql

* upstream/master: (43 commits)
  Update CHANGELOG.md for 9.0.1
  Support wider range of monitored environments with Prometheus
  Add changelog entry
  Don't include branch name in Knapsack report file
  Add a new `stub_mattermost_setting` stub helper to properly stub Mattermost settings
  Fixed issue boards sidebar alignment
  Fixed alignment of tooltip on card assignee
  Stops triggering board sidebar when clicking avatar
  Get rid of a third N+1 query problem
  Get rid of second N+1 query problem
  Get rid of a first N+1 query problem
  Add N+1 query problem specs for Issue and MergeRequest ReferenceFilter classes
  Fix Gitlab::EeCompatCheck: use `ee_branch_found` instead of `ee_branch`
  Use `:empty_project` where possible in service specs
  Adds entry about kebab case props in documentation
  Fix sub-nav highlighting for `Environments` and `Jobs` pages
  spread out webpack bundles per-line to reduce conflicts in EE
  Improve UX guide on tooltips
  Correct example value variable name.
  If wget fails, remove the empty file created
  ...
"
3239860f0aea2ff7721f36b4c424e6e8957c51c7,gitlabhq/gitlabhq,"Refactor code for single file download in repository
"
1ad5df49b1925f1865e99c3fd8576a762aea9cae,gitlabhq/gitlabhq,"Moved o_auth/saml/ldap modules under gitlab/auth
"
93f0eb07c993fa5e424b0e803e972c93e6e444c5,gitlabhq/gitlabhq,"Merge branch '44846-improve-web-ide-left-panel-and-modes' into ide-sidebar-commit-box
"
1c55b5717556f77191409f0f35d25abe6a640af0,gitlabhq/gitlabhq,"Merge branch '34509-improves-markdown-rendering-performance-for-commits-list' into 'master'

Resolve ""Projects::CommitsController#show is slow partially due to SQL queries""

Closes #34509

See merge request !13762"
1e6e95e5621f65d82919a24a2c19556a5dcd4e81,gitlabhq/gitlabhq,"Merge branch 'dispatcher-dashboard-activities' into 'master'

Refactor dashboard activities path

See merge request gitlab-org/gitlab-ce!16361"
f46d5f5813f5c0fe9c88435c8bda9af08447ef16,gitlabhq/gitlabhq,"Merge branch 'zj-env-external-url' into 'master'

Add an URL field to Enviroments

## What does this MR do?

Adds a field to the `enviroments` table to expose later in other features. Now I see the task list below, I noticed I forgot some minor things, but Ill adress those after the first review. 

## Are there points in the code the reviewer needs to double check?

The field is a string on the database, thus limited to 255 chars, which seems more than enough.

## What are the relevant issue numbers?

Closes #19527

## Screenshots (if relevant)

![Screen_Shot_2016-07-25_at_15.22.16](/uploads/5c3f39466f8e2114195270006aed20c0/Screen_Shot_2016-07-25_at_15.22.16.png)![Screen_Shot_2016-07-25_at_15.22.53](/uploads/408cf86610137dd4a861d15dcd677a2c/Screen_Shot_2016-07-25_at_15.22.53.png)![Screen_Shot_2016-07-25_at_15.23.10](/uploads/927c506931f4e0338cdbbc58678bd308/Screen_Shot_2016-07-25_at_15.23.10.png)

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- [x] API support added
- Tests
  - [x] Added for this feature/bug
  - [x] All builds are passing
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

See merge request !5469"
8274e0fe3cafdc0a314ac92734f491f6751156bc,gitlabhq/gitlabhq,"Merge branch 'improve-autocomplete-user-performance' into 'master'

Improve AutocompleteController#users.json performance

Closes #36879

See merge request !13754"
a4d84192aec02372ab6ab0f5747fd63aaa19e4ec,gitlabhq/gitlabhq,"Merge branch 'fl-mr-widget' into 'master'

Move mr widget related links into a vue file

See merge request gitlab-org/gitlab-ce!16825"
7157f79caa88689f1b8989d183ef20fbc942bd0f,gitlabhq/gitlabhq,"Refactor js behaviours helpers

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>
"
be18397d82ca16fefed7287c8078a9b41bf37c95,gitlabhq/gitlabhq,"rename ProjectController to ProjectResourceController
"
dda023d66d09b8a3a43a5599bde42ac52eb6fd06,gitlabhq/gitlabhq,"Optimize queries and pagination in `GroupDescendantsFinder`
"
2a5f9709614a33143cb0f47a2602cf161ba4b2cd,gitlabhq/gitlabhq,"[ci skip] Merge branch 'master' into 42568-pipeline-empty-state

* master: (156 commits)
  Make issue boards height calculation clearer and remove magic numbers
  Rename `package-qa` in docs
  Copyedit CI services docs
  Fix dropzone project show
  Prettify notes.
  Fix ""A copy of Gitlab::Metrics::Methods"" have been removed error
  Add Jupyter Notebook docs
  Fixed profile notifications not being editable
  Rename manual job to `package-and-qa`
  Update vendored gitlab-ci.yml template for auto-devops
  Docs: refactor doc general guidelines and style guidelines
  Use Gitaly 0.91.0
  Add version available info to integrity check rake task docs
  Adds the option to override project description on export via API and fixes the project description not being imported
  Extract constant for LfsPointerFile::VERSION_LINE
  Setup Faraday middleware before adapter
  Revert ""Merge branch 'update-httparty' into 'master'""
  Update Code Quality example documentation
  Fix timeouts loading /admin/projects page
  OpenShift install docs: Recommend ""add-scc-to-user"" over ""edit scc""
  ...
"
12acf15c90d25a22e706737dc54f17466fb30320,gitlabhq/gitlabhq,"Project page Update

refactoring buttons, fixes for projects filter on the dashboard and
group page
"
a0ff77246e933db649f3e61bcdf004a33d5e2cf8,gitlabhq/gitlabhq,"Merge branch 'ide-more-error-improvements' into 'master'

Improve error messaging across various IDE actions

See merge request gitlab-org/gitlab-ce!20241"
6fc10fa2564538bb892090759fdb05604b0e5567,gitlabhq/gitlabhq,"Unify forms for discussions and main target.

Allows previews and uploads in all forms.
Also fixes #1730
"
25ff16459c7e5b632278ee11a19a3930f91f44ec,gitlabhq/gitlabhq,"Merge branch 'feature/group-level-labels' into 'master'

Add group level labels

## What does this MR do?

Add group level labels.

## Are there points in the code the reviewer needs to double check?

* `LabelsFinder`
* `Gitlab::Gfm::ReferenceRewriter`
* `Banzai::Filter::LabelReferenceFilter`

## Why was this MR needed?

We'll be adding more feature that allow you to do cross-project management of issues.

## Screenshots (if relevant)

* Group Labels
    ![Group Labels](/uploads/2244c06ad68eae4fb246fb4c81bf8060/2.png)

* Project Labels
    ![Project Labels](/uploads/c5839516d2282b51f7418d9dadbeceb4/1.png)

* Expanded references for group labels when moving issue to another project
    ![Expanded references for group labels when moving issue to another project](/uploads/0c9ab248a8420d4978d59349ae3d42e5/3.png)

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- [ ] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [x] API support added
- Tests
  - [x] Added for this feature/bug
  - [ ] All builds are passing
- [ ] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [ ] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?

#19997

See merge request !6425"
ccc73c455ba0b95b531c69414a6a1f47667f16b5,gitlabhq/gitlabhq,"Rename from base to start because base could mean merge base
"
8b3b6f1096497ad63bbd4cd9bf78fa913ae345b5,gitlabhq/gitlabhq,"Mobile UI improvements for dashboard/nav

Style navbar toggle button

Style navbar toggle manually instead of with button classes

Style navbar

Modify color

Turn off all tooltips for touch devices

Style main nav

Fix scrolling navbar collapse

Style tweaks

Minor tweaks

Style no ssh key message
"
b540b987648ae6e24bbbc01a7773b2e3209a47b0,gitlabhq/gitlabhq,"Merge branch 'no-ivar-in-modules' into 'master'

Add cop to make sure we don't use ivar in a module

See merge request gitlab-org/gitlab-ce!12800"
5203a98411c5b3418f98b44732ce6af3d38d3a19,gitlabhq/gitlabhq,"Merge branch 'refactor-ui-lists' into 'master'

Refactor colors and lists

* Introduce 2 color links: black and blue
* Use black color link for UI elements like lists
* Refactor lists to use .title nested under li
* Make all lists (events, todos, activity, projects etc) use style
* List colorschema is now 333 for links and 555 for text

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>

cc @jschatz1 @skyruler 

See merge request !3307"
cd688a60111853f63413a87ad6632ad57368e886,gitlabhq/gitlabhq,"Replace regex methods by string ones since faster

and more readable.
"
ed6f524c49ad1356e6b7ce35a6fe79632e24b015,gitlabhq/gitlabhq,"Merge branch 'master' into fix/issue-move-rewrite-uploads

* master: (27 commits)
  Fix commit comment alignment
  minor cleanup in system_hook_spec
  Pre-calculate Emoji digests
  Clear .todo listener
  Change window.location to use turbolinks
  Make entire todo row clickable
  Add 8.6.2 CHANGELOG items
  Ensure uploads dir exists when running backup specs
  Move CarrierWave test env config to separate file
  Remove console logs
  Off the event initially
  Collapsed sidebar opens over instead of pushing content.
  Sidebar collapse update issue
  User selection from collapsed sidebar
  Add json response for user avatar in merge request
  Make changed values visible in minimized sidebar.
  Fixed MergeRequestController spec
  We need `sha` reference from `diff_base_commit` to generate the diff
  Use `diff_base_commit` instead of `target_branch` to generate diffs
  Isolate CarrierWave uploads in test enviroment
  ...
"
f673f1e3bdbab25af50da386b29b3661d2536e95,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into artifacts-from-ref-and-build-name

* upstream/master: (109 commits)
  Update CHANGELOG for 8.10.6, 8.9.7, and 8.8.8
  Updated Akismet documentation
  Add hover state to todos (!5361)
  Load issues and merge requests templates from repository
  Backport EE assertions in protected branch related specs.
  Revert ""Merge branch '19957-write-tests-for-adding-comments-for-different-line-types-in-diff' into 'master'""
  Fix a missed `before_action` for `AutocompleteController`.
  Backport `AutocompleteController#load_project` from EE!581.
  Fix API::BranchesSpec.
  Fix failing tests relating to backporting ee!581.
  Revert unrelevant changes
  Fix the protected branches factory.
  Improve EE compatibility with protected branch access levels.
  Move the ""update"" portion of the protected branch view into a partial.
  Don't select an access level if already selected.
  Backport changes from gitlab-org/gitlab-ee!581 to CE.
  Further refactor and syntax fixes.
  Upgrade httpclient gem from 2.7.0.1 to 2.8.2.
  Make rubocop happy
  Make rubocop happy
  ...
"
0f90fd639c9ed387426e0a8ec3a23ac33b37024c,gitlabhq/gitlabhq,"Merge branch 'fix/rename-mwbs-to-merge-when-pipeline-succeeds' into 'master'

Rename MWBS service to Merge When Pipeline Succeeds

## What does this MR do?

This MR renames Merge When Build Succeeds feature to Merge When Pipeline Succeeds, because we recently changed the behavior, see https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/6675.

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG.md) entry added
- [x] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [x] All builds are passing

## What are the relevant issue numbers?

Closes #23354

See merge request !7135"
0a43b25c20010b3eb4c9ab8cef8712df99702fac,gitlabhq/gitlabhq,"Merge branch '45190-create-notes-diff-files' into 'master'

Persist and use truncated note diffs instead requesting Gitaly in a N+1 manner on MR page

Closes #45190

See merge request gitlab-org/gitlab-ce!18991"
6a00cf1b9da3bc8bb1a9a270defd154bf7c93580,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into show-status-from-branch

* upstream/master: (74 commits)
  Clarify the author field for the changelog documentation
  Add and update .gitignore & .gitlab-ci.yml templates for 8.14
  Update ""Installation from source"" guide for 8.14.0
  Add CHANGELOG entries for latest patches
  Merge branch 'fix/import-export-symlink-vulnerability' into 'security'
  Merge branch 'fix/import-projectmember-security' into 'security'
  Use stubs instead of modifying global states
  Add changelog instructions to CHANGELOG.md
  Try not to include anything globally!
  Update help banner for bin/changelog
  Add a `--force` option to bin/changelog
  Update examples in changelog docs to use single quotes around title
  Use the server's base URL without relative URL part when creating links in JIRA
  Update docs and test description
  Update docs and unexpose token
  Make ESLint ignore instrumented files for coverage analysis (!7236)
  Initialize form validation on new group form.
  Check that JavaScript file names match convention (!7238)
  Unchange username_validator.
  Move snake_case to camelCase.
  ...
"
94db8a1c334b9ff5a0c28c89cb87ffa882095261,gitlabhq/gitlabhq,"Usability & design improvements
"
31af0fbaf83c5a4e4dbcaabf0819084b13d07233,gitlabhq/gitlabhq,"improve sourcemap generation
"
123669a55107514798ba531ba3a744b3ec8503ee,gitlabhq/gitlabhq,"Merge branch 'simplify-cross-references' into 'master'

Simplify code around (cross)-references

See merge request !1568"
b9219469f759f387a35bec39c3dc59477793ef1b,gitlabhq/gitlabhq,"Merge branch 'make-namespaces-api-available-to-all-users' into 'master'

Make namespace API available to all users

### What does this MR do?

This MR makes it possible for a user to query namespaces to which he/she has access. Also, it adds documentation for the existing API.

### Why was this MR needed?

Even though the `groups` API exists, it might still be useful to have an endpoint that tells the namespace type (e.g. `user` vs. `group`), especially if a user has access to a number of different projects.

### What are the relevant issue numbers?

Closes https://github.com/gitlabhq/gitlabhq/issues/9328

See merge request !708
"
a7a9db803b983659e8804e07aee89c935473cc41,gitlabhq/gitlabhq,"Merge branch 'dz-allow-nested-group-routing' into 'master'

Add nested groups support to the routing

## What does this MR do?

It allows routing with `/` in namespace name 

## Why was this MR needed?

For nested groups feature(https://gitlab.com/gitlab-org/gitlab-ce/issues/2772). We need URI like `/group/subgroup/project` be routed correctly


## Does this MR meet the acceptance criteria?

- [x] [Changelog entry](https://docs.gitlab.com/ce/development/changelog.html) added
- ~~[Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)~~
- ~~API support added~~
- Tests
  - [x] Added for this feature/bug
  - [x] All builds are passing
- [x] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if it does - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?

https://gitlab.com/gitlab-org/gitlab-ce/issues/2772

See merge request !7459"
4c6c24856cc326e26b6f7ac91ee6eae9fcc722f7,gitlabhq/gitlabhq,"Themes refactored
"
3be6f68a33d163922a78c51928980efc57a3efb5,gitlabhq/gitlabhq,"Make Ci::Runner#online? slightly more performant

This is a small refactor to avoid querying Redis when we know there's
nothing in it.
"
eb41bb6630769ecc127bd9c687179aa91a6de348,gitlabhq/gitlabhq,"Improved commit message body rendering
"
e3f361faedc24dcfc1a5b57f0913ecb2dbb89247,gitlabhq/gitlabhq,"Merge branch 'refactor/group_owners' of /home/git/repositories/gitlab/gitlabhq
"
6024697c100e003ec456b9ad2e9461d73250dbb8,gitlabhq/gitlabhq,"Merge branch 'master' into 'dz-rename-reserved-project-names'

# Conflicts:
#   db/schema.rb"
818607f0115a2c67792fa83e9b39d74c443a8856,gitlabhq/gitlabhq,"Improve the consistency of commit titles, branch names, tag names, issue/MR titles, on their respective project pages
"
6b9c730e91962a6d6343bcb7fc4dc75c99b41bde,gitlabhq/gitlabhq,"More refactoring from last code review. #3945

* Use commit objects instead of IDs when generating diffs
* Use proper references when generating MR's source and target
* Update broken specs
"
377916ed72cf31ee31e463f395993d1ec0dc579b,gitlabhq/gitlabhq,"Merge branch 'master' into refactor-clusters
"
03090a88d80cbc8c4333053081882915beb721da,gitlabhq/gitlabhq,"Replace all navigation menu with nav-links class

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>
"
94923328fdf2904e5a31ad8b9c40adcf15428bb2,gitlabhq/gitlabhq,"Revert Seed based parallelization implementation

Revert ""Add Build seed specs""

This reverts commit 03bc722ea1797a6b2b09f2897215477f5b269632.

Revert ""Add build specs""

This reverts commit c2d49565cf787c592c4f8bd9f24843babd2a6c9a.

Revert ""Refactor parallelization implementation""

This reverts commit 72430483ded51e9a7d01ef70c3dce3dda174fac1.

Revert ""Implement POC for job parallelization""

This reverts commit 44b740f99dfe6a4344c918fd4c94972aa6f9237e.
"
d431e4339269041784986da40a0e0879baaf96a9,gitlabhq/gitlabhq,"Fix few bugs and tests after refactoring ownership logic
"
d87b03796e2f48050530d9f8504191417c0d03a3,gitlabhq/gitlabhq,"Improve top area navigation

- Change button group width on mobile to 100%
- Added scrolling container to activity top area secondary navigation
- Added bottom border to top-area nav-links to separate them from nav-controls
"
e82f629be4b9c91e2611095cd4296e487ed137ef,gitlabhq/gitlabhq,"Move the #update action from Project/Member controllers to the MembershipActions concern

Signed-off-by: R√©my Coutable <4ea0184b9df19e0786dd00b28e6daa4d26baeb3e@rymai.me>
"
0c0b6f438ee5ac12f9975fb1c3b1dc93f6447015,gitlabhq/gitlabhq,"Refactor url_helpers for system note service and remove duplication of logic in spec
"
2b474dc2b226460782413e634792cf83e791173b,gitlabhq/gitlabhq,"refactors finder and correlated code
"
5219a79469689d1b44efdb34772116850d0e2d1d,gitlabhq/gitlabhq,"Merge branch 'chart.html.haml-refactor' into 'master'

Chart.html.haml refactor

See merge request gitlab-org/gitlab-ce!16897"
2f40dac35280f9de9af8c47bdf85c2f0b2d53680,gitlabhq/gitlabhq,"Refactor `have_http_status` into `have_gitlab_http_status` in the specs
"
d5e2f873db06f6505ceac0936bdf50f5e312f70b,gitlabhq/gitlabhq,"Merge branch '35644-refactor-have-http-status-into-have-gitlab-http-status' into 'master'

Refactor `have_http_status` into `have_gitlab_http_status` in the specs

Closes #35644

See merge request gitlab-org/gitlab-ce!14958"
0b72554c1bb47c88361f9fbc6185f49767337368,gitlabhq/gitlabhq,"Finish refactoring grays
"
2b8e9add859f66f32c76948ed7b95f783188695c,gitlabhq/gitlabhq,"[ci skip] Merge branch 'master' into 43770-change-clear-runners-cache-ujs-action-to-an-axios-request

* master: (97 commits)
  Remove common_vue bundle
  Gitlab::Utils - backport `.ensure_array_from_string` from EE
  Fix false positive spec of using digest instead of hexdigest
  Change queue namespace of UpdateHeadPipelineForMergeRequestWorker
  prefer checking explicitly for null
  replace fixture with simple mount point
  add new tests for metrics dashboard changes
  Set sha256 checksum when archiving traces
  Move update_head_pipeline_for_merge_request queue to pipeline_processing namespace
  Docs guidelines: cherry-picking commits from CE to EE
  CI charts now include the current day
  New .dedicated-no-docs-pull-cache-job and .no-db-job definitions
  Add date calls in .gitlab-ci.yml to see how long each step take
  move misplaced entry point
  Arg.id via method pointer
  Backport description composition from EE
  Fix a typo, a conflict and improve documentation
  Remove extra breadcrumb on tags
  Lazy fetch parent commits for a commit
  Fix Gitaly n+1 in NetworkController#show
  ...
"
e805a6470031d942f7de604fdf7acfc7cf4f0b1a,gitlabhq/gitlabhq,"Backport changes from gitlab-org/gitlab-ee!581 to CE.

!581 has a lot of changes that would cause merge conflicts if not
properly backported to CE. This commit/MR serves as a better
foundation for gitlab-org/gitlab-ee!581.

= Changes =

1. Move from `has_one {merge,push}_access_level` to `has_many`, with the
   `length` of the association limited to `1`. This is _effectively_ a
   `has_one` association, but should cause less conflicts with EE, which
   is set to `has_many`. This has a number of related changes in the
   views, specs, and factories.

2. Make `gon` variable loading more consistent (with EE!581) in the
   `ProtectedBranchesController`. Also use `::` to prefix the
   `ProtectedBranches` services, because this is required in EE.

3. Extract a `ProtectedBranchAccess` concern from the two access level
   models. This concern only has a single `humanize` method here, but
   will have more methods in EE.

4. Add `form_errors` to the protected branches creation form. This is
   not strictly required for EE compatibility, but was an oversight
   nonetheless.
"
bafab35e84e88f77d850ea13973d8fddc110225a,gitlabhq/gitlabhq,"Use Prometheus counter instead of redis
"
909c277e56e2773bab8368b6fdd3871a4c9c53f3,gitlabhq/gitlabhq,"Move leftovers from pipelines_settings_controller to settings/ci_cd_controller
"
232d61d59808e6f0c731d135d728800c4b13ae27,gitlabhq/gitlabhq,"Refactor project creation. Added logout link to profile page
"
917b7e0dd95fcf4f37abbab9f5e4ce40446d6e76,gitlabhq/gitlabhq,"Rename .btn-default to .btn-secondary
"
cbd3ce8f41fc5691a1d23aca0ffe3221ab5d26af,gitlabhq/gitlabhq,"moved lfs_blob_ids method into ExtractsPath module
"
1b388c798b01d950ad8692e34938a2a457c6ad0f,gitlabhq/gitlabhq,"Add trigger information for job API

Create new entity called TriggerVariablesEnitity for trigger variables,
to aid reuseablity in the future.

Update JSON schema to include trigger information in the response.

Refactor rspec tests a bit to reduce duplication and for the `context`
to make sense.

closes https://gitlab.com/gitlab-org/gitlab-ce/issues/50989
"
736541f53c4dff3aa0cd763d1ccbf550a4845abc,gitlabhq/gitlabhq,"Merge branch 'refactor/move-mr-widget-sha-mismatch-vue-component' into 'master'

Move ShaMismatch vue component

See merge request gitlab-org/gitlab-ce!17546"
9b27d754a7f4c11a84954d1811da00458a295ed8,gitlabhq/gitlabhq,"Merge branch '35955-searchable-settings-puts-expand-collapse-toggle-in-an-invalid-state' into 'master'

Resolve ""Searchable settings puts expand/collapse toggle in an invalid state.""

Closes #35955, #37520, and #39207

See merge request gitlab-org/gitlab-ce!13363"
b7ee04d4564deaf30cf3c8ead34701ac6d746c05,gitlabhq/gitlabhq,"refactor validations to a Entry::Retry class
"
1e624f3401fd426f8fff7064184061d71d36f5bf,gitlabhq/gitlabhq,"Merge branch 'jej/refactor-omniauth-controller' into 'master'

Refactor OmniauthCallbacksController to remove duplication

Closes #26559

See merge request gitlab-org/gitlab-ce!16694"
07d7d8e65905a39164b63f55eccdcea8f10f5d14,gitlabhq/gitlabhq,Renamed ProtectedTag push_access_levels to create_access_levels
7e335d20248c4dc4788a0eb0b7ef87a0d5cada6c,gitlabhq/gitlabhq,"Merge branch 'email-handler-metrics' into 'master'

Make handler metric params more explicit

See merge request !10854"
19634c259da768700c1d6382c097fed7ef98fdca,gitlabhq/gitlabhq,"Cleanup metrics names and removing unnecessary cache read total
"
a236e4132e92304ee5d77f507fb98b3f98fd03bd,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into test-pg-mysql

* upstream/master: (127 commits)
  Fixed up issue boards JS specs
  Implement new service for creating user
  Add Changelog entry for pipeline retry fix
  Do not retry jobs multiple times when retrying a pipeline
  Update sentry-raven 2.0.2 -> 2.4.0
  Update webmock 1.21.0 -> 1.24.6
  Update spring 1.7.2 -> 2.0.1
  Update simplecov 0.12.0 -> 0.14.1
  Update pry-rails 0.3.4 -> 0.3.5
  Update pry-byebug 3.4.1 -> 3.4.2
  Update flay 2.6.1 -> 2.8.1
  Optimize labels finder query
  Remove Tags filter from Projects Explore dropdown
  Update capybara-screenshot 1.0.11 -> 1.0.14
  Update bullet 5.2.0 -> 5.5.1
  Update brakeman 3.4.1 -> 3.6.1
  Remove web-console gem
  Update better_errors 1.0.1 -> 2.1.1
  Display flash message to unauthenticated user when creating new issue
  Activate group name toggle based on horizontal space
  ...
"
3453bc328465156bf1fdb4c700c7c3b20d0c1967,gitlabhq/gitlabhq,"Merge branch '34468-remove-extra-blank-on-admin-on-mobile' into 'master'

Simplify width for dropdown-menu on mobile

Closes #34468 and #35226

See merge request !12528"
cdc1179facda972671cd80229a1db43b7f20bd52,gitlabhq/gitlabhq,"Improve feature flag check for the performance bar

Signed-off-by: R√©my Coutable <4ea0184b9df19e0786dd00b28e6daa4d26baeb3e@rymai.me>
"
dd3b738d5b3eb70217d7ac7f9fe441498d2e8e7e,gitlabhq/gitlabhq,"Fix failing tests relating to backporting ee!581.

1. `GitPushService` was still using `{merge,push}_access_level_attributes` instead
   of `{merge,push}_access_levels_attributes`.

2. The branches API creates access levels regardless of the state of the
   `developers_can_{push,merge}` parameters. This is in line with the UI,
   where Master access is the default for a new protected branch.

3. Use `after(:build)` to create access levels in the
   `protected_branches` factory, so that `factories_spec` passes. It
   only builds records, so we need to create access levels on `build` as
   well.
"
64c9d7805d80537600251d5f6e1b5a32d4b6d1c0,gitlabhq/gitlabhq,"Merge branch 'refactor-responsive-tables-for-nested-error' into 'master'

Refactor responsive table styles to support nested error block

See merge request gitlab-org/gitlab-ce!15145"
966b34098cbf90b9edab113ba434e0f476b1c022,gitlabhq/gitlabhq,"Improves i18n for Auto Devops callout
"
647f28bd1d92eabe239a7f0f4a65eb100c0cda73,gitlabhq/gitlabhq,"Make it generic
"
07f7a01b4da02533c417fa636f004fedf3c4c661,gitlabhq/gitlabhq,"Improve spec. Add validation for accel_level on runner.
"
ae63f152c3b1135500577e0b7e6528c607ebc1f7,gitlabhq/gitlabhq,"Merge branch 'feature/svg-badge-template' into 'master'

Use badge image template instead of using separate images

## What does this MR do?

Makes it possible to use template for badge instead of having multiple files.

## Are there points in the code the reviewer needs to double check?

We also have a deprecated badge in `controllers/ci/projects_controller.rb`.  We decided to leave it until 9.0, so we still have images in `public/ci/` until 9.0.

## Why was this MR needed?

We are going to implement build coverage badge, and we do not want to store 101 SVG images for each percentage value.

## What are the relevant issue numbers?

#3714

## Screenshots (if relevant)

![new_build_badge](/uploads/f1d4ed5e34278eb01f48994b5b0579f1/new_build_badge.png)

## Does this MR meet the acceptance criteria?

- [ ] ~~[CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added~~ (refactoring)
- [ ] ~~[Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)~~
- [ ] ~~API support added~~
- Tests
  - [x] Added for this feature/bug
  - [x] All builds are passing
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [ ] ~~[Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)~~ (refactoring)

See merge request !5520"
0994bbf9dd79413b3c22381bc2d82fcc41aa13bc,gitlabhq/gitlabhq,"Merge branch 'master' into ide

* master: (86 commits)
  Show all labels
  33874 confidential issue redesign
  Exclude merge_jid on Import/Export attribute configuration
  Resolve ""User dropdown in filtered search does not load avatar on `master`""
  Re-add column locked_at on migration rollback
  Group-level new issue & MR using previously selected project
  [EE Backport] Update log audit event in omniauth_callbacks_controller.rb
  more eagerly bail when the state is prevented
  Move locked_at removal to post-deployment migration
  Add class to other sidebars
  Improve mobile sidebar
  reduce iterations by keeping a count of remaining enablers
  Store & use ConvDev percentages returned by Version app
  Store MergeWorker JID on merge request, and clean up stuck merges
  Backport changes in https://gitlab.com/gitlab-org/gitlab-ee/merge_requests/2551 to CE
  DRY up caching in AbstractReferenceFilter
  Update CHANGELOG
  Add CHANGELOG entry
  Fix html structure Removes test for removed behavior
  Port form back to use form_tag
  ...
"
2436631dea9264045d8694705a95d90c30b4057d,gitlabhq/gitlabhq,"Merge branch 'master' into refactor/ci-config-add-logical-validation

* master: (414 commits)
  Remove suggested colors hover underline
  Fix markdown anchor icon interaction
  Fix expiration date picker after update
  Refactored code to rely less on IDs that could change
  Move CHANGELOG entry for !5858 from 8.11 to 8.12
  Hides merge request section in edit project when disabled
  Fix a typo
  Change minimum Unicorns required to two
  Update memory requirements
  Added `.term-bold` declaration.
  Change the inline code to codeblocks for the new features doc guideline
  Fix GitLab import button
  Rename behaviour to behavior in bug issue template for consistency
  Convert datetime coffeescript spec to ES6
  Align add button on repository view
  Update CHANGELOG with 8.11.4 entries.
  removed null return - renamed 'placeTop' to 'placeProfileAvatarsToTop'
  Refactor Ci::Build#raw_trace
  Move CHANGELOG entry to a proper version
  Change widths of content in MR pipeline tab
  ...

Conflicts:
	lib/gitlab/ci/config/node/jobs.rb
"
4b143e720b3830ad11df04b9bc3c722bf990b11c,gitlabhq/gitlabhq,"Fix and improve stubbed test for WIP commit ref
"
74bc3cc098c407c44e5994878bd179f0b9aa878a,hioa-cs/IncludeOS,"Merge pull request #52 from AndreasAakesson/dev

Made Dashboard modular and cleaned up service code"
9152ac773b880c2c65b806da378819f66d79a3a7,hioa-cs/IncludeOS,"hw: Remove unused function from NIC
"
b11665007225f3d0e6e938e789a9c876cfb71c9b,hioa-cs/IncludeOS,"Merge pull request #1237 from alfred-bratterud/dev

IP4 refactor, Arp improvements and POSIX cleanup"
2411084a6fbf677ecfc64aff268641dcf75eda9d,hioa-cs/IncludeOS,"Merge pull request #934 from alfred-bratterud/dev

FS: refactoring of filesystem, devices etc. in prep. for vfs."
3aec4341a0152c0b54a788ab1bd84557e4365207,hioa-cs/IncludeOS,"Merge pull request #779 from fwsGonzo/dev

timers: Rename timer to timers"
64b8cdc8711c4763858c69f4903f6a5f1a41267a,huiyiqun/check_mk,"Cleaned up lists and dicts in function declarations
"
7b6aab05cd39f809b7d76c08eb579dbbba95fe69,huiyiqun/check_mk,"Renamed different functions / variables:

config.user_id -> config.user.id
config.may -> config.user.may
config.need_permission -> config.user.need_permission
config.load_user_file -> config.user.load_file
"
d79110c8adb14a909f87df9c5732c0b26e04911c,huiyiqun/check_mk,"WATO: restructured snapins
"
8f4890e9f15284215f0690dc89a25cfefe50a0f0,huiyiqun/check_mk,"WATO: restructured user handling of rule editor
"
1c0ed03028c04e899dcd17627ce18b6144b90df9,huiyiqun/check_mk,"Multisite: improve snapins bookmarks and performance
"
a65aba33c347b32855644377a2b4fec4bd5f72c1,huiyiqun/check_mk,"Addition password store cleanups
"
2a2f421d3ed98a232f96342421412f13e199d196,huiyiqun/check_mk,"Windows agent: use std::mutex and std::lock_guard

Replace own WinAPI mutex -based implementation with std::mutex and
std::lock_guard.

Change-Id: Iaa4bbf03e97cf5abbdd5addea13590f9706fb0e2
"
d950ce1183c407d27e33fcb63502e1ea770ac96f,huiyiqun/check_mk,"#2649 Bulk renaming of hosts in WATO

The function for renaming hosts in WATO is now available in a new bulk
mode. This is a new button in each folder, where you can recursively rename
hosts in a generic way. There are several types of renamings that can be done:

LI:case translation into lower or upper case
LI:adding and removing suffixes
LI:adding prefixes
LI:regular expression operations (much like <tt>sed</tt>)
LI:explicit mappings

For each affected site only <b>one</b> restart of the site is needed. This
can speed up renaming operations with lots of hosts drastically when compared
to renaming each host apart.
"
eaa72595d563e55ea95678b1aaa388cf44d29d90,huiyiqun/check_mk,"Started rewrite of icon selector
"
427e75d9be1312b7b12ec575667b1379c2071bdd,huiyiqun/check_mk,"Revert ""Multisite: renamed filled_in with _filled_in""

This breaks view reloading algorithm.
This reverts commit 454886fc4c5b1afa4e4ca4bff243c26c0e6bb9d3.
"
3751d9429fa0a508fac28ddaf1c7049bda4f2cab,huiyiqun/check_mk,"3645 FIX Fixed filesystem growth/shrinkage graph by splitting it up into 2 graphs.
"
38dc4f45766e89449ca604f79659eefa6ba9685b,huiyiqun/check_mk,"#0192 FIX oracle_rman_backups: Not longer try to make a inventory for broken plugin outputs
"
2a283cddc1679bddcfa81a00c7a479fcf61cbfee,huiyiqun/check_mk,"Refactored visual code again

The ""context_type""-concept was not fitting all needs, for example
a single host visual showing multiple services could not be filtered
by details of the services.  We decided to recode this feature again
to slightly simplify the mechanism again and make all features usable
again.

To the users which already used the dasboard designer or created custom
views with the git builds since introducion of the ""context type""
feature will need to perform some migrations by hand.

You will either need to remove all your custom views and dashboards
from var/check_mk/web/*/user_dashboards.mk and
var/check_mk/web/*/user_views.mk. Or you try to migrate the defined
views and dashboards in this file. For this you will need to remove
the attribute ""context_type"" from views and dashboards and replace
it with the new ""single_infos"" attribute.
The ""single_infos"" attribute contains a list of strings which each
references a info type which should be identified by specific attributes
like the hostname to get a single object of that type.
For example replace the definition ""context_type"": ""host"" with
""single_infos"": ['host'] in case of e.g. a view which only shows data
about one single host.
"
8a4e919b50a09238034005bdbd642b3903de6593,huiyiqun/check_mk,"Fix Windows eventlog output with vista_api=yes

The Vista API uses the Win API function EvtFormatMessage that delivers
formatted strings with trailing null characters within the allocated
wstring buffer size. Until the refactoring done in
df323514929740597f21db7c03460cf3ff28515e, this did not cause trouble as
the wstring to UTF8 conversion was done using the Win API and 'old' C
strings. The refactoring introduced C++ standard library conversion that
is done on wstring objects instead of C strings. As a consequence, the
trailing null character was taken into the formatted message, later
causing the socket output to be cut at it. The fix is to trim possible
trailing null characters away from the formatted eventlog message.

Change-Id: I2bf5c8093c79e6e7babcc6abb15b91e6d23756d5
"
0479245f5e8314afd471fb6450529aee3e879b7b,huiyiqun/check_mk,"FIX fileinfo: Avoid duplicate entries in Solaris agent

If due to redundant patterns files would be listed twice, the duplicates
are now correctly suppressed.
"
fcdb389ca4d3d7f36897be1ca2b45479239ff00e,icescrum/iceScrum,"Cleanup menus
"
7c7b449d9dfd3edad4ad93f752ba33204c8bbe1c,icescrum/iceScrum,"Activity improvement
"
52d6527d77d01bbf008622955cb1fc6c11369cab,icescrum/iceScrum,"Refactoring
"
6086f2b65305d08eedf696279dc495f5039152db,icescrum/iceScrum,"T414-0 Rename context -> workspace
"
a2a569e0afd06e4868c555a2e86bd1088f79fa5c,icescrum/iceScrum,"Refactoring
"
ba8877b50f51277a9a813dc5233e43d99f3f1f9e,icescrum/iceScrum,"Improvements on right panel
"
2ae88c61f1adc87a5916f66330a717fba1e45cfc,icescrum/iceScrum,"refactoring design
"
09e23de51dc11fb87924144facbe19af68430856,icescrum/iceScrum,"Cleanup
"
dc841ca8018084d8f08074d0e4a74e35c9933d83,icescrum/iceScrum,"Cleanup
"
dc9f0c55de1e09c520ed4c7c40ba656ffc68386d,icescrum/iceScrum,"improvements
loading app indicator
"
7d9a95972f9f612d076dcf56083f8c07595f1c21,icescrum/iceScrum,"Feed : use list instead of hasFeed, refactoring, i18n, empty feed field after add, hide select feed after delete...
"
35bfe377dff832ba9851dcda91b5ef7f72c1b278,killbill/killbill,"invoice: various cleanups

No functional change.

Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
"
30d29fdf906a5a6f70a3cd2cd5d9ff950d4e1044,killbill/killbill,"Merge branch 'master' of github.com:ning/killbill into killbill-account; finish renaming

Conflicts:
	analytics/src/main/java/com/ning/billing/analytics/BusinessSubscription.java
	analytics/src/main/java/com/ning/billing/analytics/BusinessSubscriptionTransitionRecorder.java
	analytics/src/test/java/com/ning/billing/analytics/MockIEntitlementUserApi.java
	analytics/src/test/java/com/ning/billing/analytics/MockPhase.java
	analytics/src/test/java/com/ning/billing/analytics/TestAnalyticsListener.java
	analytics/src/test/java/com/ning/billing/analytics/TestBusinessSubscription.java
	analytics/src/test/java/com/ning/billing/analytics/TestBusinessSubscriptionTransition.java
	analytics/src/test/java/com/ning/billing/analytics/api/TestAnalyticsService.java
	analytics/src/test/java/com/ning/billing/analytics/dao/TestAnalyticsDao.java
	api/src/main/java/com/ning/billing/account/api/AccountService.java
	api/src/main/java/com/ning/billing/entitlement/api/billing/EntitlementBillingApi.java
	api/src/main/java/com/ning/billing/entitlement/api/user/EntitlementUserApi.java
	api/src/main/java/com/ning/billing/entitlement/api/user/Subscription.java
	api/src/main/java/com/ning/billing/entitlement/api/user/SubscriptionTransition.java
	catalog/src/main/java/com/ning/billing/catalog/DefaultInternationalPrice.java
	catalog/src/main/java/com/ning/billing/catalog/DefaultPlanPhase.java
	catalog/src/test/java/com/ning/billing/catalog/TestInternationalPrice.java
	entitlement/src/main/java/com/ning/billing/entitlement/alignment/PlanAligner.java
	entitlement/src/main/java/com/ning/billing/entitlement/api/billing/DefaultEntitlementBillingApi.java
	entitlement/src/main/java/com/ning/billing/entitlement/api/test/DefaultEntitlementTestApi.java
	entitlement/src/main/java/com/ning/billing/entitlement/api/user/EntitlementUserApi.java
	entitlement/src/main/java/com/ning/billing/entitlement/api/user/Subscription.java
	entitlement/src/main/java/com/ning/billing/entitlement/api/user/SubscriptionBuilder.java
	entitlement/src/main/java/com/ning/billing/entitlement/api/user/SubscriptionTransitionData.java
	entitlement/src/main/java/com/ning/billing/entitlement/engine/core/ApiEventProcessorBase.java
	entitlement/src/main/java/com/ning/billing/entitlement/engine/core/DefaultApiEventProcessor.java
	entitlement/src/main/java/com/ning/billing/entitlement/engine/core/Engine.java
	entitlement/src/main/java/com/ning/billing/entitlement/engine/dao/BundleSqlDao.java
	entitlement/src/main/java/com/ning/billing/entitlement/engine/dao/EntitlementDao.java
	entitlement/src/main/java/com/ning/billing/entitlement/engine/dao/EventSqlDao.java
	entitlement/src/main/java/com/ning/billing/entitlement/engine/dao/IEntitlementDao.java
	entitlement/src/main/java/com/ning/billing/entitlement/engine/dao/SubscriptionSqlDao.java
	entitlement/src/main/java/com/ning/billing/entitlement/events/EventBase.java
	entitlement/src/main/java/com/ning/billing/entitlement/events/EventBaseBuilder.java
	entitlement/src/main/java/com/ning/billing/entitlement/events/phase/PhaseEvent.java
	entitlement/src/main/java/com/ning/billing/entitlement/events/user/ApiEventBase.java
	entitlement/src/test/java/com/ning/billing/entitlement/api/ApiTestListener.java
	entitlement/src/test/java/com/ning/billing/entitlement/api/user/TestUserApiBase.java
	entitlement/src/test/java/com/ning/billing/entitlement/api/user/TestUserApiCreate.java
	entitlement/src/test/java/com/ning/billing/entitlement/api/user/TestUserApiCreateMemory.java
	entitlement/src/test/java/com/ning/billing/entitlement/api/user/TestUserApiCreateSql.java
	entitlement/src/test/java/com/ning/billing/entitlement/engine/core/MockApiEventProcessorMemory.java
	entitlement/src/test/java/com/ning/billing/entitlement/engine/dao/MockEntitlementDaoMemory.java
	invoice/src/main/java/com/ning/billing/invoice/model/DefaultInvoiceGenerator.java
	util/src/main/java/com/ning/billing/util/clock/Clock.java
"
7a766220f0eec366ba52f6383b53a42ecaa607b9,killbill/killbill,"Refactor Subscription class (builder/extract subclasses,...)
"
7f18084b95eb70bf213d9b79b9eb7e9d6677f3de,killbill/killbill,"cache: preparation work for distributed caching

* Fix cacheable objects serialization: this will be required for distributed caching (e.g. Redis)
* Minor refactoring of the cache framework to better isolate the Ehcache specific bits

Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@mouraf.org>
"
0cf07348a758b30be529cf606ce3ccf543e7f31e,killbill/killbill,"Remove unused Jackson views
"
e163be1bdb32cde7fff48c0805e3923434eb3088,killbill/killbill,"Removed 'I' prefix for all catalog interfaces and got rid of a couple of dead interfaces
"
b92087cb2d28790e032cd4bfedf650e26cf60836,libracore/erpnext,"[cleanup] move contact, address to frappe :boom:
"
a56224c03a2c251a79cd237f27c97697c1e93cf1,libracore/erpnext,"Rename Assessment to Assessment Plan
"
e57267f79a077dc440e5a07d130bc7cc4e2cc1bc,libracore/erpnext,"added patch for account and cleanups to breadcrumbs and msgprint
"
63bdd679d0d911d10d01cd8ab7b128992daf08f4,libracore/erpnext,"[POS] Fixes and cleanup
"
8281b36a2620f11c01f761a91685110dbbea0285,libracore/erpnext,"Merge pull request #7380 from KanchanChauhan/emailid-to-emailaddress

Email ID renamed to Email Address"
91ba3463543b5085347118d69723b232847602a2,libracore/erpnext,"profile cleanup start and new auth table for better security
"
e94d18b4cd83250780fdd2e2156d55b19bc1da09,libracore/erpnext,"Rename Time Sheet doctype
"
e7d153624f2f26c3d24e215d5568272d019d6b21,libracore/erpnext,"Table Field Renaming: code replace, JV and budget distribution renamed
"
cfecd2bc1662c6eb7563164d441c49606fd4689f,libracore/erpnext,"[fix] [cleanup] fixes while testing and code cleanup
"
0551f7bb008bdbedec324a724d5df12a28f2759d,libracore/erpnext,"Cleanup and fixes of payment terms feature
"
3f5e59eeeb789d2247a4ca3fddfe1838696c9c6c,libracore/erpnext,"[minor] [cleanup] Landed cost wizard
"
72fbf902d7167cba5b3d150cac4ecd8d8acadb30,libracore/erpnext,"[cleanup] added single price list for shopping cart, removed Applicable Territory
"
9c044eefff353574a2af2bf93e7d84495b4226fe,libracore/erpnext,"[cleanup] re-arrange drop ship field
"
e693f794f59895b1dfe87c28d02f6a0f8478fb31,libracore/erpnext,"[subcontract] refactor, make stock entry from PO
"
df1c66dd04d02401bda92fa7c49079bf90a0b6f0,linuxkit/linuxkit,"moby: Replace references to GCE with GCP

Signed-off-by: Dave Tucker <f7e663289261bf5663f14748dd0817050df83f40@docker.com>
"
a0546bba889525574b066fe17f49f01aea4cfaa9,linuxkit/linuxkit,"miragesdk: use cap-n-proto instead of custom binary protocol for calf/priv API

Signed-off-by: Thomas Gazagnaire <5f50a84c1fa3bcff146405017f36aec1a10a9e38@gazagnaire.org>
"
4802911c8f943c3b9cd916518ad0f2dc96106210,linuxkit/linuxkit,"moby: rewrite diagnostics server in Go

This will make it easier to add a vsock interface as well as a regular
TCP/IP one.

As a side-effect, the server is now able to handle more than one concurrent
request!

Signed-off-by: David Scott <63c9eb0ea83039690fefa11afe17873ba8278a56@docker.com>
"
a902e90a23cc859b6a803c70115163c0a0418df2,linuxkit/linuxkit,"Remove unnecessary namespace I missed

Signed-off-by: Justin Cormack <af64ee19f04db9509cb02b0e470e11e5402ef9b3@docker.com>
"
bbe74b2ff095a6ba75ca0ceda359c7af0bf72b81,liveblog/liveblog,"fix: refactored `highlight` to `lb_highlight`

LBSD-1365
"
aae83f6a21539c0925435587a39208b7bb4c34ea,onedata/oneclient,"Merge pull request #258 in VFS/oneclient from feature/VFS-1450-acl-improvements to develop

# By Konrad Zemek (37) and others
# Via Krzysztof Trzepla (9) and others
* commit '0c029de33d027f23f5ccc0188ebca01a824d3b3b': (92 commits)
  VFS-1450 Do not double read/write when proxy access throw eperm or eaccess.
  VFS-1450 Rethrow exception in the correct way.
  VFS-1450 Do not lock operations on fsSubscriptions in forceClusterProxyCache.
  VFS-1450 Add unit test for forceClusterProxyCache, make forceClusterProxyCache::erase thread safe.
  VFS-1450 Deserialize PermissionChangedEvent in constructor.
  VFS-1450 Apply clang-format.
  Squashed 'helpers/' changes from 4815130..8295e12
  VFS-1450 Add permission changed event test.
  Squashed 'helpers/' changes from 5b34cdc..4815130
  VFS-1450 Add invalidation of forceClusterProxy cache.
  VFS-1450 Add caching of file uuids that require cluster proxy access.
  VFS-1450 Apply clang-format.
  VFS-1450 Adjust tests to new helper interface.
  Squashed 'helpers/' changes from 149b44a..5b34cdc
  VFS-1450 Add fileUuid argument to read and write operations in IStorageHelper.
  Squashed 'helpers/' changes from 5049adf..149b44a
  Merge commit '52fc8c5e28c809bdef6303f3091a319bdf1a61e9' into feature/VFS-1450-acl-improvements
  Squashed 'helpers/' changes from c8f8915..2290935
  VFS-1376 Change subscriptions processing on handshake. Add subscription container wrapper.
  Merge commit '9a0454281fcd3fecd189fc4798a9bea2c7d33b7d' into feature/VFS-1371-clusterproxy-storage-helper
  ...
"
3b1c8e3637e0a49072691c3ea2afc12cad034980,onedata/oneclient,"Merge pull request #357 in VFS/oneclient from feature/VFS-1999-first-quota-implementation_2 to develop

# By Rafa≈Ç S≈Çota
# Via Rafa≈Ç S≈Çota
* commit '5b81936d5eb68cd5103a557a0b166c420a24c4e3':
  VFS-1999 Make disabled spaces update thread-safe
  VFS-1999 Improve code style and quality
  Squashed 'helpers/' changes from dc4301f..7deeb62
  VFS-1999 Improve code style and quality
  VFS-1999 Remove uneeded debug log
  VFS-1999 Initial quota implementation
  Squashed 'helpers/' changes from 0162061..dc4301f
"
dff5d6511bdc22f4fc9b2efd53930d8641face59,onedata/oneclient,"Merge pull request #530 in VFS/oneclient from bugfix/VFS-4291-fix-invalid-protobuf-message-packing to develop

* commit '333b785fb38e4b79d716e343028acaf4fade3893':
  VFS-4291 Added communicator pool size command line option
  VFS-4291 Updated to refactored communication stack
  Squashed 'helpers/' changes from 3edc4d06a..59dfbfbbe
"
ee05551bcb15309969c74ade857135c4c0b09007,onedata/oneclient,"VFS-537 Move config scanning out of Options constructor.
"
eb94ae3ab59991f7176e101d654503d55dd9795c,onedata/oneclient,"Merge pull request #332 in VFS/oneclient from bugfix/VFS-1975-add-fileguid-to-release-message to develop

# By Mateusz Paciorek
# Via Mateusz Paciorek
* commit 'f88376863a533632828eee43b3d8e92d3b14250b':
  VFS-1975 Adding uuid to release message
  Squashed 'helpers/' changes from bea4ce0..e407c75
"
0a4ba89b09bb526de3db14e279feb1dca94af7c8,onedata/oneclient,"Merge pull request #68 in VFS/veilhelpers from feature/VFS-740-Refactoring-warstwy-komunikacyjnej to develop

# By Konrad Zemek
# Via Konrad Zemek
* commit '8d715f77105756ed5b415be4e913fbc5f406b068 [formerly 298e5d9127875f7a5f6588dfe8de06ef39646d89]': (50 commits)
  VFS-740 Always use gmock from the network.
  VFS-740 Add logs throughout the communication module.
  VFS-740 Document all communication classes.
  VFS-740 Document ConnectionPool.
  VFS-740 Document Connection class.
  VFS-740 Document Communicator.
  VFS-740 Document CertificateData and Communicator classes.
  VFS-740 Logging tweaks.
  VFS-740 Allow connection to set exception on connection error.
  VFS-740 Rename testCommon.h to testUtils.h .
  VFS-740 Add factory function for communicator.
  VFS-740 Implement sending retries.
  VFS-740 Automatize setting up handshakeAck.
  VFS-740 Prevent communicator from promising too much.
  VFS-740 Allow for proper handshake and subscription replacement.
  VFS-740 Use nothrow version of connection closing.
  VFS-740 Add handshakes through functions.
  VFS-740 Allow descendants of ConnectionPool to close connections.
  VFS-740 Remove uri from Communicator.
  VFS-740 Add module names.
  ...


Former-commit-id: 1cc42e45664cbdc4bc9e40f4d5ecb2008d477647"
1bdbfd5ba180182e3be03b4b84417a57d840d5c3,onedata/oneclient,"Merge pull request #21 in VFS/veilclient from VFS-212 to master

Squashed commit of the following:

commit 7c6e89d812d4d4322601fd530b9f8b77a9c13231
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Thu Oct 17 21:02:46 2013 +0200

    VFS-212: test update

commit 5907353d2f18bf51c1e417ebcaa6531ad82793c6
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Thu Oct 17 19:36:29 2013 +0200

    VFS-212: helpers update

commit 1a2c82019d0a6311b804076a47c2c0f2a1e8d3c5
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Thu Oct 17 19:02:57 2013 +0200

    VFS-212: tests update

commit 2beda083f15f8aafff28435b294afc959c6f14de
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Wed Oct 16 23:07:14 2013 +0200

    VFS-212: remove c++11 flag for now

commit c509251665fb8cbbee521258284c2fa53ffced7c
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Wed Oct 16 13:31:12 2013 +0200

    VFS-212:

commit 710e09df70ec2f966ec99dc7d2b630a11485aea3
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Wed Oct 16 13:25:39 2013 +0200

    VFS-212: gc-sections on

commit 22b3baf95a98dd3c895a6382487b61d85e68120a
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Wed Oct 16 12:42:19 2013 +0200

    VFS-212:

commit 507b2f92807617ca3ceac31b01cb2387bc023817
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Wed Oct 16 12:21:53 2013 +0200

    VFS-212:

commit c6e8f058c0cc53bb9c223496456453aa60689b5a
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Wed Oct 16 12:20:40 2013 +0200

    VFS-212:

commit a520906299f509ecbc125452e27d5d8afedca2b4
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Wed Oct 16 12:18:35 2013 +0200

    VFS-212: namespace fix

commit f756b049c2d178f234efb5510cdc0e08a51fbcbe
Merge: a6700d9 809bb98
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Wed Oct 16 12:16:32 2013 +0200

    Merge branch 'VFS-212' of ssh://git.plgrid.pl:7999/vfs/veilclient into VFS-212

commit a6700d9b54697663cfb59df13f3f8b210fb20419
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Wed Oct 16 12:16:02 2013 +0200

    VFS-212: revert zlib

commit 809bb9804255e99cfdc679c7663fd42cf6e2aa5f
Author: Rafal Slota <roxeon@gmail.com>
Date:   Wed Oct 16 02:16:52 2013 +0200

    VFS-212: cache file size update

commit f43eda03f29a7b3754552c65b31d7d99a4393c65
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Tue Oct 15 21:41:25 2013 +0200

    VFS-212:

commit 991d65add210dccdee47fb5fec8d61ed2eef87b5
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Tue Oct 15 21:40:01 2013 +0200

    VFS-212: build improvement

commit d544eb8fec6a594a49d602599db47222f8b64c6f
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Tue Oct 15 21:20:05 2013 +0200

    VFS-212: veilhelpers version

commit 6d43b54945eeaa63d57bdbfc88c63c24cd8ea2fe
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Tue Oct 15 21:16:01 2013 +0200

    VFS-212: test build fix

commit df136e5a07a4f98e152844a72aeb30e5fa784d53
Author: Rafa≈Ç S≈Çota <roxeon@RoXeon-Desktop.(none)>
Date:   Tue Oct 15 21:01:56 2013 +0200

    VFS-212: some build improvements

commit 94b31b52dbb6e461d7d6f0ab995fb17df42d6973
Author: Rafal Slota <roxeon@gmail.com>
Date:   Tue Oct 15 09:48:13 2013 +0200

    VFS-212:

commit a1e6950e0d1833876a31a38cf009a3e4c498377d
Author: Rafal Slota <roxeon@gmail.com>
Date:   Tue Oct 15 01:45:15 2013 +0200

    VFS-212: temp changes

commit 15f700bd304d2b8e3324d5e2e8976b236e0c600b
Author: Rafal Slota <roxeon@gmail.com>
Date:   Tue Oct 15 00:07:36 2013 +0200

    VFS-212: static stdc++

commit 07c9fc042e8c71252744d596f818ee125da6c352
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Oct 13 17:05:26 2013 +0200

    vfs-212

commit 0bac7cb2dfd8cf43f626ebd0847a0d640d6d1b0a
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Oct 13 16:27:55 2013 +0200

    VFS-212: test update

commit 3d3220fd59cd9dd8b6cc4a4d428ae1e88a4155f4
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Oct 13 01:36:00 2013 +0200

    VFS-212: small fix

commit c7a400e73f8e628bdaf1d59f66e600a46317f85e
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Oct 13 01:22:40 2013 +0200

    VFS-212: dont fetch attrs for ""."" and ""..""

commit 04c6fb64368a08a44f4f8e85419a6daeb6e1af45
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Oct 13 00:51:33 2013 +0200

    VFS-212: cleanup

commit d154384b7f053d6abd4852cc918795db5f3857f8
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sat Oct 12 22:42:45 2013 +0200

    VFS-212: revert old fuse main

commit a93ed999362b95a0c908ca87dfc917027ea67b35
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sat Oct 12 20:20:26 2013 +0200

    VFS-212: simplified fuse main, better arguments handling, use fs owner's effective UID/GID

commit b96f788dd5b220c7c0e0e86a0e6ca4c07bf1a7f0
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Oct 11 01:16:24 2013 +0200

    VFS-157: bump version

commit 3d36c895997eed0727ddb75f4b1a915235351363
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Oct 11 01:14:24 2013 +0200

    VFS-157: some improvements and bug fixes

commit 71b6886297cd73e4c44012f0cb419f96285218a9
Merge: e52c282 78ce130
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Oct 11 01:14:21 2013 +0200

    Merge remote-tracking branch 'origin/master' into VFS-157

commit e52c2822804408d8adcc6548e71ab21288d67acc
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Oct 10 19:30:43 2013 +0200

    VFS-157: helpers -> master

commit 959cd486dab2c951f0ac22f25549ba0ed485f808
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Oct 10 19:27:36 2013 +0200

    VFS-157: helpers -> VFS-157

commit ce7ae65bd4227b6d5f5a914f01198b518e70d20a
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Oct 10 19:22:15 2013 +0200

    VFS-157: helpers -> master

commit 284729e29f1fcf212b3726917dbc56d1162d4c58
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Oct 10 13:39:14 2013 +0200

    VFS-157: libfuse dep

commit 923232272c899723030f1add9328d9864f471e01
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Oct 10 09:40:43 2013 +0200

    VFS-157: fix typo

commit 2d2cc412aae20f5e9a07a0e7b21853fbde092133
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Oct 6 18:27:55 2013 +0200

    VFS-157: small log improvement

commit fec13b6828a54421fd231035e3c2d638012ecec1
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sat Oct 5 21:37:27 2013 +0200

    VFS-157: helpers update

commit d9019efbed46587acc1c7bbfa5929e0e2be0a5cc
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sat Oct 5 21:36:25 2013 +0200

    VFS-157: passwd caching v2

commit f42bf13faf3bd70dd923375d3026d61e4b76e8dc
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sat Oct 5 02:46:23 2013 +0200

    VFS-157: GSI passwd caching v1

commit da64bed665e3bfa5f1d99f71c92719eb0bff3c7c
Merge: 81a4b56 745b900
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Oct 4 21:49:36 2013 +0200

    Merge remote-tracking branch 'origin/master' into VFS-157

commit 81a4b565925b7917d4e809fcf48c12098f7bc705
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Oct 3 23:15:07 2013 +0200

    VFS-157: better async dir list fix

commit f5ad5c3797b78a7551382a811744a19823bacf41
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Oct 3 20:51:30 2013 +0200

    VFS-157:dir prefetch path fix

commit f29df4aa3c9e795492d0e6c5f933d6977ab7970a
Merge: b681356 81f8844
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Oct 3 20:48:18 2013 +0200

    Merge remote-tracking branch 'origin/master' into VFS-157

commit b681356248d9fca858747d11fdd2d6f7272c4a96
Author: Rafal Slota <roxeon@gmail.com>
Date:   Wed Oct 2 21:31:00 2013 +0200

    VFS-157: veilhelpers version set to master

commit 19ffec92d343370c0e222d1098d2fb04f54fc13a
Author: Rafal Slota <roxeon@gmail.com>
Date:   Wed Oct 2 18:39:10 2013 +0200

    VFS-157: update veilhelpers

commit 3053fad8ddc2f561cd3f40c57e161a180203291e
Author: Rafal Slota <roxeon@gmail.com>
Date:   Wed Oct 2 17:02:22 2013 +0200

    VFS-157: some comments

commit c7efbf41fe70e89761ca6494041de28036836409
Author: Rafal Slota <roxeon@gmail.com>
Date:   Wed Oct 2 16:47:44 2013 +0200

    VFS-157: hide logs and debug info

commit cf4d5a96b4dff89d51f723f8830091ed8924c425
Author: Rafal Slota <roxeon@gmail.com>
Date:   Tue Oct 1 12:59:40 2013 +0200

    Merge fix

commit 97274ac779299c312b7a1e567c63263e12320892
Merge: 861d4f6 3746d6e
Author: Rafal Slota <roxeon@gmail.com>
Date:   Tue Oct 1 12:55:49 2013 +0200

    Merge branch 'master' into VFS-157

    Conflicts:
    	test/include/erlTestCore.h
    	test/include/fslogicProxy_proxy.h

commit 861d4f636aa4548f48edc6f6956ce5e2121286f3
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 16:58:27 2013 +0200

    VFS-162: deps cleanup cd

commit 4c7d380170ad4be64b34ed79862a681f73ef4fa4
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 16:57:33 2013 +0200

    VFS-162: deps cleanup

commit e5de04655308b6ed06cd39d9d8f79f2e5dab924f
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 16:55:56 2013 +0200

    VFS-162: remove QtCreator project files

commit c2c26044af528603df1a9d02d3350cc696baa7a2
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 16:52:43 2013 +0200

    VFS-162: bump veilhelpers version

commit f5db5e111a2080d410d43ca25cc35cc6914b8e31
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 16:50:41 2013 +0200

    VFS-162: protocol update

commit cac7b215f5b5e11192ad52c2e2409b010600bc01
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 01:31:00 2013 +0200

    VFS-157: debug

commit a80ca824f4f2069657ba1d94e8550aba865eb9a3
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 00:38:26 2013 +0200

    VFS-162: globus-proxy-utils dep

commit 1acbeff4360052cc9fd0a3ae6edf9251ee54f5e4
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 00:36:01 2013 +0200

    VFS-162: bump version

commit f19ccf911e5d7ef375dfcc0152ba0dfb988c7f9e
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 00:31:41 2013 +0200

    VFS-162: config update

commit d9b1927148ae3f10e25446ad6fef77e3691caa23
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 00:08:37 2013 +0200

    VFS-162: hostname minor change

commit e162e8b7f948cb552be9be49e79df05e19c0d654
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 23 00:01:53 2013 +0200

    VFS-162: keep-alive on

commit 2ae9ca105e7421b1046ca5bc3c3f37c0e1de5d2d
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Sep 22 22:32:40 2013 +0200

    VFS-162: FUSE main magic

commit e231e4930b8aab80119704379c9d1374b8446999
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Sep 22 20:38:58 2013 +0200

    VFS-162: keep alive off

commit 3d4a43b309fe2d9f4767f2f62301aff7dd0d96bf
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Sep 22 03:16:31 2013 +0200

    VFS-162: tests update

commit 9dbe3a7f275a9c1bfd5e1523b29973fd5062305b
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sat Sep 21 23:28:47 2013 +0200

    VFS-162: tests compile fix, link support improved

commit 4567b699a47a0e44bf157519d9929d1b54566032
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sat Sep 21 13:05:08 2013 +0200

    VFS-162 protocol updat

commit ac46d068b75e4878507d99ebd9b24258ae260504
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sat Sep 21 05:30:49 2013 +0200

    VFS-162: several improvements

commit 674216cbe73ff35208bc0a1d747b56e9978f6d05
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sat Sep 21 01:52:46 2013 +0200

    VFS-162: connection keep alive

commit d45cc9b593178b80ebebb59e7002367aa0f08e44
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 15:17:31 2013 +0200

    VFS-162: return valid error code from tests

commit a565a6883847ba230bb04fdc9e66d3d1687b98a5
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 14:58:05 2013 +0200

    VFS-162: protocol update

commit b59927ac93846c20fc89ef659cf4ab5a287f214c
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 13:30:11 2013 +0200

    VFS-162: attr fix

commit 4732342845d4d3f0fdf09f72c2f7885578c2e8e4
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 12:32:57 2013 +0200

    VFS-162: attrs form SH disabled

commit e7a261f8e3e3c7be2212b2bcea44347826416306
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 12:13:38 2013 +0200

    VFS-154: compile fix

commit bdddb7e420cb1ba38b9930da8c9835ece64e197d
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 12:12:04 2013 +0200

    VFS-154:

commit d3b823e071540fe0efa7fb43f1172e68558e2364
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 11:22:35 2013 +0200

    VFS-154: test debug

commit 9767f4993f2c1575d2b8b285c936048ac85bc10f
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 11:06:42 2013 +0200

    VFS-154: make restart cluster optional

commit e10b28c33f0e70ac60dd4920a18f5832d48738a2
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 10:57:54 2013 +0200

    VFS-154: Config:isSet should not ignore env variables

commit 96af384136f3163e89f3daa5b81859aac6b5e1de
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 09:30:17 2013 +0200

    and moar sleep

commit 28ac946cbecbc8f8861d4fcf370599e9b913c87c
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 09:22:30 2013 +0200

    VFS-154: moar sleep

commit d313e86770513c55cf760e5e2bd4b80f3e5459da
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 08:52:21 2013 +0200

    VFS-154: ...and sleep

commit 63e09e3e2da10828f9a807d32e38c42cfb86a690
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 08:50:16 2013 +0200

    VFS-154: init cluster

commit c6f753e6a6c160980471ed564977b6249f553f61
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 02:21:16 2013 +0200

    VFS-154: typo fix

commit 005c533ffff3614812f8688b98ac4bdeae89bee2
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 02:18:48 2013 +0200

    VFS-154: dont build gtest & glog

commit bf5286a4a904643d48e2a905fd21ce4f956b3167
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 00:46:05 2013 +0200

    VFS-154: fix typo

commit 0931c93feaebf314c4658147e59fde49951225c9
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 00:45:26 2013 +0200

    VFS-154: fix typo

commit 520ef1a5e2ad1b1a1e6cc17988e4ae1d781cae3e
Author: Rafal Slota <roxeon@gmail.com>
Date:   Fri Sep 20 00:09:25 2013 +0200

    VFS-154: fix typo

commit 04c58d7212b21e719cad8cbb6095ded8322e2224
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Sep 19 23:38:44 2013 +0200

    VFS-154: reboot cluster between test suites

commit a79b9e4e51911a41265c594d0759b4cd26b69147
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Sep 19 22:25:20 2013 +0200

    rm veilclient.sublime-workspace

commit 816a5d8505b062b77348890d4524675812cc61c0
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Sep 19 22:24:19 2013 +0200

    VFS-162: merge cd

commit dc474a4940d9e63072d9cbfff8cdfa5aa3b41106
Merge: e7e1596 74ea334
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Sep 19 22:23:06 2013 +0200

    Merge remote-tracking branch 'origin/master' into VFS-157

    Conflicts:
    	CMakeLists.txt
    	include/config.hh
    	test/include/fslogicProxy_proxy.h
    	test/include/storageHelperFactory_fake.h

commit e7e159639335a0202ac0d5d9a0c4e03250157c6a
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Sep 19 15:37:50 2013 +0200

    VFS-162: protocol update

commit 883a213113962695a8242fa565dbb8e4cd56ec6c
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Sep 19 12:57:24 2013 +0200

    VFS-162: code cleanup: namespaces

commit 7a53cef33b623b36e259f432b31333c796f74239
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Sep 19 10:49:05 2013 +0200

    VFS-162: protocol update

commit 3d388021f4dac1dbb94954c185f3c59a7ba323d7
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Sep 19 09:48:31 2013 +0200

    VFS-157: protocol update

commit c80752653f4a0bb32a52166f59e460d450266e69
Author: Rafal Slota <roxeon@gmail.com>
Date:   Thu Sep 19 00:01:35 2013 +0200

    VFS-157: typo fix

commit 9757a1cf9b0149d8bd54d931b44b5679f1263bb2
Author: Rafal Slota <roxeon@gmail.com>
Date:   Wed Sep 18 22:32:12 2013 +0200

    VFS-157: tests update

commit d04fe3e42fdda17ec7fb978ffe4a4b78b60c5190
Author: Rafal Slota <roxeon@gmail.com>
Date:   Wed Sep 18 22:16:39 2013 +0200

    VFS-157: tests update

commit e2afdab37a6c495d0f3aeb9968ad5a73cd49f9b7
Author: Rafal Slota <roxeon@gmail.com>
Date:   Wed Sep 18 16:47:17 2013 +0200

    VFS-157:

commit 8e1e9cc667b97e046f8c6d9dc7d6362b7df64790
Author: Rafal Slota <roxeon@gmail.com>
Date:   Tue Sep 17 22:51:22 2013 +0200

    VFS-157: some code cleanup

commit 42bb1252117e0b1208c42fa3d50ba25bb200eea3
Author: Rafal Slota <roxeon@gmail.com>
Date:   Tue Sep 17 17:35:18 2013 +0200

    VFS-157: ClusterHostname, new connection pooler

commit 261b9583f28ee4bb24f0059450afe1bc529aaa13
Author: Rafal Slota <roxeon@gmail.com>
Date:   Tue Sep 17 00:31:29 2013 +0200

    VFS-157: validate and generate proxy

commit 87cd63736e2e3cc336b05e93e1a7eeea76431652
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 16 22:47:15 2013 +0200

    VFS-157: ignore config errors, log to stderr only if debug mode is on

commit 9d305cdea26af33e1c2e7bd3cc9f6b2ef9f144e8
Author: Rafal Slota <roxeon@gmail.com>
Date:   Sun Sep 15 18:38:26 2013 +0200

    cherry-pick: VFS-154: override config by envs should be on by default if config file is not specified

commit be722a1a20d647a98e084d4738cace09891eba50
Author: Rafal Slota <roxeon@gmail.com>
Date:   Mon Sep 16 15:29:12 2013 +0200

    VFS-157: init commit
"
66647f105583aad90033e952ef13ae46572b18b9,onedata/oneclient,"Merge pull request #48 in VFS/veilclient from VFS-482 to master

# By Micha≈Ç Sitko (46) and others
# Via Micha≈Ç Sitko (8) and others
* commit 'd00d0f8f1f815a22c700452afa29628086691bde': (73 commits)
  typo fix
  Exception handled when calling CommunicationHandler::sendMessage
  build fix
  comment added
  Documentation added and other review notes applied
  duplicated customActionStream.h removed and m_numericProperties and m_stringProperties made private
  Fetching isWriteEnabled from cluster on startup
  Logging version on startup
  unneccessary events from statFromWriteEvent removed
  refactoring
  m_writeEnabled initialized
  Event related headers files moved to events directory
  events.cc removed
  Events related code split into multiple files
  Some of review notes applied
  logs removed
  typo fix
  code for manual tests
  added code for manual tests
  comment added in fslogicProxy.h
  ...
"
f4d20a4589de219acf2eb5819a71bb3401512756,onedata/oneclient,"Merge remote-tracking branch 'remotes/origin/develop' into bugfix/VFS-2018-fix-fuse-s-state-after-file-rename
"
7d109d51b2b42fd0b714c742f9f6aa062ce815da,onedata/oneclient,"Squashed 'helpers/' changes from 52fa658..6280b36

6280b36 Add open function overload that takes flags as integer.
REVERT: 52fa658 Add gflags library to CMakeLists.

git-subtree-dir: helpers
git-subtree-split: 6280b36aa0a8fc1277758cd33077ac0b35df1398
"
1b1791e8c7a6600f30fe8a1da2d4eea86e5373ae,onedata/oneclient,"Squashed 'helpers/' changes from cb14be5..9d30f8f

9d30f8f Merge commit '063878aab71f2eb6efedd9a988b529eb5d1971be' into feature/VFS-1522-file-block-invalidation
063878a Squashed 'clproto/' changes from 9fc119c..8dd55d1
1940bfb Merge pull request #154 in VFS/helpers from feature/VFS-1450-3-acl-improvements to develop
b6bc3e5 Merge branch 'develop' into feature/VFS-1450-3-acl-improvements
5e72838 Merge pull request #158 in VFS/helpers from bugfix/fix-integration-tests to develop
1ac6141 Fix integration tests.
7adc9a9 Merge commit 'e90f30f645452d8b8deb9a3cabe3a2fac30ec037' into develop
e90f30f Squashed 'bamboos/' changes from b146078..f0eb1c2
a6647c8 Merge pull request #155 in VFS/helpers from feature/VFS-1563-add-gdb-flag-to-client-s-ct_run.py to develop
648169c VFS-1450 Remove unused import.
8295e12 VFS-1450 Additional merge changes.
5ff1c94 Squashed 'clproto/' changes from 10384fc..9fc119c
3854ab1 Merge commit '5ff1c9491e62a5ff28a7f6b3369d98a5223dc37b' into feature/VFS-1450-3-acl-improvements
0c0e653 Merge branch 'develop' into feature/VFS-1450-3-acl-improvements
4815130 VFS-1450 Add permission_changed_event.
179c192 VFS-1450 Apply clang-format.
e4d1cfa VFS-1450 Adjust tests to new helper interface.
ae81389 Merge commit 'e39f71962e05fa32629c75fcabc85cca6e15112b' into feature/VFS-1450-acl-improvements
60546a5 VFS-1450 Add fileUuid argument to read and write operations in IStorageHelper.
5b34cdc VFS-1450 Remove storage_id from get_helper_args message
149b44a VFS-1450 Update clproto.
5049adf Merge commit '52fc8c5e28c809bdef6303f3091a319bdf1a61e9' into feature/VFS-1450-acl-improvements
3483f26 VFS-1398 Change ProxyIORequest.space_id to ProxyIORequest.file_uuid.
721b621 VFS-1376 Change subscriptions processing on handshake. Add subscription container wrapper.
f7aeda4 Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/oneclient into feature/VFS-1376-acceptance-tests-for-events
10384fc Merge pull request #99 in VFS/clproto from feature/VFS-1398-cdmi-metadata to develop
0856cbb Merge pull request #97 in VFS/clproto from feature/VFS-1371-clusterproxy-storage-helper to develop
d6915d1 Merge commit '9a0454281fcd3fecd189fc4798a9bea2c7d33b7d' into feature/VFS-1371-clusterproxy-storage-helper
4ebb492 Merge remote-tracking branch 'origin/develop' into feature/VFS-1371-clusterproxy-storage-helper
8afb7e1 VFS-1371 Add SpaceId to GetHelperParams and FileLocation.
2e82140 VFS-1371 Add space_id to ProxyIORequest.
e095c2e Merge remote-tracking branch 'origin/feature/VFS-1371-clusterproxy-storage-helper_merge' into feature/VFS-1371-clusterproxy-storage-helper
aa81caa Merge remote-tracking branch 'origin/develop' into feature/VFS-1371-clusterproxy-storage-helper
dd0b1a6 VFS-1376 Fix spinlock in TypedStream and client hang when unmounting in the foreground.
d1bfbca VFS-1398 Rename xattr.key to xattr.name.
b38ccbb Merge commit '9b37f4c643fd7a22cbb9f98be676c4f93e0a9289' into feature/VFS-1376-acceptance-tests-for-events
6b4c704 VFS-1398 Add xattr messages to possible fuse messages.
4a969b5 Merge branch 'feature/VFS-1407-client-get-subscriptions-on-handshake' into feature/VFS-1398-cdmi-metadata
e640bcc VFS-1398 Add xattr messages.
8ac886e VFS-1407 Getting subscriptions on handshake response.
7689bb6 VFS-1407 Getting subscriptions on handshake response.
a68b34f Merge remote-tracking branch 'origin/develop' into feature/VFS-1371-clusterproxy-storage-helper
5bae72d VFS-1371 Remove SpaceID from ProxyIO arguments.
9689405 Merge commit '3000ff39ed9e607e583d0411fea900332242eb1a' into feature/VFS-1371-clusterproxy-storage-helper
7e5d95b VFS-1371 Add POSIX error codes.
a9da5c4 VFS-1289 Enable NIF library build.
4b9a5e0 VFS-1289 Fix compilation errors of NIF libs.
277fd05 Merge branch 'feature/VFS-1371-clusterproxy-storage-helper_merge' into feature/VFS-1371-clusterproxy-storage-helper
2d49007 VFS-1371 Add protocol messages for ProxyIO helper.
b11995b Merge pull request #96 in VFS/clproto from feature/VFS-1289-event-manager-for-one-client-v.3.0 to develop
a10c6f5 Merge commit '65470c82c12f8a2644f2509a330a6be4387ba4f0' into feature/VFS-1289-event-manager-for-one-client-v.3.0
e78734c VFS-1289 Add message that can carry multiple events of the same type.
00e73be Merge pull request #95 in VFS/clproto from feature/VFS-1289-event-manager-for-one-client-v.3.0 to develop
d2b074b Merge commit '4412137cb52755a79d4ae9f2714c771417c6d620' into feature/VFS-1361-rebase-build-dockers-on-ubuntu-15.10
3b15520 Merge commit '347fc6b6b2e6b4676a8eb00f45805823ff9f6fe9' into feature/VFS-1289-event-manager-for-one-client-v.3.0
f7f9162 VFS-1289 Make stream ID optional in MessageStreamReset message.
863b0ca VFS-1289 Change type of subscription ID from unsigned to signed integer.
409c062 VFS-1289 Add stream ID to stream reset message.
6498a3f VFS-1289 Change name of 'oneof' constructions in event messages.
7456587 VFS-1289 Enable NIF library build.
197b171 VFS-1289 New events multilayer architecture. Unit and integration tests extension.
e547efc VFS-1289 New events multilayer architecture. Unit and integration tests extension.
2bfbbfd Merge commit '53600cf9070a265d32ddb20a03b348efe37cb1c3' into bugfix/VFS-1255-onedata-packages-is-green-on-bamboo
cc6d274 Merge commit 'bfa0f14acf0ebe4ae00ef0d2b8885b3a8c7a89a2' into feature/VFS-1289-event-manager-for-one-client-v.3.0
24bc3db VFS-1289 Fix compilation errors of NIF libs.
a47f9c5 Merge commit '550e45ccae7d729e6325d6f80986a112ac012791' into feature/VFS-1289-event-manager-for-one-client-v.3.0
33b7776 Merge commit '1a1105c65d9a2e13d99effa9d9f331beb6ba93b1' into feature/VFS-1289-event-manager-for-one-client-v.3.0
93e9422 Implement sequencer tests.
1219ed3 Merge commit '34caa7f1ce287843c8f7db7d8fc31e5efacd8140' into feature/VFS-1289-event-manager-for-one-client-v.3.0
6891efe VFS-1289 Implement sequencer behaviour.
fa07703 VFS-1289 Implement sequencer behaviour.
dac645c Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/oneclient into feature/VFS-1289-event-manager-for-one-client-v.3.0
41907e7 VFS-1289 Refactor events framework. Extend unit tests. Fix integration tests.
a52d053 Merge remote-tracking branch 'origin/develop' into feature/VFS-1235-operations-on-files-at-the-client
d606115 Merge pull request #93 in VFS/clproto from feature/VFS-1235-operations-on-files-at-the-client to develop
875ebb3 Merge remote-tracking branch 'origin/develop' into feature/VFS-1235-operations-on-files-at-the-client
1eac08d Merge remote-tracking branch 'origin/develop' into feature/VFS-1235-operations-on-files-at-the-client
5ef8fe0 VFS-1235 Implement PushListener.
164b577 Merge pull request #89 in VFS/clproto from feature/VFS-1223-implementation-of-macaroons-for to develop
4af31f8 VFS-1235 Implement truncate.
20b8d05 VFS-1235 Implement truncate.
993efc6 VFS-1235 Implement truncate.
b075ea2 VFS-1235 Implement read.
e5ffe9b VFS-1235 Introduce cache classes.
dcf3adb VFS-1223 Add a refreshing macaroons capability.
446bef1 VFS-1223 Add a refreshing macaroons capability.
4dbd2e5 Merge pull request #88 in VFS/clproto from feature/VFS-1217-optimization-of-development-environment to develop
4239d9d VFS-1217 Generate clproto erl files only if not yet generated.
f9d0890 Merge remote-tracking branch 'origin/feature/VFS-1223-implementation-of-macaroons-for_merge' into feature/VFS-1223-implementation-of-macaroons-for
d0fdb94 VFS-1217 Clear environment compilation flags.
49787dd Merge remote-tracking branch 'origin/develop' into feature/VFS-1217-optimization-of-development-environment
b3f0853 VFS-1223 Add a refreshing macaroons capability.
3c2855a VFS-1223 Add a refreshing macaroons capability.
968a835 VFS-1235 Change protocol to support file operations.
ba7a1b5 VFS-1235 Change protocol to support file operations.
a6247e7 VFS-1235 Change protocol to support file operations.
1b2d59c Merge commit '597c423bbe1ab1785a5c856c38b277b4bd6793bb' into feature/VFS-1235-operations-on-files-at-the-client
d69169c VFS-1235 Add protocol for operations on regular files.
055870f VFS-1217 Build messages NIF through CMake.
44e3dfe Merge pull request #87 in VFS/clproto from feature/VFS-1147-first-operations-on-directories to develop
3d6a3d3 VFS-1153 Fix handshake logic.
356c182 Merge commit 'f72777be3be31deba0be6061685167b4a6f4a446' into feature/VFS-1153-first-operations-on-directories
8db7fab VFS-1153 Add Rename and ChangeMode messages.
0d9f35f VFS-1153 Add Rename and ChangeMode messages.
e204df8 VFS-1153 Add Rename and ChangeMode messages.
ed31a3b Merge commit '44a307c1b92d6fa3e1c500d977dcc6cc868a2168' into bugfix/VFS-1160-fix-communicator-integration-tests
b974f01 VFS-1160 Fix unit tests.
c8554b2 Merge commit '4dc99eb2ade9497b73ef16b916010bb2f2c403e9' into bugfix/VFS-1160-fix-communicator-integration-tests
6513820 VFS-1160 Pull in erlang-tls.
305846f VFS-1160 Pull in erlang-tls.
77ad057 VFS-1153 Catch constructor exceptions in communication translator.
bba3d3e Merge commit '1ae96d4603f4459624d3020cd03f093404713d0f' into feature/VFS-1153-first-operations-on-directories
6d2e402 VFS-1153 Update clproto.
88e184d Merge branch 'feature/VFS-1161-reduce-dependencies-on-experimental' into feature/VFS-1153-first-operations-on-directories
cadf9b1 Merge commit 'e5c358514c60260f8a0b56fb9ad5eb0a91f13681' into feature/VFS-1161-reduce-dependencies-on-experimental
5a79af5 add ChangeMode and Rename messages
647b045 VFS-1147 fix ambiguous file entry
cb6d5f3 Merge remote-tracking branch 'origin/develop' into feature/VFS-1147-first-operations-on-directories
f06106b Merge pull request #86 in VFS/clproto from feature/VFS-1145-ssl2-integrated-with-oneprovider to develop
354be43 VFS-1147 Fix compilation.
c322a9b Merge commit '054e6f18025dc858eb15cfb2f4f6be67c2af0653' into feature/VFS-1153-first-operations-on-directories
3ab63b5 VFS-1147 Change FileChildren message structure.
68da8d5 Merge branch 'feature/VFS-1147-first-operations-on-directories_merge' of ssh://git.plgrid.pl:7999/vfs/clproto into feature/VFS-1147-first-operations-on-directories
4de7561 VFS-1153 Add new FUSE messages domain objects.
85b8d0e VFS-1153 Add new FUSE messages domain objects.
158ec3b VFS-1147 Add name to FileAttr message.
acdd6ee VFS-1153 Reformat helper files.
94c553f Merge commit '1c75eae2fb93d17e9fb4fcb571a4f8068c7e18ec' into feature/VFS-1153-first-operations-on-directories
2f770d5 VFS-1147 Change FileChildren message format.
61ab98b VFS-1147 Add UUID to file attr.
39844f5 VFS-1147 Using parent UUID for directory creation.
38e2cff Fix oneclient compilation on OS X.
b7b0939 Merge commit '2acc59538ffb708736554de8d56b17a1809a4212' into feature/VFS-1127-performance-test-framework-for-client
c5f4a1a Merge branch 'feature/VFS-1142-client-packages' of ssh://git.plgrid.pl:7999/vfs/oneclient into feature/VFS-1127-performance-test-framework-for-client
30da1e5 VFS-1142 Take glog from system.
fd62e27 VFS-1142 Move cmake scripts to cmake/ dir.
46b5639 VFS-1147 Add communication protocol between FUSE client and the server.
7766498 VFS-1145 Remove oneproxy messages.
534ceb6 VFS-1142 Add missing cmake dependencies.
3439428 Merge commit '1c56de6208ccb274c198f6dca20e28d44e4ff407' into feature/VFS-1127-performance-test-framework-for-client
1d5c47a Merge pull request #85 in VFS/clproto from feature/VFS-1129-packages-deb-and-rpm to develop
90a4037 Merge commit '85ead06cc1a22386d9534f6e53a2a7dbf7492991' into feature/VFS-1127-performance-test-framework-for-client
62ea25f VFS-1129 Revert gpb update, do not delete priv/vsn.git during clean.
007acd1 VFS-1129 Update gpb.
47e5289 Merge commit '908734e934b8fa3c007f4d814a43cb0f19ebe454' into feature/VFS-1127-performance-test-framework-for-client
c1f591b Merge commit '8004ab7405cc878574b030c964ccdccfea301706' into feature/VFS-1127-performance-test-framework-for-client
fefdeb3 Merge commit '61ab02e72781719e793a5a9c410096826f2c4b9f' into feature/VFS-1127-performance-test-framework-for-client
281c0f3 Merge pull request #84 in VFS/clproto from feature/VFS-1115-rpm-packages to develop
010fc07 VFS-1115 Update gpb.
8c38886 Merge commit 'f7841aacbba540583eefa18fea19957abb7f943a' into feature/VFS-1072-fuse-callback-mock
6d2523e Merge pull request #83 in VFS/clproto from feature/VFS-1111-communication-layer-unit-tests to develop
8820963 Merge remote-tracking branch 'origin/develop' into feature/VFS-1111-communication-layer-unit-tests
f2a7fb9 Merge commit 'dcc8030bc023ed90d8f6b2c8bbcc79bf3434e001' into feature/VFS-1072-fuse-callback-mock
4b1749d Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/oneclient into feature/VFS-1072-fuse-callback-mock
8ab110b VFS-1111 Implement Translator layer tests.
e738d82 VFS-1110 Propagate errors on first connection in client.
40def9b Merge commit '450fcbafc1ad1c5bb018cc42defbab15d51d0021' into feature/VFS-1110-propagate-errors-on-first-oc-handshake
ae65b73 VFS-1072 Fix client compilation error.
7408c67 Merge commit '4e36a21b7fe71989db405f708099c45887e02dc1' into feature/VFS-1072-fuse-callback-mock
b0c0a2d VFS-1072 Implement unit tests for aggregators and streams.
9a0e805 Merge commit 'fd560a82a3bf1333bf0a2ffe07daf34076a44504' into feature/VFS-1072-fuse-callback-mock
9e6c458 VFS-1072 Add unit tests for events.
96409d9 VFS-1072 More asynchronous events.
3a59bc2 Merge commit '6eacd168e35c3a0cb8a9e2552ab5e1c23c603217' into feature/VFS-1093-improve-futures-in-communication
c2a64c9 Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/oneclient into feature/VFS-1034-oc-protocol-integration-and-tests
8d93933 VFS-1072 Add handlers for server messages concerning events.
e388ef5 Merge commit '510d229ba5e5274dd810e71ba8333a0f08d13325' into feature/VFS-1072-fuse-callback-mock
bb2e0e2 Merge branch 'feature/VFS-1034-oc-protocol-integration-and-tests' of ssh://git.plgrid.pl:7999/vfs/oneclient into feature/VFS-1072-fuse-callback-mock
ddd9ae9 Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/oneclient into feature/VFS-1072-fuse-callback-mock
920f916 Merge commit '07b7972cb15a1a77b7640da6b1ddca4ad8e5275a' into feature/VFS-1034-oc-protocol-integration-and-tests
a11937a Merge commit 'd93cb991c7f69cb22ce018321013c6753c31ba89' into feature/VFS-1056-several-improvements-to-docker-scripts
42d8e36 Merge commit '6179f299ff599d9d1a2efaf271655ad2afd68b6b' into feature/VFS-1034-oc-protocol-integration-and-tests
d36e0f4 Merge commit '356da66a3e2302de252d1944d416142596098fe1' into feature/VFS-1034-oc-protocol-integration-and-tests
38f669d Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/oneclient into feature/VFS-1034-oc-protocol-integration-and-tests
c20cead Merge commit '3762404702239e1bbf8eb88e1025ec2b1501204e' into merge_helpers
8385906 Merge commit 'bc24de354ab4cf7a845480229c0536010f399b46' into feature/VFS-1016-new-messages-handling-with-streaming
1b807c3 Merge pull request #82 in VFS/clproto from feature/VFS-1098-dialyzer-works-for-gr to develop
d67ad39 VFS-1098 Apply recommended changes.
100ef2f Merge branch 'feature/VFS-1016-new-messages-handling-with-streaming' of ssh://git.plgrid.pl:7999/vfs/oneclient into feature/VFS-1034-oc-protocol-integration-and-tests
433c7cd Merge commit '3a8ce283460a415eeccadd039f781bbf4fab3e64' into feature/VFS-1016-new-messages-handling-with-streaming
36d56fe VFS-1098 Generating Erlang NIFs.
6268a5f VFS-1098 Add oneproxy messages.
d657d2e VFS-1098 Change Protocol Buffers compiler.
0b8a612 VFS-1098 Create rebar application.
1861cd4 Merge pull request #80 in VFS/clproto from feature/VFS-1016-new-messages-handling-with-streaming to develop
905419b Merge commit 'f50b65662ff4840c849b11bf677b22ff3ef25b81' into feature/VFS-1034-oc-protocol-integration-and-tests
e5f6435 VFS-1016 Add new communication stack to oneclient.
90fadd2 Merge commit 'bc4d705dafd1d6eb7cc79a4e14f1ab5ea60b500f' into feature/VFS-1016-new-messages-handling-with-streaming
d4ea68b Merge commit '5369641d1ca1b989f1d9594768f5fefae0566332' into feature/VFS-1016-new-messages-handling-with-streaming
ccd8e29 Merge commit '0af6986221cf900ce030273c87e6c0ef23ca4751' into feature/VFS-1016-new-messages-handling-with-streaming
bb9954e Merge remote-tracking branch 'origin/feature/VFS-1034-oc-protocol-integration' into feature/VFS-1016-new-messages-handling-with-streaming
2c3dbba VFS-1034 Merge develop.
a5acf7c Merge pull request #78 in VFS/clproto from VFS-1035-Add-CMakeLists-to-protocol to develop
690de64 Merge pull request #79 in VFS/clproto from feature/VFS-1037-op-communicator-performance-test to develop
3800374 VFS-1037 naming changes
d1ba29d VFS-1037 doc
292f02e VFS-1037 repair invalid imports
845b3b6 VFS-1037 protocol version messages added as oneof client/server message
c03a2a5 VFS-1037 rename ping_messages to diagnostic_messages,add 'GetProtocolVersion' message
b8393dd VFS-1037 rename ping_messages to diagnostic_messages,add 'GetProtocolVersion' message
9899db7 VFS-1037 doc update
7a1ea8f VFS-1016 Improve protocol.
684ad1b Merge pull request #77 in VFS/clproto from VFS-1035-Add-CMakeLists-to-protocol to feature/VFS-1034-oc-protocol-integration
4d96944 Merge commit 'e3e9754d912132968285e58286f3f5436c48600d' as 'helpers'
be6f29f VFS-1035 Rewrite CMakeLists to allow building helpers as subproject.
f53a2c5 VFS-1034 Fix protocol compilation.
803f77a VFS-1037 Data message
cafd2cc ping messages
c421abf Merge pull request #76 in VFS/clproto from feature/VFS-1009-op-new-protocol-handler to develop
33a8317 beautify protocol v2
4c8508a beautify protocol
8584c8a VFS-997 Add stream message and descriptions + refactoring.
4b27927 change type od message_id from uint64 to bytes
9423229 change handshake message
e63b893 certificate msg extended
5f3db6c remove header
6f2b815 remove HandshakeAcknowledgement
2d2761d typo fix
2e5237e new handshake messages
2ea50b8 VFS-997 Extend protocol messages.
cbe54db Merge branch 'feature/VFS-1009-op-new-protocol-handler' of ssh://git.plgrid.pl:7999/vfs/clproto into feature/VFS-1005-new-protocol-oc-op
2b37656 rename 'oneof' messages
0069f68 add new proto file aggregating server and client messages
cfb51b4 remove HandshakeRequest data
2b72803 VFS-997 Add communication messages.
5ecbf14 Merge pull request #75 in VFS/clproto from feature/VFS-1005-new-protocol-oc-op to develop
fcd7b8b VFS-1005 Apply recommended changes.
b73c8bd VFS-1005 Minor fix for ServerMessage.
27bde46 VFS-1005 Change wrapping message structure.
613c3a8 VFs-1005 Add partial message mechanism.
50e3537 VFS-1005 Fix Erlang compilation errors.
6260815 VFS-1005 New protocol first implementation.
4bf6ec3 Merge pull request #68 in VFS/clproto from feature/VFS-960-access-to-fiemaps to develop
cbdfa01 GetFileBlockMap change uuid to logical name
a61592d GetFileBlockMap and FileBlockMap messages
d5e2d40 Merge pull request #67 in VFS/clproto from feature/VFS-936-async-update-for-file-attributes to develop
c84f2f9 VFS-936 add uuid field to file attributes
6607496 Merge pull request #66 in VFS/clproto from feature/VFS-931-fsmap-integration-in-fuse-client to develop
7d8a5eb Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/clproto into feature/VFS-931-fsmap-integration-in-fuse-client
5d9b1b7 Merge pull request #65 in VFS/clproto from feature/VFS-932-block-info-in-events to develop
924cd10 VFS-931 Update BlocksAvailable message.
85b835c VFS-931 Add UpdateFileBlockMap message.
7e352e4 VFS-932 Change event message.
d30494b VFS-932 Change event message.
6df0c5b VFS-932 Change event message.
b1dbeec VFS-932 Add block properties to event message.
8f9daaa Merge pull request #64 in VFS/clproto from feature/VFS-921-rtransfer-goes-to-fslogic to develop
8cffa61 remove relative truncate
aae8331 add size_relative flag to FileTruncated message
a3614af typo fix
b129904 FileTruncated message
527ce4e FileBlockModified message
97fb9d7 SynchronizeFileBlock message
fbf1457 Merge pull request #59 in VFS/clproto from feature/VFS-888-map-files-to-blocks-for-fuse-and to develop
9e59d72 Merge remote-tracking branch 'origin/develop' into feature/VFS-888-map-files-to-blocks-for-fuse-and
68c7f87 VFS-888 Set 'blocks' as a repeated field.
eec028d Merge pull request #58 in VFS/veilprotocol from feature/VFS-858-new-cdmi-features-user-requirements to develop
4ecf392 VFS-888 Change identification fields of RequestFileBlock.
606de6b VFS-888 Add block-related messages and message fields.
96e3bfa Merge branch 'develop' into feature/VFS-858-new-cdmi-features-user-requirements
320d88c add acl flag
a8bc820 Merge pull request #57 in VFS/veilprotocol from feature/VFS-837-veil-to-onedata to develop
98fd52a VFS-837 Final renaming.
1351802 Merge pull request #56 in VFS/veilprotocol from feature/VFS-837-veil-to-onedata to develop
8fec391 VFS-837 Make onedata start with an uppercase letter.
d77f98f VFS-837 Refactor readme.
d7ea703 VFS-837 Rename namespace.
0a96244 VFS-837 Change from 'veil' to 'onedata'.
6751fe1 children count messages
21b6448 new acl messages
b7ad0a7 Merge pull request #54 in VFS/veilprotocol from feature/VFS-830-dokladne-przejrzenie-dokumentacji to develop
947a614 Merge branch 'develop' into feature/VFS-830-dokladne-przejrzenie-dokumentacji
cd83847 turn back develop changes
6ffbe83 Merge pull request #53 in VFS/veilprotocol from feature/VFS-828-zmiana-sposobu-uwierzytelnienia-tokenem to develop
2c2fe29 Merge pull request #50 in VFS/veilprotocol from feature/VFS-829-move-between-providers to develop
c1958c5 Merge pull request #51 in VFS/veilprotocol from master to develop
bbbbbaa VFS-828 Remove identity field in HandshakeRequest.
d6c8b3a VFS-829: fix typo
52aeab3 revert newest develop changes
b8a16f8 extended Attrs api
f1a5e5c Merge pull request #49 in VFS/veilprotocol from feature/VFS-829-move-between-providers to develop
278cec8 Merge pull request #48 in VFS/veilprotocol from feature/VFS-820-zastapic-obecne-checki-uprawnien to develop
2c6199a Merge pull request #47 in VFS/veilprotocol from feature/VFS-781-uwierzytelnienie-klienta-przy-pomocy to develop
ab8da14 VFS-829: fix compile
b0a4b59 VFS-829: fix compile
d1bc237 VFS-829: add DirEntry to protocol
57ef0e7 VFS-829: add DirEntry to protocol
61faf51 VFS-820, change message name
a8472c1 Merge branch 'feature/VFS-781-uwierzytelnienie-klienta-przy-pomocy' of ssh://git.plgrid.pl:7999/vfs/veilprotocol into feature/VFS-820-zastapic-obecne-checki-uprawnien
9cb05c4 VFS-820, add CheckPerms message
bdf9d21 VFS-781 Fix protocol.
2202298 Merge remote-tracking branch 'origin/develop' into feature/VFS-781-uwierzytelnienie-klienta-przy-pomocy
e0922ca Merge pull request #46 in VFS/veilprotocol from feature/VFS-784-obsuga-cdmi_capabilities to develop
4cd3381 VFS-781 Add an identity field for handshake request.
9440a98 GetFileUuid and FileUuid messages added
8dcf62c Merge pull request #45 in VFS/veilprotocol from feature/VFS-754-dostep-zdalny-do-innego-providera to develop
8590cc1 VFS-754: add cluster proxy getattr
47b8904 VFS-754: add cluster proxy getattr
0de5be7 Merge remote-tracking branch 'origin/develop' into feature/VFS-754-dostep-zdalny-do-innego-providera
cfbaf77 VFS-754: add message decoder to answer message
ef27ce5 Merge pull request #40 in VFS/veilprotocol from release-1.0 to develop
a03f86a Merge pull request #39 in VFS/veilprotocol from release-1.0 to master
939895c Merge pull request #38 in VFS/veilprotocol from bugfix/VFS-751-release-1.5-wypuszczony to release-1.0
e4dc26e Release notes updatd
8670fb4 Merge pull request #37 in VFS/veilprotocol from bugfix/VFS-751-release-1.5-wypuszczony to release-1.0
b77373b Release notes added
f1355db Merge pull request #36 in VFS/veilprotocol from feature/VFS-749-clusterproxy-uzywany-gdy-brak-accessu to develop
4dc1ed0 VFS-754: add global user id to cluster message
84322ed VFS-754: add ProviderMsg
f5394d9 VFS-754: add access tokent to cluster message
4d44532 Merge branch 'feature/VFS-749-clusterproxy-uzywany-gdy-brak-accessu' into feature/VFS-754-dostep-zdalny-do-innego-providera
944861f VFS-754: make space_id optional
0f61799 VFS-749: add ClusterProxy context info
d17ccb8 VFS-754: add space_id to RFM
76c5dff Merge pull request #35 in VFS/veilprotocol from feature/gui_release_to_develop to develop
b41dd32 Merge branch 'release-1.0' into feature/gui_release_to_develop
41d9a76 Merge pull request #34 in VFS/veilprotocol from feature/VFS-731-wysyanie-poziomu-uprawnien-pliku to release-1.0
184b766 add mode to CreateFile message
25188df Merge pull request #33 in VFS/veilprotocol from release-1.0 to develop
37b1a8d Merge pull request #32 in VFS/veilprotocol from bugfix/VFS-592-dostep-do-pliku-niezgodny-z-ustawionym to release-1.0
68962ce default open_mode msg changed from ""none"" to """"
fe42fe9 Merge branch 'release-1.0' into bugfix/VFS-592-dostep-do-pliku-niezgodny-z-ustawionym
74f49cb Merge pull request #31 in VFS/veilprotocol from bugfix/VFS-608-niemozliwosc-zarejestrowania-DN to release-1.0
681cdfe open_mode optional parameter added to GetFileLocation msg
e5424af VFS-608, fix naming
194e6d0 VFS-608, add fields to proto to handle cert verification
d1395fb VFS-608, add error description field to Answer record
a459825 Merge pull request #30 in VFS/veilprotocol from VFS-555 to develop
5677ce6 [VFS-555] typo fix
0862a00 [VFS-555] EventStreamConfig extended
e420048 Merge pull request #27 in VFS/veilprotocol from VFS-489 to master
ee7b249 VFS-489 Message fix.
2263e19 VFS-489 Make some message fields required.
af6e6b8 VFS-489 Create more specific storage test messages.
e86b601 VFS-489 Direct IO storage message refactored.
ceaedf2 VFS-489 Direct IO storage message added.
ec8208e VFS-489 Storage test messages refactored.
fdf35b6 VFS-489 Storage test messages added.
4db85aa Merge pull request #26 in VFS/veilprotocol from VFS-482 to master
b07e7bd Merge branch 'VFS-482' of ssh://git.plgrid.pl:7999/vfs/veilprotocol into VFS-482
abc677e Generic event message added
f517338 Merge pull request #24 in VFS/veilprotocol from VFS-443-centralny-logger-dla-clientow to master
81fd5c1 Merge pull request #25 in VFS/veilprotocol from VFS-441 to master
680c66c [VFS-441] comment added
c71b9ea VFS-443 Add logging protocol.
ecae432 [VFS-441] EventTransformer added
cf0ed2e Merge pull request #23 in VFS/veilprotocol from VFS-441 to master
26e569e [VFS-441] pushmessage message removed
578c1e9 [VFS-441] Comments for EventStreamConfig
dd4be71 [VFS-441] eventaggregatorconfig message extended
37c9a41 [VFS-441] client fetch event producer configuration on startup
06caeb6 [VFS-441] protocol buffer messages for events improved
ce371ef [VFS-413] messages for events subscription added
9d289fd Merge pull request #22 in VFS/veilprotocol from VFS-442 to master
e0b9ed9 VFS-442 Add answer field to StatFSInfo message.
b001a78 Merge pull request #21 in VFS/veilprotocol from VFS-442 to master
aef57ff VFS-442 Merge veilprotocol messages.
7e36203 VFS-442 GetFilesSize and FilesSizeInfo messages added.
0aa0848 VFS-442 GetQuota and QuotaInfo messages added.
1e45be5 Merge pull request #20 in VFS/veilprotocol from VFS-435-problem-z-wyswietlaniem-duzych-plikow to master
32aaf5e another changes in size type from int32 to int64
45b786e size type changed from int32 to int64
87ac2f6 Merge pull request #19 in VFS/veilprotocol from VFS-240 to master
995da9b [VFS-240] Message CreateFileAck changed
66c68e3 [VFS-240] CreateFileAck message added
8548237 Merge pull request #18 in VFS/veilprotocol from VFS-356 to master
8a2eb34 ChangePermsAtStorage message added
ec4d3e4 Merge pull request #17 in VFS/veilprotocol from VFS-211 to master
1402c88 VFS-211 Links field to files attribute added.
e808f04 Merge pull request #16 in VFS/veilprotocol from VFS-264 to master
58d5334 Merge pull request #15 in VFS/veilprotocol from VFS-252 to master
d11ae1d Merge pull request #13 in VFS/veilprotocol from VFS-260 to master
2645d9b Merge pull request #12 in VFS/veilprotocol from VFS-167 to master
34bba96 Merge pull request #11 in VFS/veilprotocol from VFS-162 to master
5f631d2 Merge pull request #10 in VFS/veilprotocol from VFS-159 to master
b77991a Merge pull request #9 in VFS/veilprotocol from VFS-162 to master
b1578ab Merge pull request #8 in VFS/veilprotocol from VFS-156 to master
41bc0be Merge pull request #7 in VFS/veilprotocol from VFS-127 to master
4781952 Merge pull request #6 in VFS/veilprotocol from VFS-113 to master
11d5d1a Merge pull request #5 in VFS/veilprotocol from VFS-101 to master
72bf94c fuse messages updated
1956dbb Merge pull request #4 from VFS-80,85 to master
9b65f25 FileChildren fix
1ff7d28 Merge pull request #3 from VFS-80 to master
cb54b30 decoder fields corrected
4048cfb Merge branch 'VFS-80' of ssh://git.plgrid.pl:7999/VFS/veilprotocol into VFS-80
b9a67a5 Added decoder_name and messages for directory creation and location validity info
9f660cf Added decoder_name and messages for directory creation and location validity info
1b7b40b Merge pull request #1 from VFS-80 to master
295be28 fuse messages
e85f681 fuse messages
6dcc3aa Initial Commit

git-subtree-dir: helpers
git-subtree-split: 9d30f8fdfbe7c6b702cdbd49bd18afc748264fa5
"
bb12ffe39cd8d1e2f415e07b3584e397bdd7b533,onedata/oneclient,"Merge pull request #230 in VFS/oneclient from feature/VFS-1235-operations-on-files-at-the-client to develop

# By Konrad Zemek (29) and Rafal Slota (1)
# Via Konrad Zemek
* commit 'c142f7f243a727e0fede26d2a3874da9a45d40f2': (30 commits)
  VFS-1235 Change `{}` to `std::make_tuple` to please g++.
  VFS-1235 Refactor finding location for write op.
  VFS-1235 Rename PushListener::on* to onPush*.
  VFS-1235 Add endline to serialized token.
  VFS-1235 Normalize mode in chmod.
  VFS-1235 Remove mknod helper integration test.
  VFS-1235 Do not call helper's mknod on mknod.
  VFS-1235 Create communicator later in main().
  VFS-1235 Create FsLogic after daemonization & connection.
  VFS-1235 Document PushListener class.
  VFS-1235 Document HelperWrapper class.
  VFS-1235 Document GetNewFileLocation.
  VFS-1235 Document FileBlock class.
  VFS-1235 Document caches.
  VFS-1235 Document MetadataCache class.
  VFS-1235 `find` a block in read instead of finding a `lower_bound`.
  VFS-1235 Add logs to push updates.
  VFS-1235 Implement PushListener.
  VFS-1235 Add a local fileblock after writing behind the file.
  VFS-1235 fix some minor bugs
  ...
"
79731619e005722b41fe118ec17b381d88db9f47,onedata/oneclient,"VFS-669 Get rid of `new` in production code.
"
18c84ec4b9d381ac16b80d5abb012cc478d1f677,onedata/oneclient,"Merge pull request #569 in VFS/oneclient from release/18.02.0-rc3 to develop

* commit 'd320cc02dc8eee8cf004ac4d61d4278cddcca8f0':
  VFS-4451 Updated trigger threshold options descriptions
  VFS-4451 Moved full file prefetch to prefetchSync
  VFS-4451 Added new options tests
  VFS-4452 Fixed fuse file handle id race
  VFS-4451 Added replication threshold triggers
"
677d94b410efb0a60955717973921b026e539b65,onedata/oneclient,"Merge pull request #297 in VFS/oneclient from develop to master

# By Krzysztof Trzepla (24) and others
# Via Krzysztof Trzepla (18) and others
* commit '89b4936346f20093b94b2e12c3a853e3128a0b4f': (48 commits)
  Releasing new version 3.0.0-alpha3
  Import one::testing namespace in TokenHandler unit tests.
  VFS-1669 Allow concurrent read/write operations on a storage/file pair.
  VFS-1531 Take a cache function in CacheExpirationHelper's methods.
  VFS-1531 Fix deadlock on metadata cache purge.
  VFS-1531 Use CacheExpirationHelper in MetadataCache.
  VFS-1659 Run oneclient release directly from Dockerfile.
  VFS-1701 Read token from environment variable.
  VFS-1708 Configure glog.
  VFS-1706 Release accessor to access type
  VFS-1652 Make version script compatible with python3
  VFS-1652 Print to stdout instead of creating file in version script.
  VFS-1652 Simplified version script
  VFS-1662 Script for resolving version from git
  VFS-1662 Save version data to file for package
  VFS-1651 Replace operation_not_supported with function_not_supported
  Squashed 'helpers/' changes from 6280b36..4439b71
  VFS-1706 Set default access type to PROXY
  VFS-1706 Filter mount points
  VFS-1531 Add CacheExpirationHelper class.
  ...
"
bc24de354ab4cf7a845480229c0536010f399b46,onedata/oneclient,"Squashed 'helpers/' changes from 26b8f3a..097b43e

097b43e Merge commit '34c0e5454b41f30dd0bb9c30cdddfc392ab937df' into feature/VFS-1056-several-improvements-to-docker-scripts
34c0e54 Squashed 'appmock/' changes from 1e84ca2..2c2aca8
e1e1029 VFS-1056 Remove sleep after starting appmock.
102ac63 Merge commit '4b03041bb08af8c1c57b9c0808d08eb8c13571b1' into feature/VFS-1056-several-improvements-to-docker-scripts
4b03041 Squashed 'bamboos/' changes from 9fd9b49..86bffb7
7b06c2e Merge pull request #114 in VFS/helpers from feature/VFS-1073-waiting-for-skydock-started to develop
80bf7c1 Squashed 'bamboos/' changes from 98d972d..9fd9b49
82d30dc Merge commit '80bf7c1aadda6e3c636988cd0c4708d2a2288ef5' into feature/VFS-1073-waiting-for-skydock-started
5113dab Merge pull request #113 in VFS/helpers from feature/VFS-1035-client-integration-test to develop
REVERT: 26b8f3a VFS-1016 Fix tests.
REVERT: d40492c VFS-1016 Add new communication stack to oneclient.
REVERT: e469a60 VFS-1016 Add accessor to returned SessionId.
REVERT: 5bd8eb3 Merge remote-tracking branch 'origin/feature/VFS-1034-oc-protocol-integration-and-tests' into feature/VFS-1016-new-messages-handling-with-streaming
REVERT: 0129bbd VFS-1034 Set token as optional in handshake request message.
REVERT: 3e6679c VFS-1034 Add constructor to handshake request message.
REVERT: 235a2cc VFS-1016 Translate handshake message and response.
REVERT: 6e48fd3 VFS-1034 Add ping and pong messages.
REVERT: 6dfadb6 VFS-1034 Add handshake response message.
REVERT: 1da82b8 VFS-1034 Add handshake request message.
REVERT: 4df718e VFS-1016 Add unsuccesful handshake integration test.
REVERT: 3054d87 Merge commit '5369641d1ca1b989f1d9594768f5fefae0566332' into feature/VFS-1016-new-messages-handling-with-streaming
REVERT: 5369641 Squashed 'clproto/' changes from 684ad1b..a5acf7c
REVERT: 3b8856e Merge remote-tracking branch 'origin/feature/VFS-1016-new-messages-handling-with-streaming_subtree' into feature/VFS-1016-new-messages-handling-with-streaming
REVERT: 904d5b3 VFS-1016 Implement first tests for the whole communication stack.
REVERT: 098961b Merge remote-tracking branch 'origin/feature/VFS-1034-oc-protocol-integration' into feature/VFS-1016-new-messages-handling-with-streaming
REVERT: f655b97 VFS-1016 Implement full communication layer with new protocol.
REVERT: c658867 VFS-1034 Merge develop.
REVERT: 784b407 VFS-1016 Improve protocol.
REVERT: 22112bb VFS-1016 Rewrite CommunicationHandler for new protocol.
REVERT: 79fb06f VFS-1034 Remove protocol dependencies.
REVERT: 132c29d Squashed 'clproto/' changes from c84f2f9..684ad1b
REVERT: b5c8fca Merge commit '132c29d59a3950f208a67d3e1b0b84324551e53a' into feature/VFS-1034-oc-protocol-integration
REVERT: 30e9ca2 WIP.
REVERT: 73d0296 VFS-1016 Rename SSLConnection and SSLConnectionPool.
REVERT: 6890414 VFS-1016 Remove websocket connection code.
REVERT: 1f0fa16 Merge commit '8c6cd079f5010cdaed8b85720f9c5e7dc25409df' into feature/VFS-1016-new-messages-handling-with-streaming
REVERT: 8c6cd07 Squashed 'clproto/' changes from c84f2f9..684ad1b

git-subtree-dir: helpers
git-subtree-split: 097b43e49d9f2cc80d7e29c0fa55c146ffa09878
"
4ac6496b50818a745831d80d043606852b77a84c,onedata/oneclient,"VFS-489 Refactoring.
"
d320cc02dc8eee8cf004ac4d61d4278cddcca8f0,onedata/oneclient,"Merge pull request #568 in VFS/oneclient from feature/VFS-4451-add-replication-trigger-threshold to release/18.02.0-rc3

* commit '0850a5a40a079be6e319d2cb8ca8c5e6f36ff77d':
  VFS-4451 Updated trigger threshold options descriptions
  VFS-4451 Moved full file prefetch to prefetchSync
  VFS-4451 Added new options tests
  VFS-4452 Fixed fuse file handle id race
  VFS-4451 Added replication threshold triggers
"
c233e062c7b640bd7875528b65045d517080aee1,onedata/op-worker,"Merge pull request #946 in VFS/op-worker from feature/VFS-2233-extract-file-guid-to-fuse-message to develop

* commit '513252f0b30f7eb04a05f5a71ea9e97cfcba6f72':
  VFS-2233 Changing separate fuse request types to nested types
  Squashed 'helpers/' changes from cea76df..ad08f48
  VFS-2233 Fixes after merging
  VFS-2233 Extract file entry to generic fuse request
"
a4ca55552de0c7ca6f951cd7994bcc0cb96e9cd2,onedata/op-worker,"Merge remote-tracking branch 'origin/develop' into feature/VFS-1363-add-user-context-to-helpers-operations

# Conflicts:
#	bamboos/docker/environment/client.py
"
346eed172dea8b054b1ea747a79b498a6a15d9d3,onedata/op-worker,"Merge pull request #1682 in VFS/op-worker from feature/VFS-4412-improve-performance-of-remote-random9_PR to release/18.02.0-rc6

* commit 'cbf1d858663530a0b5b520873f24cdab7c982640':
  VFS-4412 Fix file_location critical sessions
  VFS-4412 Fix file_location critical sessions
"
cc7a86013398fef86ca7f4bd80baaa9067485fe9,onedata/op-worker,"Merge pull request #268 in VFS/veilcluster from bugfix/VFS-644-punkty-montowania-klienta to develop

# By ≈Åukasz Opio≈Ça (42) and Krzysztof Trzepla (6)
# Via Krzysztof Trzepla (4) and others
* commit 'f555139f25887afe66541a09b9bca80028cba4f7': (48 commits)
  VFS-644 Change veil dependencies.
  VFS-644 Add authorization to curl opts for installation setup.
  VFS-644 Apply recommended changes.
  VFS-583, revert unwanted changes
  VFS-583, fix test not starting because of cowboy
  VFS-583, fix test not starting because of cowboy
  VFS-644 Fix minor bug.
  VFS-644 Update bigcouch submodule.
  VFS-644 Automatic vfs_storage.info file creation.
  VFS-583, small fixes
  VFS-583, small fixes
  VFS-583, fix tests
  VFS-583, fix tests
  VFS-583, resolve some security issues with GUI
  VFS-583, resolve some security issues with GUI
  VFS-583, protection against XSS
  VFS-583, some code refactoring
  VFS-582, revert gen_dev.args modification
  VFS-583, some code refactoring
  VFS-583, get rid of more wf calls
  ...
"
612ac7897e8f852ff7e2c62ef6a30bf1213e8e09,onedata/op-worker,"Squashed 'bamboos/' changes from 5ecda65..17020db

17020db VFS-1728  -change date in timeouts.py
69734e0 VFS-1728  - replace zone_domain with oz_domain
f2a3e1d Merge remote-tracking branch 'origin/develop' into feature/VFS-1728-timeouts-update
b69eefd Merge pull request #101 in VFS/bamboos from feature/VFS-1652-define-space-storage-per-provider to develop
0886649 VFS-1728  - increase SYNC_NODES_TIMEOUT in release_configurator
455a41d VFS-1728 -fix dns timeout name
fdd69a8 VFS-1728 - move request timeout to timeouts.py
434dc53 VFS-1652 Change sample config.
1b704e9 Merge remote-tracking branch 'origin/develop' into feature/VFS-1728-timeouts-update
43e9d79 VFS-1652 Update single_gr_two_providers.json example.
c713866 VFS-1652 Allow storage configuration per each provider of space, compile helper escript modules dynamically.
73001f3 Merge pull request #99 in VFS/bamboos from hotfix/VFS-1753-fix-return-code-from-ct_run to develop
5687837 Merge remote-tracking branch 'origin/develop' into hotfix/VFS-1753-fix-return-code-from-ct_run
fa6ebbe VFS-1753 skipped_test function defined in both ct_run and test_run
3fbf501 Merge pull request #97 in VFS/bamboos from feature/VFS-1598-integrate-onepanel-with-onezone to develop
da09f27 Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/bamboos into feature/VFS-1598-integrate-onepanel-with-onezone
f2b8dbb Merge pull request #98 in VFS/bamboos from hotfix/VFS-1753-fix-return-code-from-ct_run to develop
16bb701 VFS-1753 fix different keys in junit report for skipped tests
0146685 Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/bamboos into feature/VFS-1598-integrate-onepanel-with-onezone
86d059f Merge pull request #96 in VFS/bamboos from bugfix/VFS-1753-fix-return-code-from-ct_run to develop
4b60555 Merge pull request #93 in VFS/bamboos from feature/VFS-1677-acceptance-tests-started-for-many to develop
99165fb Merge remote-tracking branch 'origin/develop' into feature/VFS-1677-acceptance-tests-started-for-many
52a07c5 Merge pull request #91 in VFS/bamboos from feature/VFS-1684-tests-bamboos-scripts-in-onedata to develop
d07fd54 VFS-1728 - increased env_up timeouts, timeouts defined in separate file
af6bf50 VFS-1598 Adjust panel_up.py script to onezone setup.
09880cb VFS-1684 - fix bringing up 2 dnses in cluster_up, provider-up and zone_up
673f5fa VFS-1753 move functions checking is tests were skipped to separate modules
f8d48e3 Merge remote-tracking branch 'origin/develop' into feature/VFS-1684-tests-bamboos-scripts-in-onedata
3d372e0 VFS-1753 fix problems with xml report name
d23bb81 VFS-1753 checking if tests were skipped in test_run.py
ceed0d4 Merge remote-tracking branch 'origin/feature/VFS-1677-acceptance-tests-started-for-many' into bugfix/VFS-1753-fix-return-code-from-ct_run
a3dc424 Merge remote-tracking branch 'origin/develop' into feature/VFS-1677-acceptance-tests-started-for-many
c1498fa Merge remote-tracking branch 'origin/develop' into bugfix/VFS-1753-fix-return-code-from-ct_run
eded11c VFS-1753 return code 0 from tests if test weren't skipped
6875210 Merge pull request #95 in VFS/bamboos from feature/VFS-1638-integrate-ember-gui-skeleton-into to develop
eb77227 Merge remote-tracking branch 'origin/feature/VFS-1684-tests-bamboos-scripts-in-onedata' into feature/VFS-1677-acceptance-tests-started-for-many
04e0092 VFS-1684 - fix wrong db driver
61ee00c Merge remote-tracking branch 'origin/develop' into feature/VFS-1677-acceptance-tests-started-for-many
52dbe69 Merge remote-tracking branch 'origin/develop' into feature/VFS-1684-tests-bamboos-scripts-in-onedata
9e48b20 VFS-1684 - update example envs
b411200 Merge remote-tracking branch 'origin/develop' into feature/VFS-1684-tests-bamboos-scripts-in-onedata
d03e6c0 Merge remote-tracking branch 'origin/feature/VFS-1641-oneclient-logs-as-artifact-at-bamboo' into feature/VFS-1677-acceptance-tests-started-for-many
d7fb220 VFS-1677 - fix-typo
6c34279 VFS-1677 - add pytest report path as test_run.py argument
7ddbcd4 VFS-1684 - formatting
cd8224b VFS-1684 - fixes and updates

git-subtree-dir: bamboos
git-subtree-split: 17020db3d786b31d0554721e7a07c5e4e195ca69
"
7d96c7598d3678516e19730fcd22737e8904af6c,onedata/op-worker,"Squashed 'appmock/' changes from ecd7962..41dc8df

41dc8df Merge commit '4f0169b60b28abd48e6380d45e79e205269683fb' into feature/VFS-1191-dns-and-token-flow
4f0169b Squashed 'bamboos/' changes from 81078ca..a52ffd1
470e828 VFS-1191 update ctool ref
2fd4a7c Squashed 'bamboos/' changes from 1b97f45..81078ca
5c0e29a Merge commit '2fd4a7ce4a8f782d0293463c98dad876bdccc0e2' into feature/VFS-1191-dns-and-token-flow
622455a Squashed 'bamboos/' changes from 950ffd4..1b97f45
711df0a Merge commit '622455af6ae7b2403212e797cfe64a95962775c9' into feature/VFS-1191-dns-and-token-flow
93cc9a3 Merge pull request #17 in VFS/appmock from feature/VFS-1207-optimize-appmock-s-history-memory to develop
948ba8e VFS-1207, use base 64 encoding in appmock clients
a07e2b8 VFS-1207, use base 64 encoding in appmock clients
dd53358 VFS-1207, fix typo
eb24d68 VFS-1207, fix wrong dict usage
169a802 VFS-1207, fix wrong dict usage
d0e1cd5 VFS-1207, fix wrong dict usage
6814c3d VFS-1207, fix wrong dict usage
47c34af VFS-1207, optimize history memory
b576a83 Merge pull request #16 in VFS/appmock from feature/VFS-1188-appmock-allows-to-check-history to develop

git-subtree-dir: appmock
git-subtree-split: 41dc8df8013c7cb8f707cf2b4fec7a6c351d7355
"
021fd7cb425a5c762276ab151aadfb0eb1bcb6df,onedata/op-worker,"VFS-1414 refactor logical files maganer
"
3b8946d7998c791e334175c2c4bf11b0ef6ffb96,onedata/op-worker,"Merge pull request #910 in VFS/op-worker from feature/VFS-2109-rest-api-for-dir-replication to develop

# By Tomasz Lichon
# Via Tomasz Lichon
* commit '8df43f60ac23773b16144b6b3238325499f4e3ae': (35 commits)
  VFS-2109 Merge changes.
  VFS-2109 Fix dialyzer.
  VFS-2109 Fix dialyzer and ct tests.
  VFS-2109 Extend metrics/space/:id endpoint.
  VFS-2109 Fix ct tests of rest api.
  VFS-2109 Change 'provider' to 'providerId' in jsons in replicas GET tests.
  VFS-2109 Add /spaces/:sid REST endpoint for getting space info.
  VFS-2109 Remove unused module.
  VFS-2109 Add /spaces REST endpoint.
  VFS-2109 Rename 'provider' to 'providerId' in replicas endpoint.
  VFS-2109 Make replication async in /replicas REST endpoint.
  VFS-2109 Add support for extended attributes to REST api.
  VFS-2109 Add offset and limit as parameters for /files REST endpoint.
  VFS-2109 Fix metadata changes subscription test.
  VFS-2109 Adjust cdmi tests to new error messages.
  VFS-2109 Adjust rest tests to new api format.
  VFS-2109 Reformat rest error messages.
  VFS-2109 Accept Macaroon header with token, as auth method for REST.
  VFS-2109 /changes REST endpoint minor improvements.
  VFS-2109 Filter streamed data by space_id in changes stream.
  ...
"
cd00e05c7c64ed53c8d595012149071108f27107,onedata/op-worker,"VFS-2018 Return file_renamed from rename
"
6322002b019571e71ee33ac13cc4949f8dab89c6,onedata/op-worker,"Merge pull request #400 in VFS/veilcluster from feature/VFS-837-veil-to-onedata to develop

# By Krzysztof Trzepla
# Via Krzysztof Trzepla
* commit '7590eb2516108a6f83086f5a2628fc6cfbeaf256':
  VFS-837 Update ctool ref.
  VFS-837 Fix login validation.
  VFS-837 Final renaming.
  VFS-837 Fix naming errors after merge.
  VFS-837 Make onedata start with an uppercase letter.
  VFS-827 Fix provider details expansion.
  VFS-837 Update onepanel ref.
  VFS-837 Minor formatting changes in init script.
  VFS-837 Rename libs directory.
  VFS-837 Fix application start.
  VFS-837 Fix docs generation.
  VFS-837 Fix generation error.
  VFS-837 Update refs.
  VFS-837 Change form 'veil' to 'onedata'.
"
1cb8260423082ad82d3f7c4866f89776ef9dc426,onedata/op-worker,"code cleanup and test improvements
"
15b65476e24d8540cf715362a407e68e7ed6c01d,onedata/op-worker,"Merge pull request #1158 in VFS/op-worker from feature/VFS-3006-remove-file_id-and-storage_id to develop

* commit 'a1d46f9d82b5e0ea615d6747079e487535abb0ae':
  VFS-3006 Remove Annotations.
  VFS-3006 Use FileCtx in metadata api. Refactor code.
  VFS-3006 Move remove_view test to the top.
  VFS-3006 Fix dialyzer.
  VFS-3006 Add remove index method to rest api.
  VFS-3006 Update clproto
  VFS-3006 rename file_attr.uuid to file_attr.guid.
  VFS-3006 Fix CDMI range header format.
  VFS-3006 Distinguish cdmi from non-cdmi requests depending on content type.
  VFS-3006 Rename uuid to guid in local protocol messages.
  VFS-3006 Store space_id istead of space_uuid in sfm_handle.
  VFS-3006 Add new_handle/2 function to sfm, accepting file_ctx.
  VFS-3006 Pass file_ctx to file_handles module.
  VFS-3006 Pass file_ctx to permissions_cache:invalidate.
  VFS-3006 Remove userId from fslogic_times module.
  VFS-3006 Pass UserCtx to emit_file_renamed_to_client function. Move utils to main logical_file_manager package.
  VFS-3006 Reorganize fslogic event modules.
  VFS-3006 Remove file_id and storage_id from file_block.
"
e7719bee4e914b0e46ab7ce094107231e5584ec4,onedata/op-worker,"VFS-3751 Split oneprovider:get_id/1 function into two distinct functions
"
701f3ee46633c6a8f4b99840407765f2f16e3e59,onedata/op-worker,"Squashed 'bamboos/' changes from 9333ecfcf..d2b70f133

d2b70f133 VFS-3873 Added null device storage helper
aaa6efb2f Merge pull request #207 in VFS/bamboos from feature/VFS-2501-remove-location-service-and-identity to develop

git-subtree-dir: bamboos
git-subtree-split: d2b70f133ae2f88382a251a5c13855b667b8e041
"
e3d3087f68219fd8fe32be12de9bac712bba1fd5,onedata/op-worker,"VFS-1999 Remove unused code
"
73d4e7e8958fa8a58df023a6ef51c542ed47c3c2,onedata/op-worker,"VFS-1053 rename oneprovider_ccm -> op_ccm
"
797c84f52be766333490cb87a8ad6c051f3e6374,onedata/op-worker,"Merge branch 'develop' into bugfix/VFS-2018-fix-fuse-s-state-after-file-rename

# Conflicts:
#	src/modules/fslogic/fslogic_rename.erl
#	src/proto/translator.erl
"
ed6cd03d5405b59305e6ad20bcdb8e36314204f0,onedata/op-worker,"VFS-496: refactor db structure management
"
991b4e03dcd7d6bad6ba6653e202141579cfafc0,onedata/op-worker,"Merge pull request #285 in VFS/veilcluster from bugfix/VFS-711_2 to develop

# By Konrad Zemek
# Via Konrad Zemek
* commit '459213727f07f295183aa953d4c056638f528d1b':
  VFS-711 Update veilhelpers_nif to work with current VeilHelpers.
  VFS-711 Update helpers' ref.
  VFS-711 Update client and helper refs.
  VFS-711 Update bigcouchdb and veilclient refs to current release.
  VFS-711 Add -std=c++11 flag for helpers' build.
  VFS-711 Update helpers' ref to current release version.
"
3922d078e3f7e7422b9512d7c6ee42f6bfd38a37,onedata/op-worker,"VFS-2032 Fix rename tests
"
7caa8d1a7f976ef38401c04d996e8c5b40c79d61,onedata/op-worker,"Squashed 'bamboos/' changes from 5ecda65..c713866

c713866 VFS-1652 Allow storage configuration per each provider of space, compile helper escript modules dynamically.
73001f3 Merge pull request #99 in VFS/bamboos from hotfix/VFS-1753-fix-return-code-from-ct_run to develop
5687837 Merge remote-tracking branch 'origin/develop' into hotfix/VFS-1753-fix-return-code-from-ct_run
fa6ebbe VFS-1753 skipped_test function defined in both ct_run and test_run
3fbf501 Merge pull request #97 in VFS/bamboos from feature/VFS-1598-integrate-onepanel-with-onezone to develop
da09f27 Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/bamboos into feature/VFS-1598-integrate-onepanel-with-onezone
f2b8dbb Merge pull request #98 in VFS/bamboos from hotfix/VFS-1753-fix-return-code-from-ct_run to develop
16bb701 VFS-1753 fix different keys in junit report for skipped tests
0146685 Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/bamboos into feature/VFS-1598-integrate-onepanel-with-onezone
86d059f Merge pull request #96 in VFS/bamboos from bugfix/VFS-1753-fix-return-code-from-ct_run to develop
4b60555 Merge pull request #93 in VFS/bamboos from feature/VFS-1677-acceptance-tests-started-for-many to develop
99165fb Merge remote-tracking branch 'origin/develop' into feature/VFS-1677-acceptance-tests-started-for-many
52a07c5 Merge pull request #91 in VFS/bamboos from feature/VFS-1684-tests-bamboos-scripts-in-onedata to develop
af6bf50 VFS-1598 Adjust panel_up.py script to onezone setup.
09880cb VFS-1684 - fix bringing up 2 dnses in cluster_up, provider-up and zone_up
673f5fa VFS-1753 move functions checking is tests were skipped to separate modules
f8d48e3 Merge remote-tracking branch 'origin/develop' into feature/VFS-1684-tests-bamboos-scripts-in-onedata
3d372e0 VFS-1753 fix problems with xml report name
d23bb81 VFS-1753 checking if tests were skipped in test_run.py
ceed0d4 Merge remote-tracking branch 'origin/feature/VFS-1677-acceptance-tests-started-for-many' into bugfix/VFS-1753-fix-return-code-from-ct_run
a3dc424 Merge remote-tracking branch 'origin/develop' into feature/VFS-1677-acceptance-tests-started-for-many
c1498fa Merge remote-tracking branch 'origin/develop' into bugfix/VFS-1753-fix-return-code-from-ct_run
eded11c VFS-1753 return code 0 from tests if test weren't skipped
6875210 Merge pull request #95 in VFS/bamboos from feature/VFS-1638-integrate-ember-gui-skeleton-into to develop
eb77227 Merge remote-tracking branch 'origin/feature/VFS-1684-tests-bamboos-scripts-in-onedata' into feature/VFS-1677-acceptance-tests-started-for-many
04e0092 VFS-1684 - fix wrong db driver
61ee00c Merge remote-tracking branch 'origin/develop' into feature/VFS-1677-acceptance-tests-started-for-many
52dbe69 Merge remote-tracking branch 'origin/develop' into feature/VFS-1684-tests-bamboos-scripts-in-onedata
9e48b20 VFS-1684 - update example envs
b411200 Merge remote-tracking branch 'origin/develop' into feature/VFS-1684-tests-bamboos-scripts-in-onedata
d03e6c0 Merge remote-tracking branch 'origin/feature/VFS-1641-oneclient-logs-as-artifact-at-bamboo' into feature/VFS-1677-acceptance-tests-started-for-many
d7fb220 VFS-1677 - fix-typo
6c34279 VFS-1677 - add pytest report path as test_run.py argument
7ddbcd4 VFS-1684 - formatting
cd8224b VFS-1684 - fixes and updates

git-subtree-dir: bamboos
git-subtree-split: c7138660bd2413d3e44fb16e16c58b2561845288
"
1d07321bdba06be54c27532566f18e91b7fbbe7f,onedata/op-worker,"VFS-3495 Update ctool and use its new util function for getting system time. Introduce hard open time limit to space cleanup.
"
37fce6942db5813390acff1d78d8fa4470fbd147,onedata/op-worker,"Merge branch 'feature/VFS-998-refactoring-disp-wh-ccm-nm' of ssh://git.plgrid.pl:7999/vfs/oneprovider into feature/VFS-996-model-layer-first-implementation

Conflicts:
	rebar.config
	rel/files/configurator.erl
"
52aa65c56405780b0e570df037693fe61f0d593a,onedata/op-worker,"Merge remote-tracking branch 'origin/develop' into feature/VFS-1363-add-user-context-to-helpers-operations

# Conflicts:
#	src/modules/fslogic/lfm_submodules/lfm_files.erl
"
ce3f9add9c1ffa1e40b04994dfda29a27cda0035,onedata/op-worker,"Merge pull request #427 in VFS/oneprovider from feature/VFS-613-rozjezdzanie-sie-gui-po-zmniejszeniu to develop

# By ≈Åukasz Opio≈Ça
# Via ≈Åukasz Opio≈Ça
* commit '6adf739cedd802c08ff47f56ff88b4a3280cc2bc':
  VFS-613, fix debounce fun
  VFS-613, fix debounce function not being called prooperly
  VFS-613, add debounce fun
  VFS-613, move bootbox.js to template
  VFS-613, merge with develop
  VFS-613, fix top menu on all pages
  VFS-613, fix collapsing top menu
  VFS-613, adjust css
"
aae1c129db6b1128a7044657892a0651de291fdf,onedata/op-worker,"Merge pull request #691 in VFS/op-worker from feature/VFS-1398-cdmi-metadata to develop

# By Tomasz Lichon (41) and Jakub Kudzia (25)
# Via Jakub Kudzia (11) and others
* commit '6ca7da4abbca3e5614212d99138473a486d4de9f': (66 commits)
  VFS-1398 Remove unused function, match {not_found, xattr}.
  VFS-1398 Update ctool.
  VFS-1398 Improve documentation.
  VFS-1398 Change function call from global to local.
  VFS-1398 Fix wrong get_xattr return type.
  VFS-1398 Reorganize xattr records definitions.
  VFS-1398 Fix dialyzer.
  VFS-1398 Fix wrong xattr document key.
  VFS-1398 Update ctool.
  VFS-1398 Update ctool.
  VFS-1340 - fixes
  VFS-1340 - code improvements
  VFS-1340 - fixes
  VFS-1340 - handling error cases 2
  VFS-1340 - handling error cases
  VFS-1398 Fix xattr link removal.
  VFS-1398 Add cdmi_metadata test, improve handling certificates, add temporary workaround for not removable links.
  VFS-1340 -all tests passing
  VFS-1340 -2 bug fixes after merge
  VFS-1398 Add xattrs to onedata_file_api and cdmi_metadata implementation.
  ...
"
99dc45917103405aa95a98566493b9e866ca73c3,onedata/op-worker,"VFS-2018 Add response after rename
"
553c888eab87faf4978afbf8fb752fd8e6a8b9e6,onedata/op-worker,"Merge remote-tracking branch 'origin/feature/VFS-1745-improve-file-creation-permissions' into feature/VFS-1521-provider-provides-data-provided

# Conflicts:
#	src/modules/datastore/datastore_config_plugin.erl
#	src/modules/datastore/models/file_location.erl
#	src/modules/datastore/models/file_meta.erl
#	src/modules/fslogic/fslogic_storage.erl
#	src/modules/fslogic/fslogic_utils.erl
#	src/modules/fslogic/storage_file_manager.erl
"
f1d244a9c76c4bc3f3646760ec720116a9447af4,onedata/op-worker,"Merge pull request #762 in VFS/op-worker from feature/VFS-1607-backwards--compatibility-for-ambiguous to release/3.0.0-beta3

# By Krzysztof Trzepla
# Via Krzysztof Trzepla
* commit 'e8a5acd49b281f555891a47e1bb2abe1286c1e90':
  VFS-1607 Fix CT tests.
  VFS-1607 Move gen_path and gen_storage_path to fslogic_path module.
  VFS-1607 Adjust mechanism for ambiguous space names to the changes in global registry.
  VFS-1607 Save sessions of test spaces members in test process memory.
"
6e466fa83c8e2fc5bfd2105c4fbaddf0ca8893b4,onedata/op-worker,"VFS-583, some code refactoring
"
2114f886f34ca2053c942b85590b3ae1ec1e939a,onedata/op-worker,"Merge remote-tracking branch 'origin/feature/VFS-2856-fslogic-refactoring' into feature/VFS-2907-2-test-storage-sync

# Conflicts:
#	src/modules/storage_sync/space_sync_worker.erl
#	src/test_utils/initializer.erl
"
81acea839a9848b6ba370d6e572d269fe02bafdb,onedata/op-worker,"Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/op-worker into feature/VFS-3573-integrate-refactored-datastore-and
"
ec4c6c308f176bd71af85c93d45c810f094c25ec,onedata/op-worker,"Merge pull request #826 in VFS/op-worker from feature/VFS-1618-inter-space-and-inter-provider-file to develop

# By Mateusz Paciorek
# Via Mateusz Paciorek
* commit '08549a3d0a7305328331fc1f2c388da5ef194948': (34 commits)
  VFS-1618 Fixing old rmdir usage
  VFS-1618 Fixing case of renaming file with the same name, adding test
  VFS-1618 Fixing env accessing
  VFS-1618 Moving configurable values to config
  VFS-1618 Sorting synchronization keys to avoid potential deadlocks
  VFS-1618 Changing synchronization keys, updating docs
  VFS-1618 Fixing times inconsistency
  VFS-1618 Links to tickets, additional test
  VFS-1618 Adding synchronization for file_meta:rename
  VFS-1618 Adding new test for renaming in default space
  VFS-1618 Fixing moving into itself check
  VFS-1618 Fixing storage files mode changing
  VFS-1618 Fixing path type issues
  VFS-1618 Delete target file after checking all permissions, add ls assertions in tests
  VFS-1618 Changing tests to check acl on proper provider
  VFS-1618 Changing moving into itself detection to interprovider-friendly
  VFS-1618 Improving permissions handling
  VFS-1618 Enabling grpca in rename tests
  VFS-1618 Fixes after merging
  VFS-1841 Fixing target parent path usage
  ...
"
9beaf1e3ee9b7ddbe1840c747a0c84f639f3a86b,onedata/op-worker,"Merge pull request #1390 in VFS/op-worker from feature/VFS-3916-merge-cancellation-of-transfers to develop

* commit '27c6c1c39acb66df1d783f16df5bc8abc98f8a69':
  VFS-3857 make request_chunk_size and check_status_interval constants in replica_synchronizer configurable in app.config
  VFS-3857 improvements according to PR
  VFS-3857 canceling and automatic retries of transfers
"
386be034108554dcff90b31cdf367a0af69b8722,onedata/op-worker,"Merge pull request #763 in VFS/op-worker from feature/VFS-1596-integrate-luma-into-onedata to develop

# By Michal Wrona
# Via Michal Wrona
* commit 'bb550e5b2305fd8a2d41c75be1fee15147195a60': (36 commits)
  VFS-1596 Ceph permissions adjustment
  VFS-1596 Fix getting ceph user name
  Squashed 'bamboos/' changes from b4d4511..8d72e0f
  VFS-1596 Fix merge duplicate
  VFS-1596 Fix fslogic_req test
  VFS-1596 Update ctool version
  VFS-1596 LUMA python files paths adjustments
  VFS-1596 Refactor luma nif, use hex_utils
  VFS-1596 Reformat code
  VFS-1596 More readable LUMA tests
  VFS-1596 Move LUMA internals to module
  VFS-1596 Move app initialization to function
  VFS-1596 Add more blank lines
  VFS-1596 Reformat code
  VFS-1596 Use dedicated credentials caches instead of luma response
  VFS-1596 More readable URL construction
  VFS-1596 Python LUMA documentation; use nifpp in LUMA nif
  Squashed 'bamboos/' changes from a7ccf73..b4d4511
  VFS-1596 Reformat code
  VFS-1596 Multi storage LUMA tests
  ...
"
06d109f39cf395bb3018e959361691f15e9a0953,opencart/opencart,"Remove Hungarian Regions

1. Regions are not used with addresses within Hungary
2. Regions in the OpenCart list are inconsistent - they include
counties, count seats etc.
This patch removes Hungarian regions altogether.
"
4aa63e99ac186c6c68b64968dce47e3bf171d0f6,opencog/atomspace,"moses: split off moses_params into it's own header file.

Shuffle the rest of the code as needed to fit.
"
1dac02461980a5080e977c82c218f87a6fc36474,opencog/atomspace,"Improve Unify::typed_substitution vardecl calculation
"
cdbdb589fbc8771c040f608bf58cc95791f5cb0f,opencog/atomspace,"Fixed issues with AtomTable indexes when using extensible ClassServer (added specific unit test in AtomTableUTest for this)
ClassServer is now a singleton class (instead of providing a set of static public methods). This helps to solve the static initialization issues, whose fixes are still in progress.
All references to static ClassServer::<method> were replaced by classserver().<method> in the whole codebase.
"
726c0f2a33497aad991ead15e64d78c3fd11c6ad,opencog/atomspace,"Lots of work on improving the PLN shell interface. Now provides feedback to remote user instead of dumping everything to the server stdout. Still dumps to stdout, but also returns to remote user. Also a little bit of type checking to avoid segfaults."
94d1da75ffaf685509148220057cfa842f8346a7,opencog/atomspace,"Rename & relocate files
"
8a9806fa536b1d9e9c1bcd7f875458fce6a5355b,opencog/atomspace,"Misc cleanup associated with previous commit
"
10b6a48057b6e3aa8b8dc16408c9a77f03fe9850,opencog/atomspace,"Removed unused files from the tree.

"
0f6f27aa9706027ff2242da4e9ce1407c9890b10,opencog/atomspace,"Merge pull request #616 from linas/singe

Minor API cleanup"
c4513c66bdacc4a9019132eed077f6ce15d4361a,opencog/atomspace,"Merge pull request #344 from linas/psql

Really make sure that the unit tests get run."
fb6e3a300466359360dd084711c995ea29a3b99c,opencog/atomspace,get rid of RandGen argument passed in probably over a hundred functions (while only being used a few times) and use randGen() instead
380738f2fcd0fd292c5c257732586906c98a304f,opencog/atomspace,"Merge pull request #1452 from linas/crb

Assorted minor cleanup pertaining to #1450"
0fcf7333bed0aaa8c2ace02c5e0938ae7d972683,opennars/opennars,"Refactor: reverted to short form of Task.make()
"
d0f3f228cfbae6e28fd9ca2698b39b4958427b24,opennars/opennars,Refactor: Anticipation handling: Move confirmAnticipation from ProcessJudgment to ProcessAnticipation.
bde406024e8cffed771a0d4a4f0eea71aff5548b,opennars/opennars,symbol table refactoring
894b0faa8754a6d89c1149c68f0127672b8fc17a,opennars/opennars,"temporal planning encapsulated in TemporalParticlePlanner plugin, and GraphPlanTest unit test"
8a204303afa56cdc2f655d2091d238f3079d383c,opennars/opennars,Refactor: Task: Cleanup construction.
2f6555afda0d56ae40117f4a4e7590f0868b9eb0,opensalt/opensalt,"refactor: src/ is now the App namespace
"
4dd8dd6cefda28c08e21dbc617455d7ae58ddd1c,opensalt/opensalt,"refactor: move saving external doc information to a command handler
"
c9358687cae598143cad20fffd16c6c191985ca4,openstack/neutron,"Separate floating IP port creation from transaction

This moves the floating IP port creation outside of the transaction
that creates the floating IP record. This eliminates the use of one
of the GUARD_TRANSACTION flags to prepare us for the enginefacade
switch and correct event notification semantics for push
notifications.

Note that this introduces a small window where the server can die
mid-process and leave an orphaned port without a floating IP. This
is similar to what can happen for router gateway ports. The intention
is to address these in a follow-up patch with a periodic garbage
collection task that will look for floating IP ports with a device
ID of 'PENDING' since the tenant cannot delete them on their own.

Related-Bug: #1540844
Partially-Implements: blueprint push-notifications
Partially-Implements: blueprint enginefacade-switch
Change-Id: Ia4c34c6654a5bfb64fbf06b11b0a29b018c6854f
"
2758739847e30e18675ad945a1a3ad04c4603e3f,openstack/neutron,"Cleaned up remaining incorrect usage for LOG.exception

- callers should not explicitly pass exceptions into LOG.exception
  because it's already implicitly included in the message by stdlib
  logging module.
- callers should not call to LOG.exception when there is no exception to
  log about (known to fail in Python 3.x < 3.5).

Change-Id: I58e7e01ed152028ad43bb3ada87d719caa2ab08d
Related-Bug: #1504053
"
d029fc805e4907feeac088b792e98e89a7c72d2c,openstack/neutron,"Add text for deprecated parameter

Add information for ""max_fixed_ips_per_port"" option that the
option is deprecated and will be removed in the N release.

Co-Authored-By: Takanori Miyagishi <miyagishi.t@jp.fujitsu.com>

Change-Id: I9aa876c371e7b6cff2068dc641c5e4b5ebda8001
Closes-Bug: #1503088
"
5aaae68e5148f01e78a5e6013dce797dd42c1917,openstack/neutron,"Move _add_auto_addrs_on_network_ports

Moved to ipam_non_pluggable_backend.py since implementation
is specific for non pluggable ipam backend.
Pluggable implementation will additionally include rollback on failure actions.

This commit is a preparation step for using pluggable ipam.
More changes in this methods are expected to be done by following
patches.

Partially-Implements: blueprint neutron-ipam

Change-Id: I1876846526e370a7fcfa05b9a23fd9065973f111
"
ee7d1cbdaae8faa307f497b4e1bf10bffc90af0c,openstack/neutron,"Merge ""rename port attribute variable to SECURITYGROUPS from SECURITYGROUP"""
6960cc133c9ebac3ca356a2058230674562d5615,openstack/neutron,"DVR: Rename dvr_vmarp_table_update

This dvr_vmarp_table_update is not only used to update
the arp entry for the VM ports, but also for other
DVR service ports.

So the function name is kind of misleading and hence
changing it to an appropriate name that fits its function.

Change-Id: I6d5b0b717dcff964a514c83b0cd60b044411f0db
"
607957ef3501a771a61cd3b82b32f5de83a6e117,openstack/neutron,"Refactoring config options for dhcp agent

Refactoring neutron configuration options for dhcp agent to be in
neutron/conf/agent. This would allow centralization of all configuration
options and provide an easy way to import.

Change-Id: Ia17d2d7223dd598e2d36a8320942fb03b61dffaf
Partial-Bug: #1563069
"
d476473fe8b988e3069f5dc1b9d1d95aadb6a707,openstack/neutron,"Merge ""Cleanup stale metadata processes on l3 agent sync"""
a98dc7680d4689f5ce5f602f9c5cb3bcc77de215,openstack/neutron,"tests/unit: refactor reading neutron.conf.test

neutron.conf.test includes rpc_backend whose value is stashed.
Thus it is required to reset when tearing down, otherwise the stale status
will be used by succeeding tests causing random error.

This patch refactors reading neutron.conf.test and resets the status of
rpc_backend properly.

Closes-Bug: #1281481
Closes-Bug: #1284549
Change-Id: I0fa5945b6adbb9945d353028ec88d00ccbf4e31a
"
85f26b3bee75584a7332256f9ee40983fc3ac64f,openstack/neutron,"Merge ""Refactoring config options for service"""
ccd650732729451aa8e5ce3401f9570c70c4f066,openstack/neutron,"Moves the HA resource creations outside of transaction

Currently the HA resources are created in the
_create_router_db which includes calls to
the plugin and generates RPC calls. Even if the
resource creations are outside of any transaction
from the _create_router_db point of view, this
method is  called in a transaction from the
create_router method.
This patch moves the resource creations to the
create_router method outside the transaction.
The failures are handled as previously with
a try/expect.

Change-Id: If8fcfd012f8e992175e49bbefb2ae667881a620a
Closes-bug: #1374461
"
8540cfea3edc615ed6e937ac77bb8f0cef78adcf,openstack/neutron,"Refactor the ProcessMonitor API

Refactor the ProcessMonitor API to reduce coupling to
ProcessManager, and stop replicating the whole API and
behavior of ProcessManager.

We introduced an abstract MonitoredProcess class to reduce
coupling, and allow other kinds of external processes
to be monitored too.

Partially Implements: blueprint agent-child-processes-status
Co-Authored-By: Mike Kolesnik <mkolesni@redhat.com>

Change-Id: I0da6071037f9728cc20403324e36c32116bcf00d
"
9e5a70c47cbed49108c3d7e1cf72530e483cadb9,openstack/neutron,"Merge ""Refactor ml2_db to pass context"""
eef3d42dfe587ce34be135035f279772866b79fc,openstack/neutron,"Merge ""Rename delete_gateway method name"""
5d07ec908cd7bee1c332ee3be6aee17e8386b9ea,openstack/neutron,"Tighten exception handler for import_object

oslo_utils raise ImportError if import fails. We should propagate other
failures to callers. Otherwise we may hide issues.

Also report exact failure from import_object in case L3 agent fails to
import interface_driver.

As part of the job, consolidated code to load interface driver into
common function.

Also, stopped checking for specific log messages in dhcp and l3 agent
unit tests: it's too fragile and actually not something we need a unit
test for.

Not to introduce more work for people who handle py3 porting effort,
added the unit test into the list of those that are executed for py34
job until the whole suite is ready for python3.

Change-Id: I10cdb8414c9fb4ad5cfd3f3b2630811f50ffb0c7
"
0419da5ea2174c95c18d1e017dd84ad83621bcfe,openstack/neutron,"Merge ""Remove deprecated network_device_mtu option"""
069eb664cb261146de09b9a6f4c0415bcc656d1e,openstack/neutron,"Merge ""Convert OVO fields to primitives for to_dict()"""
f6df76cc82fd25f48f1376a63d42ce3c49a742ad,openstack/neutron,"Get rid of DVR inheritance of _delete_current_gw_port

Switch to a callback based approach for cleaning up the
distributed resources for a router gateway. This maintains
the current transactional semantics and gets us closer
to eliminating the use of mixins for DVR.

Change-Id: I1d17706652811383d4bc968812d5cd6526febc4b
"
73673beacd75a2d9f51f15b284f1b458d32e992e,openstack/neutron,"Graceful ovs-agent restart

When agent is restarted it drops all existing flows. This
breaks all networking until the flows are re-created.

This change adds an ability to drop only old flows.
Agent_uuid_stamp is added for agents. This agent_uuid_stamp is set as
cookie for flows and then flows with stale cookies are deleted during
cleanup.

Co-Authored-By: Ann Kamyshnikova<akamyshnikova@mirantis.com>

Closes-bug: #1383674

DocImpact

Change-Id: I95070d8218859d4fff1d572c1792cdf6019dd7ea
"
9660177d485b8d28f2839358320eb2b407ca3b48,openstack/neutron,"Apic drivers enhancements (second approach): L2 refactor

- refactor to leverage Client's transactional capabilities
- General refactor to improve the driver's reliability

Implements blueprint: apic-driver-enhancements

Change-Id: I4deb171381e62e70818218957d82b5e27954aeb9
"
fb79d9bd77735001c3e1bc135454f1441d876de4,openstack/neutron,"Remove deprecated DEFAULT.root_helper

root_helper has been deprecated under [DEFAULT] since the quantum
to neutron rename. It's time to finally remove handling it.

DocImpact
UpgradeImpact
Partially-Implements: blueprint rootwrap-daemon-mode
Change-Id: I17cd62c8763430bf3a4b67ab5e9cf5b736065133
"
23b907bc6e87be153c13b1bf3e069467cdda0d27,openstack/neutron,"Remove deprecated use_namespaces option

The use_namespaces option has been defined as a workaround to kernels
not properly supporting namespaces. This limitation is behind us, it's
time to remove use_namespaces after its deprecation in Kilo in order to
simplify code and remove a poorly tested case (use_namespaces=False).

This change prepares for removal pullup_route method[1] which was only
used when use_namespaces=False.

[1] neutron.agent.linux.ip_lib

DocImpact
UpgradeImpact
Closes-Bug: #1508188
Related-Bug: #1435382
Depends-On: I303038eec560a6d99421140c2822aed8b518470b
Depends-On: I4feb2a15c7e1e4bfdbed2531b18b8e7d798ab3cc
Change-Id: I2fbf65df1250d9f9f1656b3964ee3b6de1ef1118
"
411aceec92c984bf2fdbee17ed7c19bc7cfdf78d,openstack/neutron,"Merge ""Improve data access method of ryu-agent"""
14bc9c0568507ed61c9be0401e87d8bd2b3fba3a,openstack/neutron,"Convert several uses of RpcCallback

Convert several places in the code that were using the RpcCallback
compatibility class.  This class eased the transition to
oslo.messaging.  This patch drops the usage of this class in favor of
direct usage of the appropriate oslo.messaging API.

Part of blueprint drop-rpc-compat.

Change-Id: I955958e836635d43dabc7b39d050c1418b18cf8f
"
be77455856fcc88300b0ad5a36211ebd37f0e453,openstack/neutron,"Improvements to API validation logic.

Do not automatically map generic exceptions like AttributeError to
http errors (instead they should be handled closer to where they occur
so that they can be ""intelligently"" converted to the appropriate
error).

Fix up some expected error codes in the unit tests.
Improve some of the validation messages.
Remove all use of locals() in attributes.py

Fixes: bug #1076813
Change-Id: Iabf8808a840e927307bbcae4cd41790af3d79a9e
"
cbc15d2e1db22fbefaac0a97363589aebf834b24,openstack/neutron,"Ensure unit tests don't assume an IP address allocation strategy

These unit tests initially asserted sequential allocation of IP
addresses, even though they have no need to specifically assert
that a specific IP was allocated. This made it difficult to
change out the IP allocation algorithm in the future and made
these tests fragile and poorly isolated.

This change breaks the dependency these unit tests have on a
specific IP allocation strategy and isolates them from any
changes that may be made to the order in which IP addresses
are allocated on a subnet.

Change-Id: Idc879b7f1e6496aa96b4f7ae6c3eaca6079bdcac
Partial-Bug: #1543094
"
84bbcb6f2a5400112751517e41bb50b5056220e0,openstack/neutron,"Fixes floating IP regression with multiple routers

During the refactor here:
Change-Id: I09e8a694cdff7f64a642a39b45cbd12422132806
Too much code was removed and caused floating ips to get miss assigned when
multiple routers with external networks in the same tenant are present. The
first router in the tenant was always being chosen. This patch adds back
some of the original code as well as a unit test.

Change-Id: I6f663cb1ce3e4a1340c415d13787a9855c4dcac2
Closes-Bug: 1422476
"
2062a788d6da7a0760e826b477a316257fa33bd0,openstack/neutron,"Break out config and entry point out of l3/agent file

This is done in order to show the split between a main() and
the agent's inner workings. At the same time the L3 agent for
Neutron is also being restructured and to this aim, its config
is also moved out of the agent file.

Keep main() for the time being until we get dependent
services updated.

Partially-Implements: bp restructure-l3-agent
Partially-Implements: bp core-vendor-decomposition

Change-Id: I0d07d91ba301ee1aa51dabcf964a96edc0d6a3e0
"
a19ec4a7320dead0ea138697b8785638c6dd4307,openstack/neutron,"Use RPC instead of neutron client in metadata agent

RPC is a standard way of interacting between Neutron server and agents
Using neutron client is also  inefficient as it results in unneeded
keystone load and may become a bottleneck at scale

DocImpact
When upgrading, one should upgrade neutron server first,
then metadata agent. However there is a fallback in case
metadata agent fails to get info from server by rpc -
it will return to using neutron client.

Closes-Bug: #1092043

Change-Id: Ib75568643e6062543c0ff8cf80fba1b40b4fe82f
"
07d597079781967f5a149f1812ddca3897fa49d9,openstack/neutron,"Call _destroy_metadata_proxy from _destroy_router_namespaces

Refactor _spawn/destroy_metadata_proxy so that it can be called
with only the namespace and the router_id.

Change-Id: Id1c33b22c7c3bd35c54a7c9ad419831bfed8746b
Closes-Bug: #1252856
"
1242c8d90be69bb327be00f374e7df9205188a52,openstack/neutron,"Rename L2 Switch/Gateway related methods for VMware NSX plugin

Yet another another step for the renaming/refactoring
of nvplib and related modules. This is about l2 switches
and l2 gateways.

Partial-implements blueprint nicira-plugin-renaming

Change-Id: I35c2b20a33ed8f2df4334c335f91472f7b822f8e
"
e8fd2505e29eb620e102d73af71a25d2162604ce,openstack/neutron,"SR-IOV: Remove deprecated supported_pci_vendor_devs option

The SR-IOV option supported_pci_vendor_devs has been deprecated in Newton
and This change removes it from Ocata.

Change-Id: I42dadfd0b62730ca2d34d37cb63f19f6fec75567
"
a9e763914d0c160ec54dfec8d0958331153daa23,openstack/neutron,"Switch to flake8 from pep8.

 * flake8 supports more checks than pep8 (e.g. detection of
   unused imports and variables), and has an extension mechanism.
   A plugin to support automatic HACKING validation is planned.
 * See: http://flake8.readthedocs.org/

Change-Id: I8c9314c606802109a4d01908dbc74ecb792ad0ac
"
cadba3d46126cee9efca7a672706e042b184bf7c,openstack/neutron,"Merge ""Move address scope specific code out of iptables_manager"""
1c121fd63568911242900e91237e49715f68f71c,owid/owid-grapher,"Use ResizeSensor to check container instead of window
"
98e9b7d2e920cbb91fde0fd9c5ebb301eddff2c6,owid/owid-grapher,"Reorganizing scatterplot data a bit
"
8154f0d3da46c54a63fe00a771b9c908c22de631,pandas-dev/pandas,"Fixes #8933 simple renaming
"
4a4fe0b0b4ed188c3d155f0d5b35fedf09aa3f2a,pandas-dev/pandas,"Merge pull request #10290 from jreback/mi_perf

PERF: improved performance of multiindex slicing"
00e52abe927150d10a72e397893bee56f4cc6505,pandas-dev/pandas,"update imports of DateParseError, remove unused imports from tslib (#17713)

See #17652"
78c76d914aaf41cfc91e320e4b16241f98293b35,pandas-dev/pandas,"CLN: Remove py3 next method from FixedWidthReader

It's unnecessary - handle wraps this instead.
"
56dbaaef4fdd61974c447c124df2331acbbc7d27,pandas-dev/pandas,"ops cleanup, named functions instead of lambdas (#19515)

"
491e3c3dffad6016ad79f36776ea3efcefa89d66,pandas-dev/pandas,"TST: GH4604, reindexing with a method of 'ffill' gives incorrect results

BUG/CLN: (GH4604) Refactor Series.reindex to core/generic.py allow method= in reindexing
  on a Series to work

API/CLN: GH4604 Infer and downcast dtype if appropriate on ffill/bfill
  this is for consistency when doing: df.reindex().ffill() and df.reindex(method='ffill')

CLN: allow backfill/pad/interpolate to operate on integers (by float conversion)
     provide downcasting back to original dtype where needed core.internals.interpolate

ENH: provide core.index.identical method to compare values and attributes similar to .equals

API: changed back to pre-GH3482 where a reindex with no args will by default copy
"
3a5c71107b9e80c3cfc410e44ba206514935dd33,pandas-dev/pandas,"ENH: refactored Series plotting methods to use common code. clean up default arguments
"
cb96f776dd4b1d1d243046cd74b64c9a84232aa3,pandas-dev/pandas,"ENH: add .loc attribute to provide location-based indexing

TST: added multi-index tests

DOC: changed loc -> iloc
     added more docs

ENH: added integer lists as indexers to iloc

ENH: raise correctly on out-of-bounds slicing
     support negative indexing in iloc and icol

CLN: move all indexings (ix/iloc) to PandasObject in generic.py
     (except _SeriesIndexer in series.py)
     add name parameter to Indexer creation, makes indexers independent
     of their external names
"
42932b521efeb480a879f863a2caf481efbf31a7,pandas-dev/pandas,"Refactor of PyTables support to allow multiple table types.

  This commit allows for support of multiple table types in a pytables hdf file,
  supporting the existing infrastructure in a backwards compatible manner (LegacyTable)
  while extending to a slightly modified format to support AppendableTables and future support of WORMTables

  AppendableTables are implementations of the current table format with two enhancements:
     1) mixed dtype support
     2) writing routines in cython for enhanced performance

  WORMTables (not implemented - but pretty straightforward)
    these tables can support a fixed 'table' (meaning not-appendable), that is searchable via queries
    this would have greatly enhanced write performance compared with AppendableTables, and a similar read performance profile

  In addition, the tables allow for arbitrary axes to be indexed (e.g. you could save a panel that allows indexing on major_axis,minor_axis AND items),
    so all dimensions are queryable (currently only major/minor axes allow this query)

  all tests pass (with 1 exception)
    a frame table round-trip - we fail on a comparison of a sorted index of the frame vs the index of the table (which is as written), not sure why this should be the case?
"
b453fa35c861fc2825c3eaafb4d52e326e373b30,pandas-dev/pandas,"Merge pull request #7129 from TomAugspurger/describe-quantiles-valuecounts

BUG: cleanup on describe"
822178e0d882c7a86df454c259980823ba830afd,pandas-dev/pandas,"Merge pull request #5038 from alefnula/pep8

CLN: PEP8 cleanup
"
434f26bf08cc09e4749618cc601e413f6770556a,pandas-dev/pandas,"TST/ENH: Add assert_isinstance util to util/testing + better type checking

cleanup instance checks in pandas/tests, add assert_isinstance method

CLN: assert_(isinstance --> assert_isinstace

Make is_instance_factory cleaner + basestring --> (str, bytes)

use list(range in pytables tests

make _WINDOW_TYPES update 2/3 compatible
"
bd70e75e7e218d61d9fa7081b5354f0721b42bad,pandas-dev/pandas,"CLN: Deprecate Index.summary (GH18217) (#20028)

"
0a21448568e016804abc33847aba53822087162e,pandas-dev/pandas,"Merge branch 'categorical-cleanup' of https://github.com/jseabold/pandas into jseabold-categorical-cleanup

Conflicts:
	RELEASE.rst
"
62d8d32f6b008c370e1041295cbbb121b945b6ce,pandas-dev/pandas,"DEPR:  Deprecate DateRange [fix #6816]
"
2d711e00b09e587c332f70d1c0282f7483215dcc,pandas-dev/pandas,"BUG: fix writing of Categorical with to_sql (GH8624)

Use .get_values() instead of .values on the block,
this ensures that NonConsolidatable blocks (non-dense
blocks like categorical or sparse) are densified
instead of just returning the raw .values
"
ff457456b3a5da00b3ee74f7e2589227282aacae,pandas-dev/pandas,"REF: great int32 -> int64 migration, though 0.01% chance of success on 32-bit
"
99acda4a288551cb9b8ce50a35ac271b020e445d,pandas-dev/pandas,"Merge pull request #4070 from jreback/iloc_perf

PERF: optimize iloc for unique case"
276462b3a18cc7c0e2ca8f35a5d0df3663229aed,pandas-dev/pandas,"Merge pull request #8884 from shoyer/fix-timedelta-math

BUG/ENH: cleanup for Timedelta arithmetic"
cc6ee40a9dae5401b0481eaba896a7211b64bbb5,pandas-dev/pandas,"Merge pull request #6269 from jreback/perf2

PERF: micro optimizations"
8d87a292913e490023410a23647b3e78eb81526e,pandas-dev/pandas,"dataframe bar plot can now accept width and pos keywords for more flexible alignment
"
d6f9b79efaca0a4facb2b92e3d008e5f3cc3d035,pandas-dev/pandas,"COMPAT: remove deprecated options from printing in test suite (GH6984)
"
a7a0574a0bcb8a4c65ed7f5006972e24f90ae3df,pandas-dev/pandas,"ENH: Support resetting index with tuple name

closes #16164

Author: Pietro Battiston <me@pietrobattiston.it>

Closes #16165 from toobaz/reix_col_name and squashes the following commits:

9e1bdba [Pietro Battiston] REF: reorganize reinsertion code
3b0bb1f [Pietro Battiston] ENH: Handle tuples shorter than nlevels gracefully
c958de7 [Pietro Battiston] TST: additional test for reset_index with tuple-named index level
e12bca1 [Pietro Battiston] ENH: allow tuple index names to be interpreted as full column keys
6315d07 [Pietro Battiston] REF: Avoid duplication in reset_index() when reinsering index columns
"
d3669321a4de19e20fcdfd40f199f4b6fa657cec,paninski-lab/yass,"Validation - refactored config file (#189)

* adds cerberus schema file

* fixes cerberus schema file

* fixes to cerberus schema

* validating yass config with cerberus

* cleaning up validation code

* verifying all sample config files

* schema validation fixes

* fixes #159

* removes unused field from schema validator

* refactors spikes section in config

* refactors clustering section

* moves cluster prior to cluster section

* moves coreset to cluster section

* moving filter config to filter section

* refactors detect section

* fixing tests

* headers in sample config

* header

* moves triage to cluster section

* renames channelGroups to channel_groups

* renames neighChannels to neigh_channels

* deconvolution section is now optional

* renames spikeSize, templatesMaxShift and stdFactor

* cleanup

* updates changelog
"
af7c4ee8509e124225e14996cae25e4fb4cd61b2,paradajz/OpenDeck,"simplified led flashing on startup
"
8266313da08d944a79cc267fafa7c05909874c61,polyaxon/polyaxon,"Move api version to constants urls
"
ceb3d03dcccc2547dc523d0c3df16b8504e856ae,polyaxon/polyaxon,"Split experiment and experiment jobs
"
e06856d519358213f49770c6b24cc8db2cc95743,psychopy/psychopy,"BF: see description please

- changed iohub_keyboard and iohub_mouse basic demo's to have a time out
of 15 sec of no event activity. Added extra text indicating what to do
and how to exit each as well.

- Added note to custom install guide re: gevent 1.0 + required.

- Added getHubServerConfig() method to ioHub connection

- Optimized device event listener _handleEvent() code.

- Fixed support for ESC out of calibration routine for Tobii eye
tracker.

- Windows OS: Fixed issue with mouse events not being allowed outside of
psychopy full screen window even when this constraint was not specified
in user script.

- Removed extra '\\n\\r' from end of all iobub msg requests and
responses. No longer needed since msgpack is sole encoding/compression
source.

- Added forced greenlet yield to next greenlet even if current greenlet
is polled and poll duration >= polling interval. Will make no difference
on fast computers but may make iohub Server more responsive on slower
computers.

- Added logic in variableProvider class which determines longest string
in all possible values for a string condition variable and uses that as
the max str length for the trial condition table in the ioDataStore hdf5
file.
"
f38ed781e63b9f2a08990a68c6af5f78faeb4804,psychopy/psychopy,"RF: misc style refinements & clean-up
"
8df67f8ace33331a05a97e898b9edc8ea24c2857,psychopy/psychopy,"Merge branch 'projects-refactor' into 'master'

Pavlovia projects now synchronising

See merge request psychopy/psychopy!9"
2ebb9fe9e1ba581d8210b17ec5ce55fbc670cc52,psychopy/psychopy,"RF: reduced code redundancy for visual logging by making a logAttrib tool.
"
960dce3311231d08c7fb94d8357c7abab0def4bd,psychopy/psychopy,"RF: Builder components in prep for localization work

- main aim: separate display values (hints, labels) from logic/function
  use _localized dict: keys=for logic, values=for display
- consistently inherit from BaseVisual (or VisualComponent, KeyboardComponent)
- move start/stop into BaseVisual
- remove some duplicated code
- a couple small bug-fixes along the way
- standardize hint messages
- make a migration-assist tool (x.py) to compare all param attribs, hints, etc before vs after refactoring
  (could become part of the standard test-suite with minor work)
"
5ec6ba1a6eca232e3427ea77309f9d1fc6ee9034,remomueller/slice,"Improved consistency of internal data model, renamed Sheet and Grid `response` to `value`, closes #540.
"
6ddb6ff95ad34838d27cd1064ac1184ec2146da9,remomueller/slice,"Updated syntax for calling partials and passing variables, addresses #252.

Started rewriting most views using haml
"
fb197abad3319dbf4a00aaf12696600b0bee1ddb,rentpath/react-ui,"feat(Hybrid Map): add classname for mobile map listing for active and inactive

affects: @rentpath/react-ui-ag, @rentpath/react-ui-core

[Story](https://rentpath.leankit.com/card/615319754)

* change prioritizeCardClick to isActive
* add active/inactive classname based on isActive
* mobile map cta buttons no longer show with no text provided
* added inactive prop to ToggleButton
* pass !isActive to inactive in ToggleButton for favorite for mobile map listing
* added separate favorite toggle button handler to pass toggle value through
"
d0047196a06415286c1f3f8be63d6750f189515c,rentpath/react-ui,"theme cleanup
"
8d7631bb0332cc8467de71a112d4084d3efb7aae,scoophealth/oscar,"Merge ""Removed code in portugese. Hope it's not used :)"""
2110a8eeacfc88b2dda4be633317c318c3022733,scoophealth/oscar,"remove unused library

Change-Id: Idc0d5a43d90f6d654ff0def20595fb1f36092290
"
ebf9e943de13b7ae4a3cf4a27a2463da3af56580,scoophealth/oscar,"Merge ""Code Cleanup: Random SQL to JPA + some brazil code removal"""
146a86e33569fb053e8825d44273a1bb3c0d54b0,scoophealth/oscar,"Code Cleanup: Inserts/Updates/Deletes to JPA
"
a7cd3e275f0926a0738f05e79f66a2c7c34e9a04,scoophealth/oscar,"convert prescription to JPA and fix some code access and add updatedate


Change-Id: Ie13aaa6d10e2ef78d2e2da88fb349e08ac964355
"
5a5cddb6b197c437db2e9d012f82d80007e47e7d,scoophealth/oscar,"Merge ""CAISI Waitlist Project: Cleanup 3"""
4a91f47fb5cdacb756dec7c92e13ed349ab31428,sdl/Sdl-Community,"- minor refactoring - renaming files to convention
"
aa6ba04082525818c3052e4283d7c285f4679669,seek4science/seek,"fix long standing issue, and renamed Project and Institution name to title, for consistency and to allow code to be reused more easily
"
f17b91ef76023eca2f68fcf72831957dbcf706f9,seek4science/seek,"OPSK-1046 Extracted samples inherit data file's policy
"
7e99098ba576c843fd8518ff2eb5965309e8c008,seek4science/seek,"Renamed various instances of ""admins"" to ""admin"". Enabled breadcrumbs in admin section
"
86326a2fd502c41c001b1b40225768a1b19203bd,seek4science/seek,"moved registration_form action to correct controller
"
d9daadc83231365278386e39b348f171433d05f6,seek4science/seek,"Refactored favourites system. Now uses JQuery UI
"
86f6f42813def52d476bbc55e511967f311ac51d,seek4science/seek,"make individual model file downloadable
"
bc9feaf5fe400c3e79ceb71ffa7d8d2038a9cd49,seek4science/seek,"renamed the tabnav css elements to more appropriate menutabs, and removed some old definitions and partial for the old menus
"
81d0a976e1be3a4497618c2c87029afa9c278707,seek4science/seek,"sergejs pre-christmas improvements
"
2a102660b756b2385962fe42d37f106b47cfa057,shopware/shopware,"SW-12939 - Remove Deprecated  tpushDoctrine FileCacheReader
"
551c9b965384675f153787ef78c9c83231930440,shopware/shopware,"SW-9158 - Remove sSystem unused variables
"
0b7525e5e493da818adedc3e22f44e29bf55dd04,shopware/shopware,"SW-20709 - removed unnecessary call arguments
removed unnecessary call arguments which are the same as the default of the called method or function
fixes #1430
"
2d34d03ef1e9ad5a9459e7cc0fe5c62d4bbc09a7,shopware/shopware,"Merge pull request #1172 in SW/shopware from feature/next/responsive/sw-7892-newsletter-signup-all-devices to next

* commit '119375185b0fa37068931d392157b40771089ca9':
  SW-7892 Fixed: Regressions
  SW-7892 Housekeeping
  SW-7892 Fixed: Zipcode field attributes for international use
  SW-7892 Fixed: Regressions
  SW-7892 Fixed: Regressions
  SW-7892 Housekepping
  SW-7892 Fixed: Regressions
  SW-7892 Fixed: Zipcode field length in mobile view
  SW-7892 Housekeeping
  SW-7892 Fixed: Regressions
  SW-7892 Fixed: Styling of the newsletter in the footer
  SW-7892 Added: Newsletter jQuery Plugin
  SW-7892 Fixed: Regressions
  SW-7892 Added: CSS styling for all devices
  SW-7892 Added: Block elements, new snippets and new global input styling
  SW-7892 Refactored: HTML
"
fbe10fcceb1b14efbdf79d01829bc1420dc9bd11,shopware/shopware,"Merge remote-tracking branch 'upstream/5.5' into remove-unused-parameter-address-form-type
"
a78026cdfb05629924e627d8d2176cffed8f8a70,shopware/shopware,"Merge pull request #1630 in SW/shopware from feature/next/sw-9354-detail-dp-2 to next

* commit '31542ca1bef1e604bf9ddd591a66b441f805d424':
  SW-9354 - Renamed class tab-menu--crossselling to tab-menu--cross-selling - Added blocks - Added docs into upgrade.md
  SW-9354 - reverted som changes - added blocks - added docs
  SW-9354 - Refactored the scroll plugin - Fixed a wrong template name when including - Some small design tweaks on the detail page - When clicking on the rating, the page will scroll down to the rating section - added docs
  SW-9354 - tables now have a 1px spacing globally
  SW-9354 - Refactored Detail page
"
75b22332b38cce82c6392449e56883c47a74df07,shopware/shopware,"SW-7865 Refactored: Login panel html and splitted content into columns
"
4f77d220d8a346691c61de5848e0aec8ac0813b9,shopware/shopware,"Merge pull request #785 in SW/shopware from bugfix/master/sw-7760-remove-unused-class to master

* commit '711d6c46609450f3a1783679bd3640b57a7a3c83':
  SW-7760 - Remove unused class Shopware_Components_Subscriber.
"
0c3d9e055a21302c61afecfddece4025a1a3a3e7,shopware/shopware,"Merge pull request #3975 in SW/shopware from rebase-52 to 5.3

* commit 'ee351931ee79a23150f5feca99e9f0e6fb7accc2': (49 commits)
  SW-15888 - Add notifyUntil events for surcharge percent and discount
  SW-15888 - Add notifyUntil event to sBasket::insertSurcharge
  SW-15887 - fix wrong ids for variant-radios Fixes https://github.com/shopware/shopware/pull/604
  SW-15886 - Use ID auf authenticated user as fallback 'userId' when creating media using REST API
  SW-15882 - Improve price group activate validation
  SW-15879 - add order attributes join to order api resource fixes https://github.com/shopware/shopware/pull/628
  SW-15877 - Add block for advanced menu teaser. Fixes https://github.com/shopware/shopware/pull/633
  SW-12294 - Optimize listing prices for products with price group graduations
  SW-12285 - Removed unused shipping free configuration in country form
  SW-15258 - Add filter events to all convert functions in LegacyStructConverter
  SW-15729 - Fix detail page base price definition
  SW-15937 - Fix SEO URL generation tests
  SW-15937 - Remove SEO rule which replaces forward slashes
  SW-15780 - Fix IonCube detection
  SW-15881 - Fixed wrong position of back ticks
  SW-15893 - Removed double occurence of ""leaf""-field Fixes https://github.com/shopware/shopware/pull/593
  SW-15881 - Add backticks in SELECT statement when a customer group contains special characters, especially a minus ""-"" this query will break due to invalid syntax. The backticks should prevent this from happening.
  SW-15127 - Change visibility of sAdmin::loginUser to protected to allow hook extensions Closes https://github.com/shopware/shopware/pull/467
  Add version 5.2.5 to UPGRADE.md
  SW-15892 - Fix shop selection when adding a payment When selecting one or more shops in the creation process of a payment option resulted in an error.
  ...
"
613babbe5ba68107ce5c75cef19372841e2233de,shopware/shopware,"SW-8952 - Deprecate s_core_multilanguage and remove reads
"
2e46919250befd37979c98fc273d37a987dbb355,shopware/shopware,"Merge pull request #1153 in SW/shopware from feature/next/responsive/sw-8675-js-selectbox-replacement to feature/next/responsive-template

* commit '931e6214319a09596bb229dec54bf2e8bab2466a':
  SW-8675 Fixed: Missing parent selector
  SW-8675 Fixed: Alignment of the select box replacement for the birthday selection in the registration
  SW-8675 Fixed: Safari has an issue with small ""rem"" values, so we need to set the trigger size using ""px"" values
  SW-8675 Added: Focus style for the select box replacement
  SW-8675 Removed: Debug code
  SW-8675 Refactored: The register plugin now works with the select field replacement
  SW-8495 Fixed: ```setError``` and ```removeError``` now works as excepted
  SW-8675 Refactored: The listing was refactored to match the new selectbox replacement
  SW-8675 Refactored: Added additional class attribute for styling purpose
  SW-8675 Fixed: The width of the arrow
  SW-8675 Refactored: Removed the automatic submitting of the underlying form element
  SW-8675 Refactored: Added custom styling for the select box replacement and added compability mode
  SW-8675 Added: A bunch of helper methods like ```val()```, ```show()```, ```hide()``` or ```setError()``` + the associated styling
  SW-8675 Added: Missing ```required``` attribute for the customer type
  SW-8675 Housekeeping: Fix typo
  SW-8675 Added: jQuery selectbox replacement plugin
"
10ee7253a60fd7f6892179f79b70f5038e8750b8,shopware/shopware,"Merge pull request #1681 in SW/shopware from bugfix/next/sw-9469-firefox-workaround to next

* commit '7f91a405b306c7e4b188c2f226c0d3645bc88d63':
  SW-9469 Fixed last seen products
  SW-9469 Fixed premium product slider
  SW-9469 Optimized styling of slider product box
  SW-9469 Fixed premium products
  SW-9469 Fixed slider behaviour in tab content
  SW-9469 Removed scrollbars of product slider in firefox
  SW-9469 Added browser detection to statemanager
"
0d1ab267b9939e7ab4ae0b3e987b8fb49f0673fe,shopware/shopware,"Merge pull request #7198 in SW/shopware from ntr/5.5/rename-article-to-product to 5.5

* commit '557b9b8bda76ebfcb738ed2975e0f5164907e198':
  NTR - Rename article occurences in sArticles core class
  NTR - Rename article occurences in sBasket core class
  NTR - Rename article occurences in Core classes
  NTR - Rename article occurences in widgets controller
  NTR - Rename article occurences in frontend controller
  NTR - Rename article occurences in backend controller
  NTR - Rename article occurences in API controller
  NTR - Rename article occurences in Components
  NTR - Rename article occurences in API resources
  NTR - Rename article occurences in Variant API resource
  NTR - Rename article occurences in Article API resource
  NTR - Rename article occurences in Commands
  NTR - Rename article occurences in Bundles
"
8f7411913aee03449cf2d51d2f454d20be244b22,shopware/shopware,"SW-8874 Refactored: The off canvas menu don't need to be moved in the DOM anymore
"
100507f17dadf451f1844f9efc5764a6963d0baf,shopware/shopware,"SW-9273 - Remove unused template files and controller actions
"
b7a0b4d0a94e3de4884678b96722b544aa5e7b0f,tensorflow/minigo,"Minigui (#148)


* Initial commit of Minigui.

* Rename a variable I foolishly named ""console"" :/

* Addressing review comments
"
0cabbeb7362c3f1742a9a122aaaaa2942b4301b8,tensorflow/minigo,"Clean up SGF parsing & handle escaped sequences (#563)


"
6c40af5415eb9c7270d1f5c8aa347ef532edf72c,tensorflow/minigo,"Clean up entrypoint flags / env variables
"
4dc1080d5f302df94634694bba71b402b8b20750,tensorflow/models,"Fix/ncf mlperf tweaks: robustness and determinism (#5334)

* bug fixes and add seed

* more random corrections

* make cleanup more robust

* return cleanup fn

* delint and address PR comments.

* delint and fix tests

* delinting is never done

* add pipeline hashing

* delint
"
b8318fd37b647ffe931d6a9d44d149550243c7ea,tensorflow/models,"Merges TPU-TC optimizations into HEAD. (#5635)

* Merges TPU-TC optimizations into HEAD.

* Split a line that went over 80 from a tab.

* Remove trailing whitespace.
"
83f5a2199c88938a42c85b0d487a11891b4de825,wrohdewald/Gpxity,"rename Activity to Track
"
42053d57a8366e7726a2cce22314f5f9c402a1fa,wrohdewald/Gpxity,"Rename Track.what to Track.category
"
14f6e8ac46773311a114d7edc178833d41ea6a99,wwmm/pulseeffects,"improved log output. New effects order. Code refactoring
"
fc66ea63cc280a9a16f4004b2a6667626ead3112,wwmm/pulseeffects,"code refactoring
"
ff9b7826741f5aa437f1e20df025d0ffa3daf7e3,COMBINE-lab/salmon,"cosmetic enhancements; improvements to fetching script
"
f41c7f40ae1ce69a1496615500f51203475c3778,GNOME/dconf-editor,"Rework how path is updated.
"
c56b4b813fce760b5e6dd307e6dbbf63b3391c5e,GrottoPress/jentil,"renamed abstract class filenames with a 'Abstract' prefix
"
1b5e35312da5d9b0e1fc8cfab0947d35ca886fb0,GrottoPress/jentil,"renamed scss variables: added jentil- prefix
"
546504a88abc54286d4651068bd912a198458727,LLK/scratch-blocks,"Merge remote-tracking branch 'upstream/develop' into cleanup/mainWorkspaceMetrics
"
ca3275eaf07388a67a1e06f7915e7930f6aa16c9,LLK/scratch-blocks,"Merge google/develop June 22 (#441)

* Localisation updates from https://translatewiki.net.

* test page that creates random blocks and randomly drags them around the page

* Localisation updates from https://translatewiki.net.

* add missing return in fake drag

* get rid of drag_tests file:

* Generated JS helper functions should be camelCase.

Complying with Google style guide.

* Localisation updates from https://translatewiki.net.

* Fix extra category error. Clean up code, rename variables, reduce line lengths, fix lint issues.

* Remove claim that good.string.quote should be used.

* Change the blockly workspace resizing strategy. (#386)

* Add a new method to be called when the contents of the workspace change and
the scrollbars need to be adjusted but the the chrome (trash, toolbox, etc)
are expected to stay in the same place.

Change a bunch of calls to svgResize to either be removed or call the new
method instead.  This is a nice performance win since the offsetHeight/Width
call in svgResize can be expensive, especially when called as often as we do -
there was some layout thrashing.

This also paves the way for moving calls to recordDeleteAreas
(which is also expensive) to a more cacheable spot than on every
mouse down/touch event.

of things (namely the scrollbars)

* Fix size of graph demo when it first loads by calling svgResize.
The graph starts with fixed width and was relying on a resize event
to fire (which I believe was removed in commit
217c681b86b0f2df76c479c9efae62e6e).

* Fix the resizing of the code demo.  The demo's tab min-width used to
match the toolbox's width was only being set on a resize event, but
commit 217c681b86b0f2df76c479c9efae62e6e changed how that worked.

* Fix up some comments.

* Use specific workspaces rather than Blockly.getMainWorkspace().

* Make workspace required for resizeSvgContents and update
some calls to send real workspaces rather than ones that are
null.

Remove the private tag on terminateDrag_ because it is only
actually called from outside the BlockSvg object.

* Remove a rogue period.

* Recategorize BlockSvg.terminateDrag_ to @package instead of @private so that
other developers don't use it, but it still can be used by other Blockly classes.

* Add a TODO to fix issue #307.

* Add @package to workspace resizeContents.

* Routine recompile

* Fix unit tests.

* Fix inheritance on rendered connection.

Closure compiler on maximum compression breaks badly due to lack of
@extends attribute.

* Add toolbox location and toolbox mode options to playground.

* Increase commonality between playgrounds.

* Properly deal with shadow statement blocks in stacks.

* Localisation updates from https://translatewiki.net.

* Use a comment block for function comments in generated JS, Python and Dart.

* Fix typo in flyout.js (#403)

* Fix typo in flyout.js (#402)

* Line wrap comments in generated code.

* Remove reference to undefined variable (#413)

REASON_MUST_DISCONNECT was removed by a refactor in 2a1ffa1.

* Fix airstrike by grabbing the correct toolbox element. (#411)

Probably broken in 266e2ffa9a017d21d7ca2f151730d6ecfcecf173.

* Localisation updates from https://translatewiki.net.

* Fix issue #406 by calling resize from the keypress handler on text inputs. (#408)

* Remove shadow blocks from Accessible Blockly demo. Update README.

* Generate for loops on one line.

* Introduce a common translation pipe; remove local stringMap attributes. Fix variable name error in paste functions. Minor linting.

* Fix precedence on isIndex blocks.

* Add indexing setting for JavaScript Generation (#419)

Adding setting to allow for switching between zero and one based indexing for Blockly Blocks such that the generated code will use this flag to determine whether one based or zero based indexing should be used. One based indexing is enabled by default.

* Remove unused functions and dependencies.

* Remove the unnecessary construction of new services.

* Fix sort block in JS to satisfy tests.

* Trigger a contents resize in block's moveBy. (#422)

This fixes #420 but and it also fixes some other similar problems
with copy/paste and other users of moveBy.

* Consolidate the usages of the 'blockly-disabled' label.

* Fix error when undoing a shadow block replacement.  Issue #415.

* Unify setActiveDesc() and updateSelectedNode() in the TreeService. Move function calls made directly within the template to the correct hooks.

* Standardize naming of components.

* Prevent collisions between user functions and helper functions.

* Localisation updates from https://translatewiki.net.

* Fix #425. Attash the resize handler to the workspace so it can be removed (#429)

when workspace.dispose() is called.

* Change the TreeService to a singleton.

* Remove unneeded generated parens around function calls in indexOf blocks.

* Fix #423 by calling workspace's resize when the flyout reflows. (#430)

* Updating URLs to reflect new docs. (#418)

* Updating URLs to reflect new docs. Removing -blockly in URLs.

* Rebuilt.

* Routine recompile

* Prevent selected block from ending up underneath a bumped block.

* Fix undo on fields with validators with side effects.

* Don't fire change event on fields that haven't been named yet.

* Localisation updates from https://translatewiki.net.

* Fix tree focus issues.

* Fix remaining focus issues on block deletion.

* cache delete areas instead of recalculating them onMouseDown

* Cache screen CTM for performance improvement.

* Call svgResizeContents from block_svg's dipose so that deleting blocks (#434)

from the context menu (or anywhere really) causes the workspace to
recalculate its size.
Remove the call to svgResizeContents from onMouseUp's logic for
determining whether the block is being dropped in the trash
since it calls dispose.

One side effect of this is that when you delete multiple blocks
resize gets called for each of them and the scrollbars move during
the operation. This is most obviously seen by doing an airstrike
in the playground and then deleting all the blocks at once.

* Allow terminal blocks to replace other terminal blocks (#433)

* Allow terminal blocks to replace other terminal blocks

* Updated test to allow replacing terminal blocks

* Refactor how activeDescendant is set. Introduce helper functions to ensure that calls like pasteAbove() preserve the focus.

* Localisation updates from https://translatewiki.net.

* Remove unnecessary logging.

* Reduce unneeded parentheses in JS and Python.

* Start using field_number.

* Make it easy to disable unconnected blocks.

* Routine recompile.

* Check if matrix is null in mouseToSvg

* Remove js/ localizations pre-merge

* Fix change to block_render_svg

* Fix error in xml.js

* Playground merge

* Add simple toolboxes to playgrounds

* Fix flyout reference in events listener

* Move tokenizeIntepolation into Blockly.utils namespace.

* Use simpler message interpolation in Code demo.

* Create console stub for IE 9.

* Don't output blockId if not set (e.g., toolbox category event). (#443)

* Fix block in multi-playground

* Increase commonality between playgrounds.

# Conflicts:
#	tests/multi_playground.html
#	tests/playground.html

* Remove ""show flyouts"" button

* Recompile for merge June 22
"
ca2f0cacf41a8ed6e9fa4ad28e494ab03ffbd2e5,LLK/scratch-blocks,"Merge pull request #1213 from marisaleung/develop_modularizeRenameVariablePrompt

Modularize Rename Variable prompt and allow custom context menus for ‚Ä¶"
b4a5c2834c99f35fb31377197303f59034c40412,LLK/scratch-blocks,"Merge pull request #206 from trodi/type-data

improve type annotations"
20f99d4fad6a1a1ad3e09938411bca8f2407fde4,Sometrik/framework,"refactor, remove SHOW_MODAL and END_MODAL commands. Fixes #401
"
fb64e3744259c998dede0a6f06d5ef03bf9d22d5,Sometrik/framework,"refactor. Fixes #542
"
368a0c96cb36d6ea22bfc2de7adda44f6dc446c1,Symantec/Dominator,"Merge pull request #60 from rgooch/master

Major refactoring of lib/filesystem package to use generic inodes."
9c28ff83243c981b8f91e55e2943f179e6a0ffd4,ampproject/amphtml,"Add verify-error state and template to amp-form (#16881)

* Add verify-error state and template to amp-form

* Add verify and verify-error actions. Refactor actions a bit. Document.

* Factor out FormEvent

* Add validator logic. Integration tests. Refactor

* Consistently wait for templates to render before triggering action
"
affb9563152915435ed729d4cc6e121b2b970a37,ampproject/amphtml,"use translateX instead of left (#6841)

"
8a06609b2de7a9cdbb16baa9d32fd6414e354b98,ampproject/amphtml,"Split up variable substitutions in forms for POST submits (#7408)

"
0bfeaacc3b7d9ce4af796c957bd85fbeaa4fcd31,ampproject/amphtml,"A unified placeholder and fallback system for layout.
"
ffc3de9f900b3d46600cd5686cde2984a608e97a,ampproject/amphtml,"RFC: Separate the load phase of AMP into multiple chunks. (#5536)

The general idea is that AMP can be instructed to not block the UI thread during load phase for long if the document itself is not visible.

The change may be quite impactful. It does split up work into neat chunks (about 10-20ms on desktop, longer on mobile) instead of one 400ms+ block. I validated that the number of style recalc doesn't change when the experiment is off.

- Current doesn't change `amp-shadow`. That will come in a follow up CL, but might not make as much sense.
- With the experiment not active the only thing this should change is that the initialization now goes through a bunch of micro tasks. This should behave as before in browsers with native promises.

"
77571f6649392c3f56f870ee3a58865017d04304,ampproject/amphtml,"Merge pull request #439 from cramforce/optimize

Less aggressive loading of some resources"
ad4febbc7488f64255bc2da139abf9d54d47a9ee,ampproject/amphtml,"Merge pull request #881 from dvoytenko/vsyncfor

Reorg Vsync as a service. It's now necessary because it has deferred queues."
a90d484471aca45726070ba665265591c4ac2775,ampproject/amphtml,"Destroy embed before iframe is removed (#6575)

* Destroy embed before iframe is removed

* cleanup
"
78c92bf20b82f7c7f083276f5ed963c479a79379,ampproject/amphtml,"üèó Cleanup import statements (#18057)

* import cleanup

* Enforce line length in imports

* Comment

* fixes
"
30be15b22418aac585ad8fb2715465a1322c148a,ampproject/amphtml,"Validator rollup (#16937)

* cl/205110971 Convert value_regex/value_regex_casei

* cl/205124475 Rename allowed_protocol to protocol.

* cl/205178052 Rename DescendantTagList.allowed_tags

* cl/205267495 Add test to prevent [style] attribute

* cl/205269927 Rename CssSpec.allowed_declarations t

* cl/205274609 Revision bump for #16624

* cl/205289326 Revision bump for #16899

* Remove duplicated merge and fix lint errors.
"
6005d99d29f075b6818c9401f11aaf2c4ae87182,dan-cristian/haiot,"refactor graphs and webui modules
"
844811b403a57e544edeaf9f01b47da7165b8b53,dan-cristian/haiot,"refactoring and pi-face gpio support
"
0f7db836bbbac2376d3900afe23643375eccdb27,davidkpiano/xstate,"Refactor: resolveTransition
"
4172f803b6e06483d3e44690a3a63c995229ebc7,davidmerfield/Blot,"Major improvements to theme page, domain page
"
bbac525661c75248d06305d1fac309037aa44c5a,davidmerfield/Blot,"Major improvements to theme page, domain page
"
63ddc70fdd3579d4829ad4cc2086df8cecff8eab,digimezzo/Dopamine,"Simplified CheckCollectionAsync()
"
7aceed51e3e6cf1740c4316c57642c374bc3d58b,digimezzo/Dopamine,"More cleanup of unnecessary code and fixed the assembly version
"
690863186d3cc9c9738a5b3a1b7afae31753ab11,digimezzo/Dopamine,"More cleanup of Lastfm api
"
e40b6e77d77c3cb1dc9227ae943968a7991c2aa2,dwavesystems/dimod,"Refactor `vartype_argument` decorator

It now accepts a list of argument names which are to be constrained.
"
137dee9023f89c825c8d558cdaf71b8afc8df169,eirannejad/pyRevit,"Tags improvements

Added packages placeholder button
Improved Apply and Modify interface
Implemented ini safe modifier configs
Improved forms single value getter gui
Added template for package and tags configs"
935396c0f0f97df05f0e41af517abed22655fd20,emacs-mirror/emacs,"Rename leim/Makefile's BUILT_EMACS to EMACS

* leim/Makefile.in (EMACS): Rename from BUILT_EMACS.
(RUN_EMACS, compile-main): Update for this change.

* src/Makefile.in ($(leimdir)/leim-list.el):
Pass EMACS rather than BUILT_EMACS.
"
7e940b654669e8b1f4fc92ef541c165f68873248,emacs-mirror/emacs,"Update docs for window dividers and `window-text-pixel-size'.

* xdisp.c (Fwindow_text_pixel_size): Adjust doc-string.
* elisp.texi (Top): Rename section ""Width"" to ""Size of Displayed
Text"".
* text.texi (Primitive Indent):
* strings.texi (String Basics):
* sequences.texi (Sequence Functions): Update references
accordingly.
* display.texi (Size of Displayed Text): Rename section from
""Width"".  Add description for `window-text-pixel-size'.
(Window Dividers): Reword description of window dividers.
* frames.texi (Layout Parameters): Improve description of window
divider parameters.
* windows.texi (Window Sizes): Add descriptions of
`window-mode-line-height' and `window-header-line-height'.
(Coordinates and Windows): Mention window dividers.
"
7b5290da89e927ba01ac51e1eaaffd828503285f,emacs-mirror/emacs,"Tramp diagnostics as per ‚Äòtext-quoting-style‚Äô

* lisp/net/tramp-adb.el (tramp-adb-handle-file-truename)
(tramp-adb-get-ls-command, tramp-adb-handle-make-directory)
(tramp-adb-handle-delete-directory)
(tramp-adb-handle-delete-file)
(tramp-adb-handle-file-local-copy)
(tramp-adb-handle-write-region, tramp-adb-handle-copy-file)
(tramp-adb-send-command-and-check, tramp-adb-wait-for-output)
(tramp-adb-maybe-open-connection):
* lisp/net/tramp-cache.el:
* lisp/net/tramp-compat.el (tramp-compat-temporary-file-directory)
(tramp-compat-octal-to-decimal)
(tramp-compat-coding-system-change-eol-conversion):
* lisp/net/tramp-gvfs.el (tramp-gvfs-file-name-handler)
(tramp-gvfs-do-copy-or-rename-file)
(tramp-gvfs-handle-delete-directory)
(tramp-gvfs-handle-delete-file)
(tramp-gvfs-handle-expand-file-name)
(tramp-gvfs-handle-file-local-copy)
(tramp-gvfs-handle-file-notify-add-watch)
(tramp-gvfs-handle-make-directory)
(tramp-gvfs-handle-write-region, tramp-gvfs-url-file-name):
* lisp/net/tramp-gw.el (tramp-gw-gw-proc-sentinel)
(tramp-gw-aux-proc-sentinel, tramp-gw-open-connection):
* lisp/net/tramp-sh.el (tramp-sh-handle-file-truename)
(tramp-sh-handle-set-visited-file-modtime)
(tramp-sh-handle-set-file-modes)
(tramp-sh-handle-file-name-all-completions)
(tramp-sh-handle-add-name-to-file, tramp-do-copy-or-rename-file)
(tramp-do-copy-or-rename-file-directly)
(tramp-do-copy-or-rename-file-out-of-band)
(tramp-sh-handle-make-directory)
(tramp-sh-handle-delete-directory, tramp-sh-handle-delete-file)
(tramp-sh-handle-insert-directory, tramp-process-sentinel)
(tramp-sh-handle-start-file-process)
(tramp-sh-handle-file-local-copy)
(tramp-sh-handle-write-region, tramp-sh-handle-vc-registered)
(tramp-sh-handle-file-notify-add-watch, tramp-maybe-send-script)
(tramp-find-file-exists-command, tramp-open-shell)
(tramp-find-shell)
(tramp-open-connection-setup-interactive-shell)
(tramp-find-inline-encoding, tramp-find-inline-compress)
(tramp-compute-multi-hops, tramp-maybe-open-connection)
(tramp-wait-for-output, tramp-send-command-and-check)
(tramp-send-command-and-read, tramp-get-remote-path)
(tramp-get-ls-command, tramp-get-ls-command-with-dired)
(tramp-get-ls-command-with-quoting-style)
(tramp-get-test-command, tramp-get-remote-ln)
(tramp-get-remote-perl, tramp-get-remote-stat)
(tramp-get-remote-readlink, tramp-get-remote-trash)
(tramp-get-remote-touch, tramp-get-remote-gvfs-monitor-dir)
(tramp-get-remote-inotifywait, tramp-get-remote-id)
(tramp-get-remote-python):
* lisp/net/tramp-smb.el (tramp-smb-errors)
(tramp-smb-handle-add-name-to-file, tramp-smb-handle-copy-file)
(tramp-smb-handle-delete-directory)
(tramp-smb-handle-delete-file)
(tramp-smb-handle-file-local-copy)
(tramp-smb-handle-make-directory)
(tramp-smb-handle-make-directory-internal)
(tramp-smb-handle-make-symbolic-link)
(tramp-smb-handle-rename-file, tramp-smb-handle-set-file-acl)
(tramp-smb-handle-set-file-modes)
(tramp-smb-handle-write-region, tramp-smb-get-file-entries):
* lisp/net/tramp.el (tramp-debug-message, tramp-error)
(tramp-process-actions):
Generate diagnostics according to ‚Äòtext-quoting-style‚Äô, by
using curved quotes in format strings and ‚Äòformat-message‚Äô
when appropriate.
* lisp/net/tramp-compat.el (format-message):
Define a replacement, if it‚Äôs an older version of Emacs
that doesn‚Äôt have it already.
"
4737362e43c22bb212c33667f0c264dc7772dc03,emacs-mirror/emacs,"Remove LD_SWITCH_X_SITE_AUX, which is no longer used

* configure.in (LD_SWITCH_X_SITE_AUX): Remove; no longer used.
* src/Makefile.in (LD_SWITCH_X_SITE_AUX): Remove; no longer used.
"
23ba2705e22b89154ef7cbb0595419732080b94c,emacs-mirror/emacs,"Make called-interactively-p work for edebug or advised code.
* lisp/subr.el (called-interactively-p-functions): New var.
(internal--called-interactively-p--get-frame): New macro.
(called-interactively-p, interactive-p): Rewrite in Lisp.
* lisp/emacs-lisp/nadvice.el (advice--called-interactively-skip): New fun.
(called-interactively-p-functions): Use it.
* lisp/emacs-lisp/edebug.el (edebug--called-interactively-skip): New fun.
(called-interactively-p-functions): Use it.
* lisp/allout.el (allout-called-interactively-p): Don't assume
called-interactively-p is a subr.
* src/eval.c (Finteractive_p, Fcalled_interactively_p, interactive_p): Remove.
(syms_of_eval): Remove corresponding defsubr.
* src/bytecode.c (exec_byte_code): `interactive-p' is now a Lisp function.
* test/automated/advice-tests.el (advice-tests--data): Remove.
(advice-tests): Move the tests directly here instead.
Add called-interactively-p tests.
"
a041960a7ca40a5af684efb3e859edd9daae907d,emacs-mirror/emacs,"Improve ralloc.c interface checking.

See http://lists.gnu.org/archive/html/emacs-devel/2011-12/msg00720.html
* buffer.c (ralloc_reset_variable, r_alloc, r_re_alloc)
(r_alloc_free) [REL_ALLOC]: Move decls from here ...
* lisp.h (r_alloc, r_alloc_free, r_re_alloc, r_alloc_reset_variable)
[REL_ALLOC]: ... to here, to check interface.
* m/ia64.h (r_alloc, r_alloc_free) [REL_ALLOC && !_MALLOC_INTERNAL]:
Remove decls.  This fixes an ""It stinks!"".
"
87e67904f15fda542426c9159c95a19142aecbad,emacs-mirror/emacs,"Started work on string reordering.  Just compiled, not yet tested.

 src/bidi.c (bidi_paragraph_info): Delete unused struct.
 (bidi_cache_idx, bidi_cache_last_idx): Declare EMACS_INT.
 (bidi_cache_start): New variable.
 (bidi_cache_reset): Reset bidi_cache_idx to bidi_cache_start, not
 to zero.
 (bidi_cache_fetch_state, bidi_cache_search)
 (bidi_cache_find_level_change, bidi_cache_iterator_state)
 (bidi_cache_find, bidi_peek_at_next_level)
 (bidi_level_of_next_char, bidi_find_other_level_edge)
 (bidi_move_to_visually_next): Compare cache index with
 bidi_cache_start rather than with zero.
 (bidi_fetch_char): Accept new argument STRING; all callers
 changed.  Support iteration over a string.
 (bidi_paragraph_init, bidi_resolve_explicit_1)
 (bidi_resolve_explicit, bidi_resolve_weak)
 (bidi_level_of_next_char, bidi_move_to_visually_next): Support
 iteration over a string.
 (bidi_set_sor_type, bidi_resolve_explicit_1)
 (bidi_resolve_explicit, bidi_type_of_next_char): ignore_bn_limit
 can now be zero (for strings); special values 0 and -1 were
 changed to -1 and -2, respectively.
 (bidi_char_at_pos): New function.
 (bidi_paragraph_init, bidi_resolve_explicit, bidi_resolve_weak):
 Call it instead of FETCH_MULTIBYTE_CHAR.
 (bidi_move_to_visually_next): Abort if charpos or bytepos were not
 initialized to valid values.
 (bidi_init_it): Don't initialize charpos and bytepos with invalid
 values.
 src/xdisp.c (compute_display_string_pos)
 (compute_display_string_end): Accept additional argument STRING.
 (init_iterator, reseat_1): Initialize bidi_it->string.s to NULL.
 (reseat_to_string): Initialize bidi_it->string.s and
 bidi_it->string.schars.
 src/dispextern.h (struct bidi_string_data): New structure.
 (struct bidi_it): New member `string'.  Make flag members be 1-bit
 fields, and put them last in the struct.
 (compute_display_string_pos, compute_display_string_end): Update
 prototypes.
"
27cada035a79b633e856a437dd0e037acc1d61c6,emacs-mirror/emacs,"Move backtrace to ELisp using a new mapbacktrace primitive

* src/eval.c (get_backtrace_starting_at, backtrace_frame_apply)
(Fmapbacktrace, Fbacktrace_frame_internal): New functions.
(get_backtrace_frame, Fbacktrace_debug): Use `get_backtrace_starting_at'.

* lisp/subr.el (backtrace--print-frame): New function.
(backtrace): Reimplement using `backtrace--print-frame' and `mapbacktrace'.
(backtrace-frame): Reimplement using `backtrace-frame--internal'.

* lisp/emacs-lisp/debug.el (debugger-setup-buffer): Pass a base to
`mapbacktrace' instead of searching for ""(debug"" in the output of
`backtrace'.

* test/lisp/subr-tests.el (subr-test-backtrace-simple-tests)
(subr-test-backtrace-integration-test): New tests.

* doc/lispref/debugging.texi (Internals of Debugger): Document
`mapbacktrace' and missing argument BASE of `backtrace-frame'.
"
06485aa8215af39f9f5f999933aa39d349a2bdf9,emacs-mirror/emacs,"* src/doc.c (get_doc_string): Don't signal an error if the file is missing.
* lisp/help-fns.el (describe-variable, describe-function-1):
* lisp/help-mode.el (help-make-xrefs): Remove error handler, made unneeded.
"
9c23779a9d8474af16cfadb1a08d2c05ececcbec,emacs-mirror/emacs,"Use bits_word for gcmarkbits.

* alloc.c (struct cons_block, struct float_block): On 64-bit hosts,
bits_word is typically a tad more efficient for mark bits than
unsigned is, so use bits_word.  All uses changed.
* lisp.h (BITS_PER_INT): Remove; no longer used.
"
6d26bbb23ef6751cfcd7066c4d4006ec18408449,emacs-mirror/emacs,"Finish debugging of cursor motion in bidi-reordered lines.

 xdisp.c (try_cursor_movement): Fix the logic.  Rewrite the loop
 over continuation lines in bidi-reordered buffers.  Return
 CURSOR_MOVEMENT_MUST_SCROLL upon failure to find a suitable row,
 rather than CURSOR_MOVEMENT_CANNOT_BE_USED.
"
123ddec7f807f4bd7400bbbe08219afb02269c00,emacs-mirror/emacs,"Simplify use of current-time and friends.

* doc/misc/org.texi (Dynamic blocks):
* lisp/allout-widgets.el (allout-widgets-hook-error-handler):
* lisp/calendar/appt.el (appt-display-message):
* lisp/calendar/icalendar.el (icalendar--convert-float-to-ical):
* lisp/calendar/timeclock.el (timeclock-in, timeclock-when-to-leave)
(timeclock-last-period, timeclock-day-base):
* lisp/eshell/em-ls.el (eshell-ls-file):
* lisp/eshell/esh-util.el (eshell-parse-ange-ls):
* lisp/generic-x.el (named-database-print-serial):
* lisp/net/newst-backend.el (newsticker--get-news-by-url-callback)
(newsticker-get-news, newsticker--sentinel-work)
(newsticker--image-get, newsticker--image-sentinel):
* lisp/net/tramp-sh.el (tramp-get-remote-touch):
* lisp/progmodes/opascal.el (opascal-debug-log):
* lisp/textmodes/remember.el (remember-mail-date)
(remember-store-in-files):
* lisp/vc/vc-annotate.el (vc-annotate-display-autoscale)
(vc-default-annotate-current-time):
* lisp/vc/vc-bzr.el (vc-bzr-shelve-snapshot):
* lisp/vc/vc-cvs.el (vc-cvs-annotate-current-time):
* lisp/vc/vc-rcs.el (vc-rcs-annotate-current-time):
* lisp/url/url-util.el (url-get-normalized-date):
* lisp/erc/erc-backend.el (TOPIC):
* lisp/gnus/gnus-delay.el (gnus-delay-article):
* lisp/gnus/gnus-sum.el (gnus-summary-read-document):
* lisp/gnus/gnus-util.el (gnus-seconds-today, gnus-seconds-month):
* lisp/gnus/message.el (message-make-expires-date):
* lisp/org/org-archive.el (org-archive-subtree)
(org-archive-to-archive-sibling):
* lisp/org/org-clock.el (org-resolve-clocks, org-clock-get-sum-start)
(org-clock-special-range):
* lisp/org/org-timer.el (org-timer-seconds):
* lisp/org/org.el (org-read-date-analyze, org-get-cursor-date):
* lisp/org/ox-html.el (org-html-format-spec):
* lisp/org/ox-icalendar.el (org-icalendar--vtodo):
Omit unnecessary call to current-time.
* lisp/calendar/time-date.el (time-to-seconds) [!float-time]:
* lisp/calendar/timeclock.el (timeclock-time-to-date):
* lisp/vc/vc-annotate.el (vc-annotate-convert-time):
Use current time if arg is nil, to be compatible with float-time.
(time-date--day-in-year): New function, with most of the guts of
the old time-to-day-in-year.
(time-to-day-in-year): Use it.
(time-to-days): Use it, to avoid decoding the same time stamp twice.
* lisp/calendar/timeclock.el (timeclock-update-mode-line):
* lisp/cedet/srecode/args.el (srecode-semantic-handle-:time):
* lisp/gnus/gnus-util.el (gnus-seconds-year):
* lisp/org/org.el (org-get-cursor-date):
Don't call current-time twice to get the current time stamp,
as this can lead to inconsistent results.
* lisp/completion.el (cmpl-hours-since-origin):
* lisp/erc/erc.el (erc-emacs-time-to-erc-time):
* lisp/ido.el (ido-time-stamp):
* lisp/vc/vc-annotate.el (vc-annotate-convert-time):
Simplify by using float-time.
* lisp/completion.el (save-completions-to-file):
* lisp/url/url-cache.el (url-cache-prune-cache):
Rename local var to avoid confusion.
* lisp/gnus/gnus-util.el (gnus-float-time):
* lisp/net/rcirc.el (rcirc-float-time):
* lisp/org/org-compat.el (org-float-time):
Simplify to an alias because time-to-seconds now behaves like float-time
with respect to nil arg.
* lisp/subr.el (progress-reporter-do-update):
Don't call float-time unless needed.
* lisp/erc/erc.el (erc-current-time): Simplify by using erc-emacs-time-to-erc-time.
* lisp/org/org-clock.el (org-clock-get-table-data): Omit unnecessary, lossy
conversion from floating point to Emacs time and back.
(org-resolve-clocks): Prefer two-argument floor.
"
b6c2bfff02239197fc855c0575def855afab01c7,emacs-mirror/emacs,"* lisp/simple.el (command-execute): Move from C.  Add obsolete check.
(extended-command-history): Move from C.
* src/keyboard.c (Qcommand_execute): New var.
(command_loop_1, read_char): Use it.
(Fcommand_execute): Remove, replace by an Elisp implementation.
(syms_of_keyboard): Adjust accordingly.
"
d1f55f1668a70cc196509d11c7c92d22b1aa5ee7,emacs-mirror/emacs,"Rename inhibit_window_configuration_change_hook to inhibit_lisp_code.
This is a tweak to 2012-02-23T07:28:21Z!cyd@gnu.org, suggested by Stefan.

* eval.c (inhibit_lisp_code): Rename from
inhibit_window_configuration_change_hook; move from window.c.

* xfns.c (unwind_create_frame_1, Fx_create_frame):
* window.c (run_window_configuration_change_hook)
(syms_of_window): Callers changed.
"
67d3ffe4989e99079a69e1f7358b758c14cb519a,emacs-mirror/emacs,"* cedet/srecode/srt.el:
* cedet/srecode/compile.el:
* cedet/semantic/mru-bookmark.el:
* cedet/semantic/debug.el:
* cedet/semantic/complete.el:
* cedet/semantic/analyze.el: Require CL when compiling.

* cedet/semantic/scope.el
(semantic-analyze-scoped-inherited-tag-map): Wrap calculation of
tmpscope so that the regular scope will continue to work.

* cedet/semantic/idle.el (semantic-idle-tag-highlight): Use
semantic-idle-summary-highlight-face as the highlighting.

* emacs-lisp/eieio-base.el (eieio-persistent-save): If buffer
contains multibyte characters, choose first applicable coding
system automatically.

* cedet/ede/project-am.el (project-run-target): New method.
(project-run-target): New method.

* cedet/ede.el (ede-target): Add run target menu item.
(ede-project, ede-minor-keymap): Add ede-run-target binding.
(ede-run-target): New function.
(ede-target::project-run-target): New method.

* cedet/ede/proj.el (project-run-target): New method.

* cedet/ede/proj-shared.el (ede-gcc-libtool-shared-compiler)
(ede-g++-libtool-shared-compiler): Remove SHELL.  Remove COMMANDS.
Add :rules.
(ede-proj-target-makefile-shared-object): Only libtool compilers
now available.  Add linkers for libtool.
(ede-cc-linker-libtool, ede-g++-linker-libtool): New.
(ede-proj-makefile-target-name): Always use .la extension.

* cedet/ede/proj-prog.el (project-run-target): New method.

* cedet/ede/proj-obj.el (ede-cc-linker): Rename from
ede-gcc-linker.
(ede-g++-linker): Change Change link lines.

* cedet/ede/pmake.el (ede-pmake-insert-variable-shared): When
searching for old variables, go to the end of the buffer and
search backward from there.
(ede-proj-makefile-automake-insert-subdirs)
(ede-proj-makefile-automake-insert-extradist): New methods.
(ede-proj-makefile-create): Use them.

* cedet/ede/pconf.el (ede-proj-configure-test-required-file):
Force FILE to expand to the current target.  Use file-exists-p to
check that it exists.

* cedet/ede/linux.el (ede-linux-version): Don't call ""head"".
(ede-linux-load): Wrap dir in file-name-as-directory.  Set
:version slot.

* cedet/ede/files.el (ede-get-locator-object): When enabling
locate, do so on ""top"".

* cedet/ede/emacs.el (ede-emacs-file-existing): Wrap ""dir"" in
file-name-as-directory during compare.
(ede-emacs-version): Return Emacs/XEmacs differentiator.  Get
version number from different places.  Don't call egrep.
(ede-emacs-load): Set :version slot.  Call file-name-as-directory
to set the directory.

* cedet/ede/shell.el: New file.

* cedet/inversion.el (inversion-decoders): Allow for stray . in
alpha/beta variants.
"
bf41c46cd978f748e4f16a95c1de03f45d40b575,emacs-mirror/emacs,"(diary-hebrew-entry-symbol): Rename hebrew-diary-entry-symbol.
Keep old name as alias.
(diary-islamic-entry-symbol): Rename islamic-diary-entry-symbol.
Keep old name as alias.
(diary-bahai-entry-symbol): Rename bahai-diary-entry-symbol.
Keep old name as alias.
(hebrew-holidays-1, hebrew-holidays-2, hebrew-holidays-3)
(hebrew-holidays-4): Don't autoload obsolescence.
"
8bc53d00e3a4ffff5220adf51b269468fce8c931,emacs-mirror/emacs,"Fix unsafe use of alloca reported in bug #11138.

 src/w32menu.c (simple_dialog_show, add_menu_item): Use SAFE_ALLOCA
 instead of alloca.
"
9dec0f7642296c34dfd3700c6094808ce6ed289e,emacs-mirror/emacs,"Fix compilation of xmenu.c and unexcoff.c, clean up MSDOS source files.

 unexcoff.c: Remove the parts used when ""emacs"" is not defined.
 (report_error, report_error_1): Ditto.
 (write_segment): Remove ""#if 0"" unused code.
 (make_hdr): Remove code that was ""#ifndef NO_REMAP"" before
 NO_REMAP was removed (in 2010-07-29T03:25:08Z!dann@ics.uci.edu).
 (start_of_text): Remove unused function (was used only if NO_REMAP
 was NOT defined).
 msdos.c (IT_set_face): Fix format string to match argument
 types.
 (IT_write_glyphs, IT_note_mode_line_highlight)
 (IT_set_frame_parameters): Remove unused variables.
 (x_set_menu_bar_lines): Declare set_menu_bar_lines.
 (IT_set_terminal_modes): Disambiguate expression in if clause.
 (Fmsdos_remember_default_colors): Return Qnil.
 (IT_set_frame_parameters): Add parens to disambiguate boolean
 expression for logging the cursor type to termscript.
 (keyboard_layout_list, keypad_translate_map)
 (grey_key_translate_map): Add braces in inner initializers.
 (dos_rawgetc): Add parens in condition for mouse-3 button-press.
 (dos_rawgetc): Remove unused label.
 (XMenuActivate): Add braces to remove ambiguous `else'.
 (dos_ttraw): Always return a value.
 (spawnve): Declare.
 (run_msdos_command): Cast 3rd arg of spawnve to ""char **"".
 dosfns.h (x_set_title): Declare.
 w16select.c (Fw16_set_clipboard_data, Fw16_get_clipboard_data):
 Remove unused variables.
 dosfns.c (Fint86, Fdos_memget, Fdos_memput): Remove unused
 variables.
 (init_dosfns): Declare get_lim_data.
 (system_process_attributes): Declare Fget_internal_run_time.
 xmenu.c (xmenu_show) [!USE_X_TOOLKIT && !USE_GTK]: Fix argument
 list to be consistent with menu.h.
"
656202640dc8857da0373ba690ea193394352ddb,emacs-mirror/emacs,"Redesign redisplay interface to drop global variable updated_window.
Always pass currently updated window as a parameter to update routines.
* dispextern.h (updated_window): Remove declaration.
(struct redisplay_interface): Pass window parameter to
write_glyphs, insert_glyphs, clear_end_of_line, cursor_to
and after_update_window_hook.
(x_write_glyphs, x_insert_glyphs, x_clear_end_of_line, x_cursor_to):
Adjust prototypes.
* dispnew.c (updated_window): Remove.
(redraw_overlapped_rows, update_marginal_area, update_text_area)
(update_window_line): Adjust to match redisplay interface changes.
* nsterm.m (ns_update_window_begin, ns_update_window_end)
(ns_scroll_run, ns_after_update_window_line):
* w32term.c (x_update_window_begin, x_update_window_end)
(x_after_update_window_line, x_scroll_run):
* xterm.c (x_update_window_begin, x_update_window_end)
(x_after_update_window_line, x_scroll_run):
* xdisp.c (x_write_glyphs, x_insert_glyphs, x_clear_end_of_line):
Likewise.  Adjust comments where appropriate.
(x_cursor_to): Simplify because this is always called during window
update (but install debugging check anyway).
(expose_window): Check must_be_updated_p flag to see whether this
function is called during window update.
"
13294f95172c68a5e77143f917231e0f17f37537,emacs-mirror/emacs,"Port to Solaris 8.

Without this change, 'configure' fails because the recently-added
wait3 prototype in config.h messes up later 'configure' tests.
Fix this problem by droping wait3 and WRETCODE, as they're
no longer needed on hosts that are current porting targets.
* configure.ac (wait3, WRETCODE): Remove, fixing a FIXME.
All uses changed to waitpid and WEXITSTATUS.
* src/syswait.h (WRETCODE): Remove, consistently with ../configure.ac.
"
389b76fa1b4e96b7da8896cea16d57403d76a947,emacs-mirror/emacs,"Merge changes made in Gnus trunk.

nnimap.el (nnimap-open-connection): Only send AUTHENTICATE PLAIN if LOGINDISABLED is set.
gnus.el (gnus-group-startup-message): Move point to the start of the buffer.
nndoc.el (nndoc-dissect-buffer): Reverse the order of the articles to reflect the order they're in in the digest.
gnus-sum.el (gnus-summary-select-article): Make `C-d' work reliably by checking whether the original article buffer is alive.
shr.el (shr-find-fill-point): Don't break lines between punctuation and non-punctuation (like after the apostrophe in ""'We"").
gnus-cite.el (gnus-article-fill-cited-article): Remove unused `force' parameter.
gnus-art.el (gnus-treatment-function-alist): Have gnus-treat-fill-long-lines point to gnus-article-fill-cited-long-lines.
gnus-art.el (gnus-treat-fill-long-lines): Change default to fill all text/plain sections.
gnus.el: Autoload gnus-article-fill-cited-long-lines.
gnus-art.el (gnus-mime-display-alternative): Actually pass the type on to `gnus-treat-article'.
gnus-sum.el (gnus-summary-show-article): Add `C-u C-u g' for showing the raw article, and change `C-u g' to show the article without doing treatments.
gnus.texi (Paging the Article): Document C-u g/C-u C-u g.
gnus-cite.el (gnus-article-foldable-buffer): Refactor out.
gnus-cite.el (gnus-article-foldable-buffer): Don't fold regions that have a ragged left edge.
gnus-cite.el (gnus-article-foldable-buffer): Skip past the prefix when determining raggedness.
gnus-srvr.el, nnir.el: Allow nnir searching for an entire server.
gnus-msg.el (gnus-configure-posting-styles): Permit the use of regular expression match and replace in posting styles.
gnus-art.el (gnus-treat-article): Only inhibit body washing, and leave the header washing to take place.
nnimap.el (nnimap-request-accept-article): Erase buffer before appending for easier debugging.
nnimap.el (nnimap-wait-for-connection): Take a regexp.
nnimap.el (nnimap-request-accept-article): Wait for the continuation line before sending anything unless we're streaming.
"
3029e594aee1fe24db6904bf6af2d145c3b32052,emacs-mirror/emacs,"(enable-local-variables, enable-local-eval)
(safe-local-variable-values, safe-local-eval-forms): Mark as risky in
the defcustoms.
(auto-mode-alist, ignored-local-variables)
(save-some-buffers-action-alist): Move risky declarations to the
definitions.
(dabbrev-case-fold-search, dabbrev-case-replace, display-time-string)
(font-lock-defaults, format-alist, imenu--index-alist)
(imenu-generic-expression, input-method-alist, minor-mode-alist)
(mode-line-buffer-identification, mode-line-client, mode-line-modes)
(mode-line-modified, mode-line-mule-info, mode-line-position)
(mode-line-process, mode-line-remote, outline-level)
(parse-time-rules, rmail-output-file-alist)
(special-display-buffer-names, vc-mode):
Move risky declarations to the relevant files.
"
3b7fab25046801a0451dbce5ccd65153e02c93f7,emacs-mirror/emacs,"* electric-tests.el (electric-pair-backspace-1): Replace deleted function.
"
b0dbf4c038d53ccce6ecf592c6d5b1ffcc084ad0,emacs-mirror/emacs,"Sync with Tramp repository

* doc/misc/tramp.texi (Configuration): Note, that Tramp must be
required prior changing its configuration.
(Connection caching, Predefined connection information)
(Remote shell setup): Fix typos.
(Predefined connection information): Describe, how to overwrite
parameters of `tramp-methods'.
(Remote programs, Remote processes, Traces and Profiles):
Simplify example.
(Remote programs): Remove superfluous comment.

* doc/misc/trampver.texi: Update release number.

* lisp/net/tramp-cache.el (tramp-connection-properties): Adapt docstring.

* lisp/net/tramp-gvfs.el (tramp-gvfs-do-copy-or-rename-file): New defun.
(tramp-gvfs-handle-copy-file, tramp-gvfs-handle-rename-file): Use it.
(tramp-gvfs-handle-make-directory): Reimplement PARENTS handling,
""gvfs-mkdir -p ..."" does not work robust.
(tramp-gvfs-maybe-open-connection): Adapt `tramp-get-method-parameter' call.

* lisp/net/tramp-sh.el (tramp-methods):
Add `tramp-remote-shell-login' parameter where it fits.
(tramp-get-remote-path): Use it.
(tramp-make-copy-program-file-name): Fix quoting for ""psftp"" method.
(all): Adapt `tramp-get-method-parameter' calls.

* lisp/net/tramp.el (tramp-methods): Adapt docstring.
(tramp-get-method-parameter): Replace argument METHOD by VEC.
Check also for hits in `tramp-connection-properties'.  Adapt docstring.
(tramp-get-remote-tmpdir): Cache only the local name of tmpdir.
(all): Adapt `tramp-get-method-parameter' calls.

* lisp/net/trampver.el Update release number.

* test/automated/tramp-tests.el (tramp--instrument-test-case):
Add ""^make-symbolic-link not supported$"" to `debug-ignored-errors'.
(tramp-test13-make-directory, tramp--test-adb-p)
(tramp--test-smb-or-windows-nt-p): Simplify.
(tramp--test-ftp-p, tramp--test-gvfs-p): New defuns.
(tramp--test-special-characters): Fix docstring.  Add gvfs and ftp tests.
(tramp--test-utf8): Fix docstring.
"
2fe4b1254dc0673e161e7aee6ef6f983af86289b,emacs-mirror/emacs,"Sync with Tramp 2.2.6-pre.

* net/tramp-cache.el (tramp-dump-connection-properties): Let-bind
  `print-length' and `print-level' to nil, in order to avoid
  truncation.  Reported by Christopher Schmidt
  <christopher@ristopher.com>.

* net/tramp-cmds.el (tramp-cleanup-connection): Delete also
process.

* net/tramp-compat.el (tramp-compat-condition-case-unless-debug):
New defmacro.
(tramp-compat-copy-directory): Add optional argument
COPY-CONTENTS.  It is not handled yet.

* net/tramp-ftp.el (tramp-disable-ange-ftp): Fix docstring.
(tramp-ftp-file-name-p): Simplify.

* net/tramp-gvfs.el (tramp-gvfs-handle-expand-file-name):
* net/tramp-gw.el (tramp-gw-open-connection): Add hop to
connection vector.

* net/tramp-sh.el (tramp-copy-size-limit): Fix docstring.
(tramp-methods): Do not use `tramp-password-end-of-line'.
(tramp-completion-function-alist-putty): Handle
UNIX case.
(tramp-remote-path): Add ""/opt/bin"", ""/opt/sbin""
and ""/opt/local/bin"".
(tramp-do-file-attributes-with-stat)
(tramp-do-directory-files-and-attributes-with-stat)
Return uid and gid as real numbers.  They could run out of
integer range on cygwin.
(tramp-do-copy-or-rename-file-out-of-band): Better
trace format.
(tramp-sh-handle-expand-file-name): Handle hops.
(tramp-open-connection-setup-interactive-shell):
Use `tramp-cleanup'.  Move check for busyboxes ...
(tramp-find-shell): ... here.  Simplify
implementation.  Set ""remote-shell"" property also for alternative
shells.
(tramp-remote-coding-commands): Check ""test -c
/dev/stdout"".  If failing, a regular file would be written
otherwise.  Reported by
Dmitry Kurochkin <dmitry.kurochkin@gmail.com>.
(tramp-find-inline-encoding): Cache the coding
commands in the process cache.  Apply test command on the remote
side, if defined.
(tramp-find-inline-compress): Cache the compress
commands in the process cache.
(tramp-compute-multi-hops): Save
`tramp-default-proxies-alist'
when requested.  Handle hops.
(tramp-current-connection): New defvar.
(tramp-maybe-open-connection): Use
`tramp-cleanup'.  Throw
`suppress', if there was a failed connection
shortly before.  Handle user interrupt.  (Bug#10187)
(tramp-get-inline-compress,
tramp-get-inline-coding): Read
connection properties from the process cache.

* net/tramp-smb.el (tramp-smb-server-version)
(tramp-smb-wrong-passwd-regexp,
tramp-smb-actions-with-tar): New defconsts.
(tramp-smb-prompt): Extend for powershell prompt.
(tramp-smb-file-name-handler-alist): Add handlers for
`process-file', `shell-command' and
`start-file-process'.
(tramp-smb-winexe-program, tramp-smb-winexe-shell-command)
(tramp-smb-winexe-shell-command-switch): New
defcustoms.
(tramp-smb-file-name-p): Simplify.
(tramp-smb-action-with-tar,
tramp-smb-handle-process-file)
(tramp-smb-kill-winexe-function, tramp-smb-call-winexe)
(tramp-smb-shell-quote-argument): New defuns.
(tramp-smb-handle-copy-directory): Add
COPY-CONTENTS argument.
Implement using ""tar"".  By this, time-stamps are
preserved.
(tramp-smb-handle-copy-file): Handle also the case
of directories.
(tramp-smb-do-file-attributes-with-stat)
(tramp-smb-get-file-entries,
tramp-smb-get-cifs-capabilities): Use
`tramp-get-connection-buffer').
(tramp-smb-handle-rename-file): Use ""rename"", when source and
target are on the same share.
(tramp-smb-maybe-open-connection): Handle wrong passwords.  Use
`tramp-smb-server-version'.
(tramp-smb-wait-for-output): Remove prompt.

* net/tramp.el (top): Require 'cl.
(tramp-methods, tramp-rsh-end-of-line): Remove
`tramp-password-end-of-line' from docstring.
(tramp-save-ad-hoc-proxies): New defcustom.
(tramp-completion-function-alist): Adapt docstring.
(tramp-default-password-end-of-line): Remove defcustom.
(tramp-shell-prompt-pattern): Allow ""[]"" style
prompts.  (Bug#11065)
(tramp-user-regexp, tramp-file-name-regexp-unified)
(tramp-file-name-regexp-url): Extend regexp by hop
separator.
(tramp-postfix-hop-format,
tramp-postfix-hop-regexp) 
(tramp-remote-file-name-spec-regexp): New defconst.
(tramp-file-name-structure): Extend structure for
hops.
(tramp-get-method-parameter): Move up.
(tramp-file-name-p, tramp-dissect-file-name)
(with-parsed-tramp-file-name): Handle hops.
(tramp-file-name-hop): New defun.
(tramp-make-tramp-file-name): New optional arg HOP.
(tramp-message-show-progress-reporter-message):
New defvar.
(tramp-with-progress-reporter): Use it.  We cannot use
`tramp-message-show-message' here, because this
suppresses also error buffers.
(tramp-error-with-buffer): Suppress buffer view, if
`tramp-message-show-message' is nil.  Use
`tramp-get-connection-buffer'.
(tramp-cleanup): New defun.
(tramp-rfn-eshadow-update-overlay): Let-bind
`non-essential' to `t'.
(tramp-file-name-handler): If `debug-on-error' is
set, propagate an error unchanged.
(tramp-completion-handle-file-name-all-completions):
Handle hops.  Fix an error when called from ido.
(tramp-completion-dissect-file-name): Use better
local variable name.  Add hop to the vector.
(tramp-handle-insert-file-contents): Use
progress-reporter for the whole scenario.
(tramp-action-password): Let-bind
`enable-recursive-minibuffers' to `t'.
(tramp-check-for-regexp): Simplify search.
(tramp-enter-password): Remove it.  Move
implementation ...
(tramp-action-password): ... here.
(tramp-mode-string-to-int, tramp-local-host-p)
(tramp-make-tramp-temp-file, tramp-read-passwd)
(tramp-clear-passwd, tramp-time-less-p,
tramp-time-diff): Set tramp-autoload cookie.

* net/trampver.el: Update release number.

* net/tramp.el (tramp-set-completion-function): Fix
docstring.
(tramp-parse-group, tramp-parse-file)
(tramp-parse-shostkeys-sknownhosts): New defuns.
(tramp-parse-rhosts, tramp-parse-rhosts-group, tramp-parse-shosts)
(tramp-parse-shosts-group, tramp-parse-sconfig)
(tramp-parse-sconfig-group, tramp-parse-shostkeys)
(tramp-parse-sknownhosts, tramp-parse-hosts)
(tramp-parse-hosts-group, tramp-parse-passwd,
tramp-parse-netrc): Use them.
(tramp-parse-passwd-group, tramp-parse-netrc-group)
(tramp-parse-putty-group): Don't narrow.
(tramp-parse-putty): Make a loop.
(tramp-file-name-handler): Catch the `suppress'
signal.
"
c644523bd8a23e518c91b61a1b8520e866b715b9,emacs-mirror/emacs,"Revert and cleanup Lisp_Cons, Lisp_Misc and Lisp_Symbol things.
* src/lisp.h (struct Lisp_Symbol): Change xname to meaningful
name since all xname users are fixed long time ago.  Do not use
INTERNAL_FIELD.
(set_symbol_name, set_symbol_function, set_symbol_plist):
(set_symbol_next, set_overlay_plist): New function.
(struct Lisp_Cons): Do not use INTERNAL_FIELD.
(struct Lisp_Overlay): Likewise.
(CVAR, MVAR, SVAR): Remove.
* src/alloc.c, src/buffer.c, src/buffer.h, src/bytecode.c:
* src/cmds.c, src/data.c, src/doc.c, src/eval.c, src/fns.c:
* src/keyboard.c, src/lread.c, src/nsselect.m, src/xterm.c:
Adjust users.
* src/.gdbinit: Change to use name field of struct Lisp_Symbol
where appropriate.
* admin/coccinelle/overlay.cocci, admin/coccinelle/symbol.cocci:
Remove.
"
a864ef14570715dc3233fbbf2e9da7aa8f29729e,emacs-mirror/emacs,"Use bool for booleans in font-related modules.

* font.c (font_intern_prop, font_style_to_value)
(font_style_symbolic, font_parse_xlfd, font_parse_fcname)
(generate_otf_features, font_check_otf_features, font_check_otf)
(font_match_p, font_list_entities, font_at):
* fontset.c (fontset_id_valid_p, reorder_font_vector
(fontset_find_font, Fset_fontset_font)
(face_suitable_for_char_p) [0]:
* ftfont.c (fc_initialized, ftfont_get_open_type_spec)
(ftfont_open, ftfont_text_extents, ftfont_check_otf):
(m17n_flt_initialized, ftfont_shape_by_flt):
* ftxfont.c (ftxfont_draw_bitmap, ftxfont_draw):
* nsfont.m (nsfont_draw):
* w32font.c (w32font_draw):
* w32term.c (x_draw_glyphless_glyph_string_foreground):
Use bool for booleans.
* font.h: Adjust to above API changes.
(struct font, struct font_driver, struct font_driver_list):
Use bool for booleans.
(struct font): Remove useless member encoding_type.
All users removed.
* fontset.c, xftfont.c: Omit unnecessary static decls.
"
ebb96114d88af64cbb72f42052cb359ba8010aa2,emacs-mirror/emacs,"Make struct font_drivers read-only

This simplifies the code a bit, and makes the structs more
shareable and less likely to become corrupt.
* src/alloc.c (cleanup_vector):
* src/font.c (valid_font_driver, font_prepare_cache)
(font_finish_cache, font_get_cache, font_clear_cache)
(register_font_driver, font_update_drivers):
* src/font.h (struct font, struct font_driver_list)
(valid_font_driver):
struct font_drivers are now const.
* src/font.c, src/ftcrfont.c, src/ftfont.c, src/nsfont.m, src/xfont.c:
Omit no-longer-necessary decls.
* src/ftcrfont.c (syms_of_ftcrfont):
* src/ftxfont.c (syms_of_ftxfont):
* src/xftfont.c (syms_of_xftfont):
Omit no-longer-necessary initialization code.
* src/ftcrfont.c (ftcrfont_driver):
* src/ftfont.c (ftfont_driver):
* src/ftxfont.c (ftxfont_driver):
* src/macfont.m (macfont_driver):
* src/nsfont.m (nsfont_driver):
* src/xfont.c (xfont_driver):
* src/xftfont.c (xftfont_driver):
Use C99-style initializer for ease of maintenance, and make it const.
* src/ftcrfont.c, src/ftxfont.c, src/xftfont.c:
Refer to functions like ftfont_text_extents directly.
* src/ftfont.c (ftfont_get_cache, ftfont_list, ftfont_list_family)
(ftfont_has_char, ftfont_encode_char, ftfont_text_extents)
(ftfont_get_bitmap, ftfont_anchor_point, ftfont_otf_capability)
(ftfont_variation_glyphs, ftfont_filter_properties)
(ftfont_combining_capability):
* src/xfont.c (xfont_get_cache):
Now extern, so that other modules‚Äô struct font_drivers can use
them directly.
* src/macfont.m (macfont_descriptor_entity):
* src/nsfont.m (nsfont_open):
Use constant directly; this is clearer.
"
5af5df1f7c20858dab762830e1a94994ceda425b,emacs-mirror/emacs,"Add battery support to all Cygwin builds

It already exists in the Cygwin-w32 build.
* src/w32fns.c (Fw32_battery_status): Move to...
* src/w32cygwinx: New file, to be used for functions common to
the MS Windows and Cygwin builds.
(syms_of_w32cygwinx): New function.
* src/lisp.h: Add prototype of syms_of_w32cygwinx.
* src/emacs.c (main) [HAVE_NTGUI or CYGWIN]: Call syms_of_w32cygwinx.
* src/Makefile.in (SOME_MACHINE_OBJECTS):
* configure.ac (W32_OBJ) [HAVE_W32]: Add w32cygwinx.o.
(W32_LIBS) [CYGWIN]: Set equal to ""-lkernel32"" in non-w32 build.
(W32_OBJ) [CYGWIN]: Set equal to ""w32cygwinx.o"" in non-w32 build.
* etc/NEWS: Document the new battery support.
"
620f13b0612810324592ab2d2b4e5a5dab27f981,emacs-mirror/emacs,"Use ASCII tests for character types.

* admin/merge-gnulib (GNULIB_MODULES): Add c-ctype.
* lwlib/lwlib-Xaw.c, lwlib/lwlib.c, lwlib/xlwmenu.c:
Don't include <ctype.h>; no longer needed.
* lwlib/lwlib-Xaw.c (openFont):
* lwlib/xlwmenu.c (openXftFont): Test just for ASCII digits.
* src/category.c, src/dispnew.c, src/doprnt.c, src/editfns.c, src/syntax.c
* src/term.c, src/xfns.c, src/xterm.c:
Don't include <ctype.h>; was not needed.
* src/charset.c, src/doc.c, src/fileio.c, src/font.c, src/frame.c:
* src/gtkutil.c, src/image.c, src/sysdep.c, src/xfaces.c:
Include <c-ctype.h> instead of <ctype.h>.
* src/nsterm.m: Include <c-ctype.h>.
* src/charset.c (read_hex):
* src/doc.c (Fsnarf_documentation):
* src/fileio.c (IS_DRIVE) [WINDOWSNT]:
(DRIVE_LETTER) [DOS_NT]:
(Ffile_name_directory, Fexpand_file_name)
(Fsubstitute_in_file_name):
* src/font.c (font_parse_xlfd, font_parse_fcname):
* src/frame.c (x_set_font_backend):
* src/gtkutil.c (xg_get_font):
* src/image.c (xbm_scan, xpm_scan, pbm_scan_number):
* src/nsimage.m (hexchar):
* src/nsterm.m (ns_xlfd_to_fontname):
* src/sysdep.c (system_process_attributes):
* src/xfaces.c (hash_string_case_insensitive):
Use C-locale tests instead of locale-specific tests for character
types, since we want the ASCII interpretation here, not the
interpretation suitable for whatever happens to be the current locale.
"
9d7940260552d9ad5f331443aae200094ae2847c,emacs-mirror/emacs,"Remove duplicate Lisp definitions of define-minor-mode variables defined in C.

* lisp/abbrev.el (abbrev-mode):
* lisp/composite.el (auto-composition-mode):
* lisp/menu-bar.el (menu-bar-mode):
* lisp/simple.el (transient-mark-mode):
* lisp/tool-bar.el (tool-bar-mode): Adjust the define-minor-mode calls so
that they do not define the associated variables twice.
* lisp/simple.el (transient-mark-mode): Remove defvar.
* lisp/composite.el (auto-composition-mode): Make variable auto-buffer-local.
* lisp/cus-start.el: Add transient-mark-mode, menu-bar-mode, tool-bar-mode.
Handle multiple groups, and also custom-delayed-init-variables.
* lisp/emacs-lisp/easy-mmode.el (define-minor-mode): Doc fix.

* src/buffer.c (syms_of_buffer) <abbrev-mode, transient-mark-mode>:
* src/frame.c (syms_of_frame) <tool-bar-mode>: Move docs here from Lisp.
"
32e5c58ca969ec30d31520da52c9866cafa62927,emacs-mirror/emacs,"Provide new `defalias-fset-function' symbol property.
* src/lisp.h (AUTOLOADP): New macro.
* src/eval.c (Fautoload): Don't attach to loadhist, call Fdefalias instead.
* src/data.c (Ffset): Remove special ad-advice-info handling.
(Fdefalias): Handle autoload definitions and new Qdefalias_fset_function.
(Fsubr_arity): CSE.
(Finteractive_form): Simplify.
(Fquo): Don't insist on having at least 2 arguments.
(Qdefalias_fset_function): New var.
* lisp/emacs-lisp/advice.el (ad-set-advice-info): Set defalias-fset-function.
(ad--defalias-fset): New function.
(ad-safe-fset): Remove.
(ad-make-freeze-definition): Use cl-letf*.
"
2f6c682061a281dc3e397ff4727a164880e86e7b,emacs-mirror/emacs,"New focus management interface

focus-in-hook and focus-out-hook don't accurately reflect actual
user-visible focus states.  Add a new focus interface and mark the old
one obsolete.

* doc/lispref/frames.texi (Input Focus): Document new focus
functions.  Remove references to the now-obsolete focus hooks.

* lisp/frame.el (frame-focus-state): New function.
(after-focus-change-function): New variable.
(focus-in-hook, focus-out-hook): Move to lisp from C;
mark obsolete.

* lisp/term/xterm.el (xterm-translate-focus-in)
(xterm-translate-focus-out): Track tty focus in `tty-focus-state'
terminal parameter; call `after-focus-change-function'.
(xterm--suspend-tty-function): New function.

* src/frame.c (Fhandle_switch_frame): Update docstring; don't call
focus hooks.
(focus-in-hook, focus-out-hook): Remove: moved to lisp.
(syms_of_frame): Remove unread_switch_frame; add
Vunread_switch_frame.

* src/keyboard.c:
(Finternal_handle_focus_in): New function.
(make_lispy_event): Always report focus events to lisp; don't
translate them to switch events sometimes.  Lisp can take care of
creating synthetic switch-frame events via
`internal-handle-focus-in'.

* src/w32term.c (x_focus_changed): Remove switch-avoidance logic:
just directly report focus changes to lisp.

* src/xterm.c (x_focus_changed): Remove switch-avoidance logic:
just directly report focus changes to lisp.
"
bfeee9d15131df60ef028dda6ca4ab7c29e7d7d2,emacs-mirror/emacs,"* epa-file.el (auto-encryption-mode): Rename from epa-file-mode.
(epa-file-handler): Put 'safe-magic and 'operations properties.

* epa.el (epa-global-minor-modes, epa-mode, epa-menu)
(epa-menu-items): Remove.

* epa-dired.el (epa-dired-do-decrypt, epa-dired-do-verify)
(epa-dired-do-sign, epa-dired-do-encrypt): Add autoload cookie.
(epa-dired-mode, epa-global-dired-mode): Remove.

* dired.el (dired-mode-map): Bind encryption/decryption commands.

* menu-bar.el (menu-bar-encryption-decryption-menu): New menu item.

* files.el (insert-file-contents-literally): Inhibit epa-file-handler.
"
9e928ac989c824c376b1ab576a6da69cd86b12c6,emacs-mirror/emacs,"Merge chages made in Gnus trunk.

mailcap.el (mailcap-mime-extensions): Rename text/org to text/x-org.
gnus-draft.el (gnus-group-send-queue): Update the queue group in the group buffer after sending the queue.
gnus-draft.el (gnus-group-send-queue): Really refresh the queue group after sending.
gnus-agent.el (gnus-agent-send-mail): Ditto.
gnus-group.el (gnus-group-refresh-group): New convenience function.
message.el (message-bogus-addresses): Remove commented-out value.
message.el (message-check-recipients): Display the encoded version of the bogus address if they differ.
flow-fill.el (fill-flowed): Make `delete-space' option correspond to ""DelSp"" parameter in RFC3676.
gnus-sum.el (gnus-summary-move-article): Protect against backends (i.e., nnimap) returning nil as the article number.
"
c622b48f7894fc904cdc95edff47f2173240f0cf,emacs-mirror/emacs,"Improve sys_siglist detection.

* configure.ac (sys_siglist): Look for its decl in <signal.h>.
Otherwise, it's not found in either Fedora 17 or Solaris 11.
* src/sysdep.c (sys_siglist, init_signals): Use _sys_siglist if it's
defined as a macro, as is done in Solaris.
(sys_siglist_entries): New macro.
(save_strsignal): Use it.
* src/syssignal.h (safe_strsignal): Now ATTRIBUTE_CONST, to pacify
GCC 4.7.2 on Fedora 17 with the fixed sys_siglist detection.
"
ce9cf0658e7fdee8416d7cd36203c93b12d81b3f,emacs-mirror/emacs,"* display.texi (Font Lookup): Remove obsolete function
x-font-family-list.  x-list-fonts accepts Fontconfig/GTK syntax.
(Low-Level Font): Rename from Fonts, move to end of Faces section.
(Font Selection): Reorder order of variable descriptions.  Minor
clarifications.

* elisp.texi (Top): Update node listing.
"
0cdffd7dd407452c8d60931736a5be52cf9ed7b6,emacs-mirror/emacs,"Small speedbar-related clean-up

* lisp/dframe.el (x-sensitive-text-pointer-shape, x-pointer-shape):
Remove unnecessary declarations.
(dframe-message): Doc fix.

* lisp/info.el (dframe-select-attached-frame, dframe-current-frame):
Declare.

* lisp/speedbar.el (speedbar-message): Make it an obsolete alias.
Update all callers.
(speedbar-with-attached-buffer)
(speedbar-maybee-jump-to-attached-frame): Make these aliases obsolete.
(speedbar-with-writable): Use backquote.

* lisp/emacs-lisp/eieio-opt.el (eieio-describe-class-sb):

* lisp/emacs-lisp/eieio-speedbar.el (eieio-speedbar-handle-click):
Use dframe-with-attached-buffer, dframe-maybee-jump-to-attached-frame
rather than speedbar- aliases.

* lisp/mail/rmail.el: Load dframe rather than speedbar when compiling.
(speedbar-make-specialized-keymap, speedbar-insert-button)
(dframe-select-attached-frame, dframe-maybee-jump-to-attached-frame)
(speedbar-do-function-pointer): Declare.
(rmail-speedbar-button, rmail-speedbar-find-file)
(rmail-speedbar-move-message):
Use dframe-with-attached-buffer rather than speedbar- alias.

* lisp/progmodes/gud.el: Load dframe rather than speedbar when compiling.
(dframe-message, speedbar-make-specialized-keymap)
(speedbar-add-expansion-list, speedbar-mode-functions-list)
(speedbar-make-tag-line, speedbar-remove-localized-speedbar-support)
(speedbar-insert-button, dframe-select-attached-frame)
(dframe-maybee-jump-to-attached-frame)
(speedbar-change-initial-expansion-list)
(speedbar-previously-used-expansion-list-name): Declare.
(gud-speedbar-item-info, gud-gdb-goto-stackframe):
Use dframe-message, dframe-with-attached-buffer rather than
speedbar- aliases.
(gud-sentinel): Silence compiler.

* lisp/progmodes/vhdl-mode.el (speedbar-refresh)
(speedbar-do-function-pointer, speedbar-add-supported-extension)
(speedbar-add-mode-functions-list, speedbar-make-specialized-keymap)
(speedbar-change-initial-expansion-list, speedbar-add-expansion-list)
(speedbar-extension-list-to-regex, speedbar-directory-buttons)
(speedbar-file-lists, speedbar-make-tag-line)
(speedbar-line-directory, speedbar-goto-this-file)
(speedbar-center-buffer-smartly, speedbar-change-expand-button-char)
(speedbar-delete-subblock, speedbar-position-cursor-on-line)
(speedbar-make-button, speedbar-reset-scanners)
(speedbar-files-item-info, speedbar-line-text)
(speedbar-find-file-in-frame, speedbar-set-timer)
(dframe-maybee-jump-to-attached-frame, speedbar-line-file): Declare.
(speedbar-with-writable): Do not (re)define it.
(vhdl-speedbar-find-file): Use dframe-maybee-jump-to-attached-frame
rather than speedbar- alias.

* lisp/cedet/ede/speedbar.el (ede-file-find, ede-tag-find):
* lisp/cedet/semantic/sb.el (semantic-sb-token-jump):
Use dframe-maybee-jump-to-attached-frame rather than speedbar- alias.

* lisp/mh-e/mh-speed.el (mh-speed-view):
Use dframe-with-attached-buffer rather than speedbar- alias.
"
50d4ba399303b7365b03cdd3456a28eae3451fa0,emacs-mirror/emacs,"* keyboard.c (Qmenu_alias, Vdefine_key_rebound_commands): Remove.
(parse_menu_item): Streamline since bindings are recomputed all the
time anyway.  Don't bother checking Vdefine_key_rebound_commands any
more and don't support lmenu's menu-alias any more either.
* subr.el (define-key-rebound-commands): Mark obsolete.
* startup.el (precompute-menubar-bindings): Remove.
(normal-top-level): Remove obsolete code that tried to precompute
menubar bindings.
* loadup.el (define-key-rebound-commands): Don't bother fiddling with
define-key-rebound-commands and precompute-menubar-bindings.
"
4f595e1504dfbb6f81e04fb98aa4b033dd5398a4,emacs-mirror/emacs,"Merge from standalone RefTeX repository.

Here is the ChangeLog of the standalone version of RefTeX without
information about Makefiles and other auxiliary files.  The differences to
the Emacs repository are documented in the respective ChangeLog files.

2010-11-06  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-create-bibtex-file): Make sure that
	entries with whitespace at various places are found.
	(reftex-extract-bib-entries-from-thebibliography): Remove
	superfluous backslash.

2010-10-16  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el
	(reftex-extract-bib-entries-from-thebibliography): Use
	`with-current-buffer'.

2010-09-14  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-do-citation): Make it possible again
	to insert non-existent entries.

2010-01-30  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-syntax-table-for-bib, reftex-mode):
	Do not derive `reftex-syntax-table-for-bib' from
	`reftex-syntax-table' because parens have to retain their paren
	syntax in order for parsing of BibTeX entries like @book(...) to
	work.

2009-09-12  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-label-alist): Doc fix.

	* lisp/reftex-toc.el (reftex-re-enlarge): Call `enlarge-window'
	only if there is something to do because in Emacs the horizontal
	version throws an error even if the parameter is 0.

2009-08-08  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-index.el: Suppress byte-compiler warnings.  Move
	provide statement to end of file.

	* lisp/reftex-dcr.el: Suppress byte-compiler warnings.  Move
	provide statement to end of file.

	* lisp/reftex-auc.el: Suppress byte-compiler warnings.

	* doc/reftex.texi (Imprint): Mention Wolfgang in list of
	contributors.

	* lisp/reftex-vars.el (reftex-plug-into-AUCTeX): Doc fix.

2009-07-05  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi (Creating Citations): Give a hint about how to
	auto-revert the BibTeX database file when using external editors.

	* lisp/reftex-cite.el (reftex-do-citation): Save match data when
	asking for optional arguments.

2009-04-29  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-in-comment): Do not error out if
	`comment-start-skip' is not set.

2009-03-01  Wolfgang Mayer  <wmayer7@gmail.com>

	* lisp/reftex-cite.el (reftex-all-used-citation-keys):
	Fix regexp to correctly extract all citations in the same line.

2008-12-29  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-vref-is-default)
	(reftex-fref-is-default): Adapt doc string.
	(reftex-ref-style-default-list): New name for
	`reftex-ref-style-active-list'.  Use :set instead of :repeat.
	(reftex-vref-is-default, reftex-fref-is-default): Adapt to new
	name.

	* lisp/reftex-base.el (reftex-tie-multifile-symbols): Add doc
	string.
	(reftex-tie-multifile-symbols): Initialize
	`reftex-ref-style-list'.
	(reftex-untie-multifile-symbols): Add doc string.
	(reftex-add-index-macros): Doc fix.
	(reftex-ref-style-activate, reftex-ref-style-toggle)
	(reftex-ref-style-list): New functions.
	(reftex-mode-menu): Use them.

	* lisp/reftex-sel.el (reftex-select-cycle-ref-style-internal): Use
	`reftex-ref-style-list' function.

	* lisp/reftex-ref.el (reftex-reference): Use
	`reftex-ref-style-list' function.

	* doc/reftex.texi (Referencing Labels): Simplify section about
	reference macro cycling.
	(Reference Styles, Options (Referencing Labels)): Adapt to changed
	implementation.

2008-12-18  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-in-comment): Deal correctly with
	escaped comment characters.

2008-11-30  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-ref-style-alist): Change structure
	so that it is not possible to use multiple different package names
	within a style.
	(reftex-ref-style-active-list): Adapt to new structure of
	`reftex-ref-style-alist'.

	* lisp/reftex-sel.el (reftex-select-cycle-active-ref-styles):
	Remove.
	(reftex-select-cycle-ref-style-internal): Adapt to new structure
	of `reftex-ref-style-alist'.

	* lisp/reftex-ref.el: Adapt creation of `reftex-<package>-<macro>'
	functions to new structure of `reftex-ref-style-alist'.
	(reftex-reference): Adapt to new structure of
	`reftex-ref-style-alist'.

	* lisp/reftex-base.el (reftex-mode-menu): Adapt to new structure
	of `reftex-ref-style-alist'.

	* doc/reftex.texi (Options (Referencing Labels)): Adapt to new
	structure of `reftex-ref-style-alist'.

2008-10-16  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi (Referencing Labels, Reference Styles): Document
	changes in the referencing functionality.

2008-10-15  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-ref-style-alist): Remove the symbols
	for symbols for macro type distinction.  Add characters for macro
	selection.
	(reftex-ref-macro-prompt): New variable.

	* lisp/reftex-sel.el (reftex-select-cycle-ref-style-internal):
	Remove code for testing macro type.
	(reftex-select-toggle-numref-pageref): Remove.
	(reftex-select-label-map): Remove binding for
	`reftex-select-toggle-numref-pageref'.

	* lisp/reftex-ref.el (reftex-reference): Prompt for a reference
	macro if `reftex-ref-macro-prompt' is non-nil.

	* lisp/reftex-base.el (reftex-select-with-char): Kill the RefTeX
	Select buffer when done.

2008-06-07  David Kastrup  <dak@gnu.org>

	* lisp/reftex-base.el (reftex-remove-if): Improve performance.

2008-06-07  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-get-string-refs): Use a regexp
	alternative for better performance.

	* doc/reftex.texi (Commands): Mention options for definition of
	header and footer in BibTeX files.
	(Options (Creating Citations)): Document
	`reftex-create-bibtex-header' and `reftex-create-bibtex-footer'.

	* lisp/reftex-cite.el (reftex-stringref-p): Remove.
	(reftex-get-string-refs): Do without `reftex-stringref-p' and use
	`reftex-remove-if' instead of the cl-based `remove-if'.
	(reftex-create-bibtex-file): Doc fix.

	* lisp/reftex-base.el (reftex-remove-if): New function.

2008-06-07  Wolfgang Mayer  <wmayer7@gmail.com>

	* lisp/reftex-vars.el (reftex-create-bibtex-header)
	(reftex-create-bibtex-footer): New variables.

	* lisp/reftex-cite.el (reftex-parse-bibtex-entry): Accept
	additional optional argument `raw' and keep quotes or braces if it
	is non-nil.
	(reftex-stringref-p, reftex-get-string-refs): New functions.
	(reftex-create-bibtex-file): Include entries that are
	cross-referenced from cited entries.  Include @String definitions
	in the resulting bib file.  Add header and footer defined in
	`reftex-create-bibtex-header' and `reftex-create-bibtex-footer'.

2008-05-03  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-parse.el (reftex-parse-from-file): Move backward one
	char if a `\' was matched after a section macro.

	* lisp/reftex-global.el (reftex-isearch-switch-to-next-file): Use
	`reverse' instead of `nreverse' and `copy-list' in order to make
	the byte compiler happy.  Get rid of unused `orig-flist' variable.

	* lisp/reftex-base.el (reftex-compile-variables): Revert last
	change.  Match `\' after a section macro.
	(reftex-mapconcat-with-predicate): Remove.

2008-04-13  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-mapconcat-with-predicate): New
	function.
	(reftex-compile-variables): Use it.  Treat environments and macros
	differently in the regexp for section matching.

	* lisp/reftex-parse.el (reftex-parse-from-file): Use beginning of
	match instead of end as bound.

	* lisp/reftex-sel.el (reftex-select-label-map): Changing binding
	of reference style toggling to ""s"" which is not already taken.

	* doc/reftex.texi (Reference Styles): Reflect change in key
	binding for toggling reference styles.  Some minor changes.

2008-03-27  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el: Some whitespace, doc and checkdoc fixes.

2008-03-16  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-index.el (reftex-index-selection-or-word): Use
	`reftex-region-active-p'.
	(reftex-index-show-entry)
	(reftex-index-initialize-phrases-buffer)
	(reftex-index-phrases-apply-to-region): Sync with Emacs trunk.

	* lisp/reftex-dcr.el (reftex-start-itimer-once): Silence the byte
	compiler.

	* lisp/reftex-auc.el: Move `provide' call to bottom of file.

	* lisp/reftex-base.el: Require easymenu and define autoloads
	earlier to avoid compiler warnings.
	(reftex-region-active-p, reftex-select-with-char)
	(reftex-show-commentary): Sync with version in Emacs trunk.
	(reftex-make-overlay, reftex-overlay-put, reftex-move-overlay)
	(reftex-delete-overlay): Define in a way which hides the XEmacs
	symbols from the byte compiler.
	(reftex-info): Silence the byte compiler.  Use `reftex.info'
	instead of `reftex' in order to get the correct file.

2008-03-07  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-extract-bib-entries): Check if
	BibTeX file changed on disk and ask if it should be reread in case
	it did.

2008-03-02  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi: Lots of small fixes.
	(Reference Styles): New section.
	(varioref (LaTeX package), fancyref (LaTeX package)): Remove.
	(Options (Referencing Labels)): Remove descriptions of deprecated
	variables `reftex-vref-is-default' and `reftex-fref-is-default'.
	Add descriptions for `reftex-ref-style-alist' and
	`reftex-ref-style-active-list'.
	(Referencing Labels): Update regarding reference styles.

2008-02-17  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-ref.el (reftex-format-special): Add third argument
	for refstyle possible to be passed, making the byte compiler
	happy.
	(reftex-reference): Pass refstyle to `reftex-format-special'.

	* lisp/reftex-vars.el (reftex-ref-style-active-list): Make
	creation of type compatible with Emacs 21.
	(reftex-format-ref-function): Mention third argument of special
	format function.

	* lisp/reftex-base.el (reftex-mode-menu): Make creation of
	Reference Style menu compatible with Emacs 21.

	* doc/reftex.texi: Fix some typos.

2008-01-27  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-ref-style-active-list): Doc fix.

	* lisp/reftex-base.el (reftex-erase-all-selection-and-index-buffers)
	(reftex-access-parse-file): Use `mapc' instead of `mapcar' where
	return value is not used.

	* lisp/reftex-ref.el (reftex-offer-label-menu): Use `mapc' instead
	of `mapcar' where return value is not used.

	* lisp/reftex-sel.el (reftex-select-item, reftex-select-unmark):
	Use `mapc' instead of `mapcar' where return value is not used.

	* lisp/reftex-vars.el (reftex-ref-style-alist)
	(reftex-ref-style-active-list): New variables.
	(reftex-vref-is-default, reftex-fref-is-default): Adapt doc string
	to new implementation.  Mark as obsolete.  Add compatibility code
	for honoring the variable values in case they are set.

	* lisp/reftex-base.el (reftex-mode-menu): Reference styles are now
	computed from `reftex-ref-style-alist'.  Fix typo.

	* lisp/reftex-ref.el (reftex-reference): Determine reference macro
	by looking at `reftex-ref-style-active-list' and
	`reftex-ref-style-alist'.  Use only one special format function.
	(reftex-varioref-vref, reftex-fancyref-fref)
	(reftex-fancyref-Fref): Remove definitions.  The functions are now
	generated from `reftex-ref-style-alist'.
	(reftex-format-vref, reftex-format-Fref, reftex-format-fref):
	Remove.
	(reftex-format-special): New function.

	* lisp/reftex-sel.el (reftex-select-toggle-varioref)
	(reftex-select-toggle-fancyref): Remove.
	(reftex-select-cycle-active-ref-styles)
	(reftex-select-cycle-ref-style-internal)
	(reftex-select-cycle-ref-style-forward)
	(reftex-select-cycle-ref-style-backward)
	(reftex-select-toggle-numref-pageref): New functions.
	(reftex-select-label-map): Use `v' and `V' for general cycling
	through reference styles.  Add `p' for switching between number
	and page reference types.

2008-01-06  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el (reftex-pop-to-bibtex-entry)
	(reftex-extract-bib-entries-from-thebibliography): Match \bibitem
	entries with spaces or tabs in front of arguments.
	(reftex-insert-bib-matches): Use `mapc' instead of `mapcar'
	because return value is not used.

2008-01-05  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-toc.el (reftex-make-separate-toc-frame): Hide
	non-operational call to `focus-frame' in Emacs for the compilers's
	sake.

2008-01-03  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-dcr.el (reftex-mouse-view-crossref): Explain why
	point is set.

	* lisp/reftex-toc.el (reftex-toc-do-promote): Use `mapc' instead
	of `mapcar' because return value is not used.
	(reftex-toggle-auto-toc-recenter): Fix typo.

	* lisp/reftex-cite.el (reftex-do-citation): Use `mapc' instead of
	`mapcar' because return value is not used.

2007-10-10  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-cite-format-builtin)
	(reftex-bibliography-commands): Add support for ConTeXt.

	* doc/reftex.texi (Citation Styles): Mention support for ConTeXt.

2007-08-23  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi (Options (Defining Label Environments)): Fix
	typo.

2007-07-22  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el (reftex-set-cite-format): Autoload.
	(reftex-access-parse-file): Create parse file in a way that does
	not interfere with recentf mode.
	(reftex-access-parse-file): Do not risk destroying an existing
	buffer.

2007-07-07  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-parse.el (reftex-nth-arg): Use `forward-comment'
	instead of `comment-forward'.  The latter is not always available
	and the former is sufficient for LaTeX.
	(reftex-nth-arg): Revert last change since moving over whitespace
	and comments is done by `reftex-move-to-next-arg'.

2007-05-20  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi (Citation Styles): Correct some mistakes.

2007-04-03  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-cite.el: Delete trailing whitespace.
	(reftex-pop-to-bibtex-entry, reftex-extract-bib-entries)
	(reftex-parse-bibtex-entry, reftex-create-bibtex-file): Match
	entries containing numbers and symbol constituents.

2007-03-28  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi: Replace BibTeX by @BibTeX{} throughout the
	file.

2007-03-12  John Paul Wallington  <jpw@pobox.com>

	* lisp/reftex-vars.el (reftex-format-ref-function)
	(reftex-format-cite-function): Fix custom type.

2007-03-10  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-base.el: Remove information in comment already in
	imprint or cluttering output of `finder-commentary'.
	Require reftex.el.

	* lisp/reftex.el: Remove.  Now generated from reftex.el.in.

	* lisp/reftex-dcr.el: Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-global.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-index.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-parse.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-ref.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-sel.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-toc.el Remove version info in header.  Add
	maintainer info.

	* lisp/reftex-vars.el Remove version info in header.  Add
	maintainer info.

2007-03-08  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi: Include macros.texi and version.texi.  Change
	maintainer and version information.  Express TeX, LaTeX, AUCTeX
	and RefTeX with macros.
	(Imprint): Change maintainer information.

2007-03-04  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex.el: Update.

	* lisp/reftex-base.el (reftex-show-commentary): Look in
	reftex-base.el.
	(reftex-report-bug): New function.

	* lisp/reftex.el: Move original content to reftex-base.el.  Add
	new header and automatically generated autoloads.

	* lisp/reftex-base.el: New file.  Insert original content of
	reftex.el.  Remove autoload for `reftex-index-phrases-mode'.
	Delete trailing whitespace.

2007-02-26  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-index.el (reftex-index-visit-phrases-buffer): Set
	marker when visiting buffer.  This allows for returning from the
	phrases file to the file one was just editing instead of the file
	where the last phrases was added from.

2007-02-25  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-index.el (reftex-index-phrases-syntax-table): New
	variable.  Give ?\"" punctuation syntax as it usually is not used
	as string quote in TeX-related modes and may occur unmatched.  The
	change also prevents fontification of quoted content.
	(reftex-index-phrases-mode): Use it.

	* lisp/reftex-cite.el (reftex-parse-bibtex-entry): Match fields
	containing hyphens (besides word constituents).

2007-02-25  David Kastrup  <dak@gnu.org>

	* lisp/reftex.el (reftex-uniquify, reftex-uniquify-by-car):
	Replace O(n^2) algorithms with O(n log n).  Introduce optional
	argument SORT (not yet used).  TODO: figure out callers that can
	specify SORT, in order to further speed this up.

2007-02-25  Ralf Angeli  <angeli@caeruleus.net>

	* lisp/reftex-vars.el (reftex-cite-key-separator): New variable.

	* lisp/reftex-auc.el (reftex-arg-cite): Use
	`reftex-cite-key-separator'.

	* lisp/reftex-cite.el (reftex-do-citation)
	(reftex-figure-out-cite-format): Use `reftex-cite-key-separator'.

	* doc/reftex.texi (Options (Creating Citations)): Document
	`reftex-cite-key-separator'.

	* lisp/reftex-cite.el (reftex-do-citation): Return all keys, not
	just the first one.

	* lisp/reftex-auc.el (reftex-arg-cite): Correctly handle new
	value type returned by `reftex-citation'.

2007-02-24  Ralf Angeli  <angeli@caeruleus.net>

	* doc/reftex.texi: Set correct filename for standalone
	distribution.

2007-02-07  Ralf Angeli  <angeli@caeruleus.net>

	Create `reftex' module.
"
47ba6d4383a3f5a590ccee6c456b41e721a2274c,emacs-mirror/emacs,"Remove duplicate #include directives.

* alloc.c [GC_MARK_STACK == GC_USE_GCPROS_CHECK_ZOMBIES]:
* xfaces.c:
Don't include stdio.h twice.
* buffer.c [USE_MMAP_FOR_BUFFERS]:
Don't include sys/types.h or stdio.h twice.
* fileio.c [WINDOWSNT | MSDOS]: Don't include fcntl.h twice.
* lread.c: Don't include coding.h twice.
* nsfont.m: Don't include frame.h twice.
* process.c [HAVE_RES_INIT]: Don't include <netinet/in.h> twice.
* ralloc.c: Don't include <unistd.h> twice.
* xdisp.c: Don't include font.h twice.
* xterm.c: Don't include fontset.h twice.
* xterm.h [USE_X_TOOLKIT]: Don't include X11/StringDefs.h twice.
"
578098f346bf9e1f23ca86ed764fc00b035b427f,emacs-mirror/emacs,"image.c, indent.c: Use bool for booleans.

* dispextern.h (struct image_type): Members valid_p, load, init
now return bool, not int.  All uses changed.
* image.c: Omit unnecessary static decls.
(x_create_bitmap_mask, x_build_heuristic_mask):
Return void, not int, since callers don't care about the return value.
(x_create_bitmap_mask, define_image_type, valid_image_p)
(struct image_keyword, parse_image_spec, image_spec_value)
(check_image_size, image_background)
(image_background_transparent, x_clear_image_1)
(postprocess_image, lookup_image, x_check_image_size)
(x_create_x_image_and_pixmap, xbm_image_p)
(Create_Pixmap_From_Bitmap_Data, xbm_read_bitmap_data)
(xbm_load_image, xbm_file_p, xbm_load, xpm_lookup_color)
(init_xpm_functions, xpm_valid_color_symbols_p, xpm_image_p)
(xpm_load, xpm_load_image, lookup_rgb_color, lookup_pixel_color)
(x_to_xcolors, x_build_heuristic_mask, pbm_image_p, pbm_load)
(png_image_p, init_png_functions, png_load_body, png_load)
(jpeg_image_p, init_jpeg_functions, jpeg_load_body, jpeg_load)
(tiff_image_p, init_tiff_functions, tiff_load, gif_image_p)
(init_gif_functions, gif_load, imagemagick_image_p)
(imagemagick_load_image, imagemagick_load, svg_image_p)
(init_svg_functions, svg_load, svg_load_image, gs_image_p)
(gs_load):
* nsimage.m (ns_load_image):
* nsterm.m (ns_defined_color):
* xfaces.c (tty_lookup_color, tty_defined_color, defined_color):
* xfns.c (x_defined_color):
* xterm.c (x_alloc_lighter_color_for_widget)
(x_alloc_nearest_color_1, x_alloc_nearest_color)
(x_alloc_lighter_color):
* indent.c (disptab_matches_widthtab, current_column)
(scan_for_column, string_display_width, indented_beyond_p)
(compute_motion, vmotion, Fvertical_motion):
Use bool for booleans.
"
72b255c7e7856eb0abefb1149211a8be519f6fef,emacs-mirror/emacs,"deactive->inactive, inactivate->deactivate spelling fixes (Bug#10150)

* NEWS: Document these changes.
* leim/quail/uni-input.el (ucs-input-deactivate):
Rename from ucs-input-inactivate.
* leim/quail/hangul.el (hangul-input-method-deactivate):
Rename from hangul-input-method-inactivate.
* emulation/viper-init.el (viper-deactivate-input-method-action):
Rename from viper-inactivate-input-method-action.
(viper-deactivate-input-method):
Rename from viper-inactivate-input-method.
* lisp/follow.el (follow-inactive-menu): Rename from follow-deactive-menu.
* lisp/international/mule-cmds.el (deactivate-input-method):
Rename from inactivate-input-method.
Also run input-method-deactivate-hook.
(deactivate-current-input-method-function):
Rename from inactivate-current-input-method-function.
(input-method-deactivate-hook): New hook.
(input-method-inactivate-hook): Mark obsolete.
* lisp/international/quail.el (quail-activate):
Also run quail-deactivate-hook.
(quail-deactivate): Rename from quail-inactivate.
* lisp/international/robin.el (robin-activate):
Also run robin-deactivate-hook.
(robin-deactivate): Rename from robin-inactivate.
"
b229f37d43081a2d960467ead3c5eed6a5764680,emacs-mirror/emacs,"Improve Gnus' dribble data handling.
"
5101529e98c333b07d17dc891ba0a2e1669d82ac,emacs-mirror/emacs,"Clean-up left-overs after 2012-09-23T08:44:20Z!eggert@cs.ucla.edu wrt signal handling.

 src/.gdbinit: Set breakpoint on terminate_due_to_signal, not on
 fatal_error_backtrace.
 src/w32proc.c (sys_kill): Undo last change: don't do anything when
 invoked to deliver SIGABRT to our own process.  This is now
 handled by emacs_raise.

 nt/inc/ms-w32.h (emacs_raise): Redefine to invoke emacs_abort.

Fixes: debbugs:12471
"
cf2f54c4e3d8adb26e3f4b8e9e51364165877444,emacs-mirror/emacs,"Include sources used to create macuvs.h.

* admin/unidata/IVD_Sequences.txt: New file.
* admin/unidata/Makefile.in (${top_srcdir}/src/macuvs.h): New rule.
(all): Build it.
(extraclean): Remove it.
* admin/unidata/README: Mention BidiMirroring.txt and IVD_Sequences.txt.
* admin/unidata/copyright.html: Update to current version from Unicode
Consortium.
* admin/unidata/uvs.el: Rename from admin/mac/uvs.el.
(uvs-print-table-ivd): Output a header in the form that
unidata-gen.el generates.
* lisp/international/README: Refer to the Unicode Terms of Use rather
than copying it bodily here, as that simplifies maintenance.
* src/Makefile.in ($(srcdir)/macuvs.h): New rule.
* src/macuvs.h: Use automatically-generated header.
"
d3da34e0dab1404e80dba5413b3c449a6ea8fa0c,emacs-mirror/emacs,"Convert most remaining function definitions to standard C.

* buffer.c, cm.c, eval.c, keyboard.c, process.c, term.c, vm-limit.c,
* xdisp.c: Convert function definitions to standard C.

* cm.c (cmputc): Arg C is now int, not char.
* process.c (Fmake_network_process): Cast sockaddr_in* to sockaddr*.
"
cd38666213d8badc14fb547ba1b8b9f258fd1189,emacs-mirror/emacs,"* lisp/faces.el (modeline): Remove obsolete face name.
"
e044e4fcd50c4db40c9efb40dd395bace59f287b,emacs-mirror/emacs,"* xterm.h (struct x_display_info): Add invisible_cursor.
(struct x_output): Add current_cursor.

* xterm.c (XTtoggle_invisible_pointer): New function.
(x_define_frame_cursor): Don't define cursor if invisible or the
same as before.  Set current_cursor.
(x_create_terminal): Set toggle_invisible_pointer_hook.

* xfns.c (make_invisible_cursor): New function.
(x_set_mouse_color): Call make_invisible_cursor.
Set current_cursor.
(x_window): Set current_cursor.

* termhooks.h (struct terminal): Add toggle_invisible_pointer_hook.

* keyboard.c (command_loop_1): Call frame_make_pointer_invisible after
inserting a character.
(read_avail_input): Call frame_make_pointer_visible.

* frame.c (Vmake_pointer_invisible): New variable.
(frame_make_pointer_invisible, frame_make_pointer_visible): New
functions.
(syms_of_frame): DEFVAR make-pointer-invisible, initialize to Qt.

* frame.h: Declare frame_make_pointer_invisible and
frame_make_pointer_visible.
(struct frame): Add pointer_invisible.

* cus-start.el (all): Added make-pointer-invisible.
"
fbb5531fa11d13854b274d28ccd329c9b6652cfc,emacs-mirror/emacs,"More-conservative ‚Äòformat‚Äô quote restyling

Instead of restyling curved quotes for every call to ‚Äòformat‚Äô,
create a new function ‚Äòformat-message‚Äô that does the restyling,
and using the new function instead of ‚Äòformat‚Äô only in contexts
where this seems appropriate.
Problem reported by Dmitry Gutov and Andreas Schwab in:
http://lists.gnu.org/archive/html/emacs-devel/2015-08/msg00826.html
http://lists.gnu.org/archive/html/emacs-devel/2015-08/msg00827.html
* doc/lispref/commands.texi (Using Interactive):
* doc/lispref/control.texi (Signaling Errors, Signaling Errors):
* doc/lispref/display.texi (Displaying Messages, Progress):
* doc/lispref/elisp.texi:
* doc/lispref/help.texi (Keys in Documentation):
* doc/lispref/minibuf.texi (Minibuffer Misc):
* doc/lispref/strings.texi (Formatting Strings):
* etc/NEWS:
Document the changes.
* lisp/abbrev.el (expand-region-abbrevs):
* lisp/apropos.el (apropos-library):
* lisp/calc/calc-ext.el (calc-record-message)
(calc-user-function-list):
* lisp/calc/calc-help.el (calc-describe-key, calc-full-help):
* lisp/calc/calc-lang.el (math-read-big-balance):
* lisp/calc/calc-store.el (calc-edit-variable):
* lisp/calc/calc-units.el (math-build-units-table-buffer):
* lisp/calc/calc-yank.el (calc-edit-mode):
* lisp/calendar/icalendar.el (icalendar-export-region)
(icalendar--add-diary-entry):
* lisp/cedet/mode-local.el (mode-local-print-binding)
(mode-local-describe-bindings-2):
* lisp/cedet/semantic/complete.el (semantic-completion-message):
* lisp/cedet/semantic/edit.el (semantic-parse-changes-failed):
* lisp/cedet/semantic/wisent/comp.el (wisent-log):
* lisp/cedet/srecode/insert.el (srecode-insert-show-error-report):
* lisp/descr-text.el (describe-text-properties-1, describe-char):
* lisp/dframe.el (dframe-message):
* lisp/dired-aux.el (dired-query):
* lisp/emacs-lisp/byte-opt.el (byte-compile-log-lap-1):
* lisp/emacs-lisp/bytecomp.el (byte-compile-log)
(byte-compile-log-file, byte-compile-warn, byte-compile-form):
* lisp/emacs-lisp/cconv.el (cconv-convert, cconv--analyze-use)
(cconv-analyze-form):
* lisp/emacs-lisp/check-declare.el (check-declare-warn):
* lisp/emacs-lisp/checkdoc.el (checkdoc-this-string-valid-engine):
* lisp/emacs-lisp/cl-macs.el (cl-symbol-macrolet):
* lisp/emacs-lisp/edebug.el (edebug-format):
* lisp/emacs-lisp/eieio-core.el (eieio-oref):
* lisp/emacs-lisp/eldoc.el (eldoc-minibuffer-message)
(eldoc-message):
* lisp/emacs-lisp/elint.el (elint-file, elint-log):
* lisp/emacs-lisp/find-func.el (find-function-library):
* lisp/emacs-lisp/macroexp.el (macroexp--obsolete-warning):
* lisp/emacs-lisp/map-ynp.el (map-y-or-n-p):
* lisp/emacs-lisp/nadvice.el (advice--make-docstring):
* lisp/emacs-lisp/package.el (package-compute-transaction)
(package-install-button-action, package-delete-button-action)
(package-menu--list-to-prompt):
* lisp/emacs-lisp/timer.el (timer-event-handler):
* lisp/emacs-lisp/warnings.el (lwarn, warn):
* lisp/emulation/viper-cmd.el:
(viper-toggle-parse-sexp-ignore-comments)
(viper-kill-buffer, viper-brac-function):
* lisp/emulation/viper-macs.el (viper-record-kbd-macro):
* lisp/facemenu.el (facemenu-add-new-face):
* lisp/faces.el (face-documentation, read-face-name)
(face-read-string, read-face-font, describe-face):
* lisp/files.el (find-alternate-file, hack-local-variables)
(hack-one-local-variable--obsolete, write-file)
(basic-save-buffer, delete-directory):
* lisp/format.el (format-write-file, format-find-file)
(format-insert-file):
* lisp/help-fns.el (help-fns--key-bindings)
(help-fns--compiler-macro, help-fns--obsolete)
(help-fns--interactive-only, describe-function-1)
(describe-variable):
* lisp/help.el (describe-mode):
* lisp/info-xref.el (info-xref-output):
* lisp/info.el (Info-virtual-index-find-node)
(Info-virtual-index, info-apropos):
* lisp/international/kkc.el (kkc-error):
* lisp/international/mule-cmds.el:
(select-safe-coding-system-interactively)
(select-safe-coding-system, describe-input-method):
* lisp/international/mule-conf.el (code-offset):
* lisp/international/mule-diag.el (describe-character-set)
(list-input-methods-1):
* lisp/international/quail.el (quail-error):
* lisp/minibuffer.el (minibuffer-message):
* lisp/mpc.el (mpc--debug):
* lisp/msb.el (msb--choose-menu):
* lisp/net/ange-ftp.el (ange-ftp-message):
* lisp/net/gnutls.el (gnutls-message-maybe):
* lisp/net/newst-backend.el (newsticker--sentinel-work):
* lisp/net/newst-treeview.el (newsticker--treeview-load):
* lisp/net/nsm.el (nsm-query-user):
* lisp/net/rlogin.el (rlogin):
* lisp/net/soap-client.el (soap-warning):
* lisp/net/tramp.el (tramp-debug-message):
* lisp/nxml/nxml-outln.el (nxml-report-outline-error):
* lisp/nxml/nxml-parse.el (nxml-parse-error):
* lisp/nxml/rng-cmpct.el (rng-c-error):
* lisp/nxml/rng-match.el (rng-compile-error):
* lisp/nxml/rng-uri.el (rng-uri-error):
* lisp/obsolete/iswitchb.el (iswitchb-possible-new-buffer):
* lisp/org/org-ctags.el:
(org-ctags-ask-rebuild-tags-file-then-find-tag):
* lisp/proced.el (proced-log):
* lisp/progmodes/ebnf2ps.el (ebnf-log):
* lisp/progmodes/flymake.el (flymake-log):
* lisp/progmodes/vhdl-mode.el (vhdl-warning-when-idle):
* lisp/replace.el (occur-1):
* lisp/simple.el (execute-extended-command)
(undo-outer-limit-truncate, define-alternatives):
* lisp/startup.el (command-line):
* lisp/subr.el (error, user-error, add-to-list):
* lisp/tutorial.el (tutorial--describe-nonstandard-key)
(tutorial--find-changed-keys):
* src/callint.c (Fcall_interactively):
* src/editfns.c (Fmessage, Fmessage_box):
Restyle the quotes of format strings intended for use as a
diagnostic, when restyling seems appropriate.
* lisp/subr.el (format-message): New function.
* src/doc.c (Finternal__text_restyle): New function.
(syms_of_doc): Define it.
"
deeaffe11d28ca1b42e4f59c33a30d0e58698044,emacs-mirror/emacs,"* Makefile.in (REGEXP_IN_LIBC): Remove reference to obsolete
variable.

* s/gnu-linux.h: Remove commented out code.

* unexec.c: Remove references to obsolete variable
COFF_ENCAPSULATE.

* Makefile.in: Update what RMS says about using autoconf.
(C_COMPILER):
(COFF_ENCAPSULATE):
(MAKE_PARALLEL): Remove obsolete variable.
(C_SWITCH_MACHINE_1, C_SWITCH_SYSTEM_1, C_SWITCH_SITE_1):
(C_SWITCH_X_SITE_1, C_SWITCH_X_MACHINE_1)
(C_SWITCH_X_SYSTEM_1): Move invariant code outside conditional.
"
37d6e227b2e4460b36363e42a3de45c082233c74,emacs-mirror/emacs,"upstream merge. cleanup
"
17e845af732cf7bd0ada49375f014e10deb3d06a,emacs-mirror/emacs,"Standardize on VIRT_ADDR_VARIES behavior.

Otherwise, valgrind does not work on some platforms.
Problem reported by Andreas Schwab in
<http://lists.gnu.org/archive/html/emacs-devel/2011-11/msg00081.html>.
* puresize.h (pure, PURE_P): Always behave as if VIRT_ADDR_VARIES
is set, removing the need for VIRT_ADDRESS_VARIES.
(PURE_P): Use a more-efficient implementation that needs just one
comparison, not two: on x86-64 with GCC 4.6.2, this cut down the
number of instructions from 6 (xorl, cmpq, jge, xorl, cmpq, setge)
to 4 (xorl, subq, cmpq, setbe).
* alloc.c (pure): Always extern now, since that's the
VIRT_ADDR_VARIES behavior.
(PURE_POINTER_P): Use a single comparison, not two, for
consistency with the new puresize.h.
* lisp.h (PNTR_COMPARISON_TYPE): Remove; no longer needed.
* m/ibms390.h, m/intel386.h, m/template.h, s/cygwin.h, s/hpux10-20.h:
Remove VIRT_ADDR_VARIES no longer needed.

Fixes: debbugs:10042
"
3f1c666608f7ca4aeacbcbe5102c2c2c63e345e9,emacs-mirror/emacs,"* emacs.c (USAGE3, standard_args): Add -mm and --maximized.

* frame.c: Qmaximized is new.
(x_set_frame_parameters): Do not handle fullscreen specially.
Only set width and height if explicitly set.
(x_set_fullscreen): Handle Qmaximized.
(x_set_font, x_figure_window_size): Do not handle fullscreen specially.
(syms_of_frame): Initialize Qmaximized.

* frame.h (fullscreen_type): Add FULLSCREEN_MAXIMIZED.  Declare
Qfullwidth, Qfullheight, Qfullboth, Qmaximized.

* xterm.c (handle_one_xevent): Remove call to x_check_fullscreen
for Expose event. Add call to x_check_fullscreen for MapNotify event.
Remove all code w.r.t. fullscreen from ConfigureNotify event. Do not
set gravity to NorthWestGravity when USE_GTK.
(set_wm_state): New function.
(do_ewmh_fullscreen): Use set_wm_state. Also handle FULLSCREEN_MAXIMIZED.
(x_handle_net_wm_state): Handle FULLSCREEN_MAXIMIZED.
(x_check_fullscreen): Simplify so we only handle EMWH type of fullscreen
or the case when no window manager is running. That means remove calls
to x_real_positions and x_fullscreen_adjust.

* gtkutil.c (flush_and_sync, x_wm_size_hint_off): Remove.
(xg_frame_set_char_size): Remove calls to x_wm_size_hint_off and
flush_and_sync.
(xg_height_changed): New function.
(xg_create_frame_widgets): Remove call to gtk_widget_set_size_request
and gtk_window_set_policy.  Set frame gravity after parsing the geometry
string.
(xg_update_frame_menubar, free_frame_menubar)
(xg_tool_bar_detach_callback, xg_tool_bar_attach_callback)
(update_frame_tool_bar, free_frame_tool_bar): Call xg_height_changed.
Remove calls to xg_frame_set_char_size.

* startup.el (command-line-x-option-alist): Add -mm and --maximized.

* NEWS: Mention maximized.

* frames.texi (Size Parameters): Mention maximized for fullscreen.

* xresources.texi (Table of Resources): Mention maximized for
fullscreen.

* cmdargs.texi (Window Size X): -mm/--maximized is new.
"
b360b106e9954a1f31bb4a22f023820958eafe5a,emacs-mirror/emacs,"Handle failed attempts to split a side window (Bug#18304).

* window.el (window--side-window-p): New function.
(split-window, window-splittable-p): Use window--side-window-p to
determine whether WINDOW can be split (Bug#18304).
* calendar/calendar.el (calendar-basic-setup): Fix one call of
`window-splittable-p' and add another (Bug#18304).
"
f31b125795291270828b41185f663584ae95e518,emacs-mirror/emacs,"* faces.el (xw-defined-colors):
* simple.el (widget-convert, shell-mode): Declare as functions
instead of autoloading.

* abbrev.el:
* button.el:
* cus-face.el:
* ediff-hook.el:
* emacs-lisp/backquote.el:
* emacs-lisp/timer.el:
* facemenu.el:
* faces.el:
* menu-bar.el:
* simple.el:
* subr.el:
* textmodes/fill.el:
* textmodes/paragraphs.el: Remove autoloads, redundant when the
files are preloaded.
"
bb385a92ec4f8f5bbc93641aaa274bd735826574,emacs-mirror/emacs,"Fix bug #12587 with slow startup on MS-Windows with Netlogon service.

 src/fileio.c (check_existing): New function.
 (make_temp_name, Ffile_exists_p, Ffile_writable_p): Call it
 instead of calling 'stat', when what's needed is to check whether
 a file exists.  This avoids expensive system calls on MS-Windows.
 src/w32.c (init_environment): Call 'check_existing' instead of 'stat'.
 src/lread.c (openp) [WINDOWSNT]: Call 'access' instead of 'stat' to
 determine whether a file exists and is not a directory.
 src/lisp.h (check_existing): Add prototype.
"
04b134e174b7ce4ce49f26c56791d92dd08fbee1,emacs-mirror/emacs,"* lisp/subr.el (call-process-shell-command, process-file-shell-command):
Make the `args' obsolete.
(start-process-shell-command, start-file-process-shell-command):
Use `declare'.

Fixes: debbugs:18409
"
e8c17b818670b73acc2499b501aef3aab2ae8e58,emacs-mirror/emacs,"* window.h (WSET): Remove.

Replace all uses with calls to new setter functions.
Use INLINE_HEADER_BEGIN, INLINE_HEADER_END.
(WINDOW_INLINE): New macro.
(wset_buffer, wset_frame, wset_left_col, wset_next, wset_prev)
(wset_redisplay_end_trigger, wset_top_line, wset_total_cols)
(wset_total_lines, wset_vertical_scroll_bar)
(wset_window_end_pos, wset_window_end_valid)
(wset_window_end_vpos): New setter functions.
* window.c (WINDOW_INLINE):
Define to EXTERN_INLINE, so that the corresponding functions
are compiled into code.
(wset_combination_limit, wset_dedicated, wset_display_table)
(wset_hchild, wset_left_fringe_width, wset_left_margin_cols)
(wset_new_normal, wset_new_total, wset_next_buffers)
(wset_normal_cols, wset_normal_lines, wset_parent, wset_pointm)
(wset_prev_buffers, wset_right_fringe_width)
(wset_right_margin_cols, wset_scroll_bar_width, wset_start)
(wset_temslot, wset_vchild, wset_vertical_scroll_bar_type)
(wset_window_parameters):
* xdisp.c (wset_base_line_number, wset_base_line_pos)
(wset_column_number_displayed, wset_region_showing):
New setter functions.

Fixes: debbugs:12215
"
21238f117336d2a3f1e7970832ba05da14d44a03,emacs-mirror/emacs,"Separate read and write access to Lisp_Object slots of Lisp_Process.
* process.h (PGET, PSET): New macros similar to AREF and ASET.
* gnutls.c, print.c, process.c, sysdep.c, w32.c, xdisp.c: Adjust users.
"
4982861a08d0ec3262a0b68ff699920bb2938c40,emacs-mirror/emacs,"Make some old emulation modes obsolete

Ref: http://lists.gnu.org/archive/html/emacs-devel/2014-05/msg00502.html

* lisp/emulation/crisp.el, lisp/emulation/tpu-edt.el:
* lisp/emulation/tpu-extras.el, lisp/emulation/tpu-mapper.el:
* lisp/emulation/vi.el, lisp/emulation/vip.el, lisp/emulation/ws-mode.el:
Move to obsolete/.

* doc/emacs/ack.texi (Acknowledgments): Remove some obsolete items.

* doc/emacs/misc.texi (Emulation): Remove section.

* doc/lispintro/emacs-lisp-intro.texi (Autoload): Update loaddefs.el details.

* doc/misc/efaq.texi (Finding a package with particular functionality):
Update example.

* doc/misc/vip.texi: Mention this is obsolete.

* etc/NEWS: Mention this.
"
b895642720aaf1d89e22c7cdda11990919622a72,emacs-mirror/emacs,"emacsclient -t should not suspend Emacs server

* lisp.h, sysdep.c (block_tty_out_signal, unblock_tty_out_signal):
New functions.
* term.c (init_tty): Use them instead of rolling our own code.
* sysdep.c (tcsetpgrp_without_stopping): Likewise.  Here, this
switches from 'signal' to 'pthread_sigmask', which is safer in
multithreaded applications.
* term.c (Fresume_tty): Don't bother dissociating if O_IGNORE_CTTY,
which has already arranged for that.
(dissociate_if_controlling_tty): If setsid fails, fall back on TIOCNOTTY.
This is the main part of the bug fix.

Fixes: debbugs:13387
"
b9b37dd04e6f60ef16738efe1b396a9e0a461d86,emacs-mirror/emacs,"src/image.c: Avoid partial load of SVG libraries.

(init_svg_functions): When loading SVG-related libraries,
free already loaded libraries if the initialization fails.
(rsvg_handle_set_size_callback): Remove declaration, unused.
"
0b31660d3c10a0f8e243dd67bd0ecaf2c847d1e6,emacs-mirror/emacs,"* lisp/emacs-lisp/bytecomp.el (byte-compile-force-lexical-warnings): New var.
(byte-compile-preprocess): Use it.
(byte-compile-file-form-defalias): Try a bit harder to use macros we
can't quite recognize.
(byte-compile-add-to-list): Remove.
* lisp/emacs-lisp/cconv.el (cconv-warnings-only): New function.
(cconv-closure-convert): Add assertion.

* lisp/emacs-lisp/map-ynp.el: Use lexical-binding.
(map-y-or-n-p): Remove unused vars `tail' and `object'.
Factor out some repeated code.
* etc/NEWS (utf-8 for el): Move to the incompatible section.
"
faded0b1394b3925f646d2b4905e49e0c130e37b,emacs-mirror/emacs,"Use a shell function in configure.ac to cut down on code duplication.

* configure.ac (emacs_check_gnu_make): New shell function.
Use it to avoid duplication when checking for GNU Make.
It's OK for 'configure' to use shell functions these days,
as long as we follow the advice in the 'Shell Functions'
section of the Autoconf manual.
"
f2c74543edc7e8d07655b459ba8898eec9b6d4e8,emacs-mirror/emacs,"Fix off-by-one history pruning (bug#31211)

* lisp/subr.el (add-to-history): Clarify docstring.
Protect against negative history-length and unnecessary variable
modification, as per read_minibuf.

* lisp/ido.el (ido-record-command):
* lisp/international/mule-cmds.el (deactivate-input-method):
(set-language-environment-input-method):
* lisp/isearch.el (isearch-done):
* lisp/minibuffer.el (read-file-name-default):
* lisp/net/eww.el (eww-save-history):
* lisp/simple.el (edit-and-eval-command, repeat-complex-command):
(command-execute, kill-new, push-mark):
* src/callint.c (Fcall_interactively):
* src/minibuf.c (read_minibuf): Delegate to add-to-history.

* test/lisp/simple-tests.el (command-execute-prune-command-history):
* test/src/callint-tests.el
(call-interactively-prune-command-history): New tests.
"
0416466c4d8c8cc3011f81cd488ba4f629e70288,emacs-mirror/emacs,"Completed initial debugging and testing of reimplemented cursor motion.

 .gdbinit (prowlims): Display row->minpos and row->maxpos.
 Display truncated_on_left_p and truncated_on_right_p flags.
 Formatting fixes.
 (pmtxrows): Display the ordinal number of each row.  Don't display
 rows beyond the last one.
 xdisp.c (RECORD_MAX_MIN_POS): New macro.
 (display_line): Use it to record the minimum and maximum buffer
 positions for glyphs in the row being assembled.  If word wrap is
 in effect, restore minimum and maximum positions seen up to the
 wrap point, when iterator returns to it.
 (find_row_edges): Fix logic; eol_pos should be tested before the
 rest.
 (try_window_reusing_current_matrix): Give up if in bidi-reordered
 row and cursor not already at point.  Restore original pre-bidi
 code for unidirectional buffers.
 bidi.c (bidi_cache_shrink, bidi_cache_iterator_state): Fix
 reallocation of the cache.  (Bug#6210)
 (bidi_cache_iterator_state): Don't zero out new_paragraph (it is
 not copied by bidi_copy_it).
"
da9462398abf03e0fdd7269aedf9ed7ebe6bfaa7,emacs-mirror/emacs,"gmm-utils.el (gmm-called-interactively-p): Restore as a macro.
gnus-art.el (article-unsplit-urls)
gnus-bookmark.el (gnus-bookmark-bmenu-list)
gnus-registry.el (gnus-registry-get-article-marks)
message.el (message-goto-body): Use it.
  (message-called-interactively-p): Remove.

spam-stat.el (spam-stat-called-interactively-p): New macro.
  (spam-stat-score-buffer): Use it.

spam.el: Silence the warnings against BBDB functions when compiling.

gnus-score.el (gnus-score-decode-text-parts):
  Use append+mapcar instead of the cl function mapcan.
"
e061a11b5a59f02fac66184e991f01a433f6dc8d,emacs-mirror/emacs,"Add GnuTLS support for W32 and certificate and hostname verification in GnuTLS.

* src/gnutls.c: Renamed global_initialized to
gnutls_global_initialized.  Added internals for the
:verify-hostname-error, :verify-error, and :verify-flags
parameters of `gnutls-boot' and documented those parameters in the
docstring.  Start callback support.
(emacs_gnutls_handshake): Add Woe32 support. Retry handshake
unless a fatal error occured. Call gnutls_alert_send_appropriate
on error. Return error code.
(emacs_gnutls_write): Call emacs_gnutls_handle_error.
(emacs_gnutls_read): Likewise.
(Fgnutls_boot): Return handshake error code.
(emacs_gnutls_handle_error): New function.
(wsaerror_to_errno): Likewise.

* src/gnutls.h: Add GNUTLS_STAGE_CALLBACKS enum to denote we're in the
callbacks stage.

* src/w32.c (emacs_gnutls_pull): New function for GnuTLS on Woe32.
(emacs_gnutls_push): Likewise.

* src/w32.h (emacs_gnutls_pull): Add prototype.
(emacs_gnutls_push): Likewise.
"
87958db425812ec7cacf9ad3f8db22a91e3db4e4,emacs-mirror/emacs,"Some further improvements for tramp-gvfs.el

* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-expand-file-name)
(tramp-gvfs-get-file-attributes)
(tramp-gvfs-maybe-open-connection): Handle davs? properly.
(tramp-gvfs-handler-askquestion): Improve `yes-or-no-p' prompt.
Show question also in batch mode.  Cache result.

* test/lisp/net/tramp-tests.el (tramp-test24-file-name-completion):
Support completion for host names and ports.
"
ef37cb6801b9a85aec85fd84451e31a289d584ee,ethereum/ethereumj,"Fix null key in Transaction.getSender() Update Log version and removed unused imports
"
45698641e3bf526d56aba2d0906a6380e2438c20,ethereum/ethereumj,"Cleanup for removal of empty lines
"
6ec5dd9d12f39a3e7d77d938628d38a2ea64ab8d,ethereum/ethereumj,"Calculate txTrieRoot from actual transactions in a block and move block header to separate class
"
852de9bda30f410cfd962fba093deb94999180e3,ethereum/ethereumj,"Violent legacy sync cleanup: remove HeaderStore, BlockQueue, SyncStrategy, SyncListener, SyncQueue. Almost all the sync logic is now in the SyncManager + SyncQueueImpl
"
cb5d611b1020a78d7deb1e3a41ef46e19cdd39d2,ethereum/ethereumj,"Various line/import cleanup and move AddressState to core-package
"
1e3b496e8edee4e287fdbb071f3fa5f7530a9ce9,ethereum/ethereumj,"Use separate handler and decoders
"
562af910cacd36635baaef17c37977833e3f2e6d,fkie-cad/FACT_core,"Merge pull request #69 from fkie-cad/refactoring_and_test_coverage

Refactoring and test coverage"
48706b4196314a6b3ddb8051bd298d7b89945ec2,fkie-cad/FACT_core,"duplicate code removed and test added
"
3f02a0a0691bfc0c8c6b4632c395fa9b4842d39f,fkie-cad/FACT_core,"code style improved
"
f4434db6880262e05aa1df2276712a6453305b77,fogbeam/cas_mirror,"Clean up handling of http port; update docs and logs
"
7ae55656432faa6f419e58b61a519d1b79b6e959,fogbeam/cas_mirror,"CAS-1271: Cleaning up the core module based on checkstyle rules.
"
e1689650f1d3ebc344111eb69759be3dace86206,fogbeam/cas_mirror,"Clean up u2f registration
"
7548de36fef4ff976504f37b0c494af1e6a1b11c,fogbeam/cas_mirror,"cleaned up property config
"
86cb54ccb423efd2374cee68a5f1f57707f715a3,fogbeam/cas_mirror,"Clean up checkstyle warnings
"
8a098ba329a72237baf9522431d96a5d60b95366,fogbeam/cas_mirror,"break hazelcast discovery into separate modules
"
b7f784c708284b6910a3bcce131feac422994865,fogbeam/cas_mirror,"Refactored web flow APIs
"
69d95575054b90f7457cf3a45190fc002d6ca70b,fourtf/chatterino2,"rewrote window saveing/serialization system
fixes #212
"
adf3ff307526fd7f91ab80f19d21516c67c0554e,fourtf/chatterino2,"Switch some c-style includes to c++-style includes (i.e. stdint.h to
        cstdint)

Make MessageElement to a class to fit better with the derived classes.
Make MessageLayoutElement to a class to fit better with the derived
classes.

Remove virtual from override functions

Replace all instances of boost::signals2 with pajlada::Signals. This
lets us properly use clang code model to check for issues.

Add missing virtual destructor to AbstractIrcServer
Add missing virtual destructor to MessageLayoutElement

Remove unused ""connectedConnection"" connection in TwitchChannel

Fix typo in TrimChannelName function
Fix typo in MessageParseArgs

Replace some raw pointers with unique pointers where it made more sense.
This allowed us to remove some manually written destructors whose only
purpose was to delete that raw pointer.

Reformat: Add namespace comments
Reformat: Add empty empty lines between main namespace beginning and end
Reformat: Re-order includes
Reformat: Fix some includes that used quotes where they should use angle
brackets
Reformat: Replace some typedef's with using's

Filter out more useless warnings
"
6ea3a1df082ba940fe1526b9560c5af216e09eb2,fourtf/chatterino2,"Switch some c-style includes to c++-style includes (i.e. stdint.h to
        cstdint)

Make MessageElement to a class to fit better with the derived classes.
Make MessageLayoutElement to a class to fit better with the derived
classes.

Remove virtual from override functions

Replace all instances of boost::signals2 with pajlada::Signals. This
lets us properly use clang code model to check for issues.

Add missing virtual destructor to AbstractIrcServer
Add missing virtual destructor to MessageLayoutElement

Remove unused ""connectedConnection"" connection in TwitchChannel

Fix typo in TrimChannelName function
Fix typo in MessageParseArgs

Replace some raw pointers with unique pointers where it made more sense.
This allowed us to remove some manually written destructors whose only
purpose was to delete that raw pointer.

Reformat: Add namespace comments
Reformat: Add empty empty lines between main namespace beginning and end
Reformat: Re-order includes
Reformat: Fix some includes that used quotes where they should use angle
brackets
Reformat: Replace some typedef's with using's

Filter out more useless warnings
"
bfa2f1637e31df59e3bf9ee86a66cdd752095b48,fourtf/chatterino2,"refactored the managers
"
675d094da8886d92099574ca6353d1f3aca9ba0c,hyperledger/fabric,"[FAB-1367] Rebase Kafka on common components

https://jira.hyperledger.org/browse/FAB-1367

This is the changeset that ties together all the previous changesets in
this series: it rebases the Kafka consenter on the components that are
meant to be common across all consensus implementations. The major
addition here is the new logic which resides in ""main.go"" in the kafka
package.

On top of the existing unit tests for the Kafka consenter's
sub-components (producer, consumer, broker), this changeset introduces
some basic unit tests for the new logic, identical to the ones for the
solo package. More tests are needed however, and we are in the process of
writing BDD feature files for that purpose - see
https://jira.hyperledger.org/browse/FAB-1335 for more.

This changeset also adds the following:

1. A ""disk"" (a channel for passing messages) to the mock Consumer. The
mock Consumer will use that ""disk"" to fetch the replies that it returns
during the Recv() call. This is required for the units tests we
introduced, where we want the (mock) consumer to respond with the
messages that the (mock) producer posted. The two mock constructs use
this disk channel to communicate, simulating a consumer that reads the
messages that a producer posted to a partition.
2. A timeout to the mock consumer's Recv() method to prevent blocking in
for/select loops.

Finally, this changeset makes the following refactoring-related changes:

1. It establishes a common path for both solo and the kafka consenters in
the orderer package's ""main.go"" - the previous version of this file was
whipped up together quickly and was essentially a giant if-else
construct. As we get closer to a release, some refactoring was in order.
2. It makes all dependencies in the kafka package explicit. In the
previous version, we would pass around the entire config object to
functions and let them pick what they needed from it. While this made for
symmetric and simple-looking function signatures, it allowed for
ambiguous and implicit dependencies, and would increase confusion and
maintenance burden. This specific edit affects almost all files in the
kafka package and makes for a bigger diff than necessary. I had
unfortunately began working on this before beginning the 'rebasing on
common components' work, and proceeded with both tasks in parallel. (In
hindsight, I should have scheduled this a bit better.)

Change-Id: I46392b8079ec02e273b16f51a7e8ed514c64748f
Signed-off-by: Kostas Christidis <e1a8399e36effe75a124102eb2a2bdfc82e0aab4@christidis.io>
"
f5e25a3d26e26be2a929eb8099e9a9bc4ecb8154,hyperledger/fabric,"[FAB-5267] Switch Broadcast filter w/ msgprocessor

When the Enqueue method was removed in favor of the Order/Configure
methods, the existing Broadcast code continued to use them very much
like the old Enqueue method.

This CR removes the hack which allowed the Broadcast code to continue to
function and instead leverages the msgprocessor code to appropriately
route messages to either Order or Configure.

Because the filters were removed from the blockcutter, the only place
they are currently used is in the Broadcast path.  This injects an
unneeded dependency into the Broadcast framework, making tests more
difficult to mock, and generally complicating the code.

This CR removes the filtering from the Broadcast path, in favor of doing
the filtering entirely in the msgprocessor path.  This was at one point
split into two CRs around issue FAB-5268, but it turned out to be
infeasible to break this into two changes while not breaking the e2e.

Change-Id: I6ef3595f26a4e9dfdbf6dec636b434e725ccd6f2
Signed-off-by: Jason Yellick <3a1724207862302656e55e6f840a9996dad69e59@us.ibm.com>
"
a63e4587a0b58ee61cfcefa18396dcf52fedf61c,hyperledger/fabric,"[FAB-6563] Merge External and Internal peers in config

This change set:
- Removes the nopcollection.go since it's no longer in use
- Combines the External and Internal peers reference to be Required peers
- Moves the maximum peers from core.yaml to the config
- Adjust the config and the CLI accordingly

Change-Id: Id1638bceecdc956d54c9a768e306e211ebe55dd0
Signed-off-by: yacovm <632344b5da9bd743456189af4db4b56472defb8c@il.ibm.com>
"
db7a41fd3fe8dc111c5f4e533410934a0ae8760f,hyperledger/fabric,"Remove code which uses membersrvcs package

Membership services has been moved to it own
repository and we need to remove it from fabric
master.  This change set starts that process by
removing any code which interacted directly / indirectly
with the membersrvc package. This includes:
- removing a majority of core/crypto (FAB-934)
- removing security related code from the peer
  - peer
  - endorser
  - devops
  - rest
- removing security code from chaincode
- removed membersrvc from Makefile

Was going to break it into smaller tasks,
but turns out it is easier to do it this way

Fixes FAB-1001,FAB-1002,FAB-1003,FAB-1004,FAB-1005

Change-Id: I88f70d4d1bee87a241f74b2e9580e2b4d4e40a4d
Signed-off-by: Gari Singh <10008a422f4be611b73174084ba2f7f909d5b402@gmail.com>
"
ebdfbf3fc702945002ea368597f86e755838aded,hyperledger/fabric,"[FAB-1617] [FAB-1619] Utilize configtx.Template

https://jira.hyperledger.org/browse/FAB-1617
https://jira.hyperledger.org/browse/FAB-1619

This changeset removes some of the duplicated orderer bootstrap code
from the protos/utils package.  It does this by introducing a
common/configtx/test package which uses a sample config template to
produce a genesis block.

This can also be used in the future for clients wishing to create a
chain creation transaction.  This is demonstrated in the
broadcast_config client.

This removes the vestigal utils methods for creating configuration
transactions via the 'oldConfiguration' mechanisms.

Change-Id: If064ed3cfcdbd2e59e8fb6c7bf72c8af160dc5f6
Signed-off-by: Jason Yellick <3a1724207862302656e55e6f840a9996dad69e59@us.ibm.com>
"
a757dbe09829bb56e63153cb56d0a9a45b5c5c09,hyperledger/fabric,"Standardized BDD Logging

Change print() statements to bdd_log(), defined in bdd_test_util.py
This change provides a manner for keeping all log statements in the
same format. Currently this format is simply the current time
followed by the speicified message.

Also added the copyright header to sdk_impl.py and removed unused
imports.

Change-Id: I87590bbcd6512eefcce46dc9e7f854597c203b17
Signed-off-by: Julian Carrivick <689bb502006712bd9777fa7f2dbac6f1e92d8c51@au1.ibm.com>
"
580d091a09280e2ada69952258c3f126dd956e76,hyperledger/fabric,"[FAB-8660] Operations and PeerSupport interfaces

This introduces an interface that represents the currently exported
functions of the peer. An instance of the interface is created during
package initialization which delegates to the existing functions.

- References to the peer functions in endorser.Support are replaced with a
  reference to the peer singleton.
- CreatePeerServer is renamed to the more idiomatic NewPeerServer as it
  is a constructor
- PeerSupportFactory is removed and an instance of PeerSupport is
  provided to endorser.SupportImpl and scc.ProviderFactory

Change-Id: I07ae90092be8349bed60686f7b04a5b9ab02382a
Signed-off-by: Matthew Sykes <89c6e4c9c1046731a9c37abefc223a83de36a5d9@us.ibm.com>
"
569a4e35a675f1578337566dedbd53688bba2dad,hyperledger/fabric,"[FAB-8951]: Move tx vscc validator into sep file

This commit moves tx vscc validator into separate file out of
validator.go

Change-Id: Ie3fb5b5fc2080df9f32393a17b4450f06e2b4c4b
Signed-off-by: Artem Barger <6d127d713cb520aa658cf81ac2373d74ffc1958c@il.ibm.com>
"
7074ae1cb3a416646aa0e3f899a0d7ba62ad34c0,jtablesaw/tablesaw,"minor refactoring
"
371d9affe303178a5639e546e5c8ca64f9ecd7eb,kmatheussen/radium,"Got rid of pc->block, etc.. Play song refactoring, step 2.
"
53792b75500af58527c2cf6f22a40a12a4267163,kmatheussen/radium,"undo_patches -> undo_patchlist
"
b5408222ca260502f24de25c0b132c1c00d3e26d,kmatheussen/radium,"Sequencer: 1. Auto-fade in/out audio files when overlapping. 2. Improve sequencer block auto-swap performance (rewrite). 3. Don""t auto-swap audio files with other sequencer blocks.
"
8e31574449b22b2267df9c6f9b147650d611b2ba,kmatheussen/radium,"Use enum ResamplerType instead of int as resampler type
"
7b63d0f6cdcd26ea3b9b546a8a391851533d7fa0,kmatheussen/radium,"Internal: Improve error message handling
"
f011c4c9d67b4da9da58bcaeb31a0330e8621d8b,libretro/RetroArch,"Refactor 'Saving settings' and 'Logging settings' lists
"
12825086b96945a78adddc58b2cb48bf64671179,libretro/RetroArch,"(XMB) Move active_category variables to 'category' struct
"
bd6b79fdeec0d9d18f737d2789fb4e3fd330363c,libretro/RetroArch,"command_event should only be used for events that the user can call,
so start moving things that the user shouldn't call to rarch_main_ctl
instead
"
576626ead09235fbd00d26ad61a22b0514640b85,libretro/RetroArch,"Refactor frame_is_reversed - shader drivers should no longer
be dependent upon global state
"
9d1de5c9746c2ef08422cc72a98ca850a8125243,libretro/RetroArch,"Rewrite video_context_driver_set_resize
"
c465d2585942ac4fd808e8708bc4cd41d33d6b6d,libretro/RetroArch,"(Menu) Refactor menu_list_get_last_stack
"
8d5a79fc699fd17df5206f5be55570705386dbf2,libretro/RetroArch,"Removing long-obsolete now-disfunctional ""netplay flip players"" feature
"
86fa191ae7401670794875347b8056a1ea1bd5f0,libretro/RetroArch,"(Apple) Cleanups
"
72ca4c36348c7055767c388a7c86465390bb7ddb,libretro/RetroArch,"Merge pull request #1050 from aliaspider/master

add NEON optimizations for the CC resampler."
2f504b40571079bceacd66d8143972ed942cb2fd,libretro/RetroArch,"(gfx/drivers) Get rid of remaining runloop.h / runloop_ctl
references inside gfx/drivers
"
adfc53d785acad57ee6b5f28a6837c407a697a37,libretro/RetroArch,"Merge pull request #1848 from heuripedes/master

XMB/Animation optimizations"
5b79d2b942a290017158ef4979ddd9e5a6b2c7d5,libretro/RetroArch,"Refactor video_shader_driver_set_parameters
"
cf2c0f69302cab03b09dc6e358b210c686e6f95d,libretro/RetroArch,"Rename rarch_render_cached_frame to video_driver_cached_frame
"
ca36923c998673f65dddcbe7870ae8f1e66596b3,libretro/RetroArch,"(XMB) Some cleanups
"
dfeab30f265de8832ebc2766e1caaacd1ab7a926,libretro/RetroArch,"Rename rom variables in main_wrap struct
"
662497d8972b16f052ebd7b68488ae67758d574c,libretro/RetroArch,"Refactor Configuration Settings
"
febcbc5ce4c4299af899d3123319da950cc91941,libretro/RetroArch,"C89 cleanups part 2
"
824d2923a537e43ecfea3adac297b544001dc0d3,libretro/RetroArch,"(PS3) ps3_video_psgl.c cleanups
"
69496bc2919513d5a7c4dc06ca84385bb7774d9c,libretro/RetroArch,"Replace more SSNES strings/references
"
b2932d527088d427e8eddbf838c73a82bf1e9c56,libretro/RetroArch,"Split up function into two - create xmb_draw_item
"
7b22c397f9dcc65f8d44720367645b0b96ce05d8,libretro/RetroArch,"(iOS) More cleanups - still no functional changes/fixes
"
07a7386c9d5f0e8a82679b318aa87e711d5a14b9,libretro/RetroArch,"Split up input_driver code to separate file - input_driver.c
"
c3ba0ba4e9804c839f383723bcd95d78b9c6fa4c,libretro/RetroArch,"Revert ""Refactor core_system_info_* functions""

This reverts commit f637805c9edd0e17b72d459e319a195ded230276.
"
2b840c0384db2fac8e3b698196be443741060b38,libretro/RetroArch,"Refactor perf counters
"
32cae444a0987b05e5d14f5b52263c8973588b20,libretro/RetroArch,"Fixup new private extensions.

Moved private stuff to libretro_private.h.
Dropped use of retro_variable (redundant and wrong type).

Didn't understand difference between EXEC_LOAD and EXEC_RELOAD at all.
Only one was used anyways ...
"
9cf25dcb67ca57d5f4f082839b23b07410ece2b1,libretro/RetroArch,"A slight cleanup.
"
ad336df70908445ad90f71e350b8c6d199cc3160,libretro/RetroArch,"Reimplemented Netplay spectate mode

Spectate mode is now far more similar to net (normal) mode, and, more
importantly, it works. In addition, spectate mode will not fast-forward
to catch up with the server if it lags too far behind.
"
df9e4eb119855d7e6e1129e8f8bc5741da8c857d,libretro/RetroArch,"Merge pull request #2373 from leiradel/master

moved the async job queue to the global_t scope"
bf9980d8bc96cff5f0ff8fda802944469f414f76,libretro/RetroArch,"(RARCH_CONSOLE) Control refactor - add post_init and set_analog_to_dpad_mapping
members
"
281a33d61fb13637e8621cf80c4aac746a402d6b,libretro/RetroArch,"Rename function to performance_counter_init
"
b93ef046a755187d00d848128639c15f9f5425db,libretro/RetroArch,"Header include cleanups
"
8963db204dbb546675c41b3b339ecce89bcca7e9,libretro/RetroArch,"Merge pull request #3721 from GregorR/netplay-overrides

Making netplay-related settings overrides behave consistently"
ca12482af09375dceec9e8995be69a1e9d5dc2b5,libretro/RetroArch,"Move shader files to gfx/shader/
"
e6a79f798bc6b0dc796ce1418e9e9b3f9ad46b66,libretro/RetroArch,"Refactor MODE_EXITSPAWN and MODE_EXITSPAWN_START_GAME
"
930913ee8b52e9f1266a526e9afb512d70cf6f8b,libretro/RetroArch,"(Menu) Cleanups
"
ca79265e4bf5903cf3541365773a4d51b8c464bb,libretro/RetroArch,"Rename thread wrapper as rthreads - make it part of the libretro SDK
"
a0fe04ead59192aa6abfb4c977bd003b3c710684,libretro/RetroArch,"cleaner implementation of save file / save state sorting
"
6e333c966cef1a4dc0b9b06b11568497235a31c1,libretro/RetroArch,"(Xbox/D3D) Make two drivers more alike
"
a4065ae34dd8083c688f6f9b6e0385753c4d33d6,libretro/RetroArch,"Split off input_context code into separate file
"
33d11fc4d1282b14a57326ccafc3c6325ea7e623,libretro/RetroArch,"(OSX/iOS) Rename do_iteration to rarch_main
"
c172169a9e9239a6fae324f69320043afa03bf01,libretro/RetroArch,"(Lakka) Move tweening related functions in an external lib

so they can be used from another menu driver. Also add more tweening functions.
"
08c6b6e311bd96df4617e06707eb179e21afe0fc,libretro/RetroArch,"Split up settings list code into settings_list.c file
"
a3e9a5c8f9a9b40e7fa600c7c5ff902295298c6a,libretro/RetroArch,"Get rid of unused variables
"
acef146bfd2ee985b22dcb11636221e682de8ae0,linkedin/WhereHows,"updates types and refactors object key transform functions. fixes properties passed into retention policy
"
f9253623df99e1f4fea531b9a30aa979fddf6bab,linkedin/WhereHows,"adds check for reviewable attributes on local tag in dataset-compliance-field-tag validation step. adds valuePattern for custom logical type in tagNeedsReview function. moves regex checker to regexp module
"
254fe9d73b26e9cbabbb9c88dab04bf8003ba4ee,liqd/a4-meinberlin,"Merge pull request #206 from liqd/2017-04-pv-refactor-idea-details

refactor item detail templates"
0dbfef8eef6fd822a31bd9795ac000423ae177b3,mattzeunert/FromJS,"Merge pull request #84 from mattzeunert/cleanup

Cleanup"
340dc4c527edf894b609cc296de69fae55365250,missionpinball/mpf,"Refactored a bunch of things

Also fixed some bugs in shots for waterfalling hits
"
b2b2fd6ab0aad2fe5f748a0a1724276c37e4e5ae,missionpinball/mpf,"refactor switch configure interface
"
601966f61af1923e01b43cdace2df2b992f22ebd,missionpinball/mpf,"New Feature: Text display element min_digits

You can specify ‚Äúmin_digits‚Äù for text elements. This replaces the
double_zeros setting.

MPF rev v0.19.a22
"
f61587e318ae01ebf419dd848d346dcde39bc242,missionpinball/mpf,"rename platforms
"
f9d8e8c1eb39673824d2374e74e9204ca80112a3,missionpinball/mpf,"Bug fix: BCP parameter values should be case sensitive

Also renamed BCPClient class to BCPSocketClient
Also added BCP support for event_player triggers
MPF 0.19.0a69
"
c2477691ef6428431c67f2eac37ba92c6a798a99,missionpinball/mpf,"Merge pull request #313 from missionpinball/delete_dead_code

Delete dead code"
ecda6fbb4b393857cca63b0f8ae3b9320d44efa4,missionpinball/mpf,"refactor DelayManager. remove all static variables
"
e13c793e10b3cb11c97e085a375b42848d0fa8ef,missionpinball/mpf,"cleanup shots. test delays
"
285241f4ed30ba9ce29ea1e4ac16393b74a1b983,nayutaco/ptarmigan,"Merge pull request #497 from nayuta-ueno/log_level

reduce log and rename log macro"
d6af69a9fe26308a2dd9e71ce7175163023f0215,nayutaco/ptarmigan,"fix SPV unilateral close 2

Squashed commit of the following:

commit 8b5fe822f676a85a9f89f4d9f6615b19702d2c7d
Author: ueno <ueno@nayuta.co>
Date:   Thu Dec 20 21:12:23 2018 +0900

    merge

commit 4b00818860bff19cb7c4a22fc68bf7b0717502b4
Merge: 192ee67 82fa38d
Author: ueno <ueno@nayuta.co>
Date:   Thu Dec 20 21:07:26 2018 +0900

    Merge branch 'development' into spv/unilateral2

commit 192ee67e5987181aa93f0fe0fca0bc382ba78122
Author: ueno <ueno@nayuta.co>
Date:   Thu Dec 20 21:03:28 2018 +0900

    update JAR

commit e75260d1462c9758be8671252e4425e8ac98518b
Author: ueno <ueno@nayuta.co>
Date:   Thu Dec 20 19:39:36 2018 +0900

    fix: showdb -q

commit b98504b30f53f66b69858d5654cfceff2995a763
Author: ueno <ueno@nayuta.co>
Date:   Thu Dec 20 15:22:26 2018 +0900

    fix wallet feerate

commit 911bdb16ed61d9a53b17dfb70063e235e8cec0eb
Merge: 5ba61de 9c2d657
Author: ueno <ueno@nayuta.co>
Date:   Wed Dec 19 21:05:03 2018 +0900

    Merge branch 'development' into spv/unilateral2

commit 5ba61de7e5e7278702d802f3c3e5cd82b4147ddc
Author: ueno <ueno@nayuta.co>
Date:   Wed Dec 19 21:04:10 2018 +0900

    remove from DB after wallet send

commit fdcaa35e4871f3ff81248c0331fe8892611358e1
Author: ueno <ueno@nayuta.co>
Date:   Wed Dec 19 11:17:30 2018 +0900

    route: log

commit 0f1817605700f03a9864bfe358fe0a54bb43e102
Merge: f8c9fcc 16ced42
Author: ueno <ueno@nayuta.co>
Date:   Wed Dec 19 00:31:55 2018 +0900

    Merge remote-tracking branch 'upstream/development' into spv/unilateral2

commit f8c9fccbc32fbeb9abf714369b17b420d161d73f
Merge: b3f2bde 9e83828
Author: ueno <ueno@nayuta.co>
Date:   Tue Dec 18 23:08:00 2018 +0900

    Merge branch 'fix_iszero' into spv/unilateral2

commit b3f2bdea148ee02cf1f4f5611e37e67f4d34de4b
Merge: c201d7f 58a6ec3
Author: ueno <ueno@nayuta.co>
Date:   Tue Dec 18 22:57:46 2018 +0900

    Merge branch 'development' into spv/unilateral2

commit c201d7ff51b2e6db4fa093c6cff32ae36b352f44
Author: ueno <ueno@nayuta.co>
Date:   Tue Dec 18 20:48:40 2018 +0900

    * wallet: BIP68 check
    * monitoring: revise
"
0517773a6f609e0385393b3cb1fa130e6a73b0b5,nayutaco/ptarmigan,"Merge pull request #885 from nayuta-gondo/pr/20181219a-BTC_SZ_ADDR_STR_MAX

btc: rename `BTC_SZ_ADDR_MAX` to `BTC_SZ_ADDR_STR_MAX`"
0e3d9c139bc34f7a61e280888eb3638e08fe9d34,nextstrain/auspice,"Merge branch 'simplify'

* simplify:
  minor
  remove zoomToClade
  reduce changeDateFilter actions from 3 to 2 and no getState call
  simplify visibility & branch thickness to a single action
  simplify load status & reduce number of actions of entropy
  comment out analysisSlider for now (revisit)
  simplified tree load status. Deprecated datasetGuid
  simplify load status of meta + seqs
  Meta, Tree & Sequences JSON load together. Reduces action count.
  remove RECEIVE_METADATA action
"
1938c2ce5cc0e8db1ccdb56d37c21fa68e4359a6,nextstrain/auspice,"Refactor deme and transmission data creation

"
92211f82c551f34e308fa842b658fb2c46684842,nextstrain/auspice,"Improve sidebar open/close behavior

* Properly animate slide in and slide out
* Switch to floating circle for toggle"
72e6e882c1f05c7f0f575be1bbbc7c91848f48e8,nextstrain/auspice,"Merge branch 'master' into untangle

* master: (111 commits)
  version bump to 1.20.3 for release
  allow app to function without a manifest file
  remove initial (unnecessary) data invalidation
  rename datasets.page to displayComponent to reduce confusion
  remove clientAPIInterface file. Simplify initial load logic.
  remove PageSelect component
  update server load message
  don't show sidebar until data is loaded
  narratives sourced from ""/narratives/..."" URLs
  version bump to 1.20.2 for release
  Base freq label threshold on maxY
  version bump to 1.20.1 for release
  Remove 0.0002 threshold from frequencies
  restore narratives. Scroll not perfect.
  add travis badges to readme
  Further cleanup of release script
  version bump to 1.20.0 for release
  Deploy from Travis CI on ""release"" branch
  Update release script to work with Travis CI
  Add lower-level links to navbar to prevent splash page flash
  ...
"
3d5713a53a708b06e0f62fe22dbd461846a615da,nextstrain/auspice,"Merge branch 'charon'

* charon:
  auspice-dev loader.io token
  renaming
  local data prefix bug fix
  fix API address, heroku port & S3 calls
  access mumps datasets via user=mumps
  Implement API server. Most data is now accessed through API calls
"
a2e63b7f0be1d495163ac39a5204582a362edc19,nsnam/ns-3-dev-git,"iid (void) -> GetTypeId (void)
"
7e4a27438ea99deb7fe7b860216b650769ea7751,oVirt/ovirt-web-ui,"Merge pull request #651 from sjd78/refactor-console

ux-redesign: Refactor console components and redux code"
a88df50b2f44e8efe4b3b115a16fa761c87fda2e,oVirt/ovirt-web-ui,"Merge pull request #653 from sjd78/refactor-breadcrumb

ux-redesign: Extract Breadcrumbs from PageRouter.js"
9242423c93daadf1bb25038eadfd30eab7a06722,objective-audio/ui,"rename bg
"
8969166150ebd1d2ca8587e76a49418beef6334e,oliexdev/openScale,"Minor cleanup
"
3c0c34908902b04ffb0dfc98629b726154df448a,photonstorm/phaser,"More refactoring for 1.0.0
"
83cbbf1d2105b168d54ab7c4d2bc36ff5baec023,photonstorm/phaser,"Text - font component cleanup

Some minor cleanup of font component handling and comments.

Also adds a warning if an ""unparsable font"" string is encountered. Might
save someone some trouble.
"
2c37dc3fdaff6550c2144a4fc30433eeb8130661,photonstorm/phaser,"StateManager moved to GlobalStateManager and a new State level proxy introduced.
You can now start, stop and swap states on the fly.
State.visible now also skips the renderer.
"
7366854f9b9a01346faee7d2f0afccd0979905fe,photonstorm/phaser,"Merge pull request #1307 from pnstickne/wip-math-util-cleanup

Math/Utils - various cleanup and deprecations/moves"
2ac824fda3003a366491229d2b221a555e06978b,polymonster/pmtech,"refactor renderer resource management
"
299949a5acc2ce272783fdd89ce579fdcf1ed1fc,polymonster/pmtech,"retire caps naming convention of shader macros, rename pmfx files and refactor
"
578d493491b37a37a208f2dfdce9cde5efda0261,postmanlabs/newman,"Standardized integration test files (#451)

* Standardized integration test file names

* Converted *collection v1* to *collection v2*

* Added collection descriptions

* Enabled [-d | --iteration-data] recognition

* Fixed lint errors

* Corrected option name for runner invocation

* Switched to util.fetch for getting iterationData, removed associated TODO

* Collection format corrections, added integration test runner

* Cleansed integration test runner code, temporarily skipped bothersome collections

* Removed temporary reference, dropped assert in favour of expect.js, used path for file resolution
"
6645fb9550d3e146299e8fc82276935f332bda3e,postmanlabs/newman,"Refactored Logger and version bump
"
3e2ef5222c700ba55ace448982e1ab9ecf3f17d3,reimagined/resolve,"Merge pull request #824 from reimagined/feature/client-side-config

Feature/Client side config
Implement redux reducers, middlewares and enhancers allowed to be specified in config via arrays/dictionaries and perform composing into index entry point, and allow module-based constructor for them"
3d8655aa960e99e7502f35b9a2b044db7378fd52,reimagined/resolve,"Excract runtime part from resolve-scripts into dedicated package resolve-runtime and small refactoring (#849)

"
ddff866d72fa266cbc64aea543671d6e330af3ea,tentone/nunuStudio,"Added object moved action

"
31eb55932e9003d247891b182adf2f373281731e,tentone/nunuStudio,"Texture editing inside material tab

Texturebox added
Number box updated (now suports Vec2)
Minor refactoring (class names casing)
"
8704ff958f3bb8de4525e5c539fb9cb82e48a23e,tentone/nunuStudio,"ShaderMaterial editor

Renamed CodeEditor to ScriptEditor
Added CodeEditor as input element
"
dff1fce498c0c3e4eca77b05cb993633a6655b33,toggl/toggldesktop,"Fix kopsik_api rename
"
e4ab96266a7d1c9aa246e65146c27dea5b9c0e80,toggl/toggldesktop,"Use separate callback for applying settings in UI
"
60b035c20683ec7611f67f3a1fd6b3e58f9b841a,toggl/toggldesktop,"Rename osx lib
"
350ef6f5f037a400d3c3f01a27adaf4dab1e314a,toggl/toggldesktop,"Refactor
"
4d4a7e7fa65a926f0fac741e34e2874cd103dc8e,toggl/toggldesktop,"Refactor
"
f5813570ca484cecdf7962ce15b1f0f8e83503f9,vespa-engine/vespa,"Rename ManagedBucketSpace to DistributorBucketSpace.
Similar renames for ManagedBucketSpaceRepo and ManagedBucketSpaceComponent.
"
f99c5ee981cac149023f9ba1c04e947ae2a3ab2a,vespa-engine/vespa,"Refactor: Move qrstart config generation from ContainerSearh to ContainerCluster.
"
b04d5cf8899eefa65cbc0112404e72285959cba8,vespa-engine/vespa,"Merge pull request #7458 from vespa-engine/balder/produce-start-config-in-container-cluster

Refactor: Move qrstart config generation from ContainerSearh to Conta‚Ä¶"
18d6d1da2c340114e9bf1936904f3e5639a5003c,vespa-engine/vespa,"Merge pull request #5841 from vespa-engine/hmusum/refactor-create-session

Minor refactoring to creating session"
3ab13a234adf4e9aefe39b8c21b0a4e5622a57a2,vespa-engine/vespa,"Merge pull request #5456 from vespa-engine/jvenstad/DO-unified

Jvenstad/do unified"
1bd4871466d962f52e4a762cb19211008551b82f,vespa-engine/vespa,"Introduce custom OpenSSL BIOs for providing direct buffer read/write

BIOs offer a dynamic view into source or sink (const/mutable) buffers
and avoids overhead of copying from/to memory BIOs. Also strictly
enforces buffer sizes to ensure there are no hidden reallocs.

Additionally make code OpenSSL 1.1+ and TLSv1.3 compatible.
"
d319cf3f6310237e021b6d1f90d9e10c721b8f71,vespa-engine/vespa,"Revert back to using deprecated http client
"
a3061cc16535aaa1c1967fce61400b1926ff5e47,vespa-engine/vespa,"Rename AthenzSslContextBuilder -> SslContextBuilder
"
505992eec3f8246e37b756e9dd5e74bdadc231a1,vespa-engine/vespa,"Cleanup
"
c289321f23805f47ad525cacf31ff2d48e7847c7,vespa-engine/vespa,"Renamed wantToUnprovision to wantToDeprovision
"
d69e78f8a2b50870b86b56f6c753f20c7b7fb415,vespa-engine/vespa,"Merge pull request #2158 from yahoo/geirst/cleanup-enums-for-data-and-collection-type

Geirst/cleanup enums for data and collection type"
37809447176a8664856002de7ad11beba748a086,vespa-engine/vespa,"Rename field
"
cd4df20c0a72920b37a6a23de0014909d366dcb0,vespa-engine/vespa,"Merge pull request #4788 from vespa-engine/lesters/support-tf-dropout

Refactor tensorflow import and add dropout test"
9387b79d50d0a41ac7ed8493d46341dda5f926d7,vespa-engine/vespa,"Merge pull request #6316 from vespa-engine/mpolden/reorganize-deployment-tests

Reorganize deployment tests"
893937f64d70de70768281bd1ee8438c00c83710,vespa-engine/vespa,"Merge pull request #5428 from vespa-engine/jvenstad/DO-unified

Jvenstad/do unified"
7bc63e1a0e4b4564674ee37480a3d83707fc4a72,vespa-engine/vespa,"remove deprecated methods and switch to hashmap instead of list.
"
41e8d2a568bce389469dbfcf4668d0f0bc72cc59,vespa-engine/vespa,"Merge pull request #3904 from vespa-engine/havardpe/tensor-cleanup

Havardpe/tensor cleanup"
8ffd38972a27548596d3da468a93ea1b837eeca8,wilkerlucio/pathom,"Extract query specs, add ast specs
"
b6e68a4c5099ba34d341119b2ebe294d3967e856,yonaskolb/XcodeGen,"make file reference caching case insensitive
"
65d82bece61dd3dfde9a40d5bf234a6cb17d18f3,yonaskolb/XcodeGen,"improve performance by not sorting files that are later sorted
"
3126901721ea3f20c4c2c784cbc9f4dcf1e8ceea,AvaloniaUI/Avalonia,"WPF embedding improvements
"
d8efff505d82d61650edf7ab0f79773c8e45bc90,AvaloniaUI/Avalonia,"Clean up formatting. Fix bug in PriorityValue usage of DeferredSetter. Change DeferredSetter to use ConditionalWeakTable to not hold strong references to PriorityValue objects.
"
5bfa93b74743c2e10551139442b702ee35924254,AvaloniaUI/Avalonia,"Renamed Deck -> Carousel.
"
d828957d6e7620fbee9cac64225d8cf42d058ccf,AvaloniaUI/Avalonia,"Merge pull request #1851 from MihaMarkic/spellchecker

Spellchecks comments and members, removes unused using statements and‚Ä¶"
64ed0761c75713f0d0e0548ef53af3f394daa5dd,AvaloniaUI/Avalonia,"Rename Dispatcher invoke methods.

`InvokeAsync` -> `Post`
`InvokeTaskAsync` -> `InvokeAsync`
"
50df7a2c6cf71cded5aa6138938c3973fed3384a,AvaloniaUI/Avalonia,"Merge pull request #1663 from jkoritzinsky/BuildScriptCleanup

Upgrade Cake and clean up build script"
1da23aa0a3861e59443e5afa503aec4e44a9cd88,AvaloniaUI/Avalonia,Merge branch 'master' into refactor/properties-overhaul
0e1d494ba6c36f2ac55a52f9458a6502626dadfc,AvaloniaUI/Avalonia,"Merge pull request #1517 from dotnet-campus/t/lvyi/fix-1516

A new grid layout algorithm to improve performance and fix some bugs"
86b2e0c6993e9208cb5a493e34c6abe2f7ce182e,DBCDK/content-first,"546 filterpage (#564)

* filtercards on desktop and mobile done

* rangeslider added

* filterbokses done

* moved dublicated functions to selectors.js + resolved test errors + IE+Edge optimizations

* filterpage done

* newest master + solved merge conflicts

* removed __tag button and replaced with __term
"
5c68e720f8eda734b11e2b318f6b4c01687afdd2,GovReady/govready-q,"replace 'authoring tool reload app' with 'upgrade app' button available to project admins
"
70b736de8cdff06697c4d7b856831d46495e8278,GovReady/govready-q,"improve the test that checks that file upload questions are working correctly
"
6559bc3f0bba140b81c6c96bd6d1020ae48a8bb1,OmicsDI/ddi-web-app,"Merge pull request #162 from OmicsDI/features/cleanup_code

Cleanup code"
17ef393e40ebb9fa87f37e333d97d3d497998705,PDXFinder/pdxfinder,"Merge branch 'cleanup' into dev
"
e91d9bbc452c9387bb2a24b4cadbdbd0149a1bd0,QEF/q-e_schrodinger,"Cleanup. IMPORTANT NOTICE: the ""collected"" format is now the default


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@13528 c92efa57-630b-4861-b058-cf58834340f0
"
fb9072cb8a8ea7c05be8115abc4fc0ef43c829c5,QEF/q-e_schrodinger,"More cleanup of mpi modules, plus support for cross-compilation on windows
using the mingw compiler (Axel)


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@10573 c92efa57-630b-4861-b058-cf58834340f0
"
189db5755f07d71e1e344f6683e74814b787493c,QEF/q-e_schrodinger,"A few more verbose error messages and a bit of cleanup.


git-svn-id: 5d23e60e07e2295b11e715623d9852ba2611792f@4656 c92efa57-630b-4861-b058-cf58834340f0
"
9fdc06fdad23e8e32ba6dfb585396ac31cb3a5a3,QEF/q-e_schrodinger,"Minor cleanup


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@5115 c92efa57-630b-4861-b058-cf58834340f0
"
aadef3cc05684294c40e899b2d873dc851a8a8d3,QEF/q-e_schrodinger,"ifdef preprocessor macro refactoring (Modules)


git-svn-id: 5d23e60e07e2295b11e715623d9852ba2611792f@12981 c92efa57-630b-4861-b058-cf58834340f0
"
5daa8ab52ccd3b72d0c850b632b620a0edd7dabd,QEF/q-e_schrodinger,"References to mp_global replaced by references to specific modules for
each parallelization level - should be done elsewhere, mp_global is just
a compatibility layer


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@10513 c92efa57-630b-4861-b058-cf58834340f0
"
0f5358941f45cf58fff98206cbc5354cdd600449,ROBOTIS-GIT/emanual,"OpenManipulator revised
"
8149b11e327365effe8558ecd355152aef426d86,ROBOTIS-GIT/emanual,"improving UX
"
14d3607572606cae5ec100c8df3ecdd557d25c77,Tarsnap/tarsnap-gui,"Add option to store app settings in .ini format.

This option, is admittedly more portable, as an alternative to the native formats, registry on Windows and Preferences plists on OS X.
INI format is default on Linux/BSD already.
"
be4b5b6c05d0a12c0b298294ecf188ef96c77532,Tarsnap/tarsnap-gui,"Refactor Restore Dialog round #1.
"
5ccaa064634cb372afcad99ea5b8dc915984ed09,angular/core-builds,"29eb24b refactor(ivy): combine LView with data (#24382)
"
ebbb89cb5e2acac7ee8e66ac056253ae269cdff0,angular/core-builds,"b99ef2b refactor(ivy): simplify bind instruction to reuse bindingUpdated logic (#23881)
"
24606b635de63426fd7ffbd77a0c0f45f3568e21,angular/core-builds,"96d06f7 fix(upgrade): Prevent property renaming for $inject.
"
0112f5d2f29f670994a3aeae2b3974a29fcf5013,briannesbitt/Carbon,"Renamed maximal() and minimal() to maxValue() and minValue().  Updated readme.
"
733c42894623bb1fe3d5003ef08f953038a7cc45,briannesbitt/Carbon,"Update carbon period (#1310)

* Avoid loop when testing that iteration state is restored

* Remove caching iteration results

* Remove tests of/relying on results caching

* Cleanup FilterTest

* Remove obsolete tests

* Simplify iteration logic

* Remove START_DATE_FILTER

* Require start date and default to now

* Move initializeCurrentDate logic into rewind

* Test inverting date interval during iteration

* Add missing comma

* Remove test item relying on current time

* Fix $validationResult type
"
2f548c435b439d3aa4ef629259553e54a9493398,brython-dev/brython,"Speed improvements
"
384f676e414cc051135987104bc0ce4ef45124c1,brython-dev/brython,"Improve speed of setattr for ""self"" in simple classes
"
67f0c86058e46e071dd3e5da7d2b15670d1ef650,brython-dev/brython,"Minor improvement in speed of function arguments parsing
"
1ee6bd34197832879fb042d7e8d26cb62c067754,camsys/transam_core,"Break out rehabilitation events into a seperate event class.

Change schedule disposition event to take a fiscal year instead of a date

Add fiscal year mixin to asset_event class
"
9a26f40df8c69669ee54407e17f34dc6fba64848,couchbase/ns_server,"MB-11435: removed unnecessary xdcr logging from hot path

Change-Id: Ib587a2e22d867f901d322fa960d99ddf18af146a
Reviewed-on: http://review.couchbase.org/39189
Tested-by: Aliaksey Kandratsenka <340b8e09ca65cd3fc686427fcfed17e87eaf61e2@gmail.com>
Reviewed-by: Aliaksey Artamonau <3c875bcfb3adf2a65b2ae7686ca921e6c9433147@gmail.com>
"
cbc18489feb7a21b8755638109ce59ead64e65ed,couchbase/ns_server,"Attempt to cleanup logged messaged with respect to severity.

Change-Id: Ic2cb15821e86025b5f5c0d1e90fcfc5295f9ad10
Reviewed-on: http://review.couchbase.org/14386
Reviewed-by: Aliaksey Kandratsenka <340b8e09ca65cd3fc686427fcfed17e87eaf61e2@gmail.com>
Tested-by: Aliaksey Kandratsenka <340b8e09ca65cd3fc686427fcfed17e87eaf61e2@gmail.com>
"
27ade02edd10252d9ea3f66a8698f093a1c1af25,couchbase/ns_server,"Merge remote-tracking branch 'origin/branch-18' into merge

* origin/branch-18:
  MB-5307: added documentation for ns_server supervisor hierarchy
  MB-5307: updated master event docs for new event types
  MB-5307: prevent vbucket filter change socket to be used twice
  MB-5307: unregister tap name even of not vbuckets are ready
  MB-5307: implemented master event for per bucket failover
  MB-5307: added master events for per-bucket rebalance start/end
  MB-5307: implemented better observing for rebalance end event
  MB-5307: send out master activity event for vbucket filter change
  MB-5307: don't stop master events streaming on unknown event
  MB-5307: added master activity event for death of vbucket mover
  MB-5307: made ebucketmigrator terminate event dump migrator args
  MB-5307: don't place extra quote around master events atoms
  MB-5307: disallow ""after"" remote master events to overtake local
  MB-5307: renamed vbucket_mover_start to vbucket_move_start
  MB-5323: increased ebucketmigrator connection timeout

Change-Id: I6c36fc8c0cafb42827bcf4b922fb4aa402dc12c8
"
31dbe1bb831d3935204fa24f2d59c9fd446ca6f1,couchbase/ns_server,"MB-5307 Use menelaus_util:bin_concat_path where possible.

Instead of converting the result of menelaus_util:concat_url_path to binary
manually.

Change-Id: I91a56bf8954b42aeaac7f260a369a7bd6b38e8a4
Reviewed-on: http://review.couchbase.org/17835
Tested-by: Aliaksey Artamonau <3c875bcfb3adf2a65b2ae7686ca921e6c9433147@gmail.com>
Reviewed-by: Aliaksey Kandratsenka <340b8e09ca65cd3fc686427fcfed17e87eaf61e2@gmail.com>
"
5082c038c218d6c0663f10d74f7f87962856ae65,couchbase/ns_server,"Merge remote-tracking branch 'origin/branch-181' into branch-18

* origin/branch-181:
  Attempt to cleanup logged messaged with respect to severity.

Conflicts:
	src/ns_vbm_sup.erl
	src/supervisor_cushion.erl

Change-Id: I65e8a92d02ed3f3e8ceaf9aa6531ea3806e3c585
"
7bb9075d4ad32df90603471bb8e9596db433c22f,databrary/databrary,"Separate js and html versions of pages

By default, only send back a js page (angular boot) with no content.
Add a noscript meta-refresh to the non-js version, as well as a noscript
link.  Add a cannonical link on non-js versions to default.  Explicitly
mark all links as js or non-js.

Some links remain default that should be nojs, but then the refresh
kicks in.  Essentially we are optimizing for the js version of the site,
and falling back (at some additional cost) to the non-js version, but
trying to stay there once fallen back.

The biggest user-visible change (and most annoying part) was the token
handling, which was previously a mess.  It's better now, but uses
the registration page for password resets.  Oh, well.
"
03f746e6212296c439d197f90894c082ade19419,databrary/databrary,"less refactor... pulls from personal library, tweaks towards vertical flow.
"
feee71afb8f550f0d00f40b471e17d18a156e909,databrary/databrary,"Various optimizations around access and authorization

Add some caching, change some semantics to match uses, update older
code.
"
5bc61a71ba60adc5547212b65c82e119aaec895d,databrary/databrary,"Use and improve volume thumbs on front panels

Volume.thumb now falls back on all shared slot assets
"
7631e3cefdd1f1586a60bc1e9fbc0db2e661042a,databrary/databrary,"Reorganize and rewrite some permission-related messages
"
5c7d497d56e388a44a28801dfa976939a21d2776,databrary/databrary,"More elimination of hard-coded permission ids

Also some regex-related cleanup
"
85e17d0b732ca9ce84e237693841b993f3dee30b,databrary/databrary,"front-page improvements; footer improvements; header improvements
"
be193584d3533e9e0b91fa41bf67bc12b90123b2,databrary/databrary,"Improve and sort of combine search pages

Fixes #1835
"
6cb13a489d3112ea90f6c81d1178cc68e813804f,databrary/databrary,"Greatly improve Async syntax with implicit classes

Should have no semantic impact.
"
38730612ac1eba066466f1a032ac6f33f7748577,databrary/databrary,"less refactor continues...
"
cd14421ce3eef456c7ebe8de6de11a53591b49d0,datawire/ambassador,"Merge and cleanup of branch 'shared/dev/tgr606' into concaf/dev/add-tls-tgr

* shared/dev/tgr606: (30 commits)
  Comment/fix for cli support of files.
  Avoid list incomprehensions.
  copy yaml to static dir
  add auth test
  implement v2 auth
  added multi decorator
  make ambassador cli work on individual files
  Previous commit also hooked kubewatch up with Scout! This one cleans up a bunch of debugging stuff.
  Scout notice normalization belongs in AmbScout, not ad hoc all over the place.
  fix links
  fix links for gatsby
  TOC
  Fix Makefile for when we don't actually have Python 3.7.
  Fix a stupid error around Scout for detailed requests and clean up a bunch of lint
  Revamp version stuff Yet Again, make the AmbScout class function, and let the CLI use it.
  Hackery to behave with Python 3.7.
  switch to master branch as target for docs
  Yet more git info into VERSION.py.
  Collect a little more git info for CI.
  Ignore some test files, ditch some needless test output.
  ...

# Conflicts:
#	ambassador/ambassador/envoy/v2/v2listener.py
"
11c6147e7c71e18fa06a950c848502b1e6e8dc4a,datawire/ambassador,"Merge pull request #43 from datawire/flynn/defect/default-rewrite

Mappings instead of services, with names and rewrite configuration"
f66ef87fde9edd2463aed8932436d7804ade9576,datawire/ambassador,"Clean up a bunch of TLS and host_rewrite stuff.
"
493d1b491889a18ebedd523efcd487a12d1481c8,decaf-emu/decaf-emu,"vulkan: Improved surface handling substantially.
"
c6970e19981b20ec351154f1bb2ede18d3b54ae5,digitalocean/netbox,"Closes #105: Interface groups (#919)

* Initial work on interface groups

* Simplify to a single LAG form factor

* Correct interface serializer

* Allow for bulk editing of interface LAG

* Additional LAG interface validation

* Fixed API tests
"
84a6e36199a983327fb42c4cc9843244bb2dccb1,expertiza/expertiza,"call 'are_needed_authorization_present?' method on several controller methods which are called most times, instead of all controller methods
"
065fadf9654a77ed569f38f703344afcd1283f50,expertiza/expertiza,"Remove unused method is_submission_possible from assignment.rb.
"
59b63d4798170a3a73bd982943894427890bd559,expertiza/expertiza,"Rename assignment_controller to assignments_controller
"
9fc45b67810e82e903621ccb9addbb4b534e2674,gift-surg/GIFT-Grab,"Merge branch '164-revise-readme' into 'master'

Revised documentation for clarity and brevity

Closes #164

See merge request !2"
1af561115949e6b882eb4c97248c2ebe00ebb104,gitbucket/gitbucket,"Mobile view improvement

"
54be93b0daf13998858010081c11fc6ccecb969c,gitbucket/gitbucket,"Move account level web hook settings to account settings

"
0a4b78160f3dc1b6e27fc141e526d80b240dda6d,gitbucket/gitbucket,"Refactor account level web hook entirely

"
03e903eef91e68e6d0b7e5884f5999f1a7760a05,gitbucket/gitbucket,"Improved the list of forked repositories presentation.
"
cf25357923dc6cbe70d9a661cde8d41bbbfcdb6d,github/VisualStudio,Merge branch 'master' into refactor/sdk-csproj
ae9fe63d5b27ca3a698f823245b7fdd346add84f,github/VisualStudio,"Migrate packages.config -> PackageReference.
"
6c852c20fc53568f2ce19660d2afe1e675971968,github/VisualStudio,"Merge pull request #1130 from github/refactor/usage-tracker

Make it easier to add new usage metrics."
7b4080ffa79889b7c8810ce5673bf71c04206b1f,github/VisualStudio,"Merge branch 'master' into fixes/1176-duplicate-login-classes

 Conflicts:
	src/GitHub.App/Models/RepositoryHost.cs
	src/UnitTests/GitHub.App/Models/RepositoryHostTests.cs
"
b476146b456027b385403a81000e385568f6f041,github/VisualStudio,"Lots of cleanup, refactor and testing
"
fc57163dd853b9dbbada03afbf50460460674536,github/VisualStudio,"Merge branch 'master' into refactor/connections-master

 Conflicts:
	src/GitHub.App/ViewModels/PullRequestCreationViewModel.cs
	test/UnitTests/GitHub.App/Caches/CredentialCacheTests.cs
	test/UnitTests/GitHub.App/Models/RepositoryHostTests.cs
	test/UnitTests/GitHub.App/ViewModels/PullRequestCreationViewModelTests.cs
	test/UnitTests/Helpers/TestLoginCache.cs
"
337771d6150f639a042659dc0b010d4908f23f40,github/VisualStudio,Merge branch 'master' into refactor/repository-model-part3
7217eff7bc3e00ca5e54c24fec9baa05733cfe94,github/VisualStudio,"Merge branch 'master' into refactor/sdk-csproj
"
5008995d70c70e0012e70dcd8a1f99ebbf359b69,github/VisualStudio,"Merge branch 'refactor/sdk-csproj' into refactor/clone
"
aa99143073165c32be58312d3701673c2ddf4c4f,github/VisualStudio,"Merge branch 'master' into fixes/809-refactor-logins

 Conflicts:
	script
"
8841522786c039622f6aea9e79c858f3c5577620,github/VisualStudio,Merge branch 'master' into refactor/pr-sessions
068c43ae0bc79abe7665ab10c43e7b5df95b747f,github/VisualStudio,"Give IActiveDocument a better name
"
b582064b84aced91f508b569c3342e60f7cc0dd1,github/VisualStudio,"Merge pull request #1919 from github/feature/open-from-uri-clone-ui

Unified Clone / Open from GitHub UI"
26874ebe79a63f34d337dc7709ba0fc1ff280cb9,github/VisualStudio,"Convert all projects to use .NET Framework 4.6

This is the version that Visual Studio is compatible with. Compiling
for .NET Framework 4.6.1 risks referencing assemblies that aren't
always available.
"
8f4a382cf5b9fc9864babfafb32cd57ae3d3535d,github/VisualStudio,"Merge pull request #2028 from github/refactor/repository-model-part3

Repository model refactoring (part 3)"
6766d79cf1af18db4c1cbe6faddd1ef99a5d10e7,github/VisualStudio,"rename project path in .sln
"
8339798838b994d8c380d13264ec296bb8866af7,github/VisualStudio,"Merge branch 'master' into split-unit-tests
"
b17b66ecc5fb5612f851518cf5e27368bce641bc,github/VisualStudio,"Merge branch 'grokys/feature/gist-support' into grokys/scope-read-optimize
"
177bca71c04f4d83aa26061ba95b67fecbe61a08,github/VisualStudio,"Merge branch 'master' into fixes/809-refactor-logins
"
3a5731fe963beb6af76773cb04cda50a3fc1e475,github/VisualStudio,Merge branch 'master' into cleanup/LogManager-CA1004
f778c6c828a54f691e17031e038cb496fc70f3de,github/VisualStudio,"Merge pull request #933 from github/grokys/refactor-idialogview

Move cancel/done/load signals to view models."
79fbb01b07de75dba25eb337d5febeb1bb3590c9,github/orchestrator,"recovery:
- db: added acknowledged_at column, acknowledged_idx index on
topology_recovery
- Added Acknowledged* fields in TopologyRecovery
- AttemptRecoveryRegistration accepts
failIfFailedInstanceInActiveRecovery, failIfClusterInActiveRecovery
  - Further assists in blocking recovery flapping
- added AcknowledgeRecovery(), AcknowledgeClusterRecoveries(),
AcknowledgeInstanceRecoveries() functions to ack a recovery/set of
recoveries (also clears the in_active_period flag)
- added ReadInActivePeriodClusterRecovery(),
ReadInActivePeriodSuccessorInstanceRecovery()
- Ack info presented in audit-recovery in web

api:
- added ""/api/ack-recovery/cluster/:clusterName/:owner/:reason""
- added ""/api/ack-recovery/cluster/alias/:clusterAlias/:owner/:reason""
- added ""/api/ack-recovery/instance/:host/:port/:owner/:reason""
- added ""/api/ack-recovery/:recoveryId/:owner/:reason""

cli:
- added ack-cluster-recoveries
- added ack-instance-recoveries
- Formalized command sections

instance_topology:
- MatchBelow now relies on refactored code in
CorrelateBinlogCoordinates()
"
5df077670aaaeacb40091ab2a11bce71d52cb2d3,github/orchestrator,"config: renamed DenyAutoPromotionHostnamePattern to
PromotionIgnoreHostnameFilters
- the former was a string (pattern), the new one is a string array (of
patterns)
- instance_topology consults the above in
isGenerallyValidAsCandidateSlave()

analysis:
- analysis_dao: removed legacy code
- reading master_host, master_port, replication_depth,
is_failing_to_connect_to_master
- analyzing FirstTierSlaveFailingToConnectToMaster

recovery:
- doing emergency topology reads on some analysis cases, in order o
speed up getting ""the full picture""
- RecoverDeadMaster: added recovery registration code
- handling UnreachableMaster, AllMasterSlavesNotReplicating,
FirstTierSlaveFailingToConnectToMaster cases

web:
- cluster.js: more info in refactoring pop ups

Added documentation for missing cli commands
"
d78c2ac2b03bf86e440584a8065de8d5ac8253cb,github/orchestrator,"Adding TLS authentication for MySQL
This adds the ability to authenticate with mutual TLS certificates with
a mysql database for both orchestrator and topology.
This creates the same TLS config for all hosts in the topology.  This is
a little more coarse grain than I like and I'll look to improving it in
the future.
The TLS config is only set up once, this should work long term, I
believe, but there could be situations where it needs to be
re-initialized.  We'll address that if it becomes an issue.
Added config variables to support TLS
Moving the ssl functions out to their own package to resolve bad import
cycle when go/db imported go/http
Adding verification skipping to all TLS points
This was inadvertantly removed prior from the Agent API
"
215c24274689e3b3eff78bd94e9f84f866fe5419,github/orchestrator,"instance:
- fix to CanReplicateFrom(): can now replicate from master even if it
does not have log_slave_updates (this is expected behavior)
web:
- similar to the above, cluster.js supports dropping over a master
without log_slave_updates

instance_topology:
- better mutex release on MoveUpSlaves()
- better safety in RepointTo() (reemoving target slave from list)
- more audit, debug in RegroupSlaves()

binlog servers:
- instance_topology:
  - sortedSlaves() supports includeBinlogServerSubSlaves
  - added GetCandidateSlaveOfBinlogServerTopology()
  - getMostUpToDateActiveBinlogServer() returns also list of binlog
servers
  - thorough rewrite of
RegroupSlavesIncludingSubSlavesOfBinlogServers(): previous algorithm was
incorrect
  - safer RegroupSlavesBinlogServers()
- recovery:
  - added recoverDeadMasterInBinlogServerTopology(), binlgo server
topologies now covered and working

purge-binary-logs:
- added PurgeBinaryLogsTo(), PurgeBinaryLogsToCurrent() in instance_dao
- added CLI command
flush-binary-logs:
- returns updated instance

instance_dao:
- added SkipToNextBinaryLog()

web:
- hiding detach-slave, reattach-slave on master node modal
"
589faf0430fee4c417c0e6cbebd869164621181f,github/orchestrator,"ReadTopologyInstance -> ReadTopologyInstanceUnbuffered
"
2d71cd5bf0c5ae8d26e1ff33ab1dd64822d67e01,jherby2k/AudioWorks,"Package metadata cleanup.
"
57415653a667cf2442d019f62287534931ab3da4,karelzak/util-linux,"hwclock: use a consistent name for --predict

The predict function name is documented as '--predict', but the
code uses '--predict-hc'. This works okay, except that the
'mutually exclusive' error message prints the undocumented name.

* sys-utils/hwclock.c: rename 'predict-hc' to 'predict' so that
    it matches the man-page. This should not be a problem because
    'predict-hc' was never documented.

Signed-off-by: J William Piggott <f6d54a5a05f5a74f0d8f326f5cb9650d0b0a4082@gmx.com>
"
b9a115b3ae5956671c3fa1cdf54f207a28e11073,kubernetes/minikube,"Add LocalClient to bypass RPC for drivers

This adds a new libmachine API implementation that skips RPC and instead
uses a vendored in driver directly.  This removes the need to download a
separate driver binary.  Currently, only the ""core"" drivers, and kvm are
supported as vendored in.  This means that xhyve is the only driver that
requires a separate binary for now.
"
1fbd936b3913ba1032231897ba3c6fab412492a7,kubernetes/minikube,"Move iso download funcs to interface for testing

Also reorg types found in cluster.go into types.go
"
4dadc79a4343253e09645a4a45fc10e7781b4ad4,kubernetes/minikube,"Merge pull request #1053 from r2d4/iso-downloader

Move iso download funcs to interface for testing"
8ae0384adb54a8fe7f15d49011aca1fa0162076d,kvhnuke/etherwallet,"extract custom gas messages to file
"
6bde301dfe7437badf9e47ea577117e4f7cae463,kvhnuke/etherwallet,"Merge branch 'hotfix-buttons' into mercury

* hotfix-buttons:
  Release: v3.10.6.0
  fix state across tabs
  update sidebar / loading token balances
  new icon CSS
  add noref to links
  set as default, not some random shit
  update token adding error messages
  add new icons and translations
  bump v
  cleanup
  Release: v3.10.5.1
"
dbe4173b206b4180e1ce03e545b63ab40ccb1cc1,lede-project/source,"image: fix jffs2(_nand) image generation

Variables dependend on JFFS2_BLOCKSIZE and NANDBLOCK_SIZE are used
for template generation, so need to be present before inclusion of
image.mk in target image Makefiles.
So move all declarations to before any includes.

Fixes: r42878 (""image.mk: clean up and parallelize mkfs calls"")
Signed-off-by: Jonas Gorski <jogo@openwrt.org>

SVN-Revision: 46564
"
084d9cce53b61766c763f8e6c620723e7bcc233f,lede-project/source,"move common CONFIG_TOUCHSCREEN entries to generic

SVN-Revision: 17943
"
29e4d82dbbf4b3c6825ea5cecd6d34509591d292,lede-project/source,"brcm63xx: fix HG556a boards and remove fallback board

This changes board info to match the Wiki
http://wiki.openwrt.org/toh/huawei/hg556a, removes the no longer needed
fallback board and fixes HG556 Ralink eeprom extraction.

Signed-off-by: √Ålvaro Fern√°ndez Rojas <noltari@gmail.com>
[jogo: rename partitions instead]
Signed-off-by: Jonas Gorski <jogo@openwrt.org>

SVN-Revision: 42206
"
eb896ce900cf69fdb2afb876dbda3a26be4f7895,lede-project/source,"mac80211: reorganize patches

SVN-Revision: 33289
"
06911d77e50073285edaf8a32a552c8800862e4e,lede-project/source,"nuke the old ath9k package, rename kmod-ath9k-new in compat-wireless to kmod-ath9k

SVN-Revision: 13911
"
a1f35ddf851f5c3d2be6432dbaceb90ca65c156c,lnked/react-starter,"rename segments to compound
"
2e2114290710eec570f582dd206463ca37801a7c,malinink/easy-tests,"Remove unused configurationBuilder
"
161bc2cfaa8b70b4c2cab5562784df34013452e1,mitmproxy/mitmproxy,"cleanup code with autoflake

run the following command:
  $ autoflake -r -i --remove-all-unused-imports --remove-unused-variables ."
7ea9726e5d7f56a25bbf27da1b754feefb143409,mitmproxy/mitmproxy,"Merge pull request #1453 from dufferzafar/limit-to-filter

Rename ""Limit"" feature to ""Filter View"""
c92992f03bba6553ec39fc42e6716beb942967e3,mitmproxy/mitmproxy,"Move cookie expiry detection to separate function
"
a86ec56012136664688fa4a8efcd866b5e3e17a8,mitmproxy/mitmproxy,"move files around
"
cd43c5ba9c2981aeffee354cbcb574b6f5e435ba,mitmproxy/mitmproxy,"simplify server changes for inline scripts
"
10ad56c8533d0c56378bc0832985c5a41caa8935,mitmproxy/mitmproxy,"Rename ""Limit"" feature to ""Filter View""
"
1b5f5021dcb7cec45269a20fe9e8fdbea00600ed,mitmproxy/mitmproxy,"Consolidate reading flows from file, use in mitmweb.
"
b0b67fe2a7a7e8d220f6917f91248c0ba8a7d64e,mitmproxy/mitmproxy,"commands: refactor types

The type system was scattered over a number of places, making it hard to
follow. This collects all command types in types.py, and completion, validation
and parsing for each type is centralised. We should use the same mechanism for
options.
"
82163a1e680d608cdf2fb33f30dfcc6e142547a7,mitmproxy/mitmproxy,"Unify mode specification

We now have:

    --mode regular (the default)
    --mode transparent
    --mode socks5
    --mode reverse:SPEC
    --mode upstream:SPEC

Where SPEC is a host specification.
"
6f8db2d7eb32684a8328e0ae8bdd73eceb861707,mitmproxy/mitmproxy,"improve MultiDict, add ImmutableMultiDict, adjust response.cookies
"
fc72097148f0a3406b5d2490623b75047a1fdc79,nansencenter/nansat,"#107 sd-48 Nansat: refactor camelCaseVarNames
"
0fb6e9eaf101a5d9afd6d8d4e69732e6368a95c5,neo4j/neo4j-browser,"Use neo4j-driver from npm

Move module aliases from webpack to .babelrc so other runtimes (jest) can reuse them as well.
Rename import alias for the driver to ''neo4j-driver-alias' to be explicit about it.
This does throw a warning in the console but that'll be supressed in a prod environment.
"
8821ccad16e444cc187da01920c8e1e284e6d512,neo4j/neo4j-browser,"Merge pull request #208 from eve-bright/extract-object-name-from-jmx

Extract object name prefix from jmx call instead of hard coding it"
605e42fee1e4217a4d568d1dcb2600c2c34e9f10,orbeon/orbeon-forms,"FB: CSS improvements

- remove unneeded CSS rules
- less padding within sections
- don't apply grid gutters outside of edited grids (like dialogs)
"
9b196cddab80e24b9ce66b1c922cb757b11fb16a,pfalcon/micropython,"Remove mp_obj_type_t.methods entry and use .locals_dict instead.

Originally, .methods was used for methods in a ROM class, and
locals_dict for methods in a user-created class.  That distinction is
unnecessary, and we can use locals_dict for ROM classes now that we have
ROMable maps.

This removes an entry in the bloated mp_obj_type_t struct, saving a word
for each ROM object and each RAM object.  ROM objects that have a
methods table (now a locals_dict) need an extra word in total (removed
the methods pointer (1 word), no longer need the sentinel (2 words), but
now need an mp_obj_dict_t wrapper (4 words)).  But RAM objects save a
word because they never used the methods entry.

Overall the ROM usage is down by a few hundred bytes, and RAM usage is
down 1 word per user-defined type/class.

There is less code (no need to check 2 tables), and now consistent with
the way ROM modules have their tables initialised.

Efficiency is very close to equivaluent.
"
c92672d7f8fc410477a4e25789d15c1fd99b675b,pfalcon/micropython,"unix: Make -c option parse input script as a file, as per CPython.

Addresses issue #915.
"
2ded68db77d92f4f277ae688c22ac0be32dc4f31,pfalcon/micropython,"Cleaned up sorted() as per Damien's suggestions.
"
cc5b4a26534646d2d33edf9d19b331303967806a,pfalcon/micropython,"Merge pull request #899 from pfalcon/usocket-rename

unix: Rename ""microsocket"" module to ""usocket""."
593bd9c27613a2433c8b52c70247b7ce68fb10ec,pharo-project/pharo,"deprecate addSelector:withMethod:notifying:

https://pharo.fogbugz.com/f/cases/21909/deprecate-addSelector-withMethod-notifying"
fa63d4a991be5dad8d13773aaac625f397452949,phenotips/phenotips,"Merge pull request #2028 from phenotips/PT-2585

PT-2585: Make patient page more visually static and less annoying on load"
885264afa044ca0e27923510947965daf313a647,phenotips/phenotips,"PT-2585: Make patient page more visually static and less annoying on load

Fixed. Added a ""expanded_by_default"" parameter to section configuration to make
configuring which sections are expanded by default easier. Also made the
expand-collapse JS extension load first, which visually speeds things up.
"
9c3dec377eb6eb822b85fa107ade2a62c9e1cfd1,riscv/riscv-openocd,"- single core context used, removed debug context as thought unnecessary.
- DCRDR now used to access special core registers - info is currently omitted from the cortex_m3 TRM ARM have told me this is the preferred access method and the docs will be updated soon.
- now checks for User Thread Mode and Thread mode when halted.
- removed repeated function declarations from command.c
- cortex_m3_prepare_reset_halt removed, updated cortex_m3_assert_reset to suit

git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@558 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
2861877b32a7a2f4022a1c3d9b66c9b4879878ac,riscv/riscv-openocd,"command_handler: change 'cmd_ctx' to CMD_CTX

Convert all command handler 'cmd_ctx' parameter usage with CMD_CTX.
"
9f212b01be20da43ba534ad33b20419779c89335,riscv/riscv-openocd,"fileio_t -> struct fileio

Remove useless structure typedef.
"
79f71fad58f3cd1a59142b65c3b79b145943b6e6,riscv/riscv-openocd,"jtag: clean up TAP state name handling

Some cosmetic cleanup, and switch to a single table mapping
between state names and symbols (vs two routines which only
share that state with difficulty).

Get rid of TAP_NUM_STATES, and some related knowledge about
how TAP numbers are assigned.  Later on, this will help us
get rid of more such hardwired knowlege.

Signed-off-by: David Brownell <a0d09457d62acbdeb1fae1223575100ccbfffdf9@users.sourceforge.net>
"
219b7f30b99c8af9f94fa1b10537bb0e2dc6209f,riscv/riscv-openocd,"- image.c and fileio.c now uses logging to propagate error strings.
 More precise, less code.
- removed unused code in fileio.c
- Windows should now find debug_handler.bin

git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@390 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
ab33bdd46c3bb3acdb3f1b1f09a0e1a9393ef798,riscv/riscv-openocd,"Improve xscale command argument parsing.
"
8012b3963fc49c7edf87f31a93bc0039095f5b59,riscv/riscv-openocd,"arm7_9_common_t -> struct arm7_9_common

Remove misleading typedef and redundant suffix from struct arm7_9_common.
"
ec0abbb278a123eb6251a97a1067bdcb0e3b403c,roelandjansen/UHSDR,"Replaced all direct uses of VirtAddrVarTab with call to function EE_GetVirtAddrForId.
This enables us to replace the table with a calculation. Saves space and more relevantly makes it
a snap to change the number of supported variables.
"
35ed059ef66347db7b5595b7a3266ed72b9b4934,roelandjansen/UHSDR,"clean-up after spectral NR
"
3af2fae9da916111ca0c488c99c30ef302082546,roelandjansen/UHSDR,"Work In Progress for #929: CW Transmit Marker
Changed Center Line from being the RX Carrier line to represent TX Carrier line
based on popular demand from the CW enthusiasts.
Works best with CW Freq. Offset = ""CW RX"".

Slight changes to the frequency bar (removed main frequency full display),
changed layout for 4xmagnify to use 4 instead of 6 frequencies since
the rounding made some of the markings irritating. Might need more thought.

DOES NOT SUPPORT SPLIT, DOES NOT SUPPORT RIT: In both cases wrong center line
are shown (i.e. RX centerline, in CW: RX center line plus sidetone)

Scope Mode has redraw issues when switch from CW to other mode.
In low magnification modes due to rounding,
centerline and filter bar may seem to be misaligned.
"
e8e0cca52c57f32324a281fda4383c2ebe1d51e9,roelandjansen/UHSDR,"Merge pull request #1088 from db4ple/active-devel

Replaced a number of double float functions with their single precision float counterparts"
551bf8c10c5c1ee6e6a218c02b050eaf2f0355ce,roelandjansen/UHSDR,"Merge pull request #664 from db4ple/active-devel

Refactoring ui_spectrum, ui_rotary, No functional change"
a794a0fba1aa5d88b5968f39244e71db7aa1a491,roelandjansen/UHSDR,"Fixed the button init code to handle the power button as well.
Moved functions and data around so that all button init related
stuff is now handled in mchf_board.h/.c
Also tried to make the whole thing a little more robust when it comes to
adding and removing buttons.
"
046736b16c59de08de146817c2114c7e7667769c,roelandjansen/UHSDR,"Merge pull request #981 from db4ple/active-devel

Refactoring and Regression Fixes Spectrum"
5ec5044d8f33c8e96170ed03f84ece0e82b7f808,scalameta/scalameta,"remove Term.Arg

This changeset belongs to the series of commits that simplify our AST model
to make it less rough on the edges.

The motivation behind this change is as follows: 1) remove a very rarely
used interpolator, 2) remove an exotic trait from our syntax model,
3) simplify the life of newcomers and experts that want to extract stuff
from an application and insert that stuff elsewhere.

Concretely:
  * Term.Arg.Named becomes Term.Assign (and it should've been so for a
    long time, as pointed out in one of the meetings, iirc by Lukas Rytz)
  * Term.Arg.Repeated becomes Term.Repeated
  * q""..."" is modified to accommodate q""$expr: _*""

Safety by construction is temporarily compromised, but will be restored
in subsequent commits that will change the AST infrastructure to accommodate
parent-based validations.
"
c5330c8722c00c1a4e820c15bfc5dfb74353cf59,scalameta/scalameta,"shorten show[Syntax] and show[Structure]

I've no idea why so much code was still using these pre-historic APIs.
"
07126d6c92804b6de61dacdd33206c2a8694a713,scalameta/scalameta,"Merge pull request #364 from xeno-by/master

reimplements basic TQL functionality"
e56a107a05ec406323623f25647fc6cf7141a641,scalameta/scalameta,"decouples Tree.pos from Tree.tokens

This is an intermediate step in a big refactoring.

At the moment, pos and tokens may end up being inconsistent with each other,
but that will be remedied in future patches.
"
ea2238f3e781082244e8319548f8a1c933f7c49c,scalameta/scalameta,"Further simplify symbol persistence in metac

This one is not obvious at all, since a seemingly minor change
introduces diffs in TargetedSuite.

After debugging, I have discovered that the diffs are caused by
the fact that gs.toSemantic is now called after the successful
gs.isUseful check. As a result, local gensyms shift because we no longer
produce useless symbols (e.g. underlying fields for vals).
"
89362410a8ff5ded4d3692c56019709f11167625,scalameta/scalameta,"Minor cleanup
"
efb99d6c3f167d5e4aa3f09819202830483259e8,scalameta/scalameta,"Extract denotations for slim and fat db.
"
b41e59222e3ba83cdca06666f60bde812162ff16,scalameta/scalameta,"Adapt semanticdb-scalac to new Type.Lambda/Type.Method syntax.

- `def x[T](e: Int): T`.signature is `[T] => (e: Int): T`
- Denotation.signature no longer include redundant fully qualified paths,
  to fully qualify use the resolved symbols instead.
"
d2ba8a226b89ae5656ca04bb2e57bb491ca5386a,scalameta/scalameta,"Remove dead code
"
8c8d20f074c52759021fe4800e83b52e2d888369,scalameta/scalameta,"removes unnecessary implicit parameters and values
"
6ef12098f45779ea27baa6c1c8c4ec6109e9e4f3,scalameta/scalameta,"Clean up matrix build for clearer overview.
"
f78ad2455a27f9ccc5b78457716bd172fabb2fd8,scalameta/scalameta,"removes Tree.start/point/end from the public API, renames .position to .pos

The former APIs were just shortcuts, easily obtainable and discoverable
from Tree.position.

The latter was just a mouthful. I think that the abbreviation is just
as comprehensible.
"
bcb37b05e868e2ba84b5a3a69534416ca9a44f83,shirasagi/shirasagi,"[add] member's ezine, anpi and weather xml (#1093)

* [add] anpi

* [add] member's ezine

* [fixup] anpi/member ezine

* [add] anpi/member ezine seeds

* [add] JMA's weather xml

* [fixup][fixup] anpi/member ezine

* [fixup][add] anpi/member ezine seeds

* [fixup][add] anpi

* [modify] improve test stabilization

* [fixup][fixup] anpi/member ezine

* [fixup][add] anpi

* [add] member/my_anpi_post specs

* [fixup][add] anpi

* [fixup][add] anpi

* [fixup][add] member/my_anpi_post specs

* [add] board/agents/nodes/anpi_post specs

* [fixup][add] JMA's weather xml

* [add] rss/node/weather_xml specs

* [add] rss/weather_xml_region spec

* [fixup][fixup] anpi/member ezine

* [add] ezine/category specs

* [fixup][add] anpi/member ezine seeds

* [refactor] issue reported by rubocop

* [modify] datetime locales
"
4fe8762f6e0d78552bb83896a5ae9967bd1f9bb3,sofa-framework/sofa,"[Multithreading] Move TaskScheduler files to SofaKernel. TaskScheduler Tests included
"
a8c9a006bac88e8d5814cf79f79ee1e6f37f6ef2,sofa-framework/sofa,"[SofaKernel] GLSL rewrite filename and/or strings management
"
de40e506c21956a697fb8db1bddd0187851f7ff1,sofa-framework/sofa,"Cleaning up SofaSimpleGui. Removed the reload bug in qtSofa.


Former-commit-id: 85939e7f34b450eb277090995a518e260bdc473b"
979c12f90180c8a91e2f788c444569bfb1ad61e2,sofa-framework/sofa,"Fixing of OpenMP issues on windows :
- cleaning of the previous solution used
- Add of IndexOpenMP in SofaHelper to handle unsigned type issues in for loop
The plugins affected by modifications are Flexible, Image and DiffusionSolver


Former-commit-id: 2a2191322a3ba16029b9b80967d616dbd17a98d8"
494e047125d9f107671f8d2c4e77a66bda1c6879,sofa-framework/sofa,"Merge branch 'improve-messageapi' of github.com:SofaDefrost/sofa into improve-messageapi
"
b281f152a5010c3866370b1b2fb716bacca160ef,sofa-framework/sofa,"[all] Update  the SceneChecker to use shared_ptr & add duplicate name checking

# Conflicts:
#	SofaKernel/modules/SofaSimulationGraph/DAGNode.cpp
#	modules/SofaGraphComponent/SceneCheckerVisitor.cpp
"
f388fc861f37ebb7fadedb23b4b6b2f958477883,sofa-framework/sofa,"r10761/sofa-dev : UPDATE : remove deprecated InstrumentVisitor never used

 //partial sync (6/8 changes)//
"
7fd8d6bb0a16bcf3547c079da922421861bada21,strongbox/strongbox,"Merge pull request #205 from strongbox/SB-728

SB-728: Re-implement a maven-indexer downloader that can work with RestAssured"
c517a044b3d00c4659a1ab312dc223ae5342a7fa,strongbox/strongbox,"SB-744: Extract the Maven 2.x layout provider code into a separate module

- Committing work-in-progress.

SB-729: Remove all the test repositories from the strongbox.xml file

- Committing more related fixes (regarding the metadata tests).
"
1e006df4d5d514eace0d28c7dcbbae9bf9195eba,strongbox/strongbox,"SB-744: Move implementations of maven/nuget regenerating checksum from the branch SB-740 .
"
b4d85341dd6a56b50834774bde6846421d606b71,substance/substance,"Refactored DOMElement implementation.

- improved linking between DOMElement instances and native elements
- added more helpers to get rid of jquery dependency
"
98506e7bee95ae4cfd451d722cc0c499ddffcd21,substance/substance,"Cleaning up.

Added a test-case revealing the issue with selections on undo/redo.
"
601bc18de3e191ba1b7af0b508d54e76047b8735,symfony/http-kernel,"Replaced EventDispatcher by Doctrine's EventManager implementation

Doctrine's EventManager implementation has several advantages over the
EventDispatcher implementation of Symfony2. Therefore I suggest that we
use their implementation.

Advantages:

 * Event Listeners are objects, not callbacks. These objects have handler
   methods that have the same name as the event. This helps a lot when
   reading the code and makes the code for adding an event listener shorter.
 * You can create Event Subscribers, which are event listeners with an
   additional getSubscribedEvents() method. The benefit here is that the
   code that registers the subscriber doesn't need to know about its
   implementation.
 * All events are defined in static Events classes, so users of IDEs benefit
   of code completion
 * The communication between the dispatching class of an event and all
   listeners is done through a subclass of EventArgs. This subclass can be
   tailored to the type of event. A constructor, setters and getters can be
   implemented that verify the validity of the data set into the object.
   See examples below.
 * Because each event type corresponds to an EventArgs implementation,
   developers of event listeners can look up the available EventArgs methods
   and benefit of code completion.
 * EventArgs::stopPropagation() is more flexible and (IMO) clearer to use
   than notifyUntil(). Also, it is a concept that is also used in other
   event implementations

Before:

    class EventListener
    {
        public function handle(EventInterface $event, $data) { ... }
    }

    $dispatcher->connect('core.request', array($listener, 'handle'));
    $dispatcher->notify('core.request', new Event(...));

After (with listeners):

    final class Events
    {
        const onCoreRequest = 'onCoreRequest';
    }

    class EventListener
    {
        public function onCoreRequest(RequestEventArgs $eventArgs) { ... }
    }

    $evm->addEventListener(Events::onCoreRequest, $listener);
    $evm->dispatchEvent(Events::onCoreRequest, new RequestEventArgs(...));

After (with subscribers):

    class EventSubscriber
    {
        public function onCoreRequest(RequestEventArgs $eventArgs) { ... }

        public function getSubscribedEvents()
        {
            return Events::onCoreRequest;
        }
    }

    $evm->addEventSubscriber($subscriber);
    $evm->dispatchEvent(Events::onCoreRequest, new RequestEventArgs(...));
"
a012688a4f8843d57fe8df7081ffb7d739695cbe,symfony/http-kernel,"[HttpKernel] moved back the default Kernel:init() method

"
8ff9191d4725a0ad53c870b09fb4d8741b715f74,tenstream/tenstream,"refactored direct_8 preallocation -- this should be easier
"
6a9474a62a34cf7785e062c886eb195b0075613b,wireapp/wire-webapp,"refactor: Add explicit dependency to the EventRepository in classes injecting events (#4247)

"
2ec2f697e9671dd3070665db145f854523ef86af,wireapp/wire-webapp,"Unify ephemeral timer (#456)

"
24bad7ee5a15b8d2d904b0d69426c1d4d5e3f494,wix/wix-style-react,"Feature/text component (#407)

* feat(Text): add component

* chore(Text): extract driver

* chore(Text): add headingDefaults className for h1-h5 types

because heading elements in browsers have font-weight which does not
look like what we use in UX

* feat(Text): add story

* chore(Text): testkits

also refactor Text into class component to extend from WixComponent

* test(Text): add protractor

very important
"
0e704b3d78856b7891afba2a5fae94d4e35e38fe,wix/wix-style-react,"Draft Color Picker implementation (#830)

* color picker

* chore(refactor): ColorPicker component

* chore(color picker): refactor

* chore(*): apply color for the hsb handle

* chore(*): revert yarn.lock

* chore(*): fix eslint issues
"
fb817d5984e67063a80fd4bb7daba420fcbda09c,xournalpp/xournalpp,"Merge pull request #362 from andreasb242/threading-cleanup

#93 fixing threading"
f4f0a6f9f3ce956b73763c171f02ce5afdb22b01,xournalpp/xournalpp,Include / Code cleanup
d241dc009ca9a5e442bf9143e44ce367b3a91a97,xournalpp/xournalpp,Removed dead GTK2 Code
cac5e75a99f52217eeb8eac61723602a742ddce8,xwiki-labs/cryptpad,"Add a repl to improve debugging on the prod server
"
91c995e33a8368b4c0a3f774967666382b6a68c5,CZ-NIC/knot-resolver,"qflags: WIP refactor - lua-related fixups
"
57d48522d07f529d0d495d5e3f10130c90bb43e4,CZ-NIC/knot-resolver,"qflags: WIP refactor - regex replacements

sed -e 's/flags |= QUERY_\([A-Z0-9_]*\);/flags.\1 = true;/g' \
        -e 's/flags &= ~QUERY_\([A-Z0-9_]*\);/flags.\1 = false;/g' \
        -e 's/\(flags\|options\|opts\) & QUERY_\([A-Z0-9_]*\)\()\| ||\)/\1.\2\3/g' \
        -i $(git grep -l QUERY_)
"
eec2ba826a2393463de812c611a19b1de8f08f41,CZ-NIC/knot-resolver,"lib/resove: cleanup
"
7753a9d0977bb278219fdd0e79851dfd71e5666b,CZ-NIC/knot-resolver,"layer/iterate: cleanup, use compr hints"
62ef37fca2325f1eeb43ea76067ea00dd1127e64,CZ-NIC/knot-resolver,Merge !539: cleanup after knot minimal version bumps
b7213a6f0e0b2f083d505e79bba8ac4beb96de64,CZ-NIC/knot-resolver,"qflags: WIP refactor - hand-replace complex cases
"
efdae1f4345c5f2d6be201c89da0c7272ec86775,ElucidataInc/ElMaven,"Ref: Remove separate functions for setting slider status in Group Rank #217

There were three functions:
- showQualityWeightStatus
- showIntensityWeightStatus
- showDeltaRTWeightStatus

These have been replaced by a single function named setGroupRankStatus which sets the slider status for all three parameters

Issue: #217
"
21c29c33d7c69b23625a46e0623ac3392872ec1f,LightningNetwork/lnd,"multi: upgrade macaroons to v2, replace per-method auth with interceptors

This commit reworks the macaroon authentication framework to use the
v2 macaroon format and bakery API. It also replaces the code in each
RPC method which calls the macaroon verifier with interceptors which
call the macaroon verifier instead. In addition, the operation
permissions are reworked to fit the new format of ""allow"" commands
(specifically, entity/operation permissions instead of method
permissions).
"
b9a680ce8ac55645c9c5da5c47e3ff12bd1aad8b,MishkaRogachev/JAGCS,"Start separating program modes(Flight, Misson, Settings, e.g)
"
c033ef584dc84194dc13e6e2dd5685d42ff46a3e,MishkaRogachev/JAGCS,"Dashboard status controls moved to topbar
"
519ac016dbeaa4124130287d6038e2e926459c48,MishkaRogachev/JAGCS,"Mission - Vehicle assignment refactoring
"
c4ffa364b0f3d74a7e1817534b1f9e32597e32f0,OceanPARCELS/parcels,"Merge branch 'master' into simplify-central-differences
"
0086d0ca146e184ab6d705801da72b6c32de37fb,OceanPARCELS/parcels,"Using os.pardir instead of '...' in examples data directory
"
e59266aa60b55a810081e6a338f85145fcbf61ef,OceanPARCELS/parcels,"Merge pull request #255 from OceanParcels/simplify-central-differences

This PR simplifies and generalises some of the code in `field.py` for creating gradients of `Fields`. It also extends the unit tests and makes them more robust.
Specifically, this PR replaces the `CentralDifferences` function from `field.py` with numpy inbuilt `gradient` function, while shortening and simplifying the code.

This has a few implications:
- `field.gradient()` now returns two numpy arrays, rather than `Field` objects. This is in closer agreement to the behaviour of other methods in `field.py`. Users can of course create `Field` objects from these numpy-arrays themselves
- `field.gradient()` does not take the arguments `timerange`, `lonrange` and `latrange` anymore. Again, if users want the gradients of only a subset of a field, they can first create a new (smaller) field themselves and run the `.gradient()` method on that subset
- `particleset.density()` now calculates density using `xi` and `yi`. This means that fields are shifted by half a grid cell to the upper-right compared to the previous implementation

Functions work for RectilinearGrids automatically. For CurvilinearGrids, we ask users to provide fields of `.grid.cell_edge_sizes['x']` and `.grid.cell_edge_sizes['y']` themselves (see example in `tests/test_fieldset.py`"
b419e457524d75d4bd58128c49acd2e2cf616a8c,OceanPARCELS/parcels,"Rectilinear and rectilinear s grids renaming
"
cdd81c498fbf8a93d2520e040c93ca2ab1adb253,OceanPARCELS/parcels,"moving loggers.py and error.py to tools directory
"
f8697d6e6a0a20ae43ef42453514e5da46f5eb32,OceanPARCELS/parcels,"Merge branch 'master' into simplify-central-differences
"
286794048fae1f73a9771d7059a456be6559bc72,OpenGeoscience/geojs,"Adds vistrail module and workflow test

Moved logging functions to utils
ran 'trim_trailing_whitespace.sh' script which removed the
blank line at the end of several js files
"
46943099d6a73b0dc9419a762a4a16b0c0fc43da,angular/forms-builds,"b1a79fd ci: simplify validate-commit-message empty line logic
"
48f3408670f8793c736d460493e36d08384e35b7,angular/forms-builds,"e1adf96 refactor(NgUpgrade): remove deprecated addProvider
"
ff63f0079a73206d8cce2aa9f3e6d3955eabaa3c,blakearchive/archive,"Refactored object viewer appears to be working
"
9ad5289cc2489fff0542d3b3c5bf476758902b21,blakearchive/archive,"Directives cleaned up
"
b73f7a25b58e7fb7b59932ffe200428758b2f274,blakearchive/archive,"Revert ""cleaning up for deployment""

This reverts commit 7ffa0d6b912eca0363ee6f2007846fa95b75fc71.
"
98f63c85453cea7cc0727f1889e9db48570a76a9,blakearchive/archive,"cleaning up for deployment

- removed broken conf symlinks
- random 127.0.0.1 file
- added sold logic for dev/prod sold servers
- removed no longer needed data dir
"
7329422e3627b0fa54baddd46bff68314a04cef2,blakearchive/archive,"search ui update

services.py
- change local solr to underbar
- changed query_copies results format to match works (was throwing
errors)

copy.controller
- tray can be toggled by url

copy.html
-adjusted height of viewer

search.controller, search.html
-multiple updates, but primarily worked out the tabbed results of
object,copy,work

work.controller, work.html
-highlighting search term

override.css
- some responsive fixes
- highlighting css

copyinformation.directive, .html
-highlighting search term

copyTabs.directive
- allow copy info tab to be selected via url params

editorNotes.directive, .html
-highlighting search term

illustrationDescription.directive,.html
-highlighting search term

infoTray.directive.html
- allow accordion to be open via url params

textTranscription.directive, .html
-highlighting search term

main.js
-remove unused directives
-added highlight filter
"
0c33f26fe49ddd9e8ad02537e7cba652003a601e,blakearchive/archive,"Icon for info tray responds correctly to image height. Needed a delay to get correct height.

Refactored the whole thing out into a service.
"
627bd7321949d6491983630c9e89624b16c13034,blakearchive/archive,"import.py
- added support for extraction of characteristics into a separate field

models.py
- added characteristics field to model
"
ea2320f80b28bf84574bc9e65dc721b2c401bcc5,blakearchive/archive,"Add drag & drop to compare files.
"
df0147c9b30694a7323f4a676cd920fb22d9ac03,blakearchive/archive,"Merge branch 'master' into refactor-capistrano
"
2ea6c0dee724c6585c277455842da1b611a0a75c,blakearchive/archive,"Merge branch 'refactor'
"
456300dfd1685cee4733fecc3e04f8e832f84f32,blakearchive/archive,"Merge pull request #333 from blakearchive/refactor-capistrano

Refactor capistrano"
3e22a7a1ac853823ee8282e9d3948fbc4d54e958,blynkkk/blynk-server,"#1162 cleanup in tests
"
145e914a6f334c6da8917e6f5bbaa1487747d3b5,blynkkk/blynk-server,"refactoring : token manager incapsulation
"
da49267d8afc0c5f7dc4ed3904ab80072b9c5875,blynkkk/blynk-server,"#1261 rename all app handlers
"
fccc12f5603c7ee5aebb7ad239ec0cc9984a5720,blynkkk/blynk-server,"Utils moved to 1 package
"
20b70ed0b002f361c04761af84844fa23e54e0ce,blynkkk/blynk-server,"refactoring : token manager separated from user dao
"
07df40babb0231b2e8a2f42341805b4bbcc4e284,domob1812/huntercore,"[test] Add CCoinsViewCache Access/Modify/Write tests

Add more comprehensive unit tests for CCoinsViewCache. Right now it is hard to
refactor caching code or fix bugs in the caching logic because you have to try
to mentally enumerate all the different states the cache might be in to make
sure a change doesn't cause unintended consequences. The new tests explicitly
enumerate relevant cache states, documenting and verifying the behavior in each
state, so it will be safer and easier to make changes to the caching code in
the future.
"
2ffba736e9102d016b96c2e5de2ce7757e612667,domob1812/huntercore,"Use CBitcoinAddress instead of string/uint160

Instead of conversion functions between pubkey/uint160/address in
base58.h, have a fully fledged class CBitcoinAddress (CAddress was
already taken) to represent addresses.
"
25cc1cf8dc03b9ba0ae886d354855adc207b5b6e,domob1812/huntercore,"Merge pull request #4981

85c579e script: add a slew of includes all around and drop includes from script.h (Cory Fields)
db8eb54 script: move ToString and ValueString out of the header (Cory Fields)
e9ca428 script: add ToByteVector() for converting anything with begin/end (Cory Fields)
066e2a1 script: move CScriptID to standard.h and add a ctor for creating them from CScripts (Cory Fields)
"
3810e976d6a3956dff9e66077415cf04c1fe1f90,domob1812/huntercore,"Rewrite estimateSmartFee

Change the logic of estimateSmartFee to check a 60% threshold at half the target, a 85% threshold at the target and a 95% threshold at double the target. Always check the shortest time horizon possible and ensure that estimates are monotonically decreasing.  Add a conservative mode, which makes sure that the 95% threshold is also met at longer time horizons as well.
"
119b0f85e2c8b9729228aad5d946144d57ad0f5b,domob1812/huntercore,"Split key_io (address/key encodings) off from base58
"
b536e9f7538e56618d0c6891dd343b6c0d5ee492,domob1812/huntercore,"Merge branch 'auxpow' into dev

Fix for refactoring to use std::vector<std::shared_ptr<const CTransaction>>
for mempool operations instead of std::list<CTransaction>.

Conflicts:
	src/main.cpp
	src/test/mempool_tests.cpp
	src/test/policyestimator_tests.cpp
	src/txmempool.cpp
	src/txmempool.h
"
1684f98b27de9323d24ee4489af54dd84083956a,domob1812/huntercore,"Merge pull request #735 from sipa/netbase

Network stack refactor"
3c098a8aa0780009c11b66b1a5d488a928629ebf,domob1812/huntercore,"Merge #11651: refactor: Make all #includes relative to project root (laanwj, MeshCollider, ryanofsky)

7b91b5f Remove trailing whitespace causing travis failure (MeshCollider)
434f5a2 Recommend #include<> syntax in developer notes (Russell Yanofsky)
96b9281 refactor: Include obj/build.h instead of build.h (Wladimir J. van der Laan)
138016b test: refactor: Use absolute include paths for test data files (Wladimir J. van der Laan)
e7b3163 qt: refactor: Changes to make include paths absolute (Wladimir J. van der Laan)
0c71521 build: Remove -I for everything but project root (Wladimir J. van der Laan)
5b56ec9 qt: refactor: Use absolute include paths in .ui files (Wladimir J. van der Laan)
1a44534 scripted-diff: Replace #include """" with #include <> (ryanofsky) (MeshCollider)

Pull request description:

  Rebase of #11053

  Previously started by @laanwj, ACK'ed by promag, ryanofsky, jonasschnelli, and concept-ACK'ed by practicalswift and jnewbery. Thus should be almost RTM :)

Tree-SHA512: d8d25248309deb06a54686c4a6bafd290ba69dcd0df391a50d1caed2c22ff2659be442459bdd9d1fc3b6a1360ba0804a907b1402d206df3e1cb6e8924e3c7f3e
"
eda37330911b005f4be0c2d934346b26247d50f5,domob1812/huntercore,"MOVEONLY: Move CFeeRate and Amount constants to amount.o
"
40b556d3742a1f65d67e2d4c760d0b13fe8be5b7,domob1812/huntercore,"evhttpd implementation

- *Replace usage of boost::asio with [libevent2](http://libevent.org/)*.
boost::asio is not part of C++11, so unlike other boost there is no
forwards-compatibility reason to stick with it. Together with #4738 (convert
json_spirit to UniValue), this rids Bitcoin Core of the worst offenders with
regard to compile-time slowness.

- *Replace spit-and-duct-tape http server with evhttp*. Front-end http handling
is handled by libevent, a work queue (with configurable depth and parallelism)
is used to handle application requests.

- *Wrap HTTP request in C++ class*; this makes the application code mostly
HTTP-server-neutral

- *Refactor RPC to move all http-specific code to a separate file*.
Theoreticaly this can allow building without HTTP server but with another RPC
backend, e.g. Qt's debug console (currently not implemented) or future RPC
mechanisms people may want to use.

- *HTTP dispatch mechanism*; services (e.g., RPC, REST) register which URL
paths they want to handle.

By using a proven, high-performance asynchronous networking library (also used
by Tor) and HTTP server, problems such as #5674, #5655, #344 should be avoided.

What works? bitcoind, bitcoin-cli, bitcoin-qt. Unit tests and RPC/REST tests
pass. The aim for now is everything but SSL support.

Configuration options:

- `-rpcthreads`: repurposed as ""number of  work handler threads"". Still
defaults to 4.

- `-rpcworkqueue`: maximum depth of work queue. When this is reached, new
requests will return a 500 Internal Error.

- `-rpctimeout`: inactivity time, in seconds, after which to disconnect a
client.

- `-debug=http`: low-level http activity logging
"
14f888ca804386b111b07e8988753d67f507ba30,domob1812/huntercore,"Move network-time related functions to timedata.cpp/h

The network time-offset-mangement functions from util.cpp are moved to
timedata.(cpp|h). This breaks the dependency of util on netbase.
"
ca2c83da50a2665f238432834c0246f52b5e234c,domob1812/huntercore,"Remove unused ThreadSafeAskFee from ui_interface

ThreadSafeAskFee is effectively unused. It is only called
when the fAskFee parameter on SendMoney or SendMoneyToDestination
is true, which never happens. Remove it.
"
0733c1bde69c6ccfe593d2eec775d0ae32fe7140,domob1812/huntercore,"Refactor: move GetValueIn(tx) to tx.GetValueIn()

GetValueIn makes more sense as a CTransaction member.
"
2a03a39020da5ae38f05c38a5bf92c023acdeb90,domob1812/huntercore,"Add separate bitcoin-rpc client

This adds an executable `bitcoin-rpc` that only serves as a Bitcoin RPC
client.
The commit does not remove RPC functionality from the `bitcoind` yet,
this functionality should be deprecated but is left for a later version
to give users some time to switch.
"
a1aa8b284ce7e69ac536fbc1c0b1a1914a32c5ad,domob1812/huntercore,"Merge branch 'namecore'

Changed pgameDb to be a std::unique_ptr, similar to an upstream
change that was made to other global DB pointers.

Conflicts:
	.gitignore
	src/chainparams.cpp
	src/consensus/params.h
	src/init.cpp
	src/rest.cpp
	src/rpc/blockchain.cpp
	src/test/name_tests.cpp
	src/test/test_bitcoin.cpp
	src/validation.cpp
	src/wallet/walletdb.cpp
	test/functional/test_framework/mininode.py
"
9ac282ca0cf841435cfdd0fc3b9f018a5a5cbfc1,domob1812/huntercore,"Refactor: add IsChainFile helper. LoadBlockIndex() code movement.
"
723e5806578be90ba0f6b953629cf7389e6a27cd,domob1812/huntercore,"Merge #10756: net processing: swap out signals for an interface class

2525b972a net: stop both net/net_processing before destroying them (Cory Fields)
80e2e9d0c net: drop unused connman param (Cory Fields)
8ad663c1f net: use an interface class rather than signals for message processing (Cory Fields)
28f11e940 net: pass CConnman via pointer rather than reference (Cory Fields)

Pull request description:

  See individual commits.
  Benefits:
  - Allows us to begin moving stuff out of CNode and into CNodeState (after #10652 and follow-ups)
  - Drops boost dependency and overhead
  - Drops global signal registration
  - Friendlier backtraces

Tree-SHA512: af2038c959dbec25f0c90c74c88dc6a630e6b9e984adf52aceadd6954aa463b6aadfccf979c2459a9f3354326b5077ee02048128eda2a649236fadb595b66ee3
"
8c1dbc5e9ddbafb77e60e8c4e6eb275a3a76ac12,domob1812/huntercore,"Refactor: Removed begin/end_ptr functions.
"
85c579e3a63cf505d6cedc454755265572e97d3e,domob1812/huntercore,"script: add a slew of includes all around and drop includes from script.h

Lots of files ended up with indirect includes from script.h.
"
f59530ce6eb5a889e6eb750024ddb20e7b0df9d7,domob1812/huntercore,"Merge pull request #2154 from CodeShark/dependencycleanup

Clean up code dependencies"
bfc6070342b9f43bcf125526e6a3c8ed34e29a71,domob1812/huntercore,"uint256->arith_uint256 blob256->uint256

Introduce new opaque implementation of `uint256`, move old
""arithmetic"" implementation to `arith_uint256.
"
fe4a655042f7de31dce120aeed72345579f1b59f,domob1812/huntercore,"Fine-grained UI updates

Gets rid of `MainFrameRepaint` in favor of specific update functions that tell the UI exactly what changed.

This improves the efficiency of various handlers. Also fixes problems with mined transactions not showing up until restart.

The following notifications were added:

- `NotifyBlocksChanged`: Block chain changed
- `NotifyKeyStoreStatusChanged`: Wallet status (encrypted, locked) changed.
- `NotifyAddressBookChanged`: Address book entry changed.
- `NotifyTransactionChanged`: Wallet transaction added, removed or updated.
- `NotifyNumConnectionsChanged`: Number of connections changed.
- `NotifyAlertChanged`: New, updated or cancelled alert. As this finally makes it possible for the UI to know when a new alert arrived, it can be shown as OS notification.

These notifications could also be useful for RPC clients. However, currently, they are ignored in bitcoind (in noui.cpp).

Also brings back polling with timer for numBlocks in ClientModel. This value updates so frequently during initial download that the number of signals clogs the UI thread and causes heavy CPU usage. And after initial block download, the value changes so rarely that a delay of half a second until the UI updates is unnoticable.
"
b922fbe063b46862aae6efb35074d1e010fe7006,domob1812/huntercore,"Rename replacebyfee=opt-in to mempoolreplacement=fee
"
d29a2917ff73f7e82b32bd94a87df3ee211a27c2,domob1812/huntercore,"Rename RPC_TRANSACTION_* errors to RPC_VERIFY_* and use RPC_VERIFY_ERROR for submitblock
"
caca6aa4eb54b71b5e4e9ccfa69341f985b178d9,domob1812/huntercore,"Make some globals in main non-public.

This means they are declared static, and their extern definition in
main.h is removed. Also moved CBlockIndexWorkComparator to the .cpp
file.
"
1475ecf61141e03f63a79d59831c411e0e8a5c0a,domob1812/huntercore,"Fix de-serialization bug where AddrMan is corrupted after exception
* CAddrDB modified so that when de-serialization code throws an exception Addrman is reset to a clean state
* CAddrDB modified to make unit tests possible
* Regression test created to ensure bug is fixed
* StartNode modifed to clear adrman if CAddrDB::Read returns an error code.
"
b2135359b3ad37cf2ac09b008079ddb237eff2c9,domob1812/huntercore,"Squashed 'src/secp256k1/' changes from 6c527ec..7a49cac

7a49cac Merge #410: Add string.h include to ecmult_impl
0bbd5d4 Add string.h include to ecmult_impl
c5b32e1 Merge #405: Make secp256k1_fe_sqrt constant time
926836a Make secp256k1_fe_sqrt constant time
e2a8e92 Merge #404: Replace 3M + 4S doubling formula with 2M + 5S one
8ec49d8 Add note about 2M + 5S doubling formula
5a91bd7 Merge #400: A couple minor cleanups
ac01378 build: add -DSECP256K1_BUILD to benchmark_internal build flags
a6c6f99 Remove a bunch of unused stdlib #includes
65285a6 Merge #403: configure: add flag to disable OpenSSL tests
a9b2a5d configure: add flag to disable OpenSSL tests
b340123 Merge #402: Add support for testing quadratic residues
e6e9805 Add function for testing quadratic residue field/group elements.
efd953a Add Jacobi symbol test via GMP
fa36a0d Merge #401: ecmult_const: unify endomorphism and non-endomorphism skew cases
c6191fd ecmult_const: unify endomorphism and non-endomorphism skew cases
0b3e618 Merge #378: .gitignore build-aux cleanup
6042217 Merge #384: JNI: align shared files copyright/comments to bitcoinj's
24ad20f Merge #399: build: verify that the native compiler works for static precomp
b3be852 Merge #398: Test whether ECDH and Schnorr are enabled for JNI
aa0b1fd build: verify that the native compiler works for static precomp
eee808d Test whether ECDH and Schnorr are enabled for JNI
7b0fb18 Merge #366: ARM assembly implementation of field_10x26 inner (rebase of #173)
001f176 ARM assembly implementation of field_10x26 inner
0172be9 Merge #397: Small fixes for sha256
3f8b78e Fix undefs in hash_impl.h
2ab4695 Fix state size in sha256 struct
6875b01 Merge #386: Add some missing `VERIFY_CHECK(ctx != NULL)`
2c52b5d Merge #389: Cast pointers through uintptr_t under JNI
43097a4 Merge #390: Update bitcoin-core GitHub links
31c9c12 Merge #391: JNI: Only call ecdsa_verify if its inputs parsed correctly
1cb2302 Merge #392: Add testcase which hits additional branch in secp256k1_scalar_sqr
d2ee340 Merge #388: bench_ecdh: fix call to secp256k1_context_create
093a497 Add testcase which hits additional branch in secp256k1_scalar_sqr
a40c701 JNI: Only call ecdsa_verify if its inputs parsed correctly
faa2a11 Update bitcoin-core GitHub links
47b9e78 Cast pointers through uintptr_t under JNI
f36f9c6 bench_ecdh: fix call to secp256k1_context_create
bcc4881 Add some missing `VERIFY_CHECK(ctx != NULL)` for functions that use `ARG_CHECK`
6ceea2c align shared files copyright/comments to bitcoinj's
70141a8 Update .gitignore
7b549b1 Merge #373: build: fix x86_64 asm detection for some compilers
bc7c93c Merge #374: Add note about y=0 being possible on one of the sextic twists
e457018 Merge #364: JNI rebased
86e2d07 JNI library: cleanup, removed unimplemented code
3093576a JNI library
bd2895f Merge pull request #371
e72e93a Add note about y=0 being possible on one of the sextic twists
3f8fdfb build: fix x86_64 asm detection for some compilers
e5a9047 [Trivial] Remove double semicolons
c18b869 Merge pull request #360
3026daa Merge pull request #302
03d4611 Add sage verification script for the group laws
a965937 Merge pull request #361
83221ec Add experimental features to configure
5d4c5a3 Prevent damage_array in the signature test from going out of bounds.
419bf7f Merge pull request #356
03d84a4 Benchmark against OpenSSL verification

git-subtree-dir: src/secp256k1
git-subtree-split: 7a49cacd3937311fcb1cb36b6ba3336fca811991
"
d4b571a5d32af211b43d69643822d3d2993b344f,domob1812/huntercore,"Merge pull request #5038

0b17964 Bugfix: Replace bashisms with standard sh in tests/tools (Luke Dashjr)
ab72068 Bugfix: Replace bashisms with standard sh in gitian descriptors (Luke Dashjr)
b77b4ed Bugfix: Replace bashisms with standard sh to fix build on non-BASH systems (Luke Dashjr)
d6b0539 travis: add non-default shell testing to travis. (Cory Fields)
"
dbc8a8c86ae50059fddb2d6834fa5f0c9bbf9b71,domob1812/huntercore,"Merge #9435: Removed unused variable in test, fixing warning.

35356b4 Remove unused variable in test, fixing warning. (Russell Yanofsky)
"
ed11d53077b1f860275cc20f5c63c99673d39aa2,domob1812/huntercore,"Merge pull request #5514

be43492 build: fix 'make distcheck' (Cory Fields)
"
4d1d94c56cf60e22e9199f8c37c5634752b570f5,domob1812/huntercore,"Rename CreateThread to NewThread

Prevent clash with win32 API symbol
"
f8ded588a2f78ac2767a60c716a7d15c273b4fc7,domob1812/huntercore,"Implement BIP 14 : separate protocol version from client version
"
53a088154ce4e1fc483afa120a9063811dd0e7ea,domob1812/huntercore,"rename fNoListen to fListen and move to net

- better code readability and it belongs to net
- this is a prerequisite for a pull to add -listen to the GUI
"
9294a4bbe7ec067a45905b6e693414ad7d3b5669,domob1812/huntercore,"Separate CScriptCompressor
"
2e6080bbf31d5cc2e38e8a7b436e8ce1857e589b,domob1812/huntercore,"Remove unused variables and/or function calls
"
f748ff730b4570a19610db67aa9ded28ba98a8c5,domob1812/huntercore,"Merge pull request #4045

a3e192a replaced MINE_ with ISMINE_ (JaSK)
53a2148 fixed bug where validateaddress doesn't display information (JaSK)
f28707a fixed bug in ListReceived() (JaSK)
519dd1c Added MINE_ALL = (spendable|watchonly) (JaSK)
23b0506 Fixed some stuff in TransactionDesc (JaSK)
80dda36 removed default argument values for ismine filter (JaSK)
d5087d1 Use script matching rather than destination matching for watch-only. (Pieter Wuille)
0fa2f88 added includedWatchonly argument to listreceivedbyaddress/...account (JaSK)
f87ba3d added includeWatchonly argument to 'gettransaction' because it affects balance calculation (JaSK)
a5c6c5d fixed tiny glitch and improved readability like laanwj suggested (JaSK)
d7d5d23 Added argument to listtransactions and listsinceblock to include watchonly addresses (JaSK)
952877e Showing 'involvesWatchonly' property for transactions returned by 'listtransactions' and 'listsinceblock'. It is only appended when the transaction involves a watchonly address. (JaSK)
83f3543 Added argument to listaccounts to include watchonly addresses (JaSK)
d4640d7 Added argument to getbalance to include watchonly addresses and fixed errors in balance calculation. (JaSK)
d2692f6 Watchonly transactions are marked in transaction history (JaSK)
ffd40da Watchonly balances are shown separately in gui. (JaSK)
2935b21 qt: Hide unspendable outputs in coin control (Wladimir J. van der Laan)
c898846 Add support for watch-only addresses (Pieter Wuille)
"
f369d02c51077ffa1644954d0478e93966e1bb72,domob1812/huntercore,"Various performance tweaks to CCoinsView

* Pass txid's to CCoinsView functions by reference instead of by value
* Add a method to swap CCoins, and use it in some places to avoid a
  allocating copy + destruct.
* Optimize CCoinsViewCache::FetchCoins to do only a single search
  through the backing map.
"
a143b88dbd4971ecfdd1d39a494489c8f2db0344,domob1812/huntercore,"Merge #9010: Split up AppInit2 into multiple phases, daemonize after datadir lock errors

deec83f init: Get rid of fServer flag (Wladimir J. van der Laan)
16ca0bf init: Try to aquire datadir lock before and after daemonization (Wladimir J. van der Laan)
0cc8b6b init: Split up AppInit2 into multiple phases (Wladimir J. van der Laan)
"
e13934c94eb6e95c21e04b92c4b0775b2bded67e,domob1812/huntercore,"Merge pull request #3115 from sipa/walletmain

Interaction cleanups between main and wallet"
6b6aaa1698838278a547f16a15e635bd58ec867d,domob1812/huntercore,"Further reduce header dependencies

This commit removes the dependency of serialize.h on PROTOCOL_VERSION,
and makes this parameter required instead of implicit. This is much saner,
as it makes the places where changing a version number can have an
influence obvious.
"
faa8d9581affde35a8242c63fca8a52004d4f943,domob1812/huntercore,"[qa] TestNode: Add wait_until_stopped helper method
"
6b04508e37c5dd18cec1cd61cc4356bd208aa991,domob1812/huntercore,"Introduce separate 'generate' RPC call
"
50f85cd6b42329d3e7fff7e82aaaac2d7f14e95d,eMoflon/emoflon-ibex,"Merge pull request #325 from eMoflon/RobinO/ExchangeableILPSolvers

More efficient ILP solving, removable BlackInterpreter"
dc1be2afeec93876ca4d9941e417fb4a4428c661,ec-europa/joinup-dev,"ISAICP-2794: Improve step definition so it is clear this is an assertion, not an action.
"
5c8fe28b725bd9b128edceae3215132ea741641b,ethereum/go-ethereum,"common: move big integer math to common/math (#3699)

* common: remove CurrencyToString

Move denomination values to params instead.

* common: delete dead code

* common: move big integer operations to common/math

This commit consolidates all big integer operations into common/math and
adds tests and documentation.

There should be no change in semantics for BigPow, BigMin, BigMax, S256,
U256, Exp and their behaviour is now locked in by tests.

The BigD, BytesToBig and Bytes2Big functions don't provide additional
value, all uses are replaced by new(big.Int).SetBytes().

BigToBytes is now called PaddedBigBytes, its minimum output size
parameter is now specified as the number of bytes instead of bits. The
single use of this function is in the EVM's MSTORE instruction.

Big and String2Big are replaced by ParseBig, which is slightly stricter.
It previously accepted leading zeros for hexadecimal inputs but treated
decimal inputs as octal if a leading zero digit was present.

ParseUint64 is used in places where String2Big was used to decode a
uint64.

The new functions MustParseBig and MustParseUint64 are now used in many
places where parsing errors were previously ignored.

* common: delete unused big integer variables

* accounts/abi: replace uses of BytesToBig with use of encoding/binary

* common: remove BytesToBig

* common: remove Bytes2Big

* common: remove BigTrue

* cmd/utils: add BigFlag and use it for error-checked integer flags

While here, remove environment variable processing for DirectoryFlag
because we don't use it.

* core: add missing error checks in genesis block parser

* common: remove String2Big

* cmd/evm: use utils.BigFlag

* common/math: check for 256 bit overflow in ParseBig

This is supposed to prevent silent overflow/truncation of values in the
genesis block JSON. Without this check, a genesis block that set a
balance larger than 256 bits would lead to weird behaviour in the VM.

* cmd/utils: fixup import
"
30cd5c18549f645002aedb4c00e5bab683cb0835,ethereum/go-ethereum,"all: new p2p node representation (#17643)

Package p2p/enode provides a generalized representation of p2p nodes
which can contain arbitrary information in key/value pairs. It is also
the new home for the node database. The ""v4"" identity scheme is also
moved here from p2p/enr to remove the dependency on Ethereum crypto from
that package.

Record signature handling is changed significantly. The identity scheme
registry is removed and acceptable schemes must be passed to any method
that needs identity. This means records must now be validated explicitly
after decoding.

The enode API is designed to make signature handling easy and safe: most
APIs around the codebase work with enode.Node, which is a wrapper around
a valid record. Going from enr.Record to enode.Node requires a valid
signature.

* p2p/discover: port to p2p/enode

This ports the discovery code to the new node representation in
p2p/enode. The wire protocol is unchanged, this can be considered a
refactoring change. The Kademlia table can now deal with nodes using an
arbitrary identity scheme. This requires a few incompatible API changes:

  - Table.Lookup is not available anymore. It used to take a public key
    as argument because v4 protocol requires one. Its replacement is
    LookupRandom.
  - Table.Resolve takes *enode.Node instead of NodeID. This is also for
    v4 protocol compatibility because nodes cannot be looked up by ID
    alone.
  - Types Node and NodeID are gone. Further commits in the series will be
    fixes all over the the codebase to deal with those removals.

* p2p: port to p2p/enode and discovery changes

This adapts package p2p to the changes in p2p/discover. All uses of
discover.Node and discover.NodeID are replaced by their equivalents from
p2p/enode.

New API is added to retrieve the enode.Node instance of a peer. The
behavior of Server.Self with discovery disabled is improved. It now
tries much harder to report a working IP address, falling back to
127.0.0.1 if no suitable address can be determined through other means.
These changes were needed for tests of other packages later in the
series.

* p2p/simulations, p2p/testing: port to p2p/enode

No surprises here, mostly replacements of discover.Node, discover.NodeID
with their new equivalents. The 'interesting' API changes are:

 - testing.ProtocolSession tracks complete nodes, not just their IDs.
 - adapters.NodeConfig has a new method to create a complete node.

These changes were needed to make swarm tests work.

Note that the NodeID change makes the code incompatible with old
simulation snapshots.

* whisper/whisperv5, whisper/whisperv6: port to p2p/enode

This port was easy because whisper uses []byte for node IDs and
URL strings in the API.

* eth: port to p2p/enode

Again, easy to port because eth uses strings for node IDs and doesn't
care about node information in any way.

* les: port to p2p/enode

Apart from replacing discover.NodeID with enode.ID, most changes are in
the server pool code. It now deals with complete nodes instead
of (Pubkey, IP, Port) triples. The database format is unchanged for now,
but we should probably change it to use the node database later.

* node: port to p2p/enode

This change simply replaces discover.Node and discover.NodeID with their
new equivalents.

* swarm/network: port to p2p/enode

Swarm has its own node address representation, BzzAddr, containing both
an overlay address (the hash of a secp256k1 public key) and an underlay
address (enode:// URL).

There are no changes to the BzzAddr format in this commit, but certain
operations such as creating a BzzAddr from a node ID are now impossible
because node IDs aren't public keys anymore.

Most swarm-related changes in the series remove uses of
NewAddrFromNodeID, replacing it with NewAddr which takes a complete node
as argument. ToOverlayAddr is removed because we can just use the node
ID directly.
"
a1d9ef48c505ab4314ca8e3ee1fc272032da3034,ethereum/go-ethereum,"core, eth, rpc: split out block validator and state processor

This removes the burden on a single object to take care of all
validation and state processing. Now instead the validation is done by
the `core.BlockValidator` (`types.Validator`) that takes care of both
header and uncle validation through the `ValidateBlock` method and state
validation through the `ValidateState` method. The state processing is
done by a new object `core.StateProcessor` (`types.Processor`) and
accepts a new state as input and uses that to process the given block's
transactions (and uncles for rewords) to calculate the state root for
the next block (P_n + 1).
"
59ef6e36931c980ba15babfb3680514635faebf6,ethereum/go-ethereum,"Cleaned up objects
"
475521dd747070372f84c2b0ac202e14216dc0e0,ethereum/go-ethereum,"Merge pull request #2909 from fjl/account-manager-cleanup

all: clean up tech debt left behind by the API split"
1f9894c0845a5259adbfd30fe3a86631e6403b8d,ethereum/go-ethereum,"Old code removed and renamed amount to balance
"
fed3e6a808921fb8274b50043c5c39a24a1bbccf,ethereum/go-ethereum,"Refactored ethutil.Config.Db out
"
e05b5b8953bbe3dfedf81f9b2e414ed1a19e9f1c,fable-compiler/Fable,"Improve generics handling
"
610b59c40bedc6d74132f0b31fa0e8c7e2ab80f3,fable-compiler/Fable,"Tailcall optimizations (#669)

* New attempt at tailcalls

* Fixes and tests

* Remove blocks from switch cases
"
51d62bcdf08e4ab97dce638f4d0a022cc3f84f95,hmrc/assets-frontend,"Merge pull request #873 from hmrc/SDT-671-refactor-gulp-build

Sdt 671 refactor gulp build"
02ea09b9f16e0cc764239f56258cbdb9a3c277ca,imGraetzl/im_graetzl,"refactor CSS: px to rem
"
8b202f7c8748093a66b7d4c8337aceba6ee5daee,imGraetzl/im_graetzl,"simplify map initialisation
"
b055501dce51e543cc644bfe9d1eb7869986494a,imGraetzl/im_graetzl,"add kaminari and rewrite greatzl.activity to use active record only
"
611a790e395f257391c66aafcfbba13a2b0031a2,langurmonkey/gaiasky,"- Removed usage of view angles, radius/distance ratio used instead
- Fixed problems with octree parameters being out of range (thresholds)
- Octree generation now is lightning fast in its per-level version
- Works very well
- Some more stuff
"
cf8b7248301c2a2d6e3ccf971eabad178448814f,langurmonkey/gaiasky,"Renamed files, improved uncertainties

- Renamed some catalog files
- Added particle group DR2 loader
- Uncertainties can be loaded at startup
- Formatter modified
"
c1da921123305bd5aa71fb1c1934a48edd3d30fe,langurmonkey/gaiasky,"Fixed scaling factor: depends on UI theme

- Scaling factor now depends only on UI theme
- Fixed interfaces not unsubscribing from events when being replaced. This resulted in multiple logs after UI theme changes.
"
974544e2cd3fdf8de16a3379d410930c795e9cfa,langurmonkey/gaiasky,"Lots of improvements to spacecraft

- Fixed attitude indicator
- Fixed dobule precision problem
- Fixed acceleration problem
- Added some properties in conf
"
75ce8da1cca765bb50f1359f4913190e888bb939,libgraviton/graviton,"Merge pull request #237 from mrix/1913-refactor-compiler-pass

1913 proper exposeAs"
b87357ea86775040144b81ef518a955b9f61efdb,libgraviton/graviton,"use stdClass type for free-form objects

This makes the free-form shite not validate at all and makes sure we don't throw a 'Could not map service to class for form generator' error...
"
54cc65f6200f3aea2d425fb9b6e7aab9ce72e3d5,libgraviton/graviton,"Code cleanup due to codesniffer check
"
c474bb8dc00d5cbdec4a937475460cdda0adacff,libgraviton/graviton,"Remove KnpPaginatorBundle

It seems to be quite some time ago when we stopped using this and reimplemented it natively in our MongoDB queries.
"
d6f4f3ed2ca6db6ec30f9d8b3d13b4872476dfc0,libgraviton/graviton,"Refactor extref resolving.
"
0206872169a5cd748f61ca23d0507d7bac62546a,livepeer/go-livepeer,"clean up log
"
e90908c5b072a0b945a89aba62615b4a1033b406,micahflee/onionshare,"Move the saving of private key into the SettingsDialog and Onion objects entirely (no QPushButton to save it)
"
0fbea2693cc598161792ca421d803d9fac73e567,micahflee/onionshare,"Weblate merge, final (#858)

* Translated using Weblate (Norwegian Bokm√•l)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/nb_NO/

* Translated using Weblate (Norwegian Bokm√•l)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/nb_NO/

* Translated using Weblate (Danish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/da/

* Translated using Weblate (Danish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/da/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Translated using Weblate (Danish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/da/

* Translated using Weblate (Norwegian Bokm√•l)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/nb_NO/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Translated using Weblate (Italian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/it/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Translated using Weblate (Portuguese)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (Italian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/it/

* Translated using Weblate (German)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/de/

* Translated using Weblate (German)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/de/

* Translated using Weblate (German)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/de/

* Translated using Weblate (German)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/de/

* Translated using Weblate (German)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/de/

* Translated using Weblate (Danish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/da/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Translated using Weblate (Dutch)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/nl/

* Translated using Weblate (Danish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/da/

* Added translation using Weblate (Catalan)

* Added translation using Weblate (Georgian)

* Added translation using Weblate (Greek)

* Added translation using Weblate (Hungarian)

* Added translation using Weblate (Icelandic)

* Added translation using Weblate (Irish)

* Added translation using Weblate (Persian)

* Added translation using Weblate (Punjabi)

* Added translation using Weblate (Romanian)

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (Portuguese)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt/

* Translated using Weblate (Portuguese)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt/

* Translated using Weblate (Portuguese)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt/

* Translated using Weblate (Danish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/da/

* Translated using Weblate (Portuguese)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt/

* Translated using Weblate (Portuguese)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt/

* Translated using Weblate (Danish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/da/

* Translated using Weblate (Danish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/da/

* Translated using Weblate (Italian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/it/

* Translated using Weblate (Italian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/it/

* Translated using Weblate (Dutch)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/nl/

* Translated using Weblate (German)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/de/

* Added translation using Weblate (Portuguese (Brazil))

* Added translation using Weblate (Portuguese (Portugal))

* Translated using Weblate (Portuguese (Brazil))
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt_BR/

* Deleted translation using Weblate (Portuguese)

* Added translation using Weblate (Arabic)

* Added translation using Weblate (Indonesian)

* Added translation using Weblate (Macedonian)

* Added translation using Weblate (Polish)

* Added translation using Weblate (Slovenian)

* Added translation using Weblate (Tachelhit)

* Added translation using Weblate (Wolof)

* Added translation using Weblate (Chinese (Simplified))

* Added translation using Weblate (Chinese (Traditional))

* Translated using Weblate (Arabic)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ar/

* Translated using Weblate (Catalan)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ca/

* Translated using Weblate (Irish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ga/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (German)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/de/

* Translated using Weblate (Catalan)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ca/

* Translated using Weblate (Danish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/da/

* Translated using Weblate (Norwegian Bokm√•l)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/nb_NO/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Added translation using Weblate (Korean)

* Translated using Weblate (Catalan)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ca/

* Translated using Weblate (Catalan)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ca/

* Translated using Weblate (Italian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/it/

* Translated using Weblate (Turkish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/tr/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Added translation using Weblate (Bengali)

* Translated using Weblate (Portuguese (Brazil))
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt_BR/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Translated using Weblate (Portuguese (Brazil))
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt_BR/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (French)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fr/

* Translated using Weblate (Greek)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/el/

* Translated using Weblate (Persian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fa/

* Translated using Weblate (Arabic)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ar/

* Translated using Weblate (Bengali)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/bn/

* Translated using Weblate (Chinese (Simplified))
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/zh_Hans/

* Translated using Weblate (Gujarati)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/gu/

* Translated using Weblate (Chinese (Simplified))
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/zh_Hans/

* Translated using Weblate (Arabic)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ar/

* Translated using Weblate (Esperanto)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/eo/

* Translated using Weblate (Czech)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/cs/

* Translated using Weblate (Georgian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ka/

* Translated using Weblate (Hungarian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/hu/

* Translated using Weblate (Indonesian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/id/

* Translated using Weblate (Korean)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ko/

* Translated using Weblate (Macedonian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/mk/

* Translated using Weblate (Polish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pl/

* Translated using Weblate (Punjabi)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pa/

* Translated using Weblate (Romanian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ro/

* Translated using Weblate (Russian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ru/

* Translated using Weblate (Slovenian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/sl/

* Translated using Weblate (Portuguese (Brazil))
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt_BR/

* Translated using Weblate (Portuguese (Portugal))
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt_PT/

* Deleted translation using Weblate (Tachelhit)

* Translated using Weblate (Portuguese (Portugal))
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pt_PT/

* Translated using Weblate (Italian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/it/

* Translated using Weblate (Chinese (Traditional))
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/zh_Hant/

* Update from Weblate (#4)

* Translated using Weblate

* Added translation using Weblate (Amharic)

* Added translation using Weblate (Luganda)

* Added translation using Weblate (Yoruba)

* Translated using Weblate (Icelandic)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/is/

* Translated using Weblate (Amharic)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/am/

* Translated using Weblate (Hungarian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/hu/

* Translated using Weblate (Arabic)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ar/

* Added translation using Weblate (Swedish)

* Translated using Weblate (Greek)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/el/

* Translated using Weblate (Russian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ru/

* Translated using Weblate (Catalan)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ca/

* Translated using Weblate (Dutch)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/nl/

* Translated using Weblate (Swedish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/sv/

* Added translation using Weblate (Bulgarian)

* Translated using Weblate (German)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/de/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/

* Translated using Weblate (Swedish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/sv/

* Translated using Weblate (Arabic)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ar/

* Translated using Weblate (Bulgarian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/bg/

* Translated using Weblate (Italian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/it/

* Translated using Weblate (Indonesian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/id/

* Translated using Weblate (Persian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/fa/

* Translated using Weblate (Norwegian Bokm√•l)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/nb_NO/

* Translated using Weblate (Romanian)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/ro/

* Translated using Weblate (Polish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/pl/

* Translated using Weblate (Spanish)
Translate-URL: https://hosted.weblate.org/projects/onionshare/translations/es/
"
254ac1dae7c5cb0b006aa0a4dc351d1e5d507dac,olifolkerd/tabulator,"tidy up a few mised jquery functions from converted files
"
cda355fd86339b8ab6eb4682ac30fe333883139c,opencog/link-grammar,"Merge pull request #857 from ampli/cleanup

Misc. ""cleanups"""
87f981dbe97e928b7cc9e3d52a7adfd94dea95ca,opencog/link-grammar,"fix ""collapse of the dollar""


git-svn-id: fc35eccb03ccef1c432fd0fcf5295fcceaca86a6@32300 bcba8976-2d24-0410-9c9c-aab3bd5fdfd6
"
f59c7015586582ae749d2f0d6a96535ab814e335,opencog/link-grammar,"Introduce definition for null links, to simplify dictionary maintenance


git-svn-id: fc35eccb03ccef1c432fd0fcf5295fcceaca86a6@29010 bcba8976-2d24-0410-9c9c-aab3bd5fdfd6
"
9505d3c4076bd961e4cffa7862a8fd4ab8f512fc,opendaylight/netvirt,"String handling cleanup

* Remove redundant toString() calls
* Remove explicit String constructor calls
* Use string concatenation where appropriate

Change-Id: Ic709268d658176a5b12d1870e265f1488238b10e
Signed-off-by: Stephen Kitt <c64219c0e25aff6572376b1dfbf7cf444494f5c6@redhat.com>
"
1288c905423d762beae7825df1c2febe667da42a,opendaylight/netvirt,"NeutronVPN: Error out if VxLAN/VLAN network configured without seg-id

This adds an error log based on the presence of segmentation-id when VxLAN
or VLAN based neutron networks are configured via Neutron.

Additionally, some cleanup done:
1. Moved some impl specific utils to NeutronVpnUtils
2. Moved constants to NeutronConstants
3. Renamed SubnetMapListener class to SubnetMapChangeListener
4. Removed  unused xml dependency from QosListener

Change-Id: I2d22773e4e7bdfa927c01d679542fa36146e625a
Signed-off-by: Abhinav Gupta <273451fa85dea5386d3d843509c25513a3ae723a@ericsson.com>
"
3dd870d7cf67f95718cfc1fe99516a10559a698a,progmaticltd/homebox,"Settings simplification

Store all the settings in one file only
Automatically build ldap fields from domain name
"
e2ab857788c4b412df8067fb641c5b74ba43c422,pscedu/slash2-stable,"pool/psclist/pll/listcache API sync/utilization and remove unnecessary conjoint assertions, remove does it under the hood for you

git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@13435 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
ee04f2531e313b7e39707c2453d8bbf9a9bdb5ef,pscedu/slash2-stable,"- move keyfn from config to path constants.  this is in better accordance with
  the other data files and makes tsuite's life a lot easier.
- prefix and rename some path constants while mucking around here.
- fix a BUFFER OVERFLOW in mount_slash's ctlsockfn calculation, grrr.


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@10364 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
21cf2ef9ae292b88b37eb2e32179fa54821eb76c,pscedu/slash2-stable,"- greatly revise the fcoo loading.  the main interface is now:

	fcmh_load_fcoo()		start fcoo if not present.
	fcmh_load_fcoo_nostart()	only return true if fcoo is present.

	fcmh_getload()			create or find an fcmh by fg and
					load attributes as necessary.

	fcmh_load_fmi()			acquire a file descriptor on MDS
	fcmh_load_fci()			acquire a file descriptor on CLI
	fcmh_load_fii()			acquire a file descriptor on ION

client/server/security impact:
  fcoo_fdb changes into fci_cfd.  the mere fact that we stored fdb in the
  fcoo shows that fdb is not fitted for the design we want.

  if running over an trusted network, it adds unnecessary overhead and complication.

  if running over an untrusted network, an attacker could craft his open OPEN
  message, so the fdbuf doesnt really provide any benefit whatsoever.


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@10575 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
ce292429149635a5cbef8a917f381fa941457067,pscedu/slash2-stable,"split config routines into a translation unit, eases compilation.  and fix a bogus pointer ref

git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@8871 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
89621f974962fbceed9942b36706e842c13b8f6b,pscedu/slash2-stable,"clean up
"
0a0f119548a892388658d0b5e24e0181fd6877cc,pscedu/slash2-stable,"remove unused cfd_ops->cfd_insert, that makes me wonder


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@9326 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
13afe7c197bdbfd63ef745bf251613b8b03bdb01,pscedu/slash2-stable,"dead code
"
1123168f07332fbe41d6c9238d94f06db339272b,pscedu/slash2-stable,"clock_gettime -> PFL_GETTIMESPEC()

git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@13409 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
69ef34797ef7cb2bcd06e3a88de53a565850c9e6,pscedu/slash2-stable,"move timeout code from bflush.c to bmap_cli.c


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@22775 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
6b85502d10e8720695c67ec210ce84c4c76bbfa7,pscedu/slash2-stable,"these changes have been all lumped into one instead of being separated mainly
because I'm lazy but also because things are very integrated:

- remove OPEN
- remove OPENDIR
- remove cfd
- remove mexpfcm
- remove RELEASE
- remove fcoo

- modify fcmh sub-structure initialization as the fcoo pieces were merged
  directly into fcmh.
- CREATE needs a slash_creds.

impact from these changes:
- cleanup will require the new bmap releasing changes; until then, resources
  will become scarce quickly as things won't move to the cleanlist.

90% discussed with Paul.  hopefully the 10% is OK...


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@10612 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
e0238663f2defeded65bc0c6e2762626bf9bfcb1,pscedu/slash2-stable,"- fold bmap generation type into a new primitive
- use __pakced
- first bits of passing the bmap generation around during relication work
  so the MDS can be sure the IONs have up-to-date replications
- only set ACTIVE->OLD in mds_repl_inv_except_locked().
  SCHED should not be changed, as OLD will be marked if the replication
  finished but there is a newer bmap generation than the one from the
  replication status update
- on startup, revert all bmap SCHED status of replications to OLD.
  this imposes an unfortunate startup penalty on crash but is the only
  was to recommence queuing replication work
- add bmap_2_bgen()
- when setting SCHED, write the bh_repls changes to disk.  currently,
  the changes would only stay in-memory and we be lost as soon as we
  release the bmap which happened essentially right after we set SCHED.
  this approach to tracking replication status is easier than making a
  new mechanism which holds in-memory state for bmaps for some fields
  that can change (such as any of them except...) but some that can't
  (such as parts of the bh_repls set to SCHED)
- if a bmap is marked OLD instead of SCHED when receiving replication
  status updates from the ION, change it to ACTIVE anyway.  this goes
  hand in hand with the reverting of SCHED->OLD on startup


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@9655 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
1e1bdc2a47e2b1462837f0c2347a6a97ecf0a1a0,pscedu/slash2-stable,"more renaming

git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@8793 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
5ba759097a304c8724e047ca797c2890315dfece,pscedu/slash2-stable,"rename for conventions: sl_ prefix for shared globals

git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@22119 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
51e693eae05c37d68a71008188e347049705b5cc,rtfd/readthedocs.org,"Clean up tests
"
4bc792a2cace1779984bd28f54f38600816f2258,rtfd/readthedocs.org,"Proper rename use_virtualenv to install_project
"
846c7e2ef9ca9334a8372fdbd78aacace19c515c,rtfd/readthedocs.org,"Do not fail when unlinking an non-existing path (#4760)

* Do not fail when unlinking an non-existing path

If we try to unlink a path that doesn't exist, we need to do nothing
instead of failing hard and logging an exception on Sentry.

* Rename unlink to safe_unlink
"
0aee73bc2caeec56f05ce591b8b5182188122fb1,thheller/shadow-cljs,"rename release-snapshot, generate standalone html file, easier CLI
"
be8c5a0cf7f740fb8e7a2c214a09cf5c985922c0,thheller/shadow-cljs,"refactor runtime instance handling, it leaked and didn't share

running multiple simple builds commands each started its own
runtime instead of sharing and didn't shut it down properly.

moved babel handling out of npm since it should only apply when
using the :shadow provider. :closure can deal with ES6 on its own.
"
b9a0c6905292e790e875ca5878601c3ffb3e080c,triplea-game/triplea,"Merge pull request #757 from DanVanAtta/redundant_casts

Remove redundant casts"
c030d9d2e6746791d94c546a18b8429960d8070b,triplea-game/triplea,"Merge pull request #1764 from ssoloff/remove-unused-imports

Remove unused imports"
4ce223668b8e2a507a2bf7cdee1ba28918d0f2ad,triplea-game/triplea,"Renaming part 2
"
03f17d994d9dea30b6fdb4436cda4156ad968334,triplea-game/triplea,"Replace branching multi-step CompositeMatchAnd initialization with composite match builder
"
6c6b07f813150053a7b5b78ec936ad655f25d096,triplea-game/triplea,"Merge pull request #706 from triplea-game/string_concat_in_buffer

String buffer successive append calls instead of concatenation."
3d02f3404bc5002946a0b489e400596c1d02652a,triplea-game/triplea,"Standardizing Constants for UnitType and PlayerName + TechAttachment Check consolidation (#761)

* Constant Strings for UNIT_TYPE and PLAYER_NAME

* Consol. TechAttachment Checks isParatroopers and is MechanizedInfantry
-only implementation in TechAttachment
-removing m_ prefix for TechAttachment fields

* Renaming m_ prefix fields for MovePanel

* Minor adjustments to Constants and MapXmlHelper
-Constants: Add comment to separate player names from attachment names
-MapXmlHelper: rename setPlayerName to setPlayerNames
"
e601d3112581f4a8b6aa8b291389c69ebfb9b87a,triplea-game/triplea,"Cleanup Threads and runnable creation

* Cleanup Threads and runnable creation

* Rename variables | Fix javadoc
"
bfb02ec8622f1501f7a5e28d8b200dfcfd82b113,triplea-game/triplea,"Added isLandTransport to support moving isInfantry land units using Mechanized Infantry tech, now separated from canBlitz and isMarine. (veqryn)

git-svn-id: c1ba500aeec1d6140676cb07156a1e31a23423bf@2906 a4c711aa-641f-0410-879d-9b464e52b682
"
f7e7df64942ff3ff5a81704569a5703a76b68a98,triplea-game/triplea,"Checkstyle: Fix missing Javadoc violations

The violations were fixed indirectly by either:

1. Reducing the accessibility of the method from public to non-public if
   it was not used outside its package
2. Removing the method if it was unused
"
d01a5b45e7359d2f42522dd5abe83a41449ace20,triplea-game/triplea,"Merge pull request #2773 from ssoloff/remove-unnecessary-else-clauses-part-3

Remove unnecessary else clauses (part 3)"
5f0646322d9d73a2b7dc224c4f91247d1b6793db,triplea-game/triplea,"Revert ""Ran cleanup on every class""

This reverts commit d6319542a9bd8be60a68f6b8dba495267d88715f.
"
f1ede6acb21ce7b4ba9b7ba2009f2c4507c1ac21,triplea-game/triplea,"Collapse identical catch blocks
"
8d7fd4a66303c1aad7640e91edcbafcfa388a1c3,triplea-game/triplea,"Rename someMatch methods to anyMatch
"
e03215145b32901cfc09ffa63c09f7605eb163af,triplea-game/triplea,"Fixing some bugs based on FindBugs, and general code cleanup. (veqryn & edwin van der wal)

git-svn-id: c1ba500aeec1d6140676cb07156a1e31a23423bf@3242 a4c711aa-641f-0410-879d-9b464e52b682
"
9f616c02e97935a64d22f68ef579b7e62b407d5c,triplea-game/triplea,"Code cleanup of warnings. (veqryn)

git-svn-id: c1ba500aeec1d6140676cb07156a1e31a23423bf@3247 a4c711aa-641f-0410-879d-9b464e52b682
"
d6319542a9bd8be60a68f6b8dba495267d88715f,triplea-game/triplea,"Ran cleanup on every class
"
661cf831363f31a6cdb03f42ea38162ca1ed32b2,triplea-game/triplea,"Merge pull request #1958 from ssoloff/replace-anonymous-match-subclasses-part-1

Replace anonymous Match subclasses with factory method (part 1)"
440260ce1dc283622c85e5f04f98d3433f3ce4d2,triplea-game/triplea,"Remove unused Imports & Methods

"
ccb6a56c287e9784bab61a0797cb449d5378d186,triplea-game/triplea,"Add isAiDefault and isHidden Player Attributes (#1824)

* Add 2 new player attributes

* Updated PlayerID to use 2 new attributes

* Update player panel to use default AI and non-playable attributes

* Update broken test case

* Refactor to remove incorrect references to AI or bonus

* Update new property names
"
1092366aedb3d9bb27f3889455b420a5c3a62c8e,triplea-game/triplea,"Checkstyle: Fix missing Javadoc violations

The violations were fixed indirectly by either:

1. Reducing the accessibility of the method from public to non-public if
   it was not used outside its package
2. Removing the method if it was unused
"
3ded7830def341da103c71cd14146a7e454b5586,triplea-game/triplea,"Replace single-step CompositeMatchAnd initialization with all() factory method
"
c805cc8f4055c08df2423d5d851d8689982820ee,triplea-game/triplea,"Remove unused method parameters
"
b1112f6325ee554bf6a2a3b0b39cba0104674d5a,triplea-game/triplea,"Merge pull request #2360 from ssoloff/checkstyle-fix-rval-local-variable-name-violations-part-3

Checkstyle: Rename ""rVal"" local variables (part 3)"
e20aebdcbe929df64fd6455aea6cfa3f2dd69869,triplea-game/triplea,"Cleanup Game Parsing related classes

* Cleanup Game Parsing related classes

Changes were partially extracted from #2558

* Fix Tests

* Change remaining types

* Revert change to player list

* Make lambda more readable

* Add characterization Test
"
3c0e931b553d0c633e65a6dc36cf5aab0a544753,ulfalizer/Kconfiglib,"Improve recursive 'source' test

Check for incorrect exceptions instead of propagating them, and get rid
of the flag.
"
747da7935aeae22546eeaafcff4e120426f30808,ulfalizer/Kconfiglib,"Make 10.9.1 release

Adds commit 43e7711 (""setup: Use a list instead of a tuple for
'classifiers'""), which fixes a setup.py issue on Python 3.7.
"
7866d3a3d8f04807484ad0efe38d0d052e129b19,vortex-exoplanet/VIP,"Code cleanup. Fixed bugs in ``pca_adi_annular`` and ``mcmc_negfc_sampling``.
"
dc25cc50504d4e015fbd7e36fa7cc4fe10ad8be2,vortex-exoplanet/VIP,"Merge pull request #140 from carlgogo/master

Code cleanup in several modules. Improvements in ``psf_norm``."
aecbf3ccfe770a2830ef9157d6b98df25d8a79ef,vortex-exoplanet/VIP,"Merge pull request #143 from carlgogo/master

 Code cleanup. Fixed bugs in ``pca_adi_annular``. Tweaks to ``mcmc_negfc_sampling``"
64343cf7c892ba35631d2dd425c36e49383f3f12,waynestate/base-site,"Merge branch 'feature/restructure-repositories' into develop
"
23f8560b91a4b05c479096cfdfb12606fa2e7a68,wtsi-hgi/hgi-systems,"split bootstrap into separate inventories for delta and zeta
"
4697607e926898afac3c81d5c9e46d2a1c05f5bd,AntennaPod/AntennaPod,"Merge pull request #1175 from TomHennen/episode_tablayout

Collapsed ""New Episodes"" and ""All Episodes"" in to ""Episodes"""
3712e77187e7b5796e54d01673917baf672f2658,Automattic/wp-calypso,"Merge pull request #4742 from Automattic/update/move-analytics-to-lib

Framework: move ""analytics"" module to lib folder."
4f104516c7c35b19d54b81b637baa5b3bacceab1,Automattic/wp-calypso,"Jetpack Connect: Refactor authorization remote URL selector to return the site object
"
f1647b8ca23ce8a80bf414842879ef707f46e0c5,Automattic/wp-calypso,"Merge pull request #10889 from Automattic/update/config-flags-jetpack

Jetpack: Invites: Remove unnecessary flags after launching features"
6b72c3b0852d356213dbed7f73255e7e9bc33dc0,Automattic/wp-calypso,"AT: cleanup redux, show wp-admin for AT (#11100)

* Remove old PRESSABLE redux states

* Add wpadmin for pressable sites

* Move selector to global selector dir

* Comply with weird rule of importing file to a file that is used nowherewq
"
2b91c32d626ac51ac5ed904f31f20b45ed813c46,Automattic/wp-calypso,"Activity Log: Linearize and page view based on perishable filters (#23898)

Activity Log: Linearize and page view based on perishable filters

This is a dramatic change to the Activity Log display - it removes the monthly/daily list view and linearizes it instead. It removes complicated persistence going on to maintain internal state when updating the events query. It uses paging of already-requested values instead of infinite scrolling with live fetches."
1f9acb7b11fa1098e8df051adc5c064ba8b584f8,Automattic/wp-calypso,"Add credentials interface to Settings/Security (#18962)

* First commit of credentials interface in a working state

* Remove change to rewindStatusSchema that is introduced in a different PR

* Updates from pair-programming

Major changes:
 - Rearranges some code in the data layer
   to fit file path pattern
 - Removed some requesting state tracking
 - Simplified some redundant logic
 - Connected noticies by id

* Remove unused methods

* Clean up in preparation for extracting credentials form

* Continue inlineing and simplifying UI code

* Further reorganization of backups and credentials components. Created stylesheets for each component, fixed classnames, and other small fixes.

* - Create selector for getAutoConfigStatus
- Use a keyed reducer for credentials items and updateRequesting

* Use existing values to populate form fields on first render

* Move selectors to the proper place

* Put setup flow into its own component, along with a few other fixes

* Some more updates:
- add private key field, remove public key field
- make sure form has a submitting state when credentials already exist
- add cancel button to TOS step

* Add abspath field to interface

* More changes
- Make requestCredentials required in QueryJetpackCredentials
- Remove componentWillReceiveProps from CredentialsForm, not needed any more
- Refactor form validation in CredentialsForm to make it simpler with less code
- Refactor goToNextStep in CredentialsSetupFlow
- Refactor CredentialsForm to draw input fields using a class method to reduce code

* Make sure credentials form only shows in dev & staging environments

* More fixes, along with reverting change to credentials form that added renderInputField() function

* Move setup footer into CredentialsSetupFlow component

* Extract more JSX into new components

* Need to perform a new request in QueryJetpackCredentials when a new siteId is received

* Change some CSS selectors to conform to namespace guidelines

* One last round of fixes
- Do not pass translate() to subcomponents, instead, localize() them
- Use function syntax for popover refs
- Remove lodash get() from setup-footer.jsx, not needed
"
4a1f55fd59d7740e5e82bf594086d2cedb33d06e,Automattic/wp-calypso,"Woo: Update product create action-list

This updates the product create action-list for use with the refactored
action-list code.

Woo: Request: Add support for dispatch functions.

This adds support for passing a function to the request middleware
handler, which allows for dispatching multiple functions in sequential
order, with access to the data upon success and error upon failure.

Woo: Product updated, func > completion action

With the function support in request, it becomes easier to support a
more versatile form of the completion action, where it's possible to
pass on the data from the API call directly.

Woo: Category updated, func > completion action

With the function support in request, it becomes easier to support a
more versatile form of the completion action, where it's possible to
pass on the data from the API call directly.

Woo: update category placeholder ids

This adjusts existing code to update placeholder ids for categories
during the product create/update process.
"
112d0f4df7d06a17ee57b1556fa2cfe79de3f6b6,Automattic/wp-calypso,"Activity Log: Use `getHttpData()` to get log events (#24951)

* Activity Log: Use `getHttpData()` to get log events

Activity Log events don't interact with other data in Calypso and
it's all read-only; it doesn't listen for any other actions other
than the one that initially injects it into state.

Because of this there is a lot of basic machinery in place which
supports that simple fetching. However, that also makes it a
perfect candidate for beta testing with the new `getHttpData()`
helper function which removes the ""boilerplate""

In this patch I'm removing the Redux and traditional data-layer
machinery in favor of the `requestHttpData()` getter and system.

* Remove unnecessary test

* Update reference in connect()
"
c3eaf57114b14bb89bd68d76ea66dceddddf8fa9,Automattic/wp-calypso,"Framework: Remove unused feature manage/jetpack-plans from config files
"
ddc16d12cf5dd8ae44e74ac92e06bba5e2ce1a66,Automattic/wp-calypso,"Framework: remove unneeded lint exception, move styles to _vendor,scss
"
d3892a485a32e58f3d3674b8cb848c93c5e56c5b,Automattic/wp-calypso,Components: rename PlanCard to PlanCompareCard (#4692)
b9a5e7411147cc3332f2d56bdfd8d80cd635d01d,Automattic/wp-calypso,"User mentions: add popover (#24287)

* Rename HoC

Add textarea-caret package

User mentions changes

Update shrinkwrap

Add styles back to _components

* Use new popover custom position

* Adapt popover position on resize

* Fix new line positioning

* Drop redundant styles

* Update shrinkwrap

* Move sample suggested users to props

* Update shrinkwrap

* Update shrinkwrap
"
3f833acc03b3b992e324d8fe4e0d098612e22968,Automattic/wp-calypso,"Merge pull request #4416 from Automattic/fix/emoji-sizing

Smileys & Emoji: Refactor and improve display"
f0d234fc78fc9a625b3a30790e2b699c11786573,Automattic/wp-calypso,"Themes: Use isThemeActive() selector instead of deprecated isActiveTheme()
"
7e5a1b88942514249f81673ac04bbeba6d327e4c,Automattic/wp-calypso,"404: drop pug in favor of jsx (#22249)

* 404: drop Pug in favor of JSX

* 404: Delete Pug template

* 404: add missing 'wp' class

* 404: cleanup / use EmptyContent component
"
4ef4699694ccf3797670db61f2f9f80e41ec1676,Automattic/wp-calypso,"Track an affiliate referral when the ""aff"" URL parameter exists (#18191)

* Track an affiliate referral when the ""aff"" URL parameter exists

* Added a clarifying comment

* Some changes to use a Redux middleware approach instead of a direct call

* Move refer.wordpress.com request into third-party folder. (#18346)

* Some cleanup after @markryall helped get it working
"
5cd2ab69141ce24dfc032a27c7b6852a9d71d062,Automattic/wp-calypso,"Test: Improve the way npm test and make test are configured
"
94e7319c65454117fe12e8348dabdb1b78604f9c,Automattic/wp-calypso,"Signup: Rename the isFreeTrialFlow to areFreeTrialsEnabled since we have free trials in multiple flows
"
16b37df6178f2ba276d7474a833fe6a38301d8f4,Blockrazor/blockrazor,"Problem: featureTags deprecated/clutter

 
Solution: remove any mentions related to featureTags #196"
68ff0d5709052025ffff6ea3cc1a135b3288fd06,MDAnalysis/mdanalysis,"added scipy.io.netcdf (v0.19.1) as lib.netcdf (fallback for Amber Reader/Writer)

- netcdf.py was added as a fallback in case scipy.io.netcdf is
  not available
  - adjusted imports (e.g. use six instead of scipy._lib.six)
  - small doc string changes
- The Amber netcdf reader will try to load scipy.io.netcdf first
  but will use MDAnalysis.lib.netcdf if scipy is not available.
- Added the test_netcdf.py file as test_scipy_io_netcdf.py and the
  example_1.nc data file; adjusted the test to use tempdir and
  other MDAnalysis conventions. lib.netcdf is thus always tested.
- Removed the skipif decorators from all Amber NC tests because
  from now on, Amber trajectories should always be readable and
  writable.
- Fixed test failure testing NC dimensions attributes (with
  scipy.io.netcdf)
- Removed setup.py [AMBER] install target, which installed scipy, because
  scipy is a required dependency since 0.16.2
- netcdf tests run under pytest
- updated test MANIFEST to ensure that everything is included
"
d937262d28d3ad0f24c7acc5510fa6c007370a44,OpenSlides/OpenSlides,"Use flake8 instead of pep8. Orderd the imports with isort

* changed the fab-command pep8 to check
* checked and fixed any code with flake8. Also the urls.py
* checkt the projector app with pylint
"
a31b333781751962884b7b2c69a711530bbd2f10,PhantomBot/PhantomBot,"Merge pull request #1571 from ScaniaTV/initReadyCleanup

- Cleanup for all initReady events
"
fac1b17f6eb06bc4c7ce8999ed62a8248dc72e32,PhantomBot/PhantomBot,"Cleaned up most of the handlers
"
8e7fe9f79bcb0761e19699156a392b0532344d80,RetroShare/RetroShare,"made file transfer a service. Removed all the old FT code from pqiHandler, and got rid of deprecated CRC32 computation/exchange methods

git-svn-id: 6105920178ef23d6247fb4a8be28619c5b8e4cd0@6782 b45a01b8-16f6-495d-af2f-9b41ad6348cc
"
d13aa90b2bb5e8fffc25647087e2a6b17cf45e75,RetroShare/RetroShare,"Added basic widget RSFeedWidget for showing feed items in a QTreeWidget as replacement for the QScrollArea.
- Use sort of QTreeWidget
- Filter items
- Open/collapse selected item with +/-
- Remove selecteds item with dselete key

git-svn-id: 311b3c6b8f984d55ae55c3790df9fb4ccd5216ab@7478 b45a01b8-16f6-495d-af2f-9b41ad6348cc
"
129c07a553261b94c13046b178c45e49e9010500,RetroShare/RetroShare,"
Third attempt at link rank system.
 * Added Anonymous links, stored in configuration file.
 * Friends recommendations are also shared anonymously with peers.
 * Own recommendations are shared with friends.
 * TODO include ranking (+2 <-> -2) in score.
 * some bugfixes too.

Added RandomId to p3service file.
Improved forum interface.
Added dummy forum system (not transmitted) for testing.
Switched on new features as well.



git-svn-id: 311b3c6b8f984d55ae55c3790df9fb4ccd5216ab@505 b45a01b8-16f6-495d-af2f-9b41ad6348cc
"
506f14eb2fa7be01ffb92fac041ee674b019333b,RetroShare/RetroShare,"- Added a parent page widget (class RsAutoUpdatePage) to handle auto-update. The page updates using a timer, only wh
en visible, and each time it gets showed. I already made some RS pages derive from this page.
- Modified and renamed the taskGraphPainterWidget to display info about currently selected file transfers. For know, it only shows file chunks info, but we should use it to display additional info about the transfer. Warning: in its
 current state, only fake chunk info is displayed.
 - Suppressed p3files.h, because it is not used.

 Remains to do (in order):
 - Implement a chunk map class in ft/ to properly manage which chunks should be downloaded 
 - Display correct chunk info by requesting the transfer's chunk map
 - Add check-sum verification of chunks
 - allow RS to import a partially downloaded file by force re-checking chunks
 - Add chunk map exchange from file source peer id to file destination peer id.
 - Manage chunks from different peers.
 - Allow search (turtle search) for partially downloaded files 



git-svn-id: 311b3c6b8f984d55ae55c3790df9fb4ccd5216ab@1832 b45a01b8-16f6-495d-af2f-9b41ad6348cc
"
1a9a7622a2e3cfb967de4c7511c5e2b062a1eeb3,RetroShare/RetroShare,"made GxsNetTunnelService a parent class of GxsNetService and renamed public methods appropriately.
"
db41ffd764f2ba697252a57ebea9ce8741eb4c72,RetroShare/RetroShare,"removed the unused variable

git-svn-id: 311b3c6b8f984d55ae55c3790df9fb4ccd5216ab@3386 b45a01b8-16f6-495d-af2f-9b41ad6348cc
"
e37de87a7bba208a468ac8b38e43e275196db637,SatelliteQE/robottelo,"Merge pull request #1890 from Ichimonji10/nailgun-fields

Move all entity fields to NailGun"
8703031edecfefd005d121c18b73c5b5dac25597,SatelliteQE/robottelo,"Refactor and add coverage for user entity
"
6903b59bd27d9cef4ad416828e8e9414f60d8468,SatelliteQE/robottelo,"Merge pull request #2869 from elyezer/refactor-config

Refactor Robottelo settings"
8775b3271aa843e4cc4ce147baa3bf80bf49a788,SatelliteQE/robottelo,"Test the System entity

Add the `System` entity to module `tests.foreman.api.test_multiple_paths`.
Systems cannot be fully tested by this module, though, as the module expects
each entity to be uniquely identified by an ID, and a system is uniquely
identified by a UUID. Add module `tests.foreman.api.test_system_v2`, which makes
use of system UUIDs in its tests. For more details, see the docstring in module
`test_system_v2`.

Test method `System.path`.
"
f6f5c0f4f74a7ee483e41682b07da7854d8b7af1,SciCatProject/catanie,"Merge branch 'feature/refactor-dataset-table' into 'develop'

Feature/refactor dataset table

See merge request !63"
450e7764397141fe187541af4b3a398206761e26,SciCatProject/catanie,"Merge pull request #44 from SciCatProject/feature/unify-dataset-table-2

Feature/unify dataset table 2"
e7a6eff56923e3734f12cea19e52b921a41cb2de,SciCatProject/catanie,"Merge branch 'feature/cleanUp-rxjs' into 'develop'

Cleaned up import of rxjs and removed unsued imports

See merge request !80"
82676715b14d656659e57ceca464f19843b1e689,SonarSource/sonarqube,"Fix performance issues when processing reviews

-> refactor the core decorators that update and close reviews in order to decrease the number of SQL requests
"
c99b010ade9a3a2fb6c307872169f297302eab7e,SonarSource/sonarqube,"SONAR-4191 Refactor the Quality Profile search engine to use Select2 components
"
eb64f5e0e1e9abcd2701ab7a02624341b3d8960d,SonarSource/sonarqube,"SONAR-7123 Improve size of projects name columns
"
5c5ce039f040e1976e66588c1786e882c5da23dc,SonarSource/sonarqube,"SONAR-8025 rewrite create table INTERNAL_PROPERTIES in java
"
558d2be5349c4e88105de9a27c122742833feec3,SonarSource/sonarqube,"rename subProjectId by parentProjectId in ComponentDto except in WS use

Conflicts:
	server/sonar-server/src/test/java/org/sonar/server/component/db/ComponentDaoTest.java
	sonar-core/src/test/java/org/sonar/core/component/ComponentDtoTest.java
"
a1a1cd56cf3464200911a8c0dbef3ed25563aa6a,SonarSource/sonarqube,"SONAR-3755 refactor issue dates
"
5df799013fe35f29ae369e8ae35a7bbc8ba07218,SonarSource/sonarqube,"SONAR-6582 Extract issue serialization class

Use common issue JSON representation for most actions on issues.
"
c339385ccf76ec26cf8db19df901cdfe59c712b8,SonarSource/sonarqube,"SONAR-1492 Improve rule & active rule edition page

+ use markdown instead of HTML
+ improve rule doc page
"
be8707ef18df79c56b14d8296a0955a6f81eae89,SonarSource/sonarqube,"SONAR-6589 make BatchReportReader a dependency of ComputationSteps

move batch zip file extraction to new class ReportExtractor
"
211a1e19207fa54ede307a3e3068521811714110,SonarSource/sonarqube,"SONAR-6645 rewrite computation of new coverage with Formula

in addition, merge aggregation and computation steps into one
"
77d11d01733ccfcd900119ded2551b248d527a9e,SonarSource/sonarqube,"Refactor issue authorizations in Elasticsearch
"
4fabf1ed5f71619481f54b95cd1b6ce447d81799,SonarSource/sonarqube,"SONAR-5851 clean up profiles ui
"
180845ca02cb2a20c5f415679dde2f827074f23e,Stellarium/stellarium,"Corrected a GUI size issue int he Oculars config dialog, as well as a validator.
Removed unneeded entries from cmake file.
Cleaned up some compiler warnings.
"
272461ffaa5c56f130830420e6f8baaa30e1ad0c,Stellarium/stellarium,"Got rid of almost unused bytes.h file.
"
2eb1edaab7c7100edd9b379cb5be014f9f14b808,Stellarium/stellarium,"Remove Scenery3d's Util.hpp/.cpp, moving its contents to StelUtils, VecMath.hpp and OBJ. Replaced the std::strings with QStrings, and removed the now useless functions."
5d3d840cf864ea75b886d688f192ad79d933d0c1,Stellarium/stellarium,improvement to calculate of dates range
ad143a7dba8fc07fa8f6ec05ef495e42d7502ea9,Stellarium/stellarium,"Got rid of LoadingBar bar completely.
Minor optimizations.
"
23f38fbbd328925c9081a479c0ca1c1afd5438e2,Stellarium/stellarium,Remove unnecessary member
94c1ec8eb14630fdc48e1762ee2f9a7f35336ccb,Stellarium/stellarium,Move Distance Calculator plugin into the AstroCalc tool
712b7e18f65a57b19339151051abfb58be4d607a,TheBastionBot/Bastion,"Merge PR #243 from TheBastionBot/user-reporting

User Reporting Rewrite
* Bastion will now have a new Report Channel, where user reports will be received. No need to enable Moderation Logs and set Moderation Channel if a guild just want User Reports.
* Added `reportChannel` command to (un)set Report Channel.
* Rewritten `report` command to work with the above mentioned changes. Its usage has also been changed.
"
0b4802cef2a4c12ba2d8c6601996c26541be2a7e,alchemy-fr/Phraseanet,"wip extract toolbar
"
239c3c3930091f3bb43ba7eb18c2bc6c8b453189,alchemy-fr/Phraseanet,"wip: js modularization and cleanup
"
69ce7eab28788ff704c706fb8c914a99b39ded61,alchemy-fr/Phraseanet,"Merge pull request #354 from romainneutron/www-cleanup

[3.8] Cleanup www directory, allowing better debug mode"
24c2db66f572c17e38734486065615bf8f3490f2,alchemy-fr/Phraseanet,"Merge pull request #616 from romainneutron/dead-code

[3.9] Remove dead code"
17005658623a937ddf33fd0498585b38285fcef6,alchemy-fr/Phraseanet,"Cleanup namepaces, variables uses"
4536a14f307ec4d7eb2486a1243e5fc55fbd30c2,alchemy-fr/Phraseanet,"Split Record provider into controller/provider
"
4faeba0c99eb429a611bceaf3d91599121ebf16d,angular/router-builds,"0a22e8e refactor(core): Removing linker test references to TestComponentBuilder (#10865)
"
f3a8469d4de301aa4e69fa32f8302f45416fcae9,angular/router-builds,"96d06f7 fix(upgrade): Prevent property renaming for $inject.
"
89aef0e631574ed2b64793710b1dddcde7497ae0,angular/router-builds,"a69172f fix(compiler): fix bazel integration and make `perform-compile` more flexible
"
9d95313d033f040dbaf8731690823a0c7a2ad50b,ant-design/ant-design,"chore: suppress warning
"
8dfdce50f90c0e0f8c083aceacf80473128271c5,ant-design/ant-design,"fix: improve rowSelection.selections of Table (#5409)

* improve rowSelection.selections of Table

* fix classNames spell error

* update class name
"
0a432a20f64bc1377087dbff4fce61f6d3b1edb9,apache/jackrabbit-oak,"OAK-4898 - Allow for external changes to have a CommitInfo attached

Changes in DocumentNodeStore
-- Switch to Nonnull annotation for CommitInfo param
-- Use CommitInfo.isExternal instead of null check to determine if info is external
-- Pass CommitInfo.EMPTY_EXTERNAL while dispatching changes
   - Read from journal as part of background read
   - As part of initial Observer registration callback

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1771133 13f79535-47bb-0310-9956-ffa450edef68
"
b113ac1ffc51cbf2a3c57c01b808732bd53a3d0a,apache/jackrabbit-oak,"OAK-362 Unify all the existing index implementations under one package

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1393981 13f79535-47bb-0310-9956-ffa450edef68
"
f439964365f3970e47852012869b1c5d1188a8f2,apache/jackrabbit-oak,"OAK-1031: SegmentMK: Fewer segment lookups

Move functionality from Template to SegmentNodeState to better leverage the Record base class

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1527635 13f79535-47bb-0310-9956-ffa450edef68
"
1d5af37cd8e0575e62880fc5331b90e1ed65a32d,apache/jackrabbit-oak,"OAK-4416: Move temp files to target directory
Pass the target directory to the TemporaryFolder rule

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1747597 13f79535-47bb-0310-9956-ffa450edef68
"
08838784dee2ec8fb79ab511d00b19c602221f50,apache/jackrabbit-oak,"OAK-926: MongoMK: split documents when they are too large
- Move more node specific code from MongoMK to NodeDocument
- Centralize access to revisions and commit root in NodeDocument

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1514457 13f79535-47bb-0310-9956-ffa450edef68
"
25a6e776ee9ec243814a23c881ac53e4a2afdbf2,apache/jackrabbit-oak,"OAK-639: Optimize isNodeType checks

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1447697 13f79535-47bb-0310-9956-ffa450edef68
"
2bf7a3fc7520b3b8b799783824cdfd9b8def247a,apache/jackrabbit-oak,"OAK-494 	: Cleanup ReadOnlyNodeTypeManager  (Work in Progress)

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1420622 13f79535-47bb-0310-9956-ffa450edef68
"
249f75b42424dbd52b13a29acad15b3a51eef0ff,apache/jackrabbit-oak,"OAK-34 Define query API (simplify the Cursor interface; use the oak-core Tree implementation)

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1349886 13f79535-47bb-0310-9956-ffa450edef68
"
dd72af3242073628ae32334add5a45e3a569eaab,apache/jackrabbit-oak,"OAK-1941 - rename RDB fixture for consistency

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1643084 13f79535-47bb-0310-9956-ffa450edef68
"
7b42b8f6bcf2e0375e48e4eb84e1e0d0defa4bec,apache/jackrabbit-oak,"OAK-562: Clean up duplicate name conversion in plugins/nodetype

Refactor type template classes to use Oak names internally and to better
avoid code duplication. Instead of extending the builder base classes
from jcr-commons, we implement everything locally to be able to better
share the name mapping code and to avoid extra CND handling complexity.
As a consequence we use CndImporter instead of the lower-level
CompactNodeTypeDefReader mechanism for importing CND files.

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1434620 13f79535-47bb-0310-9956-ffa450edef68
"
3a7e5e5dbbf84db20ef5ae8176ae6b0443932e16,bbfrederick/rapidtide,"Moved filter and window functions out of tide_funcs and into filter_funcs
"
3f1d956204c03132146e9beb6dfb0a17167ebc84,bkimminich/juice-shop,"Simplify configuration file
(URL- and file-based images are handled depending on http-prefix)
"
e6604b3cfcb004dd54086c43d9123c9c65909451,bkimminich/juice-shop,"Simplify from locale to language
(e.g. `de` instead of `de_DE`)
"
3f5e085df985d4b630c0ee3549109cf63c545ff7,cBioPortal/cbioportal,"refactoring
"
ff9ff255f603fe8be9ed6bf571989e9c649ac08d,cBioPortal/cbioportal,"Data getting function of cna and mutations tab all move to StudyViewProxy;
Rewrite string sorting function for datatable in summary tab: always put empty value or NA value to the end of column;
Set datatable left column width
"
b43e1a7056ad467c4df9f39a82a19a6bfa31e136,cBioPortal/cbioportal,"cleanup of various files (jsp, .xml, that made reference to cgds package or Config, SkinUtil classes
"
531c6ddd89b472aa9fe7a013bb6fc8818894f3c1,cBioPortal/cbioportal,"added support for importing short study names and showing them in cross-cancer query page.
"
7d36b2ffc9535eac64af5fa933a18f2bff9f5da1,cBioPortal/cbioportal,"Simplified meta script
"
c0b61d8038ad567befbc1fdfd751f38a4cde3447,cBioPortal/cbioportal,"added new DAO for TextCache (text cache table is not added yet)
renamed CaseSetValidator to CaseSetUtil and added new utility functions related to case id processing
modified necessary servlets and jsp files to use case_ids_key instead of case_ids parameter
removed case set limit for custom case set builder
"
b206eeff41d979e6f08d26568c1e24dd4673521f,cBioPortal/cbioportal,"Add datatable into pie chart step 3?
Added pie icon / table icon and related functions;
Use reload icon instead of RESET;
Changed command of getting the mutated gene;
"
ddfb66e07a24de5506adcea591fe1d2e54aa4fa2,cBioPortal/cbioportal,"merged in db-refactoring-multiple-samples
"
a44526f945634bb55a7e2764d2ce94bf7eae1a5f,cBioPortal/cbioportal,"Use sphinx for generating HTML docs

By using sphinx to generate the HTML docs we can use readthedocs.org to display
cBioPortal's documentation.

- Use Sphinx to generate HTML docs from Markdown
- Set configuration to work with readthedocs.org
- Remove Home.md cause I don't think it's used anymore
- Add titles to several Markdown pages
- Add custom css style file
- Use cBioPortal-esque theme with logo
- Get rid off collapsable items in side bar
- Rename all markdown files with colon in the name, because URL resolve won't
  work otherwise.

Signed-off-by: Ino de Bruijn <f7dc43fb05ba7df7e769446605d0d8a8ab1011c4@ino.pm>
"
1110619e5dded26431ba48aeea9eda2d755c7bdb,cBioPortal/cbioportal,"replaced 3D view zoom slider and control buttons with an expandable help panel
"
5ed7c08884ca13f2913d24cf71092ea922c80d69,ebi-uniprot/QuickGOBE,"further cleanup
"
1f8c19bfbcd5c3be96d6fbcb3fb17606a2bb301e,ebi-uniprot/QuickGOBE,"using ',*' in GeneProductController's endpoint paths, was not found to work. Also, validating paths and attaching relevant handlers seemed overkill for current requirements of validating a CSV string. Therefore applied simple refactoring to handle controller validation in a separate validator class, now shared across controllers.

 Also, noted that GeneProductControllerIT tested for isAnnotated in GeneProduct model. This wasn't converted, therefore updated converter.
"
bbd21e22f5f7fd08f975f3405407c53af9a56c81,ebi-uniprot/QuickGOBE,"Added initial implementation of multi-term retrieval in RESTful fashion. Required refactoring OntologyRepository and all dependencies so that a list of terms can be fetched, based on a list of ids.
"
8b89accfe29f8268d73645bcc30984e1ee1b5be0,fitpay/fitpay-ios-sdk,"Commit/Sync improvements
"
2c0489c8094b2ba9409ae0e36bfe674ce327d883,fujicoin/electrum-fjc,"plugins: separate GUIs using child classes
"
27b4a8dd51aad674ed5127fd57f4748cd516c339,fujicoin/electrum-fjc,"move variable definitions at the top
"
da8fce1914e03b49945cde6df296788bbaf5023e,fujicoin/electrum-fjc,"if available, use relayfee from server instead of hard coded value
"
6217d1e90d5113ab7aa5d9090e6d458d13485d30,goreleaser/goreleaser,"refactor: artifact checksum (#771)

"
2200e877645adf0d69e139b9369d58b5f7c92da4,goreleaser/goreleaser,"Merge pull request #82 from goreleaser/rename

renamed package"
b9cc820e1dc13b62477194812ebdb36d502925b7,goreleaser/goreleaser,"refactor: changed code on build pipe
"
c13d2e9ee9e4f29a8fc4c9bb6c25dadcdcdf31ab,jodogne/OrthancMirror,"removal of unused Semaphore and ILockable classes

--HG--
branch : jobs
"
2dd97a33c04ac9e4bb79571ff927203f04ed8548,jodogne/OrthancMirror,"simplification in error casting with plugins
"
568999229e8a794c40a003cda6ec48d120c0312c,jodogne/OrthancMirror,"more consistent naming in worklist primitives

--HG--
branch : worklists
"
3802a9ba35d2e70ddae29b1a9ff5c4114beb5313,kubernetes/kubernetes,"Merge pull request #31529 from deads2k/rbac-05-bootstrapping

Automatic merge from submit-queue

add GenericAPIServer posthooks for initialization

Adds the concept of a `PostStartHook` to the `GenericAPIServer` to allow post-server start hooks.  This gives a standard location to perform post-start bootstrapping tasks.  The common case usage we have downstream are security related bootstrapping tasks that are performed on the ""empty etcd"" initialization cases.  The RBAC authorizer is a good example of this in kube.  It needs a location to create default policies to start a server which is capable of being accessed.

Kube is also likely to hit this for things like PSP and breaking the monolithic controller user into separate, scoped service accounts.

@kubernetes/sig-api-machinery for the `GenericAPIServer` bits
@kubernetes/sig-auth for the particular clusterrole bootstrapping. I've only done one to start, but I suspect we'll start making more and probably introduce a binding so that the RBAC super-user doesn't remain a special case forever."
241ab692f61ae7a5f6f2226dceb552af80eb5c5c,kubernetes/kubernetes,"Merge pull request #549 from lavalamp/regWatch

Make replication controllers use new watch interface"
714d12cf724191547330ff50a4878510fb74570e,kubernetes/kubernetes,"kubectl add show-labels flag to make it more readable
"
8b6a4e14ffb6661f987af83e63c59b9cc8632d46,kubernetes/kubernetes,"Merge pull request #61777 from php-coder/psp_deprecate_api_in_extensions

Automatic merge from submit-queue (batch tested with PRs 61842, 61477, 61777). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Deprecate PSP-related types in extensions/v1beta1

**What this PR does / why we need it**:
This PR deprecates PSP-related types in `extensions/v1beta1` API Group and suggests to use their versions from `policy/v1beta1`. This is a part of PSP migration away from `extensions` API Group.

**Which issue(s) this PR fixes**:
Addressed to https://github.com/kubernetes/features/issues/5"
44d0ba29d375378d786dbaf60b3a7db3a49775ba,kubernetes/kubernetes,"Merge pull request #56960 from islinwb/remove_unused_code_ut_pkg

Automatic merge from submit-queue (batch tested with PRs 53631, 56960). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Remove unused code in UT files in pkg/

**What this PR does / why we need it**:
Remove unused code in UT files in pkg/ .

**Release note**:

```release-note
NONE
```"
3ac0e22f624f2baff1872aae0ec71f6dfe42ed94,kubernetes/kubernetes,"Refactored kubemark code into provider-specific and provider-independent parts [Part-3]
"
a3e7d7e0381aa09ea752ef2eead58904b0ce7dd5,kubernetes/kubernetes,"kubeadm: APIServerEndpoints -> APIServerEndpoint

In the past the discovery configuration expected, that we can support multiple
API server endpoints. In practice, we always end up with a single API server
endpoint, because, even in HA setups, we use a load balancer scheme for API
servers.
Therefore, to reduce complexity and improve readability of the config, the
multiple API server endpoints support is removed from the bootstrap token
discovery join method and configuration.

Signed-off-by: Rostislav M. Georgiev <69ae653c85db018d136c9627c3957a3eb122cdbe@vmware.com>
"
13831856c90cb7eabab1a3efbcf7fb85b90ac2c6,kubernetes/kubernetes,"Combining scheduler priority functions using weighted averages
"
7c8596a95fb37e3c1318e25ae505989122bd4e56,kubernetes/kubernetes,"Merge pull request #55396 from sttts/sttts-drop-deepcopy-registration

Automatic merge from submit-queue. If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

deepcopy: remove unused deepcopy func registration

Counterpart to https://github.com/kubernetes/gengo/pull/67."
e83e49b0763204498e52792cd5929a40e66a74e0,kubernetes/kubernetes,"rename default DNS domain to cluster.local
"
3a8a7114fa22bd687302d31548bb393e2de9f0cd,kubernetes/kubernetes,"Merge pull request #67263 from luxas/move_kubelet_config_staging

Automatic merge from submit-queue (batch tested with PRs 65566, 67959, 68029, 68017, 67263). If you want to cherry-pick this change to another branch, please follow the instructions here: https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md.

Move kubelet ComponentConfig external types to `k8s.io/kubelet`

**What this PR does / why we need it**:
This PR implements most of kubernetes/community#2354 for the kubelet.
The PR:
 - Moves `k8s.io/kubernetes/pkg/apis/kubeletconfig` as-is to `k8s.io/kubernetes/pkg/apis/config` as agreed
 - Moves the external types to the new staging repo `k8s.io/kubelet`, in the `k8s.io/kubelet/config/v1beta1` package.
 - Makes `k8s.io/kubernetes/pkg/apis/config/v1beta1` source the types from `k8s.io/kubelet/config/v1beta1`. The defaulting and conversion code is kept in this package as before.
 - All references to these packages have been updated.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
ref: kubernetes/community#2354

**Special notes for your reviewer**:

This PR depends on getting https://github.com/kubernetes/kubernetes/pull/67780 merged first.

**Release note**:

```release-note
kubelet v1beta1 external ComponentConfig types are now available in the `k8s.io/kubelet` repo
```
/assign @sttts @mtaufen @liggitt"
8755ea8ec9a16f9fd6826c931da05083022744f9,kubernetes/kubernetes,"Merge pull request #7704 from smarterclayton/parallel_allocator

Use etcd to allocate PortalIPs instead of in-mem"
87dda3375b6155dca7679440321836e8ea0a6871,kubernetes/kubernetes,"Delete in-tree support for NVIDIA GPUs.

This removes the alpha Accelerators feature gate which was deprecated in 1.10.
The alternative feature DevicePlugins went beta in 1.10.
"
4f0c2ecf095bfedb2637182f012ff7cc3db608fd,kubernetes/kubernetes,"move certs/pkiutil to generic kubeadm utils

Signed-off-by: yuexiao-wang <cb85382fcdcd61052c05cab964e91e5c6acdef6c@zte.com.cn>
"
051db16083fbc7486e71bfafc459112edcf057c1,kubernetes/kubernetes,"kubeadm: Cleanup version gates for the Node Authorizer when targeting v1.8
"
06c0416de4d1ac98b80aedebeec4e3216ffd2114,kubernetes/kubernetes,"Merge pull request #35034 from sttts/sttts-remove-srvrunoption-apigroupprefix

Automatic merge from submit-queue

Make APIGroupPrefix constant: ""/apis""

It's not wired externally, so let's get rid of it and make it constant."
9bb797fe93444a70827e8730a17ef4517b2982cb,kubernetes/kubernetes,"Rename NewREST -> NewStorage to align on terminology
"
31c746d9609d7104995dfbec66a954c6b0262d2a,kubernetes/kubernetes,"Move equivalence cache into new package.

This moves the equivalence cache implementation out of the 'core'
package and into k8s.io/kubernetes/pkg/scheduler/core/equivalence.

Separating the equiv. cache from the genericScheduler implementation
make their interaction points easier to follow, and prevents us from
accidentally accessing unexported fields.
"
e5019de2605113280fa926423bd23fbae3b9f8d5,kubernetes/kubernetes,"refactor: Move versioned/watch to meta/v1
"
de9706bc15ffc3a6a4ef30a00d5c7ea9a8881396,kubernetes/kubernetes,"Split out AdmissionOptions

In the long term AdmissionOptions will accepts various dependencies
and spit out AdmissionControl
"
190a0cab89e314cc3c6f2d21feb8894eedaaac5c,kubernetes/kubernetes,"Merge pull request #44217 from marun/fed-move-sync-controller

Automatic merge from submit-queue (batch tested with PRs 44560, 44217)

[Federation] Move sync controller

This PR moves the sync controller to its own package in support of parallel efforts to use it for more types than just secrets.

The secret controller unit tests have been retained for now.  Once good unit test coverage exists for the sync controller, the existing secret controller unit testing can go away.

cc: bef2d9f230eee0e9e6f39fefb63003c04c948974@perotinus"
1357cefd97204eaabafb3432c99f53705a881002,kubernetes/kubernetes,"Merge pull request #52186 from sttts/sttts-codegen-scripts

Automatic merge from submit-queue (batch tested with PRs 53317, 52186). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

code-generator: rewrite hack/update-codecs.sh into reusable generate-{internal,}-groups.sh

Generating everything for groups inside of an apiserver (with internal types) becomes:

```shell
generate-internal-groups.sh all ""$(dirname ${BASH_SOURCE})/../../.."" k8s.io/sample-apiserver/pkg/client k8s.io/sample-apiserver/pkg/apis k8s.io/sample-apiserver/pkg/apis wardle:v1alpha1
```

Generating everything for a CRD (versioned types) becomes:

```shell
generate-groups.sh all ""$(dirname ${BASH_SOURCE})/../../.."" k8s.io/sample-apiserver/pkg/client k8s.io/sample-apiserver/pkg/apis wardle:v1alpha1
```

This should cover the 90% percent use-case. For the other 10% this can be forked and adapted as needed.

Furthermore, we can put this into a Docker container. Then code-generator consumers can do:

```shell
$ docker run -v $GOPATH:/go k8s.io/code-generator:1.8 generate-group.sh github.com/foo/bar example:v1
```

This is only possibly only the first step towards a `code-generator` binary. For the later deeper generator changes are necessary (e.g. https://github.com/kubernetes/kubernetes/pull/53202) and hence the later is only feasible in 1.9. **This PR here in contrast, we can cherry-pick to 1.8.**

```release-note
Add generate-groups.sh and generate-internal-groups.sh to k8s.io/code-generator to easily run generators against CRD or User API Server types.
```

Fixes https://github.com/kubernetes/kubernetes/issues/48714."
943d7aa5aa42d8fc359614e1c02521f48d03b989,kubernetes/kubernetes,"Merge pull request #31247 from deads2k/api-03

Automatic merge from submit-queue

refactor genericapiserver new to combine initialization

Combines `New` and `init` since the two were inseparable before anyway.  `New` now has all the code to create the `GenericAPIServer`.

The rest of the change is a move.  I want to refactor the flow more, but I figured that doing it separately would simplify the review.

@sttts how do you feel about looking at this one?"
205cd90d465b7287fdad5f77d1dc4ac13624b067,kubernetes/kubernetes,"apimachinery+apiserver: extract test types to work w/ deepcopy-gen
"
d072232d4a6352459aabb374cf7e78600e9e37e1,kubernetes/kubernetes,"Allow client.Config to be used for HTTP2 and WebSocket connections

client.Config describes how to make a client connection to a server
for HTTP traffic, but for connection upgrade scenarios cannot be
used because the underlying http.Transport object can't allow the
connection to be hijacked. Reorganize the TLS and connection wrapper
methods so that a sophisticated client can do:

    cfg := &client.Config{...} // from somewhere
    tlsConfig, _ := client.TLSConfigFor(cfg)
    _ := conn.Dial(...)
    rt := MyRoundTripper() // some func that implements grabbing requests
    wrapper, _ := client.HTTPWrappersFor(cfg)
    req := &http.Request{}
    req.Header.Set(""Connection-Upgrade"", ...)
    _, := wrapper.RoundTrip(req)
    // rt has been invoked with a fully formed Req with auth
    rt.Req.Write(conn)
    // read response for upgrade

It would be good to have utility function that does more of this,
but mostly enabling the HTTP2/SPDY client exec function right now.
"
0deec63d1a28cba1b1c409fd90b02fcfca376018,kubernetes/kubernetes,"Unify fake runtime helper in kuberuntime, rkt and dockertools.
"
31684d187187c49ec0f84c4fd7abe59f14c2f861,kubernetes/kubernetes,"Move RunRC, DeleteRC, and ListPods into the utility module and refactor
to be support functions #7234
"
198e83588b8c086837f53928eb192982e20c6fcd,kubernetes/kubernetes,"Merge pull request #46458 from jsafrane/mount-prep

Automatic merge from submit-queue (batch tested with PRs 46458, 50934, 50766, 50970, 47698)

Prepare VolumeHost for running mount tools in containers

This is the first part of implementation of https://github.com/kubernetes/features/issues/278 - running mount utilities in containers.

It updates `VolumeHost` interface:

*  `GetMounter()` now requires volume plugin name, as it is going to return different mounter to different volume plugings, because mount utilities for these plugins can be on different places.
* New `GetExec()` method that should volume plugins use to execute any utilities. This new `Exec` interface will execute them on proper place.
* `SafeFormatAndMount` is updated to the new `Exec` interface.

This is just a preparation, `GetExec` right now leads to simple `os.Exec` and mount utilities are executed on the same place as before. Also, the volume plugins will be updated in subsequent PRs (split into separate PRs, some plugins required lot of changes).

```release-note
NONE
```

@kubernetes/sig-storage-pr-reviews 
@rootfs @gnufied"
d07a608607e1f4d252003c17cd615652574a0823,kubernetes/kubernetes,"Promote v1alpha1 meta to v1beta1

No code changes, just renames
"
b9ad337bbdbc5e929491331325d521ae26619e83,kubernetes/kubernetes,"Rename ConnectToDockerOrDie to CreateDockerClientOrDie

This function does not actually attempt to connect to the docker daemon,
it just creates a client object that can be used to do so later. The old
name was confusing, as it implied that a failure to touch the docker daemon
could cause program termination (rather than just a failure to create the
client).
"
ae0997807efc303ca61c077e6685ffba71fcf765,kubernetes/kubernetes,"Merge pull request #995 from csrwng/refactor_api_client

Break up API client into per-resource client and common code"
87356c0623cd759df5879dc753c8a885bce4ef64,kubernetes/kubernetes,"Cleanup handler chain
"
8e33cbfa281b7e464100a052c9408a1947ec29d5,kubernetes/kubernetes,"rewrite go imports
"
b01699b9f748a0f1ce565e0415bf0964808d2de5,kubernetes/kubernetes,"apiextensions: unify multi- and mono-versioned test helpers
"
ed539fb76f431cacbd81c7001a12ae0817a1b042,kubernetes/kubernetes,"Merge pull request #39404 from adohe/refactor_edit

Automatic merge from submit-queue

add EditOptions to make edit reusable

FYI. Added `EditOptions` to decouple edit implementation from cobra command, thus make edit reusable. Once this get merged, we can refactor `create` commands to put them in their own package. @kubernetes/sig-cli-misc please give a quick review, and I would like to get this merged asap."
9d0c47f1db85e943a9008aac489eacbb0ab15bb3,kubernetes/kubernetes,"Use storage.v1 instead of v1beta1

storage.v1beta1 was used to work around GKE which does not expose v1. Now that
GKE is updated, we can switch everything to v1.
"
e93c0d727fb40b752411c3f7b9ab20c5d53ffecd,kubernetes/kubernetes,"Merge pull request #20204 from HaiyangDING/predlib

Automatic merge from submit-queue

Move predicates into library

This PR tries to implement #12744 

Any suggestions/ideas are welcome. @davidopp 

current state: integration test fails if including podCount check in Kubelet.
    
DONE:
    1. refactor all predicates: predicates return fitOrNot(bool) and error(Error) in which the latter is of type PredicateFailureError or InsufficientResourceError
    2. GeneralPredicates() is a predicate function, which includes serveral other predicate functions (PodFitsResource, PodFitsHost, PodFitsHostPort). It is registered as one of the predicates in DefaultAlgorithmProvider, and is also called in canAdmitPod() in Kubelet and should be called by other components (like rescheduler, etc if necessary. See discussion in issue #12744
TODO:
    1. determine which predicates should be included in GeneralPredicates()
    2. separate GeneralPredicates() into: a.) GeneralPredicatesEvictPod() and b.) GeneralPredicatesNotEvictPod()
    3. DaemonSet should use GeneralPredicates()"
5fa640490e272589ec69e32a37f5ea611669eb13,kubernetes/kubernetes,"rewrite serivce controller to apply the latest controller pattern
"
09fc2a5013e517b00aab6656f54712b9e15fc33f,kubernetes/kubernetes,"improve retry logic with standard wait.Poll()
Signed-off-by: He Simei <c9c7417df5c814327987c96886d9c0cbe3827bcd@zju.edu.cn>
"
f787cea237f8110580c0c11b590bee1a794000f6,kubernetes/kubernetes,"Merge pull request #36020 from timstclair/klet-stream

Automatic merge from submit-queue

Separate Direct and Indirect streaming paths, implement indirect path for CRI

This PR refactors the `pkg/kubelet/container.Runtime` interface to remove the `ExecInContainer`, `PortForward` and `AttachContainer` methods. Instead, those methods are part of the `DirectStreamingRuntime` interface which all ""legacy"" runtimes implement. I also added an `IndirectStreamingRuntime` which handles the redirect path and is implemented by CRI runtimes. To control the size of this PR, I did not fully setup the indirect streaming path for the dockershim, so I left legacy path behind.

Most of this PR is moving & renaming associated with the refactoring. To understand the functional changes, I suggest tracing the code from `getExec` in `pkg/kubelet/server/server.go`, which calls `GetExec` in `pkg/kubelet/kubelet_pods.go` to determine whether to follow the direct or indirect path.

For https://github.com/kubernetes/kubernetes/issues/29579

/cc @kubernetes/sig-node"
8bf1ae8313b055690517ba76191a39c6a6089103,kubernetes/kubernetes,"Merge pull request #37094 from sjug/reshuffle_gobindata_dep

Automatic merge from submit-queue (batch tested with PRs 37094, 37663, 37442, 37808, 37826)

Moved gobindata, refactored ReadOrDie refs

**What this PR does / why we need it**: Having gobindata inside of test/e2e/framework prevents external projects from importing the framework. Moving it out and managing refs fixes this problem.

**Which issue this PR fixes**: fixes #37007"
17403585737bd45e239f7f5ea49d604be7cb3915,kubernetes/kubernetes,"Split the version metric out to its own package
"
cca465e347e36566e26d71066b4e1894996d2d5b,kubernetes/kubernetes,"fed: Rename 'secret' controller package to 'sync'
"
9c91da7a22c9c69170a0acec9b810281880b8b52,kubernetes/kubernetes,"More efficient selector
"
f49f799dbda6ce47d5d5709b73bede68d3ccde0f,kubernetes/kubernetes,"Merge pull request #59941 from agau4779/gce-external-lb-tests

Automatic merge from submit-queue (batch tested with PRs 60324, 60269, 59771, 60314, 59941). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

[GCE] Refactor ExternalLoadBalancer Tests

**What this PR does / why we need it**:

- Refactors the ExternalLoadBalancer tests to use the generated GCE mock instead of FakeCloudAddressService, FakeCloudForwardingRuleService.
- Adds hooks to populate NetworkTier on Alpha resources
- Moves shared code to top of the external loadbalancer test file
- Moves NetworkTier into a constants file at the cloud level, so it is more easily called in subpackages

**Special notes for your reviewer**:

```release-note
NONE
```"
98fa29adfd3afd3aa92f9afd6a256a2da1bf3120,kubernetes/kubernetes,"Make PodTemplateSpec for Job not a pointer, since it's a required field
"
d6625f857ab601e150e84c072596cf11d4425e82,kubernetes/kubernetes,"Merge pull request #58177 from jingxu97/Jan/reconstruct

Automatic merge from submit-queue. If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Redesign and implement volume reconstruction work

This PR is the first part of redesign of volume reconstruction work. The detailed design information is https://github.com/kubernetes/community/pull/1601

The changes include
1. Remove dependency on volume spec stored in actual state for volume
cleanup process (UnmountVolume and UnmountDevice)

Modify AttachedVolume struct to add DeviceMountPath so that volume
unmount operation can use this information instead of constructing from
volume spec

2. Modify reconciler's volume reconstruction process (syncState). Currently workflow
is when kubelet restarts, syncState() is only called once before
reconciler starts its loop.
a. If volume plugin supports reconstruction, it will use the
reconstructed volume spec information to update actual state as before.
b. If volume plugin cannot support reconstruction, it will use the
scanned mount path information to clean up the mounts.

In this PR, all the plugins still support reconstruction (except
glusterfs), so reconstruction of some plugins will still have issues.
The next PR will modify those plugins that cannot support reconstruction
well.

This PR addresses issue #52683"
fe2d44e84263af03866b5ffd057a11442269f350,kubernetes/kubernetes,"Merge pull request #16653 from Random-Liu/remove-unused-type

Auto commit by PR queue bot"
9e1960c5076628a864aee24ee339073fe5e490c1,kubernetes/kubernetes,"Merge pull request #33365 from sttts/sttts-custom-handler-chain

Automatic merge from submit-queue

Towards custom handler chains in genericapiserver

**Based on https://github.com/kubernetes/kubernetes/pull/33478**

This PR makes the handler chain construction independent from the genericapiserver instance (with the exception of the `RequestInfoFilter` which will be fixed in https://github.com/kubernetes/kubernetes/pull/33490), i.e. the `Config` is enough to create a custom handler chain."
3268d8102a6a31b01669fba5b692028d09827d04,kubernetes/kubernetes,"Merge pull request #41020 from luxas/kubeadm_cleanup

Automatic merge from submit-queue (batch tested with PRs 41061, 40888, 40664, 41020, 41085)

kubeadm: Small cleanup and fixes, validate the service subnet

**What this PR does / why we need it**:
 - Validate the minimum subnet cidr so there are always 10 available addresses
 - Remove an old proxy arg function, add clustercidr to the proxy manifest and automatically calculate the dns ip

**Special notes for your reviewer**:

**Release note**:

```release-note
NONE
```

@errordeveloper @pires @mikedanese @dmmcquay @dgoodwin"
2d952aaa87e5748a8d3e412065894ad8a0cf4663,kubernetes/kubernetes,"Extracting APIServer machinery code into a library
"
6cd8bd62fe714e35f29d0069ff55d636067b025e,kubernetes/kubernetes,"e2e test harness - use busybox from dockerhub

Use the same pattern everywhere in the e2e test
harness, use busybox (from dockerhub) instead
of using the one from k8s.gcr.io registry.

Change-Id: I57c3b867408c1f9478a8909c26744ea0368ff003
"
bf881f187e29d111c0001777d84ac5ace0def031,kubernetes/kubernetes,"rename expapi.Daemon to expapi.DaemonSet
"
6f4b768c942466245bda11385758860bb7627e36,kubernetes/kubernetes,"Merge pull request #65350 from liggitt/simplify-taint-manager-key

Simplify taint manager workqueue keys"
21812547f9d35328ebeab9f71e6db908e16217f1,kubernetes/kubernetes,"Merge pull request #49051 from mtaufen/move-kc-type

Automatic merge from submit-queue (batch tested with PRs 50198, 49051, 48432)

move KubeletConfiguration out of componentconfig API group

I'm splitting #44252 into more manageable steps. This step moves the types and updates references.

To reviewers: the most important changes are the removals from pkg/apis/componentconfig and additions to pkg/kubelet/apis/kubeletconfig. Almost everything else is an import or name update.

I have one unanswered question: Should I create a whole new api scheme for Kubelet APIs rather than register e.g. a kubeletconfig group with the default runtime.Scheme instance? This feels like the right thing, as the Kubelet should be exposing its own API, but there's a big fat warning not to do this in `pkg/api/register.go`. Can anyone answer this?"
6e704d174d79af363e11a7dfc12aee421fcc5457,kubernetes/kubernetes,"Simplify generating kubeconfig with embeded cert data
"
963a05ec72b209965feec618184c9543507b6e2d,kubernetes/kubernetes,"AWS/GCE: Rework use of master name

* Add a pillar for hostname (because even if there's a good Salt
function for it, I don't trust it to return the short hostname)
* Move INITIAL_ETCD_CLUSTER to just the GCE turn-up
* Remove the master_name, which isn't needed as a pillar
"
48ce23ac914880a84aa4d46311ae0f1c11dcecf9,kubernetes/kubernetes,"Make client use pointers
"
523b6ec7e33a87184a3998edf54803bd726306af,kubernetes/kubernetes,"edit: Make environment variables composable

It also adds support for KUBE_EDITOR and GIT_EDITOR which were already
advertised in the edit usage message.
"
f97fdf76dc357f52cd28e72a34bb73f501881d7e,kubernetes/kubernetes,"Remove unneeded deps
"
42cdb052b6833d586777f598c770152a5e6a02ef,kubernetes/kubernetes,"Merge pull request #42968 from timothysc/sched_e2e_breakout

Automatic merge from submit-queue (batch tested with PRs 42775, 42991, 42968, 43029)

Initial breakout of scheduling e2es to help assist in assignment and refactoring

**What this PR does / why we need it**:
This PR segregates the scheduling specific e2es to isolate the library which will assist both in refactoring but also auto-assignment of issues.  

**Which issue this PR fixes** 
xref: https://github.com/kubernetes/kubernetes/issues/42691#issuecomment-285563265

**Special notes for your reviewer**:
All this change does is shuffle code around and quarantine.  Behavioral, and other cleanup changes, will be in follow on PRs.  As of today, the e2es are a monolith and there is massive symbol pollution, this 1st step allows us to segregate the e2es and tease apart the dependency mess. 

**Release note**:

```
NONE
```

/cc @kubernetes/sig-scheduling-pr-reviews @kubernetes/sig-testing-pr-reviews @marun @skriss 

/cc @gmarek - same trick for load + density, etc."
4389b3f0d6f2f9eabd29f792981b55c8cd2e6071,kubernetes/kubernetes,"Rewritte util.* -> wait.* wherever reasonable
"
cedbd932550d15a3e649ddb02ac74784ade32f06,kubernetes/kubernetes,"Make 'pod' package to use unified checkpointManager

Signed-off-by: vikaschoudhary16 <91926e7a4e2eebbb0666d40af5bd5429a03a0c54@gmail.com>
"
5d31e1ab084dd26368ede6da3b67b1fbf3f2ef83,kubernetes/kubernetes,"Merge pull request #5142 from derekwaynecarr/unify_admission_control_salt

Unify admission control plug-ins across providers"
97ae7ccb563bfd5bd7ad62d7311608d45af7d45e,kubernetes/kubernetes,"Merge pull request #31647 from mikedanese/register-tainted

Automatic merge from submit-queue

add a configuration for kubelet to register as a node with taints

and deprecate --register-schedulable

ref #28687 #29178

cc @dchen1107 @davidopp @roberthbailey"
54b16cbd9e9cd06784d0b311884a386ed7d303a7,kubernetes/kubernetes,"Rename NodeConfiguration to JoinConfiguration in v1alpha3, but support both names for this release of kubeadm
"
09a42622d4596585beb3ab87ed2ff33a02356715,kubernetes/kubernetes,"Merge pull request #35896 from wojtek-t/target_version

Automatic merge from submit-queue

Expose etcd version.

Ref #20504

This PRs makes use of the following two env variables
- ETCD_IMAGE (if set) allows to use a custom etcd image.
- ETCD_VERSION (if set) allows you to use custom version of etcd. The main purpose of using it may be rollback of etcd v3 API, where we need 3.0.* image, but are rolling back to 2.3.7."
8580804f774c2bfd9b2845b15767fb1eab193cfd,kubernetes/kubernetes,"Merge pull request #15138 from mattmoor/limited-beta-rewrite

Auto commit by PR queue bot"
1ad1c8c7f80d99b9625924b2102a04a555162bfb,kubernetes/kubernetes,"Merge pull request #64122 from ixdy/update-rules_go-and-gazelle

Automatic merge from submit-queue (batch tested with PRs 64122, 64936, 65288, 65383). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Update to rules_go 0.12.1 and gazelle 0.12.0 and perform related cleanups

**What this PR does / why we need it**: my initial intent was to simply update to rules_go 0.12.1 and gazelle 0.12.0.

A few internal changes / deprecations meant that I finally needed to clean up some technical debt. This also fixes #64122.
I've attempted to keep the steps as separate commits to make it easier to review:

1. Disable gazelle proto rule generation; legacy proto rules are deprecated, and we don't (currently) build protos at build time anyway, instead generating them with `hack/update-generated-protobuf.sh` and then checking them in. We can revisit this in the future if we'd like.
2. Remove the legacy `go_default_library_protos` filegroups using [buildozer](https://github.com/bazelbuild/buildtools/tree/master/buildozer). We don't use these, anyway.
3. Update the rules_go bazel workspace dependency to 0.12.1.
4. Vendor gazelle 0.12.0 and update BUILD files with `hack/update-bazel.sh`. This causes a lot of diffs, because `select()`s are no longer used in `srcs` attributes, external tests are folded into non-external tests, and vendored targets get an `importmap` attribute.
5. Set `gazelle:prefix` on `staging/src/BUILD` to make gazelle treat these correctly(ish). This allows us to remove the sed rewrite hack in `hack/update-bazel.sh`.
6. Explicitly set `# gazelle:importmap_prefix k8s.io/kubernetes/vendor` on `vendor/`, so that all vendored dependencies get the right importmap. gazelle 0.12.0 uses the bazel workspace name + `vendor/` as a prefix, which doesn't work with native go. Newer gazelle will use the go prefix (https://github.com/bazelbuild/bazel-gazelle/pull/207), but it's not released yet. Setting this correctly now also fixes later `BUILD` churn.
7. Re-run `hack/update-bazel.sh`. This causes a bunch of diffs, since anything under `staging/src` now uses the `staging/src/` path instead of `vendor/`. (Both would work for bazel, but gazelle uses the former, since `vendor/` uses symlinks.) Also `importmap`s under `vendor/` are fixed.
8. Reformat a few files (using [buildifier](https://github.com/bazelbuild/buildtools/tree/master/buildifier)) to make later diffs easier to read.
9. Rework the `go_genrule` rules to use the new `go_genrule` from https://github.com/kubernetes/repo-infra/pull/72, which is more bazely, since it uses the rules_go `go_path` rule instead of lots of shell.
10. Remove the deprecated `go_prefix` rule from the root BUILD.bazel file.
11. Set `# gazelle:importmap_prefix k8s.io/kubernetes/vendor` on `staging/src` as well, which ensures that these repos are treated as vendored dependencies. (It's basically the bazel-y way of doing the `vendor/k8s.io` symlinks.)
12. Run `hack/update-bazel.sh` one last time to fix all of the `importmap`s under `staging/src`.

Note re: point 6 above - we're pretty much ignoring the `vendor/k8s.io` symlinks entirely now under bazel. Using the `gazelle:prefix` directive ensures these get mapped into the right go importpath, and the `go_path` rule installs these correctly now too.

**Special notes for your reviewer**: this should not be submitted before https://github.com/kubernetes/repo-infra/pull/72, obviously.

**Release note**:

```release-note
NONE
```

/assign @BenTheElder @fejta @thockin 
cc @cblecker @jayconrod"
e537cec9b0b39a4d5f503e8a35706d726deb9b7d,kubernetes/kubernetes,"Merge pull request #45299 from yujuhong/cleanup-trivial

Automatic merge from submit-queue

More dockertools cleanup

This is part of #43234."
cf10f532d1c10544c8164bd74310f318496b5f0d,kubernetes/kubernetes,"Merge pull request #41304 from liggitt/edit-refactor

Automatic merge from submit-queue

Make kubectl edit work with unstructured objects

Fixes https://github.com/kubernetes/kubernetes/issues/35993


1. First (before any other changes), added several test cases for complex edit scenarios:
   - [x] ensure the edit loop bails out if given the same result that already caused errors
   - [x] ensure an edited file with a syntax error is reopened preserving the input
   - [x] ensure objects with existing ""caused-by"" annotations get updated with the current command

2. Refactored the edit code to prep for switching to unstructured:
   - [x] made editFn operate on a slice of resource.Info objects passed as an arg, regardless of edit mode
   - [x] simplified short-circuiting logic when re-editing a file containing an error
   - [x] refactored how we build the various visitors (namespace enforcement, annotation application, patching, creating) so we could easily switch to just using a single visitor over a set of resource infos read from the updated input for all of them

3. Switched to using a resource builder to parse the stream of the user's edited output
   - [x] improve the error message you get on syntax errors
   - [x] preserve the user's input more faithfully (see how the captured testcase requests to the server changed to reflect exactly what the user edited)
   - [x] stopped doing client-side conversion (means deprecating `--output-version`)

4. Switched edit to work with generic objects
   - [x] use unstructured objects
   - [x] fall back to generic json merge patch for unrecognized group/version/kinds

5. Added new test cases
   - [x] schemaless objects falls back to generic json merge (covers TPR scenario)
   - [x] edit unknown version of known kind (version ""v0"" of storageclass) falls back to generic json merge

```release-note
`kubectl edit` now edits objects exactly as they were retrieved from the API. This allows using `kubectl edit` with third-party resources and extension API servers. Because client-side conversion is no longer done, the `--output-version` option is deprecated for `kubectl edit`. To edit using a particular API version, fully-qualify the resource, version, and group used to fetch the object (for example, `job.v1.batch/myjob`)
```"
3ba9d1d0e0247f48202ed0590e82fe656a7d284b,kubernetes/kubernetes,"Remove unused pkg/apis/policy/v1alpha1
"
7681a1bdff0552e0008c805fe56bbbfec85d0624,kubernetes/kubernetes,"Move RunRC-like functions to test/utils
"
eac8d6a9971fbb2358f7c1c5283453d1015ffd73,kubernetes/kubernetes,"Cleanup the content of deprecated V1beta1
"
ea92879fab9eb9cd7a2529101fb088c2f07bd547,kubernetes/kubernetes,"Merge pull request #62306 from freehan/pod-status-patch2

Automatic merge from submit-queue (batch tested with PRs 58920, 58327, 60577, 49388, 62306). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Use Patch instead of Put to sync pod status

ref: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md
```release-note
Use Patch instead of Put to sync pod status
```"
5ff9dc0b3bf3d4f73814b34250360d0471e25b1d,kubernetes/kubernetes,"WaitForAttach refactoring for iSCSI attacher/detacher

This change is prerequisite for implementing iSCSI attacher
and detacher.

In order to use chap authentication at iSCSI plugin after
implementing attacher and detacher, secret is needed at
AttachDisk() which is called from WaitForAttach().
To obtain secret, pod information is required, but
WaitForAttach() doesn't pass pod information inside.

This patch adds 'pod' as an argument of WaitForAttach()
and adds changes to drivers who implements WaitForAttach().

Fixes #48953
"
e48bc9ae162caedebdecc3a1e590de30382d859d,kubernetes/kubernetes,"Fixes #7886 - Used network-environment to get ip, swap wget for curl

I re-used setup-network-environment instead of $private_ipv4, this
does meant overwriting the docker.service with a custom service.

Also, the wget command was always getting kube-register, curl
works more reliabily for this.
"
62d56060b7538356e8628ed22585ba6603da5bb7,kubernetes/kubernetes,"Remove unused kubelet dependency
"
e9d4e4341c93aa9c460e3c1176178888f57cc818,kubernetes/kubernetes,"Merge pull request #40087 from deads2k/generic-24-move-fields

Automatic merge from submit-queue

move pkg/fields to apimachinery

Purely mechanical move of `pkg/fields` to apimachinery.  

Discussed with @lavalamp on slack.  Moving this an `labels` to apimachinery.

@liggitt any concerns?  I think the idea of field selection should become generic and this ends up shared between client and server, so this is a more logical location."
f4989a45a523ef0b55219235f182b831ec296dfd,kubernetes/kubernetes,"run root-rewrite-v1-..., compile
"
c67a62da495ebe2654c8cf49b169b861ceaa62f1,kubernetes/kubernetes,"Fixes #30562: Refactor kubectl command options to use common struct for common file params
"
7e3fb502a80a005962306302878ec525af2c43f7,kubernetes/kubernetes,"Change SafeMakeDir to resolve symlinks in mounter implementation

Kubelet should not resolve symlinks outside of mounter interface.
Only mounter interface knows, how to resolve them properly on the host.

As consequence, declaration of SafeMakeDir changes to simplify the
implementation:
from SafeMakeDir(fullPath string, base string, perm os.FileMode)
to   SafeMakeDir(subdirectoryInBase string, base string, perm os.FileMode)
"
c5e74d128d726a69da477e3b9048f0f8aa63d82a,kubernetes/kubernetes,"Merge pull request #66884 from NickrenREN/attacher-detacher-refactor

Automatic merge from submit-queue. If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Attacher/Detacher refactor for local storage

Proposal link: https://github.com/kubernetes/community/pull/2438

**What this PR does / why we need it**:

Attacher/Detacher refactor for the plugins which just need to mount device, but do not need to attach, such as local storage plugin.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

**Special notes for your reviewer**:

```release-note
Attacher/Detacher refactor for local storage
```

/sig storage
/kind feature"
6d1be5f0ee485820099e79617803474af9a47547,kubernetes/kubernetes,"Add master.Config type and cleanup master configuration

Setting up a new master.Master instance requires passing
around too many arguments.

Add a master.Config type and group related master configs.
Refactor all commands to instantiate new masters using a
master.Config struct.
"
60c316b54a64de2051900c6a5745810f3b6a154d,kubernetes/kubernetes,"Upgrades and upgrade tests take versions of the form release/stable instead of stable_release:

- Refactor common and gce/upgrade.sh to use arbitrary published releases
- Update hack/get-build to use cluster/common code
- Use hack/get-build.sh in cluster upgrade test logic
"
4d2f9333d857e560fe9daedefa26de0ee3a24471,kubernetes/kubernetes,"Merge pull request #1699 from smarterclayton/unify_meta_code

Simplify MetaInsertionFactory down to one implementation"
ffb846a284fd0fd125e331fb01b26a8d4650ea9c,kubernetes/kubernetes,"Merge pull request #10375 from eparis/enable_node_monitoring

Remove unused enable_node_monitoring"
e9f4db2748ed522adf8176be0b6d0e19755abb3d,kubernetes/kubernetes,"Merge pull request #27714 from jsafrane/event-recycle

Automatic merge from submit-queue

Send recycle events from pod to pv.

This allows users to diagnose what's wrong with recycler. Recycler pods are started automatically with a cryptic name and they are deleted immediately when they finish.

e.g, `kubectl describe pv` could show that NFS cannot be mounted (and how many pods have tried it):

```
  FirstSeen     LastSeen        Count   From                            SubobjectPath   Type            Reason          Message
  ---------     --------        -----   ----                            -------------   --------        ------          -------
  59m           59m             1       {persistentvolume-controller }                  Warning         RecyclerPod     Recycler pod: Unable to mount volumes for pod ""recycler-for-nfs_default(5421800e-347b-11e6-a79b-3c970e965218)"": timeout expired waiting for volumes to attach/mount for pod ""recycler-for-nfs""/""default"". list of unattached/unmounted volumes=[vol]
  53m           53m             1       {persistentvolume-controller }                  Warning         RecyclerPod     Recycler pod: Unable to mount volumes for pod ""recycler-for-nfs_default(3c9809e5-347c-11e6-a79b-3c970e965218)"": timeout expired waiting for volumes to attach/mount for pod ""recycler-for-nfs""/""default"". list of unattached/unmounted volumes=[vol]
  46m           46m             1       {persistentvolume-controller }                  Warning         RecyclerPod     Recycler pod: Unable to mount volumes for pod ""recycler-for-nfs_default(250dd2a2-347d-11e6-a79b-3c970e965218)"": timeout expired waiting for volumes to attach/mount for pod ""recycler-for-nfs""/""default"". list of unattached/unmounted volumes=[vol]
  40m           40m             1       {persistentvolume-controller }                  Warning         RecyclerPod     Recycler pod: Unable to mount volumes for pod ""recycler-for-nfs_default(0d84ea33-347e-11e6-a79b-3c970e965218)"": timeout expired waiting for volumes to attach/mount for pod ""recycler-for-nfs""/""default"". list of unattached/unmounted volumes=[vol]
  33m           33m             1       {persistentvolume-controller }                  Warning         RecyclerPod     Recycler pod: Unable to mount volumes for pod ""recycler-for-nfs_default(f5fb63bf-347e-11e6-a79b-3c970e965218)"": timeout expired waiting for volumes to attach/mount for pod ""recycler-for-nfs""/""default"". list of unattached/unmounted volumes=[vol]
  27m           27m             1       {persistentvolume-controller }                  Warning         RecyclerPod     Recycler pod: Unable to mount volumes for pod ""recycler-for-nfs_default(de7128fd-347f-11e6-a79b-3c970e965218)"": timeout expired waiting for volumes to attach/mount for pod ""recycler-for-nfs""/""default"". list of unattached/unmounted volumes=[vol]
  1h            3m              75      {persistentvolume-controller }                  Normal          RecyclerPod     Recycler pod: Successfully assigned recycler-for-nfs to 127.0.0.1
  1h            3m              76      {persistentvolume-controller }                  Normal          RecyclerPod     Recycler pod: Pod was active on the node longer than specified deadline
  1h            1m              12      {persistentvolume-controller }                  Warning         RecyclerPod     Recycler pod: Error syncing pod, skipping: timeout expired waiting for volumes to attach/mount for pod ""recycler-for-nfs""/""default"". list of unattached/unmounted volumes=[vol]
  20m           1m              4       {persistentvolume-controller }                  Warning         RecyclerPod     (events with common reason combined)
```

These steps were necessary:

- added event watcher to volume.RecycleVolumeByWatchingPodUntilCompletion
- pass all these events through volume plugins to volume controller
- rework volume.RecycleVolumeByWatchingPodUntilCompletion unit tests to a table (too much copy-paste)
- fix all unit tests along the way"
adc0eef43e0563816f89f992e23aa2291568b802,kubernetes/kubernetes,"remove duplicated import and wrong alias name of api package
"
611530889fb0c29baf8593ddb1dc705576b04a2a,kubernetes/kubernetes,"Cleanup more extensively in e2e
"
38cd0d078e9bbadc5742c92ef797d6c58166e2e4,kubernetes/kubernetes,"Merge pull request #27311 from vmware/photon-controller-fixes

Automatic merge from submit-queue

Fixes and improvements to Photon Controller backend for kube-up

- Improve reliability of network address detection by using MAC
  address. VMware has a MAC OUI that reliably distinguishes the VM's
  NICs from the other NICs (like the CBR). This doesn't rely on the
  unreliable reporting of the portgroup.
- Persist route changes. We configure routes on the master and nodes,
  but previously we didn't persist them so they didn't last across
  reboots. This persists them in /etc/network/interfaces
- Fix regression that didn't configure auth for kube-apiserver with
  Photon Controller.
- Reliably run apt-get update: Not doing this can cause apt to fail.
- Remove unused nginx config in salt"
5984607cb93ad441beadbe21f918803727e3a128,kubernetes/kubernetes,"Merge pull request #40088 from jsafrane/storage-ga-v1

Automatic merge from submit-queue (batch tested with PRs 41854, 41801, 40088, 41590, 41911)

Add storage.k8s.io/v1 API

v1 API is direct copy of v1beta1 API. This v1 API gets installed and exposed in this PR, I tested that kubectl can create both v1beta1 and v1 StorageClass.

~~Rest of Kubernetes (controllers, examples,. tests, ...) still use v1beta1 API, I will update it when this PR gets merged as these changes would get lost among generated code.~~ Most parts use v1 API now, it would not compile / run tests without it.

**Release note**:
```
Kubernetes API storage.k8s.io for storage objects is now fully supported and is available as storage.k8s.io/v1. Beta version of the API storage.k8s.io/v1beta1 is still available in this release, however it will be removed in a future Kubernetes release.

Together with the API endpoint, StorageClass annotation ""storageclass.beta.kubernetes.io/is-default-class"" is deprecated and  ""storageclass.kubernetes.io/is-default-class"" should be used instead to mark a default storage class. The beta annotation is still working in this release, however it won't be supported in the next one.
```

@kubernetes/sig-storage-misc"
1ebffa7112328cb9006d536723e45c269e20619c,kubernetes/kubernetes,"fed: adapter registry -> type registry to enable ctlr mgr use
"
56d60cfae60ed5f9da50e9913d66d90786c143e9,kubernetes/kubernetes,"pkg/util: move flags from pkg/util/config to pkg/util/flags
"
d0938094d9bfa5f6fc4c58e0a2e57197da8d2f14,kubernetes/kubernetes,"move new etcd storage into cacher
"
86d849e3749ee86fc1a485ad7085d31adcff0148,kubernetes/kubernetes,"Separate Direct and Indirect streaming paths, implement indirect path with CRI
"
988aa6fdf67110cdfc012bf79a15d39c337f58bc,kubernetes/kubernetes,"Move things into a 'kube-system' namespace.
"
9ec88d0d45a7273bfbac70ad51279112eeeda00a,kubernetes/kubernetes,"Merge pull request #54513 from deads2k/admission-09-move

Automatic merge from submit-queue (batch tested with PRs 49865, 53731, 54013, 54513, 51502). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

 move webhook admission to generic apiserver

This builds on https://github.com/kubernetes/kubernetes/pull/54414.

It moves the admission webhook into the generic apiserver.  It also allows the injection of a server managed way to override the rest.Config used for a particular service.  This makes for an easier point to allow auto-configuration of the kube-apiserver to loopback to itself as a special case for kubernetes.default.svc.

@kubernetes/sig-api-machinery-pr-reviews 

```release-note
the generic admission webhook is now available in the generic apiserver
```"
ca2f1b87add54a4bb842df53fdffe1ffc213a7e7,kubernetes/kubernetes,"Replace negotiation with a new method that can extract info

Alter how runtime.SerializeInfo is represented to simplify negotiation
and reduce the need to allocate during negotiation. Simplify the dynamic
client's logic around negotiating type. Add more tests for media type
handling where necessary.
"
9448aa66ff3c76ad8bfe8f3b30766ad560ba6f89,kubernetes/kubernetes,"cleanup the volume plugin for recycle

update commit to reflect changes
"
866631fab123d5656714258a140a39dce2e4edeb,kubernetes/kubernetes,"Move defaultKubeConfig to constants.go

Signed-off-by: Xianglin Gao <bbedb2ac29b3c73ac4e286ceec55d9b35a6b3821@alibaba-inc.com>
"
8d6bbaa85f96f14ac9c9722ed1677e1052c974ba,kubernetes/kubernetes,"Merge pull request #49678 from smarterclayton/429_metric

Automatic merge from submit-queue

Timeout and Max-in-flight don't report non-resource URLs correctly.

Unify error reporting for 429 and 504 to be correct for timeout and max in flight and eviction. Add better messages to eviction (removing a todo). Return the correct body content for timeouts (reason and code should be correct).

This potentially increases cardinality of 429, but because non-api urls may be under the max-inflight budget we need to report them somewhere (if something breaks and starts fetching API versions endlessly).

```release-note
The 504 timeout error was returning a JSON error body that indicated it was a 500.  The body contents now correctly report a 500 error.
```"
1737a433241527b99350a4992f3bc386ae093c6b,kubernetes/kubernetes,"Merge pull request #66876 from juanvallejo/jvallejo/prototype-plugins

Automatic merge from submit-queue (batch tested with PRs 67062, 67169, 67539, 67504, 66876). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Update the kubectl plugin mechanism

**Release note**:
```release-note
The plugin mechanism functionality to closely follow the git plugin design
```

Replace the existing plugin mechanism with the design proposed in https://github.com/kubernetes/community/pull/2437.

~~_The full implementation of the plugin mechanism itself is entirely contained within the first commit._~~

## Walkthrough

Under the new design, there is no plugin installation or loading required to use plugins.
A plugin is simply any executable file on a user's PATH whose name begins with `kubectl-`.
- Plugins receive the inherited environment from the `kubectl` binary. All environment variables
accessible by `kubectl` become accessible by the plugin.
- Plugins decide which command path they wish to implement based on their name. For example, a plugin wanting to provide a new command `foo`, would simply be named `kubectl-foo`.

### Creating a plugin

Below is an example plugin, that we will use for this walkthrough. Plugins may be written in any language, and handle arguments and flags in any way, optionally (as a convention) providing a way to retrieve their version via a `version` subcommand.

```bash
#!/bin/bash

# optional argument handling
if [[ ""$1"" == ""version"" ]]
then
    echo ""1.0.0""
    exit 0
fi

# optional argument handling
if [[ ""$1"" == ""config"" ]]
then
    echo $KUBECONFIG
    exit 0
fi

echo ""I am a plugin named kubectl-foo""
```

### Using a plugin

To use a plugin, simply make it executable:

```bash
sudo chmod +x ./kubectl-foo
```

and place it anywhere in your PATH:

```bash
sudo mv ./kubectl-foo /usr/local/bin
```

You may now invoke your plugin as a `kubectl` command:

```bash
$ kubectl foo
I am a plugin named kubectl-foo
```

All args and flags are passed as-is to the executable:

```bash
$ kubectl foo version
1.0.0
```

All environment variables are also passed as-is to the executable:

```bash
$ export KUBECONFIG=~/.kube/config
$ kubectl foo config
/home/<user>/.kube/config

$ KUBECONFIG=/etc/kube/config kubectl foo config
/etc/kube/config
```

Additionally, the first argument that is passed to a plugin will always be the full path to the location where it was invoked (`$0` would equal `/usr/local/bin/kubectl-foo` in our example above).

### Plugin discoverability

Seeing as how the `kubectl plugin` command is left as a no-op with this PR (perhaps it could serve as an entrypoint towards additional plugin functionality in the future), a small subcommand has been included that _lists all available plugin executables on a user's PATH_, along with any warnings it finds.

Example usage of this new subcommand is included below:

```bash
$ kubectl plugin list
The following kubectl-compatible plugins are available:

test/fixtures/pkg/kubectl/plugins/kubectl-foo
plugins/kubectl-foo
  - warning: plugins/kubectl-foo is overshadowed by a similarly named plugin: test/fixtures/pkg/kubectl/plugins/kubectl-foo
plugins/kubectl-invalid
  - warning: plugins/kubectl-invalid identified as a kubectl plugin, but it is not executable
plugins/kubectl-bar

error: 2 plugin warnings were found
```

cc @kubernetes/kubectl-maintainers @kubernetes/sig-cli-pr-reviews @soltysh @seans3 @mengqiy"
b03fbf90f8541b1be821aa5d917cb650df3e87f2,kubernetes/kubernetes,"Make RESTClient more generic to API version, simplify version handling

RESTClient is an abstraction on top of arbitrary HTTP endpoints that
follow the Kubernetes API conventions. Refactored RESTClientFor so that
assumptions that are Kube specific happen outside of that method (so
others can reuse the RESTClient). Added more validation to client.New
to ensure clients give good input. Exposed APIVersion on RESTClient
as a method so that wrapper code (code that adds typed / structured
methods over rest endpoints like client.Client) can more easily make
decisions about what APIVersion it is running under.
"
b15efbc2f5eff3773df93cd3e047ea6059c0a128,kubernetes/kubernetes,"Merge pull request #8504 from jayunit100/ginkgo-names

Cleanup ginkgo declarative naming in E2Es"
eae2b8e9bac5307b12872b6e0a8acf58a9f58292,kubernetes/kubernetes,"proxy/iptables: split out service map creation and add testcases
"
3aff54f345c9e66b164849f44eeca72ae4de7dae,kubernetes/kubernetes,"Merge pull request #53589 from sttts/sttts-pkg-api-testing

Automatic merge from submit-queue (batch tested with PRs 53204, 53364, 53559, 53589, 53088). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

pkg/api: move *_test.go -> pkg/api/testing

Cleaning up pkg/api, one little step towards pkg/apis/core."
867159416f68b5d069921e32d7992720c58a3d56,kubernetes/kubernetes,"Merge pull request #44293 from deads2k/api-08-unstructureditems

Automatic merge from submit-queue (batch tested with PRs 43545, 44293, 44221, 43888)

make unstructured items correspond to other items for storage

""normal"" `Items` elements include the struct itself, not a pointer to the struct.  Some of the deeper bits of storage rely on this behavior in reflective paths.

This updates the `UnstructuredList` to be ""normal"".

@kubernetes/sig-api-machinery-pr-reviews"
5df8cc39c98fa10129f137b2e44482204c133175,kubernetes/kubernetes,"refactor: generated
"
b02481708a369f2f5bc49f59fb71ee8d5a0c8c12,kubernetes/kubernetes,"Fix volume states out of sync problem after kubelet restarts

When kubelet restarts, all the information about the volumes will be
gone from actual/desired states. When update node status with mounted
volumes, the volume list might be empty although there are still volumes
are mounted and in turn causing master to detach those volumes since
they are not in the mounted volumes list. This fix is to make sure only
update mounted volumes list after reconciler starts sync states process.
This sync state process will scan the existing volume directories and
reconstruct actual states if they are missing.

This PR also fixes the problem during orphaned pods' directories. In
case of the pod directory is unmounted but has not yet deleted (e.g.,
interrupted with kubelet restarts), clean up routine will delete the
directory so that the pod directoriy could be cleaned up (it is safe to
delete directory since it is no longer mounted)

The third issue this PR fixes is that during reconstruct volume in
actual state, mounter could not be nil since it is required for creating
container.VolumeMap. If it is nil, it might cause nil pointer exception
in kubelet.

Details are in proposal PR #33203
"
e7070354fe18f316125b8433d6243e8680e9850c,kubernetes/kubernetes,"Merge pull request #57492 from cheftako/node-controller

Automatic merge from submit-queue. If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Split the NodeController into lifecycle and ipam pieces.

**What this PR does / why we need it**: Separates node controller into ipam and lifecycle components. 

    Prepatory work for removing cloud provider dependency from node
    controller running in Kube Controller Manager. Splitting the node
    controller into its two major pieces life-cycle and CIDR/IP
    management. Both pieces currently need the the cloud system to do their work.
    Removing lifecycles dependency on cloud will be fixed ina followup PR.
    
    Moved node scheduler code to live with node lifecycle controller.
    Got the IPAM/Lifecycle split completed. Still need to rename pieces.
    Made changes to the utils and tests so they would be in the appropriate
    package.
    Moved the node based ipam code to nodeipam.
    Made the relevant tests pass.
    Moved common node controller util code to nodeutil.
    Removed unneeded pod informer sync from node ipam controller.


**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #https://github.com/kubernetes/kubernetes/issues/52369

**Special notes for your reviewer**:

**Release note**:
```release-note
None
```"
b731b2090737f4b380763c436645eac1a770e79f,kubernetes/kubernetes,"Collapse REBOOT_SKIP_TESTS into GCE_DEFAULT_SKIP_TESTS, and remove GCE_SOAK_CONTINUOUS_SKIP_TESTS as redundant (see notes)
"
ded67ead1ee73d48ce761e3aeac870ea48a9d407,kubernetes/kubernetes,"Make Kubelet type members private and provide New functions.
"
d93ebd0e9fd6ae3cb700774975ccd0ca12436c45,kubernetes/kubernetes,"Merge pull request #26993 from mwielgus/ca-rename

Rename ENABLE_NODE_AUTOSCALER to ENABLE_CLUSTER_AUTOSCALER - part 1"
6c2c5c2614273e3322825de82cb817a13ab936de,kubernetes/kubernetes,"Clean up unused functions and consts
"
bcadad2e2eec8e6bb1fcd85de2cf5497d2a4aeec,kubernetes/kubernetes,"Use Managed Instance Group instead of manually creating Nodes in GCE
"
428aeacf6d8019c1c45380e3782d0c4f6c7de572,kubernetes/kubernetes,"Rework vagrant cluster set up.

* Have a single config file that mirrors other cluster providers
* Warn users not to use 'vagrant up' directly
* Allow 'extra' parameters to the docker daemon.  Fixes #2685
* Renumbers things so that they are more sane.  Master/minions are 10.245.1.x, container subnets are 10.246.x.1/24, portal is 10.247.0.0/16
"
d8ec7181b45030d9201bf4cb29ea6295c64185d2,kubernetes/kubernetes,"Improved validation error message when env.valueFrom contains no (or misspelled) ref
"
8b4ca9c2a7913d2dc6c951cc8ba3a1a00c811e2a,kubernetes/kubernetes,"Move CORS handler wrapping into cmd/apiserver and switch config flag to a list of allowed origins
"
a48cc2644368d93769996c369b2adb726f2c86c7,kubernetes/kubernetes,"Optimize Repeated registration of AlgorithmProvider when ApplyFeatureGates
Add InsertPredicateKeyToAlgorithmProviderMap() and RemovePredicateKeyFromAlgorithmProviderMap() to insert/remove fit predicate key of all algorithmProviders which in algorithmProviderMap
Add Func RemovePredicateKeyFromAlgoProvider() AND InsertPredicateKeyToAlgoProvider() which can insert/remove fit predicate key to specific algorithmProvider
"
b906e34576d73a227e751301d1850bc95758ef58,kubernetes/kubernetes,"kubelet: trigger pod workers independently

Currently, whenever there is any update, kubelet would force all pod workers to
sync again, causing resource contention and hence performance degradation.

This commit flips kubelet to use incremental updates (as opposed to snapshots).
This allows us to know what pods have changed and send updates to those pod
workers only. The `SyncPods` function has been replaced with individual
handlers, each handling an operation (ADD, REMOVE, UPDATE). Pod workers are
still triggered periodically, and kubelet performs periodic cleanup as well.

This commit also spawns a new goroutine solely responsible for killing pods.
This is necessary because pod killing could hold up the sync loop for
indefinitely long amount of time now user can define the graceful termination
period in the container spec.
"
914c57eb52e4457211398542c94eb179f174a460,kubernetes/kubernetes,"Merge pull request #40749 from deads2k/generic-35-options

Automatic merge from submit-queue

remove unneeded storage options

Cleanup of some storage serialization options that only kube and federation api server (and maybe not even that one) need.

You may have called it a snip, but this moves the options out of generic entirely."
25ebf875b4235cb8f43be2aec699d62e78339cec,kubernetes/kubernetes,"Merge pull request #55812 from deads2k/admission-17-external

Automatic merge from submit-queue (batch tested with PRs 55812, 55752, 55447, 55848, 50984). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Make versioned types for webhook admission config

Versioned webhook admission config type as promised in https://github.com/kubernetes/kubernetes/pull/54414.  

@kubernetes/sig-api-machinery-pr-reviews 
@ericchiang as promised.  fyi.

```yaml
kind: AdmissionConfiguration
apiVersion: apiserver.k8s.io/v1alpha1
plugins:
- name: GenericAdmissionWebhook
  configuration:
    kind: WebhookAdmission
    apiVersion: apiserver.config.k8s.io/v1alpha1
    kubeConfigFile: /path/to/my/file
```

`ADMISSION_CONTROL_CONFIG_FILE=../foo.yaml hack/local-up-cluster.sh`"
543391f1dcc19aeac31e105c04a54542898fb2b7,kubernetes/kubernetes,"Clean up unit tests using FakeDockerClient

Add a helper method to set the container map and list at the same time, without
having to specify them separately. This reduces the effort required for
adding/modifying tests as well as making the code more concise.
"
9f508e94227dfd043c2a14baf3df04dd168333c1,kubernetes/kubernetes,"Merge pull request #13076 from invenfantasy/master

Cleanup deprecated Forever function"
33c894a6ae1a9aba51bd725e2176759206e7f0ec,kubernetes/kubernetes,"Remove unused (?) HealthCheck from KubeletClient
"
a2ddf0d5f428a7d87c15141ab79a620b4c8ebf54,mozilla/addons-server,"Avoid logging through mozlog in tests experiment (#8528)

Closes #8451 (Doesn't necessary fix it, we don't want a unified logging-level but this PR makes logging much clearer.)

* Don't use verbose mode for tox
* Refactor logging settings
* Fix services logging, correct dev and stage settings, update docs
* Update logging
* Be vigilent about disabling all logging
* Remove MOZLOG_NAME from stage settings
"
d39aa7442791924e45ade8e385cf250c7b758770,mozilla/addons-server,"Extracted l10n messages from 2017-08-25 at 9cd5d37fc6
"
27e1598f2ac29aadf2d7f69caf5e1c7df6f7bfba,mozilla/addons-server,"Extract and compile 20160517.
"
73c342dafdd4393802fbcab5b53998aa859d3b02,mozilla/addons-server,"Merge pull request #1557 from ngokevin/iarcrework

refactor webapp model code that checks for submission completion"
2e85d6e58fc1891bdcfcf06d5b9a6f3d5bd44981,mozilla/addons-server,"Merge pull request #5907 from diox/drop-total-contributions-field

Remove total_contributions field from Addon model"
55e25d8573211276437c557fc37fe3aaea62e113,mozilla/addons-server,"sign apps if packaged when made public
"
3abbbbe2b26b7361592b63bc6742380433ed606f,mozilla/addons-server,"pyflakes cleanup
"
cb37e13ad452be2afe8284dd71ca92ec9527e316,mozilla/addons-server,"Use BROKER_URL instead of BROKER_* settings.
"
7e583f937983ab358325746f46075ecbbddbeab9,mozilla/addons-server,"repackage new add-ons from the builder (bug 657051)
"
1be93c8dd5532a56452179dfb52e8ce69d99a8e7,mozilla/addons-server,"Rename webpay_tasks to tasks (bug 967786)

- Allows celery to auto discover tasks and register with the default queue
"
a6fc41f876d3f62672b512f0d4b75cace99e3e70,mozilla/addons-server,"Merge pull request #9195 from mozilla/7158-use-read-comitted-transaction-level

Unify database configuration, enable 'read committed' transaction level"
86f574a19a81d847eefb4e1753e525503890111f,mozilla/addons-server,"Added separate ToS page (bug 1209226)
"
e71300a21ad33f157fe7d8a1ee3a46a4ffe7f416,mozilla/addons-server,"Add separate unsubscribe link (675770)
"
f52b46e2aae99b239ce281f6235e71a4915b1ed6,mozilla/addons-server,"Make current_version obey app & appversion param for langpacks, in add-on detail API (#9321)

Make current_version obey app & appversion param for langpacks, in add-on detail API"
f8f7eac52456490cb1a36b1c25ddfdb5d703f08c,mozilla/addons-server,"move to new payment flow (bug 627077)
"
2d71e533bdf932e29d35f2fede76d587a9a5424e,mozilla/addons-server,"Unify files/history/etc into one box (bug 651151-2)
"
8f62d7fbb7608698a77031a2170d743f49374992,mozilla/addons-server,"Extract/compile script.  Today's lucky number is 31808.
"
ae7350d09d6871fc8109012306a401227b462d42,mozilla/addons-server,"Remove duplicated/outdated disabled-payments tests from test_models

After ea421198e4f701343cff751ffa926095446ade4a this is covered in
mkt.search.tests.test_views
"
eadcbdb766d024d7e4f85ad14f10126fb84465f7,mozilla/addons-server,"Merge pull request #1774 from washort/pre16

More test cleanups preceding Django 1.6 branch"
2dd1abced20cb86d4ef35f118fc3f069eb9e2eef,mozilla/addons-server,"Accept an optional format in rocketfuel image URLs (bug 944109)

There is some additional cleanup, doc and tests but the heart
of the issue was making collections image use a "".png"" format
when an image URL is returned, but also let us PUT/DELETE to
the format-less URL.
"
60d6b8cc87c96fb9a251fa82831640d27cf31cd9,mozilla/addons-server,"Replace obsolete reviewed/unreviewed/is_reviewed methods by public/is_public
"
b106bd7a39390990eda311850d0481b453bd49ac,mozilla/addons-server,"Bug 623315 - Refactor addon_edit_media and submit/media templates
"
13627c62b54b6c23dde6bb898dbd6c596f6d62da,mozilla/addons-server,"Extract/compile script.  Today's lucky number is 19369.
"
33e4cdb88e9e3487b6876e7101d23eeb32f42a26,mozilla/addons-server,"Replace all old BrowserID URLs and references with the new Persona ones

In particular the include.js ones will speed up page load by
eliminating an extra redirect over HTTPS.

Now that all of the browserid.org URLs are gone, there is no need
to whitelist that domain in the CSP headers.
"
a326134cd8aae7bd94396fb10b2c4d355569531f,mozilla/addons-server,"Extract locales.
"
b90bf139226651bc7bfeaa117c63726c1510dafe,mozilla/addons-server,"Merge pull request #5791 from mozilla/1573-implement-django-jinja

Loads of clean-ups along the way.

Fixes #1573

* Moves all helpers modules to templatetags.jinja_helpers - there are a few things in there that aren't jinja related so there'll be a follow-up to split that later
* Update Jinja2 to 2.9.6
* Add django-jinja 2.3.1
* move some jingo-minify helpers to olympia.lib to avoid any jingo imports
* unified |f and |fe helpers into one |format_html helper that always escapes everything unless the input is already |safe

* Move helpers, add requirements, fix imports.
* Give backend a proper name
* Port f and fe filters from jingo
* Make start porting reviews jinja helpers module, make first test pass
* Get a handful more tests working, get rid of get_env, more and more jingo calls.
* Disable extension matching, render .txt templates too, fixes more stats tests
* Fix csv_header template to produce some reasonable and csv parsable
* Set trim_blocks to be compatible with jingo
* Unify |f and |fe into one |format that simplifies escaping rules. Update tests.

I think having one unified |format filter is beneficial, especially
given that our current escaping rules were kinda complicated and allowed
for seriously dangerous combinations even with autoescape activated.

Now everything passed as an argument to |format is explicitly escaped
unless marked as |safe, there's no way around that anymore.

* Naive first version using |format instead of |f and |fe, might need more review.
* Fix format for unicode strings
* Rename |format to |format_html
* Move nl2br_xhtml to amo.jinja_helpers, use it in all our templates.
* Move datetime filter to our code temporarily, fix mocks, fix recursive error
* Move csrf call to django_jinja csrf_token tag, fix addons templatetags
* Fix |class_selected usage, fix render_with to get registered
* Remove hack from zadmin, fix zadmin templatetags
* Fix user delete photo test, don't rely on proper context updates that happen in order.
* Fix more nl2br tests
* Fix detail page escape, django escapes differently than jinja
* Remove context from edit_review_reply_form
* Fix date created format filter usage
* Remove templates setting user, fix can_review
* Fix collect_add_widget to not inherit the global context
* Remove happy unicode client
* Cleanup can_review, add tests
* Fix tests, django use different html character for double quote escaping
* Switch to firefox latest to check ui-tests
* Cleanup and fix do_truncate
* Remove jingo, copy jingo-minify helpers that depend on jingo to our lib for now
* Rename nl2br_xhtml -> nl2br
* Jinja 2.9 compat for reviews truncate filter
* Don't use TEMPLATE_DEBUG
* Set default value for q, happens on index page.
* Fix jinja2 formatting with newstyle gettext"
3ac66d66ae197c07034470bf788a29545b234afc,mozilla/addons-server,"Rewriting FAQ (bug 570520)
"
39bfced7271a0b7d547428417a69344e36178194,mozilla/addons-server,"JS restructuring. Outside code now lives in js/lib.
"
d78f563fa71f90a02ce246fb5877236a3deb5aff,mozilla/addons-server,"Extract/compile script.  Today's lucky number is 31327.
"
ec46b52c11cba0800a6fdd962aa613e0bacecacd,mozilla/addons-server,"Extracted l10n messages from 2017-09-04 at 9cd5d37fc6
"
fb17d40ab00c51b0cecc363c146425a72e664940,mozilla/addons-server,"Extract messages
"
e68e25830563133ab4cd22e7a309cff53caa18ae,mozilla/addons-server,"move featured apps out of mkt/api and consolidate (bug 847659)
"
42a8770a49e0342acffa7fdde22655c98e783184,noironetworks/neutron,"Make DhcpRpcCallback a separate callback class

RPC has a version of itself. In Neutron a plugin implements
several RPC interface, so a single RPC version doesn't work.
In Mixin callback class approach, RPC versioning depends on
each plugin implementation and it makes harder to maintain
RPC version appropriately. This patch series replaces mixin
RPC callback of server side with a separate class.

This commit handles server-side callback of dhcp-agent RPC interface.
DHCP-agent server-side callback class is moved from db/ to
api/rpc/handlers because it doesn't involve any db operations
and defining all RPC interfaces in a single place sounds reasonable.

Note that moving other DHCP-agent related RPC interface class
to api/rpc/handlers can be done in a separate patch as this patch
focuses on reorganizing the server-side RPC callback class.

Partial-Bug: #1359416
Change-Id: Ifb2a1bc0b7971995aae2856c9d4cd88c6dbc22d6
"
4da81f2d3c81cdca70c3f43be9ee14b4a7329688,noironetworks/neutron,"Merge ""OVS-agent: Separate ovs-ofctl using code as a driver"""
88fd2521c17926918432e3a701024dc642a64eb1,noironetworks/neutron,"Refactoring config options for l3 agent config

Refactoring neutron configuration options for l3 agent to be in
neutron/conf/agent/l3. This would allow centralization of all
configuration options in neutron/conf and provide an easy way to import.

Change-Id: Ie7533ea55eaa4d0f2c1919131a75f56e027c4d6e
Partial-Bug: #1563069
"
1f578d2572490e755179c3d4a351be1049091bfa,noironetworks/neutron,"Merge ""Apic drivers enhancements (second approach): L2 refactor"""
02db0cd4586718efb68bc8d81b0b1571312f0b47,noironetworks/neutron,"Merge ""Make Neutron resources reference standard attr table"""
3196cef6986b733ff0a101164e5f3a49a10425c0,noironetworks/neutron,"Removes calls to mock.patch.stopall in unit tests

Removes unnecessary calls to mock.patch.stopall
in individual unit tests since it is now
automatically called from the base test case.

Closes-Bug: #1291130
Change-Id: Ia8e82d6a9a9bc9bd5f48146c1be53069ff1cdb01
"
9c71544c3bf4b1760607788cb7a9b52ebff01779,noironetworks/neutron,"Merge ""Remove unnecessary executable permission"""
2b3c20591d295e874460d8f448dd2a7e199dc90f,noironetworks/neutron,"Merge ""Apic drivers enhancements (second approach): L3 refactor"""
2c25e875d305c30a9f3730bdc822558a36870d98,noironetworks/neutron,"Rename Queue related methods for VMware NSX plugin

This is the first step of many for renaming/refactoring
nvplib and related modules. Starting with queues, whose
code is small and less daunting.

Partial-implements blueprint: nicira-plugin-renaming

Change-Id: I2db899883c61f30c8b15703c96290872e853d670
"
69f4b813e8a086512f39ee3ef5b8f3354f9af8c0,noironetworks/neutron,"[qos] cleanup _find_object from neutron.db.api

Instead of having a separate function for id-based search, make
get_object accept any kwargs, including id=, and reuse it everywhere
where we used _find_object before.

Change-Id: Ibd94c41fb847d67aabb94172d0117bafc0fdbdf6
"
81f1650bb73cae6880ac4c19fab101416a393bff,noironetworks/neutron,"Merge ""Cleanup of SecurityGroup classes"""
070def25e5945870b63dfebb4e7101e82482def9,noironetworks/neutron,"Rename DB models and related resources for VMware NSX plugin

This patch also introduces a DB migration to update the
affected tables, and the enum type for those DB engines that
require it.

Additions made to existing migrations are needed to ensure
that green deployments using the new plugin name will apply
the migrations correctly.

Partial-implements blueprint nicira-plugin-renaming

Change-Id: Ie0fdb51dfa399c44b749fa8345f334a2c8c29151
"
a19ec4a7320dead0ea138697b8785638c6dd4307,noironetworks/neutron,"Use RPC instead of neutron client in metadata agent

RPC is a standard way of interacting between Neutron server and agents
Using neutron client is also  inefficient as it results in unneeded
keystone load and may become a bottleneck at scale

DocImpact
When upgrading, one should upgrade neutron server first,
then metadata agent. However there is a fallback in case
metadata agent fails to get info from server by rpc -
it will return to using neutron client.

Closes-Bug: #1092043

Change-Id: Ib75568643e6062543c0ff8cf80fba1b40b4fe82f
"
910470de36a58f9742e8c2163ebdfa100d5b2795,noironetworks/neutron,"Merge ""Move shared metadata driver related config options"""
75e2dfffaf02dd8f1b85b510e58d2f3719d97f19,noironetworks/neutron,"Make sure floating IPs  + gateways must be on external nets

bug #1042030

- adds admin-writable, world-readable router:external attribute to
the network object if L3 extension is loaded.
- prevents floating ips from being created unless network is external
- shortens L3 extensions alias from 'os-quantum-router' to 'router' to
make attribute extensions more readable.

WIP:
- Need to add policy logic so non-admin users can always see external
networks without requiring that these networks are shared (since VMs can
always create ports on shared networks, but provider may want to have
externals networks that VMs cannot directly plug into.

Random clean-up:
- prevent delete_network in plugins from implying it returns something
- modify extensions.py so that exceptions during calls to
get_extended_resources() will actually be logged if unexpected.
- unset executable bit on test_iptables_manager.py to make sure tox
actually runs it.

Change-Id: I5bbf063927b93458da7cb467d9ad5c92ebabbbf7
"
4ec456d31501f09c68b5c23c488878da32dce75e,noironetworks/neutron,"Removed deprecated class LocalVLANMapping

VLAN mapping was separated from agent in change
I514c7632c1c26d6cfeb706fc5d829a46dcce3782
Please use new manager located in
neutron.plugins.ml2.drivers.openvswitch.agent.vlanmanager

Change-Id: Id6cc9c332c241602526d4c325ca4d1c80380b203
"
2a076272688487650192d75ff261f6fdf7835516,noironetworks/neutron,"Make create_object_with_dependency cleanup

This adjusts the create_object_with_dependency helper function
to attempt to cleanup any dependency it was responsible for creating
if it encounters a failure in trying to attach a child to the
dependency.

Change-Id: I363f3a299c55e5063b4239028728bb5593132010
Related-Bug: #1548285
"
a98dc7680d4689f5ce5f602f9c5cb3bcc77de215,noironetworks/neutron,"tests/unit: refactor reading neutron.conf.test

neutron.conf.test includes rpc_backend whose value is stashed.
Thus it is required to reset when tearing down, otherwise the stale status
will be used by succeeding tests causing random error.

This patch refactors reading neutron.conf.test and resets the status of
rpc_backend properly.

Closes-Bug: #1281481
Closes-Bug: #1284549
Change-Id: I0fa5945b6adbb9945d353028ec88d00ccbf4e31a
"
407ee801e3f4a9f489062c1446ba128d25da6db5,noironetworks/neutron,"Split services code out of Neutron, pass 1

- After l3_agent is refactored, need to remove services/firewall
- After vmware plugin moves services out of monolothic,
  remove model copies and services/loadbalancer/constants,
  and re-enable unit tests.
- After alembic chain gets split in four, tweak models/head and
  fix heal/current chain.
- Re-factor test_routerserviceinsertion into one of the service repos

Partially-Implements: blueprint services-split
Change-Id: I5466984a9e57128266f97e9bd5c265f4dc3cba7b
"
ee7d1cbdaae8faa307f497b4e1bf10bffc90af0c,noironetworks/neutron,"Merge ""rename port attribute variable to SECURITYGROUPS from SECURITYGROUP"""
58744ee4db6c727e41e79f498e75bdad8913f036,noironetworks/neutron,"NSX: Avoid floating IP status reset

The method for setting the floating IP status in the NSX plugin
has a flaw that causes in some cases the status to be reset.
This patch removes this bug and also protects against regression
adding status check in the unit test covering floating ip
creation.

This patch also moves the above mentioned unit test in a more
suitable place in the test same module.

Change-Id: Ib08c421ade20ce23b5c08145203a2df6a8f3efa5
Closes-Bug: #1357514
"
7267d75fdd3f90af759d71e9490cd41d41ba6d98,noironetworks/neutron,"Use separate queue for agent state reports.

This optimization is needed for big clusters with hundreds
of agents where the spike of activity may trigger a burst
of RPC requests that would prevent neutron-server from processing
agent heart beats in time, triggering resource rescheduling.

This will be further optimized by running dedicated RPC workers
for state reports processing.

Related-Bug: #1496410
Change-Id: Id86a1f962aaa4f64011d57ae55d240f890cca4f7
"
40e76356dd50113936826833eddb3ce57fee8214,noironetworks/neutron,"Improve data access method of ryu-agent

fixes bug #1110174

This patch implement rpc in ryu-agent, instead of accessing a
database directly.
Because it was not necessary to transmit information via database,
therefore the table is eliminated.

Also, I remove openflow controller stuff from a configuration file
of the Ryu plugin because it was not used anymore.

Change-Id: I5e261297c3f92c6a1ac5df229084176e84694e87
"
669dcc41bb04b8c0e0b914d95b84321ecd44be69,noironetworks/neutron,"Merge ""Make command log in neutron utils.execute() a single line"""
1a116d24a955c9e45fa8a29998d09da0350be4ab,noironetworks/neutron,"Fix H302 violations in plugins package

H302 violation is reported by flake8 when importing separated objects from
modules instead of importing the whole module.
e.g.   from package.module import function
       function()
is changed to
       from package import module
       module.function()

Change-Id: I83372124f4fba7b94bbfb4a56a0c0ef779ee237f
Partial-Bug: #1291032
"
01a7ba19cf6661b1aef7d08fb748bb2470caf28f,noironetworks/neutron,"Refactor management of namespaces in the L3 Agent

Creates classes representing the 3 types of namespaces handled by the L3 agent:
router, snat and fip.

The scope of this change is:

- Creation and deletion methods are provided for each namespace class
- Creation and deletion of router and snat namespaces are moved to the router
  classes. These namespaces are now members of the corresponding router class
- Invocation of Fip namespace creation and deletion is left in the agent, since
  the agent owns it
- A context manager is provided to move the namespaces (router and snat)
  cleanup code out of the agent

A follow up patchset will add methods to create and delete interfaces in the
namespaces. These methods are intended to be used by the router classes

Change-Id: I54b14e593ded6b2990d57a3ae9d598a699ae133e
Partially-Implements: bp restructure-l3-agent
"
0446eaccbf898c85b87810231bffb0651639f262,noironetworks/neutron,"Shorten the path of the nicira nvp plugin.

 * s+[/.]nicira_nvp_plugin++
 * Backwards compatibility is maintained by importing the
   nicira package as nicira_nvp_plugin in the plugins package.
 * It may be necessary to remove stale .pyc/.pyo files under the
   nicira path after applying this patch.
 * DocImpact
 * Addresses bug 1166307

Change-Id: I241a2a75106398506b01bcb7a6ddbaafa1b7bd30
"
f945d84fc973220e4bdf0897c003a39640960f0b,noironetworks/neutron,"Refactor of floating ip processing in L3 Agent

Breaks down the processing of floating ip processing in 3 methods. A key goal
is to make the handling of ip tables application deferal more logically cohesive
in the process_router method

Partially-Implements: bp restructure-l3-agent

Change-Id: I7594c16a3ee3b9c988c7db856f9f401e4742f4c2
"
1fe6574f7bc96baefde03ee6cccc7226f489a39e,noironetworks/neutron,"Merge ""Replace IPv4 and IPv6 default addresses with constants"""
9ab03617704d4972b61642dc6912c16c081ec576,noironetworks/neutron,"Merge ""Move values for network_type to plugins.common.constants.py"""
252596cbedad2dac53ff9395d20a7128a422d3f1,noironetworks/neutron,"Merge ""Use the constant HOST_ID instead of 'binding:host_id'"""
6f2231a7095f21e556124af3b2f3d54f284a1ef9,noironetworks/neutron,"Merge ""Move classes out of l3_agent.py"""
5a489836cdc0de27cbc3de4f906ff13272d234e1,openthread/openthread,"[naming] rename FFD to FTD (#3102)

"
74a95f042dd6ad9e8d122cdd5f231049d6ba5699,openthread/openthread,"Windows API DLL (#882)

* VS Solution files and minor fixes.

* Move Tasklet into platform include file

* Refactor data path APIs into openthread-ip6.h
"
8bb773f0186c02ad006fbdec11a02e9f0094966a,pycroscopy/pycroscopy,"moved many reusable modular functions out of hdf_writer to write_utils
Rewrote build_ind_val_dsets and build_reduced_spec_dsets to NOT use
VirtualDataset
"
c418596def915b7b10d8302bd6bb11eea305e6f3,pycroscopy/pycroscopy,"PEP8 renaming of showTree and addChildren
"
aff4187a20ec2b6919b481f89135bba98fe37976,pycroscopy/pycroscopy,"Renamed MicroData to VirtualData and so on.
"
d21fe418a6a50e5625def83176d70735735e7296,pycroscopy/pycroscopy,"Renamed print_log to verbose in hdf_utils
"
882a39c7d6ea0ea1dc0e0014738e4cdb68c20860,raonix-github/openwrt,"atheros[ar2315-spiflash]: remove duplicated definitions

Signed-off-by: Sergey Ryazanov <ryazanov.s.a@gmail.com>

git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@41325 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
8ddac8e3cd45a826c487e2aac796c48f3c25f0b1,raonix-github/openwrt,"add the new compat-wireless for 2.6.27 + multi-rate retry and minstrel patches, rename patches/ for old compat-wireless to patches-old/

git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@12865 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
e39dc8d823c86559eedbbdcee5f5c14b827fed0f,raonix-github/openwrt,"ar71xx: add support to TP-Link Archer C59v1 and C60v1

TP-Link Archer C59v1 is a dual-band AC1350 router, based on Qualcomm/Atheros
QCA9561+QCA9886.

Specification:

- 775/650/258 MHz (CPU/DDR/AHB)
- 128 MB of RAM (DDR2)
- 16 MB of FLASH (SPI NOR)
- 3T3R 2.4 GHz
- 2T2R 5 GHz
- 5x 10/100 Mbps Ethernet
- USB 2.0 port
- 8x LED (controled by 74HC595), 3x button
- UART header on PCB

TP-Link Archer C60v1 is a dual-band AC1350 router, based on Qualcomm/Atheros
QCA9561+QCA9886.

Specification:

- 775/650/258 MHz (CPU/DDR/AHB)
- 64 MB of RAM (DDR2)
- 8 MB of FLASH (SPI NOR)
- 3T3R 2.4 GHz
- 2T2R 5 GHz
- 5x 10/100 Mbps Ethernet
- 7x LED, 2x button
- UART header on PCB

Currently not working:
- Port LAN1 on C59, LAN4 on C60
- WiFi 5GHz (missing ath10k firmware for QCA9886 chip)
- Update from oficial web interface ( tplink-saveloader not support ""product-info"")

Flash instruction:
1. Set PC to fixed ip address 192.168.0.66
2. Download lede-ar71xx-generic-archer-cXX-v1-squashfs-factory.bin
and rename it to tp_recovery.bin
3. Start a tftp server with the file tp_recovery.bin in its root directory
4. Turn off the router
5. Press and hold Reset button
6. Turn on router with the reset button pressed and wait ~15 seconds
7. Release the reset button and after a short time
the firmware should be transferred from the tftp server
8. Wait ~30 second to complete recovery.

Flash instruction under U-Boot, using UART:

1. tftp 0x81000000 lede-ar71xx-...-sysupgrade.bin
2. erase 0x9f020000 +$filesize
3. cp.b $fileaddr 0x9f020000 $filesize
4. reset

Signed-off-by: Henryk Heisig <b90527cdc58244055da93bd2451ec0a132b989b2@o2.pl>
[Jo-Philipp Wich: remove duplicate ATH79_MACH_ARCHER_C59/C60_V1 entries]
Signed-off-by: Jo-Philipp Wich <bd73d35759d75cc215150d1bbc94f1b1078bee01@mein.io>
"
4d520b5eaea34cb0565541c971d5d1a9adea1deb,raonix-github/openwrt,"[package] kernel: move support for generic IDE chipsets out of ide-core in their own packages, fix ixp4xx build issue (closes: #6939)


git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@20664 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
a5ebfc79ba93446ea576153c77f74d41c53c4d56,raonix-github/openwrt,"ar71xx: rework changes from r35840

Signed-off-by: Luka Perkov <luka@openwrt.org>
Signed-off-by: Gabor Juhos <juhosg@openwrt.org>

SVN-Revision: 35865
"
7c27f09e8de114b578fc9dc529d40689869e270b,raonix-github/openwrt,"package/kernel: move target specific modules to their own target files


git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@21132 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
537e1055b87d7e9c8c09170e9a612fca73edc68f,raonix-github/openwrt,"config symbol cleanup

git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@25272 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
5f388cc536c237fa1bf332c6a5f0cf6567020a53,raonix-github/openwrt,"[kernel] move common CONFIG_FB entries to generic


git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@17936 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
fcc67b55b1aeb7943f4cb3621d349da7764e4bbd,raonix-github/openwrt,"move common CONFIG_MMC entries to generic

SVN-Revision: 17948
"
c3035532ab9e362668da1fcb7616487d95f36d10,raonix-github/openwrt,"ar71xx: DIR-825 support cleanup


git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@18622 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
66178457116e5bbaf67d48cbbed158f68adf8ce1,raonix-github/openwrt,"kernel: move MTD_SPLIT_SUPPORT to generic config

CONFIG_MTD_SPLIT_SUPPORT symbol default value is 'y' and many platform
specific configs explicitly enables it, while no one platform disables
this symbol. So place it in generic config and remove from platform
specific configs.

Signed-off-by: Sergey Ryazanov <ryazanov.s.a@gmail.com>

SVN-Revision: 44612
"
365697a2f5e4b6e3915e04abef24b2ffc33e4ba3,substratum/substratum,"Recovery -> Restore

"
52555ed224bfba96d60f62ffd17689a6dcc1ed94,substratum/substratum,"Clean up!

"
f4f0bc600d5295652a5ec2915823ef2b903f0588,substratum/substratum,"SubstratumRebase: Deprecation of OMS3 + Optimizations (240 files)
"
d7938b9cd9906179007706a7d7daad1654655788,teamcapybara/capybara,Rename WaitUntil to timeout
5d47ee8ce626cbeaa12a5fac1332bcc66c129a0f,troubling/hummingbird,"Debug hook to auto-close responses and report on it (#214)

* Debug hook to auto-close responses and report on it

* Cleaning up delegations
"
84c322ffc6df804db6b24d42232560c26cbf445f,vertexproject/synapse,"Consistent import use.  Exceptions come into synapse.common using a * import; then all other use of exceptions and functions from syanpse.common get pulled in via 'import synapse.common as s_common'.  Remove unused imports from Synapse non-test code.
"
ae1383ab7d89303db8ae8d28ede55457bee51634,vertexproject/synapse,"Rename _initCoretex to _initCoreStor
"
da7ad06641e63148b7c6d85bc6f175d0d868a0ea,zurb/foundation-sites,"Sass lint: use ""stroustrup"" as brace style convention

Sass lint: use ""stroustrup"" instead of ""1TBS"" as brace style convention.
See: https://en.wikipedia.org/wiki/Indent_style

Pros:
- Easily add or remove lines within a `@if`/`@else if`/`@else` block,
without having to rearrange the braces.
- Able to add comments that describe a condition (`@if (...)`, `@else
if (...)` or `@else`) or the whole conditional block.
- Clearly separate the different parts of the conditional block.

Cons:
- Not commonly used
"
66cf9aa7cfdbfbb65165849c46f596bda4f0219b,zurb/foundation-sites,remove unnecessary conditional checks
f9c3cd9bf2c7c25d21ab6427f1893f316b28dbfe,zurb/foundation-sites,"simplify clear button method
"
13d9ca20576dc614e5a4c686f153079bbed7c95a,zurb/foundation-sites,"fix: refactor the `onLoad` uility to allow to unbind the created listenner
"
7abd5343590083da9ed245bc176d2bf77cbe2769,zurb/foundation-sites,"removes unnecessary `layout` property from YAML front-matter of pages, since it's already defined in the Gruntfile. Also removes `marked` options that match defaults already defined in the helper.
"
0860fc6d993c969d6e30021c5abf3f397b237379,zurb/foundation-sites,"Merge pull request #976 from bratsche/master

Move some app.js initialization into a ready callback, re #949"
fa616d39f043dea5299fbe847aa3103387b9251a,zurb/foundation-sites,"Merge branch 'develop' into refactor/xy-cell
"
5b9d694294ab1d11722a8e227aea9b7f3a3f75ae,BryanApellanes/Bam.Net,"Bam.Net: refactor to support test result collection service
"
7a4eb58ca113b2213b055940e4220ff5e9229de6,BryanApellanes/Bam.Net,"Bam.Net.ServiceProxy: use sha256 instead of sha1
"
23f4f7c77445103527bb1d5c875cc6998fbc6efa,BryanApellanes/Bam.Net,"more tests refactored
"
91740a9db4c7b8a377aa7c6c1af47ed0c6c16744,DestinyItemManager/DIM,"Clean up dialogs a lot.

This includes moving filter filling logic into a directive, removing unused cruft, and consolidating the function that shows dialogs.
"
17da6564153443e34f6bcd5024020747072f0e71,DestinyItemManager/DIM,"Merge pull request #1842 from bhollis/infuse-dialog

Move infusion dialog into its own module"
497a5275a27cffdc9690d8212012bdaf5d00f55c,DestinyItemManager/DIM,"Merge remote-tracking branch 'origin/master' into search-refactor
"
6313c7cd55a4bd83b7d2afe1853a224d12239b5c,DestinyItemManager/DIM,"Merge pull request #1651 from bhollis/bhollis-clean-oauth

Clean up oauth module"
f2afbf12455f85a429f692210989764ac47e1e5c,DestinyItemManager/DIM,Merge branch 'dev' into cleanup-definitions
d98516fb2b984cba919d6979c6f833f82ef4f84a,DestinyItemManager/DIM,"Merge pull request #2997 from bhollis/forsaken

Forsaken cleanup"
09eac65cbd80628447cc0bf2e0d8feb25ccdbe82,ElvisResearchGroup/L42,Improved error reporting and default parameters
c62e54ffb62bdd7ab361f8f0ae6ac802feffab18,ElvisResearchGroup/L42,"Bugs in remove deadcode found. 

Also, is superslow, tring to make it better

Deploy collections, pushing forward"
245a4bde6efc10757065135e3c1e71735c228693,ElvisResearchGroup/L42,Some improvements in Data
343e675fd2642af64326d015935148aa72924990,Freemius/wordpress-sdk,"[opt-in] [gdpr] Created a designated GDPR management class for modularity and ease of code maintenance. Also, use a network-level FS_Option_Manager instead of FS_Storage which was created to manage plugin/theme storage options.
"
e7c2284fa595c2687f4c14f63a0f97319fb2022b,Homebrew/homebrew-core,"etsh: rename from osh
"
a1698c7c8fe2b831eec8e3410bbd00636da87827,JuliaGPU/CUDAnative.jl,"Make the inner function a proper argument.
"
cf2f21e7067679f25d909106e18bad79ba9d61ef,LogtalkDotOrg/logtalk3,"Improve `wrapper` tool support for parsing `:- [File| Files]` directives by filtering out those files that are already being advised
"
7998ba077e0683ff0efd0b5042228eefff6610c1,LogtalkDotOrg/logtalk3,"More compiler and runtime code cleanup
"
69a13fd0d5db1c24193d75624eb7dc931c41d6af,MoveOnOrg/mop-frontend,"Merge branch 'master' into 262-refactor-login
"
8f5afc0a766d23ebd164d7e8ca872e619ce5c821,PopulateTools/gobierto,"Refactor process stages with separate controller and relocate i18n keys
"
0bc487d513b5a1875f03b45463139bee3abfaf91,PopulateTools/gobierto,"Improve Catalan locale
"
f33f3e423c7cc80df1dcd131e770799f90def413,PopulateTools/gobierto,"Merge remote-tracking branch 'origin/stable' into 462-improve-title-hierarchy
"
6538a3b0c6aee9065d5c40f92df06230acb136dc,SleepyTrousers/EnderIO,"Renamed comparator filter to sensor filter and added recipes

"
7c91c4dd98e639d0ed4fab7c088ca9d96c61192b,SleepyTrousers/EnderIO,"Reworked armor

* re #4677"
b6914e1b318a081a813d2fa89adc4052237049af,Sp2000/colplus-backend,"Break generate import metrics apart into individual mapper calls
"
ec4e4e81016b4396bb2fa455da9118aa1c17052c,ZencashOfficial/arizen,"Generate paper wallet init commit. Missing: 1. PDF print in selected path 2. Use qrcore lib instead of qr-image
"
aab51a8d4bf81c0c55d2fda85fd5925e9471e723,airslie/renalware-core,"extract code into more private methods & call uniq on the patients ids array
"
a36fd2a5c906d89e18f6148e5709da4d21b64a6e,airslie/renalware-core,"Import NHS Practices and GPs

- Import Practices from ODS XML TRUD files
  here https://isd.digital.nhs.uk/trud3/user/authenticated/group/0/pack/5/subpack/341/releases
  Note that data is also available from an API but would require about 9000 separate HTTP
  queries to get it all.. so maybe not. More reliable to rely on this xml file.
  Note GP imports will still rely on csv files not XML (for now - I believe there are plans to migrate
  the 'Prescribing Data' to XML.
- Convert primary care pyshician name into a single `name` field because
  we cannot reliably parse the data.nhs name e.g. ‚ÄúPINKERTON-SMITH JA‚Äù
  into family and given names.
- Make Patient & Practice has_many through a PracticeMembership. This allows us to soft delete
  a membership record during an import so we have a record of where the GP was working at any
  one time.
- Add Feed::File and Feed::FileType models under the Feeds namespace, the idea being we can use
  these to capture progress/result for file inputs eg practice, gp, drug, TT etc
- Add a bin/console helper: fires up rails console in spoec/dummy
- Don‚Äôt seed practice id as it upsets the pg sequence
- Using a Feeds::File object and a Practices::ImportJob
- Create a rake task to do it synchronously
- Import GPs
- Add a utility class to map countries
- Reset logging to errors only in test.rb
- Skip PracticeImportJob spec on CI for now as PG COPY not working on CI due a path issue.
- Add unrar and unzip to Docker image
- Practice memberships import
- Remove email from PrimaryCarePhysician: Emails are sent only to the practice address.
- Fix cucumber tag deprecations. the remaining ones reported are a bug in cucumber - see https://github.com/cucumber/cucumber-rails/issues/346
"
04a2ec11f8fa069ad57528c8b48573f310691f39,airslie/renalware-core,"Add street_3 and rename city to town in addresses

This helps us to be inline with NSS ODS and RDC address naming
"
e0f71354622153c7ae99f7d7687dfee16e0b932f,airslie/renalware-core,Move field attributes to I18N
a3dbdc05be07c8b7f44d7840450364511ece0a5a,airslie/renalware-core,"Merge pull request #520 from airslie/chores/use-messages-to-refresh-letters

Refactor Letters module to use wisper and prepare for archiving"
a035d3d1ab7afb1e3a5cb7e5ba2b6c448e8b5fdf,airslie/renalware-core,"Rename PatientEvent and PatientEventType
"
4a2e86311f204b28b3d6be7cea8833f5c98d7adf,airslie/renalware-core,"Split the recipient workup consent block in two
"
7fd05f46aa2b46ed51408e86c20b0a5a48c70ae9,alphagov/smart-answers,"Simplify flow for St Helena etc.
"
3316f630b31ded24a8983ce04764349567c70fa2,alphagov/smart-answers,"Simplify register-a-death embassy_result outcome

Since only N. Korea leads to this outcome, we can safely remove
code branches that were meant to deal with other countries and
replace embassy_high_commission_or_consulate variable with the
string 'British Embassy'.

Remove unused precalculated values from register-a-death embassy_result

Those precalculated blocks are not used in the views.
"
a90a906e8751d08ee8b70c0d55be62c4b5d74cb0,alphagov/smart-answers,"remove stuff which is no longer used
"
519cef934da6a4c991a8ad1bf26df18ce9f58d22,alphagov/smart-answers,"Phrases and code refactor
"
3b150246f85c52a70cc7945160b760558720eb35,alphagov/smart-answers,"Merge branch 'convert-register-a-birth-outcomes-to-use-erb-templates'

This follows the pattern of similar previous pull requests, particularly the
one for register-a-death.

I've followed the indentation rules [1] for the ERB template which we agreed
earlier today.

[1]: https://github.com/alphagov/smart-answers/pull/1766#issuecomment-117579072
"
c2fcfa42b527088bd0fef521523128605f7b3215,alphagov/smart-answers,"Make ActionView ERB template search path flow-specific

Previously the `ActionView::Base` constructor was being passed the root (`/`)
of the file system as the path to search for ERB templates. This was necessary,
because the `Tempfiles` created in the test are being created in `/tmp`.

This is obviously undesirable, since there'd be a remote theoretical
possibility that the presenter could be forced to load and evaluate a template
in a file not related to the flow or even outside the project root altogether.

This commit makes the search path much more specific by setting it to the
template directory specific to the flow. The tests still need to override this
template directory, but the code feels safer.
"
849ff4057ae2db762d93685f2a06396f2675da19,alphagov/smart-answers,"Merge branch 'deploy-to-heroku'

We hope that allowing us to deploy to Heroku will make it easier to make
changes to existing Smart Answers.

The current mechanism for making changes to Smart Answers isn't ideal: We have
to duplicate everything about the Smart Answer, make the changes and then
deploy to preview for someone to view and test. See ""Making bigger changes""[1]
for more information.

We think that using git branches, instead of manually branching in the
filesystem, will make our lives easier in this situation. Although we can
deploy branches to Preview, the auto-deployment functionality means that we
can't guarantee how long they'll live. Allowing us to deploy to Heroku should
solve this particular problem.

[1]: https://github.com/alphagov/smart-answers#making-bigger-changes
"
9fc1ebee9e877247ab8a167c46c6bda7c60948bc,alphagov/smart-answers,"Remove unnecessary items from what you need to take for marriage abroad in United Arab Emirates.
"
1d5d7426019ee474d4680a85895f50628b0b68ec,alphagov/smart-answers,"Merge pull request #2823 from alphagov/bump-slimmer-and-cleanup

Bump Slimmer to 10.0.0 and update code"
815dd16e6ab6adba9ea9394d05dadbee062992b3,alphagov/smart-answers,"Add MarriageAbroadCalculator#resident_of[=]

Set `MarriageAbroadCalculator#resident_of` in the next_node block of
`:legal_residency?`.

Update the flow and outcomes so that they use
`MarriageAbroadCalculator#resident_of` instead of relying on
`resident_of` being available on the state object.

A number of partials still rely on `resident_of` being made available
directly. I‚Äôm going to update them separately to keep this change as
small as possible.

The assertions removed from marriage_abroad_test.rb have been replaced
by the assertions in the marriage_abroad_flow_test.rb.
"
9d98a3741b42b51aa3eb56452c922a04613158ef,angular/upgrade-builds,"a69172f fix(compiler): fix bazel integration and make `perform-compile` more flexible
"
52c5317c192ea9c7c5524afd5fe5cc0df76a0df4,cutec-chris/promet-erp,"Timeregistering:move times out of Tab control Buttons
"
a06a6cd5170f4badfbe73234255fb497e0e2c94c,dsherret/ts-simple-ast,"chore: Internal refactor to remove insertIntoParent function.
"
4d7181cb67da020a0d3e32b56eeb2693a8986fc9,dsherret/ts-simple-ast,"chore: Make internal method name more specific.
"
384613a1699f61a20dcc3aa835cd09c93bfc036d,dsherret/ts-simple-ast,"feat: Improvements to CompilerNodeToWrappedType.

Also, using it more internally.
"
964571aa1c4c3a958c1002a11fb1fdfb44e16dd9,dsherret/ts-simple-ast,"refactor: Renamed QuoteType to QuoteKind.

BREAKING CHANGE: QuoteType is now QuoteKind.

This was done to make it consistent with NewLineKind.
"
6d34e1f9590d1898cddab66a79e3b5607fe7087e,dsherret/ts-simple-ast,"chore: Rename StructureToText to StructurePrinter.
"
c28263ce52e2048ff1cbcb443766786a24f91802,e-gun/HipparchiaServer,"a crazy number of changes to move away from indexedworklist and to just a searchlist in executesearch() and all that follows; much more streamlined and maintainable? also pulled the superfluous 'workid' argument from dblineintolineobject() [this function gets called many places...] both cleanups were overdue
"
4060e00a3c84f6c9e851dd51b70630773850e139,edenlabllc/ehealth.api,"Resend otp (#585)

* Added /declaration_requests/:id/actions/resend_otp endpoint

* Added tests

* Some tests refactoring
"
4e6a0a660966e421f06bd172568d732ed6658a83,edenlabllc/ehealth.api,"EHealth-757: case for NA Gandalf decision for creating and approving a declaration request (#768)

* [patch] EHealth-757: case for NA Gandalf decision for new declaration request

* [patch] EHealth-757: removed auth_method_default, approve and create method with NA rules

* [patch] EHealth-757: removed unused func
"
b7a2f869146b6a0e130624096a2fb63fabbcf4bf,edenlabllc/ehealth.api,"Schema improvements - added patterns, kved enums (#322)

* Schema improvements - added patterns, kved enums

* updated nex_json_schema with unicode support, improved json schema, updated fixtures

* json style

* removed duplicate type
"
508109c5155752d4c12802e497735637d4ea28d5,edenlabllc/ehealth.api,"Properly show validation error in decl. creation (#578)

* Fix for when sending OTP during decl. creation

* Improve error message

* Address validation conformity

* Do not ignore 'meta' from microservices

* Hide long line

* Rename test
"
21059357eca654d7b68d9699855ea8a220d988b8,github-for-unity/Unity,"Merge branch 'master' into enhancements/git-addall-refactor
"
6432b72640900aaae7c10586c692df8ea3e9695d,github-for-unity/Unity,"Merge branch 'master' into fixes/settings-view-code-cleanup

# Conflicts:
#	src/UnityExtension/Assets/Editor/GitHub.Unity/UI/SettingsView.cs
"
d7198ba65191381aa34bf533eadfd3de87284487,github-for-unity/Unity,"Add metrics tests and move some code around so it's simpler to mock
"
6a41d52bcadb959f0b7917ade821029503297c16,github-for-unity/Unity,"Ensure environment is never initialized off the main thread (#789)

There's a potential for Environment to be initialized off the main
thread in some cases (not sure exactly how, but #783 has an exception
about it so it can definitely happen), so make sure everything depends
on it being instantiated first.

Also clean up some confusing properties."
2b5a6c30c2a6ef6a9541fb8387b1758572d8b5f9,github-for-unity/Unity,"Repository & RepositoryManager Refactor
"
d20642b5127e26b85faba0541bc5e7a04c54004c,github-for-unity/Unity,"Merge branch 'fixes/refactor-window' into enhancements/initialize-view
"
e9e2aedcf77655e2e552c3efb9943bcb2e97c957,github-for-unity/Unity,"Merge pull request #153 from github-for-unity/fixes/instance-variable-collisions

Various renames for field name collisions and other minor common sense"
43b140de617acf36af4b72babec088d10dc0a3d0,github-for-unity/Unity,"More code cleanup
"
c977479220c4de516d1c265f843b125599f6f73c,github-for-unity/Unity,"Merge pull request #324 from github-for-unity/fixes/repository-refactor

Refactoring RepositoryManager and Repository"
609da8a312319de150b2bd5b8a9e358bded1b7b2,github-for-unity/Unity,"Merge pull request #236 from github-for-unity/enhancements/git-addall-refactor

Refactor for Git Add/AddAll functionality"
4f296f5cf372793700abdf4b14e79969fe0b3487,jam1garner/Smash-Forge,"make mesh3d class more generic
"
f4d851859266d7af512e93b2f016f5b75b7aa09e,jam1garner/Smash-Forge,"remove unneeded classes
"
b8f7a06988ad7909a95778fb1a2858c989711216,jam1garner/Smash-Forge,"simplify shader texture set
"
8637034eb27305572cee51e66f12d25550a4ea8f,jam1garner/Smash-Forge,"improved depth sorting
"
900f969d12f6c73dc4f6332fcf923b7dc20fe39d,jam1garner/Smash-Forge,"optimize shader setup time
"
b89a8c402745194dbea08c899b4e6ed8cf23df8d,jam1garner/Smash-Forge,"Started  work on shader code refactoring, light classes, NUT editor scaling, and light color editor
"
daff87853ebdee091dca7ebc2978a5e3fe6d2824,jam1garner/Smash-Forge,"Improvements to DAT, add DAT stage editing (no collisions yet), set up groundwork for collision editing
"
6d40ee97c7c449bf525de214469e4d20c6891675,jam1garner/Smash-Forge,"Alot more stuff

- Texture pattern animations working
- Injecting for switch/wii u buffer data. BOTW has annoying file limits so this is in place for now
- Start on dae importing
- Rework texture mapping so they update.
- Default texture maps properly if no textures are present
"
b3bb17d356076fbf85225af9c2c3f5ef0817ccd6,jam1garner/Smash-Forge,"Started work on area_light.xmb. Stage GUI

Moved Camera class, Debug output for area_light.xmb, work on string IDs for lights.
"
1555b83ffda5eb8786b8ed543d4fc1c765a569c9,jam1garner/Smash-Forge,"Merge pull request #231 from KillzXGaming/bfres_wip

Fix VBN from not animating and minor shader fixes and cleanup."
bbec362195aca67fefa6f403379aff802b06315f,jam1garner/Smash-Forge,"Merge pull request #151 from jam1garner/shader_rework

Shader rework"
f59b1a7767197aaed2f4e0b7fe9018033470c7e1,jam1garner/Smash-Forge,"More work on UI rework
"
2671d1d12d3e78b7655e3543ad9079096eb1a2eb,jam1garner/Smash-Forge,"LVD cleanup, add cliff data
"
9a55fe234fc179973e9d9875c26c79c245aaba38,lucas-clemente/quic-go,"Merge pull request #648 from lucas-clemente/internalize-utils

make utils an internal package"
f1ada87dcf407a5e54fdee80a4991e7040b905bb,lucas-clemente/quic-go,"make the protocol package internal
"
6f82391a2d9b5dc371110137861d6ee93c632223,lucas-clemente/quic-go,"Merge pull request #510 from lucas-clemente/remove-unused

Remove several unused fields and symbols"
906f80e8048639655ef991aaf5e2cba6142d3c29,lucas-clemente/quic-go,"Merge pull request #493 from lucas-clemente/raceconditions

improve the CryptoSetup interface"
474b036474ae404b2a1a1a87baa871738b29fc16,lucas-clemente/quic-go,"Merge pull request #858 from lucas-clemente/omit-instead-of-truncate-connection-id

rename connection ID truncation to connection ID omission"
3bb4662cfc81bf79d9a723a8408e7f4829cc15ea,lucas-clemente/quic-go,"Merge pull request #781 from lucas-clemente/refactor-inttests

Refactor inttests"
7d1f3c6282d668eb32aa30e4920f920e7e5e9125,lucas-clemente/quic-go,"Merge pull request #646 from lucas-clemente/simplify-session

Simplification and refactoring of the session"
1f067658fdc8fc6d061692b506d79827d30da71a,meetecho/janus-gateway,"Converted memory allocations to GLib ones, and fixed a couple of leaks
"
9a9a14efdc2ababaf97576262528a15171c89a44,meetecho/janus-gateway,"Fix redundant memory initializations

Substituted g_malloc0() with g_malloc() in several places, avoiding a
redundant or unneeded memory initialization. Some places already had
explicit initializations of all members of the allocated structure;
others did a memcpy() over all the allocated memory. Where structures
were being dinamically allocated, all missing member initializations
were explicitly added.

Removed several memset() calls to initialize memory which where already
initialized by g_malloc0().

Removed some explicit member initialization of structures allocated with
g_malloc0().
"
45e54e087a60daa88a0f1e0041fa7c386af9209d,meetecho/janus-gateway,"Aligned to master, and made sure session ref is always increased ASAP in plugins handle_message
"
c94052c281204124d1133f0e26042c35d9ba6ea7,meetecho/janus-gateway,"Several changes and fixes
Fixed configure.ac for default plugin dependencies;
Renamed configuration files as samples, and added a 'make configs' target to turn them into configuration files (and avoid overwriting them at each 'make install');
Replaced all sprintf with g_snprintf (issue #60)
Modified freeing of mcu participants/listeners to use a watchdog (attempt to fix issue #69)
Other fixes here and there
"
db1e9a1f5c0eccf3b37d55e09e0d6c9ef15078cf,meetecho/janus-gateway,"Made plugin response more concise (code suggested by @andreasg123)
"
6d1edc976dc9f68320b4456af2d73c86b96f44d2,meetecho/janus-gateway,"First take at refactoring Janus to use reference counters
"
61b70df8d85d89c971f518b17e8c8e9a03846e6b,mercadopago/px-android,"refactor de ids
"
9631ba155b3d457976259cdae4a1211f4d2ff1e9,mercadopago/px-android,"Merge pull request #67 from mercadopago/refactor-ids

Refactor de Ids"
d73c947f405e0387e6861377b0829dee815fa462,mercadopago/px-android,"removed unused imports
"
c835d3ccaf96cf4e109a7734753eb64328506f83,mercadopago/px-android,"Merge pull request #98 from mercadopago/tests-checkout-vault

Refactor mocked API, refactor HttpClientUtil"
c5e59f6b9fe16cf4c8bad8b6caaffc23ebdf8c98,mercadopago/px-android,"deleted old installments and issuers activity, changed new ones names, optimized imports
"
2dd1db03b97b566b5dfec5ede62bea4e70803a09,mercadopago/px-android,"[Fix] Lint Error: Unused Resources Refactored

"
b47b00c2c42e3802cf59f263a64dca018145a3ad,mobxjs/mobx-state-tree,"Renames!
"
b949fcf08650e17e55f7bd5c9f29c6af956c6ac5,mobxjs/mobx-state-tree,"Improved actions & references
"
f03c59145bb38eca5f68cd26ba968ed216c8f324,mobxjs/mobx-state-tree,"Improved, simplified `toString`
"
79f4c677a6e820ce0736c6f60b3e558dac69c964,opencobra/cobratoolbox,"Fixes and Code Restructure
"
9a100955dc0cf6151b1fd3825c9ff43d7f6549ca,quasarframework/quasar,"perf: Increase render speed by performing Vue optimizations ahead of time, only once
"
827b3e8e4701f0643df0ed3246f73ee1c5f9b37a,quasarframework/quasar,"perf: Slightly improve Vue render time; children normalization is now faster
"
46d9b8ccc3f36776d06b3fa08e4fee3d7741712a,raiguard/ModernGadgets,"Separate network meter globe color from accent color
"
723e198f7c78729c7b943c820be12b994154fb5d,scipilot/sysrev-assist,"+ Screening  article now fetches from Set rather than Project
~ Refactor CBH to promises in Article.index controller, trial ""break promise"" method using custom rejections, as catch catches both infrastructure errors and business logic validation conditions.
"
73f4396af7a6f52459dc22d07bb339dc82a5dce1,scipilot/sysrev-assist,"~ reworked the previous bugfix properly, removing the workaround,
  via planned refactor of assistant controller/service to use the new ""patch"" method.
  and reduced service interdependencies
"
ec0ff5904d82ea3f6ea1574b676669c2012e515a,scipilot/sysrev-assist,"~ todo v0.13 sweep
~ update unit tests for promise refactor
~ UI: moved set-close outside of opened set options, consistent with projects
"
ce1498875777bd1d143b9fac166e16445bd1c2a3,scipilot/sysrev-assist,"+ Implemented go next/prev-included buttons
~ Reworked screening jumps for more generic ""go"" url format (step 1, next-unrated, step2 next-included)
- Removed the pre-calc jump - see dev journal for why
+ Added key-shortcut for next-unrated (not next-included yet)
~ Reformatted the screening page with more nav buttons.
* better parameter validation and error handling in article screening
"
87755318b9b6633fff73bf58bd5bfb97e3aa57fa,severalnines/s9s-tools,"Cleanup.
"
c3153003fb0bfeef7ade4c060501c23f0556195d,stinsonga/emacs-mirror,"Add system-configuration-features, summarising some configure results

* configure.ac (ACL_SUMMARY): Rename from acl_summary, for consistency.
(EMACS_CONFIG_FEATURES): New define.

* src/emacs.c (syms_of_emacs) <system-configuration-features>: New var.

* lisp/mail/emacsbug.el (report-emacs-bug):
Include system-configuration-features.

* etc/NEWS: Mention this.
"
62c2e5ed3a9c991cef2594b44afc74893f6ce26b,stinsonga/emacs-mirror,"* alloc.c (free_save_value): New function.
(safe_alloca_unwind): Use it.
* lisp.h (free_save_value): New prototype.
* editfns.c (save_excursion_save): Use Lisp_Misc_Save_Value.
Add comment.
(save_excursion_restore): Adjust to match saved data structure.
Use free_save_value to offload some work from GC.  Drop obsolete
#if 0 code.
"
3ab6e069695d0dd5bb77133a89f858190ab8550a,stinsonga/emacs-mirror,"Return more descriptive data from Fgarbage_collect.
Suggested by Stefan Monnier in
http://lists.gnu.org/archive/html/emacs-devel/2012-07/msg00369.html.
* src/alloc.c (bounded_number): New function.
(total_buffers, total_vectors): New variable.
(total_string_size): Rename to total_string_bytes, adjust users.
(total_vector_size): Rename to total_vector_bytes, adjust users.
(sweep_vectors): Account total_vectors and total_vector_bytes.
(Fgarbage_collect): New return value.  Adjust documentation.
(gc_sweep): Account total_buffers.
(Fmemory_free, Fmemory_use_counts): Use bounded_number.
(VECTOR_SIZE): Remove.
* src/data.c (Qfloat, Qvector, Qsymbol, Qstring, Qcons): Make global.
(Qinterval, Qmisc): New symbols.
(syms_of_data): Initialize them.
* src/lisp.h (Qinterval, Qsymbol, Qstring, Qmisc, Qvector, Qfloat)
(Qcons, Qbuffer): New declarations.
* lisp/emacs-lisp/chart.el (chart-emacs-storage): Change to
reflect new format of data returned by Fgarbage_collect.
"
dcbf5805ac7ade7fc83f3d209e2d56f029918402,stinsonga/emacs-mirror,"Move functions from C to Lisp.  Make non-blocking method calls
the default.  Implement further D-Bus standard interfaces.

* configure.in (dbus_validate_bus_name, dbus_validate_path)
(dbus_validate_interface, dbus_validate_member): Check also for
these library functions

* dbusbind.c (DBUS_NUM_MESSAGE_TYPES): Declare.
(QCdbus_request_name_allow_replacement)
(QCdbus_request_name_replace_existing)
(QCdbus_request_name_do_not_queue)
(QCdbus_request_name_reply_primary_owner)
(QCdbus_request_name_reply_in_queue)
(QCdbus_request_name_reply_exists)
(QCdbus_request_name_reply_already_owner): Move to dbus.el.
(QCdbus_registered_serial, QCdbus_registered_method)
(QCdbus_registered_signal): New Lisp objects.
(XD_DEBUG_MESSAGE): Use sizeof.
(XD_MESSAGE_TYPE_TO_STRING, XD_OBJECT_TO_STRING)
(XD_DBUS_VALIDATE_BUS_ADDRESS, XD_DBUS_VALIDATE_OBJECT)
(XD_DBUS_VALIDATE_BUS_NAME, XD_DBUS_VALIDATE_PATH)
(XD_DBUS_VALIDATE_INTERFACE, XD_DBUS_VALIDATE_MEMBER): New macros.
(XD_CHECK_DBUS_SERIAL): Rename from CHECK_DBUS_SERIAL_GET_SERIAL.
(xd_signature, xd_append_arg): Allow float for integer types.
(xd_get_connection_references): New function.
(xd_get_connection_address): Rename from xd_initialize.  Return
cached address.
(xd_remove_watch): Do not unset $DBUS_SESSION_BUS_ADDRESS.
(xd_close_bus): Rename from Fdbus_close_bus.  Not needed on Lisp
level.
(Fdbus_init_bus): New optional arg PRIVATE.  Cache address.
Return number of recounts.
(Fdbus_get_unique_name): Make stronger parameter check.
(Fdbus_message_internal): New defun.
(Fdbus_call_method, Fdbus_call_method_asynchronously)
(Fdbus_method_return_internal, Fdbus_method_error_internal)
(Fdbus_send_signal, Fdbus_register_service)
(Fdbus_register_signal, Fdbus_register_method): Move to dbus.el.
(xd_read_message_1): Obey new structure of Vdbus_registered_objects.
(xd_read_queued_messages): Obey new structure of Vdbus_registered_buses.
(Vdbus_compiled_version, Vdbus_runtime_version)
(Vdbus_message_type_invalid, Vdbus_message_type_method_call)
(Vdbus_message_type_method_return, Vdbus_message_type_error)
(Vdbus_message_type_signal): New defvars.
(Vdbus_registered_buses, Vdbus_registered_objects_table): Adapt
docstring.

* net/dbus.el (dbus-message-internal): Declare function.  Remove
unneeded function declarations.
(defvar dbus-message-type-invalid, dbus-message-type-method-call)
(dbus-message-type-method-return, dbus-message-type-error)
(dbus-message-type-signal): Declare variables.  Remove local
definitions.
(dbus-interface-dbus, dbus-interface-peer)
(dbus-interface-introspectable, dbus-interface-properties)
(dbus-path-emacs, dbus-interface-emacs, dbus-return-values-table):
Adapt docstring.
(dbus-interface-objectmanager): New defconst.
(dbus-call-method, dbus-call-method-asynchronously)
(dbus-send-signal, dbus-method-return-internal)
(dbus-method-error-internal, dbus-register-service)
(dbus-register-signal, dbus-register-method): New defuns, moved
from dbusbind.c
(dbus-call-method-handler, dbus-setenv)
(dbus-get-all-managed-objects, dbus-managed-objects-handler): New
defuns.
(dbus-call-method-non-blocking): Make it an obsolete function.
(dbus-unregister-object, dbus-unregister-service)
(dbus-handle-event, dbus-register-property)
(dbus-property-handler): Obey the new structure of
`bus-registered-objects'.
(dbus-introspect): Use `dbus-call-method'.  Use a timeout.
(dbus-get-property, dbus-set-property, dbus-get-all-properties):
Use `dbus-call-method'.

* dbus.texi (Version): New node.
(Properties and Annotations): Mention the object manager
interface.  Describe dbus-get-all-managed-objects.
(Type Conversion): Floating point numbers are allowed, if an
anteger does not fit Emacs's integer range.
(Synchronous Methods): Remove obsolete dbus-call-method-non-blocking.
(Asynchronous Methods): Fix description of
dbus-call-method-asynchronously.
(Receiving Method Calls): Fix some minor errors.  Add
dbus-interface-emacs.
(Signals): Describe unicast signals and the new match rules.
(Alternative Buses): Add the PRIVATE optional argument to
dbus-init-bus.  Describe its new return value.  Add dbus-setenv.
"
f96fe57fb76df8e7282f266d42a0d471780e1d75,stinsonga/emacs-mirror,"New option to make 'C-x 4 a' use file-less ChangeLog buffers

* doc/emacs/maintaining.texi (Change Log Commands): Document
add-log-dont-create-changelog-file.

* etc/NEWS (Change Logs Mode): Mention
add-log-dont-create-changelog-file.

* lisp/vc/add-log.el (add-log-file-name): Add comment.
(add-log-dont-create-changelog-file): New variable.
(add-log--pseudo-changelog-buffer-name)
(add-log--changelog-buffer-p): New helpers.
(add-log-find-changelog-buffer): New function.
(add-log--pseudo-changelog-buffer-name): Respect
add-log-dont-create-changelog-file.

* lisp/vc/log-edit.el (log-edit-changelog-entries): Use
add-log-find-changelog-buffer.
"
9d7940260552d9ad5f331443aae200094ae2847c,stinsonga/emacs-mirror,"Remove duplicate Lisp definitions of define-minor-mode variables defined in C.

* lisp/abbrev.el (abbrev-mode):
* lisp/composite.el (auto-composition-mode):
* lisp/menu-bar.el (menu-bar-mode):
* lisp/simple.el (transient-mark-mode):
* lisp/tool-bar.el (tool-bar-mode): Adjust the define-minor-mode calls so
that they do not define the associated variables twice.
* lisp/simple.el (transient-mark-mode): Remove defvar.
* lisp/composite.el (auto-composition-mode): Make variable auto-buffer-local.
* lisp/cus-start.el: Add transient-mark-mode, menu-bar-mode, tool-bar-mode.
Handle multiple groups, and also custom-delayed-init-variables.
* lisp/emacs-lisp/easy-mmode.el (define-minor-mode): Doc fix.

* src/buffer.c (syms_of_buffer) <abbrev-mode, transient-mark-mode>:
* src/frame.c (syms_of_frame) <tool-bar-mode>: Move docs here from Lisp.
"
b09cca6ace3728ad8a93b3c0301520fa75e71586,stinsonga/emacs-mirror,"* src/xdisp.c (message2, message2_nolog): Remove functions.
(message3, message3_nolog): Extract nbytes and multibyteness directly
from the string.  Change all callers.
(message3_nolog): Don't set message_enable_multibyte since set_message
will reset it anyway.
(message1, message1_nolog): Use message3.
(vmessage): Use a stack allocated buffer rather than f->message_buf.
(with_echo_area_buffer): Remove last two arguments.  Update all callers.
(set_message): Drop all but the second arg, which has to be a string.
(set_message_1): Simplify now that we know that a1 is NULL and the
second arg is a string.
* src/frame.h (struct frame): Remove `message_buf' field.
Use glyphs_initialized_p instead.
(FRAME_MESSAGE_BUF): Remove macro.
* src/w16select.c (Fw16_set_clipboard_data): Prefer message3 to message2.
* src/lisp.h (message2, message2_nolog): Remove declarations.
(message3, message3_nolog): Update declarations.
* src/keyboard.c (read_char_minibuf_menu_text)
(read_char_minibuf_menu_width): Remove vars.
(read_char_minibuf_menu_prompt): Rewrite the menu's construction so as
to correctly handle multibyte strings.
* src/frame.c (delete_frame): Don't free message_buf any more.
* src/editfns.c (message_text, message_length): Remove vars.
(Fmessage_box): Don't copy the Lisp string's bytes any longer.
* src/fileio.c (auto_save_error): Use message3 instead of message2.
* src/dispnew.c (adjust_frame_message_buffer): Remove function.
"
954b166e9037de5fdd43b4fbe7b8c73a36ac402e,stinsonga/emacs-mirror,"Timestamp fixes for undo.

* doc/lispref/text.texi (Undo):
Document (t . 0) and (t . -1) in buffer-undo-list.
* etc/NEWS: Changes to visited-file-modtime, set-visited-file-modtime.
* lisp/files.el (clear-visited-file-modtime): Move here from fileio.c.
* src/atimer.c (schedule_atimer):
* src/fileio.c (Ffile_newer_than_file_p):
Minor cleanup: use EMACS_TIME_LT so that we can remove EMACS_TIME_GT.
* src/buffer.c (buffer-undo-list): Document (t . 0) and (t . -1).
* src/fileio.c (Fclear_visited_file_modtime): Move to lisp/files.el.
(syms_of_fileio): Remove Sclear_visited_file_name.
(Fvisited_file_modtime): Return -1, not (-1 ...), when the visited
file doesn't exist; this avoids an ambiguity with negative timestamps.
(Fset_visited_file_modtime): Accept -1 and 0 as time-list arg.
* src/systime.h (make_emacs_time, invalid_emacs_time):
Don't assume struct timespec layout; POSIX doesn't guarantee it.
(EMACS_TIME_NE, EMACS_TIME_GT, EMACS_TIME_GE): Remove.
* src/undo.c (record_first_change): Push (visited-file-modtime) onto
undo list rather than reimplementing it by hand, incorrectly.

Fixes: debbugs:14824
"
eb2deaffd17e760b3ec945c58d43080e8a44767a,stinsonga/emacs-mirror,"* lisp/replace.el (query-replace-read-from): Use `read-regexp' instead
of `read-from-minibuffer' when `regexp-flag' is non-nil.
(occur-read-primary-args): Use `read-regexp' instead of
`read-string'.
(multi-occur-in-matching-buffers): Use `read-regexp' instead of
`read-from-minibuffer'.
* lisp/isearch.el (isearch-occur): Use `read-regexp' instead of
`read-string'.
* lisp/dired.el (dired-read-regexp): Use `read-regexp' instead of
`read-from-minibuffer'.
* lisp/progmodes/grep.el (grep-read-regexp): Use `read-regexp' instead
of `read-string'.

Fixes: debbugs:7567
"
71781c31a4860e56434643296eaa303ca43386bb,stinsonga/emacs-mirror,"format-message now curves ` and '

That way, the caller doesn‚Äôt have to use curved quotes to
get diagnostics that match the text-quoting-style preferences.
Suggested by Dmitry Gutov in:
http://lists.gnu.org/archive/html/emacs-devel/2015-08/msg00893.html
This means we no longer need %qs, so remove that format.
While we‚Äôre at it, fix an unlikely bug and lessen the pressure
on the garbage collector by processing the string once rather
than twice in the usual case.
* doc/lispref/strings.texi (Formatting Strings):
* etc/NEWS: Document this.
* lisp/subr.el (format-message): Remove; now done in C.
* src/callint.c (Fcall_interactively):
* src/editfns.c (Fmessage, Fmessage_box):
Use Fformat_message instead of Finternal__text_restyle
followed by Fformat.
* src/doc.c (LSQM, RSQM): Remove; all uses changed to use
uLSQM and uRSQM.
(Fsubstitute_command_keys): Prefer AUTO_STRING to build_string
when pure ASCII now suffices.  Fix unlikely bug when parsing
unibyte string containing non-ASCII bytes.  Use inline code
rather than memcpy, as it‚Äôs a tiny number of bytes.
(Finternal__text_restyle): Remove; no longer used.
(syms_of_doc): Don‚Äôt declare it.
* src/editfns.c (Fformat): Rewrite in terms of new function
‚Äòstyled_format‚Äô.
(Fformat_message): New function, moved here from subr.el.
(styled_format): New function, with the old guts of Fformat,
except it now optionally transliterates quotes, and it transliterates
traditional grave accent and apostrophe quoting as well.
Remove recently-added q flag; no longer needed or used.
(syms_of_editfns): Define format-message.
* src/lisp.h (uLSQM0, uLSQM1, uLSQM2, uRSQM0, uRSQM1, uRSQM2):
Remove; no longer need to be global symbols.
* src/xdisp.c (vadd_to_log): Use Fformat_message, not Fformat,
so that callers can use `%s'.
* src/image.c (image_size_error, xbm_load_image, xbm_load)
(xpm_load, pbm_load, png_load_body, jpeg_load_body, tiff_load)
(gif_load, imagemagick_load_image, imagemagick_load, svg_load)
(svg_load_image, gs_load, x_kill_gs_process):
* src/lread.c (load_warn_old_style_backquotes):
* src/xfaces.c (load_pixmap):
* src/xselect.c (x_clipboard_manager_error_1):
Use `%s' instead of %qs in formats.
"
e4c8d29a32adbde811a109d5e19caa75fd9d042b,stinsonga/emacs-mirror,"Fix some bad prototypes and formatting after conversion from K&R declaration.

* lwlib/lwlib-Xaw.c: Include <ctype.h> for isdigit.
(fill_xft_data, set_text): Remove unused variable screen.
(draw_text): Cast bp to FcChar8*.
(find_xft_data): Return 0 if inst or xft_data is not set.
(wm_delete_window): Correct prototype.  Initialize widget to 0
and return if widget is still 0 after loop.

* lwlib/xlwmenu.c (XlwMenuSetValues, XlwMenuInitialize): Correct prototype.
(display_menu_item): Remove unused variable gi.
(make_windows_if_needed): Remove unused variable screen.
(XlwMenuRedisplay): Remove unused variable i.

* src/gtkutil.c (xg_get_pixbuf_from_pix_and_mask)
(xg_get_image_for_pixmap, create_dialog)
(xg_get_file_with_selection, xg_get_file_name, update_cl_data)
(menuitem_highlight_callback, make_menu_item)
(xg_create_one_menuitem, create_menus, xg_update_menu_item)
(xg_create_scroll_bar, xg_update_scrollbar_pos)
(xg_set_toolkit_scroll_bar_thumb, xg_tool_bar_button_cb)
(xg_tool_bar_proxy_help_callback, xg_tool_bar_detach_callback)
(xg_tool_bar_attach_callback, xg_tool_bar_help_callback)
(xg_tool_bar_item_expose_callback): Reformat prototype.
(xg_update_menubar): GList *group => GSList *group.
(xg_modify_menubar_widgets): Initialize witem to 0, check witem != 0
before use.
(update_frame_tool_bar): 4:th param to xg_get_image_for_pixmap changed
to GTK_IMAGE (wimage).

* src/xsettings.c (something_changedCB, parse_settings)
(apply_xft_settings): Reformat prototype.
(something_changedCB, init_gconf): Remove unused variable i.
(read_settings): Remove unused variable long_len.

* src/xsmfns.c (SSDATA): New macro.
(smc_save_yourself_CB, x_session_initialize): Use SSDATA for strings
passed to strlen/strcpy/strcat.
(create_client_leader_window): Surround with #ifndef USE_GTK.  Cast
7:th arg to XChangeProperty to (unsigned char *)
"
f1806c78f4da16f9f0123eddac86246ccfa960da,stinsonga/emacs-mirror,"* calendar/todos.el: Extend and improve item filtering and handling of
saved files of filtered items.
(todos-show-first): Add choices for diary and regexp items.
(todos-absolute-file-name): Handle file names for diary and regexp
items.
(todos-filter-items): New function abstracted from item filtering
commands, with handling of saved files of diary and regexp items.
(todos-filter-items-1): Rename from todos-filter-items.
(todos-filtered-buffer-name): Remove, since functionality is now
incorporated into new function todos-filter-items.
(todos-filtered-items-buffer, todos-top-priorities-buffer)
(todos-diary-items-buffer, todos-regexp-items-buffer):
Make defconsts instead of defcustoms.
(todos-find-item): Restrict calculation and comparison of
priorities to top priority items, in order to handle diary and
regexp items.
(todos-check-filtered-items-file): Rename from
todos-check-top-priorities and adjust message and callers.
(todos-filter-items-filename): Rename from
todos-top-priorities-filename, adjusting caller and extending to
files of filtered diary and regexp items.
(todos-save-filtered-items-buffer): Rename from
todos-save-top-priorities-buffer and adjust caller and uses.  Use
write-file instead of write-region and use existing file name if
previously saved.
(todos-show): Handle initially displaying saved file of filtered
diary or regexp items.
(todos-top-priorities, todos-top-priorities-multifile)
(todos-diary-items, todos-diary-items-multifile)
(todos-regexp-items, todos-regexp-items-multifile): Use new
function todos-filter-items.
(auto-mode-alist): Extend regexp for files assigned to
todos-filtered-items-mode to handle saved diary and regexp items.
"
14dd9101ec4838f75addf25bf6b06ef33f8a7e97,stinsonga/emacs-mirror,"Signal list cycles in ‚Äòlength‚Äô etc.

Use macros like FOR_EACH_TAIL instead of maybe_quit to
catch list cycles automatically instead of relying on the
user becoming impatient and typing C-g (Bug#25606).
* src/fns.c (Flength, Fmember, Fmemq, Fmemql, Fassq, Fassoc, Frassq)
(Frassoc, Fdelete, Freverse):
Use FOR_EACH_TAIL instead of maybe_quit.
(Fnreverse): Use simple EQ to check for circular list instead
of rarely_quit, as this suffices in this unusual case.
(Fplist_put, Flax_plist_put, Flax_plist_put):
Use FOR_EACH_TAIL_CONS instead of maybe_quit.
(internal_equal): Use FOR_EACH_TAIL_CONS to check lists, instead
of by-hand tail recursion that did not catch cycles.
* src/fns.c (Fsafe_length, Fplist_get):
* src/xdisp.c (display_mode_element):
Use FOR_EACH_TAIL_SAFE instead of by-hand Floyd‚Äôs algorithm.
* src/lisp.h (QUIT_COUNT_HEURISTIC): Remove; no longer needed.
(rarely_quit): Simply count toward USHRT_MAX + 1, since the
fancier versions are no longer needed.
(FOR_EACH_TAIL_CONS, FOR_EACH_TAIL_SAFE)
(FOR_EACH_TAIL_INTERNAL): New macros, the last with definiens
mostly taken from FOR_EACH_TAIL.
(FOR_EACH_TAIL): Rewrite in terms of FOR_EACH_TAIL_INTERNAL.
"
2170cb536dd1b4860618bf4ab7f1311c0d35e5a3,stinsonga/emacs-mirror,"Fix GDB/MI inline completion.

* progmodes/gdb-mi.el (gdb-input): Accept command and handler
function as separate arguments.
(gdb-init-1, gdb-non-stop-handler, gdb-check-target-async)
(gdb-tooltip-print-1, gud-watch, gdb-speedbar-update)
(gdb-var-list-children, gdb-var-set-format, gdb-var-delete-1)
(gdb-var-delete-children, gdb-edit-value, gdb-var-update)
(gdb-stopped, def-gdb-auto-update-trigger)
(gdb-place-breakpoints, gdb-select-thread, gdb-select-frame)
(gdb-get-changed-registers, gdb-get-main-selected-frame): Callers
changed.
(gud-gdbmi-completions): New function.
(gdb): Use it for generating the completion table.

* progmodes/gud.el (gud-gdb-fetch-lines-filter): Just use
gud-gdb-marker-filter without taking it as an argument.
(gud-gdb-run-command-fetch-lines): Caller changed.
(gud-gdb-completion-function): New variable.
(gud-gdb-completion-at-point): Use it.
(gud-gdb-completions-1): Split from gud-gdb-completions.
"
f52d2f9c301760f4554e2e800bf9908430b87bba,stinsonga/emacs-mirror,"* diff-mode.el (diff-file-junk-re): New const.
(diff-beginning-of-file-and-junk): Use it.
(diff-file-kill): Make sure we were really inside a file diff.

* diff-mode.el: Make it more robust in the presence of empty context
lines in unified hunks.
(diff-valid-unified-empty-line): New var.
(diff-unified->context, diff-sanity-check-hunk): Obey it.
(diff-end-of-hunk): Obey it.  New arg `donttrustheader'.
(diff-fixup-modifs, diff-post-command-hook): Use this new arg.
(diff-hunk-header-re-unified): New const.
(diff-font-lock-keywords, diff-hunk-header-re, diff-split-hunk)
(diff-fixup-modifs, diff-unified->context, diff-next-complex-hunk)
(diff-sanity-check-hunk): Use it.

* diff-mode.el (diff-beginning-of-file-and-junk): If we're on the
Index: line, don't search backward for the previous one.
"
5403b2d3aa512341234700e0a7e3db042fe229fd,stinsonga/emacs-mirror,"Remove DATA_SEG_BITS.

The DATA_SEG_BITS hack was needed for older 32 bit platforms.
As a result of this change, Emacs won't work on IRIX 6.5 with IRIX
cc, but that platform is so old that SGI itself stopped supporting
it in December 2013.  If you still need Emacs on IRIX, please
either compile with GCC and port the undumping code, or run
'./configure --with-wide-int'.
* configure.ac (DATA_SEG_BITS): Remove.  All uses removed.
* src/alloc.c (gdb_make_enums_visible): Update to match lisp.h.
* src/lisp.h (GCTYPEBITS): Move definition up, and switch to the
DEFINE_GDB_SYMBOL_START way to define it.
(NONPOINTER_BITS): New macro.
(EMACS_INT): Use it.
[!USE_LSB_TAG && !WIDE_EMACS_INT]: Fail, and suggest reporting
the problem and/or configuring --with-wide-int.
(USE_LSB_TAG): Simplify, based on above changes.
(gdb_DATA_SEG_BITS): Remove.  All uses removed.
* src/vm-limit.c (exceeds_lisp_ptr): Remove.  All uses removed.
"
6b0d58be9f6caa2fc4125ed98294e1937ee56d2a,stinsonga/emacs-mirror,"Minor improvements for hash function primitives

* src/fns.c (hashfn_eql): Define in terms of hashfn_equal and
hashfn_eq rather than reaching inside them.
(hashtest_eq, hashtest_eql, hashtest_equal):
Now constants with initializers.
(syms_of_fns): Omit no-longer-needed initialization.
* src/lisp.h (LISPSYM_INITIALLY): New macro.
(DEFINE_LISP_SYMBOL): Use it.
"
28c16c40704c05721077617faad01cf6526fbc0c,stinsonga/emacs-mirror,"* composite.c (fill_gstring_header): Pass positions as C integers
and move parameters checking to...
* composite.c (Fcomposition_get_gstring): ...this function.  Handle
case when buffer positions are in reversed order and avoid crash
(Bug#16739).  Adjust docstring.
* buffer.c (validate_region): Mention current buffer in error message.
"
69f2b755f44a5e447b3ad482ce0b409764fa10e6,stinsonga/emacs-mirror,"Allow use of run-time OS version checks on macOS (bug#27810)

* src/nsterm.h (NSWindowTabbingMode): Define in pre-Sierra macOS.
(MAC_OS_X_VERSION_10_6, MAC_OS_X_VERSION_10_7, MAC_OS_X_VERSION_10_8,
MAC_OS_X_VERSION_10_9, MAC_OS_X_VERSION_10_12, HAVE_NATIVE_FS): Remove
defines.
(NSWindowStyleMaskFullScreen,
NSWindowCollectionBehaviorFullScreenPrimary,
NSApplicationPresentationFullScreen,
NSApplicationPresentationAutoHideToolbar): Define in macOS 10.6.
* src/nsterm.m (colorForEmacsRed, colorUsingDefaultColorSpace,
check_native_fs, ns_read_socket, ns_select, runAlertPanel,
initFrameFromEmacs, windowDidMiniaturize, windowDidEnterFullScreen,
windowDidExitFullScreen, isFullscreen, updateCollectionBehavior,
toggleFullScreen, constrainFrameRect, scrollerWidth, syms_of_nsterm):
Allow use of run-time checks and replace version check macros.
* src/nsfns.m (ns_screen_name): Use run-time OS version checks.
* src/macfont.m (macfont_draw): Use run-time OS version checks.
* src/nsmenu.m (menuWillOpen): Use run-time OS version checks.

Co-authored-by: Charles A. Roelli <cbdb0cc7f3f5b4be81a75fa7242590e3e9882e1e@aurox.ch>
"
5df239fc6ffbbb16ea6e5546fbec1508bf2cb4b7,stinsonga/emacs-mirror,"Support display of line numbers natively

This merges branch 'line-numbers'.
* src/buffer.c (disable_line_numbers_overlay_at_eob): New
function.
* src/lisp.h (disable_line_numbers_overlay_at_eob): Add prototype.
* src/dispextern.h (struct it): New members pt_lnum, lnum,
lnum_bytepos, lnum_width, and lnum_pixel_width.
* src/indent.c (line_number_display_width): New function,
refactored from line-number width calculations in vertical-motion.
(Fvertical_motion): Call line_number_display_width when the width
of line-number display is needed.
(Fline_number_display_width): New defun.
(syms_of_indent): Defsubr it.
* src/indent.c (Fvertical_motion): Help C-n/C-p estimate correctly
the width used up by line numbers by looking near the window-start
point.  If window-start is outside of the accessible portion,
temporarily widen the buffer.
* src/term.c (produce_glyphs): Adjust tab stops for the horizontal
space taken by the line-number display.
* src/xdisp.c (display_count_lines_logically)
(display_count_lines_visually, maybe_produce_line_number)
(should_produce_line_number, row_text_area_empty): New functions.
(try_window_reusing_current_matrix): Don't use this method when
display-line-numbers is in effect.
(try_window_id, try_cursor_movement): Disable these optimizations
when the line-number-current-line face is different from
line-number face and for relative line numbers.
(try_window_id, redisplay_window, try_cursor_movement): For
visual line-number display, disable the same redisplay
optimizations as for relative.
(x_produce_glyphs): Adjust tab stops for the horizontal
space taken by the line-number display.
(hscroll_window_tree): Adjust hscroll calculations to line-number
display.
(DISP_INFINITY): Renamed from INFINITY to avoid clashes with
math.h; all users changed.
(set_cursor_from_row): Fix calculation of cursor X coordinate in
R2L rows with display-produced glyphs at the beginning.
(display_line): Use should_produce_line_number to determine
whether a line number should be produced for each glyph row, and
maybe_produce_line_number to produce line numbers.
Don't display line numbers in the minibuffer and in tooltip
frames.
Call row_text_area_empty to verify that a glyph
row's text area is devoid of any glyphs that came from a buffer or
a string.  This fixes a bug with empty-lines indication
disappearing when line numbers or line-prefix are displayed.
(syms_of_xdisp) <display-line-numbers, display-line-numbers-widen>
<display-line-number-width>: New buffer-local variables.
<display-line-numbers-current-absolute>: New variable.

* lisp/cus-start.el (standard): Provide customization forms for
display-line-numbers and its sub-features.
* lisp/faces.el (line-number, line-number-current-line): New faces.
* lisp/frame.el: Add display-line-numbers, display-line-numbers-widen,
display-line-numbers-current-absolute, and
display-line-number-width to the list of variables that should
trigger redisplay of the current buffer.
* lisp/menu-bar.el (menu-bar-showhide-menu): Add menu-bar item to
turn display-line-numbers on and off.
(toggle-display-line-numbers): New function.
* lisp/simple.el (last--line-number-width): New internal variable.
(line-move-visual): Use it to adjust temporary-goal-column when
line-number display changes its width.

* doc/emacs/basic.texi (Position Info): Add cross-reference to
""Display Custom"", for line-number display.
* doc/emacs/custom.texi (Init Rebinding):
* doc/emacs/modes.texi (Minor Modes): Remove references to
linum-mode.
* doc/emacs/display.texi (Display Custom): Describe the
line-number display.
* doc/lispref/display.texi (Size of Displayed Text): Document
line-number-display-width.

* etc/NEWS: Document display-line-numbers and its customizations.
"
e558436b778c0199caaff0ce40b9a279bacf640e,stinsonga/emacs-mirror,"* xfaces.c (PT_PER_INCH): Remove unused macro.
* termhooks.h (struct terminal): Remove set-but-unused
member fast_clear_end_of_line.
(FRAME_FAST_CLEAR_END_OF_LINE): Remove.
* nsterm.m (ns_create_terminal):
* term.c (init_tty):
* w32term.c (w32_create_terminal):
* xterm.c (x_create_terminal): Adjust users.
"
dcf8834baca7d4e1761483b9ea74206cadb8b114,stinsonga/emacs-mirror,"Reduce version number duplication in etc/refcards

* etc/refcards/emacsver.tex: New file.
* etc/refcards/calccard.tex, etc/refcards/cs-dired-ref.tex:
* etc/refcards/cs-refcard.tex, etc/refcards/cs-survival.tex:
* etc/refcards/de-refcard.tex, etc/refcards/dired-ref.tex:
* refcards/emacsver.tex, etc/refcards/fr-dired-ref.tex:
* etc/refcards/fr-refcard.tex, etc/refcards/fr-survival.tex:
* etc/refcards/orgcard.tex, etc/refcards/pl-refcard.tex:
* etc/refcards/pt-br-refcard.tex, etc/refcards/refcard.tex:
* etc/refcards/sk-dired-ref.tex, etc/refcards/sk-refcard.tex:
* etc/refcards/sk-survival.tex, etc/refcards/survival.tex:
* etc/refcards/vipcard.tex, etc/refcards/viperCard.tex: Include emacsver.tex.
* refcards/calccard.tex (\emacsversionnumber):
Rename to \versionemacs, same as all the other refcards.
* etc/refcards/Makefile (ENVADD): New variable.
(sk-dired-ref.pdf, sk-survival.pdf, pl-refcard.pdf)
(%.pdf, %,dvi, sk-dired-ref.dvi, sk-survival.dvi, pl-refcard.dvi):
Depend on emacsver.tex.  Add ""."" to TEXINPUTS for TeX commands.

* admin/admin.el (set-version): Set major version in
etc/refcards/ru-refcard.tex and etc/refcards/emacsver.tex.
(set-copyright): In etc/refcards, only change ru-refcard.tex
and emacsver.tex.

* admin.el (cusver-scan, cusver-check): Bind local variables.

* .bzrignore: Add etc/refcards TeX intermediate files.
"
6045c4fdb88ee6bd84afcaac4a0b7e8a96f23050,stinsonga/emacs-mirror,"Improve static checking when configured --with-ns.

See Samuel Bronson's remarks in
<http://lists.gnu.org/archive/html/emacs-devel/2012-07/msg00146.html>.
* configure.in (WARN_CFLAGS): Omit -Wunreachable-code, as it's
a no-op with recent GCC and harmful in earlier ones.
Omit -Wsync-nand, as it's irrelevant to Emacs and provokes a
warning when compiling with ObjC.  Always omit
-Wunsafe-loop-optimizations, as we don't mind when optimization is
being done correctly.

Fix some minor --with-ns problems found by static checking.
* src/frame.c (Ftool_bar_pixel_width) [!FRAME_TOOLBAR_WIDTH]:
(x_set_font) [!HAVE_X_WINDOWS]:
* src/image.c (xpm_load_image) [HAVE_NS]:
(x_to_xcolors) [!HAVE_X_WINDOWS && !HAVE_NTGUI]:
(x_disable_image) [!HAVE_NS && !HAVE_NTGUI]:
Remove unused local.
(Fx_parse_geometry) [HAVE_NS]: Don't return garbage.
(xpm_load_image) [HAVE_NS && !HAVE_XPM]: Remove unused label.
* src/image.c (x_create_bitmap_from_file) [HAVE_NS]:
(xpm_load_image, xpm_load) [HAVE_NS && !HAVE_XPM]:
* src/nsselect.m (symbol_to_nsstring, ns_string_to_pasteboard_internal):
* src/xfaces.c (Fx_load_color_file) [!HAVE_X_WINDOWS]:
Fix pointer signedness problem.
* src/xfaces.c (FRAME_X_FONT_TABLE):
* src/xterm.h (FRAME_X_FONT_TABLE): Remove unused, incompatible macros.
"
cf2f54c4e3d8adb26e3f4b8e9e51364165877444,stinsonga/emacs-mirror,"Include sources used to create macuvs.h.

* admin/unidata/IVD_Sequences.txt: New file.
* admin/unidata/Makefile.in (${top_srcdir}/src/macuvs.h): New rule.
(all): Build it.
(extraclean): Remove it.
* admin/unidata/README: Mention BidiMirroring.txt and IVD_Sequences.txt.
* admin/unidata/copyright.html: Update to current version from Unicode
Consortium.
* admin/unidata/uvs.el: Rename from admin/mac/uvs.el.
(uvs-print-table-ivd): Output a header in the form that
unidata-gen.el generates.
* lisp/international/README: Refer to the Unicode Terms of Use rather
than copying it bodily here, as that simplifies maintenance.
* src/Makefile.in ($(srcdir)/macuvs.h): New rule.
* src/macuvs.h: Use automatically-generated header.
"
890f78904a8eb787cf1559c6e9ddac395b49a09e,stinsonga/emacs-mirror,"Merge from CEDET upstream (8564).

* lisp/emacs-lisp:

	* emacs-lisp/eieio.el (eieio--defalias, eieio-hook)
	(eieio-error-unsupported-class-tags, eieio-skip-typecheck)
	(eieio-optimize-primary-methods-flag, eieio-initializing-object)
	(eieio-unbound, eieio-default-superclass)
	(eieio--define-field-accessors, method-static, method-before)
	(method-primary, method-after, method-num-lists)
	(method-generic-before, method-generic-primary)
	(method-generic-after, method-num-slots)
	(eieio-specialized-key-to-generic-key)
	(eieio--check-type, class-v, class-p)
	(eieio-class-name, define-obsolete-function-alias)
	(eieio-class-parents-fast, eieio-class-children-fast)
	(same-class-fast-p, class-constructor, generic-p)
	(generic-primary-only-p, generic-primary-only-one-p)
	(class-option-assoc, class-option, eieio-object-p)
	(class-abstract-p, class-method-invocation-order)
	(eieio-defclass-autoload-map, eieio-defclass-autoload)
	(eieio-class-un-autoload, eieio-defclass)
	(eieio-eval-default-p, eieio-perform-slot-validation-for-default)
	(eieio-add-new-slot, eieio-copy-parents-into-subclass)
	(eieio--defgeneric-init-form, eieio-defgeneric-form)
	(eieio-defgeneric-reset-generic-form)
	(eieio-defgeneric-form-primary-only)
	(eieio-defgeneric-reset-generic-form-primary-only)
	(eieio-defgeneric-form-primary-only-one)
	(eieio-defgeneric-reset-generic-form-primary-only-one)
	(eieio-unbind-method-implementations)
	(eieio--defmethod, eieio--typep)
	(eieio-perform-slot-validation, eieio-validate-slot-value)
	(eieio-validate-class-slot-value, eieio-barf-if-slot-unbound)
	(eieio-oref, eieio-oref-default, eieio-default-eval-maybe)
	(eieio-oset, eieio-oset-default, eieio-slot-originating-class-p)
	(eieio-slot-name-index, eieio-class-slot-name-index)
	(eieio-set-defaults, eieio-initarg-to-attribute)
	(eieio-attribute-to-initarg, eieio-c3-candidate)
	(eieio-c3-merge-lists, eieio-class-precedence-c3)
	(eieio-class-precedence-dfs, eieio-class-precedence-bfs)
	(eieio-class-precedence-list, eieio-generic-call-methodname)
	(eieio-generic-call-arglst, eieio-generic-call-key)
	(eieio-generic-call-next-method-list)
	(eieio-pre-method-execution-functions, eieio-generic-call)
	(eieio-generic-call-primary-only, eieiomt-method-list)
	(eieiomt-optimizing-obarray, eieiomt-install)
	(eieiomt-add, eieiomt-next, eieiomt-sym-optimize)
	(eieio-generic-form, eieio-defmethod, make-obsolete)
	(eieio-defgeneric, make-obsolete): Moved to eieio-core.el
	(defclass): Remove `eval-and-compile' from macro.
	(call-next-method, shared-initialize): Instead of using
	`scoped-class' variable, use new eieio--scoped-class, and
	eieio--with-scoped-class.
	(initialize-instance): Rename local variable 'scoped-class' to
	'this-class' to remove ambiguitity from old global.

	* emacs-lisp/eieio-core.el: New file.  Derived from key parts of
	eieio.el.
	(eieio--scoped-class-stack): New variable
	(eieio--scoped-class): New fcn
	(eieio--with-scoped-class): New scoping macro.
	(eieio-defclass): Use pushnew instead of add-to-list.
	(eieio-defgeneric-form-primary-only-one, eieio-oset-default)
	(eieio-slot-name-index, eieio-set-defaults, eieio-generic-call)
	(eieio-generic-call-primary-only, eieiomt-add): Instead of using
	`scoped-class' variable, use new eieio--scoped-class, and
	eieio--with-scoped-class.

	* emacs-lisp/eieio-base.el (cl-lib): Require during compile.

* admin/grammars:

	* grammars/srecode-template.wy (variable): Accept a single number
	as a variable value.  Allows the 'priority' to be set to a number.
	(wisent-srecode-template-lexer): Move number up so it can be
	created.

* etc/srecode:

	* srecode/c.srt (header_guard): Add :c parameter so it works
	standalone

* lisp/cedet:

	* semantic/edit.el (semantic-change-function): Use
	`save-match-data' around running hooks.

	* semantic/decorate/mode.el
	(semantic-decorate-style-predicate-default)
	(semantic-decorate-style-highlighter-default): New.
	(semantic-decoration-mode): Do not require
	`semantic/decorate/include' anymore.
	(semantic-toggle-decoration-style): Error if an unknown decoration
	style is toggled.
	(define-semantic-decoration-style): Add new :load option.  When
	:load is specified, add autoload tokens for the definition
	functions so that code is loaded when the mode is used.
	(semantic-decoration-on-includes): New autoload definition for
	highlighting includes.

	* semantic/bovine/c.el (semantic-lex-c-ifdef): Allow some misc
	characters to appear after the tested variable.

	* semantic/ede-grammar.el (project-compile-target): Calculate full
	src name via ede-expand-filename instead of the crutch of the
	current buffer.  Enables this target to compile in batch mode.

	* semantic/idle.el
	(semantic-idle-symbol-maybe-highlight): Wrap highlighting of
	remote symbol with `save-excursion'.
	(semantic-idle-scheduler-work-parse-neighboring-files): Instead of
	using directory-files on each found mode pattern, collect all the
	patterns for the current mode, and then for each file, see if it
	matches any of them.  If it does, parse the file.  (Patch
	inspiration from Tomasz Gajewski.)

	* semantic/ctxt.el (semantic-ctxt-end-of-symbol): New.
	(semantic-ctxt-current-symbol-default): New.

	* semantic/bovine/el.el (semantic-default-elisp-setup): Add
	autoload cookie.  Explain existence.
	(footer): Add local variable for loaddefs.

	* semantic/db.el (semanticdb-file-table-object): Add new filter,
	only checking for regular files too.

	* semantic/wisent/python.el
	(semantic-format-tag-abbreviate): New override.  Cuts back on size
	of code tags.

	* srecode/compile.el (srecode-compile-templates): Fix warning
	punctuation.  Remove status messages to clean up testing output

	* ede/base.el (ede-project-placeholder-cache-file): Update doc to
	mention 'nil' value.
	(ede-save-cache): Disable cache save if file is nil.

	* ede.el (ede-initialize-state-current-buffer): Flush deleted
	projects.
	(global-ede-mode): Always append our find-file-hook to the end.
	(ede-flush-deleted-projects): New command.

	* ede/cpp-root.el (ede-preprocessor-map): Protect against init
	problems.

	* ede/proj.el (ede-proj-target): Added a new ""custom"" option for
	custom symbols representing a compiler or linker instead of
	restricting things to only the predefined compilers and linkers.

	* semantic.el (semantic-mode-map): To avoid showing showing
	Development menu twice, only disable menu item if menu-bar is
	actually enabled, otherwise the popup 'global menu' might display
	a disabled Development menu.

	* semantic/complete.el
	(semantic-displayor-show-request): Fix which slot in obj is set to
	the max tags.
"
34b67b0f6be8b2a0f62e3691be03e1dc5564a772,stinsonga/emacs-mirror,"* minibuffer.el (minibuffer--double-dollars, read-file-name-internal):
New functions.
* fileio.c (read_file_name_cleanup, Fread_file_name_internal):
Move functions to minibuffer.el.
(syms_of_fileio): Don't declare them.
"
bfc30790686607fac1b7667d3a73d0f46b80e85f,stinsonga/emacs-mirror,"2014-04-17  Daniel Colascione  <dancol@dancol.org>

	Add support for bracketed paste mode; add infrastructure for
	managing terminal mode enabling and disabling automatically.

	* xt-mouse.el:
	(xterm-mouse-mode): Simplify.
	(xterm-mouse-tracking-enable-sequence)
	(xterm-mouse-tracking-disable-sequence): New constants.
	(turn-on-xterm-mouse-tracking-on-terminal)
	(turn-off-xterm-mouse-tracking-on-terminal): Use
	tty-mode-set-strings and tty-mode-reset-strings terminal
	parameters instead of random hooks.
	(turn-on-xterm-mouse-tracking)
	(turn-off-xterm-mouse-tracking): Delete.

	* term/xterm.el (xterm-extra-capabilities): Fix bitrotted comment.
	(xterm-paste-ending-sequence): New constant.
	(xterm-paste): New command used for bracketed paste support.

	(xterm-modify-other-keys-terminal-list): Delete obsolete variable.
	(terminal-init-xterm-bracketed-paste-mode): New function.
	(terminal-init-xterm): Call it.
	(terminal-init-xterm-modify-other-keys): Use tty-mode-set-strings
	and tty-mode-reset-strings instead of random hooks.
	(xterm-turn-on-modify-other-keys)
	(xterm-turn-off-modify-other-keys)
	(xterm-remove-modify-other-keys): Delete obsolete functions.

	* term/screen.el: Rewrite to just use the xterm code.  Add
	copyright notice.  Mention tmux.
"
f8c2cef5e60d31f48c44fc883bc72d2f6090834b,stinsonga/emacs-mirror,"Consult libpng-config more consistently.

This is mainly for simplicity, but it should also avoid
some future problems like the ones we recently had with NetBSD.
* configure.ac (LIBPNG): Configure after LIBZ.  Use libpng-config
for cflags, too.  Append -lz if we're not already doing that with
LIBZ.  Do not bother appending -lm, since we always append that.
Coalesce some duplicate code.
* src/Makefile.in (PNG_CFLAGS): New var.
(ALL_CFLAGS): Use it.
* src/image.c [HAVE_PNG]: Don't worry about <libpng/png.h>, as
CFLAGS now handles this.

Fixes: debbugs:17339
"
0bbb27fc3f52f87605cfadba62d52b72523b73a5,stinsonga/emacs-mirror,"Fix bug #17622 with crashes in mmap routines.

 src/buffer.c (init_buffer): Accept an argument 'initialized'.
 [USE_MMAP_FOR_BUFFERS]: If 'initialized' is non-zero, reset
 mmap_regions and mmap_fd, to avoid referencing stale data from the
 dump phase.  Add an assertion for buffer text of buffers created
 in temacs before this function is called.
 (mmap_regions_1, mmap_fd_1): Remove unused variables.
 src/lisp.h (init_buffer): Update prototype.
 src/emacs.c (main): Pass 'initialized' as the argument to init_buffer.
"
8ea90aa3525a93194e98b7e1b2ea77e96ca3dde6,stinsonga/emacs-mirror,"Use const char* instead of char*.
Reduce the number of warnings with -Wwrite-strings.
* src/xrdb.c (get_environ_db, get_system_name):
* src/unexelf.c (find_section):
* src/term.c (string_cost, string_cost_one_line, per_line_cost)
(get_named_tty, init_tty):
* src/sysdep.c (sys_subshell):
* src/sound.c (sound_perror, sound_warning, vox_open, vox_init)
(alsa_sound_perror, alsa_open, alsa_configure, alsa_init):
* src/search.c (Freplace_match):
* src/process.c (Fmake_network_process, send_process, init_process):
* src/lread.c (Fload, init_lread):
* src/keymap.c (Fdescribe_buffer_bindings, describe_map_tree):
* src/keyboard.c (parse_tool_bar_item, struct event_head):
* src/gtkutil.h (xg_get_font_name):
* src/gtkutil.c (get_dialog_title, create_dialog, xg_get_font_name)
(make_widget_for_menu_item, make_menu_item, create_menus)
(xg_make_tool_item):
* src/font.c (parse_matrix, font_parse_name):
* src/floatfns.c (rounding_driver, float_error_fn_name):
* src/filelock.c (get_boot_time_1, lock_file_1):
* src/fileio.c (barf_or_query_if_file_exists, check_writable):
* src/editfns.c (get_system_name, get_operating_system_release)
(Fencode_time, Fset_time_zone_rule):
* src/dispextern.h (string_cost, per_line_cost, get_named_tty, init_tty):
* src/buffer.c (defvar_per_buffer): Use const.
"
1781b9e935bea6cf2905e612da94b70028b25733,stinsonga/emacs-mirror,"Simplify export of symbols to GDB; fix related .gdbinit bugs.

* etc/emacs-buffer.gdb ($tagmask, $valmask): Remove.
(ygetptr): Adjust to recent changes in lisp.h and emacs.c,
by using VALMASK instead of $valmask, CHECK_LISP_OBJECT_TYPE
instead of gdb_use_union, and DATA_SEG_BITS instead of
gdb_data_seg_bits.  Also, use $ptr.i rather than $ptr.u.val.
* src/.gdbinit (xgetptr, xgetint, xgettype): Don't use ""set $bugfix =
$bugfix.i"", as this doesn't work (with GDB 7.4.1, anyway).
(xgetptr, xgetint, xgettype, xcoding, xcharset, xprintbytestr):
Adjust to changes in lisp.h and emacs.c, by using
CHECK_LISP_OBJECT_TYPE rather than gdb_use_struct, VALMASK instead
of $valmask, DATA_SEG_BITS instead of gdb_data_seg_bits,
INTTYPEBITS instead of gdb_gctypebits - 1, USE_LSB_TAG instead of
gdb_use_lsb, (1 << GCTYPEBITS) - 1 instead of $tagmask, VALBITS
instead of gdb_valbits.
(xvectype, xvector, xpr, xprintstr, xbacktrace): Similarly, use
PSEUDOVECTOR_FLAG instead of PVEC_FLAG, and ARRAY_MARK_FLAG
instead of gdb_array_mark_flag.
(xboolvector): Get size from $->size, not $->header.size.
Use BOOL_VECTOR_BITS_PER_CHAR rather than mystery constants.
(xreload, hook-run, hookpost-run): Remove.
* src/emacs.c: Include <verify.h>.
(gdb_use_lsb, gdb_use_struct, gdb_valbits, gdb_gctypebits)
(gdb_data_seg_bits, PVEC_FLAG, gdb_array_mark_flag, gdb_pvec_type):
Remove.
(gdb_CHECK_LISP_OBJECT_TYPE, gdb_DATA_SEG_BITS, gdb_GCTYPEBITS)
(gdb_USE_LSB_TAG): New enum constants.
(CHECK_LISP_OBJECT_TYPE, DATA_SEG_BITS, GCTYPEBITS, USE_LSB_TAG):
Also define these as enum constants, so they're visible to GDB.
(ARRAY_MARK_FLAG_VAL, PSEUDOVECTOR_FLAG_VAL, VALMASK_VAL): New macros.
(ARRAY_MARK_FLAG, PSEUDOVECTOR_FLAG, VALMASK): Also define these
as constants, so they're visible to GDB.
* src/lisp.h (VALBITS, INTTYPEBITS, FIXNUM_BITS, PSEUDOVECTOR_SIZE_BITS)
(PSEUDOVECTOR_SIZE_MASK, PVEC_TYPE_MASK, BOOL_VECTOR_BITS_PER_CHAR):
Now enum constants, not macros, so they're visible to GDB.
(CHECK_LISP_OBJECT_TYPE, DATA_SEG_BITS): Default to 0, as this is
more convenient now.  All uses changed.
(VALMASK) [USE_LSB_TAG]: Also define in this case.
* src/mem-limits.h (EXCEEDS_LISP_PTR): Adjust to DATA_SEG_BITS change.
"
389b76fa1b4e96b7da8896cea16d57403d76a947,stinsonga/emacs-mirror,"Merge changes made in Gnus trunk.

nnimap.el (nnimap-open-connection): Only send AUTHENTICATE PLAIN if LOGINDISABLED is set.
gnus.el (gnus-group-startup-message): Move point to the start of the buffer.
nndoc.el (nndoc-dissect-buffer): Reverse the order of the articles to reflect the order they're in in the digest.
gnus-sum.el (gnus-summary-select-article): Make `C-d' work reliably by checking whether the original article buffer is alive.
shr.el (shr-find-fill-point): Don't break lines between punctuation and non-punctuation (like after the apostrophe in ""'We"").
gnus-cite.el (gnus-article-fill-cited-article): Remove unused `force' parameter.
gnus-art.el (gnus-treatment-function-alist): Have gnus-treat-fill-long-lines point to gnus-article-fill-cited-long-lines.
gnus-art.el (gnus-treat-fill-long-lines): Change default to fill all text/plain sections.
gnus.el: Autoload gnus-article-fill-cited-long-lines.
gnus-art.el (gnus-mime-display-alternative): Actually pass the type on to `gnus-treat-article'.
gnus-sum.el (gnus-summary-show-article): Add `C-u C-u g' for showing the raw article, and change `C-u g' to show the article without doing treatments.
gnus.texi (Paging the Article): Document C-u g/C-u C-u g.
gnus-cite.el (gnus-article-foldable-buffer): Refactor out.
gnus-cite.el (gnus-article-foldable-buffer): Don't fold regions that have a ragged left edge.
gnus-cite.el (gnus-article-foldable-buffer): Skip past the prefix when determining raggedness.
gnus-srvr.el, nnir.el: Allow nnir searching for an entire server.
gnus-msg.el (gnus-configure-posting-styles): Permit the use of regular expression match and replace in posting styles.
gnus-art.el (gnus-treat-article): Only inhibit body washing, and leave the header washing to take place.
nnimap.el (nnimap-request-accept-article): Erase buffer before appending for easier debugging.
nnimap.el (nnimap-wait-for-connection): Take a regexp.
nnimap.el (nnimap-request-accept-article): Wait for the continuation line before sending anything unless we're streaming.
"
cc356a5d470c0b9b0cb7034c8b25a729a38d58a1,stinsonga/emacs-mirror,"Remove unnecessary use of minibuffer-completing-file-name.
* lisp/ffap.el: Remove old code for obsolete package.
(ffap-complete-as-file-p): Remove.
* lisp/mh-e/mh-utils.el (minibuffer-completing-file-name): Don't declare.
"
29abe551a0d9137718cd21732c9dc383d6493d71,stinsonga/emacs-mirror,"Port to C89.

* lib-src/ebrowse.c (USAGE): Remove macro with too-long string literal ...
(usage_message): ... and replace it with this new static constant
containing multiple literals.  All uses changed.
* lib-src/emacsclient.c (print_help_and_exit):
Rewrite to avoid string literals longer than the C89 limits.
(start_daemon_and_retry_set_socket):
Rewrite to avoid non-constant array initializer.
* lib-src/make-docfile.c (enum global_type): Omit trailing comma.
* src/bytecode.c (BYTE_CODE_THREADED): Do not define if __STRICT_ANSI__.
(B__dummy__): New dummy symbol, to pacify C89.
* src/dbusbind.c (XD_DEBUG_MESSAGE): Omit debugging on C89 hosts, since
they can't grok varargs macros.
* src/dispnew.c (add_window_display_history)
(add_frame_display_history):
* src/print.c (print_object):
* src/xdisp.c (debug_method_add):
Use %p printf format only for void pointers.
* src/emacs.c (usage_message): New constant, replacing ...
(USAGE1, USAGE2, USAGE3): Remove; they were too long for C89.
(main): Adjust to usage reorg.
* src/fns.c (syms_of_fns):
* src/profiler.c (syms_of_profiler):
Don't use non-constant struct initializers.
* src/gnutls.h (gnutls_initstage_t):
* src/lisp.h (enum Lisp_Fwd_Type):
* src/lread.c (lisp_file_lexically_bound_p):
* src/xsettings.c (anonymous enum):
Remove trailing comma.
* src/xsettings.c (apply_xft_settings): Use %f, not %lf; %lf is a C99ism.
* src/lisp.h (ENUM_BF): Use unsigned if pedantic.
(DEFUN_FUNCTION_INIT): New macro, that falls back on a cast if pre-C99.
(DEFUN): Use it.
* src/regex.c (const_re_char): New type, to pacify strict C89.
All uses of 'const re_char' replaced to use it.
* src/regex.h (_Restrict_): Rename from __restrict, to avoid clash
with glibc when strict C89.  This change is imported from gnulib.
All uses changed.
(_Restrict_arr_): Rename from __restrict_arr, similarly.
* src/sysdep.c (time_from_jiffies) [!HAVE_LONG_LONG_INT]:
Omit GNU_LINUX implementation, since it requires long long.
* src/xterm.c (x_draw_underwave):
Do not assume the traditional order of struct's members.
(x_term_init): Rewrite to avoid the need for non-constant structure
initializers.
"
fce31d69dc4d6ff8810d499deebe568437fbf38b,stinsonga/emacs-mirror,"* alloc.c: Use bool for booleans.

(gc_in_progress, abort_on_gc)
(setjmp_tested_p) [!GC_SAVE_REGISTERS_ON_STACK && !GC_SETJMP_WORKS]:
(dont_register_blocks) [GC_MALLOC_CHECK]:
(suppress_checking) [ENABLE_CHECKING]: Now bool, not int.
(check_string_bytes, make_specified_string, memory_full)
(live_string_p, live_cons_p, live_symbol_p, live_float_p)
(live_misc_p, live_vector_p, live_buffer_p, mark_maybe_object)
(mark_stack, valid_pointer_p, make_pure_string)
(Fgarbage_collect, survives_gc_p, gc_sweep):
Use bool for booleans, instead of int.
(test_setjmp) [!GC_SAVE_REGISTERS_ON_STACK && !GC_SETJMP_WORKS]:
Remove unused local.
* alloc.c (PURE_POINTER_P):
* lisp.h (STRING_MULTIBYTE): Document that it returns a boolean.
* editfns.c (Fformat):
* fileio.c (Fexpand_file_name, Fsubstitute_in_file_name)
(Fdo_auto_save):
* fns.c (sweep_weak_table):
* lisp.h (suppress_checking, push_message, survives_gc_p)
(make_pure_string, gc_in_progress, abort_on_gc):
* lread.c (readchar, read1):
* print.c (Fprin1_to_string):
* xdisp.c (push_message):
Use bool for booleans affected directly or indirectly by
alloc.c's changes.
"
2c243704f9c27481c36c170fafa29c2957df2637,stinsonga/emacs-mirror,"Improvements to tango themes, including some faces from Jan Moringen.

* themes/tango-theme.el, themes/tango-dark-theme.el: Let-bind
tango palette colors.  Only define faces for color displays.
Customize the ansi-color-names-vector variable.  Add Ediff,
Flyspell, and Semantic faces as suggested by Jan Moringen.
"
ed797193995dc845b70a32c82eee63a39c40011f,stinsonga/emacs-mirror,"Merge changes made in Gnus trunk.

nnir.el: Batch header retrieval.
proto-stream.el: New library to provide protocol-specific TLS/STARTTLS connections for IMAP, NNTP, SMTP, POP3 and similar protocols.
nnimap.el (nnimap-open-connection): Use it.
proto-stream.el (open-proto-stream): Complete the documentation.
nnimap.el (nnimap-open-connection): Check for ""OK"" from the greeting.
nntp.el: Use proto-streams for the relevant connections types.
nntp.el (nntp-open-connection): Switch on STARTTLS on supported servers.
proto-stream.el (open-proto-stream): Add a way to specify what the end of a command is.
proto-stream.el (proto-stream-open-tls): Delete output from openssl if we're using tls.el.
proto-stream.el (proto-stream-open-network): If we don't have gnutls-cli or gnutls built in, then don't try to establish a STARTTLS connection.
color.el (color-lab->srgb): Fix function call name.
proto-stream.el: Fix the syntax in the comment.
nntp.el (nntp-open-connection): Fix the STARTTLS command syntax.
proto-stream.el (proto-stream-open-starttls): Actually implement the starttls.el STARTTLS.
proto-stream.el (proto-stream-always-use-starttls): New variable.
proto-stream.el (proto-stream-open-starttls): De-duplicate the starttls code.
proto-stream.el (proto-stream-open-starttls): Folded back into the main function.
proto-stream.el (proto-stream-command): Refactor out.
nnimap.el (nnimap-stream): Change default to `undecided'.
nnimap.el (nnimap-open-connection): If `nnimap-stream' is `undecided', try ssl first, and then network.
nnimap.el (nnimap-open-connection-1): Respect nnimap-server-port.
nnimap.el (nnimap-open-connection): Be more backwards-compatible.
proto-stream.el (open-protocol-stream): Renamed from open-proto-stream.
proto-stream.el (proto-stream-open-network): When doing opportunistic TLS upgrades we don't really care about the identity of the peer.
gnus.texi (Customizing the IMAP Connection): Note the new defaults.
gnus.texi (Direct Functions): Note the STARTTLS upgrade.
proto-stream.el (proto-stream-open-network): Force starttls.el to use gnutls-cli, since that what we've checked for.
proto-stream.el (proto-stream-always-use-starttls): Only default to t if open-gnutls-stream exists.
proto-stream.el (proto-stream-open-network): If STARTTLS failed, then just open a normal connection.
proto-stream.el (proto-stream-open-network): Wait until the greeting before doing STARTTLS.
nnimap.el (nnimap-open-connection-1): Always upgrade to STARTTLS (for backwards compatibility).
nnimap.el (nnimap-open-connection-1): Really respect nnimap-server-port.
nntp.el (nntp-open-connection): Provide a :success condition.
nnimap.el (nnimap-open-connection-1): Ditto.
proto-stream.el (proto-stream-open-network): See what the response to the STARTTLS command is.
proto-stream.el (proto-stream-open-network): Add some comments.
proto-stream.el: Fix example.
proto-stream.el (open-protocol-stream): Actually mention the STARTTLS upgrade.
nnir.el (nnir-get-active): Skip nnir-ignored-newsgroups when searching.
nnir.el (nnir-ignore-newsgroups): Fix default value.
nnir.el (nnir-run-gmane): Use mm-delete-duplicates instead of delete-dups that is not available in XEmacs 21.4.
mm-util.el (mm-delete-duplicates): Add comment.
gnus-sum.el (gnus-summary-delete-article): If delete fails don't change the registry.
nnimap.el (nnimap-open-connection-1): w32 open-network-stream doesn't seem to accept strings-with-numbers as port numbers.
color.el: fix docstring to use English rather than math notation for intervals.
shr.el (shr-find-fill-point): Don't break before apostrophes.
nnir.el (nnir-request-move-article): Bail out if no move support in group.
color.el (color-rgb->hsv): Fix docstring.
nnir.el (nnir-get-active): Improve active list retrieval.
shr.el (shr-find-fill-point): Work better for kinsoku chars and apostrophes.
gnus-gravatar.el (gnus-gravatar-size): Set gnus-gravatar-size to nil.
nnimap.el (nnimap-open-connection-1): Use gnus-string-match-p.
nnimap.el (nnimap-open-connection-1): Fix PREAUTH.
proto-stream.el (open-protocol-stream): All starttls connections are handled by the network handler.
gnus-gravatar.el (gnus-gravatar-insert): Delete unnecessary binding to t of inhibit-read-only since it is inside gnus-with-article-headers.
gnus-gravatar.el (gnus-gravatar-transform-address): Use mail-extract-address-components that supports non-ASCII names rather than mail-header-parse-addresses.
shr.el (shr-find-fill-point): Don't break line between kinsoku-bol characters.
gnus-gravatar.el (gnus-gravatar-insert): Allow LWSP in the middle of names.
nnmaildir.el (nnmaildir-request-set-mark): Add article to add-mark funcall.
gnus-msg.el: Remove nastygram thing.
message.el (message-from-style): Fix comment.
message.el (message-user-organization): Do not use gnus-local-organization.
gnus.el: Remove gnus-local-organization.
rtree.el: New file to handle range trees.
nnir.el, gnus-sum.el: Redo the way nnir handles registry updates.
rtree.el (rtree-extract): Simplify.
gnus-win.el (gnus-configure-windows): Remove Gnus 3.x setting support.
gnus-msg.el: Mark gnus-outgoing-message-group as obsolete.
gnus.texi (Archived Messages): Remove gnus-outgoing-message-group.
gnus-win.el (gnus-configure-frame): Remove old compatibility code.
rtree.el (rtree-memq): Rewrite it as a non-recursive function.
rtree.el (rtree-add, rtree-delq, rtree-length): Implement.
rtree.el (rtree-add): Make code slightly faster.
nnir.el: Allow modified summary-line-format in nnir summary buffers.
"
5af73b0fe8975eeb47fb270819b4143c18d71caa,stinsonga/emacs-mirror,"src/*.c: Silence a few warnings about unused vars and functions.

* src/image.c (x_bitmap_height, x_bitmap_width) [HAVE_X_WINDOWS]:
* src/sysdep.c (reset_sigio) [!DOS_NT]: Declare conditionally.

* src/keyboard.c (read_decoded_event_from_main_queue): #ifdef out
  variables on Windows.

* src/w32.c (unsetenv): Remove unused var `retval'.
  (emacs_gnutls_pull): Remove unused vars `fdset' and `timeout'.

* src/w32fns.c (Ffile_system_info): Use parenthesis in and/or expression.

* src/w32notify.c (watch_worker): Remove unnecesary var sleep_result.
  (start_watching): Remove unused var `thr'.

* src/w32proc.c (sys_spawnve): Comment out unused vars `first', `last'.
  (find_child_console): Remove unnecesary var `thread_id'.

* src/w32term.c (w32_read_socket): Comment out unused vars `row', `columns'.
  (x_focus_frame): #ifdef 0 unused variable `dpyinfo'.
"
ae9e757af16bd39c21496430f66bcca2a47b4835,stinsonga/emacs-mirror,"Check for pthread and use it if found.

* configure.in (HAVE_PTHREAD): Add check for -lpthread.
(HAVE_GTK_AND_PTHREAD): Remove.

* src/Makefile.in (LIB_PTHREAD): New variable.
(LIBES): Add LIB_PTHREAD (Bug#9216).

* src/alloc.c, src/emacs.c, src/gmalloc.c, src/gtkutil.c, src/keyboard.c, src/syssignal.h:
Rename HAVE_GTK_AND_PTHREAD to HAVE_PTHREAD (Bug#9216).
"
d009ae66b405e38113c1ed29ff50832e5eec2b29,stinsonga/emacs-mirror,"Unify mouse highlight code of MSDOS and GUI sessions.

 xdisp.c (coords_in_mouse_face_p): Move prototype out of the
 HAVE_WINDOW_SYSTEM conditional.
 (x_y_to_hpos_vpos, frame_to_window_pixel_xy): Move out of the
 HAVE_WINDOW_SYSTEM block.
 (try_window_id) [HAVE_GPM || MSDOS]: Call
 x_clear_window_mouse_face.
 (draw_row_with_mouse_face): Implementation for HAVE_WINDOW_SYSTEM
 systems.
 (show_mouse_face): Call it, instead of calling draw_glyphs directly.
 (show_mouse_face, clear_mouse_face, coords_in_mouse_face_p)
 (cursor_in_mouse_face_p, rows_from_pos_range)
 (mouse_face_from_buffer_pos, mouse_face_from_string_pos)
 (note_mode_line_or_margin_highlight, note_mouse_highlight)
 (x_clear_window_mouse_face, cancel_mouse_face): Move out of the
 HAVE_WINDOW_SYSTEM block.  Ifdef away window-system specific
 fragments.
 (note_mouse_highlight): Call popup_activated for MSDOS as well.
 Clear mouse highlight if pointer is over glyphs whose OBJECT is an
 integer.
 (mouse_face_from_buffer_pos): Add parentheses around && within ||.
 xmenu.c (popup_activated): Don't define on MSDOS.
 dispnew.c (mirror_make_current): Set Y coordinate of the
 mode-line and header-line rows.
 termchar.h (struct tty_display_info): Define mouse_face_*
 members not only for MSDOS.  Delete stray whitespace.
 <mouse_face_beg_x, mouse_face_beg_y, mouse_face_overlay>: New
 struct members.
 dispextern.h (DPYINFO_DEFINED) [HAVE_X_WINDOWS]: Define.
 (DPYINFO_DEFINED) [HAVE_NTGUI]: Define.
 (DPYINFO_DEFINED) [HAVE_NS]: Define.
 (Display_Info) [!DPYINFO_DEFINED]: Define here.
 (FRAME_X_DISPLAY_INFO) [HAVE_GPM]: Define.
 (FRAME_X_DISPLAY_INFO): Define to NULL if not defined.
 (frame_to_window_pixel_xy, note_mouse_highlight)
 (x_clear_window_mouse_face, cancel_mouse_face, clear_mouse_face)
 (show_mouse_face, cursor_in_mouse_face_p): Move prototypes out of
 HAVE_WINDOW_SYSTEM conditional.
 (draw_row_with_mouse_face): Declare prototype.
 msdos.h (Display_Info): Don't define here.
 msdos.c (show_mouse_face, clear_mouse_face)
 (fast_find_position, IT_note_mode_line_highlight)
 (IT_note_mouse_highlight): Functions deleted.
 (IT_frame_up_to_date, dos_rawgetc): Call note_mouse_highlight
 instead of IT_note_mouse_highlight.
 (draw_row_with_mouse_face, popup_activated): New functions.
"
2cc2116757629868401bdb2073ff44ce32c3d008,stinsonga/emacs-mirror,"* bidi.c: Use bool for boolean.

This is a bit more readable, and makes the text segment of bidi.o
0.4% smaller on my platform (GCC 4.7.1 x86-64, Fedora 15).
Presumably it's faster too.
(bidi_initialized, bidi_ignore_explicit_marks_for_paragraph_level):
Now bool.
(bidi_cache_find_level_change, bidi_cache_iterator_state)
(bidi_unshelve_cache, bidi_init_it, bidi_count_bytes)
(bidi_char_at_pos, bidi_fetch_char, bidi_paragraph_init)
(bidi_explicit_dir_char, bidi_level_of_next_char)
(bidi_find_other_level_edge, bidi_move_to_visually_next):
Use bool for booleans, instead of int.
* dispextern.h (bidi_init_it, bidi_paragraph_init)
(bidi_unshelve_cache): Adjust decls to match code.
"
ba03d0d932888f687ae9c9fb12e20908c6b0620f,stinsonga/emacs-mirror,"Modularize add-log-current-defun.
Suggested by Jari Aalto.

* lisp/emacs-lisp/lisp-mode.el (lisp-current-defun-name): New.
(lisp-mode-variables): Use it.

* lisp/progmodes/cc-mode.el (c-common-init):
* lisp/progmodes/cperl-mode.el (cperl-mode): Set a value for
add-log-current-defun-function.

* lisp/progmodes/m4-mode.el (m4-current-defun-name): New function.
(m4-mode): Use it.

* lisp/progmodes/perl-mode.el (perl-current-defun-name): New.
(perl-mode): Use it.

* lisp/progmodes/scheme.el (scheme-mode-variables, dsssl-mode): Use
lisp-current-defun-name.

* lisp/textmodes/tex-mode.el (tex-current-defun-name): New.
(tex-common-initialization): Use it.

* lisp/textmodes/texinfo.el (texinfo-current-defun-name): New.
(texinfo-mode): Use it.

* lisp/vc/add-log.el (add-log-current-defun-function): Doc fix.
(add-log-current-defun): Move mode-specific code to other files.
(add-log-lisp-like-modes, add-log-c-like-modes)
(add-log-tex-like-modes): Variables deleted.

Fixes: debbugs:2224
"
1337353856dbf0dcfe8378ccf96f26442eee73e9,stinsonga/emacs-mirror,"lisp/generic-x.el: Make javascript-generic-mode an obsolete alias of js-mode.
"
87e67904f15fda542426c9159c95a19142aecbad,stinsonga/emacs-mirror,"Started work on string reordering.  Just compiled, not yet tested.

 src/bidi.c (bidi_paragraph_info): Delete unused struct.
 (bidi_cache_idx, bidi_cache_last_idx): Declare EMACS_INT.
 (bidi_cache_start): New variable.
 (bidi_cache_reset): Reset bidi_cache_idx to bidi_cache_start, not
 to zero.
 (bidi_cache_fetch_state, bidi_cache_search)
 (bidi_cache_find_level_change, bidi_cache_iterator_state)
 (bidi_cache_find, bidi_peek_at_next_level)
 (bidi_level_of_next_char, bidi_find_other_level_edge)
 (bidi_move_to_visually_next): Compare cache index with
 bidi_cache_start rather than with zero.
 (bidi_fetch_char): Accept new argument STRING; all callers
 changed.  Support iteration over a string.
 (bidi_paragraph_init, bidi_resolve_explicit_1)
 (bidi_resolve_explicit, bidi_resolve_weak)
 (bidi_level_of_next_char, bidi_move_to_visually_next): Support
 iteration over a string.
 (bidi_set_sor_type, bidi_resolve_explicit_1)
 (bidi_resolve_explicit, bidi_type_of_next_char): ignore_bn_limit
 can now be zero (for strings); special values 0 and -1 were
 changed to -1 and -2, respectively.
 (bidi_char_at_pos): New function.
 (bidi_paragraph_init, bidi_resolve_explicit, bidi_resolve_weak):
 Call it instead of FETCH_MULTIBYTE_CHAR.
 (bidi_move_to_visually_next): Abort if charpos or bytepos were not
 initialized to valid values.
 (bidi_init_it): Don't initialize charpos and bytepos with invalid
 values.
 src/xdisp.c (compute_display_string_pos)
 (compute_display_string_end): Accept additional argument STRING.
 (init_iterator, reseat_1): Initialize bidi_it->string.s to NULL.
 (reseat_to_string): Initialize bidi_it->string.s and
 bidi_it->string.schars.
 src/dispextern.h (struct bidi_string_data): New structure.
 (struct bidi_it): New member `string'.  Make flag members be 1-bit
 fields, and put them last in the struct.
 (compute_display_string_pos, compute_display_string_end): Update
 prototypes.
"
1087305574fd61256d66eb0c995f8bb74bd91afe,stinsonga/emacs-mirror,"Use INT_ADD_WRAPV etc. to check integer overflow

* src/alloc.c (xnmalloc, xnrealloc, xpalloc, Fmake_string):
* src/buffer.c (record_overlay_string, overlay_strings):
* src/casefiddle.c (casify_object):
* src/ccl.c (Fccl_execute_on_string):
* src/character.c (char_width, c_string_width, lisp_string_width)
(count_size_as_multibyte, string_escape_byte8):
* src/coding.c (coding_alloc_by_realloc, produce_chars):
* src/data.c (arith_driver):
* src/dispnew.c (realloc_glyph_pool, init_display):
* src/editfns.c (styled_format):
* src/fns.c (Ffillarray):
* src/ftfont.c (ftfont_shape_by_flt):
* src/gnutls.c (gnutls_hex_string):
* src/gtkutil.c (get_utf8_string):
* src/image.c (x_to_xcolors, x_detect_edges, png_load_body):
* src/keymap.c (Fkey_description):
* src/lisp.h (SAFE_ALLOCA_LISP):
* src/term.c (encode_terminal_code):
* src/tparam.c (tparam1):
* src/xselect.c (x_property_data_to_lisp):
* src/xsmfns.c (smc_save_yourself_CB):
* src/xterm.c (x_term_init):
When checking for integer overflow, prefer INT_MULTIPLY_WRAPV to
more-complicated code involving division and/or
INT_MULTIPLY_OVERFLOW, and similarly for INT_ADD_WRAPV and
subtraction and/or INT_ADD_OVERFLOW.
* src/casefiddle.c (casify_object): Simplify multibyte size check.
* src/character.c: Remove some obsolete ‚Äò#ifdef emacs‚Äôs.
* src/data.c (arith_driver): Also check for division overflow,
as that‚Äôs now possible given that the accumulator can now contain
any Emacs integer.
* src/lisp.h (lisp_word_count): Remove; no longer used.
"
1396ac86dea5fccab800e4b25fdb5319381891eb,stinsonga/emacs-mirror,"Fix obscure porting bug with varargs functions.

The code assumed that int is treated like ptrdiff_t in a vararg
function, which is not a portable assumption.  There was a similar
-- though these days less likely -- porting problem with various
assumptions that pointers of different types all smell the same as
far as vararg functions is conserved.  To make this problem less
likely in the future, redo the API to use varargs functions.
* alloc.c (make_save_value): Remove this vararg function.
All uses changed to ...
(make_save_int_int_int, make_save_obj_obj_obj_obj)
(make_save_ptr_int, make_save_funcptr_ptr_obj, make_save_memory):
New functions.
(make_save_ptr): Rename from make_save_pointer, for consistency with
the above.  Define only on platforms that need it.  All uses changed.
"
b029599f767406002ea892d0bd40420de0a954f6,stinsonga/emacs-mirror,"Clean up gc_sweep
"
23ba2705e22b89154ef7cbb0595419732080b94c,stinsonga/emacs-mirror,"Make called-interactively-p work for edebug or advised code.
* lisp/subr.el (called-interactively-p-functions): New var.
(internal--called-interactively-p--get-frame): New macro.
(called-interactively-p, interactive-p): Rewrite in Lisp.
* lisp/emacs-lisp/nadvice.el (advice--called-interactively-skip): New fun.
(called-interactively-p-functions): Use it.
* lisp/emacs-lisp/edebug.el (edebug--called-interactively-skip): New fun.
(called-interactively-p-functions): Use it.
* lisp/allout.el (allout-called-interactively-p): Don't assume
called-interactively-p is a subr.
* src/eval.c (Finteractive_p, Fcalled_interactively_p, interactive_p): Remove.
(syms_of_eval): Remove corresponding defsubr.
* src/bytecode.c (exec_byte_code): `interactive-p' is now a Lisp function.
* test/automated/advice-tests.el (advice-tests--data): Remove.
(advice-tests): Move the tests directly here instead.
Add called-interactively-p tests.
"
f1a5d776c4985b3ff1a2c6c17dd71dedf5d726e8,stinsonga/emacs-mirror,"Change delete-by-moving-to-trash so Lisp calls explicitly request trashing.

* src/fileio.c (Fdelete_file): Change meaning of optional arg to mean
whether to trash.
(internal_delete_file, Frename_file): Callers changed.
(delete_by_moving_to_trash): Doc fix.
(Fdelete_directory_internal): Don't move to trash.

* src/callproc.c (delete_temp_file):
* src/buffer.c (Fkill_buffer): Callers changed.

* src/lisp.h: Update prototype.

* lisp/diff.el (diff-sentinel):
* lisp/epg.el (epg--make-temp-file, epg-decrypt-string)
(epg-verify-string, epg-sign-string, epg-encrypt-string):
* lisp/jka-compr.el (jka-compr-partial-uncompress)
(jka-compr-call-process, jka-compr-write-region):
* lisp/server.el (server-sentinel): Remove optional arg from
delete-file, reverting 2010-05-03 change.

* lisp/dired.el (dired-delete-file): New arg TRASH.
(dired-internal-do-deletions): New arg TRASH.  Use progress
reporter.
(dired-do-flagged-delete, dired-do-delete): Use trash.

* lisp/files.el (delete-directory): New arg TRASH.

* lisp/speedbar.el (speedbar-item-delete): Allow trashing.

* lisp/net/ange-ftp.el (ange-ftp-del-tmp-name, ange-ftp-delete-file)
(ange-ftp-rename-remote-to-remote)
(ange-ftp-rename-local-to-remote)
(ange-ftp-rename-remote-to-local, ange-ftp-load)
(ange-ftp-compress, ange-ftp-uncompress): Remove optional arg from
`delete-file'.
(ange-ftp-delete-directory): Add optional arg to `delete-file', to
allow trashing.

* lisp/net/tramp-compat.el (tramp-compat-delete-file): Rewrite to
handle new TRASH arg of `delete-file'.

* lisp/net/tramp-fish.el (tramp-fish-handle-delete-directory)
(tramp-fish-handle-delete-file)
(tramp-fish-handle-make-symbolic-link)
(tramp-fish-handle-process-file): Use null TRASH arg in
`tramp-compat-delete-file' call.

* lisp/net/tramp-ftp.el (tramp-ftp-file-name-handler): Use null TRASH
arg in `tramp-compat-delete-file' call.

* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-delete-file): Rename arg.
(tramp-gvfs-handle-write-region): Use null TRASH arg in
`tramp-compat-delete-file' call.

* lisp/net/tramp-imap.el (tramp-imap-handle-delete-file): Rename arg.
(tramp-imap-do-copy-or-rename-file): Use null TRASH arg in
`tramp-compat-delete-file' call.

* lisp/net/tramp-smb.el (tramp-smb-handle-copy-file)
(tramp-smb-handle-file-local-copy, tramp-smb-handle-rename-file)
(tramp-smb-handle-write-region): Use null TRASH arg in
tramp-compat-delete-file call.
(tramp-smb-handle-delete-directory): Use tramp-compat-delete-file.
(tramp-smb-handle-delete-file): Rename arg.

* lisp/net/tramp.el (tramp-handle-delete-file): Change FORCE arg to TRASH.
(tramp-handle-make-symbolic-link, tramp-handle-load)
(tramp-do-copy-or-rename-file-via-buffer)
(tramp-do-copy-or-rename-file-directly)
(tramp-do-copy-or-rename-file-out-of-band)
(tramp-handle-process-file, tramp-handle-call-process-region)
(tramp-handle-shell-command, tramp-handle-file-local-copy)
(tramp-handle-insert-file-contents, tramp-handle-write-region)
(tramp-delete-temp-file-function): Use null TRASH arg in
tramp-compat-delete-file call.
"
a7b028203499410a9f4bebe8220be8f3a9ce598b,stinsonga/emacs-mirror,"Initial support for bidirectional editing.

 Makefile.in (obj): Include bidi.o.
 (bidi.o): New target.
 makefile.w32-in (OBJ1): Add $(BLD)/bidi.$(O).
 ($(BLD)/bidi.$(O)): New target.
 bidi.c: New file.
 buffer.h (struct buffer): New members bidi_display_reordering
 and bidi_paragraph_direction.
 buffer.c (init_buffer_once): Initialize bidi_display_reordering
 and bidi_paragraph_direction.
 (syms_of_buffer): Declare Lisp variables bidi-display-reordering
 and bidi-paragraph-direction.
 (Fbuffer_swap_text): Swap the values of
 bidi_display_reordering and bidi_paragraph_direction.
 dispextern.h (BIDI_MAXLEVEL, BIDI_AT_BASE_LEVEL): New macros.
 (bidi_type_t, bidi_dir_t): New types.
 (bidi_saved_info, bidi_stack, bidi_it): New structures.
 (struct it): New members bidi_p, bidi_it, paragraph_embedding,
 prev_stop, base_level_stop, and eol_pos.
 (bidi_init_it, bidi_get_next_char_visually): New prototypes.
 (IT_STACK_SIZE): Enlarge to 5.
 (struct glyph_row): New member reversed_p.
 <string_buffer_position>: Update prototype.
 (PRODUCE_GLYPHS): Set the reversed_p flag in the iterator's
 glyph_row if bidi_it.paragraph_dir == R2L.
 (struct glyph): New members resolved_level and bidi_type.
 dispnew.c (direct_output_forward_char): Give up if we need bidi
 processing or buffer's direction is right-to-left.
 (prepare_desired_row): Preserve the reversed_p flag.
 (row_equal_p): Compare the reversed_p attributes as well.
 xdisp.c (init_iterator): Initialize it->bidi_p.  Call
 bidi_init_it and set it->paragraph_embedding from the current
 buffer's value of bidi_paragraph_direction.
 (reseat_1): Initialize bidi_it.first_elt.
 (set_iterator_to_next, next_element_from_buffer): Use the value of
 paragraph_embedding to determine the paragraph direction.
 (set_iterator_to_next): Under bidi reordering, call
 bidi_get_next_char_visually.  Call bidi_paragraph_init if the
 new_paragraph flag is set in the bidi iterator.
 (next_element_from_buffer): If bidi_it.first_elt is set,
 initialize paragraph direction and find the first character to
 display in the visual order.  If reseated to a middle of a line,
 prime the bidi iterator starting at the line's beginning.  Handle
 the situation where we overstepped stop_charpos due to
 non-linearity of the bidi iteration.  Likewise for when we back up
 beyond the previous stop_charpos.  When moving across stop_charpos,
 record it in prev_stop.
 (display_line): Set row->end and it->start for the next row to the
 next character in logical order.  Always extend reversed_p rows to
 the end of line, even if they end at ZV.  Copy the reversed_p flag
 to the next glyph row.  Keep calling set_cursor_from_row for
 bidi-reordered rows even if we already have a possible candidate
 for cursor position.  Set row_end after all the row's glyphs have
 been produced, by looping over the glyphs.  Record the position
 after EOL in it->eol_pos, and use it to set end_pos of the last
 row produced for a continued line.
 <Qright_to_left, Qleft_to_right>: New variables.
 (syms_of_xdisp): Initialize and staticpro them.
 (string_buffer_position_lim): New function.
 (string_buffer_position): Most of code moved to
 string_buffer_position_lim.  Last argument and return value are
 now EMACS_INT; all callers changed.
 (set_cursor_from_row): Rewritten to support bidirectional text and
 reversed glyph rows.
 (text_outside_line_unchanged_p, try_window_id): Disable
 optimizations if we are reordering bidirectional text and the
 paragraph direction can be affected by the change.
 (append_glyph, append_composite_glyph)
 (produce_image_glyph, append_stretch_glyph): Set the
 resolved_level and bidi_type members of each glyph.
 (append_glyph): If the glyph row is reversed, prepend the glyph
 rather than appending it.
 (handle_stop_backwards): New function.
 (reseat_1, pop_it, push_it): Set prev_stop and base_level_stop.
 (reseat): call handle_stop_backwards to recompute prev_stop and
 base_level_stop for the new position.
 (handle_invisible_prop): Under bidi iteration, skip invisible text
 using bidi_get_next_char_visually.  If we are `reseat'ed, init the
 paragraph direction.  Update IT->prev_stop after skipping
 invisible text.
 (move_it_in_display_line_to): New variables prev_method
 and prev_pos.  Compare for strict equality in
 BUFFER_POS_REACHED_P.
 (try_cursor_movement): Examine all the candidate rows that occlude
 point, to return the best match.  If rows are bidi-reordered
 and point moved backwards, back up to the row that is not a
 continuation line, and start looking for a suitable row from
 there.
 term.c (append_glyph): Reverse glyphs by pre-pending them,
 rather than appending, if the glyph_row's reversed_p flag is set.
 Set the resolved_level and bidi_type members of each glyph.
 .gdbinit (pbiditype): New command.
 (pgx): Use it to display bidi level and type of the glyph.
 (pitx): Display some bidi information about the iterator.
 (prowlims, pmtxrows): New commands.
 files.el: Make bidi-display-reordering safe variable for boolean
 values.
 mule.texi (International): Mention support of bidirectional editing.
 (Bidirectional Editing): New section.
 HELLO: Reorder Arabic and Hebrew into logical order, and
 insert RLM before the opening paren, to make the display more
 reasonable.  Add setting for bidi-display-reordering in the local
 variables section.
 NEWS: Mention initial support for bidirectional editing.
"
e39a5583efbaa11447f89e13f3f0e5a178b95225,stinsonga/emacs-mirror,"nnimap.el (nnimap-unselect-group): Made into its own function.
 (nnimap-request-rename-group): Unselect group before renaming.  This had gotten lost somewhere.
 (nnimap-request-accept-article): Keep track of examined groups, and unselect the group before APPENDing to read-only groups.
 (nnimap-request-move-article): Clear flags before moving so that they can be re-set later.
"
b46a6a83b3c30d34aa6b80633394c74e6145291c,stinsonga/emacs-mirror,"Don't use the abbreviation ""win"" to refer to Windows (Bug#10421).

* lisp/org/ob-lilypond.el (ly-w32-ly-path): Rename from ly-win32-ly-path.
(ly-w32-pdf-path): Rename from ly-win32-pdf-path.
(ly-w32-midi-path): Rename from ly-win32-midi-path.
(ly-determine-ly-path, ly-determine-pdf-path, ly-determine-midi-path):
Check for ""windows-nt"", not ""win32"", in system-type.
* src/regex.c (MAX_BUF_SIZE): Remove some incorrect and
long-ago-commented-out code that talks about ""WIN32"".
* src/w32heap.h (OS_WINDOWS_95): Rename from OS_WIN95.
All uses changed.
"
dc6c0edad789a8aab129ae12b8f064d0e912cca7,stinsonga/emacs-mirror,"Revert introduction of isearch-filter-predicates.
Rely on add-function instead.
* lisp/loadup.el: Preload nadvice.
* lisp/isearch.el (isearch-filter-predicates): Rename it back to
isearch-filter-predicate.
(isearch-message-prefix): Use advice-function-mapc and advice
properties to get the isearch-message-prefix.
(isearch-search, isearch-lazy-highlight-search): Revert to funcall
instead of run-hook-with-args-until-failure.
(isearch-filter-visible): Not obsolete any more.
* lisp/replace.el (perform-replace): Revert to funcall
instead of run-hook-with-args-until-failure.
* lisp/wdired.el (wdired-change-to-wdired-mode): Use add-function.
* lisp/dired-aux.el (dired-isearch-filenames-mode): Rename from
dired-isearch-filenames-toggle; make it into a proper minor mode.
Use add/remove-function.
(dired-isearch-filenames-setup, dired-isearch-filenames-end):
Call the minor-mode rather than add/remove-hook.
(dired-isearch-filter-filenames):
Remove isearch-message-prefix property.
* lisp/info.el (Info--search-loop): New function, extracted from Info-search.
Funcall isearch-filter-predicate instead of
run-hook-with-args-until-failure isearch-filter-predicates.
(Info-search): Use it.
(Info-mode): Use isearch-filter-predicate instead of
isearch-filter-predicates.
* src/lisp.mk (lisp): Add nadvice.elc.
* lib-src/makefile.w32-in (lisp2): Add nadvice.elc.

Fixes: debbugs:14714
"
97914756e8de76b8e83550eab2e12e5dfcb87754,stinsonga/emacs-mirror,"* lisp.h (lispstpcpy): Rename from lispstrcpy, and act like stpcpy.

All callers changed.
* xterm.c (x_term_init): Use new functionality to avoid two needs
to compute a string length.
"
4475bec4dd51b8da9884816d9ca06e4d60a35e15,stinsonga/emacs-mirror,"* buffer.c (Qclone_number): Remove for now, as it's unused.

(record_buffer, Funrecord_buffer): Rename local to avoid shadowing.
(record_buffer): Remove unused local.
* frame.c (other_visible_frames, frame_buffer_list): Now static.
(set_frame_buffer_list): Remove; unused.
* frame.h (other_visible_frames): Remove decl.
* keyboard.h (menu_items_inuse): Declare only if USE_GTK || USE_MOTIF.
* lisp.h (frame_buffer_list, set_frame_buffer_list): Remove decls.
(add_gpm_wait_descriptor, delete_gpm_wait_descriptor): Declare only
if HAVE_GPM.
* menu.c (menu_items_inuse): Now static unless USE_GTK || USE_MOTIF.
* process.c (add_gpm_wait_descriptor, delete_gpm_wait_descriptor):
Define only if HAVE_GPM.
* widget.c (EmacsFrameResize, emacsFrameClassRec): Now static.
(update_hints_inhibit): Remove; never set.  All uses removed.
* widgetprv.h (emacsFrameClassRec): Remove decl.
* window.c (delete_deletable_window): Now returns void, since it
wasn't returning anything.
(compare_window_configurations): Remove unused locals.
* xfns.c (x_set_scroll_bar_default_width): Remove unused locals.
* xmenu.c (x_menu_set_in_use): Define only if USE_GTK || USE_MOTIF.
Omit no-longer-needed #ifdef USE_X_TOOLKIT, since USE_X_TOOLKIT is
implied by USE_GTK || USE_MOTIF.
(dialog_selection_callback) [!USE_GTK]: Prefer intptr_t for integers
the same widths as pointers.  This follows up on the 2011-05-06 patch.
* xterm.c (x_alloc_lighter_color_for_widget): Define only if USE_LUCID.
* xterm.h: Likewise.
(x_menu_set_in_use): Declare only if USE_GTK || USE_MOTIF.
"
63cfb75f3a9d0f658e099ae18779e305a7e49fee,stinsonga/emacs-mirror,"Include-file cleanup for src directory

Omit ‚Äò#include ""foo.h""‚Äô unless the file needs foo.h (Bug#21707).
In a few cases, add ‚Äò#include ""foo.h""‚Äô if the file needs foo.h
but does not include it directly.  As a general rule, a source
file should include foo.h if it needs the interfaces that foo.h
defines.
* src/alloc.c: Don‚Äôt include process.h.  Include dispextern.h,
systime.h.
* src/atimer.c: Don‚Äôt include blockinput.h.
* src/buffer.c: Include coding.h, systime.h.  Don‚Äôt include
keyboard.h, coding.h.
* src/callint.c: Don‚Äôt include commands.h, keymap.h.
* src/callproc.c: Don‚Äôt include character.h, ccl.h, composite.h,
systty.h, termhooks.h.
* src/casetab.c: Don‚Äôt include character.h.
* src/category.c: Don‚Äôt include charset.h, keymap.h.
* src/ccl.h: Don‚Äôt include character.h.
* src/character.c: Don‚Äôt include charset.h.
* src/charset.c: Don‚Äôt include disptab.h.
* src/chartab.c: Don‚Äôt include ccl.h.
* src/cm.c: Don‚Äôt include frame.h, termhooks.h.
* src/cmds.c: Don‚Äôt include window.h, dispextern.h.
* src/coding.c: Don‚Äôt include window.h, frame.h.
* src/composite.c: Include composite.h.  Don‚Äôt include window.h,
font.h.
* src/data.c: Don‚Äôt include syssignal.h, termhooks.h, font.h.
* src/dbusbind.c: Don‚Äôt include frame.h.
* src/decompress.c: Don‚Äôt include character.h.
* src/dired.c: Don‚Äôt include character.h, commands.h, charset.h.
* src/dispnew.c: Don‚Äôt include character.h, indent.h, intervals.h,
process.h, timespec.h.  Include systime.h.
* src/doc.c: Include coding.h.  Don‚Äôt include keyboard.h.
* src/editfns.c: Include composite.h.  Don‚Äôt include frame.h.
* src/emacs.c: Include fcntl.h, coding.h.  Don‚Äôt include
commands.h, systty.h..
* src/fileio.c: Don‚Äôt include intervals.h, dispextern.h.
Include composite.h.
* src/filelock.c: Don‚Äôt include character.h, systime.h.
* src/fns.c: Don‚Äôt include time.h, commands.h, keyboard.h,
keymap.h, frame.h, blockinput.h, xterm.h.  Include composite.h.
* src/font.c: Include termhooks.h.
* src/font.h: Don‚Äôt include ccl.h, frame.h.  Add forward decls of
struct composition_it, struct face, struct glyph_string.
* src/fontset.c: Don‚Äôt include buffer.h, ccl.h, keyboard.h,
intervals.h, window.h, termhooks.h.
* src/frame.c: Don‚Äôt include character.h, commands.h, font.h.
* src/frame.h: Don‚Äôt include dispextern.h.
* src/fringe.c: Don‚Äôt include character.h.
* src/ftcrfont.c: Don‚Äôt include dispextern.h, frame.h,
character.h, charset.h, fontset.h.
* src/ftfont.c: Don‚Äôt include frame.h, blockinput.h, coding.h,
fontset.h.
* src/ftxfont.c: Don‚Äôt include dispextern.h, character.h,
charset.h, fontset.h.
* src/gfilenotify.c: Don‚Äôt include frame.h, process.h.
* src/gtkutil.c: Include dispextern.h, frame.h, systime.h.
Don‚Äôt include syssignal.h, buffer.h, charset.h, font.h.
* src/gtkutil.h: Don‚Äôt include frame.h.
* src/image.c: Include fcntl.h and stdio.h instead of sysstdio.h.
Don‚Äôt include character.h.
* src/indent.c: Don‚Äôt include keyboard.h, termchar.h.
* src/inotify.c: Don‚Äôt include character.h, frame.h.
* src/insdel.c: Include composite.h.  Don‚Äôt include blockinput.h.
* src/intervals.c: Don‚Äôt include character.h, keyboard.h.
* src/intervals.h: Don‚Äôt include dispextern.h, composite.h.
* src/keyboard.c: Don‚Äôt include sysstdio.h, disptab.h, puresize.h.
Include coding.h.
* src/keyboard.h: Don‚Äôt incldue systime.h.
* src/keymap.c: Don‚Äôt include charset.h, frame.h.
* src/lread.c: Include dispextern.h and systime.h.
Don‚Äôt include frame.h.  Include systime.h.
* src/macros.c: Don‚Äôt include commands.h, character.h, buffer.h.
* src/menu.c: Include character.h, coding.h.  Don‚Äôt include
dispextern.h.
* src/menu.h: Don‚Äôt include systime.h.
* src/minibuf.c: Don‚Äôt include commands.h, dispextern.h, syntax.h,
intervals.h, termhooks.h.
* src/print.c: Include coding.h.  Don‚Äôt include keyboard.h,
window.h, dispextern.h, termchar.h, termhooks.h, font.h.
Add forward decl of struct terminal.
* src/process.c: Don‚Äôt include termhooks.h, commands.h,
dispextern.h, composite.h.
* src/region-cache.c: Don‚Äôt include character.h.
* src/scroll.c: Don‚Äôt include keyboard.h, window.h.
* src/search.c: Don‚Äôt include category.h, commands.h.
* src/sound.c: Don‚Äôt include dispextern.h.
* src/syntax.c: Don‚Äôt include command.h, keymap.h.
* src/sysdep.c: Don‚Äôt include window.h, dispextern.h.
* src/systime.h: Use ‚Äò#ifdef emacs‚Äô, not ‚Äò#ifdef EMACS_LISP_H‚Äô,
* src/term.c: Don‚Äôt include systty.h, intervals.h, xterm.h.
* src/terminal.c: Include character.h.
Don‚Äôt include charset.h, coding.h.
* src/textprop.c: Don‚Äôt include character.h.
* src/undo.c: Don‚Äôt include character.h, commands.h, window.h.
* src/unexsol.c: Don‚Äôt include character.h, charset.h.
* src/widget.c: Include widget.h.  Don‚Äôt include keyboard.h,
window.h, dispextern.h, blockinput.h, character.h, font.h.
* src/widgetprv.h: Don‚Äôt include widget.h.
* src/window.c: Don‚Äôt include character.h, menu.h, intervals.h.
* src/xdisp.c: Include composite.h, systime.h.  Don‚Äôt include
macros.h, process.h.
* src/xfaces.c: Don‚Äôt include charset.h, keyboard.h, termhooks.h,
intervals.h.
* src/xfns.c: Don‚Äôt include menu.h, character.h, intervals.h,
epaths.h, fontset.h, systime.h, atimer.h, termchar.h.
* src/xfont.c: Don‚Äôt include dispextern.h, fontset.h, ccl.h.
* src/xftfont.c: Don‚Äôt include dispextern.h, character.h, fontset.h.
* src/xgselect.c: Don‚Äôt include timespec.h, frame.h.
Include systime.h.
* src/xgselect.h: Don‚Äôt include time.h.
Use a forward decl to struct timespec instead.
* src/xmenu.c: Don‚Äôt include keymap.h, character.h, charset.h,
dispextern.h.  Include systime.h.
* src/xml.c: Don‚Äôt include character.h.
* src/xrdb.c [USE_MOTIF]: Don‚Äôt include keyboard.h.
* src/xselect.c: Don‚Äôt include dispextern.h, character.h,
buffer.h, process.h.
* src/xsmfns.c: Don‚Äôt include systime.h, sysselect.h.
* src/xterm.c: Don‚Äôt include syssignal.h, charset.h, disptab.h,
intervals.h process.h, keymap.h, xgselect.h.  Include composite.h.
"
a73a3461db808a5b616aa0a654d9e9b6d2fd18d3,stinsonga/emacs-mirror,"Update Emacs Invocation chapter of Emacs manual.

* doc/emacs/cmdargs.texi (Action Arguments): No need to mention
EMACSLOADPATH.
(General Variables): Add xref to Lisp Libraries.
(Initial Options): Copyedits.
(Resume Arguments): Node deleted; emacs.bash/csh are obsolete.
(Environment): Clarify what getenv does.
(General Variables): Clarify EMACSPATH etc.  Emacs does not assume
light backgrounds on xterms.
(Misc Variables): TEMP and TMP are not Windows-specific.
(Display X): Copyedits.
(Colors X): -bd does nothing for GTK.
(Icons X): Gnome 3 doesn't use taskbars.

* doc/emacs/misc.texi (Shell): Document exec-path here.

* doc/emacs/rmail.texi (Movemail): Add xref for exec-path.
"
6221c8db7cab421e94787157228e7d1ac395274d,stinsonga/emacs-mirror,"* display.texi (Attribute Functions): Note that a function value
:height is relative, and that compatibility functions work by
calling set-face-attribute.
(Displaying Faces): Reorder list in order of increasing priority.
(Face Remapping): New node.  Content moved here from Displaying
Faces.
(Glyphs): Link to Face Functions.
"
b74fdf4408c883d02dd5c78af2ec622d632c3b1d,stinsonga/emacs-mirror,"Add new Tramp connection method ""owncloud""

* doc/misc/tramp.texi (all): Use @acronym{GNOME} thoroughly.
(Using GNOME Online Accounts based methods): Rename from
""Using Google Drive"".  Add `owncloud'.
(GVFS based methods): Add `owncloud'.

* etc/NEWS: Add Tramp connection method ""owncloud"".

* lisp/net/tramp-gvfs.el (tramp-gvfs-methods): Add ""owncloud"".
Remove goa methods if not supported.
(tramp-goa-methods, tramp-goa-service, tramp-goa-path)
(tramp-goa-path-accounts, tramp-goa-interface-documents)
(tramp-goa-interface-printers, tramp-goa-interface-files)
(tramp-goa-interface-contacts, tramp-goa-interface-calendar)
(tramp-goa-interface-oauth2based)
(tramp-goa-interface-account, tramp-goa-identity-regexp)
(tramp-goa-interface-mail, tramp-goa-interface-chat)
(tramp-goa-interface-photos, tramp-goa-path-manager)
(tramp-goa-interface-documents)
(tramp-gvfs-owncloud-default-prefix)
(tramp-gvfs-owncloud-default-prefix-regexp): New defconst.
(tramp-goa-name): New defstruct.
(tramp-gvfs-stringify-dbus-message): Handle all consp messages.
(tramp-dbus-function, tramp-gvfs-get-remote-prefix)
(tramp-get-goa-accounts): New defun.
(with-tramp-dbus-call-method): Use it.
(with-tramp-dbus-get-all-properties): New defmacro.
(tramp-gvfs-url-file-name)
(tramp-gvfs-handler-mounted-unmounted)
(tramp-gvfs-connection-mounted-p, tramp-gvfs-mount-spec):
Map between ""owncloud"" and ""davs"".
(tramp-gvfs-maybe-open-connection): Set ""vector"" connection property.

* test/lisp/net/tramp-tests.el (tramp-gvfs-handler-askquestion):
Suppress run in tests.
(tramp--test-owncloud-p): New defun.
(tramp-test11-copy-file, tramp-test12-rename-file): Use it.
"
ba83908c4b7fda12991ae9073028a60da87c1fa2,stinsonga/emacs-mirror,"Misc fixes, and use lexical-binding in more files.
* lisp/subr.el (letrec): New macro.
(with-wrapper-hook): Move from lisp/simple.el and don't use CL.
* simple.el (with-wrapper-hook): Move with-wrapper-hook to subr.el.
* lisp/help-fns.el (help-function-arglist): Handle subroutines as well.
(describe-variable): Use special-variable-p to filter completions.
* lisp/emacs-lisp/macroexp.el (macroexpand-all-1): Don't expand `declare'
in defmacros.
* lisp/emacs-lisp/cconv.el (cconv-convert, cconv-analyse-form):
Handle `declare'.
* lisp/emacs-lisp/cl.el (pushnew): Silence unfixable warning.
* lisp/emacs-lisp/cl-macs.el (defstruct, define-compiler-macro):
Mark unused arg as unused.
* lisp/emacs-lisp/byte-opt.el (byte-optimize-lapcode): Use memq.
* lisp/emacs-lisp/autoload.el (make-autoload): Don't assume the macro's
first sexp is a list.
(autoload-generate-file-autoloads): Improve error message.
* lisp/emacs-lisp/advice.el (ad-arglist): Use help-function-arglist
to understand the new byte-code arg format.
* lisp/vc/smerge-mode.el:
* lisp/vc/log-view.el:
* lisp/vc/log-edit.el:
* lisp/vc/cvs-status.el:
* lisp/uniquify.el:
* lisp/textmodes/css-mode.el:
* lisp/textmodes/bibtex-style.el:
* lisp/reveal.el:
* lisp/newcomment.el:
* lisp/emacs-lisp/smie.el:
* lisp/abbrev.el: Use lexical-binding.
* src/eval.c (Fprog1, Fprog2): Simplify and use XCDR/XCAR.
(Fdefvar): Remove redundant SYMBOLP check.
(Ffunctionp): Don't signal an error for undefined aliases.
* doc/lispref/variables.texi (Converting to Lexical Binding): New node.
"
7e649856bce883738622cc3533ad808c6ea1a73f,stinsonga/emacs-mirror,"Minor EBADF fixes.

* process.c (create_process, wait_reading_process_output) [AIX]:
Remove obsolete SIGHUP-related  code, as Emacs no longer disables
SIGHUP, so EBADF is no longer acceptable here (it wouldn't work in
a multithreaded environment anyway).
* sysdep.c (emacs_close): It's not dangerous to invoke emacs_close (-1).
"
98c6f1e36ff487925280fa0b0340af9d058632b5,stinsonga/emacs-mirror,"Remove unnecessary casts involving pointers.

These casts are no longer needed now that we assume C89 or later,
since they involve casting to or from void *.
* alloc.c (make_pure_string, make_pure_c_string, pure_cons)
(make_pure_float, make_pure_vector):
* lisp.h (SAFE_ALLOCA, SAFE_ALLOCA_LISP):
* macros.c (Fstart_kbd_macro):
* menu.c (find_and_return_menu_selection):
* minibuf.c (read_minibuf_noninteractive):
* sysdep.c (closedir):
* xdisp.c (x_produce_glyphs):
* xfaces.c (compare_fonts_by_sort_order):
* xfns.c (x_real_positions, select_visual):
* xselect.c (x_stop_queuing_selection_requests)
(x_get_window_property, x_get_window_property_as_lisp_data):
* xterm.c (x_set_frame_alpha, x_find_modifier_meanings):
Remove unnecessary pointer casts.
* alloc.c (record_xmalloc): New function.
* lisp.h (record_xmalloc): New decl.
(SAFE_ALLOCA): Now takes just one arg -- the size -- and acts
more like a function.  This is because the pointer cast is not
needed.  All uses changed.
* print.c (print_string, print_error_message): Avoid length recalc.
"
a864ef14570715dc3233fbbf2e9da7aa8f29729e,stinsonga/emacs-mirror,"Use bool for booleans in font-related modules.

* font.c (font_intern_prop, font_style_to_value)
(font_style_symbolic, font_parse_xlfd, font_parse_fcname)
(generate_otf_features, font_check_otf_features, font_check_otf)
(font_match_p, font_list_entities, font_at):
* fontset.c (fontset_id_valid_p, reorder_font_vector
(fontset_find_font, Fset_fontset_font)
(face_suitable_for_char_p) [0]:
* ftfont.c (fc_initialized, ftfont_get_open_type_spec)
(ftfont_open, ftfont_text_extents, ftfont_check_otf):
(m17n_flt_initialized, ftfont_shape_by_flt):
* ftxfont.c (ftxfont_draw_bitmap, ftxfont_draw):
* nsfont.m (nsfont_draw):
* w32font.c (w32font_draw):
* w32term.c (x_draw_glyphless_glyph_string_foreground):
Use bool for booleans.
* font.h: Adjust to above API changes.
(struct font, struct font_driver, struct font_driver_list):
Use bool for booleans.
(struct font): Remove useless member encoding_type.
All users removed.
* fontset.c, xftfont.c: Omit unnecessary static decls.
"
309f24d1ec07646fb1a090ee10fe456e79aea097,stinsonga/emacs-mirror,"Use xstrdup and build_unibyte_string where applicable.
* alloc.c (xstrdup): Tiny cleanup.  Add eassert.
* xfns.c (x_window):
* xrdb.c (x_get_customization_string):
* xterm.c (xim_initialize):
* w32fns.c (w32_window): Use xstrdup.
(w32_display_monitor_attributes_list):
* emacs.c (init_cmdargs):
* keyboard.c (PUSH_C_STR):
* nsfont.m (nsfont_open):
* sysdep.c (system_process_attributes):
* w32.c (system_process_attributes):
* xdisp.c (message1, message1_nolog): Use build_unibyte_string.
"
92411a0d2e8a78e2eb05fa26e8a9bd978d5e01fe,stinsonga/emacs-mirror,"Clean up a longstanding to-do item.

* vc.el (vc-expand-dirs): Now takes a second BACKEND argument,
improving behavior on directories using multiple file-oriented VCSEs.
"
5b687a76638ac857d889c6458bcb90d113f7789e,thought-machine/please,"Handle exports -> exported_deps via standard bazel replacement.
"
46eff7f63968cc2c79a6b1e584197a8a00bd10ac,thought-machine/please,"Don't use zip and jar since they encode timestamps, use jarcat instead which we can run in deterministic mode.
"
6d6a83ec6207d4fccb5f887e832819d7c0d75117,thought-machine/please,"Rework Prometheus implementation a bit to avoid potential deadlock at close. (#182)

* Rework Prometheus implementation a bit to avoid potential deadlock at close

* Changelog, version bump
"
2e8913dae81793692cd69b1728b437cf023ddf39,thought-machine/please,"cffi rewrite to support cpython parser (#88)

* Trying this embedded parser lark

* Check for existence of .so before trying to dlopen() it

* disable test temporarily

* redoing callbacks a bit

* attempt at pushing stuff back into C

* Cleanup, remove unused functions

* bootstrap updates

* packaging cleanup

* Version bump, changelog

* Clean up interpreter a little

* Readme update

* Add warnings when some parsers aren't present.

* Remove all the extra types; it's still a bit crap but keeps them out of the interface.

* separate headers

* Separate out defs.h completely.

* Updating wrapper script

* Fix for cffi 1.6, don't delete its addition to __builtin__

* Five fewer lines of C...

* unneeded line

* Allow passing absolute paths to engines, so we don't have to have nasty hacks in the real code.
"
adbdc43fb2004daac009d04d5cdbbcc53575e492,tmobile/jazz-installer,"Merge pull request #255 from tmobile/core_reorg

Code reorganization to speed up install time

Former-commit-id: 0c590ae70a9bb4c334adade65ecf22e8646ddcc1"
9232617246d4ac9079e5ac5c36915fced61f45d0,tmobile/jazz-installer,"Merge branch 'v1.7.1' into simplify-chef-cookbooks


Former-commit-id: 6026e904770b27fb1d80591084ee09ce037bf1a5"
808d7fb70495bb3a962f7de77b57183b826e084c,tmobile/jazz-installer,"Merge pull request #76 from SiniWilson/CAPI-1240

CAPI-1240: Refactor schema for installer config
Former-commit-id: 9e8c3623d1df44f918c223225847b177e4f59d0c"
a526a8111e2d684d7421cc7dfefccf4807885d76,tmobile/jazz-installer,"Revert ""Revert ""Chef removal - Dockerized Jenkins and Refactor Existing Jenkins Scenarios""""


Former-commit-id: 778333d2d1c013e8861a6f259e98917ee732dbb0"
9db37c3cfc27a43121ada82ef26c8ccb9cdb33fd,tmobile/jazz-installer,"Merge branch 'v1.7.1' into simplify-chef-cookbooks


Former-commit-id: 1cc08e32a0d0e360b9f3d4f2e8ae3f3a7621ea27"
61c94ea6bb6353fa90d33c5bd48c9c52dc96f064,tmobile/jazz-installer,"Merge pull request #185 from tmobile/v1.4.6_isolate_prov_steps

Merge refactoring of installer

Former-commit-id: 31a3b5815ee1fc64459597209031f691941bbcd3"
9e9c5578d3b1610b33555f6c54b831ec058a3ef0,tmobile/jazz-installer,"Revert ""Chef removal - Dockerized Jenkins and Refactor Existing Jenkins Scenarios""


Former-commit-id: fc981a7d4d6fd48fc324046f8f7fef163cce02bc"
0abecd36ca5e1ded30197f2c9b674900544758e4,tmobile/jazz-installer,"Merge branch 'v1.4.6' of https://github.com/supritat/jazz-installer into v1.4.6

* 'v1.4.6' of https://github.com/supritat/jazz-installer: (40 commits)
  Remove duplicate updatesecuritygroup
  remove gitignore file
  update gitignore
  remove duplicate vpcaccessexecution
  enable multi environment in UI
  Fix bad merge
  Drop pointless VERBOSE flag in Installer.sh
  Re-sync branch with 1.4.6 drift
  Update jazz-installer-vars.json
  add config for ui builds
  Updated IAM role ARN and added detach policy
  Event added to Events table for environment deletion
  Environment Id parameter added for Multi Environment deletion feature
  Lock Elastic Search
  Adding environment event handler details
  Fix missing path separator
  Add line continuation
  Drop yum update check, it does not do what I thought it did.
  Fix-S3 bucket policy - SID change
  Move dependency to source
  ...


Former-commit-id: fc504e842a661d68f30f43bca8bb16483ebae52d"
0eba65a19e414d624289ee346b8020a281652a61,tmobile/jazz-installer,"Merge pull request #329 from tmobile/revert-285-chef_removal_docker

Revert ""Chef removal - Dockerized Jenkins and Refactor Existing Jenkins Scenarios""

Former-commit-id: 13b5be49c7d91d713cbf67ce98fd479ce5c63710"
17191e200d2cb6e30b497eb7882ed64580a5f573,wazuh/wazuh-kibana-app,"Merge pull request #78 from wazuh/3.0-views-refactor-3

Agents views refactor"
321253060293ac146306270cb6355888e3e6d805,wazuh/wazuh-kibana-app,"Small minor improvements to user interface
"
817353a763755e06e2369baa36a8c3170de936a8,wazuh/wazuh-kibana-app,"Completions to first big milestone of HTML/CSS refactoring
"
f0cd84010a4a3ca06435a5e3c7a8263122b3e8d5,wazuh/wazuh-kibana-app,"Removed redundant module injections along the main controllers
"
014028e01742867f0baa2997e147bd4f25137302,wazuh/wazuh-kibana-app,"Refactor - In progress
"
7cdb7dcee1c4415a00e89e4339b8d280493a4e97,wso2/carbon-device-mgt,"Merge branch 'rest-api-improvements' of https://github.com/wso2/carbon-device-mgt into rest-api-improvements
"
2efdc301774b36d9b80a80d7e759d8a58dac6644,wso2/carbon-device-mgt,"Refactoring OAuth utilities at UI Layer
"
50a17eb33d34d1afd4684cc67b9fcc90ac6f6c69,wso2/carbon-device-mgt,"Refactor add new mobile service module to as parent to agent module
"
a7074e2e4e7077017a9795b2c87b1514248f2551,wso2/carbon-device-mgt,"refactored general configuration
"
6b33031dc5e6e08acea16881f67bcbe4c78e0e65,zeroDivisible/.emacs.d,"core: dotspacemacs-distribution, spacemacs-core layer and rename contrib

- Rename contrib directory to layers
- Add new variable dotspacemacs-distribution
- Move spacemacs layer to layers/!distribution
- New layer spacemacs-core in layers/!distribution
- User can now set dotspacemacs-distribution to spacemacs or
  spacemacs-core (default spacemacs)

spacemacs-core is very lightweight layer sufficient to build upon
spacemacs.
"
aed1811f767c88cd69176efc038cb4f6a156a6f2,zeroDivisible/.emacs.d,"perspectives: big refactoring

- Rename micro-states to ""layouts""
- Rename some functions to include ""layout"" instead of ""perspective""
- cleanup variables
- move functions to funcs.el
- move package specific stuff to post-init functions
- changes key bindings
- micro-state documentation rewrite
- change format of the layouts line in the micro-state doc
- defer loading of persp-mode which loads with `SPC l`
- always display the spacemacs home buffer with no switch
- various fixes
- various new bugs :-)
"
629eb61149e8978349690d81e23ebd899cdef893,zeroDivisible/.emacs.d,"Refactor `spacemacs/open-in-external-app`

New interactive function
`spacsmacs/open-file-or-directory-in-external-app`, depending on the
value of prefix argument, it opens the current file or directory in
external app.
"
60527f3d70f39ee559e937a5661c062acae0fdad,Automattic/wp-e2e-tests,"* Executed scrollIntoView command to bring cart into view on mobile tests
* Removed unnecessary waits
"
2335f091d21bd754fbd304b9af9eb06c21e81e6a,Clinical-Genomics/scout,"Move constant to scout/constants
"
de9c9cc8814b5b55aac38dce4ce105f3fbc456be,CommandPost/CommandPost,"#542
* Renamed `cp.is` to `cp.prop` (aka property)
"
0731e43eae3c40a4b2f3d278e5aa3d8d03ea3e3b,CommandPost/CommandPost,"#1156
* Improved `childFromLeft/Right/Top/Bottom` to allow passing a 'matcher' function to filter.
* Updated uses of those functions to use the matcher.
"
6e954b5321c37e38fbaeecec166f6bc172f5944d,Ensembl/ensembl-compara,"Merge branch 'master' into feature/wga_polyploid

* master: (24 commits)
  Added an option to use a genome for a whole clade
  Added some checks for left/right_index
  set_internal_ids is not used any more
  Adding even more wait_for rules
  Adding wait_for loop to improve pipeline efficiency.
  Adding new resurce class for long jobs.
  Adding more wait_for rules to ensure that things don't start too early
  Deprecated MLSS::species_set_obj
  bugfix: was supposed to use the genome_db_id there
  The orthology stats don't depend on dnds stuff, and can start earlier
  Factorized the SQL queries
  docfix
  Made a base-runnable for blast-factories. BlastFactoryUnannotatedMembers can now use specific parameters for short proteins.
  The base runnable is now aware of a member_id_list
  Added staging to reg conf
  Removed merge error duplicates
  typo
  Adaptors can be defined outside of the loop
  These things should happen only once we've passed the hc and qc analyses
  The ""chunk_by_size"" is now an internal parameter dependant on ""all_blast_params""
  ...

Conflicts:
	modules/Bio/EnsEMBL/Compara/PipeConfig/PairAligner_conf.pm
"
f766c3bb93e400fe4b9ca1b1a0196000e4a911dd,Ensembl/ensembl-webcode,"Merge branch 'master' into feature/seq-rewrite
"
355333bb12f1edf7b7f42b193f2ab311244b199a,RigsOfRods/rigs-of-rods,":books: Research of water height handling.

Function `float IWater::getHeight()` renamed to GetStaticWaterHeight()` to enable fulltext searching.
"
dca95623e4f3909302a000f7a622303047454123,RigsOfRods/rigs-of-rods,":triangular_ruler: Project ActorClass: A lot of renamed vars
"
3a0f6bb6fc24cf104e18eda6e782f4611f0fb5d6,RigsOfRods/rigs-of-rods,"[Add] RigEditor menu bar updated; GUI-class structure revised (not managed by GUIManager anymore)
"
9a260af67d1edff376929ffbd2ea534f326c5051,RigsOfRods/rigs-of-rods,"[Codechange] Make interTruckCollisions() a free function
"
09e8de49f56267d34ac31e8be3be45d7b64b173a,RigsOfRods/rigs-of-rods,"[Codechange] Settings::GetFlaresMode(): improved, cleaned a lot of deadcode.

BeamFactory: removed unused param 'flareMode' in CreateLocal()
Beam: removed unused param 'flareMode' in ctor()
RoRFrameListener: removed unused member 'flaresMode'
"
5446ce7ebc047046ab02b3376469e771e90a6f64,Scan-o-Matic/scanomatic,"Improved gridding by adding buffer for safe placement when needed and added some more features along the way
"
e85140bab87bd88a9741d2c03dbffa3bc50c021a,Scan-o-Matic/scanomatic,"using put instead of post to update status
"
a030848b81c124d20bf2f1ed682a2b127de0d748,WoWAnalyzer/WoWAnalyzer,"Rename castEfficiency -> efficiency
"
91cd5e98a6b05dbad2f36e80f6de6ad82b195372,WoWAnalyzer/WoWAnalyzer,"Merge pull request #2764 from Dambroda/simplify-child-statboxes

[Core] Simplify code for TraitStatisticBox and fix font size for talent boxes"
cb211c900762ac40ab616662ec332bd294733aa5,WoWAnalyzer/WoWAnalyzer,"rename tiger(s) dash occurences
"
77ff3a3f3901abf4784cdd004b7d90e58f81c9fb,WoWAnalyzer/WoWAnalyzer,"remove deprecated statisticOrder and add example logs BM
"
356754ad3673002b68a1a1927c53059b24f94000,WoWAnalyzer/WoWAnalyzer,"Refactored Code for new Dependency function
"
b935deba788b5c9c9fc4abb39d1d9c1819611cd1,WoWAnalyzer/WoWAnalyzer,"Merge pull request #1090 from MartijnHols/abc-refactor2

ABC refactor: implement good support for channeled abilities"
c4154bcb9000a3379ab441996046d582ef245f3e,WoWAnalyzer/WoWAnalyzer,"rearrange modules to make place for focusUsage module
"
7521b49162929775769aebeef8bb4a91166af99b,WoWAnalyzer/WoWAnalyzer,"Merge remote-tracking branch 'upstream/master' into refactor-updates
"
d7e046896788142ebd55ef36352aa70120d100da,WoWAnalyzer/WoWAnalyzer,"Move more files to Interface folder
"
caca1623ac114f225dfbc924f84d547e94c272b9,WoWAnalyzer/WoWAnalyzer,"Merge pull request #295 from kfinch/09092017-resto-druid-refactor

Resto Druid refactor"
3485b4ac9cacd462b21b3b92912eb49da7bc9ea2,WoWAnalyzer/WoWAnalyzer,"Minor refactors on Affli
"
013ff804c0e9a247a51d364eaf03b81306b500b5,WoWAnalyzer/WoWAnalyzer,"Replace any module usages via private properties
"
6ce177c60e4cbaf59c9c06e7bda3c2516a595032,WoWAnalyzer/WoWAnalyzer,"Generalize tooltip providers and change to using Wowdb instead of Wowhead
"
cf34e85701d4f87be4edef3c04d7d101fcc25b90,WoWAnalyzer/WoWAnalyzer,"Rename ""WoW Analyzer"" -> ""WoWAnalyzer""
"
ccae6f77ae8ce17dea5763a0ccb30c8af8b7f93a,angular/compiler-builds,"57473e7 refactor: code cleanup (#9931)
"
1a884fb4abd281a40f007612e1e551f079512856,angular/compiler-builds,"57051f0 refactor: remove most facades (#12399)
"
2fcec5535dbde5ad8733990028a0c89b1d7d8ae0,angular/compiler-builds,"10da6a4 refactor(ivy): first pass at extracting ReflectionHost for abstract reflection (#24541)
"
ba3934990252a36c9bbecd960dd99e7aa6be868d,biothings/biothings.api,"move diff functions into dedicated module
"
a88871bc6ad13561d9e60fbd9152b8f0c05329b1,gnu-mcu-eclipse/openocd,"Encapsulate JTAG Cable API and interface structure, plan for new header file.

git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@1984 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
a0c10dd29b84e7e9238fa6652c8f7cea3c14fc14,gnu-mcu-eclipse/openocd,"David Brownell <david-b@pacbell.net>:

Extend the internal JTAG event handlers to cover enable/disable,
and use those events to make sure that targets get ""examined"" if
they were disabled when the scan chain was first set up:

 - Remove ""enum jtag_tap_event"", merge with ""enum jtag_event"",
   so C code can now listen for TAP enable/disable events.

 - Report those events so they can trigger callbacks.

 - During startup, make target_examine() register a handler to
   catch ENABLE events for any then-disabled targets.

This fixes bugs like ""can't halt target after enabling its TAP"".

One class of unresolved bugs:  if the target has an ETM hooked
up to an ETB, nothing activates the ETB.  But starting up the
ETM without access to the ETB registers fails...


git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@2251 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
d86100261252805215282b17d214c48021ef7f79,gnu-mcu-eclipse/openocd,"Rename jtag_add_end_state to jtag_set_end_state since ""add"" implies that
this fn has something to do with the queue, which it does not as such.

git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@2050 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
1d230b88d2079e4303816452b04d00da5a94756f,gnu-mcu-eclipse/openocd,"Move interface_jtag_add_scan_check_alloc implementations to their
respective implementation files.


git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@1999 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
4952eadd8f04ca3755c30013abc3ea85e35d8654,gnu-mcu-eclipse/openocd,"trace_t -> struct trace

Remove misleading typedef and redundant suffix from struct trace.
"
170b23fa89cdcc38411fc29ec4453935e0903b16,google/closure-compiler,"
Change on 2010/05/24 by johnlenz

	Simplify function inlining compiler options: remove
	decompose_expressions and inline_anonymouse_function_expression
	options.

	R=anatol,nicksantos
	DELTA=40  (0 added, 34 deleted, 6 changed)

Change on 2010/05/24 by johnlenz

	Have flow sensitive inlining follow the default in the regtests so it
	doesn't block pending CLs due to its current brokeness.

	R=acleung
	DELTA=1  (0 added, 1 deleted, 0 changed)

Change on 2010/05/24 by johnlenz

	The ReplaceDebugStrings pass folds ""new Error"" to ""Error"", I don't want this
	in the general version of that pass so add it in a general fold to
	FoldConstants.  It should be in the ""reshaping pass"" when FoldConstants
	in refactored.

	R=acleung
	DELTA=90  (68 added, 0 deleted, 22 changed)

Change on 2010/05/24 by nicksantos

	Delete SymbolTable.
	I was never able to make this approach work. The savings were
	marginal and not worth the extra complexity.

	R=johnlenz
	DELTA=484  (0 added, 483 deleted, 1 changed)



Revision created by MOE tool push_codebase.
MOE_MIGRATION=11004


git-svn-id: 708380be11bb4c96db8d1bd19ea12a301575c487@230 b0f006be-c8cd-11de-a2e8-8d36a3108c74
"
9b554597ad533ac38b6c3adf398df95bb380326b,google/closure-compiler,"Refactor GlobalTypeInfo into a data class and a separate pass.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=160570502
"
5e99c77b468b64bf2aa12d24a8b88d5e369b6473,google/closure-compiler,"PolymerPass: Avoid renaming altogether for generated _set* functions by adding an interface to externs for the element which has the proper _set* functions.

NOTE: I have to add a suppression here for the constructor property in the object literal now because it's not a real constructor and shouldn't be considered as overriding the JS Object ""constructor"" property. Discussions are ongoing with the Polymer team  to change the name of this property to avoid these collisions.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91930114
"
957940e4bcab1f82627d1aebb0b65f56cc89b786,google/closure-compiler,"Fix up some log statements in the compiler to be more efficient.

string concatenation in disabled log statements is an antipattern that can usually be avoided by using the isLoggable method or a different logging overload that accepts formatting parameters.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=141075516
"
3069daab935ad61a7f5b8955ef3587b66db331a0,google/closure-compiler,"Make state for all the type-based optimizations private to CompilerOptions.

This paves the way for making the useTypeBasedOptimizations option
turn them all on.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=127198720
"
af54aaec7c6bea5cb4ca17b8f82a74b4517f0140,google/closure-compiler,"Mark Array.prototype.values as an ""ES8"" feature.

This ensures that the polyfill will be included if --language_out is ES_2015.

Also add featureSet methods to ensure that adding polyfills, and removing unused polyfills, both happen even in all builds even ""non-transpilation"" builds.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=171609638
"
318ec5f298cdb25dea7eb6f705409e20a0f27725,google/closure-compiler,"Improves j2clOptBundlePass perf by running on just changed scopes.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159734085
"
c5a35d3801094d574104d3e775bcf58a72c05f71,google/closure-compiler,"[NEW TYPE INFERENCE]

Fixing ported tests.
- handle Function
- fix bug in generics instantiation
- provide way to use the warning name in the ported tests instead of the exact text
- for tests which we may not want to support, prefix with disable_
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=63349381
"
7d6b2192c466f7683bb8024af70330bb0c201a4b,google/closure-compiler,"Use JSType.isSubtypeOf instead of JSType.isSubtype

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=189291690
"
b533afce7517ae723d57e0d7ba520939b8a3bd74,google/closure-compiler,"Move the new duplicate-case check into the suspicious code group.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=115522580
"
b2ee7352ab0bd7fc5b3dc50f2e28408e0b2374f3,google/closure-compiler,"[NTI] Allow @const property definitions in prototype methods.

Also some minor cleanups.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=110275519
"
82a9956c6337d2f5d4a94ebe624d64faa54d9182,google/closure-compiler,"
Change on 2010/07/09 08:36:29 by nicksantos

        when injecting param checks, do not inject them before any function
        declarations, because that will break normalization constraints.

        R=johnlenz
        DELTA=22  (18 added, 0 deleted, 4 changed)

Change on 2010/07/09 09:36:54 by johnlenz

        Prefer FileWriter to PrintStream when charset translation isn't needed.

        R=acleung
        DELTA=68  (13 added, 2 deleted, 53 changed)

Change on 2010/07/09 10:54:42 by nicksantos

        our mechanism for injecting boilerplate does not work
        for code that uses @const externs. So just don't use
        any @const externs.

        R=johnlenz
        DELTA=3  (1 added, 0 deleted, 2 changed)

Change on 2010/07/09 11:30:29 by nicksantos

        Scan functional properties of object literals for invalid use
        of ""this"".
        Fixes issue 182.

        R=acleung
        DELTA=21  (19 added, 0 deleted, 2 changed)

Change on 2010/07/09 12:40:16 by dcc

        Separate pass instance for peephole preprocessing.
        Now that I'm writing instructions for how people can add their own
        peephole passes, I want to make sure that the preprocessing
        peephole optimizations that relies on don't get disturbed.

        R=johnlenz
        DELTA=18  (15 added, 0 deleted, 3 changed)


Revision created by MOE tool push_codebase.
MOE_MIGRATION=49008


git-svn-id: 708380be11bb4c96db8d1bd19ea12a301575c487@270 b0f006be-c8cd-11de-a2e8-8d36a3108c74
"
af32ac100a9eece9cdf6906419e72f2b9f8541aa,google/closure-compiler,"[NTI] Refactoring in GlobalTypeInfo, in preparation for inferring @const types for namespace properties.

- When finalizing nominal types, recur to their supertypes directly rather than using a workset.
- Add the simple type in the declaration; was being ignored before.
- Extract GETPROP simple-type inference into its own method.
- Remove unnecessary method getTypeAtPropDeclNode.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=97912440
"
05620baa982e62ef3c569da1a4eaf38de24978bc,google/closure-compiler,"Merge pull request #1329 from ChadKillingsworth/simplify-dep-flags

Simplify dependency flags to use a common set for all module types.

Closes #1329
Closes #1415
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=112718591
"
633c46a7fa9cbaed19ef5c8d0115bdbca052501c,google/closure-compiler,"Drop unsafe type based optimizations that distinguish between null and undefined.  For optimization purposes we have to assume that all values may contain null or undefined as the type system is ""leaky"" with regard to accessing undefined properties on object used as maps or access elements off the end of an array.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=173182612
"
b4801b28ceea8db0f63da7440d6769cb9b7cce8a,google/closure-compiler,"
Change on 2010/05/28 by johnlenz

        Inline functions with inner functions into global scope if they don't
        declare any names.

        R=acleung
        DELTA=329  (244 added, 27 deleted, 58 changed)

Change on 2010/05/28 by dcc

        First pass on refactoring FoldConstants into separate peephole optimizations. This changelist adds the notion of an AbstractPeepholeOptimization and adds a PeepholeOptimizationsPass that runs them. In this go around the minimization aspects of FoldConstants have been factored out into PeepholeMinimize. A future change will factor out the other components of FoldConstants into their own PeepholeOptimizations. DefaultPassConfig has also been updated to run the new PeepholeOptimizationPass.

        This change does not move the minimization-related unit tests from FoldConstantsTest to PeepholeMinimizeTest -- a future, separate, change will do so. Hopefully this will make it easier to review.

        R=acleung
        DELTA=1966  (1271 added, 675 deleted, 20 changed)



Revision created by MOE tool push_codebase.
MOE_MIGRATION=13010


git-svn-id: 708380be11bb4c96db8d1bd19ea12a301575c487@235 b0f006be-c8cd-11de-a2e8-8d36a3108c74
"
c2ae7288f917f28e98ae0d98984562aea6df8dda,highfidelity/hifi_tests,"Merge pull request #261 from NissimHadar/fixZoneEffects

Renamed ambientLightZoneEffects to zoneEffects"
fa673d1be8c4ab48b1d5942f35d356ae60fbbe28,highfidelity/hifi_tests,"Merge pull request #130 from NissimHadar/simplifyRecursiveScripts

Simplified the recursive scripts."
5d2b0f18156d86cdc6c49fe5a513c397bc27b408,inspirehep/inspire-next,"migrator: reorganize tasks

Signed-off-by: Jan Aage Lavik <8d55e006a1b29770f275a5c59a7341f17f8e69d5@cern.ch>
"
29d2cb478eebd0eee3f83ab7856886544c031d77,kbase/KBaseSearchEngine,"Merge pull request #106 from MrCreosote/dev-queue

SCT-178 make TypeFileStorage testable with mocks"
b365fb496780fad3c17d63460faf9b182af7be0e,kbase/KBaseSearchEngine,"Merge pull request #30 from MrCreosote/master

Refactor MOP to use dependency injection, fix workspace timestamp"
6e3ff4967cfb7ebb90a18b70b5d3a159b2238e5d,kbase/KBaseSearchEngine,"Merge pull request #32 from MrCreosote/master

TASK-1075 indexer exception refactor pt 2 of ?"
6fb6bd2bd3fa39e6e7b3b288b896fb5f206994e8,laredoza/.NetScaffolder,"#75 Improve relationship naming/renaming on import for ADO source types.
- Update t4 templates to use updated RelationshipNameFormatting class.
"
96a717dc50839f6bfe9a823cd5bfbcc1ef6daf0d,lastbackend/lastbackend,"Merge pull request #243 from unloop/etcd-storage

refactor code"
a6da17c86c4b00b00a2a70e64dd1dc5ca48ed1ba,mitodl/open-discussions,"Implement adding and removing moderators and contributors (#916)

* Implement add and remove moderators and contributors

* Fix add email API

* Remove unnecessary ternary

* Use R.prop

* Move <td> out of ternary

* Flip ternary

* Rename noun

* Make promises parallel

* Use form with onSubmit

* Refactoring

* Fix margin issues

* Table cell

* Lint

* Fix occasional name collisions

* Remove React.Fragment
"
d81eda1e1ac54dde6c268d56f09885383233c957,novoda/download-manager,"Extracts methods for a more readable code
"
3ccb691e9fd08219c0db25b110587cbe194e2e3b,qutebrowser/qutebrowser,"tab API: Rename scroll to scroller

The scroll attribute did overwrite QWidget.scroll which is unfortunate.
"
cc1899ebca95f6928c7ce91a5e56cadb3fa7d57d,qutebrowser/qutebrowser,"Add tests for repeat-command, make compatible with different count methods
"
4fccc89d7da6379b1eb01bc9fd641258a37d091b,qutebrowser/qutebrowser,"Split browser into browser/browser.webkit
"
5c43dca0dacd3c6e6bcd7190eac7ea25b194bdf5,qutebrowser/qutebrowser,"Improve error message for files which don't exist
"
3265601eabec918ff63150ed13229b9b9809f231,qutebrowser/qutebrowser,"Merge remote-tracking branch 'upstream/master' into hints_clicking

* upstream/master: (327 commits)
  Remove unused import
  tox: Update Werkzeug to 0.11.8
  Regenerate authors
  Use __file__ instead of sys.argv[0]
  Regenerate authors
  Make update_3rdparty.py install correctly when run from any directory
  Open command line urls explicitly.
  tox: Update Werkzeug to 0.11.6
  Move qutebrowser.rcc to misc/
  Regenerate resources
  Fix CHANGELOG/link in README
  New qutebrowser logo!
  www: Add releases link
  Release v0.6.1
  release checklist: Clarify how to build on Windows
  Make sure the cheatsheet PNG is included in sdist
  Fix cheatsheet link URL in quickstart
  Mark segfault on exit in test_smoke as xfail
  Add a xfail test for #797
  Add missing file
  ...

Conflicts:
	tests/integration/features/hints.feature
"
a64775a0f97d256dabb6830c61236439f3edf657,qutebrowser/qutebrowser,"Improve logging messages
"
46161c3af0189ca2616e9bff0ac626bf2ea047f3,qutebrowser/qutebrowser,"Refactor delete_cur_item.

Taking the completion widget as an argument was overly complex.
The process now looks like:

1. CompletionView gets deletion request
2. CompletionView passes selected index to CompletionModel
3. CompletionModel passes the row data to the owning category
4. The category runs its custom completion function.

This also fixes a bug. With the switch to the hybrid (list/sql)
completion model, the view was no longer updating when items were
deleted. This fixes that by ensuring the correct signals are emitted.

The SQL model must be refreshed by running the query. We could try using
a SqlTableModel so we can call removeRows instead.

The test for deleting a url fails because qmodeltester claims the length
of the query model is still 3.
"
634cc595d0714454b398131ca412e6e7e16aabd0,robolectric/robolectric,"Use Reflector instead of ReflectionHelpers.
"
cc932a4e663468c3cc8f6407ecf57230eaf28530,robolectric/robolectric,"Merge branch 'xian/refactor-shadow-wrangling'

* xian/refactor-shadow-wrangling:
  @Ignore some tests that don't make sense right now.
  Re-enable stack trace cleanup.
  Reformat debug.
  Move hard reference to last SdkEnvironment from EnvHolder to RobolectricTestRunner so it'll work if there are multiple EnvHolders. Start removing StrictI18n stuff.
  Generated bytecode is now optimized for the case where a method is not shadowed, which will soon be the normal case. Many fewer class reflection lookups are now performed per method invocation, even when a shadow is involved. The old directlyOn(instance) and directlyOn(class) methods are removed.
  Tear down static state explicitly after a test so classloaders are more likely to be GCable in some circumstances.
  Reuse one ant Project so we don't get a million executor thread pools.
  Initialize SecureRandom early so its PKCS11 thread is started in the normal classloader.
  Oops, add ShadowAbstractWindowedCursor shadow.
"
f6f3c0c7164a6bb13220a41b171c52743e995f45,robolectric/robolectric,"Refactor raw resource loading.
"
32c743ff90e02a492b5d7fd92e1ce6a9bf3486ce,robolectric/robolectric,"Merge remote-tracking branch 'pivotal/robolectric-2-master-resource-refactor' into robolectric-2-master-resource-refactor

* pivotal/robolectric-2-master-resource-refactor:
  Allow RobolectricTestRunner.createResourceLoader to be overridden.
  Remove test that seems wrong.
  ShadowWrangler throws an I18nException.
"
119ef03b0ea6140ea019a915d060019c661f0cf6,robolectric/robolectric,"Move Shadow and ReflectionHelpers into shadows-api module.
"
ccc6ff91a42bf5e62524c06faa825d10d8664659,robolectric/robolectric,"Merge pull request #3596 from robolectric/patch178823176

Furthher cleanup / removal of internal usages of ShadowAdapter"
b44b921c2b6bbb70e452354f824b39f675e4102e,robolectric/robolectric,"Merge pull request #2793 from robolectric/remove-drawable-special-case

Remove unnecessary special case for drawable resources."
e848180aaa9640de871796ca1a3e4f8110701fd6,roundcube/roundcubemail,"Improve display name composition when saving contacts (#1487143), with plugin-support; allow empty names in sql address book, fall back to e-mail address in listing and vcard export

"
2e90ff5b62e8d9faaa39e042960c54034fcafa1e,roundcube/roundcubemail,"- Make password input fields of type password in installer (#1484886)


"
f40e515cb207aa924ae7468469a0ffbc9e56929d,roundcube/roundcubemail,don't use env for group-rename action
7e50b4361c7094bb33fced2ef96b95acd4d87640,roundcube/roundcubemail,"- Small code improvement


"
d1e08fc9058188f4a6f2580d304592e2c92aae85,roundcube/roundcubemail,"Replace LDAP vars in group queries (#1487837)

"
fe14b5808136918ca5aac47df51978a29877bec2,sitespeedio/browsertime,"Move Firefox har generation to a separate file.

Introduce --experimental.nativeHar flag to enable HAR export via Firefox plugin.
"
ce0537bee3f0564e112d32980b28b82f88a0ba7d,smartdevicelink/sdl_ios,"Remove NSThread+ThreadIndex

* Rename SDLLogTargetASL -> SDLLogTargetAppleSystemLog
"
16fa7399dc1fe5430b878ed1bb06cee6aec9ce9d,smartdevicelink/sdl_ios,"Changes to SDLProxy for safety

* proxyListeners public mutable array property becomes a readonly, immutable set
* Add a private mutable set property to back the public proxyListeners. When the public set is called, this mutable set is copied into an immutable one and returned.
* Added a method to proxy listener delegates from the set
* SDLProxy init method sets up properties using iVars instead of accessors
* debugConsoleGroupName and proxyVersion public strings become readonly copy properties
"
01891cc405d7d723212fef63404cd87df963db8a,toastkidjp/Yobidashi_kt,"Merge pull request #11 from toastkidjp/feature

Re-rename to Yobidashi."
6c6d80b24e858965acdd2da3e0fe31df187ca5f0,tualatin/tailforwindows,"Clean up business namespace
"
6aeb706e00ff94cb8d27ff8931309155dc798b1f,victorbrodsky/order-lab,"re-implemented platform list management list
"
1e0f3480346e67540a4d70cc901bdb9efb8c9f6e,webrecorder/webrecorder,"Separate collections from users for dashboard api
"
f9aa80bcdb46352d2c818bb5ff3e05cb928f4022,webrecorder/webrecorder,"refactor: remove browsermanager (not a separate project again), as well as novnc includes and browser_controller.js (now part of webrecorder/browsers)
replaced with webrecorder/shepherd image
"
b4fa04cbc15b712ba46a831131cd28b64ed1a4ff,webrecorder/webrecorder,"Rename invite.py -> admin.py, add create, modify and remove user commands
- add new `admin` role for future admin considerations
- ensure emails are lowercase before hashing
- rename init_manager_for_invite -> init_manager_for_cli
- addresses #214
"
01c53e03d6305dc4f351e0d902de4f11b8014f0b,yeastgenome/SGDFrontend,"Reorganized url passing, by adding a backend method.
"
9f0f475efefbbcbe98e198e3d32d3859971be4f0,Azure/azure-sdk-for-node,"Merge pull request #609 from andrerod/dev

#606: Make module lighter"
78fc251374f8e29f2a20d5d8e19003bd21282d0a,Azure/azure-sdk-for-node,"split large empty page range
"
56c05e4e9340c2d5d649adfd13b99df7d0f22fe3,Graylog2/graylog2-server,"Move ServerStatus class to graylog2-plugin-interfaces.

This is needed to be able to access the server status from input
plugins.

Requires BaseConfiguration and ProcessingPauseLockedException to move as
well.
"
8e5a6e2d928c7c1fe3b0ba3b5eb7ef7fad9a3dcc,Graylog2/graylog2-server,"Using explicit types for Input/OutputCache/OutputBuffer.

This fixes erratic behaviour where the InputCache of the ProcessBuffer
was a different instance than the one injected in other places.
Several providers became obsolete after tagging the
InputCache/OutputCache classes singleton.
"
5713651230f2ec6502db45010e942ab866b14a93,Graylog2/graylog2-server,"Mega refactoring of the persistence layer.

Extracting all persistence logic into separate DAO service classes leaving only value classes.
Extracting PersistedService base class and interface.
Changing all static methods to instance methods.
Removing core object reference in service classes and user MongoConnection directly.
Extracing interfaces for models and service classes.
Changing references of model implementation classes to references of model interfaces.
Adding CollectionName annotation to replace static field.
Adding bindings for service classes in Jersey binder.

TODO:
Dashboard widgets are broken.
AlertCondition tests need a major rewrite.
"
67c86a0a49a042bd22a98a830b97f6fc0941a264,Graylog2/graylog2-server,"Use official swagger-annotations instead of custom ones
"
9409d1de11fb1605631d9f4de84531534e459d5f,Graylog2/graylog2-server,"Fixing issues and cleaning up parts of the radio code

- Changing startedAt attribute in InputState to proper DateTime object
- Registering input classes in Radio class before launching persisted
  inputs (How did this ever work before?!)
- Changing scope of RadioTransport
- Extracting base class from ProcessBufferProcessor and creating
  specific classes for server and radio with slightly different semantics
- Persisting inputs in RadioInputRegistry _before_ launching them, so
  they have a proper persisted id
- Changing annotation class of @Inject in ThroughputResource from Guice
  generic annotation so HK2 is injecting this properly now
- Adding default constructor to RegisterInputRequest so it can be
  properly deserialized
- Referencing custom JadConfig 0.4.1 which contains a fix so inheriting
  configuration repository classes works now. I will upload it to the
  forked repository and reference this one in the next commit.
"
cbface613c7d4d22763ac1e2940b657c1918419d,Implem/Implem.Pleasanter,"Refactored: „É°„ÇΩ„ÉÉ„ÉâÂêç„ÅÆÂ§âÊõ¥„ÄÇÔºàSetLinks ‚Üí SetChoicesByLinksÔºâ
"
b4c1643bf911f00dbee283b8db2c51e260bd8a85,Implem/Implem.Pleasanter,"Refactored: ToExportExtensions„ÇØ„É©„Çπ„ÇíÂªÉÊ≠¢„Åó„ÄÅColumn„ÇØ„É©„Çπ„Å´ËøΩÂä†„Åó„ÅüDisplayGrid„É°„ÇΩ„ÉÉ„Éâ„Å´Â§âÊõ¥„ÄÇ
"
99b8be4f2557f6143c18a57701ba7ab9f7089249,Implem/Implem.Pleasanter,"Refactored: Wiki„ÅÆÁ∑®ÈõÜÁîªÈù¢„Åß‰ΩøÁî®„Åó„Å¶„ÅÑ„Å™„ÅÑLinkÈñ¢ÈÄ£„É°„ÇΩ„ÉÉ„Éâ„ÇíÂâäÈô§„ÄÇ
"
d777985e6deb739d4a6ca5c1194fb91fe1804761,Implem/Implem.Pleasanter,"Refactored: DataViewÈñ¢ÈÄ£„ÅÆdiv„ÅÆÂêçÁß∞„ÇíÂ§âÊõ¥„ÄÇÔºàxxxChart ‚Üí xxxBody, xxxGrid ‚Üí xxxBodyÔºâ
"
4a1aa389b366922e61aeb9e986711dba5ff60f09,Implem/Implem.Pleasanter,"Refactored: Libraries.ServerDataÂêçÂâçÁ©∫Èñì„ÅÆ„ÇØ„É©„Çπ„ÇíLibraries.ServerÂêçÂâçÁ©∫Èñì„Å´ÁßªÂãï„ÄÇ
"
acca2d3684243a329ebfaa6dd4b0e75bdee4da61,Implem/Implem.Pleasanter,"Refactored: TextStylesÂàóÊåô‰Ωì„ÇíHtmlTypes„Å´ÁßªÂãï„Åó„ÄÅÂêçÂâç„ÇíTextTypes„Å´Â§âÊõ¥„ÄÇ
"
207ab2d445bfa6690e53dd57ebb738042db7fa88,Implem/Implem.Pleasanter,"Refactored: Á©∫ÁôΩ„ÅÆË™øÊï¥„ÄÇ
"
16301f9aad4d1e060f8c5c82270b3acbfb89af0c,Implem/Implem.Pleasanter,"Refactored: ÂàÜÂâ≤„É°„ÇΩ„ÉÉ„Éâ„ÅÆ„Éá„Éº„ÇøÂá¶ÁêÜ„Å®„Éê„É™„Éá„Éº„Ç∑„Éß„É≥„ÄÅ„É¨„Çπ„Éù„É≥„ÇπÂá¶ÁêÜ„ÇíÂàÜÈõ¢„ÄÇ
"
1dbd50eca189871b58c7986e4a9dfb25edae42a7,Implem/Implem.Pleasanter,"Refactored: „É≠„Éº„Ç´„É´Â§âÊï∞Âêç„ÇíÂ§âÊõ¥„ÄÇÔºàsiteSettings ‚Üí ssÔºâ
"
e8f5e679ea26a6f5f3cd79b0843534c699a42581,JetBrains/intellij-scala,"move bsp module outside of scala/ hierarchy because it can conceptually be an independent plugin.
#SCL-13998 fixed
"
27c0a01cc2dffa85fb345a1efd85bec55eae0e94,JetBrains/intellij-scala,"start bit TS refactoring
"
4137d4932e0c229d0f0846eb6a3a754f95cf7376,JetBrains/intellij-scala,"scalaPlay subproject should not depend on jpsPlugin via scalaPlay2Jps:
compiler-settings module renamed to jpsShared,
+ some classes moved
#SCL-12472
"
a80ec0026516b3ce86d73414d46dde35d6ec0b5b,JetBrains/intellij-scala,"Finished major part of Java->Scala compatibility refactoring. Still there are many of issues, however from now it's much more simple to fix them.
"
d521168814e9f4822052d5b5a60c6253d07b42dc,JetBrains/intellij-scala,"Worksheet: refactoring to allow external run types
"
b9c3e383bcc2f9539cf0a1da5baf0ec43c003ca4,JetBrains/intellij-scala,"Refactoring: new line token was removed. Info about is it semi: Lexer => Parser.
"
1067f89f8c3684af7ae552245820ecd5d364f71a,JetBrains/intellij-scala,"getUseScope refactored for ScalaPsiElements
"
f92b91fa65207f24968f1cd1d96f7455e9f78227,JetBrains/intellij-scala,"ScalaTypeAnnotationSettings moved to settings.annotations, #SCL-11618
"
50aab0b581c339aa2e5b39d0bdf2908f612b6a1a,JetBrains/intellij-scala,"cleanup warnings
some changes with patterns parsing

git-svn-id: ba81b6bd3dd9830eeafada3de57364a31f808d18@14657 59f64563-22e8-0310-8d2c-98a15e1539f2
"
2d9477154a7327e7c23d6331187b3742b457196d,JetBrains/intellij-scala,"ImplicitCollector is refactored for more readability. Logic of search was not changed (hopefully)
"
a443fbd44377f16e37817a3fb8470394fb53f278,JetBrains/intellij-scala,"@Cached annotation refactored to achieve thread safety without locking
#SCL-12300 fixed
"
5f3f0671bafbe612bb380a1bfe9575172d2b0f00,JetBrains/intellij-scala,"ImportsTracker usages refactored
#SCL-12280
"
459d20cf33830aaf005430e4669ab36a336a94c9,JetBrains/intellij-scala,"addMember refactoring,
@nullable Editor => Option[Editor]
starting to write OI test

git-svn-id: ba81b6bd3dd9830eeafada3de57364a31f808d18@19494 59f64563-22e8-0310-8d2c-98a15e1539f2
"
2ee2570103a9067d37eb58130e2690bafa460907,JetBrains/intellij-scala,"Improved performance with disabled decompiler caches.
Possible type inference regressions.
"
40bbf6be7a332e53b2b7a4351b2715e691e65a12,KhronosGroup/SPIRV-Cross,"Build combined dummy samplers for Query functions without sampler as well.

Deal with various query functions which require dummy sampler.
In SPIR-V, separate images are used, but GLSL (even Vulkan GLSL)
requires combined sampler images ...
"
e6dab816b0f549b6e9fbbdd200418beef4a37a86,KhronosGroup/SPIRV-Cross,"Removed names of unused function parameters.
"
db901b622ef3c68261aac61da4ad2a68325a6150,KhronosGroup/SPIRV-Tools,"Move endian utilities to their own file.
"
15529453c0702f1b360c53f5228dc6667f714306,ManiacalLabs/BiblioPixel,"Move log.py to util/.
"
21ab1c54470d041d3c9e52b35bb1d6cd61a4aff3,ManifoldScholar/manifold,"[C] Refactor HasMany component
"
e95a5e104ee81a65c8f7ae97b08ac7c24462eb05,OpenBazaar/openbazaar-go,"Merge branch 'master' into multiwallet

* master: (29 commits)
  Improve README: fix grammar
  [#1204] Remove unused package
  CLEANUP: Fix misspellings.
  Update btcrpcclient link
  improved README
  Correct spelling
  update year in license
  Enable goimports linter rules
  Test for MessageProcessingOrder omissions
  [#1207] Make core/listings_test.go independent of factory package logic
  [#1207] Simplify tests around Listing proto use of allow_alias
  cherry pick dde5b794e268ddfe07f586d30fd54fa1bb3f9850
  Merge pull request #1175 from OpenBazaar/UpdateCountryCodes
  Update protos for ESWATINI/SWAZILAND alias
  Revert ""Merge pull request #1175 from OpenBazaar/UpdateCountryCodes""
  Add TestListingProtobufAlias
  Add test.factory.NewShippingRegionsProtoBufAlias
  The following changes were made to pb/protos/countrycodes.proto
  Cleanup for adding golint
  Update TestValidShippingRegion for error map
  ...

 Conflicts:
	.golangci.yml
	api/jsonapi.go
	cmd/start.go
	core/core.go
	core/disputes.go
	core/utils.go
	mobile/node.go
	test/node.go
	vendor/github.com/ipfs/go-ipfs/namesys/pubsub.go
	vendor/github.com/ipfs/go-ipfs/namesys/routing.go
"
0d90585b6d8c735d136aefd088d9ed26373635c5,OpenBazaar/openbazaar-go,"Add split payout integration test
"
d518c9112b3ff7eaa0ba38eb0d0998f4f228352e,OpenBazaar/openbazaar-go,"Refactor inventory db
"
24d3026f95a613527f4cc8d30c80337e47633abc,OpenLiberty/open-liberty,"Merge pull request #4412 from NottyCode/featureNameCleanup

Feature name cleanup"
3f0423fbdbcf4d0b5526c6567e14d8c7ff097536,OpenLiberty/open-liberty,"Merge pull request #3735 from Arjun-Sharma1/3579-Code-CleanUp

#3579 Refactored code to use KeyValuePair instead of KeyValuePairList"
a47c4f34bbab13e421302281cfd4a17eab76f75f,OpenLiberty/open-liberty,"More refactorings for issue #3456
"
3b730966f19553b961ba07040b1a030357656f9c,OpenLiberty/open-liberty,"Merge pull request #4887 from Azquelt/ft-refactor

Refactor Fault Tolerance CDI integration"
35b8d975739a6ccb3ba176137b6ad389ad8cc0e8,OpenLiberty/open-liberty,"Initial commit: Adding configurable options for HTTP/2, separating connection settings by remote and local http endpoints
"
a0f60b47cf799936adcfaa1a2020216fdcb680a6,OpenLiberty/open-liberty,"Merge pull request #4384 from njr-11/4319-make-jdbc-init-code-more-tolerant-of-driver-class

move jdbc init code towards tolerance of driver class"
1c273c5c61a4916daf303049d9515dadd855eebb,OpenLiberty/open-liberty,"Merge pull request #420 from ewhoch/separate-repo-locals

Separate internal and external maven locals"
e7d66f5b1793a409cc63f7c881a3f83c545ab170,StefReck/Km3-Autoencoder,"Added xyz model, improved plotting script
"
8ffc94a807b555354e513f1aa71069f0129e9037,adamtheturtle/vws-python,"Merge pull request #410 from adamtheturtle/refactor-multi-endpoint-tests

Refactor multi endpoint tests"
bc834c8e23f924f3dc5c0a122cb3031033fbddaa,beautify-web/js-beautify,"Refactor js structure to match python

The two files still differ but they are at least similarly structured.
Also, it is now easier to find the main code path.

This is certainly not a best or final design, just a sufficient one.
"
d378206d0a6e99628ea49d482e736ca9130f4db1,beautify-web/js-beautify,"Generated Test Cleanup
"
823b5cbbb89bc2696d4bfb7651b446c58aaeba7d,berkmancenter/mediacloud,"various optimizations to the crawler: don't page livejournal; streamline Provider _add_pending_downloads and _add_stale_feeds; checksum feeds to avoid querying for stories for feeds that have not changed; mark media sources not to use_pager after the first 100 stories have not found any extra pages

"
dae0441fb001532ab96fec971c7132f3b8cdb7b0,binary-com/binary-static,"fixed selected value issue in dropdown component, moved out symbols css to general css file
"
7036705c6efa7710aee14a336e64aa60be920261,binary-com/binary-static,"es6, module export cleanup, small promise additions
"
d097bea1f474f8f0e2b9a8877a3df4ec98a0364d,binary-com/binary-static,"unify vrtc error design
"
e4dcbc966fcc61a7c88ce1ff1b458f167665056e,binary-com/binary-static,Merge branch 'master' into negar/cleanup
2e8e6ef12f650e9b0a0b0a4c2f58a783d943b6bd,binary-com/binary-static,"clean up get_started
"
d0ff51a08ee065cec56dd3c4fc73db7cd284a367,binary-com/binary-static,"Move all chained `.replace` to template or text.localize
"
c2446152d4f57528a3df879a35355c54a26e148a,binary-com/binary-static,"Optimize mobile view
"
dde66cc1f09e6dfda9f990d51102f6a50847e077,buddhi1980/mandelbulber2,"- Added ""Load settings"" function
- Color pallete can have differevt size
- cParameter class now can decode hexadecimal values for sRGB type
- ""Save settings"" function extended to saving fractal parameters in different sections
- In parameter definition there is added 'parameterType' and 'morphType'
- UI redesigned to use vertical QTabWidget instead of QToolbox (better for low resolution screens)
"
bb4af02b1530aca7f68771ece37462574ffd084f,buddhi1980/mandelbulber2,"all refactoring scripts applied
"
0abaa1a191c92963a86e427fc67dfd0c6cc55323,buddhi1980/mandelbulber2,"RiemannSphereMsltoeIteration
Re-coded eiffies msltoe
added exception catching for origional MBulb (was crashing with hybrids)
"
cd3c521332971a14ffbc2315fedb8acddadf5793,buddhi1980/mandelbulber2,"Removed unnecessary enums and fixed some xyz enums
"
3de85cba8d108f98349eb0f877431cb75134ffaf,concord-consortium/rigse,"refactored component pattern, applied to open_responses

data_collectors still need work"
84a3e5b54b6e0e2f1a42579918a0c81cee5a60f8,concord-consortium/rigse,"use '-' for scope in dom_id for clipboard refactoring 

This allows the clipboard methods to properly reference
models that are scoped (in the embeddables branch):

Example: Embeddable:Xhtml
"
14c2c4a33b98691e6eef7c511a08b239471569b9,firebase/firebase-js-sdk,"Build Refactoring (#653)

* Removing gulp dependency from the default build path

* Updating .gitignore

* @firebase/util Build Refactor

* @firebase/testing Build Refactor

* @firebase/template Build Refactor

* @firebase/storage Build Refactor

* @firebase/polyfill Build Refactor

* @firebase/messaging Build Refactor

* @firebase/logger Build Refactor

* @firebase/functions Build Refactor

* @firebase/database Build Refactor

* @firebase/app Build Refactor

* @firebase/firestore Build Refactor

* @firebase/app version replace

* Fix script rename in @firebase/util

* [AUTOMATED]: Prettier Code Styling

* [AUTOMATED]: License Headers

* Remove unnecessary build artifacts

* Removing unused test files from types-* packages

* [AUTOMATED]: Prettier Code Styling

* firebase Package Build Refactor

* [AUTOMATED]: Prettier Code Styling

* Refactor peerDependencies to properly reference the entire major 0

* Change NPM Publish Concurrency

* Add sourcemaps

* Refactor messaging named export

* Add try-catch block for firebase-app error

* Add package-lock.json to the .gitignore

* Adding a package.json to remove duplicate .d.ts
"
904d6ab16c74446634073d9d57fd5a8cc5588950,flowable/flowable-engine,"ACT-1511: Extract ActivityBehavior and Task/ExecutionListener instantiation in a pluggable factory
"
95f08394ab64721c9f132522cc92445ae0571ce8,flowable/flowable-engine,"ACT-506: Refactoring BPMN implementation classes since it was getting a mess
"
ca4f585f6b87a246f2ecf3a725c4c1fc6046566f,flowable/flowable-engine,"Move to version 6.2.1-SNAPSHOT
"
b6ae6c07ec53a7d415257ba1ba46fd831fea7201,flowable/flowable-engine,"Merge branch 'activiti6' of https://github.com/Activiti/Activiti into activiti6

# By Tijs Rademakers (6) and others
# Via GitHub (2) and others
* 'activiti6' of https://github.com/Activiti/Activiti:
  DB2 version of ProcessInstanceAndVariableQueryTest.testQuery()
  Added expression field + fixed form definition values issue
  Small changes to call activity business key PR
  Add support for setting the business key value on a subprocess started by CallActivity.
  task variable serialization property check #973
  Decision table feature
  Include type information from BPMN model in DataObject instances.
  Wrong column used for check() constraint for DB2
  Wrong column used for check() constraint for DB2
  Remove merge conflict file
  App deployment refactoring
"
7935d406946cf0f0fcc9bb29bde2259e6a1454f7,flowable/flowable-engine,"Merge branch 'activiti6' of https://github.com/Activiti/Activiti into activiti6

# By Tijs Rademakers (6) and Yvo Swillens (6)
# Via Tijs Rademakers (2) and GitHub (1)
* 'activiti6' of https://github.com/Activiti/Activiti:
  Oracle fix for inserting timer jobs
  History level test fix
  Test fixes
  Fix table names
  Added relative path
  Form engine module added
  added DMN REST module
  remove unused liquibase (test) changeset
  moving liquibase schema initialization from test to engine level
  temporary ignoring failing test
  added maven artifact name
  added Activiti DMN modules and dependencies to pom
"
d64fad8b29ae48b87c7f3281de9343707b8931a8,flowable/flowable-engine,"ACT-134: renamed configuration parameters
"
8d838a5f4623f4ebfff257878ff763038c432b5e,flowable/flowable-engine,"Moved to 5.13-SNAPSHOT
"
786f572882782e97ccdad311d5796cc065f97f93,flowable/flowable-engine,"Remove redundant field initialization for class variables (#116)

"
3b1cd5f037e4066df4d465f020c645fdd48c588d,flowable/flowable-engine,"Merge branch 'dev-refactor-schemamanager'

# Conflicts:
#	modules/flowable-http/src/main/java/org/flowable/http/impl/HttpActivityBehaviorImpl.java
"
55b507a486593e7b58fed50b46e56427d39601d3,input-output-hk/daedalus,"Merge pull request #78 from input-output-hk/chore/finish-state-refactorings

Chore/finish state refactorings"
56b64e6a087dabb61280eee626306094df57381b,input-output-hk/daedalus,"Improve safe mode menu items and safe mode detection code
"
db1838826e3f1ec66060402bf8a1d456c117043b,input-output-hk/daedalus,"[DAEF-468] Improve error messages for transaction fees calculation endpoint
"
a8bad62001a8153b8bbac1dbb492880b97f81ae3,input-output-hk/daedalus,Remove redundant nod-log-path flag
3de49e7563a73bd53563acbb92c608f0c19c714c,input-output-hk/daedalus,"Merge pull request #880 from input-output-hk/fix/ddw-241-extend-about-dialog-height

Fix/ddw 241 Extend About dialog height to accommodate increased team members list "
d911104eea2ce2a25c3ff206d602f26f9df56918,input-output-hk/daedalus,"[DEVOPS-634] Remove Travis CI integration

Deprecated in favour of Buildkite.
"
94018f6be60003aef9c9f2ba0d73e8cde0268e75,input-output-hk/daedalus,"[DEVOPS-814] refactor installer

to allow concurrent installs of mainnet, staging and testnet
"
daca40ab549a83b1f126681b84d3f55c4bbaa9a2,johntruckenbrodt/pyroSAR,"[Raster.epsg] removed unnecessary error handling
"
3339b5073d73c9554a9693c0ba676b6fd6fe187a,opensim-org/opensim-core,Clean up printDetailedInfo.
452ff175e270dc3cb392872b41f4e233cabe43fe,opensim-org/opensim-core,"Addressing API inconsistency of when to call Super::finalizeFromProperties. Now it is ALWAYS called first. This was achieved by decoupling the base Component's implementation which provided the ""services"" of 1) wiping out connections and other internal data structures that are dependent on properties and then calling the finalizeFromProperties() on its (sub)components. finalizeFromProperties() was made public and non-virtual and a private base method added to do its addition of resources. A protected virtual extendFinalizeFromProperties() is now what derived Components must implement (not finalizeFromProperties) to extend/specialize new Component types. Super::extendFinalizeFromProperties() is to legitimately give its Super a chance to finalize first without the side-effect of calling subcomponents. Component separately invokes finalizeFromProperties on each of its (sub)components after the Component. Component's finalizeFromProperties() also marks the Component(Object)'s _objectIsUpToDate flag as true.
"
8e3786faf3e05ffec156e4524f700c6024875ca9,opensim-org/opensim-core,"Renamed output actuation to use lowercase
(to be compatible with conventions)
"
10d573d394e738a6cd45b0c3448f295115e0f445,opensim-org/opensim-core,"Addressing API inconsistency of when to call Super::initStateFromProperties. Now it is ALWAYS called first. This was achieved by decoupling the base Component's implementation which invokes initStateFromProperties() on its (sub)components. initStateFromProperties() was made public and non-virtual. A protected virtual extendInitStateFromProperties() is now what derived Components must implement (not initStateFromProperties) to extend for new Component types. Super::extendInitStateFromProperties() is to legitimately give its Super a chance to finalize first without the side-effect of calling subcomponents. Component separately invokes initStateFromProperties on each of its (sub)components after the Component.
"
fd8b8480eab1a3b84095a11ac12656872fd8508d,opensim-org/opensim-core,"const-ing and cleaning up Exceptions
"
7999aa729c394c3d57fb8a719b4aa4d4806db9bc,opensim-org/opensim-core,"Cleanup API for extending realize methods and for allowing users to realize the Component to the desired computational stage.
"
bd759f9e6a1c8997e8b5588deb730c87c53398d9,opensim-org/opensim-core,"Update to testComponents to make it more general and make it automatically test all components for their ""structural"" integrity. That is they can: clone, de/serialize, connect to an aggregate via connectors, add themselves to a system, contribute to state initialization and can do so without leaking more than 1/10% of their initial memory footprint. These can be tightened more once we find the source of these small leaks.

All registered Components can be run through this harness but the majority fail the test. Therefore, a more systematic approach was adopted where Components are being run through by type with Body and Joint being the first to be cleared. An example of an updated PointToPointSpring (Force) is provided for adding additional Components. This is a step forward on issue #66 and is more automated especially since Connectors are handled by creating and adding the dependency of the correct type.

Other changes:
1. Renamed constructStructuralConnector(s) to just constructConnector since a Connector is defined to be a slot/socket to support (structural) dependencies on other Components.
2. CustomJoint was modified so that constructCoordinates no longer makes copies of Coordinates (savedCoordinates). This lead to references to Coordinates being stale.
3. Discovered that RollingOnSurfaceConstraint test was pointless (nothing was being tested) and so a real test that compares to a collection of Simbody constraints was added to testConstraints.

Things to do:
1. Update other Component types so they successfully pass through this harness. Most require their dependencies to be made explicit via Connectors instead of just having property strings for names of the dependencies.
2. Add tests for Inputs and Outputs
3. Test error handling in cases that a Connector or Input cannot be satisfied.
"
88b56b02a6f2c625258eef9baa451c4cdb2fea25,reicast/reicast-emulator,"Remove unnecessary exposed intents, Add toast handler
"
39ead6159b69244ccd1be1796418990fe640fac1,reicast/reicast-emulator,"Merge pull request #699 from reicast/feat/build-defines-cleanup

(Imma merge this, as it's needed for rec-cpp work, but that doesn't mean the discussion is closed)"
1619d856633e49a9d6b8a5e76baa1bdbbff4b76a,reicast/reicast-emulator,"Android: Add dynamic per-player peripheral support

Android: Add a UI shell for implementing peripherals

Android: Replace hardcoded mic assignment with dynamic

Android: Convert mic option to general recording option

Android: Hardcoded VMUs for controller 1

Android: Fix preferences and config for microphone

Android: Add defaults, documentation, and wiring
"
fd4a464ea076dabed71df6388cc5edb968925725,reicast/reicast-emulator,"Squash: Add switch compat to unify layouts with previous APIs

Patch up the layouts to prevent Switch compat view errors

Make the layouts look the same regardless of screen width

Prevent stray view by generating the headings dynamically

Create more flexible borders and reorganize the main view

Finish up the layout changes, Adjust some API requirements
"
cc2fd2e1994b372b20e33f02c7c0a9f77fc64eda,scalableminds/webknossos,"Merge pull request #439 from scalableminds/model-refactoring

Model refactoring"
6cc9cac81e55d9aafcc8f75dc7c03c18b799f4ad,scalableminds/webknossos,"Split datasetConfiguration model from dataset model, Fixes #519
"
b41c930f86840f081515c25eff8d699dedd543e0,scalableminds/webknossos,"#165 refactored save/finish button as backbone.view
"
af30434f2f9aa1d34fb0fa7f8a164b1a8df4789f,scalableminds/webknossos,"merge master --> dev
"
e28ddf62a999ac6f1174a60125610f7212283eb3,scalableminds/webknossos,"merged dev --> ox-1010
"
0655d7c3dcaaa1675a31af11a5c49771813f15c2,scalableminds/webknossos,"OX-34 refactored cube, pullque, some parts of binary
"
e00c1fa7c369e36261b3c29ba504e83427f15712,scalableminds/webknossos,"#269 fix that user-details page always shows the current user; slight refactoring of dashboard info generation; make 'Show finished tasks'-label toggle in dashboard
"
934888f787ff4afc0fc22553c0d440fe7df3c87f,scalableminds/webknossos,"Focused annotations - The Trilogy (#1839)

* changes skeletonTracing to union type

* renamed skeletonTracing to generic tracing

* adds volumetracing actions

* #1752 further reduxify volumetracing, create volumetracing accessors and implement reducers for setMode and toggleMode

* #1752 further reduxify volumetracing, reducers for createCell, setActiveCell + code cleanup

* #1752 finish reduxifying volumetracings, create saga for cell annotation process, use save saga for volumetracings as well, generalize save saga, error fixes, remove unused files

* #1752 fix tests and add first volumetracing saga tests

* #1752 add volumetracing saga annotation and reducer tests, fix inconsistencies with the idCount, don't abort the editVolumeLayerAsync function - use continue instead of break there

* #1752 apply first PR feedback

* #1757 apply first PR feedback

* merged master --> volumetracing-redux #1752

* fix for merge #1752

* #1757 apply PR feedback part 1

* #1757 apply PR feedback part 2

* #1757 apply PR feedback part 3 and strict flow check for volume files

* trigger isosurface updates from saga #1757

* #1757 do not try to update frozen objects, fix read only data layer error

* fixed flow error #1757

* linter, oh my linter #1757

* fix merge errors

* convert backbone attributes in model to proper properties (no pun intended) (#1807)

* move model.mode into store (+ rewiring all listeners) and rename some modes to gain sanity in this mode-confusion (#1807)

* fix tests (#1807)

* satisfy linter (#1807)

* move flightmodeRecording into store (#1807)

* move userBoundingBox into the store so that we have no backbone-listeners on model properties anymore (#1807)

* remove unused import (#1807)

* apply some PR feedback: use connect when possible and change missing viewMode renamings (#1807)

* #1757 introduce assertExists in newer api version as well, fix error in tests that caused them to fail sometimes

* merge redundant userBoundingBoxes (#1807)

* move some store properties into temporaryConfiguration (#1807)

* disinherit the model from backbone (awww yissssss) (#1807)

* make model a singleton (#1807)

* waiting for merge

* minor import fix (#1807)

* re-add initialization of the model (#1807)

* stuff

* fixed errors

* fix api tests for model singleton (#1807)

* make controlMode a proper enum (#1807)

* move controlMode into store (#1807)

* fixed most of the tracing view layout view with and

* fix flow errors (#1807)

* fix lint errors (#1807)

* fix model constructor in a test (#1807)

* little fix for layout

* fixed tracing layout view

* replaced skeletontracing_view with view

* styling for action bar

* refactored input catchers as react component

* restore flight mode switch

* fix arbitrary mode

* correctly initialize volume mode

* fixed and reactified user script modal

* fixed viewport selection and volume mode

* fix lint and flow erros

* added PR feedback

* added PR feedback

* added more PR feedback

* updates deps + fixes InputMouse with event delegation

* fixed tests

* fixes layout issues in TracingLayoutView

* small fix to swap tracing

* Changed libs version

* make sagas restartable, add convenience method to swap a tracing to the controller

* changed libs version

* Focused annotations - Part III (The Return of the Task Swap) (#1837)

* fixes viewForceReload

* make urlManager react to tracing swap (#1807)

* fix some tests (#1807)

* reset skeleton.js if the tracingId changed (#1807)

* fix tests (#1807)

* refactored Model

* fix allowedModes sorting

* fixes linting, flow and tests

* rename Tracing to ServerTracing (#1807)

* take care of converting mode-string to number for url (#1807)

* use TaskType for ServerTracing

* fixes allowedModes

* do not reinstantiate binaries on task hot swap, adapt get next task button to task hot swap (#1807)

* actually get next task on getNextTask button (#1807)

* move applyState into initializeTracing and ensure that we recover from a wrong activeNodeId

* take care of proper layouting for too wide header (#1807)

* fix allowedModes, preferredMode and viewModesView (#1807)

* fix jumping to start position and changing boundingboxes on task swap (#1807)

* fix linting (#1807)

* keep zoom step during hot swap (#1807)

* fix tests (#1807)

* reintroduce red border as a warning in volume mode if too zoomed out (#1807)

* fix tests and flow error (#1807)

* fixes allowedModes

* adds blur to dataset action buttons

* rename unpackMaybe to toNullable (#1807)

* make cubes-array entries non-optional (#1807)

* removes branchpointvideo and synapseannotation modes

* removes Controller.initTimeLimit

* replaces values with constants

* removes UrlManager reference from Controller

* changed boolean names

* add showToast to api (#1807)

* move finishAndGetNextTask code into api (#1807)

* fixed 3D controls #1807

* dispose old GPU buffers when resetting skeletons #1807

* show tree & nodes settings #1807

* do not display segmentation warning if there is no segmentation #1807

* do not display segmentation warning if the view mode doesn't support segmentation #1807

* fix reload bug #1807

* fixes linting
"
c55e5f0d4379afd4509ef393c670d106b8a9e1bf,scalableminds/webknossos,"refactoring names and stuff
"
d86de4c41448b6026f7a1e94aba3ca532f0e3492,scalableminds/webknossos,"Merge branch 'master' of github.com:scalableminds/webknossos into team-structure

* 'master' of github.com:scalableminds/webknossos:
  update flow to 0.63.1, remove unnecessary libdefs, update incompatible libdefs (#2310)
  Preserve certain state properties on some sites during reload and navigation (#2281)
"
5bc42915e155ce2830dd976ddcc64fc6bf4c8404,scalableminds/webknossos,"reorganizes view files
"
6527ec9960d81536aa8593631fccf41d024db648,scalableminds/webknossos,"Merge branch 'redirect-and-refactored-api' of github.com:scalableminds/webknossos into redirect-and-refactored-api
"
7e64f4735437b40e275db4f031940cc075b29867,scalableminds/webknossos,"merge master --> eslint
"
2e744c4268becddfec6f06a367304a0e7fd46fbd,scalableminds/webknossos,"Strictly flow (#1701)

* adds strict flow checking for Plane2d

* adds strict flow checking for Plane2d

* more flow strict

* lots of files strictly flowed

* more strictly flow-typing

* adds more strict flow typing

* fixes tests + flows multipart_data

* fixes TaskSerializer, PolygonFactory + flows Input

* fixes MouseHandlerType

* renames TaskSerializer to AsyncTaskQueue

* implements PR feedback
"
7ece480e55d240c7eb231144908e89dbb713f4d5,scalableminds/webknossos,"merge team-view -> dev
"
56999d96c20c25fc89b72c63e4cda250b6199a18,scalableminds/webknossos,"reorganize packages in datastore (WIP)
"
00107595ddf5c1b0c0f3f47999e5203215d8568a,scalableminds/webknossos,"merged master --> spinner
"
cc72406a6378967c77eee27d287af517a52803e3,scalableminds/webknossos,"Import NML in frontend (#2253)

* add nml serializer to frontend, add button to download all visible trees as nml (#2094)

* correct indentation using tagged template literals (#2094)

* use arrays instead of multiline strings for nml export (#2094)

* show spinner while exporting nml, set correct nml name (#2094)

* add nml parser and import nml functionality (#2094)

* apply PR feedback (#2231)

* uppercase NML (#2231)

* add error handling to nml import, check that trees are connected, performance improvement, default values, loading spinner (#2094)

* add nml import/export unit tests (#2094)

* small fixes (#2094)

* adds check for closed/unclosed XML tags

* pretty please

* handle self-closing tags

* apply PR feedback (#2253)

* Bump saxophone version
"
ac74ffa1d3d0facab258ca21bb432c199910bf86,scalableminds/webknossos,"make setRadius and centerNode functions in api so that they accept a node and default to the active node (#1872)
"
8b9e1227d064ac0b25282c675879f56b021dd6e3,scalableminds/webknossos,"OX-61 moved to 2.10
"
61035656867b84396facdc2fccfc1c9b88af07b9,scalableminds/webknossos,"Merge branch 'fix-e2e-db' of github.com:scalableminds/webknossos into task-loading

* 'fix-e2e-db' of github.com:scalableminds/webknossos: (173 commits)
  on multi-nml upload (not only zip): add file name as prefix to trees
  changed hint for validationaction and added annotation schema because it was missing last time
  update libs version to released one
  show less generic error message if nml dataset is missing
  in task search, invalid mongo ids now lead to empty result instead of exception
  Update libs
  when uploading multiple NMLs (merging them), add respective nml filenames to tree names
  Removed unused collections and fixed annotations in test db
  script for switching between warn and error action #1929
  Scripts to activate validation #1929
  Add the possibility to delete an edge and thereby split a tree (#2088)
  remove user agent tracking, fixes #2095
  Update libs version
  fixes finish&next bug
  Enable interpolation setting in volume mode (#2089)
  allow admins to administrate datasets
  fix compilation
  update libs
  remove jsRoutes from tests
  apply PR feedback, part 1 (#2043)
  ...
"
1825947ee25d2369eff6e7ca7d17a5a7da33ee90,scalableminds/webknossos,"Cleanup for webpack migration
"
6899f128303a96b6464189f560424c2db3a68d2b,scalableminds/webknossos,"Merge pull request #1723 from scalableminds/segmentation-opacity

Make segmentation opacity a dataset setting"
aabf7181a8762102c3f6f42f28b9182d590f2f1b,scalableminds/webknossos,"OX-549 Fix bug and improve code readability
"
f5c54400a7ea677b7db6797f49c9ac29b656c074,scalableminds/webknossos,"OX-34 refactored user, mouse, gui, cameracontroller
"
d176920ab6018f0ab69651e10aadc51a9bd59fdf,scalableminds/webknossos,"Merge branch 'dev' of github.com:scalableminds/oxalis into dev

* 'dev' of github.com:scalableminds/oxalis:
  Cleanup forms and modals, fixes #1016
  Escaping in DatasetAccessView #1013
  Fixes #976
  Fixes #1001
  Fixes #997
  Fixes #996, fixes #995
  Fixed passthrough of response objects in Backbone.ajax #1009
  Fixed hash search in PaginationView
  Fixed Toast messages on request failures
  Fixes team name display #1003 #1013
  improved stil
  added message to task create #1009
  More efficient file-watcher for gulp debug
  Fixed word-case bug
  fixes #1012
  Remove Backbone.Paginator from bower
  Rebuild PaginationCollection, fixes #988
  fixed template error after loads update; fixes #994
  improved dataset team assignment
"
3838421bbd7484e12adff6dd66084ff5ba68a590,scalableminds/webknossos,"Merge branch 'dev' into team-view

* dev:
  #159 On merge, delete tree in model, but deletion on server is implicit
  fixed bootstrap-slider dep
  fixed jquery dependency
  forcing bower install
  updated jquery in bower
  fixed r.js optimization
  extracted app module into separate file
  added absolute path for version file in gulpfile
  added names to gulp watchers
  #194 fixed page number not clickable & refresh on deletion
  #156 use tag
  #156 Rely on master branch for threejs fork
  #156 Fix arbitrary mode
  #156 Use ThreeJS r66, remove devicePixelRatio hacks
"
1d9372440f3717c825d58304147228e6d29a531c,scalableminds/webknossos,"#236 refactored project view as backbone.view
"
ff8341f6b2fe7c1d3a0ef1296b93d0a421ef972a,scalableminds/webknossos,"merged master --> skeletontracing-redux #1709
"
6f76d8d4284450e59e9443155efe2dd874043fd1,signumsoftware/framework,"rename EnumType<T>.niceName(value) to niceToString
"
c329b84930bcf946052a09f1ad38586a598e8aa9,AmpersandTarski/ampersand,"Rename method name
"
8370b31de00f961b4173cf30cc02c95e286ea36f,AmpersandTarski/ampersand,"Moved population from Declaration to Relation. Now the A-Context contains a table of all populations. There still is a problem in the creation of Relation (see Rule.hs, line 95). 

git-svn-id: 770e96c46633b1540507e2056939ca02d914e15a@807 8b35ee93-31c1-4acc-b283-6c2059e6c15c
"
9b51d81c237ac18344e9e608d21fd15a47c5cf38,AmpersandTarski/ampersand,"Remove obsolete switch --newFrontend
"
e64955afaec0f549a2afc95640ee035904d9550a,AmpersandTarski/ampersand,"Cleaned up some warnings. Also an experiment with the .cabal file.

git-svn-id: 770e96c46633b1540507e2056939ca02d914e15a@299 8b35ee93-31c1-4acc-b283-6c2059e6c15c
"
7c5d0bba383150365a699f4a17be8c4af772aaa9,AmpersandTarski/ampersand,"Further removal of imports of Prelude and cleaning up
"
d877b4bfc9110077b4060bbad08c085d3b16b43c,AmpersandTarski/ampersand,"Simplifying part of the expressions
"
613a4cd04105db1fe329ae1f6ef2f5b87ae846a2,AmpersandTarski/ampersand,"Merge pull request #443 from AmpersandTarski/less_queries



* Bugfix issue with missing roles (when login is enabled) due to urlencoded atoms

* Get all columns from query instead of only the tgt column

* Add query data to Atom class

* Add parentIfcCol to InterfaceObject class

* Refactor getTgtAtoms function. It now returns Atoms instead of array of tgtatom ids

* Enable handling of customized queries

* Add variable and functions to Concept class to cache existing atoms

* Move check if atom exists from Database class to Atom class

* Don't use addAtomToConcept function from database directly. Use Atom class function instead

* Rename src placeholder in query (now in line with _SESSION placeholder)

* Use query with src placeholder when possible

* Add single quotes around src atom

* Changed generation of quotes from php side to haskell side. (Issue #426)

* Minor stuff

* Adding placeholder queries covering 2 or more tables.

* Add null to exactly one of the queries that are output in interfaces.json

* Checks for getting query data

* Enable optimization of VIEWs.

* Remove warning in log of unused conjuncts. Add report in admin api instead

* minor warnings

* Write version info to sql-debug file

* Write broad query to sql-debug file

* Added extra columns to query in JSON

* Fixed fatal 911

* move excapeIdentifier to String.hs

* Use ifc_ for the name of the field in the query

* query field in JSON is now allways populated, with or without placeholder(s)

* Releasenotes

* Add prefix 'ifc_' to get query data. Also return Exception 1001 if column does not exists

* Remove unused parentIfc col and queryWithPlaceholder stuff (was WIP)

* Move query building to separate function (replacing _SRCATOM placeholder)

* Refactor getTgtAtoms() function according to previous commits

* Added missing return statement

* Add query improvements in debug log

* Missing space

* More database query improvement logging

* WIP

* Wip

* Remove old bseSrc and bseTrg

* rename

* This should do the job.

* undo a change in the optimized case for intersect with a flipped expression, because it was wrong.

* Oops

* fixed special case with ONE

* Fix missing qData exception

* bugfix

* Clean up obsolete stuff

* Fixed a bug with Union expressions

* Minor: Better generation of SQL for cases like `(r \/ s)~`

* Move !isIdent check to isProp() function

* Rename special case _NEW_ to _NEW (without trailing underscore). Consistent with other special cases, like _SESSION and _SRCATOM

* Bugfix

* Bugfix

* Bugfix
"
a8e7c7332ae072da742399e1ce7da3bb33ecac54,AmpersandTarski/ampersand,"Code refactor for P2A_Converters:
- Introduced ""data Type"", which can be either a built-in type (TType) or a Concept. This mechanism is not yet 'used', in the sense that this refactor should not yet change anything.
- Made the ""Guarded"" into a monad. This makes some of the error messages come out sequentially, instead of in parallel. This should only be a minor problem to some users, and we can fix this again in GHC 8.0.
"
8b5be7f6f30ae0251e425b23b4a626dd8dae5e38,AmpersandTarski/ampersand,"Fixes #328

* Fix_#328:
  Add 440 as custom code to Slim framework
  Redirect to home for 401 and 440 error code
  Remove try-catch block for session constructor
  Redirect session timeout (440) errors to login page
  Throw exception when session is expired AND login functionality is enabled
  Simplify error message when interface is not accessible by current session
"
de22088ecdf62e908bcdd7055600ab4e10434062,AnhNhan/discord-buddy-bot,"clean-up
"
16f6d1daed8316a8d38b8a7beeab7c4ab2e95e54,Aptoide/aptoide-client-v8,"extract base body decorator implementation from data provider module in order to access account specific information
"
fe0738a7dc7a0312bd94975497ea0adb3dd646cf,Aptoide/aptoide-client-v8,"Merge pull request #555 from Aptoide/feature/ASV-517_collapsing-appview

[Feature/ASV-517] collapsing appview"
837803e9b9f01381861727bc04b118f5be88d5e0,Aptoide/aptoide-client-v8,"[ASV-511] refactor: move navigation tracker inside the Aptoide Analytics lib
"
360ed56eb300578beb4635a1a153ec8358176c13,Aptoide/aptoide-client-v8,"Merge branch 'dev' of https://github.com/Aptoide/aptoide-client-v8 into refactor/AN-2094-dagger_second
"
b964d54c34921dade009690500d142ae11ea9c2a,Aptoide/aptoide-client-v8,"[AN-1332]¬†Refactoring navigation in the AddressBook to accomodate new changes.
"
6774fae82d485cdf0d27f820248bbe2dade49fd1,Aptoide/aptoide-client-v8,"Merge pull request #426 from Aptoide/refactor/AN-2231-migrate-sessionAndFirstLaunchAnalytics

Refactor/an 2231 migrate session and first launch analytics"
b6219b3a275d06dc33b95ac501ace39c5e228d5b,Aptoide/aptoide-client-v8,"Renamed ShareAppsAndroid module.
"
8f9e6989c6a03fee30ad011ea0b1ff5d9e9be1e7,Aptoide/aptoide-client-v8,"[ASV-399] refactor: moving InstallManager dependency to the bundlesmapper instead of passing as argument on the map method in the bundlesdatasource service; Merge remote-tracking branch 'origin/dev' into feature/ASV-399_filter-appc-ads-by-previous-installed
"
9eceab4b8642a4e17ca0fceb08e4d5cee6c46ed2,Aptoide/aptoide-client-v8,"Merge remote-tracking branch 'origin/dev' into refactor/AN-2155-FC-analytics
"
e121a69126a01c094add77e4079715252e8681f7,Aptoide/aptoide-client-v8,"Merge branch 'develop' into feature/missing_app_view_widgets

* develop: (75 commits)
  updated vanilla build script
  * using incremental build for nightly build
  * removed jack, since it's not working properly
  Added Top Stores.
  * using multidex thought it's not desirable. proguard not working properly
  Wed Jun 29 01:30:40 WEST 2016
  Fixed endless scroll bug.
  method to save on database is now executed on worker thread
  added interfaces to define download manager settings
  Observable now send the Download object instead of the integer object
  * removed multidex * using pro-guard to reduce code and avoid multidex
  use real application instead of hardcoded one for get app button in user timeline
  improve endless scroll listener and obervable and display snackbar when error occur in user timeline endless scroll
  implement endless timeline scroll
  update timeline when user pulls to refresh
  remove unused resources and classes from vanilla
  expose offset in get user timeline web service factory method
  create factory methods to decouple web service model from displayables for social timeline
  update app update and article design font style
  add update app icon
  ...

# Conflicts:
#	.idea/codeStyleSettings.xml
#	database/build.gradle
#	database/src/main/java/cm/aptoide/pt/database/Database.java
#	database/src/main/java/cm/aptoide/pt/database/RealmDatabaseMigration.java
#	model/src/main/res/values/deprecated_strings.xml
#	networkclient/src/main/java/cm/aptoide/pt/networkclient/okhttp/OkHttpClientFactory.java
#	networkclient/src/main/java/cm/aptoide/pt/networkclient/okhttp/cache/Sha1KeyAlgorithm.java
#	utils/src/main/java/cm/aptoide/pt/utils/AptoideUtils.java
#	v8engine/build.gradle
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/adapters/ScreenshotsAdapter.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/fragment/implementations/AppViewFragment.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/view/recycler/displayable/DisplayablesFactory.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/view/recycler/widget/implementations/appView/AppViewDescriptionWidget.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/view/recycler/widget/implementations/appView/AppViewDeveloperWidget.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/view/recycler/widget/implementations/appView/AppViewInstallWidget.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/view/recycler/widget/implementations/appView/AppViewSubscriptionWidget.java
#	v8engine/src/main/res/layout/fragment_app_view.xml
#	v8engine/src/main/res/layout/partial_app_view_collapsing_toolbar.xml
#	v8engine/src/main/res/values/strings.xml
"
ef5dcc0f001c2a15a83a5e7e5ea28c79735dc3dd,Aptoide/aptoide-client-v8,"Merge pull request #90 from Aptoide/refactor/payments

Refactor/payments"
df0d89484c25329ca85f6737073c3b886b95829b,Aptoide/aptoide-client-v8,"Merge branch 'dev' of https://github.com/Aptoide/aptoide-client-v8 into refactor/AN-2094-dagger_second
"
f5139ef8d91133f8e1fc077ad47bff46e37dcd53,Aptoide/aptoide-client-v8,"[AptoideEvents/AN-954] - Refactor to share code between download event and install event
"
9cbbd619baefcc65256d217be4baa62ddc43f4d1,Aptoide/aptoide-client-v8,"Merge branch 'release/v8.0.1.0' into hotfix/AN-859_Refresh_token_not_being_migrated

* release/v8.0.1.0:
  [AN-862] Updated Google Play Services dependencys
  app name was updated
  Delete unused files
  [AN-858] Fix
  [AN-861] - Unable to reproduce error refactor: only using RxJava when there is the need for it.
  Fixed storeCredentials bug.
  [AN-852] Login Activity Header
"
3ea0ff31e91f5931e2fc9f7cd7bc1995c8da41c1,Aptoide/aptoide-client-v8,"[ASV-998] Renamed DownloadManager to OldDownloadManager
"
b4176f80249403bfcb1b0173ae5409e6d1ec1ef1,Aptoide/aptoide-client-v8,"Merge branch 'dev' into hotfix/AN-833_clean_user_agent_email_on_logout

* dev: (21 commits)
  app name was updated
  Delete unused files
  [AN-858] Fix
  move billing permission and service declaration to vanilla's manifest in order to change application id according to build flavor allowing multiple application's flavor simultaneously installed
  rename Aptoide to Vanilla in dev and prod flavors
  Fixed storeCredentials bug.
  [AN-854] Updates List is not updated with server info (System Apps) fix: storing new updates retrieved from the server while keeping the local excluded updates
  Changed Aptoide Application name to Vanilla.
  OEM AO-125 Send feedback custom email
  Removed Vote from App.java.
  [AN-838] Fix - Store theme is now applied in read all comments and read more (app description).
  [AN-839] - FacebookSDK events added for devRelease builds only.
  [AN-704] Rollback list should have the vername of the installed version fixed: showing Rollback version name in Rollback list
  [AN-841] Try to login when ws timeout (createUser)
  saving versionName info in rollback to show that info properly in label. not finished.
  versionName ""8.0.1.0""
  [Auto-Update/AN-851] -  Auto-update fix and refactored to use new installers
  fixed filter conditional in Installed apps list and added observeOn for the current thread handling the results
  make sure store database obervable unsubscribes properly when fragment's view is destroyed
  Removed custom timeout from GetAdsRequest.java.
  ...

# Conflicts:
#	dataprovider/src/main/java/cm/aptoide/pt/dataprovider/ws/v2/aptwords/GetAdsRequest.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/fragment/implementations/UpdatesFragment.java
"
1ae11426d70973589b1976ea8006eabae7eb784f,Aptoide/aptoide-client-v8,"Merge pull request #425 from Aptoide/refactor/AN-2231-migrate-download-analytics

Refactor/an 2231 migrate download analytics"
ee143b433453b8ec00f64bc105384cfbbab0f11d,Aptoide/aptoide-client-v8,"Merge branch 'develop' into feature/missing_app_view_widgets

* develop:
  minor db fix and code in the Realm migration script
  added database var to all fragments that extend basefragment
  using realm in the project
  buggy db. realm not compiling db objects properly
  added save method
  Updated rxjava version.
  Fixed bug on refresh token v7.
  updates in db models
  added deprecated annotation
  added DB objects as realm

# Conflicts:
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/MainActivityFragment.java
"
8696e8748c48a55e034bb9e54e9f63723ee9081f,Aptoide/aptoide-client-v8,"Merge branch 'develop' into feature/missing_app_view_widgets

* develop: (36 commits)
  Wed Jun  8 01:30:08 WEST 2016
  Added EndlessRecyclerOnScrollListener.java. Added Endless to Search and ListApps.
  Added OffsetInterface.java to allow easier endless integration.
  Updated com.android.tools.build to 2.1.2.
  Finished search pager logic.
  Added SearchWidget.java bindings.
  Added search suggestions.
  Added GlobalSearchFragment.java.
  Changed realm primaryKeys.
  Tue Jun  7 01:29:48 WEST 2016
  fixed app bricks not showing properly
  minor code refactoring
  added toolbar to settings view with integrated back button
  Mon Jun  6 01:29:41 WEST 2016
  Sun Jun  5 01:29:33 WEST 2016
  Sat Jun  4 01:29:42 WEST 2016
  Fri Jun  3 01:29:32 WEST 2016
  * changes in the db migration script * fixed incorrect layout properties in the app view fragment
  Thu Jun  2 01:29:36 WEST 2016
  Added trusted flag to ListSearchAppsRequest.java.
  ...

# Conflicts:
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/view/recycler/displayable/DisplayablesFactory.java
"
085d3cae7101be647cf460ecc252461eebdb01a4,Aptoide/aptoide-client-v8,"move sync package out of payment package so classes can be reused by new push notification logic
"
1387e1f9f5682ff02a5505a307822372a97ddfc0,Aptoide/aptoide-client-v8,"[AN-1192] [fabric] ids repository concurrent exception
fix:
* minor name refactoring and interface organization
* re-organized methods to generate all the different necessary ids
* added ""synchronized"" to all id generating methods since they are called from multiple points in code without any pre-defined contract
"
63b246909d56bcba52d2bf185790c9624016158d,Aptoide/aptoide-client-v8,"Merge branch 'dev' into hotfix/AN-803_Delete_DeprecatedDatabase_class

* dev: (64 commits)
  [AN-607] - Fixed Drawer header icon.
  [AN-731] Updated Libs except Realm and RxLifecycle.
  [AN-791] Fixed floating action button disappearing on orientation changed.
  Fix to the latest commit: 9519030c722b4041fe70791117c45ceb11c96f1a   mistake on the layout changes.
  Fixing layout api 17- Completed download row play button was not aligned properly
  [AN-768] Fixed a bug: user no longer gets stuck in the loading progress when credentials dialog is dissmissed inside a private store.
  [GradleUpdate] - Gradle updated to com.android.tools.build:gradle:2.2.1
  Removed getType() from Displayable.java.
  Added getConfig() to Displayable.java.
  Removed Displayable.java constructor with fixedPerLineCount argument.
  Removed setter for defaultPerLineCount, replaced with setFullRow() when needed.
  Removed unused classes.
  Added DisplayableWidgetMapping instance to V8Engine.java.
  Migrates DisplayableType to DisplayableWidgetMapping.java.
  Removed unused methods.
  [CompileNokeys] - Compile the project without any keys
  Migrated calls to fragments newInstance to FragmentProvider.
  Added Fragments newInstance in FragmentProviderImpl class.
  newSettingsFragment now returns Fragment.
  Minor bug fix in FragmentProvider.java.
  ...

# Conflicts:
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/fragment/implementations/HomeFragment.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/util/referrer/ReferrerUtils.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/view/recycler/widget/implementations/appView/AppViewStoreWidget.java
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/view/recycler/widget/implementations/grid/UpdateWidget.java
"
f749c489326c544c56cca0e543e0bc03eacc612f,Aptoide/aptoide-client-v8,"Merge branch 'develop' into feature/missing_app_view_widgets

* develop:
  corrected gradle to allow the app to add accounts(login wasn't working)
  Added missing drawable.
  Cleaned unused methods and variables.
  Fixed strange behaviour.
  Created method that returns last fragment on backstack. Changed replacefragmentv4 in order to have a more ""obvious"" fragment name. Finisehd implementing theme cases in v8.
  Added the send feedback screen.
  Pausing all downloads are now executed by a worker thread
  Fixed limit bug.
  Implemented theme in Appview. Affects CollapsingToolbar.
  Added store theme to GridHeaderWidget.java.
  Added themes, drawables and styles for widgets. Changed Manifest not to include default Theme.
  Added Util class for themes.
  Added theme to StoreFragment call on GridStoreWidget. Added theme to StoreFragment.
  Updated StoreThemeEnums with theme resource and added extra method to return this.

# Conflicts:
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/util/FragmentUtils.java
#	v8engine/src/main/res/values/strings.xml
#	v8engine/src/main/res/values/styles.xml
"
6e871995b943c473cb2e52c8784fad304320b4b0,Aptoide/aptoide-client-v8,"Merge branch 'hotfix/AN-861_user_settings_change_crash' into release/v8.0.1.0

* hotfix/AN-861_user_settings_change_crash:
  [AN-861] - Unable to reproduce error refactor: only using RxJava when there is the need for it.
"
f9346e569c639761888266ecca9d65b6d86c97fc,Aptoide/aptoide-client-v8,"- remove unnecessary methods, classes and parameters
- use multipart body interceptor for multipart requests and pass request specific data as parameters
- get user request refresh parameter should use same value as bypass parameter for consistency
"
d38118afb3e06b1a8c702d931a98c1057b1942bc,Aptoide/aptoide-client-v8,"[ASV-1115] Renamed NewAppViewFragment to AppViewFragment. Undo deletion of needed file
"
091dcf6dea3a28c8a3638591a3ded750ac3df371,Aptoide/aptoide-client-v8,"creating a broken commit due to increasing merges of code from release/v8.2.0.0. apps timeline is somewhat broken since it's an async problem.
"
b2509c0522260283ce02df95c7b10b77464c1719,Aptoide/aptoide-client-v8,"split payment repository into authorization and confirmation repositories
"
4b383ad7d3d637e822a1e0df040db1578155b77d,FriendsOfPHP/PHP-CS-Fixer,"minor #1134 Token::isWhitespace - simplify interface (keradus)

This PR was squashed before being merged into the 2.0-dev branch (closes #1134).

Discussion
----------

Token::isWhitespace - simplify interface

Commits
-------

bf2f6e7 Token::isWhitespace - simplify interface
"
ac828b6a399ab27b00fa548295d19ccd89daf3f2,FriendsOfPHP/PHP-CS-Fixer,"Risky rules cleanup
"
202bf8e28d8fd2fd3ffaafc403e03a7ea01821ce,FriendsOfPHP/PHP-CS-Fixer,"feature #599 Fix `fix` command to handle `--fixers` option when contains extra and excluding fixers (fivestar, keradus)

This PR was merged into the 1.0.x-dev branch.

Discussion
----------

Fix `fix` command to handle `--fixers` option when contains extra and excluding fixers

Currently, when `--fixers` option contains extra and excluding mixed filters such as `-eol_ending,concat_with_spaces`, excluding filter will be enabled, however, extra filter will not be enabled.

This PR fixes this behavior, so enable both type filters when mixed filters given.

----

`sample.php`

```php
<?php
echo 'foo'.'bar', PHP_EOL;

```

Current version: (`concat_with_spaces` is not enabled)

```
% php-cs-fixer fix -v --diff --fixers=""-eol_ending,concat_with_spaces"" --dry-run sample.php
   1) /home/fivestar/sample.php (eof_ending)
      ---------- begin diff ----------
      --- Original
      +++ New
      @@ @@
       <?php
       echo 'foo'.'bar', PHP_EOL;

      -

      ---------- end diff ----------
```

Fixed version: (`concat_with_spaces` is enabled)

```
% php-cs-fixer fix -v --diff --fixers=""-eol_ending,concat_with_spaces"" --dry-run sample.php
   1) /home/fivestar/sample.php (eof_ending, concat_with_spaces)
      ---------- begin diff ----------
      --- Original
      +++ New
      @@ @@
       <?php
      -echo 'foo'.'bar', PHP_EOL;
      -
      +echo 'foo' . 'bar', PHP_EOL;

      ---------- end diff ----------
```

Commits
-------

23c07bb FixersResolver - make class more state aware and enhance it's tests
e75c985 Fix README and some codes.
6876726 FixersResolver - simplify code
f3c966f Fix `fix` command to handle `--fixers` option when contains include and excluding fixers
"
7a981b0920a40dc94f4872dfad495a325f941b15,UPDDI/mps-database-server,"Improve list view for readouts
"
bc9ecbd87a2d9a29c2f8888c5091df29a3eb8b41,autoserver-org/autoserver,"Move basic validation upper in the middleware stack
"
f18830b0de6794d7f3bff1453fda3783d4944f41,autoserver-org/autoserver,"Refactoring
"
7a9ba79a5d3687cee25aa8ad7103823b2852b6ef,autoserver-org/autoserver,"Refactoring
"
c81807ed8a0a97ab36fa3846d942e4f92f2eb8c1,autoserver-org/autoserver,"Refactor addLog()
"
0d4dd8cc60cc3c0ad44a990685d415ca2158c5cd,autoserver-org/autoserver,"Rename $schema -> version
"
44c03e2d5f0dd544242aadad3b32ddfcbd3933d4,bioconda/bioconda-recipes,"merge bulk into master (#11728)

* update mzr as a test

* Begin building for R 3.5.1 (#11252)

* Bump everything for R 3.5.1

* Fix most of the linting issues

* Update blacklist

* Revert ""Fix most of the linting issues""

This reverts commit a271e50f4b86f4ee76d1148bf78e6617da1b7cc5.

* should_not_use_fn

* More fixes

* Fix incorrect yaml

* Should really fix the linting blacklist stuff

* Fix many recipes

* Fix some linting

* Fix r-wicket

* Update derfinder

* Pin to a given bioconductor release.

* Add missing packages

* Restore identifiers to bioconductor packages

* Restore extra information to R packages

* Update R bulk (#11283)

* fixed incorrect doi of publication (#11175)

* Added recipe for kinSimRiboswitch (#10838)

Added recipe for kinSimRiboswitch, a pipeline for simulating the folding
kinetics of RNA switches.

* update multiqc-bcbio (#11187)

* Add recipe for PopDel (#11181)

* Add recipe for PopDel

* Add clang and clangxx to build config

* update seqbuster (#11190)

* update seqbuster

* fix build

* fix test

* Update pyseer to 1.1.2 (#11172)

* bump sourmash (#11197)

* Update BASIC to v1.4.1 (#11195)

* Update BASIC to v1.4.1

* Trigger circleci

* Fix build number

* Update nf-core-1.2 (#11191)

* Update nf-core-1.2

* Update build script

* Update to InterMine 1.11.0 (#11182)

* Update meta.yaml

* Update meta.yaml

* Update meta.yaml

* Add tinyfasta-0.1.0 (#11177)

* Add tinyfasta

* Update build script

* Fix structure of build section

* Bumping snippy  (#11198)

* Remove older version

* Bump snippy

* VEP: bump major version (#11201)

* VEP: bump major version

* VEP: bumped plugin major version

* VEP: update plugin install

Download and install all plugin modules, instead of just a selection

* Update: PureCN to latest devel (1.11.13); wrapper scripts (#11200)

* Update: PureCN to latest devel (1.11.13); wrapper scripts

PureCN development (https://github.com/lima1/PureCN) has several
improvements over the BioC 3.6 release for handling multiple VCF input
types, and is back compatible with R 3.4.1 so still builds cleanly
with two new dependencies.

Also exposes PureCN wrapper scripts for running from the command line.
Prefixes ambiguous scripts with PureCN_.

* Try pinning to 3.4 to avoid 3.5.1 builds which we don't want yet

* add cassiopee release 1.0.9 (#11168)

* add cassiopee release 1.0.9

* update to conda build 3

* remove old version backup and use sha256 for source

* Bump abeona version to 0.26.0 (#11202)

* Bump abeona version to 0.24.0

* Bump abeona version to 0.26.0

* Update LexMapr to v0.1.2 (#11192)

* Update LexMapr to v0.1.2

* Add rdflib dep

* Update svtyper to 0.7.0 (#11196)

* Update svtyper to 0.7.0

* Add recipe for perl-gtdbtk (#11194)

* Add recipe for perl-gtdbtk

* New recipe for RFMix (#11205)

* New recipe for RFMix
* updated version number information
* updated version number information
* updated version number information

* initial purge_haplotigs commit (#11049)

* initial purge_haplotigs commit
* bioconda revisions, updating test commands to run the pipeline on the test dataset
* rolling back test commands

* Add recipe for fsm-lite (#11209)

* Add recipe for fsm-lite
* Add prefix to make
* Remove v from version string

* Updated reparation_blast to version v.1.0.7 (#11210)

* Update sambamba to 0.6.8 (#11212)

* Bump sambamba to 0.6.8

* It's somewhat annoying that missing_hash is thrown even if uses_git_url is specified.

* Set some environment variables

* The compiled binary is in a different place now

* ldc provides some libraries that are linked against.

* mtbseq: update recipe (#11110)

* changed download location/add test

* remove test

* Confindr (#11217)

* Update confindr to 0.4.2

* Fix typo in specifying version of pysam

* Update Genenotebook to v0.1.4 (#11218)

* genenotebook recipe

* About

* Package name

* License

* sha256sum

* Update build.sh

* Make bin dir

* Change ln to cp

* New symlink strategy

* Build from prebundled tarball

* genenotebook v0.1.2

* version fix

* retry

* fix

* build number

* genenotebook v0.1.3

* restore build procedure

* Fix summary

* updating to 0.1.3 (#11221)

* sartools1.6.6 (#11222)

* Perl bio automatedannotation (#11216)

* Initial recipe for Bio-AutomatedAnnotation

* Change URL

* Run cpanm tests

* Temporarily set HOME

* Use cpan version instead

* Add more depencencies

* Set bioperl version

* unset bioperl version, add bioperl-run

* New release including version in modules

* Remove comments

* build -> host

* Upgrade r-biodb to v1.1.2. (#11213)

* Upgrade r-biodb to v1.1.2.
* Remove old versions of r-biodb.
* Comment out libgfortran.

* PeptideShaker: updated to version 1.16.30 & SearchGUI: updated to version 3.3.5 (#11215)

* PeptideShaker: updated to version 1.16.30

- Bugfix: HOME was still being used when folder with customised reports was specified.
- Bugfix: Made it possible to use the MzidCLI options directly on the PeptideShakerCLI command line.

* SearchGUI: updated to version 3.3.5.

- BUG FIX: Cleanup of the temp path options when used as options for the other command lines.
- FEATURE IMPROVEMENT: Updated Comet to 2018.01 rev. 2.
- LIBRARY UPDATE: Updated utilities to version 4.12.8.

* Update meta.yaml (#11227)

* Svtools 0.4.0 (#11208)

* Remove directories for old svtools versions

* Update svtools to v0.4.0

* Move build number back to 0

* Anvio 52 (#11230)

* Incrementing version to 5.2. Splitting out anvio-minimal package to just install the pip package. The anvio package will install it and all the most likely companion software.

* Remove cgat-scripts from blacklist. (#11228)

* Add new formula: bazam 1.0.1¬† (#11229)

* Update gatk4 to 4.0.10.0 (#11224)

* Add recipe for gtdbtk 0.1.3 (#11211)

* Add recipe for gtdbtk

* Added initial htstream recipe (#11113)

* HTStream is a fast, quality control pipeline for Hight Throughput Sequencing data. The difference between HTStream and other pipelines is that HTStreams uses a tab delimited fastq format which allows for streaming from application to application. This streaming creates some awesome efficiencies when processing HTS data.

* DeepTools 3.1.3 (#11226)

* PacBio: Update `pbmm2` to version 0.10.0 (#11225)

* fastqc: update to version 0.11.8 (#11214)

* fastqc: update to version 0.11.8

* Update meta.yaml

* Phame (#11223)

* mac recipe and added bioperl

*  changing bill number

* added no osx

* adding new version

* removed separate recipe for mac, dont need it

* now running same recipe for mac and linux

* fixed the way fasttrees version was being parsed

* minor change test

* adding detailed description

* restaging the build number

* new version

* Make sure to use bioperl and perl 5.26

* Updated ngs-bits to version 2018_10 (#11235)

* PacBio: Update `pbsv2` to version 2.0.2 (#11236)

* Update VSEARCH to 2.8.5 (#11239)

* Fix shorah recipe and remove from blacklist. (#11241)

* Fix shorah recipe and remove from blacklist.

* Fix blas variant.

* Remove imports from tests.

* unicycler 0.4.7 (#11240)

* unicycler 0.4.7

* unicycler: Work around ValueError: invalid

Unicycler thinks the terminal has 0 columns and produces this error:
File ""/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/textwrap.py"", line 248, in _wrap_chunks
raise ValueError(""invalid width %r (must be > 0)"" % self.width)
ValueError: invalid width -5 (must be > 0)

* Octopus: update to 0.5.1-beta (#11244)

* New: PURPLE SV caller; Update: VarDictJava (1.5.6), PureCN (#11247)

- PURPLE SV and heterogeneity caller for somatic tumor/normal samples.
- VarDictJava -- 1.5.6 release with fixes for SV calling
- PureCN -- add signature dependency and update with fixes for test
  samples.

* Dinucleotide patterns analysis tools v1.0 (#11245)

* Dinucleotide patterns analysis tools v1.0

* Lets try it, it seems to work locally for me.

* Enable SpoTyping_plot.r (#11248)

* rerun again (#11233)

* rerun again

* Update meta.yaml

* Delete build.sh

* Update segway dependency optbuild to 0.2 (#10459)

* Update segway dependency optbuild to 0.2

* Update build and architecture requirements for optbuild 0.2

* Add six as a dependency to the optbuild recipe

* Dinucleotide patterns analysis tools v1. / Add prefix dnp- to the package names (#11249)

* Add prefix dnp- to the package names

* Update build.sh

* Update build.sh

* Bump beast version to 1.10.2 (#11250)

* add maxquant (#11253)

* add mayquant

* relax tests

* PacBio: Update `pbmm2` to version 0.10.1 (#11256)

* PacBio: Update `pbmm2` to version 0.10.1-1 (#11257)

* remove xsv recipe (#11259)

* add blast dependency (#11258)

* Added riborex recipe (#11251)

* Added riborex recipe

* Relaxed version constraints

* Pinned r-core for fdr tools

* fixed the r-base stuff upstream

* Update meta.yaml

* fix graphprot (#11234)

* increase build number

* remove from blacklist

* use cxx instead of c

* move coreutoils to build section

* set additional paths

* patch makefile

* blind try

* update patch

* explicitely copy from src_dir

* update deprecated prefix variable

* Revert ""update deprecated prefix variable""

This reverts commit 2559439a76ec60964f6bddd743b27171e8f91b4d.

* update deprecated prefix variable

* try moving to host section

* Bump mash (#11264)

* Add fmlrc (#11265)

* Add fmlrc

* add doi

* PacBio: Update pb-falcon to 0.2.4. (#11266)

* Add kopt recipe (#11269)

* Genomepy 0.5.2 (#11267)

* release 0.5.2 of genomepy

* trigger new build

* remove genomepy from blacklist

* locale for osx

* updated locale test

* PacBio: Update pb-assembly to 0.0.2. Bumped the pinned version for pb-falcon. (#11275)

* Update mmseqs2 recipe to new release 6-f5a1c (#11272)

* Update yacrd to version 0.4.1 (#11273)

* Add scprep (#11270)

* Add scprep

* All of these should not be needed as host dep

* Metawrap preqs2 (#11242)

* fixed issues

* fixed issues

* added tests

* fixed tab

* gemma 0.98 (#11254)

* gemma 0.98

* gemma 0.98

Leave gsl and zlib out of runtime dependencies

* Add DCA recipe (#11274)

* Add DCA recipe

* add noarch and doi

* remove skip

* Fix a bunch of packages that are actually in bioconductor and try to fix bioconductor-rhtslib

* Various fixes for bulk and trigger a rebuild (#11313)

* Various fixes, at least 4 packages (and their dependencies) should still fail (#11320)

* A few fixes, remove a package from the blacklist since it prevents trumicounts from building. (#11336)

* Fix various recipes (#11354)

* Fix various recipes

* Fix more recipes

* Various CRAN package fixes, since they all lack license files (#11372)

* Various CRAN package fixes, since they all lack license files

* Fix the r-dartr recipe

* There is a light at the end of the tunnel (#11381)

* There is a light at the end of the tunnel

* Licenses no longer exist

* [BULK] Fixes for R/Bioconductor packages (#11406)

* Require `r-base >=3.5` for some packages

* Fix various CRAN packages lacking license file

* Add missing libnetcdf requirement to bioconductor-mzr

* Remove r-alakazam (moved to conda-forge)

Fix linting issue:
```
recipes/r-alakazam	in_other_channels	{'exists_in_channels': {'conda-forge'}, 'fix': 'consider deprecating'}	{'conda-forge'}	consider deprecating
```

* [BULK] Many R 3.5 only packages (#11410)

* [BULK] Bulk update 191018b (#11419)

* update mzr as a test

* Begin building for R 3.5.1 (#11252)

* Bump everything for R 3.5.1

* Fix most of the linting issues

* Update blacklist

* Revert ""Fix most of the linting issues""

This reverts commit a271e50f4b86f4ee76d1148bf78e6617da1b7cc5.

* should_not_use_fn

* More fixes

* Fix incorrect yaml

* Should really fix the linting blacklist stuff

* Fix many recipes

* Fix some linting

* Fix r-wicket

* Update derfinder

* Pin to a given bioconductor release.

* Add missing packages

* Restore identifiers to bioconductor packages

* Restore extra information to R packages

* Update R bulk (#11283)

* fixed incorrect doi of publication (#11175)

* Added recipe for kinSimRiboswitch (#10838)

Added recipe for kinSimRiboswitch, a pipeline for simulating the folding
kinetics of RNA switches.

* update multiqc-bcbio (#11187)

* Add recipe for PopDel (#11181)

* Add recipe for PopDel

* Add clang and clangxx to build config

* update seqbuster (#11190)

* update seqbuster

* fix build

* fix test

* Update pyseer to 1.1.2 (#11172)

* bump sourmash (#11197)

* Update BASIC to v1.4.1 (#11195)

* Update BASIC to v1.4.1

* Trigger circleci

* Fix build number

* Update nf-core-1.2 (#11191)

* Update nf-core-1.2

* Update build script

* Update to InterMine 1.11.0 (#11182)

* Update meta.yaml

* Update meta.yaml

* Update meta.yaml

* Add tinyfasta-0.1.0 (#11177)

* Add tinyfasta

* Update build script

* Fix structure of build section

* Bumping snippy  (#11198)

* Remove older version

* Bump snippy

* VEP: bump major version (#11201)

* VEP: bump major version

* VEP: bumped plugin major version

* VEP: update plugin install

Download and install all plugin modules, instead of just a selection

* Update: PureCN to latest devel (1.11.13); wrapper scripts (#11200)

* Update: PureCN to latest devel (1.11.13); wrapper scripts

PureCN development (https://github.com/lima1/PureCN) has several
improvements over the BioC 3.6 release for handling multiple VCF input
types, and is back compatible with R 3.4.1 so still builds cleanly
with two new dependencies.

Also exposes PureCN wrapper scripts for running from the command line.
Prefixes ambiguous scripts with PureCN_.

* Try pinning to 3.4 to avoid 3.5.1 builds which we don't want yet

* add cassiopee release 1.0.9 (#11168)

* add cassiopee release 1.0.9

* update to conda build 3

* remove old version backup and use sha256 for source

* Bump abeona version to 0.26.0 (#11202)

* Bump abeona version to 0.24.0

* Bump abeona version to 0.26.0

* Update LexMapr to v0.1.2 (#11192)

* Update LexMapr to v0.1.2

* Add rdflib dep

* Update svtyper to 0.7.0 (#11196)

* Update svtyper to 0.7.0

* Add recipe for perl-gtdbtk (#11194)

* Add recipe for perl-gtdbtk

* New recipe for RFMix (#11205)

* New recipe for RFMix
* updated version number information
* updated version number information
* updated version number information

* initial purge_haplotigs commit (#11049)

* initial purge_haplotigs commit
* bioconda revisions, updating test commands to run the pipeline on the test dataset
* rolling back test commands

* Add recipe for fsm-lite (#11209)

* Add recipe for fsm-lite
* Add prefix to make
* Remove v from version string

* Updated reparation_blast to version v.1.0.7 (#11210)

* Update sambamba to 0.6.8 (#11212)

* Bump sambamba to 0.6.8

* It's somewhat annoying that missing_hash is thrown even if uses_git_url is specified.

* Set some environment variables

* The compiled binary is in a different place now

* ldc provides some libraries that are linked against.

* mtbseq: update recipe (#11110)

* changed download location/add test

* remove test

* Confindr (#11217)

* Update confindr to 0.4.2

* Fix typo in specifying version of pysam

* Update Genenotebook to v0.1.4 (#11218)

* genenotebook recipe

* About

* Package name

* License

* sha256sum

* Update build.sh

* Make bin dir

* Change ln to cp

* New symlink strategy

* Build from prebundled tarball

* genenotebook v0.1.2

* version fix

* retry

* fix

* build number

* genenotebook v0.1.3

* restore build procedure

* Fix summary

* updating to 0.1.3 (#11221)

* sartools1.6.6 (#11222)

* Perl bio automatedannotation (#11216)

* Initial recipe for Bio-AutomatedAnnotation

* Change URL

* Run cpanm tests

* Temporarily set HOME

* Use cpan version instead

* Add more depencencies

* Set bioperl version

* unset bioperl version, add bioperl-run

* New release including version in modules

* Remove comments

* build -> host

* Upgrade r-biodb to v1.1.2. (#11213)

* Upgrade r-biodb to v1.1.2.
* Remove old versions of r-biodb.
* Comment out libgfortran.

* PeptideShaker: updated to version 1.16.30 & SearchGUI: updated to version 3.3.5 (#11215)

* PeptideShaker: updated to version 1.16.30

- Bugfix: HOME was still being used when folder with customised reports was specified.
- Bugfix: Made it possible to use the MzidCLI options directly on the PeptideShakerCLI command line.

* SearchGUI: updated to version 3.3.5.

- BUG FIX: Cleanup of the temp path options when used as options for the other command lines.
- FEATURE IMPROVEMENT: Updated Comet to 2018.01 rev. 2.
- LIBRARY UPDATE: Updated utilities to version 4.12.8.

* Update meta.yaml (#11227)

* Svtools 0.4.0 (#11208)

* Remove directories for old svtools versions

* Update svtools to v0.4.0

* Move build number back to 0

* Anvio 52 (#11230)

* Incrementing version to 5.2. Splitting out anvio-minimal package to just install the pip package. The anvio package will install it and all the most likely companion software.

* Remove cgat-scripts from blacklist. (#11228)

* Add new formula: bazam 1.0.1¬† (#11229)

* Update gatk4 to 4.0.10.0 (#11224)

* Add recipe for gtdbtk 0.1.3 (#11211)

* Add recipe for gtdbtk

* Added initial htstream recipe (#11113)

* HTStream is a fast, quality control pipeline for Hight Throughput Sequencing data. The difference between HTStream and other pipelines is that HTStreams uses a tab delimited fastq format which allows for streaming from application to application. This streaming creates some awesome efficiencies when processing HTS data.

* DeepTools 3.1.3 (#11226)

* PacBio: Update `pbmm2` to version 0.10.0 (#11225)

* fastqc: update to version 0.11.8 (#11214)

* fastqc: update to version 0.11.8

* Update meta.yaml

* Phame (#11223)

* mac recipe and added bioperl

*  changing bill number

* added no osx

* adding new version

* removed separate recipe for mac, dont need it

* now running same recipe for mac and linux

* fixed the way fasttrees version was being parsed

* minor change test

* adding detailed description

* restaging the build number

* new version

* Make sure to use bioperl and perl 5.26

* Updated ngs-bits to version 2018_10 (#11235)

* PacBio: Update `pbsv2` to version 2.0.2 (#11236)

* Update VSEARCH to 2.8.5 (#11239)

* Fix shorah recipe and remove from blacklist. (#11241)

* Fix shorah recipe and remove from blacklist.

* Fix blas variant.

* Remove imports from tests.

* unicycler 0.4.7 (#11240)

* unicycler 0.4.7

* unicycler: Work around ValueError: invalid

Unicycler thinks the terminal has 0 columns and produces this error:
File ""/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/textwrap.py"", line 248, in _wrap_chunks
raise ValueError(""invalid width %r (must be > 0)"" % self.width)
ValueError: invalid width -5 (must be > 0)

* Octopus: update to 0.5.1-beta (#11244)

* New: PURPLE SV caller; Update: VarDictJava (1.5.6), PureCN (#11247)

- PURPLE SV and heterogeneity caller for somatic tumor/normal samples.
- VarDictJava -- 1.5.6 release with fixes for SV calling
- PureCN -- add signature dependency and update with fixes for test
  samples.

* Dinucleotide patterns analysis tools v1.0 (#11245)

* Dinucleotide patterns analysis tools v1.0

* Lets try it, it seems to work locally for me.

* Enable SpoTyping_plot.r (#11248)

* rerun again (#11233)

* rerun again

* Update meta.yaml

* Delete build.sh

* Update segway dependency optbuild to 0.2 (#10459)

* Update segway dependency optbuild to 0.2

* Update build and architecture requirements for optbuild 0.2

* Add six as a dependency to the optbuild recipe

* Dinucleotide patterns analysis tools v1. / Add prefix dnp- to the package names (#11249)

* Add prefix dnp- to the package names

* Update build.sh

* Update build.sh

* Bump beast version to 1.10.2 (#11250)

* add maxquant (#11253)

* add mayquant

* relax tests

* PacBio: Update `pbmm2` to version 0.10.1 (#11256)

* PacBio: Update `pbmm2` to version 0.10.1-1 (#11257)

* remove xsv recipe (#11259)

* add blast dependency (#11258)

* Added riborex recipe (#11251)

* Added riborex recipe

* Relaxed version constraints

* Pinned r-core for fdr tools

* fixed the r-base stuff upstream

* Update meta.yaml

* fix graphprot (#11234)

* increase build number

* remove from blacklist

* use cxx instead of c

* move coreutoils to build section

* set additional paths

* patch makefile

* blind try

* update patch

* explicitely copy from src_dir

* update deprecated prefix variable

* Revert ""update deprecated prefix variable""

This reverts commit 2559439a76ec60964f6bddd743b27171e8f91b4d.

* update deprecated prefix variable

* try moving to host section

* Bump mash (#11264)

* Add fmlrc (#11265)

* Add fmlrc

* add doi

* PacBio: Update pb-falcon to 0.2.4. (#11266)

* Add kopt recipe (#11269)

* Genomepy 0.5.2 (#11267)

* release 0.5.2 of genomepy

* trigger new build

* remove genomepy from blacklist

* locale for osx

* updated locale test

* PacBio: Update pb-assembly to 0.0.2. Bumped the pinned version for pb-falcon. (#11275)

* Update mmseqs2 recipe to new release 6-f5a1c (#11272)

* Update yacrd to version 0.4.1 (#11273)

* Add scprep (#11270)

* Add scprep

* All of these should not be needed as host dep

* Metawrap preqs2 (#11242)

* fixed issues

* fixed issues

* added tests

* fixed tab

* gemma 0.98 (#11254)

* gemma 0.98

* gemma 0.98

Leave gsl and zlib out of runtime dependencies

* Add DCA recipe (#11274)

* Add DCA recipe

* add noarch and doi

* remove skip

* Fix a bunch of packages that are actually in bioconductor and try to fix bioconductor-rhtslib

* Various fixes for bulk and trigger a rebuild (#11313)

* Various fixes, at least 4 packages (and their dependencies) should still fail (#11320)

* A few fixes, remove a package from the blacklist since it prevents trumicounts from building. (#11336)

* Fix various recipes (#11354)

* Fix various recipes

* Fix more recipes

* Various CRAN package fixes, since they all lack license files (#11372)

* Various CRAN package fixes, since they all lack license files

* Fix the r-dartr recipe

* There is a light at the end of the tunnel (#11381)

* There is a light at the end of the tunnel

* Licenses no longer exist

* [BULK] Fixes for R/Bioconductor packages (#11406)

* Require `r-base >=3.5` for some packages

* Fix various CRAN packages lacking license file

* Add missing libnetcdf requirement to bioconductor-mzr

* Remove r-alakazam (moved to conda-forge)

Fix linting issue:
```
recipes/r-alakazam	in_other_channels	{'exists_in_channels': {'conda-forge'}, 'fix': 'consider deprecating'}	{'conda-forge'}	consider deprecating
```

* [BULK] Many R 3.5 only packages (#11410)

* Update pinning to R>=3.5 and a few runtime dependencies.

* CSAW is R 3.5 only

* Packages using beachmat are 3.5 only

* Packages using bioconductor-singlecellexperiment are R 3.5 only

* [BULK] Don't use r-base >=3.5, use a conda_build_config.yaml instead (#11452)

* Don't use r-base >=3.5, use a conda_build_config.yaml instead

* blacklist r-phangorn

* Update variancepartition

* R 3.5 for packages requiring singlecellexperiment

* Update a few packages

* Update a number of recipes (#11482)

* Update ensemblVEP and derfinder (#11504)

* Bulk update 251018 (#11577)

* [BULK] various package updates

* blacklist bioconductor-mzr

* A couple tweaks

* [BULK] Update 261018 (#11611)

* Apparently the r-rgeos bit works properly now.

* Add tissueenrich and try to fix scpipe on Linux

* A meaningless change just to trigger an update in bulk. (#11618)

* [BULK] update 271018 (#11628)

* Bump bioconductor-esetvis

* Fix yaqcaffy

* Fix more

* Another R 3.5 recipe

* [BULK] update 281018 (#11689)

* Add some files

* Fix arrayexpress

* Fix another 2

* Blacklist a bunch of bioconductor recipes that aren't likely to get built for a variety of reasons (mostly due to mzR). (#11697)

* Update blacklist (#11706)

* [BULK] fix bioconductor-tissueenrich (#11720)

* taxonkit 0.2.5 (#11318)

* Update csvtk (#11319)

* taxonkit 0.2.5

* csvtk 0.15.0

* bumping GROOT to 0.8.1 (#11323)

* HiCMatrix version 3 (#11322)

* Correcting dependencies

* Version 3 of HiCMatrix, the October release

* Update confindr to 0.4.3 (#11330)

* Drop-seq_tools: Version 2.0.0 (#11326)

* Update meta.yaml
* Update build.sh

some tool names changed to fit Camel case

* Update motus to build only for python3 (#11331)

* Update fpa to 0.2 version (#11333)

* update taxonkit to 0.3.0 (#11339)

* ntcard 1.1.0 (#11338)

* Update rgi (#11335)

* first commit

* update dependencies list

* change source to github

* change build number

* testing circleci

* update meta and build

* fix build

* move build script into meta

* remove older recipes

* line fix in bootstrap.py

* change python & matplotlib versions; add build.sh file

* add preprocessing selector to skip python 2.7

* move build script into meta.yaml

* Revert ""line fix in bootstrap.py""

This reverts commit 5ac1ecd0142a5cfdfc8499c5b6ef4e1f629cd046.

* Update gmap to version 2018-07-04. (#11332)

MAX_READLENGTH environment variable has been disused since 2016-08-16.

* Upgrade r-biodb to 1.2.0a. (#11341)

* Upgrade r-biodb to 1.2.0a.

* Update meta.yaml

* Updated ont-tombo to version 1.5. (#11329)

* Updated ont-tombo to version 1.5.

* Updated with actual github release version hash.

* remove graphicsmagick (#11342)

* Build  kraken2 for osx (#11343)

* First try for a bcalm recipes (#11344)

* New: cgpbigwig (BigWig manipulation); Update: bcbio (#11347)

- cgpbigwig (https://github.com/cancerit/cgpBigWig) provides bigwig
  generation and manipulation command line tools including bam to bigwig
  conversion.
- bcbio: fixes for QC on variants and peddy for CWL runs

* Try avoid some dependancy (#11349)

* Update TreeBest to commit c9d3a2e35276c825577ec945b229e975c32078d8 (#11348)

* Update TreeBest to commit c9d3a2e35276c825577ec945b229e975c32078d8

Also add about:home .

* Workaround https://github.com/conda-forge/bison-feedstock/issues/7

* Better bcalm recipes (#11350)

* Try avoid some dependancy

* Correct mess in build number, sorry

* R biodb (#11351)

* rebuild r-biodb

* trigger build

* Add recipe for pypairs (#11356)

* Update smoove to 0.2.1. (#11360)

* Update duphold to 0.0.9. (#11359)

* Update goleft to 0.2.0 (#11361)

* Bump slicedimage to 1.0.0 (#11362)

* Bump slicedimage to 1.0.1 (#11365)

* Added new versions for biopet-sampleconfig (#11268)

* perl-velvetoptimiser: update to 2.2.6 (#11369)

* update to 2.2.6

* remove unneeded patch

* Scanpy upgrade (#11371)

* Bump version

* Upgrade Scanpy

* Bump starfish to 0.0.25 (#11370)

* bumping groot to 0.8.2 (#11374)

* vep: bump subversion (#11367)

* Updated Krocus 1.0.1 (#11355)

* Add tiptoft

* Fix meta.yaml for tiptoft

* Add build script

* Updated krocus 1.0.1

* Add tiptoft 0.1.4 (#11352)

* Add tiptoft

* Fix meta.yaml for tiptoft

* Add build script

* Kodoja v0.0.9 (#11373)

* Add recipe for seer (#11263)

* Add recipe for seer

* lets try this

* Add newer compiler

* Using boost-cpp

* messed up version string

* Attempt building boost

* Use c++11 in boost

* Use python for boost install

* Correct python version spec

* try with different python version

* Fix b2 command

* Fix popd command

* build and link boost program options statically

* Fix tests

* Match dependency order

* Link openblas instead of blas

* Forcing rebuild with openblas

* Don't use armadillo wrapper

* Making review changes. Also trying original tests

* Previous tests were correct

* Add recipe for the translate-gard npm package version 1.0.3 (#11364)

* Fix umi tools (#11376)

 umi_tools: clean up dependencies

* add support tools to PATH (#11379)

* Bump to v2.2.1 (#11380)

* Bump starfish to 0.0.26 (#11378)

* Update fpa to 0.3 (#11375)

* Update fpa to 0.3

* Correct error in sha256

* Reset build number

* Update trial to 2.5.5 (#11386)

* Update: bioconductor-titancna; 1.19.1 with hg38 support (#11388)

* Update: bioconductor-titancna; 1.19.1 with hg38 support

* Pin to R 3.4 to avoid pulling in 3.3 and 3.5 during mulled

* Add r-polysat version 1.7-3 (#11384)

* Update biomart version so that compatible with r351 (#11366)

* Update biomart version so that compatible with r351

* Update meta.yaml

reset build number as per https://bioconda.github.io/guidelines.html#buildnum

* Update entrez-direct to 10.0.20180927. (#11387)

* Added recipe for SonicParanoid 1.0.13 (#11271)

* Added recipe for SonicParanoid 1.0.13

* removed 'x.x' for numpy, added basic test

* fixed linter related errors

* compiler set to cxx and added host section (same build error!)

* removed host section

* moved numpy and cython to host section; restored build: noarch: python; added LICENSE.md

* removed build: noarch

* added build and extra sections

* set build number to 0; removed skip build; added python3 minimum version; added test for all executables.

* restored sh python module as requirement

* added Make to run; updated release to latest commit

* remove c compiler from meta.yaml

* modified build.sh to compile source codel added make in build section

* updated to latest commit

* updated to latest version with make included in setup.py

* reverted build.sh to the simplest version (python setup.py install)

* Add perl-json to build requirements to allow meme-chip to run to completion. Change meme-chip to use dreme-py3 instead of dreme if building with python 3. (#11389)

* Bump IgBLAST to 1.9.0 (#11393)

Bump IgBLAST to 1.9.0

Re-package the binary version this time. There are problems building the
source version when the configure script reaches this step:
""trying to build the NCBI SRA/VDB Toolkit from GitHub""

The previous problem about the binaries linking against libbz2.so, for
which we had no conda package, is now solved.

Also, this saves about 45 minutes compilation time.

* Add consan (#11395)

* Add consan

* Skip osx

* Update: vardict, vardict-java 1.5.7 (#11394)

* Update: vardict, vardict-java 1.5.7

Latest vardict-java release and corresponding vardict with bug fixes
after testing with 1.5.6

* Reduce test output to try and fix build problems

* Experiment 2 for build problems: remove r-base from run

* Experiment 3 for build problems: add r-base in host

* update recipe for 3.9.1 (#11397)

* evofold2 (#11396)

* evofold2

* wrapper

* Update meta.yaml

* minor

* Update rnastructure to 6.1. (#11400)

* Ctat mut (#11401)

* updating version number

* correct URL

* proper hash

* Revert ""Ctat mut (#11401)"" (#11402)

This reverts commit 6db10ac7ffd7abaf8fbf1762b7ea6c63b2585fe0.

* update version (#11403)

* any2fasta 0.4.2 (new formula) (#11407)

* W4mclassfilter v0.98.9 (#11385)

* Added files to build version 0.98.9

* Update meta.yaml

* Update meta.yaml

* updated SonicParanoid recipe to version 1.0.14 (#11409)

* updated SonicParanoid recipe to version 1.0.14

* Update to version 1.0.2 of PopDel (#11398)

* Update to version 1.0.2 of PopDel

Update to version 1.0.2.

* Reset build number to 0

* PacBio: require Meson 0.48.1 for all recipes (#11090)

* Meson 0.47 inserted duplicate RPATHs in
  macOS binaries, causing `install_name_tool`
  failures when installing the package.
  Requiring 0.48.1 ensures we do not run into
  these issues anymore in the future.

* rebuild with latest openmpi (#11411)

* Remove kfoots from the blacklist (#11416)

* Update gseapy to 0.9.7 (#11417)

* Update gseapy to 0.9.7

* remove noarch

* Add SC3 as dependency (#11427)

* Add recipe for r-poppr (#11418)

* Update knitr version because of Issue: https://github.com/rstudio/rmarkdown/pull/1271 (#11412)

* Update IQ-TREE to 1.6.7.1 (#11429)

* Update IQ-TREE to 1.6.7.1

* Change build number

* Update: r-deconstructsigs with fixes for hg38 (#11431)

The 1.8.0 release, from 2016, has some issues with hg38 and other
custom genomes that are fixed in development (raerose01/deconstructSigs#27).
There hasn't been a new release pushed so this rolls these into a new
sub-version and makes them available.

* Update entrez-direct to 10.2.20181018. (#11432)

* Add assembly-scan recipe (#11425)

* remove python 2.7 skip (#11424)

Preparation for rnaQUAST

* Add fastq-scan recipe (#11415)

* Add patch to fix racon/rampler path in racon_wrapper. (#11434)

Fixes #11405.

* meme rebuild (#11433)

* Update nanocomp to 0.23.1 (#11436)

* Update nanocomp to 0.23.1

* remove noarch

* Update abricate to 0.8.10 (#11446)

* Update angsd to 0.923 (#11445)

* Update alfred to 0.1.13 (#11444)

* Update alfred to 0.1.13

* Try w/o patch

* Update antarna to 2.0.6 (#11442)

* Update admixtools to 5.1 (#11443)

* Update admixtools to 5.1

* Let makefile choose which bins to install

* Update alignstats to 0.5 (#11441)

* Update xatlas to 0.2.1 (#11437)

* r-gpca (#11428)

* r-gpca

* r-gpca recipe

* Update meta.yaml

* Removed All Comments

* gseapy bump version 0.9.8 (#11440)

* gseapy bump version 0.9.8

* version

* titancna: fix for hg38, remove conda build hacks (#11447)

* titancna: fix for hg38, remove conda build hacks

* Re-add r-base 3.4 pin to avoid 3.5 errors

* Hmmlearn older version (#11450)

* Adding pygtftk

* removed pygtftk from master

* add older version of hmmlearn

* Add card_trick (#11451)

* Add card_trick

* Restrict to py3

* Update checkm-genome to 1.0.12 (#11455)

* Bump drep (#11457)

* Update squid to 1.5 (#11466)

* Update ncbi-ngs-sdk to 2.9.3 (#11467)

* elprep: bumped major version (#11414)

* elprep: bumped major version

* fixed hash

* fix download link, fixed licence

* fixed tests

* skip osx build

* FRED2 as a conda package (#11469)

* Attempt to get FRED2 as a conda package

* SHA update

* 99 little bugs in the code

* Fix things Bj√∂rn mentioned

* add rnaQUAST recipe (#11470)

* Update bioconda-utils to 0.14.9 (#11454)

* Rapidup (#11474)

* Update to v0.7

* Update Buildnumber

* rapid: update to v0.6

* rapid: update to v0.6

* update grid (#11478)

* Adding biobb_model recipe (#11472)

* Updated wtdbg to v2.1 (#11486)

* update stream to 0.2.6 (#11483)

* update stream to 0.2.2

* update stream to 0.2.3

* update stream to 0.2.4

* update stream to 0.2.4

* update stream to 0.2.4

* update stream to 0.2.5

* update stream to 0.2.6

* Update meta.yaml (#11487)

* Update connectome-workbench to 1.3.2 (#11468)

Now needs QT 5.7

* Update deblur to 1.1.0 (#11500)

* Update domclust to 1.2.8 (#11498)

* WisecondorX: bump version (#11501)

* Bump as GitHub wasn't working yesterday (#11502)

* Added recipe for Sequenza (#10367)

* Added recipe for Sequenza

* Removed fn entry in source section

* Trying with only one URL

* copynumber is a bioconductor package

* Added missing requirements section

* Removed mailing list address

* Added doi

* Added license_file

* Trying with different  license_file path

* Fred2 bump (#11503)

* Bump as GitHub wasn't working yesterday

* Fix licence etc

* Scanpy scripts (#11413)

Doing squash and merge as requested by @nh3 

* Bump version

* First implementation of scanpy-scripts bioconda recipe.

* fix path in build.sh

* Remove ""noarch"" flag as requested by bioconda recipe checklist

* Add a post install notice that post install test needs bats-core.

* Add more dependencies

* Skip building for python versions other than 3.6

* Target v0.0.2 which has non-ascii characters removed

* Lower version requirement for pandas and matplotlib to be the same as scanpy

* Requirement matplotlib>=3.0.0, declare noarch

* New: hmftools-cobalt; Update: hmftools-purple (#11507)

- hmftools-cobalt: Add latest version of PURPLE associated read counter,
  COBALT, with support for hg38.
- hmftools-purple: PURPLE release with hg38 support.

* Update Picard to 2.18.15. (#11505)

* Genenotebook (#11476)

* genenotebook recipe

* About

* Package name

* License

* sha256sum

* Update build.sh

* Make bin dir

* Change ln to cp

* New symlink strategy

* Build from prebundled tarball

* genenotebook v0.1.2

* version fix

* retry

* fix

* build number

* genenotebook v0.1.3

* restore build procedure

* Fix summary

* dependency versions

* v0.1.5

* Update pinning (#11514)

* Bump build number for updated dependency (#11510)

* Bump build number for updated dependency

* Try adding r-base to host requirements

* Try adding other requirements to host

* Pin to R version

* Update meta.yaml

* Update meta.yaml

* Update meta.yaml

* Tweak dependency version syntax

* Pin R and package versions correctly

* PacBio: Update pbcore to 1.6.5 (#11513)

* Bump r seurat scripts version (#11292)

* Bump version

* Remove noarch

* Could wrongly quoted version be causing an issue?

* Tweak pinning to try and fix CI error

* seqcluster:fix UMI detection. (#11511)

* seqcluster:fix UMI detection.

* Fix dependency

* quast 5.0.1 (#11479)

* quast 5.0.1

* quast 5.0.1: remove third-party site packages from the distibution pack

* quast 5.0.1: skip Glimmer in test

* quast 5.0.1: joblib and simplejson dependencies added to meta.yaml (Setuptools downloading is disabled in conda build)

* quast 5.0.1: explicit joblib and simplejson dependencies removed (Setuptools downloading is disabled in conda build)

* quast 5.0.1: Python 2 and 3 compatible code in build.sh

* wcX bugfixes (#11508)

* wcX bugfixes

* fixed shasum

* Update fastspar to 0.0.7 (#11515)

* Update iqtree to 1.6.7.2 (#11525)

* Update illumina-interop to 1.1.6 (#11523)

* Update hapbin to 1.3.0 (#11522)

* Update hlama to 3.0.1 (#11520)

* Update gb_taxonomy_tools to 1.0.1 (#11519)

* Update gffcompare to 0.10.5 (#11517)

* Update fast5seek to 0.1.1 (#11516)

* Update deepbinner to 0.2.0 (#11499)

* Update deepbinner to 0.2.0

* Update meta.yaml

Try same fix as in #11240

* Update ncbi-vdb to 2.9.3 (#11550)

* Update mikado to 1.2.4 (#11549)

* Update perl-pcap to 3.5.2 (#11543)

* Update python-hyphy-python to 0.1.9 (#11545)

* Update mlst to 2.15.2 (#11547)

* Update perl-sanger-cgp-vcf to 2.2.1 (#11542)

* Update merfishtools to 1.5.0 (#11537)

* Update perl-sanger-cgp-vagrent to 3.3.3 (#11536)

* Update nonpareil to 3.3.3 (#11535)

* Update prophex to 0.1.1 (#11532)

* Update krakenuniq to 0.5.3 (#11527)

* Update novoplasty to 2.7.2 (#11530)

* Update minced to 0.3.2 (#11529)

* Update mapdamage2 to 2.0.8 (#11528)

* Update perl-sanger-cgp-allelecount to 4.0.0 (#11538)

* Update pyvolve to 0.9.0 (#11531)

* Genenotebook (#11512)

* genenotebook recipe

* About

* Package name

* License

* sha256sum

* Update build.sh

* Make bin dir

* Change ln to cp

* New symlink strategy

* Build from prebundled tarball

* genenotebook v0.1.2

* version fix

* retry

* fix

* build number

* genenotebook v0.1.3

* restore build procedure

* Fix summary

* dependency versions

* v0.1.5

* version fix

* add plek (#11554)

* Update pyimzml to 1.2.4 (#11534)

* Bump shovill (#11555)

* PacBio: Update minimum pbcore version (#11556)

* We want all users of PacBio tools to be able to
  use our utilities with pbmm2 alignments.

* Add recipe for translate-gard v1.0.4 (#11557)

* bioconductor-rnaseqsamplesizedata (#11475)

* Adding Recipe for bioconductor-rnaseqsamplesizedata

* Updated metadata for RnaSeqSampleSizeData

* nextflow 18.10.1 (#11558)

* Update raxml to 8.2.12 (#11567)

* Update r-fgwas to 0.3.6 (#11566)

* Update rapid to 0.7 (#11565)

* Update r-spieceasi to 1.0.2 (#11564)

* Update rcorrector to 1.0.3.1 (#11562)

* Update quicktree to 2.4 (#11560)

* Update paladin to 1.4.4 (#11541)

* Update paladin to 1.4.4

* delete md5

* Update build.sh

* Update build.sh

* Fix and unblacklist Tadarida-D (#11568)

* Add recipe for rgt

* Fix and un-blacklist tadarida-d

* Remove RGT

* bumping groot (#11575)

* update pymzml (#11573)

* Add bioconductor-rnaseqsamplesize (#11559)

* Add bioconductor-rnaseqsamplesize

* Update recipe

* Fixing some URLs

* Update dependencies missing

* Update trumicount to 0.9.11 (#11576)

* Update ConFindr to 0.4.4 (#11578)

* Added new versions for biopet-scatterregions (#11572)

* Added new versions for biopet-bamstats (#11571)

* R ggbiplot (#11584)

* add R -e 'httr::set_config(httr::config(ssl_verifypeer = 0L)); install.packages(devtools, repos=http://mirrors.ebi.ac.uk/CRAN/); library(devtools); install_github(vqv/ggbiplot); library(ggbiplot)'

* add r-ggbiplot

* update meta.yaml

* update meta.yaml

* update

* update

* update

* update

* update

* update

* update

* update

* update

* fix errors

* fix errors number 1

* Update rebaler to 0.1.2 (#11563)

* Update rebaler to 0.1.2

* Remove fn

* bump graphclust (#11585)

* Update seqyclean to 1.10.09 (#11589)

* Update stringmlst to 0.5.1 (#11590)

* Update snp-dists to 0.6.2 (#11592)

* Update snippy to 4.3.3 (#11596)

* Update canu to 1.8 (#11600)

* Update starfish to 0.0.27 (#11599)

* Update womtool to 36 (#11594)

* Update telseq to 0.0.2 (#11598)

* Update snp-sites to 2.4.1 (#11588)

* Added recipe for pydemult: Streamed and parallel demultiplexing of fastq files (#11471)

* Added recipe for pydemult

* Bumped version in favor of py3.5

* bump vcf2db to latest commit (#11601)

* bump vcf2db to latest commit

* fix shasum

* Fixing source url

* Update: TitanCNA; hg38 cytoband support and fix for normalization (#11604)

* megan (#11046)

* megan6: initial commit

* megan6: intermediate commit

* megan: made tests work

* megan: doc improvement

* megan: added osx dmg file

* megan: add java to build requirements

* megan: removed new line

* megan: removed osx sources

* Update meta.yaml

* bumping hulk (#11607)

* Update hotspot3d to 1.8.2 (#11521)

* Update hotspot3d to 1.8.2

* Add perl-json as dependency

* Add perl-archive-extract as dependency

* Fqzcomp (#11606)

* Added recipe for fqzcomp

* There is no configure script

* Maybe this works

* Added gcc as build requirement

* Removed gcc again (lint issue)

* Maybe these exports will do the trick

* Nope!

* Added cxx as host requirement

* Compilers are only allowed in build section

* There is no need for make install

* Copy-paste error...

* Add vcf-annotator recipe (#11481)

* Add vcf-annotator recipe

* added pyvcf dependency

* Update meta.yaml

* stacks: fix for @ in exe_path (#11580)

* stacks: fix for @ in exe_path

* stacks: fixed path

* New version with bugfix and different progressiveMauve version. (#11613)

* Sspupdate (#11614)

* New version with bugfix and different progressiveMauve version.

* Keeping old version as folder.

* Push build number.

* Update SVDB to version 1.3.0 (#11506)

* 	new file:   recipes/svdb/1.1.2/meta.yaml
	renamed:    reipes/svdb/svdb.patch -> recipes/svdb/1.1.2/svdb.patch
	modified:   recipes/svdb/meta.yaml

* 	deleted:    1.1.2/meta.yaml
	deleted:    1.1.2/svdb.patch

* Bump nanosim (#11608)

* Bump nanosim

* Add scipy as dep

* Add recipe for perl-number-range (#11621)

* New build for grid (#11620)

* update grid

* update build num

* Recipe for das_tool 1.1.1 (#10528)

* recipe for das_tool 1.1.1

* Add recipe for sompy (#11624)

* cmake modified to build with NDEBUG (#11328)

* cmake modified to build with NDEBUG

* Update meta.yaml

* new build with fasta test

* new build with fasta test

* Fix and unblacklist TwoPaCo (#11622)

* Add recipe for TwoPaCo

* Unblacklist twopaco

* Modify and unblacklist recipe for ESTmapper (#11623)

* Modify and unblacklist recipe for ESTmapper

* Add patch

* Modify and unblacklist recipe for Metaseq (#11625)

* Fix recipe for metaseq and remove from blacklist

* Remove build.sh

* nextflow 18.10.1 build 2 (#11630)

* Add Clust (#11619)

* Add clust

* Clean recipe

* Add ""noarch""

* Add DOI

* Add build file

* Python 2.7

* Fix scikit-learn dependency

* Trigger new build

* Update: PureCN (multicore) and PURPLE (plotting X libraries) (#11631)

- PureCN: adds support for specifying cores on command line
- PURPLE: adds X library dependencies required for creating
  plots

* scripts/travis-run.sh: added a cleaner method to check for env vars (#11612)

* Increase the number of k value usable in bcalm (request by @Malfoy) (#11610)

* Increase the number of k value usable in bcalm (request by @Malfoy)

* Change compilation parameter to reduce memory impact of compilation

* Update anndata to 0.6.11 (#11637)

* Update nglview to 1.1.7 (#11643)

* Update binsanity to 0.2.7.1 (#11644)

* Update cgat-core to 0.5.4 (#11645)

* Update nanosv to 1.2.2 (#11673)

* Update abeona to 0.36.0 (#11670)

* Update pyfaidx to 0.5.5.2 (#11659)

* Update agfusion to 1.23 (#11668)

* Update iqtree to 1.6.8 (#11686)

* update iqtree to 1.6.8

* Trigger rebuild

* Update validators to 0.12.2 (#11672)

* Update python-edlib to 1.2.3.post1 (#11664)

* update for Purge Haplotigs (#11690)

* Update loompy to 2.0.16 (#11667)

* Update loompy to 2.0.16

* Update meta.yaml

* IgBLAST 1.10.0 (#11693)

* Update wtforms-alchemy to 0.16.7 (#11679)

* Update sickle to 0.6.4 (#11663)

* Update sickle to 0.6.4

* Remove fn and libgcc runtime dep

* Update confindr to 0.4.5 (#11696)

* Batvi (#11695)

* batvi initial

* Guideline compatibility..

* Dummy test section..

* Missing java dependency..

* use openjdk instead of java-jdk ..

* source specified in github ..

* trigger build (package did not have batindel directory) ..

* update SHA256 ..

* update SHA256 ..

* Update pythonpy to 0.4.11 (#11661)

* Update cortexpy to 0.45.6 (#11660)

* Update sevenbridges-python to 0.16.0 (#11674)

* Update solvebio to 2.7.0 (#11657)

* Update mathstats to 0.2.6.5 (#11656)

* Update goatools to 0.8.9 (#11641)

* Add gnies (#11627)

* Add gnies

* noarch python

* Update meta.yaml

* Add recipe for SKA v1.0 (#11581)

* Add recipe for SKA v1.0
* Add lib path for zlib
* Older gcc
* Correct install dir
* Try static linking
* Dynamic linking on OS X
* ldd command test
* correct program
* Remove ldd command

* Add recipe for transit version 2.3.1 (#11701)

* Add recipe for transit version 2.3.1

* Use skip, add spaces.

* Update meta.yaml (#11699)

* remove pyqi (#11704)

* Update python-chado to 2.2.0 (#11714)

* update python-chado

* 2.2.1

* Update vcfanno to 0.3.1 (#11710)

* FGMP-1.0.1 (#11278)

* FGMP-1.0.1 recipe
* remove unncessary build info

* add r-nabor (#11716)

* update stream to 0.2.2

* update stream to 0.2.3

* update stream to 0.2.4

* update stream to 0.2.4

* update stream to 0.2.4

* update stream to 0.2.5

* update stream to 0.2.6

* add r-nabor recipe

* update r-nabor recipe

* update r-nabor recipe

* r-pctgcdata (#11715)

* r-pctgcdata

* r-pctgcdata - fix

* r-pctgcdata - fix

* Update meta.yaml

* Fix plek by a new branch (#11605)

* Modify the PLEK recipe

* Start fixing PLEK, though it requires compilation

* update build.sh

* update yaml

* fix build.sh

* update build.sh

* Update recipe for plek

* add bioconductor-chromvar recipe (#11718)

* add bioconductor-chromvar recipe

* fix bioconductor-tissueenrich

* Apparently the popdel recipe didn't get correctly merged

* Final merge conflicts
"
5de330b1f9d3249069c843bf563f28aac7ae7c1a,btcpayserver/btcpayserver,"Refactoring to keep coin logic out of InvoiceWatcher
"
3beb7e37da74ba10375fe3bc49c46e19a159a03d,foodcoopshop/foodcoopshop,product admin structure improved
cd688e60222070cbc36fad00b5c31899a5f15b33,iteratec/OpenSpeedMonitor,"Merge branch 'refactoring/integrationTests' into develop
"
b968f7867298a8354fb9bc0dc99f1c72f9510292,iteratec/OpenSpeedMonitor,"Cleanup of less and asset pipeline. Compile all less files by default.
"
e68496cb1618834e7b5d728c3aef32046d30432e,iteratec/OpenSpeedMonitor,"[IT-1977] refactoring:  move dtos and rename method
"
b36d680ee1571c6f7d709719230cb713de3a5943,iteratec/OpenSpeedMonitor,"cleanup in build.gradle
"
2d39852222e06ae4ff7085251d56c55ef91e82e0,jenkinsci/warnings-plugin,"Added configuration of IssueRecorder.

Added validation of input fields and optimized image references.
"
131c7a42a439fd2862e1eae5348e4cdaaff4514d,jenkinsci/warnings-plugin,"Refactoring and JavaDoc.
"
f37b1410e17ac8400c8b87a09b81b8af50c74e9d,kriztan/Pix-Art-Messenger,"improved logging for node configuration change
"
aaa8fe8978ac0513a013a9c77efef663f32eda47,kriztan/Pix-Art-Messenger,"Merge branch 'CryptoNextBeta' into development

* CryptoNextBeta: (60 commits)
  Lock TrustKeys if no trusted keys are available
  Optimize imports
  Use MD style for key trust toggle switch
  Fix set/remove OnUpdateBlocklistListener
  Fix axolotl database migration
  Remove device list from EditAccount
  Add clear devices to overflow menu in EditAccount
  Ask for key trust when sending messages
  Encrypt files for HTTP upload in encrypted chats
  Refactor trust key ui and show in account details
  Send correct body for HTTP files
  Handle file transmission properly in axolotl
  Remove unneccessary code
  Fix trust status for outgoing messages
  Don't merge messages with different trust statuses
  Fix copying of axolotl keys to clipboard
  Add refresh icon to v21 theme
  Disable Axolotl option if not usable
  Show trust status of messages' originating session
  Add key trust toggle to ContactDetailsActivity
  ...
"
cedc4305c20aa76aa6ffa9a5443578e57023e1ca,kriztan/Pix-Art-Messenger,"rename the Xmlns class to Namespace
"
9e0466d1e643c07d1c3de088ddf2e5655899a50c,kriztan/Pix-Art-Messenger,"refactored omemo to take multiple recipients
"
d7de3113795738ada1488f673f6e7b651e166058,kriztan/Pix-Art-Messenger,"refactored bodyContainsDownloadable to be more flexible
"
a197ea785206fa279c02bb3dcabc3b7d68e10475,mongodb/mongo-ruby-driver,"RUBY-219 minor: use opts instead of options throughout
"
05b5fc576b3cfad714742a31a08c28eccaae0ddb,mongodb/mongo-ruby-driver,"Cleanup w/r/t loading c ext and testing it
"
791ed85a0d379740657c41b1c1bd54d7abc24181,mongodb/mongo-ruby-driver,"minor: cleanup test warnings
"
4dc397b50821bac2476e11faf7a917f7294589d4,reactioncommerce/reaction,"Merge branch 'refactor-4196-aldeed-catalog-schema-changes' of github.com:reactioncommerce/reaction into refactor-4196-aldeed-catalog-schema-changes
"
2bbe477403b3948bacd5cfabaeb257b27191b4e1,reactioncommerce/reaction,"split `registry.js` into registry/* files, refactor permissions loading

- updated package, permissions load
- updated default admin permissions creation methods (permissions not
always getting created, skipping some group permission creation).
- allow for different global, shop owner permission sets
- introduce method to add package permissions to all existing owners
"
685a0ce4fe7775b173a15739d73d84b5cb409f49,reactioncommerce/reaction,"Merge pull request #4225 from reactioncommerce/refactor-aldeed-connection-resolver-helper

refactor: create connection/edge resolver helper"
0ad4ac86306597e7385fa203e09823bc5081691e,reactioncommerce/reaction,"Merge pull request #4213 from reactioncommerce/docs-aldeed-jsdoc-cleanup

docs: clean up jsdoc comments, namespace organization"
d1d081d815205745404cbbcbcc3dd04d7fa7ee95,reactioncommerce/reaction,Merge branch 'marketplace' into spencer-2889-cleanup-marketplace-shop-creation
63f062ca45f9d47d5cec7cf19dd376eeff3267da,reactioncommerce/reaction,"refactor: removed catalog position object from catalog code
"
57d8ffe9534d613330966223b7587aee5c022d8b,reactioncommerce/reaction,"Merge branch 'release-1.12.0' into docs-aldeed-jsdoc-cleanup
"
478e77ecfc19cb91ec8e1308e4f9ffb4c742f775,reactioncommerce/reaction,"Cascade delete child variants, handle missing variant

Split variantList to own structure
Delete method that deletes parent + child variants
Format price as number (when 0.00)
If no variants, don't check for variant image, return default

Issue https://github.com/ongoworks/reaction/issues/120
"
ca3e454fe6bd9a3998e15dce444992be20803229,reactioncommerce/reaction,"Merge branch 'merge-packages' into development

* merge-packages: (1558 commits)
  update packages gitignore
  Improving ui/ux of package grid and settings
  remove bootstrap-theme dependency from onTest
  Remove call to $(window) for server routes
  fixed typo;
  updated products tests
  updates for PR #212 jobs collection moved to reaction-collections
  rollback changes in `products/cloneProduct` method;
  updated reaction-factories to use reaction-collections
  removes transliteration, schemas, and collections from core
  Move package loading to ReactionImport.
  Integrate ReactionImport intocore package.
  Load sample data on startup.
  add debugging
  update reaction-factories onTest
  Prevent removing _id while cleaning tag objects.
  Improve import methods.
  Add ReactionImport to core.
  Prepare merging into core.
  Implementing a json processor function, allowing us to import fixture data from json files.
  ...
"
4631c3667c898586deeb68c6c5cab77558118669,reactioncommerce/reaction,"move import to shop settings, update package registry configurations
"
86015168a178630547e5092c7ee64b9aa25c7583,reactioncommerce/reaction,"Stripe Connect and Multi-Shop Checkout (#2682)

* Add new show/hideForShopTypes setting to the registry

* Add provides marketplaceMerchantSettings reactionApp

marketplaceMerchantSettings only shows up for non-primary shop owners.
Will be used for stripe merchant account setup and other merchant specific settings

* update provides shopSettings loop to use template instead of name for uniqueness

* add shopAppSwitch helper for showing plugin/app enable switch

only show switch to primary shops if marketplace is enabled.

* Init merchant stripe connect settings

* Unify payments-stripe-connect and payments-stripe plugins

* getPackageSettingsWithOptions method

This should probably replace getPackageSettingsWith options, but not sure what our deprecation path should look like right now.

* WIP Stripe Connect Integration

* Create new shops with account address if it exists

* Guard shopType in reactionApps

* WIP - Authorize stripe connect. Save connect credentials on merchant's reaction-stripe pkg

* Direct users to stripe dashboard to check earnings if they have already completed Stripe account setup.

* Update Reaction.marketplace helper

* Update tax rate calculator to be multi-shop aware

* Update cart and cartItem schemas to support taxes on each item and taxRates for each shop

* add reaction-taxes to the default package list for merchant shops

* Add marketplace needed cart transforms.

Also adjusts getSummary function to support shopId filtered reducers

* Fixes for updated taxes methods.

* check if merchant's have a stripe account better

* WIP Experimental stripe connect multi-payment method

* Check to make sure that we haven't authorized this merchant yet.

For some reason two auths in Stripe equal an auth then immediate deauthorization

* Successfully charge on behalf of a connected account

* Edits to make stripe marketplace method work from checkout

* Update stripe/createCharges to create a ""Payment"" object for each charge and call cart/submitPayment

* [WIP] use call createCharges from client

* Update getApiKey in stripeapi to use primaryShop's stripe acct

* update payments schema to store shopId

* [HACK] Don't check for refunds when sending order notifications
This needs to be reversed once listing refunds for connect is figured out

* [WIP] Start working on figuring out stripe connect refunds

* Cleanup

* Update cart/submitPayment to work with multiple payments

* Update stripe/createCharges to respect request to ""authorize"" instead of ""capture""

* Place order with stripe/createCharges and handle order creation on server side

* Client side validation and confirm that all stripe client safe errors get passed through to client and prevent charge

* Send `card_error`s back to the client, throw on all other errors. Perform luhn, exp, and cvc checks on client before passing to stripe

* Updates to cart and stripe payment methods to support multi-payments as discussed with Brent and Aaron yesterday

* Properly charge primary shop and permit order splitting between primary and merchant shops instead of just multiple merchant shops

* remove comments

* Make standard taxes work with stripe connect / marketplace checkout.
Mask true tax rates

* enable all tests

* Demo application fee for stripe connect accounts

* Fix issues in cart transforms

* Adjust packages publications so that we have primary shop routes available on load

* Don't refresh active shop package publication if active shop is primary shop

* Remove comments

* Fix issue where order would fail if no taxes are enabled for any shop

* Update error handling to follow Reaction convention

* Fix issue where shop not having tax data would cause checkout to fail

* Export stripe methods

* Initial tests for updated Stripe package that supports connect

* Remove old lib stripe api that's no longer used

* Add nock to package.json

* Stub stripe package fetching for marketplace shops in stripe createCharges test

* Fix stripe create charges test

* Revert unfinished experimental updates to stripe/refunds/list

* export stripe connect methods

* cast invoice values to numbers before updating cart billing
"
b7bcc34d9c195c3c0c2d4ee729c6bd836f8063a9,reactioncommerce/reaction,"Removed commented out code
"
5bcd994dfae415a8aff571406d45a4fcd1d3eb8a,reactioncommerce/reaction,"Release 1.4.0 (#2558)

* Removing unnecessary orders/count method

* Adding i18n on Show More button

* Adding optional check on filter in PaginatedOrders publication

* Sending subscription limit as props to React component

* Don't subscribe to all media (#2073)

* Don't subscribe to all media

- Publish brand assets globally in media publication
- Publish product media in the `Products` and `Product` publications
- Limit media to only published products

* De-duplicate fetch product media functionality

Ensure permissions and workflows are checked when fetching the media.

* Update logic of if / else inclusion / exclusion by workflow

* Fix endless spinner issue

* Add requirements to readme

Adds link to requirements docs above installation instructions

* Move requirements below installation

* Remove isHidden check from core startup b/c blocking safari - fixes #2088

* Request versions (reaction -v) output in issue template (#2087)

* Fetch all Shippo carriers (#2078)

* Init second request on after next url returned

* Refactor to fetch carriers recursively from api

* Fix transliteration package to 1.5.2 which doesn‚Äôt leak ES6 into bundle

* Fix issue #2026 changed price not displayed for prod on grid page (#2064)

* Fix issue #2016 changed price not displayed for prod on grid page

* Add getVariantQuantity function to ProductRevision

* Convert text field to select field for countries (#2082)

* [WIP] #2070 Fix PDP Url Path For Grid Settings (#2094)

* fix pdp url path for grid settings

* remove commented code

* Remove legacy PDP (#2097)

* Remove revision conditional

* Remove templates

* Set total quantity as actual sum of quantity

* Don't break out order items

* set cartItemId to just _id since they are the same now

* Fix unrelated error with missing import

* Create shipping record

* Don't use cartItemId

* Group lineItems by _id rather than cartItemId

* Use _id rather than cartItemId. Use sum of quantities rather than length

* Restore check for empty items array to fix test

* Change cartItemId to _id

* 2067 Improper Product Title Wrap (#2108)

* fix improper word wrap in product grid

* fix improper product title wrap in firefox

* Fix Avalara document id (#2114)

* Don't pass in a cartID, pass in orderId for SalesInvoice

* Don't try to parse lines unless we know we have it. No lines, no tax.

* Use order.items to display line items

* Update core.js

Changed ""admin"" to ""owner"", which is the default user we're really checking for.

* If cartItemId exists from legacy orders, then use those

* Don't create default admin user when running in app test mode

* Fix ""Set Custom Value"" on Avalara Usage Type (#2107)

* Get correct id value

* Prevent autoform from removing old values

* Roll back. Autoform still resetting to old values

* Prevent autoform from overriding custom val

* show input field for custom; pre-fill with existing custom val

* Adjust comment

* Adjust comment

* Update form reset

* Refactor subscription

* Fixes #2116 failure to send email (#2118)

* Fix parens that were out of place in wrapAsync of Email.verifyConfig

* Revert the wrapAsync function - I didn‚Äôt understand how it worked and it wasn‚Äôt the core issue

* Don‚Äôt set secure to true for port 587

http://stackoverflow.com/a/22468122/1179341 pointed me in the right direction

* Allow customer to move past validation after one pass

* Silencing needless warning

* Add missing imports

* When we get a ""GetTax"" error, revert to addressbook

* Capture and parse errors

* Fix missing import

* Add import, adjust Proptypes

* Update read only Quantity in top variant #1919 (#2065)

* Update quantity if child variants exist

* Change method not to add inentory Quantity when undefined

* Add default value for inventoryQuantinty

* Fixing non-reactivity of updating quantity field

* 1994 Console Dropzone Warnings (#2138)

* upgrade react-dropzone to latest version

* upgrade react-dropzone to latest version

* Update Summary Card for Order (#2105)

* order summary in react

* Add data to container for order details

* Get badge onto display and container

* Remove unused code clean up UI

* Rearrange fields to match design

* Change id to order id

* Remove gap at the top

* Add printableLabels

* Add address 2 if exists to ordersummary

* Remove all template code move everything into container

* Fix weird capture spinning state

* Creating a ""review and fix"" address review screen

* Add to Cart Alert Behavior (#2076)

* typo fix

* Fix Cart Alert Behavior

implement re-appearance of alert when add-to-cart is clicked rapidly

Resolves 1445

* migrate cartSubtotals template to react

* remove unused imports

* remove commented code

* migrate cartPanel template to react

* fix linting issue

* migrate cartItems template to React

* finish migrating cartDrawer and checkout popup to React

* remove debugging code

* fix linting issues

* add spinner to checkout alert

* fix linting issues

* update quantity in text on rapid clicks

* refactor cartItem component

* remove unused props

* remove jsx code from container

* implement changes from review

* refactor container method

* fix error in checkout and weird shipping display in cartDrawer

* fix cartItem title

* fadeOut remove-from-cart icon before product is removed from cart

* increase spinner size

* fix spacing and swiper issue

* escape single quote

* replace single quote with HTML entity

* Show highlited diff. Copy over values on click.

* Removing ""debug"" HTML

* Add ""review address"" translation

* Basic ""review address"" flow working

* Remove console.log

* [WIP] 2137 Specify Shippo Version (#2146)

* specify shippo api version in request header

* specify shippo api version in request header

* fix currency formatting in invoice (#2147)

* language dropdown updates (#2148)

* rework allOn / allOff language toggle

kill the ability to ‚Äúturn off‚Äù default language

* files no longer used

new files inside the header folder

* add check to hide languages when less than 2 enabled

* update settings panel to never allow default currency to be disabled

* add check to only show dropdown if more than 1 currency is enabled

* Fix missing import

* Fix import error

* Return to edit and refresh address when you cancel out of review

* Make edit behave the same as add

* Tweak styling

* fix dark-gray background on notification hover state (#2163)

* Cancel Order (#2022)

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Detail on invoices captured

* Add roll over list capability

* Add single invoice render

* Add roll down list not quantity based

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Detail on invoices captured

* Add roll over list capability

* Add single invoice render

* Add roll down list not quantity based

* Display unique items only

* Add quantities to line items

* Remove unnecessary parts of the view

* Seperate components for roll up lists and line items

* Add cancel capability

* Clean up UI

* Add item functions

* Fix Sidebar Context (#1932)

* Show Sidebar shipping in checkout

* Set actionView after payment checkout step

* Hide sidebar on entry to profile page

* Remove Inventory subscription that is not in use (#1951)

* Get package data by shopId as well as package name (#1949)

* Add capture payments capability

* Add refunds fields

* Seperate concerns in invoice component

* Clean up invoice code

* Refactorline items

* Updated i18n settings panel (#1947)

* Updated i18n settings panel

- added new package for i18n settings
- converted to react
- added currency list
- added ability to save open state to SettingsCard to user preferences
- added ability to pluck fields in form component to enable concise
forms

* Update currency lists in admin

- Only show enabled currencies in dropdown
- Do not sure updatedAt field

* Added ability to toggle all on or all off for languages and currencies

* Removed unused code

* Updated colors for card toolbar

* fix props to show correct attribute

* fixes z-index issue on select container

* fix language props

* fix prop to show enabled languages only

* Avalara Tax Compliance (#1870)

* Save company object from Avalara API

* Load `appVersion` from package,json at startup. Create global `getAppVersion`

* create avaGet function to pass in extra header info. Add getTaxCodes function

* Extend plugin to also provide tax codes

* Add Test connection option in Avalara admin dashboard

* Send taxCode along with cart/orders

* Capture full tax detail in ""taxes"" field

* Update Test Credentials to use companyCode API

* Add input field for shipping tax code

* Add provides: taxCodes API to taxcloud

* add itemCode to cart/order payload

* use item id as line number. Pass in correct productId

* Pass in shipping as additional non-taxable (based on taxcode) item

* allow avaPost/avaGet to be used asynchronously

* Add setting to turn off tax calculation separately from disabling the module

* Add the rest of the fields to the form (except validation countries)

* Use correct UID and correct URL for getTaxCode

* Add setup for address validation by country

* Don't commit documents when commit is turned off. Eliminate unneeded functions

* Eliminate async versions of avaGet/avaPost. These should never be called by external module

* Add defaults for new configuration settings. Make shippingTaxCode required

* Make get/post methods use timeout, do some logging.

* Don't do address validation when package is disabled, even when addressvalidation is enabled

* Enable addressValidation by default

* Enable addressValidation by default

* Fix date parameter

* Merge. Fix conflicts.

* Modify auth arg for test credentials setup

* Extend timeout during test credentials call

* Limit address validation country options to US and CA

* Fix returned object for non-validated addresses

* Log Avalara details to custom Avalogger

* Set new defaults

* Add tax settings to account profile page

* Update account find for taxsettings to subscribe

* Only log if logging is enabled

* Write out Avalara requests to Logs collection via Bunyan logger

* Add log retention duration setting

* Add jobs to cleanup logs older than configured setting

* Add logs subscription that totally doesn't work

* Add logs publication

* Get logs and pass into Template

* Add Log-specific wrapper for Griddle

* Show individual log records in detail form

* Refine grid and detail results

* Populate entity codes and plug into taxCalc

* Use new field names confirmed by AvaTax

* Add taxSettings to recordOrder

* Update entity code field key

* removed excess panel wrapper around griddle table

* Add translations

* Show tax settings only if avalara enabled

* Fix import order.

* Setup error handling on Avalara methods

* Add dimensions/tax code to PDP (#1931)

* Edit product's schema file to include product dimensions

* Add product dimensions in variant form

* Edit product's schema and product admin form to include country of origin

* Edit product's schema and product admin form to include tax description

* Edit product's schema and product variant form to include origin country (yet to pre-populate from product's origin country)

* Edit variant form to include list of tax codes

* Refactor listTaxCodes method

* Refactor listTaxCodes method to use template state instead of sessions

* Refactor listTaxCodes method to use template state instead of sessions - template state now works

* Edit taxCodes schema to include more descriptive fields

* Include server method to save tax codes to TaxCodes collection

* (First attempt) saving taxcodes to database

* Successfully fetching taxcodes from database

* Add error block in fetching from db method

* change value of taxcode being saved in product details

* Adding select2 package

* Using select2 to display tax codes in nicer looking select box

* Correcting import order

* Editing required fields in product schema

* Using plain select field to display tax codes

* Remove tax code label; add select2 call in onRendered function instead of onCreated

* Displaying default tax code as selected in select box

* Removing unused meteor package; correcting import order

* Throwing more descriptive meteor error on insertTaxCodes method

* Display simple input box if tax provider is not enabled

* Correct the way we test for validation on address2

* Remove extra panel divs

* Add account ID to account management screen

* Adjust log details for when there is no document type

* Rename files to match style guide

* Use individual taxSettings form each account

* Add check to prevent populating duplicates

* Fix reference to accountschema

* Fix form update to corresponding accounts

* Add unique tax setting by customer to Avalara payload

* Fix exception error on geoCoder call

* Only pass in regions when it's a ""country with regions""

* Revert ""Only pass in regions when it's a ""country with regions""""

This reverts commit b8090857183ecf1ee9a8ea01159c4e445c47609f.

* Create a refundReference which is cartId + date

* Ignore line items are not marked taxable

* Move taxDescription down to the variant level and pass if exists

* Move tax settings form into manage sidebar

* Fix tax settings saving bug

* Renamed files to fit style guide

* Don't allow a wide-open Account publication

* Remove unnecessary subscription

* Don't call API if entity codes is already populated

* Simplify logic for returning no results

* Don't select a tax rate but a tax code

* Rename function

* Properly set Avalara countryList defaultValues

* Eliminate extra slash

* Eliminate all extra slashes

* Check to ensure data is returned from API

* Also log errors in Avalogger. Correctly filter for taxable items.

* Require shopId

* linting fixes

* Add label to plain select. Rename method

* JSDoc linting

* Remove unused import

* Remove unused import

* Linting

* Check configuration and throw meaningful errors if not configured properly

* Add level to log so we can filter for errors

* Tweak HTML and styling in settings panel

* Fix i18n and timeout on testCredential

* Log error with error log level

* Moving select2 under community packages

* Adding error checks to taxcodes method

* Skip config check when testing credentials

* Trigger form validation before testcredentials

* Use native methods for assign and each

* Handle error on populating Avalara entity codes

* Add i18n for custom label

* Move i18n entry to appropriate module

* Move exemption settings into avalara module

* Implement i18n for missing fields in PDP

* Fix CircleCI failed tests

* Fix CircleCI failed tests

* Revert ""Fix CircleCI failed tests""

This reverts commit 3b238a81dd3e1345d83050b82726a2547c8d2214.

* Revert ""Fix CircleCI failed tests""

This reverts commit 66f0f787cdbf0563f14e2121cf35d7f99c525d0a.

* Removing empty selector per CR

* Use import rather than fs to get package.json

* Change per CR

* Restructure Class syntax per CR

* Put back ""Custom Packages"" header

* Add TODO

* Changing default timeout to 3000 ms

* Correct error name and make error message more specific

* - updated Accounts publication name

- Update Accounts.single to UserAccount

* Fix: Dashboard panel keeps re-opening during checkout (#1956)

* Show sidebar only if shipping is not configured

* Refactor: Show sidebar only if shipping is not configured

* Fix to show sidebar only if payment is not configured

* localize prices in emails (#1957)

* add GetShopCurrency helper

* update cart currency when user changes currency

* update schema to include currency in cart / order

* add userCurrency and exchangeRate to carts orders

* update email templates to display formatted price

* update user emails to use user currency

* Use select box of countries rather than text field for ""Origin Country"" (#1967)

* Fix 404 when adding handle and then editing a variant before publishing.

* Fixed misspelling in comment

* Remove z-index from dropdown as it creates more issues than it solves

* Moved ColumnData component to its own file. (#1972)

* Prevent hiding of nested tags on mobile (#1971)

* Show Sidebar shipping in checkout

* Set actionView after payment checkout step

* Add presentational aspect for invoice

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Add state to the invoice view

* Detail on invoices captured

* Detail on invoices captured

* Add roll over list capability

* Add roll over list capability

* Add single invoice render

* Add single invoice render

* Add roll down list not quantity based

* Display unique items only

* Add quantities to line items

* Remove unnecessary parts of the view

* Seperate components for roll up lists and line items

* Add cancel capability

* Clean up UI

* Add item functions

* Add capture payments capability

* Add refunds fields

* Seperate concerns in invoice component

* Clean up invoice code

* Refactorline items

* Add data into individual line items

* linting and minor error fixes (#1973)

* remove extra unneeded check for userId

This was causing the Logger error we were seeing

* update import order

* change way of calling userId

* fixed Shops.findOne

* updated variable name

* removed html error code from meteor error

* cart.billing should now be defined to include currency

* setting default currency if shop.currency is unavailable

* update client to match server

* lint fixes

* Avalara error handling (#1968)

* Taxcloud doesn't really support getTaxCodes yet

* Ok, calm down

* Taxcloud doesn't really provide taxCodes yet

* Log Tax code errors to Logs collection rather than throwing a Meteor.Error

* Add missing import

* Use name from namespaced provides rather than name

* Pulling tax codes from TaxCloud

* Configure saving taxcloud taxes to db and displaying them

* Move around UI components

* Move around UI components

* Add total price of line items

* Format pricing to have dollar signs

* Finalize on tax data

* add cancel meteor method for orders

* Iterate on design

* Review tax display

* finish up allowing an admin cancel an order

* add cancel order workflow

* add test for orders

* add test for start and complete cancel order methods

* finish up on cancel order

* remove swal from shippingInvoice file

* solve linting issues

* fix linting issues in orders test

* fix template issues in shippingInvoice html

* create multi-action button

* refactor code based on reviews

* update shippingInvoice.js

* remove unwanted newlines in changed files

* fix eslint errors

* fix multi-action button

* refactor code based on reviews

* refactor buttonSelect

* fix test

* fix indentation issues

* fix indentation issues

* update code based on review

* update code based on reviews

* fix cancel order test

* fix bugs

* add i18nKeyLabel to multi-function button

* turn multi-function dropdown item to button

* refactor button props fr multi-function button

* fix paypal express refund method

* add payment provider payment methods

* fix payment provider refund issues

* complete test for cancel order methods

* remove inline style from translation

* add error handling for failing refunds

* remove unneccessary lines of code

* add error handling

* fix issue based on reviews

* remove shipment panel when order has been canceled

* remove newline

* Adds Reaction method for adding roles to a default role set.

Makes it trivial to create and add roles needed by a plugin to default visitor set
Usage looks like this:
```
import { Reaction, Hooks } from ""/server/api"";

Hooks.Events.add(""afterCoreInit"", () => {
  Reaction.addRolesToDefaultRoleSet({
    allShops: true,
    roleSets: [""defaultRoles"", ""defaultVisitorRole"", ""defaultSellerRoles""],
    roles: [""stripe-connect-redirect"", ""test-role33""]
  });
});
```

* Tests for adding default roles

* One more test

* Run all tests instead of just `addDefaultRoles` tests

* Fix for Account Meteor Method tests that relied on Shops not being reset

* [WIP] 2115 Inconsistent Product Image of Cart Item (#2171)

* fix inconsistent cartItem image and productField console error

* fix fetching too many records from media

* fix fetching archived images to client

* fix display variant/product image for item without image

* Order methods test (#2159)

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Detail on invoices captured

* Add roll over list capability

* Add single invoice render

* Add roll down list not quantity based

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Detail on invoices captured

* Add roll over list capability

* Add single invoice render

* Add roll down list not quantity based

* Display unique items only

* Add quantities to line items

* Remove unnecessary parts of the view

* Seperate components for roll up lists and line items

* Add cancel capability

* Clean up UI

* Add item functions

* Fix Sidebar Context (#1932)

* Show Sidebar shipping in checkout

* Set actionView after payment checkout step

* Hide sidebar on entry to profile page

* Remove Inventory subscription that is not in use (#1951)

* Get package data by shopId as well as package name (#1949)

* Add capture payments capability

* Add refunds fields

* Seperate concerns in invoice component

* Clean up invoice code

* Refactorline items

* Updated i18n settings panel (#1947)

* Updated i18n settings panel

- added new package for i18n settings
- converted to react
- added currency list
- added ability to save open state to SettingsCard to user preferences
- added ability to pluck fields in form component to enable concise
forms

* Update currency lists in admin

- Only show enabled currencies in dropdown
- Do not sure updatedAt field

* Added ability to toggle all on or all off for languages and currencies

* Removed unused code

* Updated colors for card toolbar

* fix props to show correct attribute

* fixes z-index issue on select container

* fix language props

* fix prop to show enabled languages only

* Avalara Tax Compliance (#1870)

* Save company object from Avalara API

* Load `appVersion` from package,json at startup. Create global `getAppVersion`

* create avaGet function to pass in extra header info. Add getTaxCodes function

* Extend plugin to also provide tax codes

* Add Test connection option in Avalara admin dashboard

* Send taxCode along with cart/orders

* Capture full tax detail in ""taxes"" field

* Update Test Credentials to use companyCode API

* Add input field for shipping tax code

* Add provides: taxCodes API to taxcloud

* add itemCode to cart/order payload

* use item id as line number. Pass in correct productId

* Pass in shipping as additional non-taxable (based on taxcode) item

* allow avaPost/avaGet to be used asynchronously

* Add setting to turn off tax calculation separately from disabling the module

* Add the rest of the fields to the form (except validation countries)

* Use correct UID and correct URL for getTaxCode

* Add setup for address validation by country

* Don't commit documents when commit is turned off. Eliminate unneeded functions

* Eliminate async versions of avaGet/avaPost. These should never be called by external module

* Add defaults for new configuration settings. Make shippingTaxCode required

* Make get/post methods use timeout, do some logging.

* Don't do address validation when package is disabled, even when addressvalidation is enabled

* Enable addressValidation by default

* Enable addressValidation by default

* Fix date parameter

* Merge. Fix conflicts.

* Modify auth arg for test credentials setup

* Extend timeout during test credentials call

* Limit address validation country options to US and CA

* Fix returned object for non-validated addresses

* Log Avalara details to custom Avalogger

* Set new defaults

* Add tax settings to account profile page

* Update account find for taxsettings to subscribe

* Only log if logging is enabled

* Write out Avalara requests to Logs collection via Bunyan logger

* Add log retention duration setting

* Add jobs to cleanup logs older than configured setting

* Add logs subscription that totally doesn't work

* Add logs publication

* Get logs and pass into Template

* Add Log-specific wrapper for Griddle

* Show individual log records in detail form

* Refine grid and detail results

* Populate entity codes and plug into taxCalc

* Use new field names confirmed by AvaTax

* Add taxSettings to recordOrder

* Update entity code field key

* removed excess panel wrapper around griddle table

* Add translations

* Show tax settings only if avalara enabled

* Fix import order.

* Setup error handling on Avalara methods

* Add dimensions/tax code to PDP (#1931)

* Edit product's schema file to include product dimensions

* Add product dimensions in variant form

* Edit product's schema and product admin form to include country of origin

* Edit product's schema and product admin form to include tax description

* Edit product's schema and product variant form to include origin country (yet to pre-populate from product's origin country)

* Edit variant form to include list of tax codes

* Refactor listTaxCodes method

* Refactor listTaxCodes method to use template state instead of sessions

* Refactor listTaxCodes method to use template state instead of sessions - template state now works

* Edit taxCodes schema to include more descriptive fields

* Include server method to save tax codes to TaxCodes collection

* (First attempt) saving taxcodes to database

* Successfully fetching taxcodes from database

* Add error block in fetching from db method

* change value of taxcode being saved in product details

* Adding select2 package

* Using select2 to display tax codes in nicer looking select box

* Correcting import order

* Editing required fields in product schema

* Using plain select field to display tax codes

* Remove tax code label; add select2 call in onRendered function instead of onCreated

* Displaying default tax code as selected in select box

* Removing unused meteor package; correcting import order

* Throwing more descriptive meteor error on insertTaxCodes method

* Display simple input box if tax provider is not enabled

* Correct the way we test for validation on address2

* Remove extra panel divs

* Add account ID to account management screen

* Adjust log details for when there is no document type

* Rename files to match style guide

* Use individual taxSettings form each account

* Add check to prevent populating duplicates

* Fix reference to accountschema

* Fix form update to corresponding accounts

* Add unique tax setting by customer to Avalara payload

* Fix exception error on geoCoder call

* Only pass in regions when it's a ""country with regions""

* Revert ""Only pass in regions when it's a ""country with regions""""

This reverts commit b8090857183ecf1ee9a8ea01159c4e445c47609f.

* Create a refundReference which is cartId + date

* Ignore line items are not marked taxable

* Move taxDescription down to the variant level and pass if exists

* Move tax settings form into manage sidebar

* Fix tax settings saving bug

* Renamed files to fit style guide

* Don't allow a wide-open Account publication

* Remove unnecessary subscription

* Don't call API if entity codes is already populated

* Simplify logic for returning no results

* Don't select a tax rate but a tax code

* Rename function

* Properly set Avalara countryList defaultValues

* Eliminate extra slash

* Eliminate all extra slashes

* Check to ensure data is returned from API

* Also log errors in Avalogger. Correctly filter for taxable items.

* Require shopId

* linting fixes

* Add label to plain select. Rename method

* JSDoc linting

* Remove unused import

* Remove unused import

* Linting

* Check configuration and throw meaningful errors if not configured properly

* Add level to log so we can filter for errors

* Tweak HTML and styling in settings panel

* Fix i18n and timeout on testCredential

* Log error with error log level

* Moving select2 under community packages

* Adding error checks to taxcodes method

* Skip config check when testing credentials

* Trigger form validation before testcredentials

* Use native methods for assign and each

* Handle error on populating Avalara entity codes

* Add i18n for custom label

* Move i18n entry to appropriate module

* Move exemption settings into avalara module

* Implement i18n for missing fields in PDP

* Fix CircleCI failed tests

* Fix CircleCI failed tests

* Revert ""Fix CircleCI failed tests""

This reverts commit 3b238a81dd3e1345d83050b82726a2547c8d2214.

* Revert ""Fix CircleCI failed tests""

This reverts commit 66f0f787cdbf0563f14e2121cf35d7f99c525d0a.

* Removing empty selector per CR

* Use import rather than fs to get package.json

* Change per CR

* Restructure Class syntax per CR

* Put back ""Custom Packages"" header

* Add TODO

* Changing default timeout to 3000 ms

* Correct error name and make error message more specific

* - updated Accounts publication name

- Update Accounts.single to UserAccount

* Fix: Dashboard panel keeps re-opening during checkout (#1956)

* Show sidebar only if shipping is not configured

* Refactor: Show sidebar only if shipping is not configured

* Fix to show sidebar only if payment is not configured

* localize prices in emails (#1957)

* add GetShopCurrency helper

* update cart currency when user changes currency

* update schema to include currency in cart / order

* add userCurrency and exchangeRate to carts orders

* update email templates to display formatted price

* update user emails to use user currency

* Use select box of countries rather than text field for ""Origin Country"" (#1967)

* Fix 404 when adding handle and then editing a variant before publishing.

* Fixed misspelling in comment

* Remove z-index from dropdown as it creates more issues than it solves

* Moved ColumnData component to its own file. (#1972)

* Prevent hiding of nested tags on mobile (#1971)

* Show Sidebar shipping in checkout

* Set actionView after payment checkout step

* Add presentational aspect for invoice

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Add state to the invoice view

* Detail on invoices captured

* Detail on invoices captured

* Add roll over list capability

* Add roll over list capability

* Add single invoice render

* Add single invoice render

* Add roll down list not quantity based

* Display unique items only

* Add quantities to line items

* Remove unnecessary parts of the view

* Seperate components for roll up lists and line items

* Add cancel capability

* Clean up UI

* Add item functions

* Add capture payments capability

* Add refunds fields

* Seperate concerns in invoice component

* Clean up invoice code

* Refactorline items

* Add data into individual line items

* linting and minor error fixes (#1973)

* remove extra unneeded check for userId

This was causing the Logger error we were seeing

* update import order

* change way of calling userId

* fixed Shops.findOne

* updated variable name

* removed html error code from meteor error

* cart.billing should now be defined to include currency

* setting default currency if shop.currency is unavailable

* update client to match server

* lint fixes

* Avalara error handling (#1968)

* Taxcloud doesn't really support getTaxCodes yet

* Ok, calm down

* Taxcloud doesn't really provide taxCodes yet

* Log Tax code errors to Logs collection rather than throwing a Meteor.Error

* Add missing import

* Use name from namespaced provides rather than name

* Pulling tax codes from TaxCloud

* Configure saving taxcloud taxes to db and displaying them

* Move around UI components

* Move around UI components

* Add total price of line items

* Format pricing to have dollar signs

* Finalize on tax data

* add cancel meteor method for orders

* Iterate on design

* Review tax display

* finish up allowing an admin cancel an order

* add cancel order workflow

* add test for orders

* add test for start and complete cancel order methods

* finish up on cancel order

* remove swal from shippingInvoice file

* solve linting issues

* fix linting issues in orders test

* fix template issues in shippingInvoice html

* create multi-action button

* refactor code based on reviews

* update shippingInvoice.js

* remove unwanted newlines in changed files

* fix eslint errors

* fix multi-action button

* refactor code based on reviews

* refactor buttonSelect

* fix test

* fix indentation issues

* fix indentation issues

* update code based on review

* update code based on reviews

* fix cancel order test

* fix bugs

* add i18nKeyLabel to multi-function button

* turn multi-function dropdown item to button

* refactor button props fr multi-function button

* test order methods

* fix paypal express refund method

* add payment provider payment methods

* fix payment provider refund issues

* complete test for cancel order methods

* remove inline style from translation

* add error handling for failing refunds

* remove unneccessary lines of code

* integration test for orders/approvePayment

* test for orders/shipmentDelivered

* add error handling

* write test for sendNotifications

* write more test

* finish writing test for order methods

* update changes based on reviews

* fix typo

* PDP Cleanup - Basic Details Card, Tax Card & Inventory Card (#2086)

* Rewrite product variantForm to render React component

* React component/container for product variantForm

* Adding checkboxes, divider, and changing i18n

* Refine PDP variant form UI to be up to standard

* Using Switch component instead of native checkbox

* Use settings card to wrap taxable and inventory tracking sections

* Displaying data via props(to be refined)

* Rendering tax code field depenging on enabled tax code provider

* Populating taxCode dropdown with data from db

* Populating taxCode collection with taxCodes on successful test credentials

* Remove unnecessary Meteor method

* Rename 'selectedVariant' to 'variant'

* Disabling fields based on child variants

* Passing variant object down from Template.currentData

* Activate restore/remove and clone variant buttons (to be refined)

* Subscribing to TaxCodes publication for display

* Removing alternate Blaze function

* Handle select and textfield input edit

* Handle switch toggle

* Updating state of select box

* onChange for regular input fields

* Removing alternate Blaze function

* Removing alternate Blaze functions

* Render archive label if variant is deleted

* Partly implement update quantity based on child variants

* Remove unnecessary input callback methods

* Make restore button change reactively to discard when isDeleted is false

* Make discard button change reactively to restore when isDeleted is true

* Remove unnecessary expandCard methods

* Fix uncontrolled input warning being thrown in browser console from React

* Make tax code field editable when no tax provider is enabled

* Revert taxable and inventory tracking back to defaulting to true

* Fix open/close of cards (to be refined)

* Attempting validation

* Adding style and disabled to textfield component

* Fixing opening of side panel when variant is clicked

* Fix accidental toggle of allow backorder switch

* update the way address data is provided (#2208)

* update the way address data is provided

* update const

* Change `profile` variable name to `profileAddress` to be more descriptive

* And `profileShippingAddress` is even better

* METEOR 1.4.4.2 (#2206)

* METEOR 1.4.4.2

* update Docker base to v1.3.1

* Jobs patch

As found by @jshimko

* Remove unneeded jobs import

* Added Kuwait, Saudi Arabia and Qatar currencies (#2204)

* added kuweit, saudi arabia and qatar currencies

* typos

* fix email log panel closing when email is sent (#2205)

* add order id to completed screen (#2202)

* Fix Email Notification During Order Refund (#2200)

* fix email notification when issuing a refund more than the total

* fix refunding loading

* add i18n

* 1638 Completed Order Logged Out State (#2201)

* add signIn page for completed order url when user user is logged out

* remove commented out code

* fix display notFound for orders that doesn't belong to user

* fix style nitpick

* implement review

* fix flashing `notFound` page before order completed

* Add in missing line break

* fix create product should flip into edit mode (#2221)

* Toggle Variant Visibility when Ancestor Product Visibility is Toggled (#2222)

* fix issue

* add fix to product grid settings

* Fix missing shop (#2224)

* make sure default shop fixture data is loaded before anything else happens

* fix inconsistent logging of whether register.json was found

* fix error logger syntax

* fix a few more logger syntax instances

* Add mute for known package dependencies

- Holding on a full React update
- Latest transliteration doesn‚Äôt load correctly
- nodemailer, griddle have upgrade blockers

* Add mute for known package dependencies

Missed a react dependency.

* swap unicode with missing semi-colon for regular apostrophe (#2223)

* swap unicode with missing semi-colon for regular apostrophe

* updated to use <Translation> instead of i18n-data

Also updated to spit out better / valid HTML.

- Changed tag from <h1> (‚ÄúEmpty Cart‚Äù shouldn‚Äôt be H1) to <p>, and also
removed the embedded <p> from inside the H1.

* made social share buttons on PDP ADA compliant (#2196)

* Fix permissions for items shown in admin dashboard (#2145)

* Initial test of filtering pkgs

* Filter showing packages by permissions

* Resolve issue with hasAccess check on registry items

* Comment

* Comment edit

* Call packages coll without filter

* Move audience addition to ReactionApps

* Better comment

* Check not needed again.Apps come based on access level

* space fix

* Test: Permissions on toolbar component

* hasProduct access on toolbar

* Fix data

* Use createProduct as filter

* Refactor toolbar permission check

* Improve Comment

* Add missing perms in pub

* remove comment

* Add comment on filter line

* Pin vsivsi:job-collection meteor package to 1.4.0 (#2228)

* React Router (#2123)

* Initial push for React Router conversion

* Implement more global router functions

- Added `Router.getQueryParam`
- Added `Router.isActiveClassName`
- Added shop prefix for routes
- Added blaze event for brand link to use `Router.go`
- Added `query-parse` nom module to parse query strings
- Added route to currentRoute on route change

* Route rendering

- Router initialize
- Rewrite reaction layout to better handle layout generation
- Add `App` component as router base component
- Add Router.replace function for push state replace

* Move rest of router from client dir, into router package

* Use Router.go for tagLink

* Fixes issue with browserRouter router initializing before router core
is ready.

* Fixed route resolution for to exact matches

* Updated dependencies and shrink-wrap

* Not found and unauthorized routes and redirects

* Rename admin template to coreLayout

- use layout name to get proper layout

* Fix broken import

* Fix redirect url for PayPal pay flow express

Double slash in url causes no route to be matched for react router.
Added new helper method that wraps Meteor.absoluteUrl() and fetches the
shop prefix without a leading slash.

* Enable onEnter and legacy enter hooks

* Added exit hooks and improved hook handling logic

Re-implement metadata hook

* Show package settings shortcuts only if requested

* Added Router.watchPathChange()

* Remove unused function

* Added router go for grid item click event

* Fix eslint issues

* Added router go for cart items

* Fix router context for hooks

* Added special handling for print layout

* Scrolling for content area as admin

* Fix router reload when auth state changes

* Fix lint issues

* Fix lint issues

* Fix blank pdf view

* Prevent route change when previous and next routes match.

-Remove reactivity from `Router.current()` to better align with flow
router api.
- Add reactive dependencies query and url param functions.

* Fixed reference for getShopName()

* Fixing broken blaze layout

- Extend the react-in-blaze component, and rename conflicting
`template` prop to `blazeTemplate` to avoid a naming collision with our
layouts.
- Added check for foundLayout, verify its defined before trying to
access
- Added support for blaze based layouts, if a react layout cannot be
found

* Removed unused packages

* Adjust width of container to alleviate some scrolling issues

* Higher zindex for cart slide out

* Fix getSlug reference

* Fixes issue with incorrectly displaying unauthorized template

* LingoHub based on development (#2218)

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Brent Hoover.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Brent Hoover.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Brent Hoover.
Project: reaction

Made with :heart: by https://lingohub.com

* 2217 Add Product Name To Invoice (#2226)

* add product name to invoice

* add Product name to title

* Permissions Fix: Use passed in ""audience"" param in ReactionApps (#2235)

* wip

* Use passed in audience for ReactionApps

* Remove debug

* fix display of unpublished option images (#2236)

* Restore helper to limit dropdown icons

* 1987 Panel Expander Arrow Overlapping on Dropdown (#2211)

* fix dropdown z-index

* use z-index variable

* reduce zindex-select variable value

* override `react-select` select menu z-index

* remove commented out style

* fix improper variable value alignment

* move import to main.less

* Fixes #2243 Paypal Express requiring login for guest accounts (#2255)

Adds `reaction-paypal/paypalDone` and `reaction-paypal/paypalCancel` roles to the defaultRoles and defaultVisitorRoles set

* Updated README.md

* Update version

* readme.md updates

* Removed unused code

* fix 2278 Router tables not initializing (#2279)

* fix notification dropdown links (#2280)

* update Router to adjust when shop URL is in provided data

* update notification onClick to open dashboard panel when needed

* re-add markOneAsRead

* style / small updates for release 1.2 (#2283)

* update import of Reaction

* readme updates

* import fixes

* add meteor import

* import order fix

* comment fixes

* add meteor import

* removed flow router import

* import order

* import fix

* update i18n key

* update translations

* wrap full app in translation provider

* fix multiple refunds for stripe (#2260)

* Simplify core layout component (#2257)

* Simplify core layout component

- Remove unnecessary wrappers in favor of the `Blaze` component, as to
not hide the fact that Blaze is still used.
- Add the footer template region

* Import Template

* 2203 Long Strings Handling in Product Option Title (#2266)

* fix long strings overflow in variant options

* fix overflow of option title

* change shipping / payment error messages in checkout (#2271)

Removed ‚ÄúConfigure now‚Äù link in checkout payments / shipping methods
when not logged in as an admin.

* Add the Vietnamese Dong as a supported currency (#2248)

* Add the Vietnamese Dong as a supported currency

* Refine and add an entry for the main store currency

* Re-introduce icon toolbar as shortcutBar (#2261)

* Re-introduce icon toolbar as shortcutBar

* Fix reference to PropTypes

* Hide toolbar on mobile

* Update shortcut bar and simplify tooltips

Show dashboard button on mobile.

* Fix responsive issues

Resolves some of the issues related to UI on the right hand side of the
screen being cut off at certain mobile breakpoints.

* fix issue (#2276)

* allow loader to show when one is passed in and defined BUGFIX (#2303)

* Change customer notification message when order is processed. (#2290)

* change notification newOrder message to you just mad an order

* change phrasing for newOrder notification message

* i18n translation updates (#2302)

* closing tag spacing

* update i18n key

* shop settings - move translations into local package

* shop settings - move translations into local package

* social - move translations into local package

* i18n - move translations into local package

* revisions - move translations into local package

* email - move translations into local package

* new i18n label

* move i18n into local packages

* loginServices - i18n Updates

* core analytics - translations

* new translations

* Fix Lint / remove unused packages.

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* CircleCI 2.0 and docker base update (#2334)

* convert CI config to use CircleCI 2.0

* update Docker base to v1.4.0

* improve Meteor check logic

* remove ununsed cache path

* cache node_modules

* improve cache saving order

* fix cache restore order

* improve overall ordering of CI config

* add better labels

* cache the Meteor dev_bundle after running tests

* install reaction-cli with yarn instead (way faster)

* More and more style changes

* Add Verification Url to Welcome Email (#2216)

* add verification to welcome email

* fix eslint error

* send invite email unless user is invited

* update bothe users and accounts colllection

* fix email verfication

* fix permission issue with verification route

* fix import order

* refactor accounts methods

* make changes based on review

* make use of reaction addRolesToDefaultRoleSet function to add new roles to the shop

* finish up email verification for invited user

* fix issue(refunds not showing) (#2317)

* fix conditional in Circle deploy script (#2338)

* don‚Äôt load any other fixtures until the default shop is loaded (#2329)

* allow a MAIL_URL string without auth (#2330)

* add loading component to fix error (#2340)

* Use proper color variables

* Create proper behaviors

* Fix bad evaluation

* Fix import order

* Add i18n

* color updates for styleguide (#2339)

* update brand-info-color

* color updates

* remove old color variables

* comments

* gray cleanup

* variable name change

* typo fix

* revert rgba from variables

* fix dem buttons

* Updated text colors

* Don't throwback a step if tax fails

* fix testing issue #2348 (#2349)

* Make this more of an ""exception"" flag

* Better handling for unique routes for React Router (#2327)

* Better handling for unique routes for React Router routes

* Added TODO comments

* Update router.js

* Fix git tagging on CircleCI 2.0 (#2362)

* handle git tag parsing now that Circle doesn‚Äôt

* clean up syntax

* Updated colors

* React unit testing example (#2170)

* component snapshot

* babel additions

* remove dependancies not used

* Use mocks to mock input props for component

* Change stored snapshot to match new look after merge with development

* replace babel-latest with babel-es2015

* Take care of warning

* babelrc to es2015

* Add back in missing babel package

* no more globals!

* Declare variable before assigning

* Declare variable before assigning

* Declare variable before assigning. Remove unused variables

* Remove unused variable, check

* Declare variable before using it

* Declare variable before using it

* Can't use `this` in an arrow function

* Correct function declarations

* Eliminate implied global `Alerts` + no undeclared

* Remove commented out code

* Declare explicit globals

* move default userCurrency deeper in the object (#2259)

This should fix the tests brought upon by strict mode

* Use Collection explicit functions

* Don't log doing nothing

* Make Alert a global because it's a mess

* Ok actually, don't do that

* Don't allow implicit globals

* Bug fixes

* Fixing lack of declaration

* Pass error to logger

* Fix import order

* Fix changed reference

* Add jest testing to Circle CI

* Update NPM packages

* Added npm test command

* Use an NPM script rather than global Jest

* Make changes to new CI config

* Change to proper step configuration

* For clarity, `test-react`

`npm run test-react` to run jest tests.

* Revert ""For clarity, `test-react`""

This reverts commit fc38b243eedb8f7a861495cae71651e6c2e4853e.

* Update Jest to current version

* Just testing to see if this fixes it

* Remove npm install of desperation

* Remove node cache

* Fix typo in inventory test description (#2364)

* fix testing issue #2348

* fix typo in test desc

* CollectionFS  cfs:tempstore and cfs:worker to fix concurrency issues with GridFS uploads (#2096)

* added cfs tempstore and worker to fix concurrency issues

* linting

* Correct the way we record tax overrides

* [WIP] Meteor 1.5 (#2371)

* Meteor 1.5

- include Buffer polyfill
- replaces abernix:standard-minifier-js with standard-minifier-js
- properly pins job-collections to 1.4.0

* Updated to 1.5.0 base image

* Pin react-meteor-data to 0.2.9

* Remove unused vars

Cherry pick
https://github.com/reactioncommerce/reaction/pull/2306/commits/b36709c19
e47b25049f90643739df4bcf5210d64

* update to reactioncommerce/base:v2.0.0

* transliteration 1.6.2 (#2389)

- Related to #2090 and #2091
- Reduces minified footprint by315k
- updates client import

* Meteor1.5 and docker updates (#2390)

* fix error handling in CI deploy script

* fix CI build script

* add docker-compose.yml for CircleCI

* install Docker Compose in CI

* set docker/docker-compose versions in CI env

* fix missing curl issue in CI test

* Updated 1.5 packages

* Declare variable (#2401)

* Implement missing router functions (#2393)

* Implement missing router functions

- Implement `Router.setQueryParam()`
- Fix `Router.getRouteName()`

* Fix function name for `setQueryParams`

* Fixes and tests

- Added jest config to package.json
- Added some jest unit tests for Router
- Added mocks for some dependencies
- Fixed route matching in Router.isActiveClassName method

* fix package.json to run tests (#2396)

* Removed comment

* Remove duplicated setQueryParams function

Fixed variable

* 2332 Fix Improper Cart Merge (#2387)

* add test suite to replicate #2332

* fix improper cart merge when user cart has items in anonymous cart already

* update anonymous cart `variants._id` to equal user cart `variants_id`

* fix console error when merging into newly logged in user cart

* implement review

* Change line width to match GH PR review width (#2407)

* Orders updates (#2400)

* add expandable header to summary

* i18n - move keys into local package

* new npm package

* new Badge component

* i18n updates

* badge style updates

* add Badge and clicktocopy to components

* clickToCopy component

* badge component

* i18n updates

* badge and ClicktoCopy components

* add card to summary section of orders

* Merge branch 'ek-orders' into ek-orders-summaryPanel

# Conflicts:
#	package.json

* update orderSummary fields

* fix imports

* ordersList react-ivize

* fix prop validation

* validation fixes for Badge component

* remove no longer used files

* comment out old blaze templates

leaving them here for a bit just to make sure no errors occur

* remove blaze templates

* orders panel LESS

* update workflow loop to remove extra headers

* removed errant test text

* fix translations

* update shrinkwrap

* tests

* simpleschema

* comment killing

* New test for <ClickToCopy />

* lint fixes

* fix

* add more props to Badge test

* refund button coming in phase2

* fix import / console error

* Update random.js

* lint fixes

* use route permissions in register.js files (#2388)

* Milestone 54 / Convert Navbar to React (#2306)

* Navbar dropdowns conversion to React (#2230)

* Implement currencies using Dropdown Menu Component

* Add active prop on list item in Dropdown menu

* Resolve reactivity for currency drop down

* Add language dropdown implementation

* Add select on current selected language

* Remove extra code

* Have language icon div be larger

* Fix pop over arrangement

* Fix spacing, add caret on language dropdown

* Deal with display when switches are pff

* Fix overflow issues on dropdown-menu

* Fix linting

* Close dropdown on menu item click

* Add import for Match

* Convert login views to React (#2250)

* Initial component/container setup for sign in page

* Replicate look of sign in form

* Replicate look of sign up form

* Use composeWithTracker in signInContainer

* Replicate look of forgot password form

* Create parent login container to hold general login for views

* Add switching between views logic

* Set up sign in form submission

* Set up sign up form submission

* Set up forgot password form submission

* Handle sign in action and error message display

* Remove template methods

* Remove template methods and alert message template

* Rewrite renderPasswordErrors method

* Render social buttons on login

* Add social login functionality

* Remove unnecessary blaze templates

* Move functions to React

* Implement sign up functionality

* Merge signin and signup containers

* Put back helper methods needed by other templates

* Abstract loginFormMessaged into react container

* Add forgot password functionality (part1)

* Remove unnecessary component in helper

* Remove forgot password template

* Clean up folder structure

* Solve invariant violation browser error

* updatepasswordOverlay react component/container

* completed updayePasswordOverlay functionality

* Remove stopPropagation function

* Capitalize social login name

* Show loading spinner while processing button clicks

* Solve onClick not working by removing 'event.stopPropagation()' on parent template

* Remove JQuery and use lodash

* Using 'event' instead of 'e' to reference event handlers

* Add validation for no email input on forgot password

* Add error message on social login

* Move capitalize function to helper file

* Move capitalize function to helper file

* [WIP]Main navbar container conversion to React (#2277)

Main navbar container conversion to React

* Convert to react: Tag navigation (#2251)

* Test tagnav component

* Use existing tag component

* Update component setup

* Use existing tagsList container

* Remove debugging

* Edit button

* Use tagItem loop to match styles instead of existing

* Base tagTree init

* Fix structure

* Fix dropdown mouseover event

* Edit conditional

* Base tag editatble

* Button switch fix

* On edit fix

* Selectable button icon

* Enable drop of tagtree by icon

* Init edit mode for tagTree

* Tagtree second level new tag

* Typo fix

* Fix top level width and classes

* Show Base tagList

* Lint clean up

* Remove commented code

* Style fix and show new tag on edit

* i18n

* Init saving top level tags

* Saving tags - cont

* New tag save fix

* Switching to Taglist custom

* Saving top level

* Enable new tag option

* Move class names to base comp

* Style on create new tag item

* Fix Hover back

* Move file

* Tag select prop

* Rename files

* Fix save and delete

* Reorder element wrapper

* Init passing the functions down

* Init editing new tag item on tree

* Separate the two new tagItems

* Adding new tags on tree + refactor üéâ

* Fix delete on subtags

* Reset form after save and prevent saving empty tags

* Prevent close of tree after save

* Restructure tree state to fix input

* Init refactor on tagTree

* Props setup after refactor

* Reposition button

* Autocompletion fixing

* Add componentWillReceiveProps to fix re-render and reset

* Refactor into container comp

* Remove debugs

* Use composewithTracker

* Remove props with spread

* Update props list

* Fix logic breaking new tag style

* Tag sort order after drag

* Clean un-used vars

* Add react tagNav to main navbar container

* Fix lint issue

* Init toggle visibility

* Close tags with overlay

* Remove JQuery references(part 1)

* Add router.go for tag click

* Mobile fixes and remove blaze files

* Fix click on mobile

* Remove jquery

* Remove jquery .closest

* UI tagnav classes update

* Fixes

* Fix undefined refs after merge with development

* Remove unused vars

* Editing should turn off on toggle

* Use Translation component over data-i18n

* Fix Brand name glitch

* Prefer standalone PropTypes import over React.PropTypes

* Inport i18next and Reaction in same line

* Space at end of self-closing tag

* One-lining imports

* Place '&nbsp' inside span for less random-looking code

* Add comment about style

* Use Divider component as separator

* import order

* remove duplicate babel preset packages

* Updated yarn.lock and removed npm-shrinkwrap.json

I‚Äôll try to add back in the release branch, but something funky is
going on with shrink-wrap

* Admin should be able to invite a user with the same name (#2386)

* turn the user name to lowercase

* turn the user name to a lowercase string with a random number e.g michael-alade49

* add custom name field to users and accounts schema

* create new env var for setting default admin‚Äôs name

* publish new name field for users

* remove unnecessary typeof check for Reaction var

* switch priority for user‚Äôs displayName source

* remove redundant email update and only add user‚Äôs name if exists

* Update version

* switch to Reaction‚Äôs new fork of Nodemailer (#2427)

* Added module aliases (#2436)

* Added module aliases

- Added module alias for `core/ui`
- Added module alias for `core/router`

* Revert jest module name mapper

* fix tests

- Fixed duplicated mocks warning
- added some new mocks
- fix translaton component test

* LingoHub Update :rocket: (#2420)

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* Add css style to differentiate read from unread notifications (#2442)

* Remove acceptance tests (#2430)

* Remove non-working tests

* Remove unneeded dependencies

* Fixed console error when dragging product images (#2443)

* Add closeOnClick option to DropDownMenu component (#2418)

* Add closeOnClick option to DropDownMenu component

* Fix lint issue - move handleDropdownToggle after componentWillReceiveProps

* add missing ""orders not found"" text (#2424)

* Updated chai package

- tested with reaction test, tests seemed to work normal

* Bunyan and Loggly updates (#2425)

* switch to official Loggly lib for Node and write new Bunyan connector for it

* update bunyan to 2.0.0

* add REACTION_LOG_FORMAT config option

* add extra comments about log formatting options

* refactor default admin user creation (#2453)

* update memory usage in CircleCI build (#2462)

* Navbar hover issue (#2451)

* added default hover style for languages and currencies class #2444

* added accounts css class to div in mainDropdownContainer #2444

* added hover styles for account class #2444

* added hover style for notification class #2444

* set css property overflow on horizontal to hidden (#2458)

* [WIP] 2452 fix on UI icon toolbar (#2460)

2452 fix on UI icon toolbar

* [WIP] 2356 fix on tag menu-sidebar glitch (#2472)

Fix on tag menu-sidebar glitch

* update media gallery new / deleted image indicators (#2469)

* add new status for mediaGalleryIndicator

* i18n translations for tooltips

* status-badge styles for media gallery

* update media gallery image new / deleted indicator

* style updates

* lint fix

* Remove random regex checks on names. Fixes #2461 (#2471)

* remove older Blaze based launchdock plugin (#2467)

* 2459 router range error fix (#2476)

* simple fix

* fix typo & linting

* fix linting issues

* 2422 Fix on email invite link leading to blank screen (#2437)

* imported LoginFormValidation to forgotContainer

* imported LoginFormValidation to passwordOverlayContainer

* added setTimeout function to delay rendering

* wrap component in translations (#2434)

* removed setTimeouts from updatePassword.js

* added spinner before mounting the component

* replaced setTimeout with life-cycle hook(componentWillRecieveProps) #2422

* imported LoginFormValidation to prevent console error

* Update current user's name on Navbar and profile page when address is added. (#2455)

* Update current user's name and profile when address is added

* Update user's name when address is updated

* Get correct admin user's name from env variables

* Updated dependencies (#2463)

* Move babelrc into package.json

* Updated dependencies

* Define missing options variable

* Revert minifier to abernix fork (#2486)

* Use abernix:standard-minifier-js

Replace standard-minifier-js with
abernix:c5c935e3078e4856147e3536a1174a89366fd0fe@2.1.0-beta.0

This should be compatible with current 1.5 tools, and is what we were
using before 1.5, because of the faster compilation and reduced memory
footprint.  Restoring in an attempt to diagnose build issues related to
memory.

* updated meteor package versions

* Fix error when inviting already invited user (#2433)

* Refactor invite function to send invites only to non invited members

* Refactor error message to show status code

* Change the error message to use inline Alert

* Clear input fields when there is error

* Use Reaction's blaze inlineAlerts for error message

* Eliminate console error on inviteShopMember call

* Updated timeout time. (#2492)

* Updated timeout time.

* don't autohide

This should not autohide, the error should display until a user resubmits with a new email address. If the error is hidden, they might not see it right away and miss it. This is a blocking error for this field so it should stay until resolved.

* Fixed product images not displaying on order completed page (#2490)

* Fix hard refresh on clicking tag link on product detail page (#2489)

* Provide tag component with missing click function

* Remove hard refresh on PDP link in Grid settings

* Remove redundant risul:moment-timezone (#2491)

* Fix ESLint4 errors correct eslint config errors (#2450)

* Properly nest ecmafeatures

* Fix indentation errors

* Change Proptype

* Use react-create-class until Erik finishes upgrading Griddle

* Add back in missing PropType imports

* More missing PropType imports

* Replcae `reaction-create-class` with `create-react-class`

* Add rule for un-undef

* Add missing `PropTypes` imports that ESLint is finally finding

* Add missing imports

* Ignore missing imports for Mocha

* Add missing imports

* Add missing imports

* remove import

* add in missing imports

* add in missing imports

* enforce react/jsx-indent linting

* Adding missing imports

* Missing Gravatar imports

* Remove unused helper

* Add in mocks to fix React tests

* Missing import

* Fix missing domain variable

* Change comment to reflect new version

* Adding local versions of `loadMoreProducts`

* Replacing Meteor package with npm package

* Correct use of amplify-store

* Remove call to missing function setCurrentProduct

* Ignoring these last few globals

* Fix missing lodash import

* Remove duplicate import

* Remove jsx indent rule that's causing files to fail incorrectly

* New SortableTable component to replace MeteorGriddle (#2416)

* rename TacoTable to Legacy

* upgrade griddle NPM

* rename MeteorGriddle to SortableTable

* break up sortable table from sortabletablelegacy (TacoTable)

* merge

* change object key names to use with react-table instead of griddle

* kill griddle, add react-table

* remove useGriddleStyles prop

* remove testData

* sortableTable updates

* sortableTable Styles

* remove old ui-grid, move into components sortableTable

* update size of Templates dashboard for better usability

* ridding the wrapper of old Griddle info

* more props passed to wrapper

* fixes for email table

* update Email table to use ReactTable

* email table convert to ReactTable

* custom pagination component for React-Table

* update Avalara to use ReactTable

* add spacing below tables

* remove leftover console.logs

* lint fixes

* lint fix

* query prop validation

* pagination updates

* componetize pagination

* move emailconfig css to LESS file

* style updates for sortableTable

* update translations

* custom full-table filter for ReactTable

* custom full table filter

* new match-sorter package for custom filter

* add translations for default table text

* translations

* kill translations for the moment, something is acting up

* add catch for error when no data is available

* various fixes

* fix shippo status

* Shippo table update

* lint fixes

* lint fixes

* remove log

* lint fix

* Fix linting problems introduced in new SortableTable (#2505)

* Show proper error messages when Stripe payments fail (#2499)

* Don't display random error messages to client

* Debugging upstream message flow

* Normalize/sanitize error so you can just show the error from the server to the client

* Remove logger statement

* Handle Match failures

* removing extra logging

* Fix tests

* Fix missing reference (#2507)

* Default to using shop country code or GeoIP result for new addresses (#2515)

* For new address default to using shop‚Äôs country code if it exists.

* use GeoIP to determine user‚Äôs country and set it in address form

* Add Tunisian Dinar currency (#2517)

* Add Tunisian Dinar currency

* Add entry in second shop (TND)

* Fix issue dragging images in PDP when settings drawer is open (#2506)

* Fix condition that enables images to be displayed to product grid

* Fix main image upload handler to upload main product image

* Fix send sms method to read settings of shop and buyer userId (#2508)

* Fix Errors importing exported product data  (#2513)

* remove _id fields from documents to be imported

* Use _id to look up product before updating

* Refactor product import callback

* Refactor import method to avoid single-line if statement

* Convert product grid to React: Milestone 57 (#2402)

* Add search input field

* React component boilerplate

* Render products with pdpPath

* Add class names to li

* Render visible class name and overlay

* Render media

* React alerts/content component boilerplate

* Remove unnecesarry div wrapper in prodict grid component

* Grid content

* Grid notices

* Grid controls (part 1)

* Grid controls (part 2)

* Remove grid control templates

* Add in functionality for modal

* Init product grid

* Products sub setup

* Use product object as props from productGrid component

* Refactor grid layout

* handleSelectProductItem handler on grid container

* Remove item and content templates

* Include itemSelectHandler in grid controls

* Add some more functions

* Handle product double click

* Handle product click of non-admins

* Init drag drop

* Add index to drag; and udpate call

* Update state indexes after drag release

* make method call after drag state change

* Fix css issue

* Enable drag based on permission

* Handle product click of admins(part 1)

* Use standalone PropTypes import over React.PropTypes

* Add componentDidMount and componentWillUnmount conditions to item container

* Subscription working right

* Handle product click of admins(part 2)

* Save products in state

* Add product grid to search grid

* Fix product display/click in search modal

* Handle product click of admins(part 3)

* Add order and account tables onto search

* Fix broken product drag & drop

* Display accounts and order tables using React

* Remove tag results when order/account search

* Add onRowClick for orders and accounts

* Change folder structure and add unMount

* Remove logs

* Replace unmountComponentAtNode with prop change

* Close modal working well

* Add proptypes

* Display products

* Fix import order

* Handle load more products

* Add permissions to search tabs

* Fix setState error

* Fix hover-over-preview on search, add it to default product-grid

* render loadMoreProducts button

* Fix search result onClick close modal

* Add active classes on tags

* Remove unused code

* Remove import on index

* Move react components/containers out of client folder into lib folder

* Move react components/containers out of lib folder

* Remove jquery

* Remove product hover over in grid

* Product search click of non-admins

* Use Translation component over data-i18n

* Fix error o searchorders

* Fix broken loadMoreProducts button

* Remove product hover over in grid: less file

* Remove infinite scroll on product grid

* Tweek orders search

* Remove logs

* Fix Bithound issues

* update state with new data when available

* update table to use SortableTableLegacy

* Fix switch of accounts on search

* Remove bnd

* Add on rowclick function to sortTableLegacy

* Fix bitHound failing file issue

* Add esc functionality on search

* Persist searchQuery on search re-open

* Set initialLoad state to false to avoid reload of all the product grid data on loadMoreProducts click (yet to fix setState error)

* Set initialLoad state to false on loadMoreProducts button click; fixes setState error on console

* Fix scroll in Search Modal when products go longer than the page

* Remove unnecessary function usage

* Fix import order

* Use Array.isArray over lodash

* Import $ from meteor/jquery

* Remove unnecessary variables

* Refactor repeated code into common function

* Correct error throwing

* update import alias

* use import alias

* use import alias

* use import alias

* use import alias

* update import order

* update import order

* import order

* Fix for no scrollbar in Dashboard (#2511)

* Add ability to scroll on dashbord

* Add scrolling to vertical toolbar only

* Hide horizontal scrollbar

* Fix for issue #1993 (#2518)

* Fix for #1993

* Fix linter errors.

* Cleanup.

* Fix unable to open fulfill order action view (#2530)

* Fix hard refresh when clicking View All notifications

* Fix click action for rendering orders on dashboard

* Add click handler to render action panel

* Fix Exception in delivering result of invoking 'email/verifySettings' (#2512)

* Only verify email settings when saving settings

* Move server method call to container component

* Fix import order

* update Docker base to v2.0.2 (#2537)

* Fix order action button reverting status to processing (#2541)

* correct order action workflow change

* always update selected order

* Update eslint to v4 (#2542)

* Update Eslint

* Auto-fix eslint errors

* fix 2547: vertically-center navbar link using @navbar-height height variable instead of percentage height (#2551)

* Fix issue 2535. Transliteration in Safari/IE (#2553)

* Use official Reaction fork

* Go back to standard import

* Provide sort parameter to Products subscription and remove duplicate sorting of products (#2552)

* Fix LoadMoreProducts button not working as it should (#2554)

* Apply limit to  products publication selector for admin users

* Get correct top level products from publications

* Set correct scroll check to load more products

* Version 1.3.1

* Meteor 1.5.1

* Fix You may not observe cursor with fields _id: 0 (#2555)

Fixes console error
```
Error: You may not observe a cursor with {fields: {_id: 0}}
```
Not really sure when it got introduced, perhaps in Meteor `1.5.1rc5`?

@erik and I had both seen this issue intermittently

* Version 1.4.0

- Release 1.3.1 renamed to 1.4.0 as there as some potential breaking
changes in the new React components (PDP Grid, ReactTables replacement
of Griddle).

* Rename emailTableColumn -> shippoTableColumn (#2564)

* LingoHub based on development (#2566)

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Spencer Norman.
Project: reaction

Made with :heart: by https://lingohub.com

* Longer timeout for circleci to run build.sh (#2565)

* longer timeout for circleci to run build.sh

* update no_output_timeout with unit of time

* Adds inline validation to variant & child variant form (#2531)

* Adds inline validation to form variant form

* remove commented code

* Save data only if form is valid

* move validation to a seperate plugin

* Simplify passing validation object into components

Adds ability to pass an entire validation status object into TextField component, and with a provided name, get the validation messages if available.

* fixed card open / close states

* Add validation to child variant form

* Fixed variable name typo

* Fixed typos on comment

* Fixed broken checkbox update handler

* Fixed top variant card closing on edit of some fields

* Fix issues with validation and other fields

- Changed variant form and child variant forms are now validaded on initial render.
- Changed flash top varient field red if error, green if valid
- Added `fields` object to validationStatus with field validation status and value
- Added helper function to validation status to test field validity

* Remove unused import
"
5cca54aece82911a5336bedc36c17aae29b430bc,reactioncommerce/reaction,"[Marketplace] Feature - Dashboards for multiple shops (#2429)

* Give all users access to shop selector.

* Modifies Shops publication to return all shops with matching domain by removing limit
* Rewrite of shop selector dropdown
* Use Shops publication instead of SellerShops publication in dropdown
* Remove requirement for marketplace ownership to see shop selector
* Change Reaction.ShopId when shop selector is changed
* TODO: Convert shop selector to React

* Set ShopId on shop selector change

* Regular Shop Selector should just adjust only the route.

* Remove empty line at top of navbar

* Change Reaction.shopId to be a ReactiveVar

* Add closeOnClick option to DropDownMenu

* Add shop selector to admin toolbar.

* WIP - tons of code not committed - Init switching away from getSellerShopId

* Switches dashboard context as well as published packages based on active shop

* jsDoc for hasDashboardAccessForAnyShop

* Helper method for `hasShopSwitcherAccess`

* Save user selected shopId into user preferences in database. Server getShopId now checks for user selected shop

* Change collection security definitions to use active shop

* fix typo in main.js

* Return the correct shop when editing shop details

* Check permissions for correct shop in inventory methods

* Check permissions for correct shop in inventory statusChanges methods

* Check permissions with getShopId with active shop instead of getSellerShopId or default in catalog.js

* Check active shop permissions for orders.

* Use Match.Maybe instead of Match.Optional and use callback for orders tests

* Update orders tests. Pretty sure they aren‚Äôt working as written.

* Add new helper method to get userId

* refactor getShopId to use the helper method to get the userId if available

* Refactor changed hasPermission checks to pass the permissions only and rely on the implicit shopId

* Revert Access Denied error indexing on orders.js

* Revert getSellerShopId to getShopId in lib helper that was causing tests to fail

* Fix issue in marketplace where routes are not loaded on initial load.

* Remove sellerShopId dependency in product publication

* Fix typo in browser router comment

* Remove dependency on sellerShopId in analytics publication

* Remove lodash dependency in sellerShopSettings.js

* Remove SellerShopId dependency in orders publication

* Fix issue where creating a new user without an active shop would fail

* [WIP] Add insert packages to Packages collection when new shop is created

* Fixes #2212 - adds packages, creates layouts, and assigns permissions on the fly when a new shop is created

* Change package creation log when shop is created to debug

* Fix failing products publication test

* Switch context to the new shop when a user creates a shop

* Remove unused `hasDashboardAccessForAnyShop` blaze template helper
"
086ceba8c52bd59c12b3184637a19747710e3827,reactioncommerce/reaction,"Remove commented out code
"
98bc2a3cc1dd4507411e4046451d998c40b08fec,reactioncommerce/reaction,"(refactor): remove braintree from core

"
e9172ecb64ccffad8d7a58fb5bbaa581ff2a5d71,reactioncommerce/reaction,"refactor: create connection/edge resolver helper
"
28f8bb767c3a3f83568486bafcb3ec984e13b586,reactioncommerce/reaction,"Merge pull request #3582 from reactioncommerce/mm-3574-eslint-9

(refactor): 3574 eslint-9 and Aria"
76062b8026176761b2dc3f4b717f5b91f92d7a6b,reactioncommerce/reaction,"Fix product publications (#2774)

* Fixes issue where if a user has a role for any shop, they are granted that role for every shop.
This is leftover from the original marketplace implementation and no longer necessary.

* New method getShopsWithRoles - returns shops that match any of an array of perms
New server method `Reaction.getShopsWithRoles`, wraps Roles.getGroupsForUser

* Update Product and Products publications to account for multiple shops

* Unrelated TODOs that should be in the marketplace branch

* Fixes tests by adding additional stubs for hasPermission and getShopsWithRoles
Massively simplify Product publication.
Pass `this.userId` from publications into getShopsWithRoles to satisfy tests
Adds stubs for Reaction.hasPermission and getShopsWithRoles

* touch some docs to get bithound to update

* Add menuClassName propType to fix bitHound error

* Update Products publication to publish all products when edit mode is off
"
e4a8cb1bb195c1daaed087a3e69ed3d541665dfa,reactioncommerce/reaction,"Order filtering by date (#2860)

* Install and create dummy component for dates

* Styling around component

* Styling around calendar

* Redo calendar picker

* Revamp of the calendar picker more props

* Remove unnecessary packages

* CHange RTL to false

* Change Date range label

* Inner table fixes

* Restructure less file

* Fix on click error

* Clear filters

* Show range on filter

* package.json

* Revert back versions of react and react-dom

* Style enhancements

* Add inclusion of actual date

* Change date query

* Code clean up

* Have end date included in search

* Date pick fix to include selected days
"
91cf1324c09aedc8fc32749f48dccdd37f39ce4d,reactioncommerce/reaction,"Release 1.4.2 (#2852)

* Adding react-addons-shallow-compare dependency (#2829)

* Adding react-addons-shallow-compare dependencie

Signed-off-by: Jos√© Luis Di Biase <4c7b95f5adfd626fd0932dd055f5ab0e5f8eb624@interorganic.com.ar>

* Update package.json

* Stripe patches

- Add handling for Stripe API Key handling @lcampanis

* Meteor 1.5.2

- Update to Meteor 1.5.2

* Removed unused import

* Mute dependencies

- will be updated in next release

* Remove npm-shrinkwrap

* Ignore prop type warnings

- add TODO

* Skip Stripe tests

* Skip Stripe tests
"
90d511620e6a8b9f366ee1f2dbb588210cf3ef15,reactioncommerce/reaction,"Deprecate old cart transform methods (#2756)

* Add deprecation warnings on old methods

* Add deprecation warnings on old methods

* Correct comments

* Specify method name in comment

* Remove extra verbiage

* Add missing proptype definition

* Add deprecation note to each method

* Add missing lodash import and JSDoc return description

* Remove logging as it seems to break the entire application
"
cc13cef9fd85af629d229cca1025c9c430dccbe0,reactioncommerce/reaction,"Release v0.15.0 (#1308)

* create launchdock-connect plugin (#1241)

* rebuild launchdock-connect as a plugin module

* build more flexible admin email verification method

* add Stripe dependency for launchdock-connect

* fix linting issues

* Adjust inventory on shipment (#1240)

* Trap order-completed change

* Add missing import

* Add cartItemId field to order so that we can modify inventory

* Add new ""inventory/sold"" method

* Explicitly set from and to statuses

* Handle order insert hook to move ordered inventory to ""sold"" status

* Handle moving inventory from ""reserved"" to ""sold"" status

* Fix email import

* Fix tests

* Not so much logging

* Call status change method with explicit values

* Add test for moving inventory from ""reserved"" to ""sold""

* Add test for moving inventory from ""sold"" to ""shipped""

* Force eslint to recognize that switch/case should be indented (#1250)

* Force eslint to recognize that swtich/case should be indented
https://github.com/eslint/eslint/issues/1797

* remove eslint-plugin-meteor

- we need to tune this, removing until we have time

* enable eslint-2 codeclimate

- remove meteor-eslint plugin, failing to load with eslint-2

* updated switch indentation

- test eslint switch, case indent

* Add route hooks API (#1253)

* build initial implementation of route hooks

* extend Router with Hooks and register all hooks

* more route hooks tweaks

* router namespace cleanup

* removed unused values from registry entry (linter)

* Refactor inventory (#1251)

* As noted in comments from previous PR, just some reorg kept separate from the functionality PR

* Correct matching

* Fix for decrement cart function  (#1273)

* Add failing test

* Fix for update Mongo command

* Add failing test for ""decrease below zero""

* If removeQuantity is more than quantity remove the entire line

* updated linting error

* linting error fix

* listing issues

* more cleanup and linting tweaks

* fix eslint config for object key quotes

* fix tests after error message update

* revert quote-props linter change

* revert lint changes

* Simplify logic per CR comment

* import moment-timezone (#1261)

- fixes error .names undefined
- for loading tz in i18n settings

* Fix inventory tests (#1254)

* Reduce size of the cart so that orders don't take so long to process.

* Add a wait before pulling record

* Add a wait before pulling record

* Wait after calling Meteor method

* Longer timeout

* Longer timeout

* Temporarily bypass failiing inventory test (#1280)

* fix for #1072 (#1247)

fix for #1072

* Use forked version of authorize.net that doesn't have vulnerability (#1252)

* Update circle node (#1281)

* update circle node to v4.4.7

* remove unused packages

- remove eslint-plugin-meteor
- remove bunyan-loggly (insecure dependency)
- currently not in use

* updated package.json (#1286)

- updates jquery-i18next
- updates i18next-browser-languagedetector

* Create email job queue and Reaction.Email namespace (#1282)

* build job queue for email and refactor related methods

* put placeholder content in coreDefault email template

* add rate limiting for accounts and notification methods

* put order completed template at correct path

* update old jquery-i18next

* remove log

* remove unused var

* remove unnecessary filler in placeholder template

* log warning when email template isn‚Äôt found

* return job object from Reaction.Email.send()

* fix missing import

* fix comment for email method

* remove debugging logger

* updated to remove name from email

should be enough info

* logout and hasPermission updates (#1290)

* updated hasPermissions, router behaviour

- resolves #1122
- refactors client hasPermissions to wait for a userId if one isn‚Äôt
immediately found
- intentionally not redirecting to home page (not sure if that‚Äôs the
best behavior, better to have login?)
- adds subscription manager to a few more collections

* fix typo

* import lodash

might work better if _.find exists

* check for existing route table

* Fix PayPal PayFlow discounts and refunds (#1275)

* allow discounts and refunds with PayPal PayFlow

- Fix discounts so they are working
- Allow 100% discounts
- Fix refunds so they are working

* wrap PayPal PayFlow in wrapper for easier testing

* PayPal PayFlow refund test

* removed temporary file

* updated cc error message

* update cardNumber schemas

cardNumber schemas were not allowing valid credit cards, such as Amex
(15 digits), some Visa (13 digits), and foreign Maestro (12 - 19
digits). This updates to allow these lengths to be input.

* Remove bash script from postinstall to fix Windows installs (#1299)

* don‚Äôt run bash scripts in postinstall because Windows

* add fallback fonts back to public dir

* release 0.15.0

- updated package in preparation for new release

* Allow any user who has the createProduct permission to also delete products (#1263)

* - ignoring my custom entrypoint (for running prod image with src)

* - allow users with createProduct permission to delete products (for marketplace withmultiple sellers)

* - removing .gitignore files that is not welcome in repo

* Fix Braintree discounts and refunds (#1265)

* add Braintree Payment error to en.json

* enable discounts for Braintree payments

Braintree was not capturing discounts, instead using the amount in the
original authorization for the capturing. This update changes the
amount to the paymentMethod.amount, which includes discounts.

* removed else statement after an if containing a return

Since the return inside the IF statement will effectively kill the
process if it‚Äôs hit, there is no need for the else.

* added testing for Braintree refunds

This code still needs some love, just wanted to get it up for others to
take a look at.

* remove no longer needed commented code

* remove no longer needed commented code

* added field to expected response for testing

* moved braintree/refund/list methods into BraintreeApi wrapper

Creating a wrapper for Braintree in order to more easily perform testing

* move braintree methods into new file

* reconfigure all braintree payment code to no longer use ValidateMethod

* fixed lint issues

* removed code used to skip over 24 hour braintree delay (for testing)

* Rename braintreeapi.js to braintreeApi.js

* display absolute number of adjustedTotal

due to various instances of rounding numbers for display purposes, the
adjustedTotal would sometimes display -0.00, as the adjusted total was
technically -.00000000000000000000001, even though we display 0.00 when
we round it. This update just shows the absolute number, as this is
simple a display number and does not have any affect on what is being
sent to and from the payment provider.

* updated schema to match supported payment methods

The current Schema had a 16 number minimum for credit cards, however
braintree supports cards which have number lengths ranging from 12-19

* min -> max

* removed comments

* test testing

* update braintree test

* update exports of braintreeApi functions

* fixed callback error when action has no callback

* Updated error message to make more sense to a human user

* linter fixes

* updated 'Logger.info' to Logger.debug

* removed unused test

* removed commented callback

* don't log full order details on transaction error

* fix refunds and discounts for authorize.net (#1279)

- Fix discounts so that they are correctly sent to authorize.net

- Allow 100% discounts by adding the ‚ÄúvoidTransaction‚Äù function and
voiding transactions

- Update error messaging for Refunds, as we do not (yet) allow them
from Authorize.net

* Fix Stripe refunds and Double Discounts (#1304)

* added comment to explain voiding vs applying discount

* add ___ for correctly calculating Stripe adjusted totals

Stripe doesn‚Äôt ‚Äúdo‚Äù discounts, instead they take the discount sent to
them, and apply it as a refund. This was causing any discounts to show
up twice - once as a discount, once as a refund - in our adjusted
total. This update fixes that by re-adding the discount price into the
adjusted total when the payment provider is Stripe.

* also 100% discounts on Stripe

* humanizing an error code

* removed unintentional text

* linting fixes

* removed unused commented code

* removed unused commented code

* Taxes (#1289)

* initial commit tax-rebase plugin

Initial commit for issue #972

* split providers to plugins/included

* Griddle updates

- fork MeteorGriddle into core/ui-grid
- move fetchTI
- add i18n taxSettings

* initial grid editing

* add taxSettings labels

* initial custom add / edit tax rates

- initial working forms, edit toggling.. bit rough..

* rename tax-base to taxes

* updated custom grid

 - adds row selection

* add custom rate form reset

* updated custom settings

* add cart hooks to trigger taxes/calculate

* update hooks, taxes/deleteRate

- also adds taxes/deleteRate

* migrate schemas to plugins

- also set taxCloud jobs to not run by default

* add custom tax rates calculation

- add taxes, tax to cart schema
- taxes not published to client
- updates global cartTotal helpers

* check for shipping

* migrate settings to plugins

* add tax hooks to plugins

 -abort idea on ‚Äúprovides‚Äù as a package property

* Avalara Tax Lookup

 - adds taxes/setRate method

* comment unused fields

- comment out first implementation unused fields

These are fields that will be used future enhancements to taxes.  They
are commented out for now.

* logger cleanup

- move info to debug

* updated product data with default taxable items

- add taxCode placeholder to schema

* taxCloud tax rate calculations

* disable taxjar, check for packages

- disable while module is not functional
- WIP fetch rates and api configuration

* custom rate ui cleanup

* taxes method test

- a weak attempt at a test but gets the ball rolling and actually fixes
a todo

* updated test, versions

- add done to test
- updated meteor package versions

* remove unused template registry entries

- final cleanup, ready for PR to development
- pending tests
- pending docs

* avoid running country-data unless address exists

* add tax rate delete

- adds delete and confirm to edit form

* linted griddle.js

* remove unused import

* fix display of taxes in order workflow

perhaps this should be updated to ‚Äútax‚Äù, instead of taxes in the
invoice object.

* line item calculations

- added for custom rates
- added for avalara

rates are calculated by individual line items but on a general rate for
the cart.

* update case linted

* updated variant methods

- update products/updateProductField to handle boolean
- kludge update of childVariants when parentVariant is updated
- remove default value from form
- small cleanups
"
e2efb0ce9c31c1f2ba0091a545b661e321d0ea69,reactioncommerce/reaction,Merge branch 'release-1.8.0' into refactor-3635-willopez-remove-meteor-collection-hooks-dependency
25a2a640fbe057d9a94067965e01bc8a049ef743,reactioncommerce/reaction,"Merge branch 'release-2.0.0-rc.7' into refactor-aldeed-split-tax-rates-plugin
"
3e04d1d49fc1b0bb38e8700d704b9a2488960444,reactioncommerce/reaction,"Export helper functions out of components, add JSDOCs for them
"
65d573cc8c6f0ce71e459915d689c1eaddf12291,reactioncommerce/reaction,"(refactor) Remove disabled TaxJar plugin
"
95509fbeae166f68442acf5cad1c37143bab2f5d,reactioncommerce/reaction,"Merge remote-tracking branch 'origin/release-1.8.0' into refactor-3632-willopez-use-reaction-event-hooks

# Conflicts:
#	server/methods/core/orders.app-test.js
"
49190752c3ad632b1552770f7592b1e1f1e93008,reactioncommerce/reaction,"Merge pull request #4266 from reactioncommerce/feat-4263-nnnnat-non-meteor-schemas

(refactor): 4263 nnnnat non meteor schemas"
f84c4f28ecb4a1ab8eb937a008bb11dacf0019a6,redhat-openstack/infrared,"[Undercloud] Install from CDN

* Adds CDN role
* Apply to hypervisor and undercloud
* Add --cdn argument
* Add cdn support to verison discovery
* Pull latest redhat_subscription module for bugfix:
  https://github.com/ansible/ansible/pull/24179
* Fail images-update for CDN or outside access
* Remove unused duplicated ""images-repos"" from spec
* Discover version based on channels
* Add documentation

Closes #285

RHOSINFRA-1069

Change-Id: I0a19d4da0ca5c5973bef28b8b63c0c988d6f9fa8
"
d57a1dd5f234bde001007be1320a505250291c6c,rubberduck-vba/Rubberduck,"moved Meta property to IInspectionModel interface; removed Description and Meta overrides in concrete implementations (implemented as virtual in InspectionBase instead).
"
51e8f883d95c9295a375305659a50657752b25ab,rubberduck-vba/Rubberduck,"Change APIs to use `Type` instead of `IInspection`
"
ae72089f9b99d1fc32a3a678513516c174d2901f,rubberduck-vba/Rubberduck,"Make TestEngine more responsible

LastRun and running by recorded outcome were cluttering the TestExplorerModel.
Both these responsibilities have been transferred to the TestEngine as the
single source of truth for the outcomes and run state of tests.

This implies that the DelegateCommands and methods used in the TestExplorerViewModel
are now full-fledged classes of their own. They are accordingly extracted into their own
classes in a separated namespace to avoid cluttering the Commands namespace
"
6dc44c0f5e18ede69ea85e5658706ee4fd9bfb16,rubberduck-vba/Rubberduck,"Substantial rework of Rename Refactoring
"
a234948522e818cbb498cca1147e791c6481a41d,rubberduck-vba/Rubberduck,"Merge branch 'next' of https://github.com/rubberduck-vba/Rubberduck into ExtractMethod

# Conflicts:
#	Rubberduck.Refactorings/RemoveParameters/RemoveParametersRefactoring.cs
#	Rubberduck.Refactorings/Rename/RenameRefactoring.cs
"
530b486a48bda20b4ebc137c08d7b4ef96f8805b,rubberduck-vba/Rubberduck,"cleaned up NativeWindowMethods
"
5582c1caed308a3b6a76a11005ab2d2945639680,rubberduck-vba/Rubberduck,"Merge Main and rename one more variable
"
12f15b47f60297cfcfba5a3eff7b7683384acc96,rubberduck-vba/Rubberduck,"Remove duplicated resource strings.
"
3f422524c391e01d2b7ad3a37150cf72c8063d2a,rubberduck-vba/Rubberduck,"Close #740 (surgically remove variables from a list) (#1556)

* Close #740 (surgically remove variables from a list)

* Fix a bunch of bugs.  Add a bunch of tests.

* Fix bug in Encapsulate Field
"
4567265daac10c5869aa53b3f521895ecee4b51c,rubberduck-vba/Rubberduck,"Missed some cleanup
"
8c30cc59f0cfce0c1270c757719bdeb37c80c1df,rubberduck-vba/Rubberduck,"Drop no longer needed explicit System.* References
"
440a11236ac90828870bbbaf8c6b1906a7bc60d3,rubberduck-vba/Rubberduck,"Reparse after refactorings are run.  Rename all `parseResult`s to `state`.
"
76426be60d75a41f00fadc36a3299f866ecbd7d0,rubberduck-vba/Rubberduck,"Adjust the quickfix tests to the new setup of rewriting

In addition, the tests are streamlined to use methods from a base class in order to reduce code duplication.
"
b4ad2acad3b55f15a82c85413a0019329966f41a,rubberduck-vba/Rubberduck,"Refactor unit test commands
"
27d5997ae8846a22a8c594f27e89aa973e70ebd1,rubberduck-vba/Rubberduck,"Final refactorings, now only need to apply the blackbox testing
"
7385390fc092799d46f8a945b384718efa5e2818,rubberduck-vba/Rubberduck,"Merge pull request #898 from Hosch250/ExtractInterface

Extract interface"
e9ef9b3ebdba08854ae846e261cb7aaf8b263afc,rubberduck-vba/Rubberduck,"Merge pull request #1255 from autoboosh/splitparserlexer

Split combined parser into parser and lexer and fix a few reported grammar issues"
b297f8995fa526118b963743dcbaf4c3ac5bd838,rubberduck-vba/Rubberduck,"Rename tests (one fails because of buggy code)
"
9ba00ec12c1e1c26efc556b948f121828d3922d3,rubberduck-vba/Rubberduck,"Merge pull request #85 from autoboosh/simplenamedefault

testing refactored resolver"
a883ec0ae5a410e002d7f36c34afeb3fc0124f9b,rubberduck-vba/Rubberduck,"Made ParseTreeValue immutable.

Other misc changes to unit tests and LetCoercer
"
6cfe14aae1dd449399f03d954b6f58dcb7aaa779,rubberduck-vba/Rubberduck,"added collapsable split panel for displaying error states
"
c0ac348286250f4488d0d11e50647601088bee13,rubberduck-vba/Rubberduck,"cleaned up unused types, added ClipboardWriter, implemented copy test results to clipboard
"
713d968d968c360cb856d3ef75d50ad784fd7d16,rubberduck-vba/Rubberduck,"Merge pull request #721 from Hosch250/RefactorMenus

Refactor menus"
cde8c8681ae4595e3a6d392665ff9ff21d0297b1,rubberduck-vba/Rubberduck,"Merge branch 'next' into ConcurrentlyConstructingDeclarationFinder

# Conflicts:
#	RetailCoder.VBE/API/VBA/ParserState.cs
#	RubberduckTests/Refactoring/EncapsulateFieldTests.cs
"
a781419c789caed5d4e2698c07da888b29859ef8,rubberduck-vba/Rubberduck,"Clean up Remove Parameters tests; temporarily comment out broken tests
"
41c9b2151d97b8ca8569bc8288e769d838a28551,rubberduck-vba/Rubberduck,"extracted UnassignedVariableUsageInspection code file
"
4177f3d5ee9764e7a95b1602b0e438411925099c,rubberduck-vba/Rubberduck,"Styling of obsolete members in Code Explorer
"
3a210be6c42735eb7260a5f4a2507f3131e990e6,rubberduck-vba/Rubberduck,"Merge pull request #3376 from IvenBach/next

Consolidate Empty(If|Else)Block into EmptyConditionBlock"
70c6acbb6556aaca24ede43009b19eefd1b9046e,signumsoftware/extensions,"rename Entity to Embedded
"
59dbc5c0f234c24434b8a3d2aede379cca394b4f,skylines-project/skylines,"controllers.settings: move code to UserController

Allow admins to edit any user.
"
03d785f1c17c55520862e1eb79fb37ff3944abba,skylines-project/skylines,"utils: Move computed property macros into ""computed"" folder
"
9dce12dd5c644a280c0091ee8aa24da7de8ead04,skylines-project/skylines,"frontend/flights/phases: Move JSON generation into Python code
"
3971d17521bbe1fbc277df84f3a7b26cb14d7983,suculent/thinx-device-api,"logic simplified
"
466581ee06d4d873fafe1014b9d7e3dcd1f8fd93,unitystation/unitystation,"Major performance improvements and hiding player fixes

This commit doubles the FPS of the game build. It also improves the
player sync with server by removing the server updates from a SyncVar
and makes it use a sequenced realible channel instead. This also
completes the Hide in Cupboard feature for players.

Changes:
- Deactivated all redundant cameras (background and interact) and added
the layers back on main cam
- Added UpdateManager to control ‚Äútickrate‚Äù of objects with
Update/LateUpdate/FixedUpdate. For more info see the readme in
Script/Managers/UpdateManager/
- Move serverstate sync from a SyncVar Hook and to using ClientRpc‚Äôs
instead. This has improved the movement of other players on a client
but still there is a few hicups as the state doesn‚Äôt arrive in time
(player stops for a split second)
- The closetplayerhandler now moves the deactivated player with the
closet allowing the player to interact with the cupboard (jumping out
if it is unlocked while it is being pulled)
"
646c4d4d7e7d1560d0ef12083dd835d7464552cf,unitystation/unitystation,"Refactored Headset Key messages; Fixes #904 except dropped key sprite
"
c1ad5e0f392d48e703c00218c9263517aaf406b9,unitystation/unitystation,"- Blur Improvement.
- Resources Clean up.
- Refactoring.
- Mesh Generator buffering (Removed new mesh allocation).
"
a91680dc8571cafcfc53981ed90193d909d4aa36,unitystation/unitystation,"Health and Factory clean up

- Synced state of pete for new clients #373
- Added a new Factory named EffectsFactory and moved all effect
functions out of ItemFactory
- Added BloodSplat to EffectFactory, it now can be called from anywhere
on the server side making it easier to spawn blood effects
- Changed name of HumanHealthBehaviour to PlayerHealth
- Changed name of UI.PlayerHealth to UI.PlayerHealthUI to avoid
confusion
- Changed name of SimpleAnimalBehaviour to SimpleAnimal
- Turned off round timer for scenes that are not the DeathMatch scene
- Reinstated the Animal Harvest functions

TODO:
- Create stat sync for new clients on the HealthBehaviour level
- Move Blood adjustments to the Torso Body part for PlayerHealth
- Create an easy to use reporting system on PlayerHealth to make it
easier in the future for medical features
"
b239dbdf20636bc3160e0db728091aef08431ff1,unitystation/unitystation,"Reworked the map editor.

Added some code on the map editor views to recursivelly search for tile
prefabs on 3 folders : Objects, Items and Structures.
Changed the file Structures so now adding a folders and tiles will
automatically load a representations on the map editor.
Code is not optimized, looking forward for tips on how make it less
repetitive.
"
9320624d0c40aa56a0eeb2989babbbfd9a7eb7ff,unitystation/unitystation,"Drop refactors
"
51df98a15fb7575d255a0bb572c7d0441fa66ef4,unitystation/unitystation,"clamping moved to PhysicsMove, started work on NPC_Pete
"
550ab2e6b30a4514f9a9c73cf8dd2ed17da2744b,DarklightGames/DarkestHour,"* simplified how exit positions work (no more sorting by distance)
* fixed exit positions for:
  * stuart
  * cromwell
  * shermans (all of 'em)
* add passengers to:
  * achilles
"
d216ea7b7b5ba540f1813e73926c8f651bd456b5,DarklightGames/DarkestHour,"unified indentation in defaultproperties blocks for all files
removed empty lines in defaultproperties blocks
"
b6892241d8538359a6278c7e5c881e6225a52257,DarklightGames/DarkestHour,"Minor formatting & layout changes to wide range of classes - no functional changes
Mostly trivial. Removed lots of comments that were serving as temp notes.
Couple of very minor re-factors.
"
48140b648827fb2325d12b671c94670b5a359c8b,JuliaReach/Reachability.jl,"dimension mapping input -> output for reach/project
"
516b530ce2afea6ed07b54c057381885b8a027e1,PanDAWMS/panda-bigmon-core,"Moved fileList table to datatables plugin
"
5a964a79fa57a64d73d46fc77b133b48a5e6e7a8,TeselaGen/openVectorEditor,"converting facets and cleaning up debugger statement
"
bea55ce15e85e740d65af53140e1066b5f55786a,TeselaGen/openVectorEditor,"reorganizing the app layout a bit
"
0c59f8638b7ad9bffd2a93109bfd7aea84eeb581,axkr/symja_android_library,Improved Variance() function
1b23ca97b92f318b1b249a2942d7c8d4e5656d18,axkr/symja_android_library,Clean up
ffe27370c6854e3e994ec449ebf252c1be037995,f1nalspace/final_game_tech,"Added description block for all demos
Removed obsolete source files (main.c or main.cpp)
Forced ""compile as"" parameters for all projects
"
63fff0b2cd687ab985c8006ffb0c28d632499dfb,input-output-hk/cardano-sl,"[CSL-2346] Refactor configurations

* Put ntp at the top of the `lib/configurations.yaml` file.
* Added `withNtpConfiguration` which reads the configuration file using the same
configuration options but using `ntp` key.

This way ntp feature is completely seprate from all the other parts and
it could be removed from `Configuration` record.
"
80ae70a3135e4a03b68e3e595e5f03a20e2d8e4c,input-output-hk/cardano-sl,"Merge branch 'feature/csl101-tx-rewrite' into develop
"
d0f1e926aa10eb730fefa991f80607cd815abcf4,input-output-hk/cardano-sl,"Merge pull request #172 from input-output-hk/epic/csl953-blake2b

[CSL-953] Use blake2b instead of blake2s as the main hashing algorithm"
723e54012e7c3bde15c515cbd13802d21966cd31,input-output-hk/cardano-sl,"PSK: Rename epoch -> light, simple -> heavy
"
f2877d00dc15ff644e13f1a0bc56b45c07628c13,input-output-hk/cardano-sl,"[CDEC-374] Create update-test package and move Arbitrary instances (#3107)

* [CDEC-374] Move modules to src/ and Arbitrary instances update-test

* [CDEC-374] Remove default-extensions and other minor fixes
"
3a1779516f054aed0b1a95b733a340336ca820b2,input-output-hk/cardano-sl,"[R-120-17] Refactoring to reduce pain in debugging and REPL work (#2916)

* Banish a ton of redundant constraints to make GHCi easier to use

* [R-120-17] Add NFData instances

* remove weirdly located instances
"
4556344104a0bd208499fd110db5d761dbb17da9,input-output-hk/cardano-sl,"[CDEC-360] Create block-test package and move Arbitrary instances (#3075)

* [CDEC-360] Create block-test package and move Arbitrary instances

Created cardano-sl-block-test package.
Moved Arbitrary instances into this test package.
Renamed modules from Pos.Arbitrary.Block.* to Test.Pos.Block.Arbitrary.*

* [CDEC-360] Fix whitespace

* [CDEC-360] Fix up cabal file per @ruhatch's review

Fix author and maintainer fields.
Remove default extensions and instead explicitly specify extensions at the module-level via the LANGUAGE pragma.
Remove build-tools and ghc-options pertaining to cpphs.
"
7bbd7847edf4f14580d3368b2c37b2d35343077e,input-output-hk/cardano-sl,"[CDEC-319] Remove unneeded build depends from cabal files
"
5ea883540dbb7de28b3f1f1a7a6d5aedd4c773be,input-output-hk/cardano-sl,"[CSL-2346] Remove ntp slotting

Rename `type SimpleSlottingVar = TVar SimpleSlottingState` type as
`SimpleSlottingStateVar`, so the name is not confused with
`SlottingVar`.
"
03510d04d243d1cb9ecb2a2bd1e5392d1b64bd33,input-output-hk/cardano-sl,"[CSL-671] Refactor Pos.Worker
"
32026cf185ce26150345a15f31af6e056a931015,input-output-hk/cardano-sl,"Rename generateNewSecret -> generateAndSetNewSecret + some cosmetics
"
a1d1f466a7c497f4daf0490f59aeef6bcd246f31,input-output-hk/cardano-sl,"[CBR-347] Delete `IxSet'`

We had _two `IxSet` wrappers, one introduced by Alfredo, and one introduced by
me. Alfredo and I agreed to migrate the code over to the one I introduced, as
it is bit more feature complete. The most important improvement that my `IxSet`
wrapper introduces is that it doesn't require `Eq` or `Ord` instances for the
elements in the set, but instead introduces a concept of a ""primary key"", and
compares primary keys only, for better performance.

This updates the code base to use the (new) `IxSet` wrapper throughout. It
still allows for an `IxSet` of V1 addresses, which we really should not do, but
that's a problem for a separate PR (and a separate ticket: CBR-356).
"
f9de0b0cd7a3904128fad83b2844e1adea3124c1,input-output-hk/cardano-sl,"Remove redundant language pragmas
"
80ea46ec1e0720a710883c6952b7e2fa5b128acf,input-output-hk/cardano-sl,"[CSL-295] Renaming and relocating Serialized class (now AsBinaryClass)
"
a82c0f0be22c82cd09fadaffc28c7318cbc78b24,input-output-hk/cardano-sl,"Merge branch 'master' into refactor/csl777
"
7f202d0d6ae303a03ea2d5528386ce728257e658,input-output-hk/cardano-sl,"[CSL-210] Refactor Pos.Crypto tests

This commit adds applications of the -XTypeApplication pragma
where possible in the Pos.Crypto.Arbitrary module.

Redundant type signatures have been removed from Pos.CryptoSpec
as well.
"
77ec4d0cd207b4dadddb0f44d237fba59c050e45,input-output-hk/cardano-sl,"[POS-40] SscMessage refactoring is done

1. Pos.Ssc.DynamicState.Communication if fully refactored
2. In Pos.SSc.DynamicState.Instance SscStorageClass is fixed
"
d79aca1e295b49e49ac0212c29d2e8a9b8f43404,input-output-hk/cardano-sl,"[CDEC-377] Reunite crypto SafeCopy instances

When these `SafeCopy` instances were moved from the `lib` package they
were just moved as a single file of instances. They should have been
re-united with their types as is being done now.
"
c906137ea93bb32c8d37f44d4fa8ce51eb212f64,input-output-hk/cardano-sl,"[CBR-146] Rewrite generators and test infra

This is a big commit that makes significant improvements to the generators and
the testing infrastructure.

* Add validator for `Inductive`

The validator is marking the input as invalid, so the problem is probably in
the generator, not the wallet models.

* Identity problems in the existing block tree generator

Note that the old generator is completely replaced; the new generator follows
the old one in approach and takes over ideas, but is significantly different in
the details.

* During input selection, no special provision was made for the case where the
  UTxO got empty during generation.
* Output selection was for some unknown reason also based on the UTxO, but
  output selection does not seem to be related to unspent _inputs_. Instead the
  generator is now given a set of addresses it can choose from at any point.
* Output selection was not filtering out AVVM accounts.
* When generating the transactions for the next level in the tree, all
  transactions were created using the same UTxO, not accounting for the fact
  that once we generate a transaction that uses some of the inputs in that
  UTxO, other transactions can not use those anymore.
* After selecting a random subset of the available transactions at this level
  of the tree, we then nonetheless used the _full_ set, but computed the UTxO
  based on the subset.
* Similarly, synthesizeTransactions also made the same mistake of using
  the UTxO for output generation.
* When we were selecting a subset of the generated transactions to be included
  in a particular branch, we were repeatedly selecting from the same total set
  of transactions, potentially selecting duplicate transactions.
* The flattening from trees to actions (with rollbacks) was incorrect.

* Refactor Inductive

This turns `Inductive` to a list of wallet events. We needed this in some
places already, and ended up with two variations on `Inductive`, which wasn't
very satisfactory. Moreover, the blocktree generator probably needs yet another
variation again. With this new definition they can all use the same construct.
It also happens to clear up a nasty bit of code in the DSL-versus-cardano
wallet interpreter.

This does not update all the code, since I'm planning to replace the
`Inductive` generator.

* Refactor: split Abstract into submodules

* Rewrite UTxO/Inductive generators

This takes advance of CBR-262 to avoid the DSL-Cardano roundtrip to compute
transaction fees, which allows us to simplify things significantly. It also
splits the generators more cleanly into blockchain generators and inductive
wallet generators. Moreover, the inductive wallet generator now generates calls
to `NewPending` from the get-go, rather than inserting them after the fact
(which was a lot more difficult to do with rollbacks).

* Improve tests, fix bug in full model

This makes a number of improvements to the testing infrastructure

* Fee estimation is no longer hardcoded but passed as an argument
* Better pretty-printer for transaction outputs
* Simplified definition of 'ours' in the abstract wallet definition
  (it was `a -> Maybe SomeKeyPair`, now it's just `a -> Bool`)
* Added `expectedUtxo` to the abstract wallet model, and used this to state the
  invariant that the utxo and the expected UTxO must be disjoint.
  NOTE: This invariant currently breaks due to bug in spec.
* Added `dumpState` to abstract wallet model to faciliate debugging, and
  added pretty-printers for the states of all the wallet models.
* Differentiate between applicable invariants for no rollbacks,
  basic rollback model and full rollback model.
* Fixed bug in the implementation of the full model which didn't change
  the definition of `change` to take dependent pending transactions into
  account. The tests were catching this now (yay!).
* Generalized the testing infrastructure so that we can instantiate it
  easily to a simple model with simple addresses, as well as the real
  model that matches what happens in Cardano.

NOTE: Disabled the new invariant for now, until we fix the spec.

* Clean up testing of the kernel

This now completes the refactoring of the testing infrastructure. All tests
show green, and now include rollback!

(The invariant that is broken due to bug in the spec is commented out for the
time being.)
"
8f91f43b4fc3c5fa5fe0e8960e8b947a2acf9418,input-output-hk/cardano-sl,"Merge pull request #1847 from input-output-hk/neongreen/csl-1279-ssc-ever-after

[CSL-1279] Part IV: Final SSC cleanup"
6bf4231f416d40fdfa5c639a994fcd1d4d3c0033,input-output-hk/cardano-sl,"Refactor DHT module
"
6dcf8746d38880fab43a5c227e4544805f08f869,input-output-hk/cardano-sl,"Merge branch 'master' into refactor/csl755-db
"
46fa27231cd364e676343ba02180c57c09b25e30,input-output-hk/cardano-sl,"Merge pull request #2636 from input-output-hk/coot/csl-2346

[CSL-2346][CSL-2318] Refactoring of Ntp"
d2dd4dffa3e9d279dbbc7e152c8e3687d857d774,input-output-hk/cardano-sl,"[CSL-105] SscTypes -> Ssc
"
e89fc2fb818841b49517f39ec98f67d8aa976422,input-output-hk/cardano-sl,"[CDEC-334] Create delegation-test package and move Arbitrary instances (#3102)

* [CDEC-334] Move Arbitrary instances to delegation-test package

* [CDEC-334] Remove default-extensions

* [CDEC-334] Change delegation-test package version to 1.3.0
"
81a78179036ded539938d8cbfccabf64a5486a59,input-output-hk/cardano-sl,"[CSL-74] Merge branch 'master' into fix/csl-74-refactor
"
e82e4b3fb1b030c59577a3c7eef29fe92a5de6a8,input-output-hk/cardano-sl,"CDEC-433: Move test code for update package to infra
"
8c5e2f804190b78e51f9f59df3ffbaf74ce9a4e5,input-output-hk/cardano-sl,"[CSL-2343] Remove wallet/node in favour of wallet-new/server (#2626)

This PR renames `cardano-node-new` into `cardano-node`, deleting the latter from the `executable` section of `cardano-sl-wallet`.

Effectively `cardano-sl-wallet` is a library-only project, starting its deprecation cycle.

* [CSL-2343] Remove wallet/node in favour of wallet-new/server
* [CSL-2343] Remove obsolete script"
6721c09cfe3a863619b9033dfbd159cb3e15c323,input-output-hk/cardano-sl,"[CSL-295] Merge branch 'master' into refactor/csl295-serialization
"
9346023c764f08145145d696b3b5094182890674,input-output-hk/cardano-sl,"Merge remote-tracking branch 'origin/master' into martoon/csm237-split-methods
"
f38ceb6477edec6d692d8cffb109040d56e7bd8a,input-output-hk/cardano-sl,"[CSL-42] Rewrite sysstart announcement to use of broadcast
"
7b5da196db50331905b049d886bbe3c0fde928f5,input-output-hk/cardano-sl,"Merge pull request #3313 from input-output-hk/erikd/CDEC-473

CDEC-473: Collapse the block chain packages into a single package"
f92331e30ddc5f89938f9ca794634b14f826d4e3,input-output-hk/cardano-sl,"Merge remote-tracking branch 'origin/master' into martoon/csm407-refactor-wallet
"
9a420e98c793a590abb364226374fd85e81ab2a4,input-output-hk/cardano-sl,"[CSL-826] Get rid of using 'verifyAlone' flag everywhere, move applyTxToUtxo' to Toil.Logic
"
644b45a80ce0d30bb58639d3d8234f5dd03384a7,input-output-hk/cardano-sl,"Merge pull request #3089 from input-output-hk/mhuesch/CDEC-371

[CDEC-371] Remove unnecessary `core-test` dependencies"
2fda5d3a3079b9ad600cc47c574e0ba158ec19e2,mozilla/fxa-content-server,"Merge pull request #3210 from shane-tomlinson/broadcast-channel

feat(client): Use the `BroadcastChannel` instead of `InterTabChannel` if available.

r=@vladikoff

Thanks for the review @vladikoff!"
df3bb96fc53a65dc7653bab23912a402036f19dd,mozilla/fxa-content-server,"Pre-merge cleanup.

* Move brokers->shouldPromptForPermissions to reliers->accountNeedsPermissions
* Ensure long email addresses wrap in the permissions page.
* Add the screen name to the event names in the permissions screen.
* Add functional tests to ensure re-signin after both signup and signin work as expected.
"
0b6890c78389b5079c825572fc9765ef61107124,mozilla/fxa-content-server,"Merge pull request #659 from mozilla/issue-637-reset-password-email

feat(client): Password reset email prefill & /force_auth simplification."
2b4a3d7aa52f25678edd9b4549965902bcb30f19,mozilla/fxa-content-server,"refactor(client): Replace interTabMixin with notifierMixin.

The notifier abstraction is more powerful than the inter tab channel
and can send messages to the inter tab channel.

The notifierMixin provides functionality to a view to
register handlers for notifications using a declarative syntax
similar to Backbone's `events` hash.

```js
...
notifications: {
  'msg-name': '_handler',
  'other-msg-name': function () {
    // handle message here
  }
},
```

All notification handlers are automatically unregistered when an object
is destroyed.

Part of this work includes moving models/notifications.js to
lib/channels/notifier.js to be with all of the other channel abstractions.

fixes #3244
"
c6b7b8737bd546f5b0716c5282ff4edeba244ca4,mozilla/fxa-content-server,"Merge pull request #1987 from mozilla/issue-1973-wrong-account-data

fix(signin): pass account data to broker instead of using currentUser

@zaach - this is immensely helpful, and a huge cleanup. Thanks for working through it with me.

r=shane-tomlinson

"
ab3147f9793c036b9ea1a5168118112e6c22a326,mozilla/fxa-content-server,"Merge pull request #3089 from mozilla/issue-3055

fix(styles): make setting header UI better r=vladikoff"
5064b69e33b35659e91204952241191e78864e39,mozilla/fxa-content-server,"chore(tests): Remove hard coded client_id from `oauth choose redirect` tests.

* Load up 123done, redirect to the content server, pull the client_id out of the URL.
* Add a `getQueryParamValue` functional helper.
"
d69a64b1748aa6a5daf15ae680bd441f1118edab,mozilla/fxa-content-server,"refactor(server): remove ie8 proxy

Fixes #2058

BREAKING CHANGE:
Developer's local.json needs to be updated to remove
the `api_proxy` configuration parameter.
"
7606356e5b45cb301fb49871f5d3efac2e865296,mozilla/fxa-content-server,"refactor(jscs): port jscs to eslint (#3946) r=vladikoff

Fixes #3669"
c64d6d775ba43e745dc84a618df0904a1cd51b2f,mozilla/fxa-content-server,"Merge pull request #476 from mozilla/issues-382-414-457-password-smoothness

Make the password fields more usable."
0f2103b788fd059be78bd4176fbe684472fadfbd,mozilla/fxa-content-server,"refactor(client): Replace modernizr with html5shiv and a short test for js and touch screen.

fixes #1021
"
70c88e76cc26f7dd9f4e0b9426908260fd3a8ab6,mozilla/fxa-content-server,"Merge pull request #935 from mozilla/issue-762-tease-out-force-auth

refactor(client): Separate `/force_auth` specialized code from `/sign_in` code."
e7b6012e4ea5ea1d483f06d4e86f37f15f654d6f,mozilla/fxa-content-server,"refactor(client): Use Cocktail to mix in the majority of mixins.

The ResendMixin overrides `beforeSubmit` and causes unexpected behavior when used
with Cocktail because of its built in collision handling.

This is preparation work to extract common functionality/event handlers into
mixins.
"
61b9c45adb00273f1efeec80f3c092c6d6cbc91f,mozilla/fxa-content-server,"refactor(test): Use selectors.js and ES6 in the change_password suite (#5404) r=vladikoff

"
b907fdc000ea225785c5c5e4fe91de5e1288d7fc,mozilla/fxa-content-server,"fix(styles): make setting header UI better

fixes #3055
"
8532c17cae2c1b7c6aa2107b785dd0fb9a0335f3,mozilla/fxa-content-server,"chore(openid): Remove support for OpenID.

The feature was not used by the expected partner. We have the feature
in source control still and can add it back in if needed.
"
5a212382bb1eef335388f6b2763b0e7e9078f952,mozilla/fxa-content-server,"Merge pull request #1778 from mozilla/issue-1777-fxa-client-sans-relier

refactor(client): FxaClient no longer takes a relier in its constructor.

Everyone is giving it the thumbs up, I'm merging it."
c2abfb136a3d224505894d01e4cf489115826148,mozilla/fxa-content-server,"refactor(client): Add /signup_complete endpoint. Collapse all code/templates for *_complete screens.

Closes #557
"
c0c2b5cd6b471d8de8c283d0a2addcdcbcf6ea52,phetsims/equality-explorer,"consolidate duplicate code for displaying constant and variable terms in equations and interactive nodes
"
95c266c536e15745ffc27617b72532991f808bea,phetsims/equality-explorer,"scale -> plate where appropriate
"
1af6eba151710190b9247c8f6c320c805db8229f,platformio/platformio-core,"Rename ""srcbuild_flags"" env option to ""src_build_flags""
"
30334119817142d4ee1e6741200f7aa401a3beb1,spacewalkproject/spacewalk,"Revert ""removing unused string with trans-id 'config_subscribed_systems.unsubscribeSystems.success'""
"
49f5a0adc5263b1a81a29311afcac43492a1962c,spacewalkproject/spacewalk,"Revert ""removing unused string with trans-id 'sdc.config.diff.files_2_dirs_0_symlinks_2'""

This reverts commit a21b10741c9103a91ba4eaac041f862711594848.
"
ba843ab1a375c8ac8c3c9efbdea528bf5742a71e,spacewalkproject/spacewalk,"Revert ""removing unused string with trans-id 'sdc.config.diff.files_2_dirs_0_symlinks_1'""

This reverts commit 1ce0c48fa71a8cc956d3aca0f2be060923ff88c8.
"
c898a3a35e5a8a0d744f2ed1b7e12a199e37655f,spacewalkproject/spacewalk,"rewrite system snapshot to java: Rollback.do
"
6e6503715b1748a36dfc026fb72e91d3913613c0,spacewalkproject/spacewalk,"migrate server script to move systems between orgs

migrate server script to move systems between orgs
"
eba763151c4882e048b3edfe918594505bb167ea,spacewalkproject/spacewalk,"Rework web interface to correspond with 0-n rule/ident mapping

A single rule-result is now presented with
  * idref (unique identifier within XCCDF document
  * list of idents (CCE, CVE, ...)
  * the result of the eval

Results submitted with older clients has idref set to Unknown.
"
b99361d53f3a3ef256cf4f3be9360bdd08d57409,spacewalkproject/spacewalk,"508966 - fixed issue where could not set package profile for a kickstart, rewrote to new list tag
"
767d35812bab2be2bdc8a13c40f3acb4cba14204,spacewalkproject/spacewalk,"Revert ""removing unused string with trans-id 'preferences.inactive-systems.description'""
"
3a300f46a51066214a76a45e89000ede33ad41e6,Cognifide/gradle-aem-plugin,"Merge pull request #100 from Cognifide/major-refactoring

Repackaged, refactored, reformatted ;)"
697a2a1a6412d3c5236df7edb6002cb6912a6fdf,CroissanceCommune/autonomie,"Renaming company.IDCompany to company.id
"
81b65e587afb5424f2218ed309eb9ef85dce03f8,CroissanceCommune/autonomie,"Moving tva model to specific module
"
225cbd7a8849b2b66bb9f30a486d9259134b9c6e,Cxbx-Reloaded/Cxbx-Reloaded,"Renamed CDirectSound prefix to DirectSound_CDirectSound
"
ded2860ef42b8dcbc1620e2d3709eecb25627a71,Cxbx-Reloaded/Cxbx-Reloaded,"Fixed issue #111

Consolidated all versions of D3DDevice_CreateVertexShader into one.
"
4054ba245dfc880293b60928c488d2ac5c886f55,Cxbx-Reloaded/Cxbx-Reloaded,"Merge pull request #169 from jarupxx/dsound-refactoring

Dsound refactoring Part 1"
153a6107e9253e1308aa782af78fee5f88563cab,Cxbx-Reloaded/Cxbx-Reloaded,"Merge pull request #781 from jarupxx/XREF_Cleanup

XREF Cleanup"
229adacf1d78b41c035e44e03526d1779aa490f4,Cxbx-Reloaded/Cxbx-Reloaded,"Various improvements to XApi & D3D HLE
"
cafc1d3bbd726550095e190cb997e054a5a8b561,Cxbx-Reloaded/Cxbx-Reloaded,"D3D : Push buffer command refactoring, modelled after envytools but in more explicit steps (first handling command type, then instruction, then flags).
"
12657d13bd050dfd7db3b6af44cf4eb1653d6265,Cxbx-Reloaded/Cxbx-Reloaded,"Merge pull request #143 from PatrickvL/master

Removed redundant comments from all .inl files"
440a704a24bad93c40971ab0e8c3a7635efa9e51,LGoodacre/context-sequencer,"rename files so that symbols don't mess up the git repository
"
fc53d4c78a929ccb51de5e54323ba2718927011f,LandOfTheRair/landoftherair,"discord stuff + bonus arbiter refactor + new commands


Former-commit-id: b59d36aa3ea445e3cb0f44aa412b8a938d49efa5 [formerly d424afb0ca4116384eec8ecedad6b88b01d26409]
Former-commit-id: 18c57e556f5d3ed24b9c680621f80216a63eeb7d"
a38aed0bde2f61886c793fcffc2a9c23efd7aa15,MyEtherWallet/MyEtherWallet,"Cleanup
"
839158201937665342d569191272410a6cadc306,angular/compiler-cli-builds,"3190593 fix: cleanup public api of platform-server
"
3af6d2c11cb8a4e4c063dbefc14153c189158449,apollographql/apollo-client,Merge branch 'zero-decimal-six' into refactor/remove-lodash
95ca7b638d539c74aa6bafdd49034b7c068784bb,apollographql/apollo-client,"Merge pull request #1122 from calebmer/refactor/remove-lodash

Remove lodash as a production dependency"
fa4c385dc1ec111882316ad09bc77627a77731ed,apollographql/apollo-client,"Initial implementation of `fetchMore`

Forces a big refactor of how we update query results in the store.
This way, we can share the same logic between multiple features in the future:
- mutation results
- fetchMore results
- subscription results
"
6b6e8ded1e0f83cb134d2261a3cf7d2d9416400f,apollographql/apollo-client,"Merge pull request #1221 from apollostack/refactor/ts-strict-null-checks

Refactor: Enable TypeScript strict null checks"
652bd031817b2340526ea9ff048efd46f07d2e9a,apollographql/apollo-client,"refs #731
- removed circular dependency in data/store.ts
- added ""ApolloClient"" to the named exports to make it compatible with Angular2 AOT compile
- moved dev @types to devDependencies otherwise they potentially brake projects that are importing apollo-client
"
ed078f4b2667a368b7b34add67efe8c9d0b4a235,apollographql/apollo-client,"Merge pull request #1058 from apollostack/revert-1018-isomorphic-fetch

Revert ""Ensure transporters are using isomorphic-fetch instead of browser only whatwg-fetch"""
200b555c0c910c106b63fb5cad661c54ba84d179,apple/swift-package-manager,"Merge pull request #964 from aciidb0mb3r/cleanup

Completely remove popen() and system()"
2dd00b25f832e875ef099317a80039a63868f4ba,apple/swift-package-manager,"Merge pull request #949 from aciidb0mb3r/cleanup

Remove old popen and system"
d95975c5ed1eb412a727c18169230830a9226977,apple/swift-package-manager,"Merge pull request #474 from abertelrud/path-adoption

Convert the rest of the source base to use AbsolutePath and RelativePath instead of strings"
fdd9befb46dd03a570b07a868d54b42500ad3f44,cityofasheville/simplicity2,"AVL-RN: Clean up sundry issues with granular volume dash

Clean up sundry issues with granular volume dash"
3a00fff35721c0d6d2951d8ca0a1ac22694fb35e,devtools-html/debugger.html,"Support mapping TS classes, even if they are exported or decorated (#6202)

* Diversify types of declarations.

* Add an import with two separate bindings on the same line.

* Fix bug in array filtering.

* Split positionCmp into its own file.

* Shift binding-type-specific calls into mapScopes for greater flexibility.

* Add an example TS file to the original scope fixtures.

* Special-case typescript classes to also use declaration-based resolution.

* Fix extendsReactComponent to not throw on unexpected nodes.
"
33a9c5b5beeba815c51c7bc0f5c88afd3d78cbb2,devtools-html/debugger.html,"Merge pull request #1965 from jasonLaster/editor-cleanup

[Editor] follow up refactor"
80dd3c88c5c44eafd4942e3aba085d999d701ff7,devtools-html/debugger.html,"Speed up Out Of Scope lines (#3184)

* Add the ability to derive the lines in scope

* small refactor
"
64ce6e779b64ce6c25d31357b535e15f2e88bc1a,devtools-html/debugger.html,"Greenkeeper/prettier 1.0.2 (#2648)

* fix(package): update prettier to version 1.0.2

Closes #2645

https://greenkeeper.io/

* bump

* cleanup
"
dbb50fe5a159df2001724a5dcbe95f6476e81926,devtools-html/debugger.html,"Continue conversion from commonjs to es modules (#3126)

* change lodash/get require to import

* convert lodash/get require to import syntax

* switch thunk and wait-service middlewares to named exports

* convert utils/log & utils/pause to use ES modules

* convert remaining src/client modules to use ES module syntax

* export SourceTabs as default

* export functions inline

* convert to ES modules
"
725d9d9a56d9cfdf720a739eae56fb7c38f7696e,dot-bob/Marlin-Duplicator-6,"Fix and improve LCD value editing display

- Fix: When ""100.0"" changes to ""99.0"" the LCD shows ""199.0""
- Use 2 rows if needed on character LCD, (allowing longer labels‚Ä¶
Germany, et. al.)
- Known issue: A certain length label combined with a certain value
drawing function could, for example, display 99.0 on 1 line, but 100.0
on two lines. Workaround would be to pass a nominal value size argument.
"
7714b98da74b0b84cb620474fd8e4cb19d15bfc0,dot-bob/Marlin-Duplicator-6,"solved some compiler warnings that are now visible in arduino 1.0.
Found a couple of unused variables, that I commented.
Tried to solve the program memory warning message, and failed.
"
16212432c9152a6e9f678ad7e21cfc7dfc8d7e7e,dot-bob/Marlin-Duplicator-6,"G20/21 and M149 support, and code_value() refactor

This is an update of MarlinDev PR #196.

G20/21: support for switching input units between millimeters and
inches.
M149: support for changing input temperature units.

In support of these changes, code_value() and code_value_short() are
replaced with an array of functions which handle converting to the
proper types and/or units.
"
a0b00d29e3a1f71c536a3821bac448248911cea4,dot-bob/Marlin-Duplicator-6,"Add a ported example configuration for the Velleman K8400 (Vertex) printer.
Supports both dual and single head printers (with the correct config).
Includes community sourced feed rate fix.

Rename / move files.

Remove redundant definitions.
"
f9e1a0ee6c564ee17b95c2a3fdd3a9b6d25ba666,dot-bob/Marlin-Duplicator-6,"suppress warnings
"
eb61051556d10bd612b8f87ca5d5a6c125258234,dot-bob/Marlin-Duplicator-6,"Rework the print job timer to use the stopwatch class
"
7c770f039cb9bda4b79d269fe02c0210bf02d19e,dot-bob/Marlin-Duplicator-6,"Merge pull request #3456 from thinkyhead/rc_MSG_ERR_REDUNDANT_TEMP

Remove redundant text from MSG_ERR_REDUNDANT_TEMP"
41ded7e9968aadeb514b095a85ed662ab050a039,dot-bob/Marlin-Duplicator-6,"Merge pull request #1805 from thinkyhead/fixup_probing

Optimize coordinate copying, fix EXTRUDER_RUNOUT_PREVENT"
74d6dee920b09aaa47839ee5a19de3129ea2125f,dot-bob/Marlin-Duplicator-6,"User Command (Script) Menu

The menu (commands / scripts) is configurable in `Configuration_adv.h`.

- Added conditionals.
- Changed script handling.
- Slimmed and working!
- Added Status message.
- Returning to lcd status screen now!
- Example Configs Updated.
- Cleanups by @thinkyhead
"
8d162e5bd75ef221dc79a5cf79f9db3185345591,dot-bob/Marlin-Duplicator-6,"Improved support for panelolu2 encoder and buzzer

I added #define for LCD_FEEDBACK_FREQUENCY_HZ and
LCD_FEEDBACK_FREQUENCY_DURATION_MS  which is used to alter the default
buzzer sound.

When selecting Panelolu2 in configuration.h:
- it automatically sets the correct ENCODER_PULSES_PER_STEP and
ENCODER_STEPS_PER_MENU_ITEM.
- if LCD_USE_I2C_BUZZER is defined it will also set the default
LCD_FEEDBACK_FREQUENCY_HZ and LCD_FEEDBACK_FREQUENCY_DURATION_MS

When selecting the sanguinololu 1284p the following is true:
- its now enables  LARGE_FLASH
- It enables the gcode M300 when the panelolu2 LCD_USE_I2C_BUZZER is
defined
"
c03e5f5efd5edcec266ccd238fe2a05686dfedba,dot-bob/Marlin-Duplicator-6,"Merge pull request #3475 from thinkyhead/rc_language_cleanup

General cleanup of language files"
fdb6533730a5eded401c572b51452542766541b2,dot-bob/Marlin-Duplicator-6,"Merge pull request #4162 from thinkyhead/rc_anhardt_sled3

Simplify dock_sled() and some more probe tweaks"
b378deaf8971952217f32dd74ca201645ba5f156,dot-bob/Marlin-Duplicator-6,"Unify AVR90USB: fastio changes
"
a298a58684122904f04e6d3f810836c81ac86714,dot-bob/Marlin-Duplicator-6,"Remove redundant ""E""
"
03e6ae850ce718c008636bd8db093f453e62ccf3,openshift/openshift-ansible,"Refactor named certificates.
"
33a6d6c4d035cabf7322bd59405b4157307f2e1b,openshift/openshift-ansible,"Split metrics-server into its own playbook/role

This splits metrics-server off into its own playbook and role, so that
it can easily be installed separately (e.g. as part of pre-upgrade setup),
independently of Heapster, Hawkular, or other monitoring stacks.
"
29692bcb64d0c067e8713d26ba1adb22ff1d94f4,openshift/openshift-ansible,"Consolidate image diciontaries and strings

This commit defines most image strings and default
dictionaries into openshift_facts/defaults/main.yml
so there is no drift between components.

Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1570574
"
012be35217f7415d50afe5e74b7e2e995feea6b5,openshift/openshift-ansible,"Merge pull request #6151 from mtnbikenc/consolidate-openshift-master

Playbook Consolidation - openshift-master"
e5faa36d01cba99c2f1e67cfd126f5b5be11d367,openshift/openshift-ansible,"Merge pull request #6372 from mtnbikenc/include-to-include_tasks

Automatic merge from submit-queue.

Include Deprecation: Convert to include_tasks

For all roles/
* Converts to include_tasks: for dynamic includes
* Converts to import_tasks: for static includes

Trello: https://trello.com/c/ZTyZu3UM/484-3-ansible-24-include-deprecation"
d763135d14cf1975176b829c2f42a9f95ad5a8e4,openshift/openshift-ansible,"Remove unused openshift_env_structures and openshift_env

This component of openshift_facts is no longer used.
"
ec7b8b68b6467e17487ec4c81fbe2c6826e3c889,openshift/openshift-ansible,"Merge pull request #1046 from sdodson/yum-dnf-cleanup

Remove yum / dnf duplication"
a1cfec9bbe43dd005ab16792c90cc949555cce12,openshift/openshift-ansible,"add support for oc_service for labels, externalIPs

Add support for `labels` and `externalIPs` in Services
This also adds support for the `labels` parameter of `oadm registry`
and `oadm router` to be a `dict` of values.
This also converts `labels` dict values in the router and registry
classes into a comma delimited list of `key=value` pairs.
The list of `--labels` is sorted for consistency in key pair positioning
in the output (and for consistency in testing) - otherwise, the order
of the list is not guarantee and has actually been observed to be
different from run to run.
"
69dfc670650563f339ef409c675c69a88573102b,openshift/openshift-ansible,"Deprecate openshift_node_kubelet_args and openshift_node_labels
"
6ff354437718584783589c3403cefe9d1b75ee52,openshift/openshift-ansible,"Moving firewall rules under the role to work with refactor.
"
f725e46bd897efe35cb8abba7862d1482c3011f4,openshift/openshift-ansible,"Merge pull request #6082 from mgugino-upstream-stage/combine-node-upgrade

Automatic merge from submit-queue.

Combine openshift_node and openshift_node_upgrade

Currently, having openshift_node and openshift_node_upgrade
as two distinct roles has created a duplication across
handlers, templates, and some tasks.

This commit combines the roles to reduce duplication
and bugs encountered by not putting code in both places."
bbee1384a42aa80e5fa15ce94bdf1e925bd42a1b,openshift/openshift-ansible,"Merge pull request #8538 from mgugino-upstream-stage/additional-components-oreg

Refactor various components to utilize oreg_url"
20cf39c3b52ac12eb18583a40ba2409f206201cc,openshift/openshift-ansible,"Merge pull request #8069 from mgugino-upstream-stage/cleanup-stuff

Cleanup master related plays and variables"
5f7000e185fca71a5077ae7e2bcd29450c4cb70f,openstack/openstack-ansible,"Improve ansible host & venv bootstrap

The current ansible bootstrap process tried to
pin the versions of pip, setuptools and wheel
on the host and also uses inherited python
packages from the host. This causes problems
when the host has a version of setuptools which
is cannot be changed (perhaps due to some bug)
or when the host has otherwise undesirable
python packages.

The ansible bootstrap process only needs to
be concerned with whether pip is installed
and understands how to use constraints.

From there we can bootstrap the venv using
get-pip and completely avoid package conflicts
with the host. Once Ansible is bootstrapped,
the pip_install role will ensure that pip,
setuptools and wheel are correctly bootstrapped
and pinned across all hosts.

The pip_install role now uses constraints for
the initial get-pip [1], so we can also remove
the list of pip pins from group_vars.

We remove pip, setuptools and wheel from the
requirements.txt to allow the packages on the
host to be installed in the bootstrap without
forcing a change of pip/setuptools/wheel at the
same time (which causes failures in some
circumstances).

[1] https://review.openstack.org/483905

Change-Id: Ida84fb6bb726e1332f0e29ade51b67a5721f0785
"
fc49c6616bfe57fbb656477d98566b5d1dafde8e,supercollider/supercollider,"sc ugen factory: rename ugen_factory to sc_factory to avoid name clash

Signed-off-by: Tim Blechmann <5ee0edb9e2229c0838f1959779f1949031de0123@klingt.org>
"
b2c890fa6e264339cbda080a819b8e98b82e3eca,thunderhoser/GewitterGefahr,"Cleaned up deployment_io.py and a few calls from training_validation_io.py to storm_images.py.  Added TODO to segmotion_io.py.
"
3219e095a5fcdda5d5f8fd6f6955d7b67e5227ec,AnalyticalGraphicsInc/cesium,"Ongoing CompositeDynamicObjectCollection work.

1. Added clone to all DynamicXXX objects because the composite needed it.
2. Add tests for both coarse and fine property compositing.
3. Rename collection methods to remove ambiguity.

Everything should work but we still need tests for the collection level stuff.
"
db2d254807557af20951edc4e123b77cb1d3d78e,AnalyticalGraphicsInc/cesium,"Merge pull request #2299 from AnalyticalGraphicsInc/model-shader-optimize

Fix for model shader optimize (linux)"
25eabe0be75a174cfeab0ec9db852eae8192d020,AnalyticalGraphicsInc/cesium,"Merge pull request #836 from AnalyticalGraphicsInc/blob

Improve performance of missing tile check"
eb314601ba3d76595b1b9db61355791bd2e84bab,AnalyticalGraphicsInc/cesium,"Internally use Color object instead of object literals.
"
a917d1ef03bd00565d5e2023ca04d86e77b9dbdd,AnalyticalGraphicsInc/cesium,"Merge remote-tracking branch 'origin/master' into dataSource-refactor
"
416cecf0292d1fe77d86ae6185f72a3a3807e82d,AnalyticalGraphicsInc/cesium,"Merge branch 'dataSource-refactor' into kml

Conflicts:
	Apps/CesiumViewer/CesiumViewer.js
	Source/Widgets/Viewer/viewerDragDropMixin.js
"
06de17aa18fab7bbe33e8e83b5c7988a93c591c9,AnalyticalGraphicsInc/cesium,"Merge branch 'frame-state-refactor' into 3d-tiles-frame-state

Conflicts:
	.gitignore
	Source/Scene/BillboardCollection.js
	Source/Scene/FrameState.js
	Source/Scene/GroundPrimitive.js
	Source/Scene/Model.js
	Source/Scene/Primitive.js
	Source/Scene/QuadtreePrimitive.js
	Source/Scene/Scene.js
	Specs/createFrameState.js
"
0bc2cd49f2c91ee3be189b0ed7600f9c646cf9d2,AnalyticalGraphicsInc/cesium,"Set TileState.FAILED properly, other cleanup.
"
49b57592f4b978c0af57ba6e991153a2873a83b2,AnalyticalGraphicsInc/cesium,"More changes after review.

1. No need to pass the tool tip to rectButton and wingButton, as it will be set by SvgButton anyway.
2. Remove ClockViewModel.tickAndSynchronize and use clock.tick instead.  As Clock.onTick event for subscribing to clock ticks.
"
1a53a50ef01caad269f048bb5b99714b02a89e78,AnalyticalGraphicsInc/cesium,"Finish SunPosition

I use the term ""finish"" loosely since I'm sure we'll need further functionality once we support support multiple CBs.

1. Change SunPosition to a class instead of a static object.
2. Rename `compute` to `update`; `update` does not return any data but rather sets properties on the `SunPosition` instance.
3. Flesh out documentation.
4. Optimize performance and reduce memory pressure.  We no longer create throw-away instances.
5. Update CHANGES

If for some reason we're not happy about changing this to a class, we can change it back to a function, but instead of returning an object literal, I would instead just return the Sun's position and people can compute the other values from that; this way we don't have to worry about creating a new object literal every time we compute.  We only use position in the code right now anyway.
"
658077b77701e524f609afab964835715bb0a793,AnalyticalGraphicsInc/cesium,"Use dimensions, instead of min/max corners, for BoxGraphics

In order to be more consistent with other Entity geometries, such as
cylinder and ellipsoid, this changes BoxGraphics to use
`position`, `orientation`, and `dimensions` properties instead of
`minimumCorner` and `maximumCorner` properties.  This also allows for
rotated boxes, which the previous behavior did not.  This also opens up
the possibility for a dynamic box fast-path, similar to what we do for
ellipsoid, if the need ever arises.
"
7579d831b0abdf2ecb5fe236fd99e039d808e61c,AnalyticalGraphicsInc/cesium,"Merge branch '3d-tiles' into command-cleanup
"
8403d3d9eb1eac7e0899afb46be763f53f609e59,AnalyticalGraphicsInc/cesium,"replace functions in code
"
f0fa1b2b15b5ed572f56bf4f6ad5dc8a404ed3ed,AnalyticalGraphicsInc/cesium,"Rename description to options
"
e114287944e90a32cbac6c777278a6a36128814d,AnalyticalGraphicsInc/cesium,"Merge pull request #174 from AnalyticalGraphicsInc/glslNamespace

Renamed agi_ GLSL prefix to czm_"
0ef2bf80d35efb397d9c9ffdabb9d120830969de,AnalyticalGraphicsInc/cesium,"Merge pull request #1580 from AnalyticalGraphicsInc/replaceGetSetContext

Replace get/set functions with properties : Context"
6578eb31ee3f021b6c9ca3822dcacfcf27482d9e,AnalyticalGraphicsInc/cesium,"Merge branch 'master' into visualizer-refactor
"
9ce636224a0bc262bc9d444e1b837b8814d5eb8b,AnalyticalGraphicsInc/cesium,"Frame state refactor WIP.
"
db5cb751031073a1599bfcedf5ff35051f33ca8c,AnalyticalGraphicsInc/cesium,"Move isSupported methods to PostProcessStageLibrary.
"
374c5e01960e1beb14f369d4791817dc76a5539c,AnalyticalGraphicsInc/cesium,"Improve test coverage in some files
"
1f7d3f41b646f8a734b62a4833a5b0c3fa2d421c,AnalyticalGraphicsInc/cesium,"Ongoing entity bounding sphere work.

Clean up some doc and add more plumbing code.
GeometryVisualizer still needs actual implementation.
"
c1e68f1195ae6391d679b5d60a06df7d84ac3d0d,AnalyticalGraphicsInc/cesium,"More Cartographic cleanup

1. Remove all usage of creating Cartographic instances using degrees as internal representation, Cartographics are always represented as radians.
2. Add fromDegrees helper function to aid in creating Cartographics from degrees.
3. Reaname toCartesian(s) and toCartographic(s) methods to cartesianToCartographic/cartesianArrayToCartographicArray and cartographicToCartesian and cartographicArrayToCartesianArray respectively.
4. Fix comment in Quaternion.fromAxisAngle to specify the correct unit.
"
b6eb300f22892cac94499ef4244fc64aa835ab61,AnalyticalGraphicsInc/cesium,Merge branch '3d-tiles' into rename-debug-labels
f99ce263221c7f81bfa5ffd14be5a9313097eeac,AnalyticalGraphicsInc/cesium,"Terrain selection improvements.

The level zero max geometric error is now a property of the
TerrainProvider instead of the TilingScheme.  Also fixed tile bounding
volume rendering.
"
e8d3e355ba1ca4371476febf62b7f4f0e73d154e,AnalyticalGraphicsInc/cesium,"ground polyline cleanup
"
c83dd970cda800dd46e8d0540d547edc9c5b49e1,AnalyticalGraphicsInc/cesium,"Make tileset.root public
"
67a988eefdd02fefbb62ee4b74ad5c7b95971fbe,AnalyticalGraphicsInc/cesium,"Make ImageryProviders methods throw when not ready.
"
5101f5a961fed63cc577064de9c8e27843f0b447,AnalyticalGraphicsInc/cesium,"Allow Viewer imageryProvider or terrainProvider with BaseLayerPicker

We've had a check in Viewer forever to see if the baseLayer picker was
being used when a terrainProvider or imageryProvider was specified.  This
lead to a tone of code where we create the viewer and then just specify
viewer.terrainProvider anyway. Basically, this check was pointless and
just made the code more verbose.  The check also prevented devs from
specifing a terrainProvider but still using BaseLayerPicker for imagery
(and vice versa). Now we just let the user do what they want, which was
probably the right call from the beginning.
"
29b7d09c70019bacdf48ea953ccd84f79a77cc5f,AnalyticalGraphicsInc/cesium,"Miscellaneous changes ahead of geometry refactor.

In order to make #1560 easier to review, this is a handful of simple changes I made elsewhere in the code.

1. Make BoundingSphere implement Packable
2. Add some contructor helper methods to ComponentDataType.
3. Remove unecessary memory allocation in EllipsoidTangentPlane & CzmlDataSource
4. Add a new function, `subdivideArray` for splitting an array into N equal parts.
5. Minor change to DynamicModelVisualizer to avoid paying the ES5 property penalty (until the visualizer is rewritten).

I don't think any of this warranted an update to CHANGES.
"
1860310aa0fdd2b67a5ff6191f17dcefbddd3c8c,AnalyticalGraphicsInc/cesium,"Fixes and cleanup to JulianDate after review.
"
86e01c15b1d22722fa8fdbc56eb79d1d05cd6a02,AnalyticalGraphicsInc/cesium,"Clean up GroundPolylinePrimitive's use of ApproximateTerrainHeights.
"
50271a736fc00164079b716a1dee5e82847d874d,AnalyticalGraphicsInc/cesium,"Make useDynamicScreenSpaceError public
"
d3e878dd6a1a093af68e05af7038f93fe38a2868,AnalyticalGraphicsInc/cesium,"Merge pull request #6275 from AnalyticalGraphicsInc/geometry-entity-specs

Consolidate duplicate specs for geometry entities"
feb33f50db6dfc4ba3fced6bd3132a3c70e4e004,AnalyticalGraphicsInc/cesium,"Improve ImageryProvider error handling.
"
95828be2a573fffdbc357536ff3b46fd3dc4bf6d,GiovanniBussi/test-travis-ci,"BiasOnBias made general

-the component bias and a pointer to it are now initialised in Bias.cpp
-the derivatives for bias are automatically set from forces  in apply
"
eeb1da233a09dfb80d72ccf55e9848793ebad110,GiovanniBussi/test-travis-ci,"Some optimization improvements in histograms
"
a3ddae816d70c1792953423c4ff127e7c0906922,IBMStreams/streamsx.topology,Refactor Parameter => Value & SubmissionParameter extends Value.
19ebca9586ea584cd988bfc8931791397be626d7,NativeScript/android-runtime,"Merge pull request #588 from NativeScript/optimize-size

Optimize package size"
db1de6f0bb39dc4920825a651d1b6f11c07bd910,OntimizeWeb/ontimize-web-ngx,"Issue #202 and o-combo improvements
"
76c1de14605bbef7634cdf0fb445d265329c2429,alphagov/notifications-admin,"Merge pull request #1232 from alphagov/move-delete-link

Move delete link from the edit template page to the view template page"
352750dcf6518b8f420b21eb6b470e3818da7420,alphagov/notifications-admin,"Merge pull request #470 from alphagov/better-better-send-page

Make the flow of using templates better"
09824078dd24c789458703f2fd80872b9b7992ba,alphagov/notifications-admin,"remove all instances of db style permissions

lots of renaming of send_texts/emails/letters to send_messages, and
manage_settings/users to manage_service
"
e74d261ec33514d2e6ef91e3bf0e9d57d8d28e4c,alphagov/notifications-admin,"Don‚Äôt store info about bad uploads in session

Because we now[1] store info about each file upload separately in the
session the session isn‚Äôt overridden every time you upload a file. This
is good because you can do multiple file uploads idempotently.

Generally we are cleaning up after ourselves because we pop anything to
do with that upload from the session. However there is an edge case: if
you never send the file then the info about the file stays in the
session in perpetuity[2]. This is generally happening when people are
uploading files that are impossible to send, ie ones that have errors.

So this commit makes two changes:

1. remove info about a file upload from the session as soon as we know
   that it contains errors
2. `POST` reuploads to the same endpoint as initial uploads because
   otherwise we need to keep info about bad uploads in the session,
   which would prevent us from doing 1.

1. https://github.com/alphagov/notifications-admin/pull/1968
2. or at least until the session is cleared by the user logging out
"
b9f7fa1f6f97307222483c1266d9ef7da03b0ab2,alphagov/notifications-admin,"Replace cookie implementation with flask builtin secure cookie.

However, by default, session cookies don't expire (only cleared out by
the end user's browser).

This is dumb. You'd think, given that there's
`config['PERMANENT_SESSION_LIFETIME']`, that you'd enable permanent
sessions in the config too - but no, you have to declare it for each
request. session.permanent is also, helpfully, a way of saying that the
session isn't permanent - in that, it will expire on its own, as
opposed to being controlled by the browser's session. Because session
is a proxy, it's only accessible from within a request context, so we
need to set this before every request :roll_eyes:

http://flask.pocoo.org/docs/0.12/api/#flask.session
https://stackoverflow.com/questions/34118093/flask-permanent-session-where-to-define-them
"
f6d98b63ea2f41e8c726a2ac285d32668b94bcee,alphagov/notifications-admin,"Refactored register_errorhandlers so that it handles HTTPError
Remove most cases where we catch HTTPError
"
ef2a61cd37910d42780d337c1db727738d48c029,avocado-framework/avocado-vt,"utils_misc: Move find_substring() implementation to utils_misc

Since this function is not a high level function.

Signed-off-by: Lucas Meneghel Rodrigues <8ad3460456640ab580599f5440c5a8d925a620b9@redhat.com>
"
9bfd39d15d4a151ebe0ac703d792697ec51233c1,avocado-framework/avocado-vt,"Init serial_ports to [] instead of None

As serial_ports used as a list, so init it to [] instead of None.
This will avoid 'TypeError' if serial_ports has specific value.

Signed-off-by: Yanbing Du <fa9dae243b8221dbc6c8d61d36c49d38d4958545@redhat.com>
"
4f2e02c300319935f5f8ba24ec5b37bebeaecba3,avocado-framework/avocado-vt,"virt-libvirt: Update vm.pause() & virsh.suspend()

Let's move high-level functionality into vm class and away from virsh module.
This allows virsh module return value to be more supportive of error testing
and allow test code to examine result more closely.

Signed-off-by: Li Yang <238d8cde7f155cab998fb7d3bca21ace45b10710@cn.fujitsu,com>
"
a5b94a40ad94c4f50e5ac687d01feeb039faf8dc,avocado-framework/avocado-vt,"plugins.virt_test: Remove unnecessary logging

Turns out it's unnecessary and a bad idea, since this
will get logged in the avocado job log even if users
are not directly using the vt plugin.

Signed-off-by: Lucas Meneghel Rodrigues <8ad3460456640ab580599f5440c5a8d925a620b9@redhat.com>
"
0c84da5a736bcb74cb515feea0d4423b90ddb11f,avocado-framework/avocado-vt,"Auto generate subtests.cfg

In order to have self describing tests, split the original
subtests.cfg in several per test files, and create subtests.cfg
out from this information.

Signed-off-by: Lucas Meneghel Rodrigues <8ad3460456640ab580599f5440c5a8d925a620b9@redhat.com>
"
90999d82f42b3b00cbaf86f86d497dd1d38664ac,brainstorm-tools/brainstorm3,"Raw viewer: Optimize scrolling speed with new option ""Downsample recordings for faster display""
"
3400cc71d35c18ec32c395f478cebb2045347a6b,deanoemcke/thegreatsuspender,"Improve handilng of discarded tabs during startup checks
"
c28a43bf5fbf6265f401d97f477ba37d014f73ca,google/data-transfer-project,"Use JobAuthorization.State instead of PortabilityJob.State
"
260a0dcca6aeb7d6aa7fe19c2b02133a47809ad1,googleapis/google-cloud-ruby,"Allow batch operations outside of a transaction

Add Datastore::Commit that will accept multiple changes for a single commit.
Allowing this outside of a transaction for increased performance, as well as
avoiding the limitations on the number of changes allowed in a transaction.

[closes #646]
"
80572ac4e98ff71b0bc588ea1869a2e8f24296b7,googleapis/google-cloud-ruby,"Move retries to parameter

Remove Gcloud::Backoff and add retries as optional argument when creating
new service objects.

[closes #463]
"
63bca40a2621497e1ffe0851b7ef52bb7eb30f56,noms-digital-studio/licences,"added return to ca from dm. Refactored sending process
"
e19f052f9e2bd10a70d215f398dfafaf1be1c129,noms-digital-studio/licences,"Merge pull request #397 from noms-digital-studio/return-dm-ca

added return to ca from dm. Refactored sending process"
85720745c2723db2ca5826650f02bedc1adb6d7a,oat-sa/extension-tao-testqti,"Refactor the server side 'Allow Skipping' handling
"
51b85ee03f47355ed8998df2dabece4f5a584850,oat-sa/extension-tao-testqti,"start refactoring error handling
"
595d0b10b898d154b5f33c0200e374fa9d638fee,oat-sa/extension-tao-testqti,"Merge pull request #1033 from oat-sa/refactoring/TAO-5102/remove_globals_from_core_extension

Refactoring/tao 5102/remove globals from core extension"
8da3aac218714a27f61348e26f0865c8159745c3,oci-pronghorn/GreenLightning,"new updates starting twitter API

cleanup after http testing"
f63e3a532f584976634ccf04879a34e501d7a5bd,tuxbox-neutrino/gui-neutrino,"*neutrino record: reworked some code parts from last multirec commits

- avoids using of boolean structures for record modes calls, handling of
  enum calls from record manager class should be easier
- remove boolean structure from infoviewer
- use commonly member name for count of recordings,
  GetRecordCount should be more plausible than GetRecmapSize

git-svn-id: df880b524f786ff73d496dc54ccd0045f54ae30f@1693 e54a6e83-5905-42d5-8d5c-058d10e6a962
"
99cc7f850a781d01312654250a19dd091602d73f,tuxbox-neutrino/gui-neutrino,"- rcinput: simplify calcTimeoutEnd() calls; 0 is ""off"" by default now
"
c6ae7255ace282f590dc50bad30108b470d3c409,tuxbox-neutrino/gui-neutrino,"-add wakeup_hdd & file_exists to system-helpers
"
dc61c83103edb6799fac6a72762ca614949a027c,tuxbox-neutrino/gui-neutrino,"gui/keybind_setup: use CMenuOptionNumberChooser instead of CStringInput
"
b265df52048d0e6262a56a1b0b1e586e3c573fb4,tuxbox-neutrino/gui-neutrino,"Switchover remote control standard / neo1

- Redundant code removed, THX dbt for the tip.
- Bug in ""remote control neo1"" left / right keys fixed.


git-svn-id: df880b524f786ff73d496dc54ccd0045f54ae30f@1781 e54a6e83-5905-42d5-8d5c-058d10e6a962
"
a216a33aaf99a810862b0df547e074c7413bea4f,tuxbox-neutrino/gui-neutrino,"neutrino.cpp: move temp cleanup code to function
"
104d21e78456c9d77f7835973834a90eaff53ea2,tuxbox-neutrino/gui-neutrino,"- rename customcolor.h -> color_custom.h; reduce unneeded inludes
"
2eacae9ca7bf89ec481090f6fbb5d0c627a04ff7,tuxbox-neutrino/gui-neutrino,"Revert ""- add missing include of vfd header""

This reverts commit 3845feb0e40a9d67d4bd4901def78beaf32b2611.

We use display.h instead.
"
d14a3debf1d9a355045bf0c68149094709e5cda6,wikimedia/integration-config,"Rename npm-node-4.3 to npm-node-4

Change-Id: I4a33a4f9f20e78c4c53bce31c253d0e7ea4b2f65
"
c13debad2f934103d01ac3bfaa2784ddb2d0dbd5,wikimedia/integration-config,"Run global-teardown after jobs using npm-set-env

Follows-up I386ceb70.

Use npm-setup.sh instead of npm-set-env, and ensure global-teardown
(or a supetset, like mw-teardown) is run.

npm jobs now create their own TMPDIR, and teardown cleans it up.

Bug: T90836
Change-Id: Ibf77368d2498be8607359f07062a8b48c518246a
"
794f27437a3fd1bc7951f804d7ff1b1f11250d0a,wikimedia/integration-config,"Consolidate all *-lint and *-phplint jobs into a generic 'phplint job

Change-Id: I8d7e0bd315c4fc25f8c6a7a287233b2ac5da6a2c
"
68ba6a1ad2257cb9a42c13a26fdf548d29d8f9ce,wireapp/wire-ios-sync-engine,"UnauthenticatedSession uses DispatchGroupQueue instead of a MOC
"
ee5e0b0aeb7a2d20f5b3d5243d5807e02e733cad,wireapp/wire-ios-sync-engine,"Feature/notification center (#833)

* Update notification actions to use iOS 10 API

* Update sound names

* Implement type-safe user info for notifications

* Clean up push action formatting

* Use message nonce as request identifier is possible

* Refactor message note cancellation

* Fix compile error

* Fix compile error

* Lazy load request and notification ID

* Refactor ZMLocalNotificationSet

* Fix compile error

* Swiftify ZMStoredLocalNotification

* Fix deprecated url method

* Add request identifier to notification user info

* Remove deprecated methods from ZMApplication protocol

* Remove deprecated methods from ZMUSerSession header

* Comment out deprecated CTCallCenter usage

* Remove deprecated methods from ZMUserSession

* Update action handling [WIP]

* Fix typo

* Ensure userInfo dictionary contains only plist data types

* Make NotificationUserInfo archiveable

* store the request id in the user info

* Use the UserInfo when archiving stored notifications

* Remove redundant application property from notification set

* Process pending stored notifications

* Update notification action handling

* Add logs

* Make protocol property optional

* Resolve compiler warnings

* Move deployment target setting to config file

* Add abstraction over UNUserNotification

* Use UserNotificationCenter abstraction

* Create mock UserNotificationCenter

* Make notification center protocol public

* Update tests for new NotificationSound

* Update tests for notification content

* Update tests for stored notifications

* Refactor action handling for testability

* Update tests for action handling

* Make NotificationUserInfo equatable on its properties

* Update ZMLocalNotificationSet tests

* Remove old import

* Remove unused file

* Set requestID immediately after initialisation

* Delete whitespace

* Update LocalNotificationDispatcher tests

* Update LocalNotificationDispatcher tests for calling

* Partially implement UserNotificationCenterMock

* Update CallStateObserver tests

* Provide default value for handleResponse method

* Include mock notification center in integration tests

* Update Background tests

* Update ZMLocalNotification tests for messages

* Fix ZMLocalNotification message test

* Update ApplicationMock

* Refactor ZMUserSession push methods

* Abstract out SessionManager notifcation handling

* Update SessionManager tests

* Tidy up

* Add test to check that notification settings are registered

* Remove unused CTCallCenter code

* Tidy up

* Fix tests

* Bump components

* Bump components
"
c0fc81e6988177a73e00677a6c077a8c8ba9888f,wireapp/wire-ios-sync-engine,"Refactor link preview tests (#858)

* Bump components

* Re-write LinkPreviewTests in swift since LinkPreviewDetector doesn't support obj-c anymore

* Rename test class
"
435f70be7aebd9a669d6a276df67e8eb814a45e3,DiligentGraphics/DiligentCore,"Implemented separate samplers in D3D11
"
c7391919d2e9d34e7f4fc18e8ffc174a9eabfb5e,DiligentGraphics/DiligentCore,"Reworked context pool management in D3D12
"
396c5eddcf80630a79b5174c070321080f2fa27c,DiligentGraphics/DiligentCore,"Reworked vulkan dynamic heap deallocation to use main release queue
"
d3bba829acfb2eabce748220eff045ef0c6f7880,DiligentGraphics/DiligentCore,"Multiple improvements to shader resource binding in D3D11 and D3D12
"
29c72f654ced7beaab65cf4e8de4a64cf14e462d,MineLittlePony/MineLittlePony,"Split the elytra button into its own toggle
"
49d302f549bd3f8639d7e0790eb67f34fec28cc6,RNAcentral/rnacentral-webcode,"Added leftover </tr> in xrefs.html, removed redundant spaces.
"
34b7b6ace4d7c6ff67e5a1594b838886ae967805,RNAcentral/rnacentral-webcode," #144 Migrating to Django1.10:

  * removed patterns()
  * replaced strings with view objects in urls()
  * created settings.TEMPLATES
  * updated nhmeer.db_router
"
bb89d00f96b0118657c2e48fa9ac3d78f2d33a46,beeldengeluid/labo-components,"#204 adding read more info for collection link in single search and refactor component
"
cb897f28059b57cf169a321e8d2a119b508d6a4d,fluentmigrator/fluentmigrator,"Merge pull request #194 of abusby/create-unique-constraint

* abusby-create-unique-constraint:
  Added Schema possibilities to DeleteConstraint (both primary and unique) + tests
  Cleanup empty lines
  Cleanup of usings empty lines etc
  Corrected typo
  Move using back outside the namespace
  Checked out IntergrationTestOptions.cs from master to revert changes on branch
  Added Unique and primarykey delete builder tests
  Updated delete expressions to include Delete.PrimaryKey()
  Correct issue with SqlServer2005 Generator not generating the correct SQL
  Missing file from previous commit
  Add Create.UniqueConstraint() and Create.PrimaryKey()
"
e48f4a97519cc3657ea696e622575de7ed640683,fluentmigrator/fluentmigrator,"Made Factory property public

Converted more processors"
532e91a1db5a950ca86eb428660fbd305844c1c2,mattgodbolt/compiler-explorer,"Big bunch of fixes; improvements to layouts, attempt at getting pop-out to work (mostly not working)
"
a5e3d807f897243a019baf9041b0a3f9150a6f7d,raster-foundry/raster-foundry,"Remove Scapegoat errors for API project

Remedy the warning messages and use `SuppressWarnings` where a
straightforward solution isn't obvious. Also, clean up imports across
all files touched.
"
511160a15fb71aaa588adf4cca803cad536391c5,researchstudio-sat/webofneeds,"Refactors selectors.js -> creates new file (message-utils) to store all the non-state functions for messages in (because they should not be in the selectors.js)
"
09091ab215374e28525531b6bbc49a4d71794511,researchstudio-sat/webofneeds,"improved hints handling
"
01298988b26c9cd0753704d1efb88817424ebe18,researchstudio-sat/webofneeds,"Merge pull request #2314 from researchstudio-sat/feat_reduce-usecase-interface-complexity_#2274

Reduce usecase interface complexity #2274"
437724f6d7663598b7f74b6a7747e9c590e906bd,researchstudio-sat/webofneeds,"Moved utility function to utils.js.
"
f2ef2bcd048a71e10b26f513d1b683f0fae96923,researchstudio-sat/webofneeds,"refactored messaging property from Dataset to WonMessage in the whole project; wonMessages are now send through on the OA if they are provided by the WON node
"
455332a1808a9bb7756db3484aa5b3617b4def39,researchstudio-sat/webofneeds,"Refactors UseCase-Drafts so that isDetails are stored in details and is branch will now be the content branch (as a first change)
"
54abdc6149b456ee2160bade37c4ac6bfd277961,squanchy-dev/squanchy-android,"cleaning up the project from Firebase db
"
3310b1d6b108474dbaa0771d3f823c71fdc491bd,tuomount/Open-Realms-of-Stars,"Cargo and colonist can be moved to freighter.
"
8d353c18b7b745f9de6b17b65b6965a342b30a9c,uw-it-edm/content-services-ui,"Merging folder-by-feature changes from develop to simplify pull request for this branch
"
71225fac61da5170b75febc676661285b69823bb,washingtondc-emu/washingtondc,"refactor Dreamcast.cpp and Dreamcast.hpp to no longer be object-oriented
"
c67ce8fc502b16d1bb1e7b1a0be6a7555722bb49,washingtondc-emu/washingtondc,"sh4asm_neo: implement disassembler

I'm using a series of switch statements instead of the lookup-table that's used
in WashingtonDC.  My theory is that using the switch statements will turn out
to be faster even though it branches because there will be less oppurtunities
for cache-misses.  I'm using sh4asm here to test out the switch approach before
I port it over to WashingtonDC-proper.
"
91748acd3ab329dbe55174435f8b5f6062909b46,washingtondc-emu/washingtondc,"Sh4 interpreter: move more shit out of class Sh4

class Sh4 is now a POD
"
c05d10dd355f5fcbfdf68066bc8d5cabff9f8e3b,KeldorKatarn/OpenTTD_PatchPack,"(svn r12042) -Fix [FS#1676]: Reimplement how rivers and canals are stored in the map, allowing the sea/river/canal status to also be 
stored for buoys, docks, locks and depots. All these are now allowed on rivers and removal of them will revert to the 
original water type.

"
fdb720cc1a48ab37bdd776b528cc15dfebdaf7c8,KeldorKatarn/OpenTTD_PatchPack,"(svn r21860) -Codechange: Rename road vehicle subtype functions to match the train names.

"
492d13283160ee0ffebf6bb304d347b8da2240db,KeldorKatarn/OpenTTD_PatchPack,"(svn r12470) -Codechange: split order related types from order.h (and openttd.h) to order_type.h.

"
f1605cf47582c9c3bdada658fbad5a05ea2205fc,KeldorKatarn/OpenTTD_PatchPack,"(svn r15696) -Codechange: move the NewGRF language ID into the language file instead of maintaining a table in the code.

"
50359b2d086e4669ab3af08bb17258e539b8bcf2,KeldorKatarn/OpenTTD_PatchPack,"(svn r18277) -Codechange: remove unneeded widget indices for close, resize and sticky boxes and for window captions

"
0f7d925121beb1033917918478c7d213305de595,KeldorKatarn/OpenTTD_PatchPack,"(svn r13024) -Codechange: do not use WE_MOUSELOOP when WE_TICK suffices, rename WE_4 to something more descriptive and correct some (completely incorrect) comments.

"
639ec25820ba4a8cf30ac940dc766725493d7321,KeldorKatarn/OpenTTD_PatchPack,"(svn r16111) -Cleanup: remove some duplicate/unused strings
-Change: move a string to a more sensible location

"
035d0ef16beaa601e45e89e4b70611947f18031f,KeldorKatarn/OpenTTD_PatchPack,"(svn r20187) -Codechange: move _tileh_to_sprite into a function in a more logical place and with a more descriptive name

"
616c02c42eee488cf021a0e478f48817a137057f,KeldorKatarn/OpenTTD_PatchPack,"(svn r27676) -Codechange: Rename catenary functions, so that they refer unambiguously to either RoadCatenary or RailCatenary.
"
a20b833516d0a10edc7196b90cae30fe7d78a763,KeldorKatarn/OpenTTD_PatchPack,"(svn r14199) -Codechange: split fileio.h into fileio_type.h and fileio_func.h so not everything that includes saveload.h needs to include everything else too.

"
a10071cd97e67b5d1e33c92371744d9db7b301d6,QoboLtd/cakephp-csv-migrations,"Smarter way for field handlers to get value from data

Currently, we have multiple scenarios of passing the field
value to the field handler (`renderValue()`, etc):

* Using `$data` parameter
* Using `$options['entity']` parameter

On top of that, both of these can be either one of the following:

* An Entity instance
* An array from $this->request->data()
* An actual value of the field

In order to simplify the handling of these cases and make them
more consisten, we now do the following:

1. Try to rely on `$data` parameter in all cases.
2. Pass `$data` to `_getFieldValueFromData()` method, which checks
   the type of the variable to be either an instance of Entity,
   and instance of Request, or something else.
3. If the `$data` is empty, then we try to get the value from the
   `$options['entitiy']` if possible.

The last one should eventually be factored out and disappear.  It's
only there because we didn't do the clean data handling in the first
place.
"
8922b49a56a4038465121021ff122360d8f3a917,angular/platform-server-builds,"8675b8d fix: cleanup public api of platform-server
"
4ae4d2456a6bf40b35d4c7fe6a0b9f10f065dd9e,cBioPortal/cbioportal-frontend,"move query modal. make it wider. add styles for query modal
"
123e01059addbd7051e9c8420dec719e643eb085,cBioPortal/cbioportal-frontend,"Merge pull request #1254 from kalletlak/study-view-refactoring

Study view refactoring"
3c36f8944f1e54f0eaeaaca35a51091e96b15e3b,ebraminio/DroidPersianCalendar,"Move calculation logic into the main package as they are either written by us or refactored by us
"
6fc11d29ebb1f51d7ef4ebe59994c1bab0c13418,ebraminio/DroidPersianCalendar,"Make Utils self reference weak in hope lowering possible leak
"
fc45b2df836845d0722f82d1cd1b13f3d27883fa,mmz-srf/srf-frontend-framework,"font-smoothing instructions extracted into a mixin; _shame.css rule for js-fake-image-object-fit is more restrictive now

 SRFCMSAL-537
"
aeeaf88e00026185c5a1db8c10e6394946510e4a,mmz-srf/srf-frontend-framework,"IE11 fixes for refactored collection spacings

SRFCMSAL-1454
"
2222c5e51bf7e6677ee7f64459373d760840d249,mmz-srf/srf-frontend-framework,"cleanup

SRFCMS-6289
"
08bd53e3634a5c6c7ee4633d5e499555fae53668,mmz-srf/srf-frontend-framework,"refactoring of related episodes with medium

 SRFCMSAL-379
"
6ce8bfdb4842ec9489aa1215ea7fdea7fcfc9c58,mmz-srf/srf-frontend-framework,"Merge pull request #442 from mmz-srf/SRFCMSAL-1400-collections-critical-css

SRFCMSAL-1400 improving critical css for collections"
98a5fef5de0e780ef32f3a6b949cbf9fcaa570ab,mmz-srf/srf-frontend-framework,"basic implementation of new header critical css (WIP); some cleanup in current article's critical css (WIP)

SRFCMSAL-1025
"
7bcdb1000598f679878a5a1a9dfebec04f63aca2,smcameron/space-nerds-in-space,"Make science target selection include selection type

Signed-off-by: Stephen M. Cameron <08baeeb9b5a498291f7d177502904bec63bb9555@gmail.com>

"
0ab9619881198bf9abab4dc248ebff83120e0396,telldus/telldus-live-mobile-v3,"Changes ESLint rules, refactor
"
aa5c0fa08347fce30d7f66ba7d8eeeb34d4457e4,telldus/telldus-live-mobile-v3,"Remove all instance of using 'StackNavigator' explicilty as a property
also remove unused code.

See #409.
"
3bbc224aad8c221a58e73c1f58a97c3545bd27b8,telldus/telldus-live-mobile-v3,"clean up state properly upon LOGGED_OUT - #141 and #171 (#45)

* keep socket connection closed upon LOGGED_OUT

* clean up state upon LOGGED_OUT

- no more White Screen of Death when switching accounts

* Revert ""clean up state upon LOGGED_OUT""

This reverts commit 542cfe2951c4e6956d41b39ad86039663682c817.

* Revert ""Revert ""clean up state upon LOGGED_OUT""""

This reverts commit 51dcbb9a5e224dea13f9d4ec4932276a8975170c.
"
d3a07c744edd4d1f8c1c1d62d55511adda340c60,verejnedigital/verejne.digital,"Unify pagination
"
e84920e553200b652e38ad233bc1088748fe734a,wordpress-mobile/WordPress-iOS,"Removed commented code block and extraneous NSLog statement.  Reversed automatic changes made to xcschemes files.
"
65b67cc4362c7c8cb7cb7902bda55e9732fa8300,wordpress-mobile/WordPress-iOS,"Renaming property since it‚Äôs not just dot com.
"
64d71bebbb88dceeb0adf2bda461846a53774de4,wordpress-mobile/WordPress-iOS,"Couple of code improvements
"
3f1a3c235206f2acccb3e6b9ed6ba9c4de35e665,wordpress-mobile/WordPress-iOS,"Rename InAppNotification to Notice
"
9de29b237649d5585249d00153945d3cd6010a66,wordpress-mobile/WordPress-iOS,"Merge branch 'feature/nux-improvements' of github.com:wordpress-mobile/WordPress-iOS into feature/nux-improvements
"
534d8fda48f2eb9be99d101384e3e9c694fbdf1b,wordpress-mobile/WordPress-iOS,"Merge remote-tracking branch 'origin/develop' into feature/remove-extract-notifications-feature-flag
"
4eb062c1bda3ebe0977d8eb4d9da7c404043699a,wordpress-mobile/WordPress-iOS,"Renames button to be more generic.
"
0a38da807143cd790c84580048f6be11a4d5eedf,wordpress-mobile/WordPress-iOS,"Merge pull request #756 from wordpress-mobile/issue/743-hide-tags

Hide tags and rename ""topics"""
a9f7664595c33f034e15f41dd35d340b8fc0933d,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into issue/6629-address-warning-fix

* 'develop' of github.com:wordpress-mobile/WordPress-iOS: (80 commits)
  Update Podfile.lock
  Updated MediaPicker to 0.13
  WPPostViewController: Updates discard action placement
  AztecPostViewController: Updates discard action placement
  Turn recent site threshold up to eleven! :metal:
  Remove ""count"" helpers
  Moved related constants inside WPBlogTableViewCell
  Limit recent sites on display instead of storage
  Drop Table typealias and rename table to sections
  Version bump for 7.2 builds.
  Updated base translation strings for 7.2 localization.
  Categories: fix broken test.
  Cleanup minor items in login code
  Updates Aztec to 0.5a6.
  Media library: Update navbar item enabled state when data source changes
  MediaLibraryPickerDataSource: Check media isn't deleted before returning
  MediaService remotes now check response for media deletion requests.
  Move returns to their own lines for clarity
  Remove Void return
  MediaItemViewController: Pop if the media item gets deleted.
  ...
"
92d04dea716813f6383b8f22edc4fec3371c8db4,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into issue/5673-remove-site-follower

* 'develop' of github.com:wordpress-mobile/WordPress-iOS: (35 commits)
  Derp.
  Derp.
  More accessibility tweaks for the snapshot tool
  Improve publicize error messages
  Remove unnecessary check when setting search query.
  We only care about the first big enough image
  Do not allow images with no width
  Only look for an image to feature on the post content
  Localization updates with correct mappings between Xcode, GlotPress, iTC
  MediaPickerDataSource: Check search query has changed when updating FRC.
  MediaItemVC: Popping on deletion is handled by the media library VC
  Media: Clear search query if we have no assets left on viewWillAppear
  Media: Only update search query if search controller is active
  Fixes screenshotting process - universally works for iPad & iPhone now.
  Removed the fun stuff from the screenshotting screen. Derp.
  Version number bump for 7.2.0.1 & 7.2.0.20170317
  Translation updates.
  Only update Aztec pod
  Removed unnecessary setUp method from unit test
  Added code comment for clarity on usage.
  ...
"
9a29865984bfba36301d18132fcaa6db90cb97a8,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into issue/245-media-placeholder-cell-update

* 'develop' of github.com:wordpress-mobile/WordPress-iOS:
  Disable test from WordPress Alpha scheme (used by buddybuild)
  Disable test on scheme instead of commenting it out.
  Comment UnitTest that enable Helpshift while running tests.
  AztecPostViewController: Removes unneeded unowned modifier
  Make sure that handling of notification is done on the main thread.
  Login: Refactor to Swift extensions. Use an enum for supported services.
  Login: Renames field
  Login: Additional comments.
  Login: Fix typo.
  Removes trailing semicolon.
  Login: Updates Podfile.lock
  Login: Wires up basic UI support for social login.
  Login: Tweak endpoint signatures.
  Login: Adds service methods for connecting social account.
  Login: Support 2fa with social logins.
  Login: Adds method to header.
  Login: First pass at support for google login via LoginFacade
  Login: First pass at service and networking calls for google login.
"
2f4dd34a2b77e07b240a8ed11b56b39eaacd9d36,wordpress-mobile/WordPress-iOS,"Refactor remaining classes to use AccountService instead of WPAccount
"
efa027f7020486b3d4caf342a8ee8cedc5759a1d,wordpress-mobile/WordPress-iOS,"Merge pull request #8924 from wordpress-mobile/feature/8909-dynamic-type-pages-posts

Improve Dynamic Type accessibility for Posts list"
79b13089b6f9a03efc13e00a6f83a78c41b67755,wordpress-mobile/WordPress-iOS,"removed all/pending segmented control, set selectedIndexPath to use dot selector for proper retain/cleanup"
e4e6a9ccca882aa545817db5c58cc69b038d1562,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into issue/245-media-placeholder-cell-update

* 'develop' of github.com:wordpress-mobile/WordPress-iOS:
  PushNotificationsManager: Renames Singleton Getter
  InteractiveNotificationsManager: Splitting class in categories
  InteractiveNotificationsManager: Renames Singleton Getter
  InteractiveNotificationsManager: enums should be lowercase
  InteractiveNotificationsManager: Updates visibility modifiers
  PushAuthenticationManager: Addressing review comments Mark II
  PushAuthenticationManager: Addressing review comments
  PushAuthenticationManager: Cleanup
  PushAuthenticationManager: Updating if statements
  PushAuthenticationManager: Wiring Settings struct
  PushAuthenticationManager: Updates Method(s) visibility
  PushAuthenticationManagerTests: Updates Import
  NoteBlockActionsTableViewCell: Updates button spacing
  VerticallyStackedButton: Setting fixed font size
  VerticallyStackedButton: Preventing visible area overflow
"
89b1dac4cf28542918eb82f1720a2b188d56e1e0,wordpress-mobile/WordPress-iOS,"Changing some Mixpanel events into properties in order to optimize usage.
"
a74e233f1928f387927d2f3ec198767bb7410946,wordpress-mobile/WordPress-iOS,"#154 - Replaced instances of false & true with NO & YES
"
f68db72270d8f64f3ecafda22f19bc40094bd266,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into feature/7689-picker-insert-docs

* 'develop' of github.com:wordpress-mobile/WordPress-iOS:
  Fix check for google login credential.
  Update podfile.lock for google new libs.
  Update Hockey SDK pod to version 5.0.0
  Updated version numbers
  RichContentFormatter: Replacing keyWindow snippet
  RichContentFormatter: Renames Public API
  Add option to remove alpha channel from internal icon png
  Properly configure Jetpack settings background color
  Couple of code improvements
  WPTabBarController: Update Write button positioning logic for iOS 11
  Consistently use WordPressBlue for links on table footers
  NoteBlockUserTableViewCell: Remove follow button entirely if disabled
  SettingsTextViewController: Don't use auto-sizing for text cell.
  ReaderComments: Override default headers and footer height.
  Added 1024 icon to internal version
  Process 1024 app-icon

# Conflicts:
#	Podfile.lock
"
26def9a18be909149bab53492bb638659f1b3823,wordpress-mobile/WordPress-iOS,"Refs #1499. Moves most of the remaining TODOs to trac.
Removes obsolete code from ReplyToCommentViewController and EditCommentViewController.

"
31152aefdf5a5f2193edd250c877b7111cb19639,wordpress-mobile/WordPress-iOS,"Merge pull request #7121 from wordpress-mobile/try/stats-as-framework

Move stats code into WPiOS as a dynamic framework"
80d136a7923c47bb59ed7c7c669ae41de7c117c8,wordpress-mobile/WordPress-iOS,"make `Strings` on `FancyAlertViewController` private, so other objects can reuse the name
"
d144c32eca84fa434baab6296ae9c63215d509b8,wordpress-mobile/WordPress-iOS,"Merged develop -> issue/1618-AFNetworking2.
"
f7b1c5e6de32fdae7c95a1d6964208b3685c2cb6,wordpress-mobile/WordPress-iOS,"Simplify interface for media service.
"
822f2f54aa266d114940f3ac02e45ed89bd08a33,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into issues/1171-cleanup-post-settings
"
745ff83a182887ef0f83e960b2635532e1b4f17b,wordpress-mobile/WordPress-iOS,Code cleanup and refactorings.
5d44b1f31a40ec914575cb5dafbc75c219e7be24,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into issues/1729-layout-cleanup
"
5ee61ce1568785c73ce8a4ebfad793d2e4f7e059,wordpress-mobile/WordPress-iOS,"Refactored into Remote Service

Should have done multiple commits - was hard to do so.
"
976e6ac82c719b7ed74e27c48886af63a6adcd7c,wordpress-mobile/WordPress-iOS,"#552 - Renamed UITableViewActivityCell to WPTableViewActivityCell

UI is a reserved prefix - I‚Äôm sort of surprised we haven‚Äôt gotten rejected before for that.
"
864ce1618d7ad6cb66bddb278644bb7147e96516,wordpress-mobile/WordPress-iOS,"Cleanup & fetch batch size on results controllers
"
a640c0e0f23d9fa62077d57f68ee8eff443025f6,wordpress-mobile/WordPress-iOS,"Moved email registration code to mixpanel analytics class.

Moved email registration code to WPAnalyticsTrackerMixpanel as the
extra class was redundant and the WPAnalyticsTrackerMixpanel class
hooks into the sign in flow better to fire off the register email
check.
"
f63d74dd839a63334eae2a0d79e3e263601c539e,wordpress-mobile/WordPress-iOS,"* Initial integration of CocoaLumberjack into the project, somewhat replacing the existing file logging.  Additional work required to use logging levels.
* Moved Extra Debug into SupportViewController (still need to remove old logic from SettingsViewController)
* Scaffolded out the mail compose view for sending feedback
"
73eee46dc6ef090909e87cbf0ea42bd6bd0b7699,wordpress-mobile/WordPress-iOS,"Media: break out HTML helpers into category.

Using Obj-C for now to not tamper with the HTML string building method.
Would be better suited as a Swift extension later.
"
322d50f2f51dd9d77488410a211f64ba4bcc9739,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into issues/686-editor-cleanup

Conflicts:
	WordPress/Classes/EditPostViewController.m
"
7dcefbbca0d820d89f1dd1c2a938c7af8aae225f,wordpress-mobile/WordPress-iOS,"Media: cleanup from review.
"
e9ab46a612bbd22a63c63f84b85eb39c94275f1e,wordpress-mobile/WordPress-iOS,"#212 - Reworked extra_debug flag
Removed instances of the NSUserDefault extra_debug from any place except the app delegate.  Any instances of logging that was only done during extra_debug is replaced with always logging with DDLogVerbose.  Setting the logging level now determines if those entries are presented or not in the log file.
"
debc7979d40c545863aeee2f239284a1bc2a7a37,wordpress-mobile/WordPress-iOS,"Grey and highlighted icons

TODO: use iOS keyboard grey background, e.g. #d3d6da, make sure heights
line up, and use highlighted images instead of tinting to improve
performance. cc @aerych
"
318665690817036e7b7372a001c7597e785d04e3,wordpress-mobile/WordPress-iOS,"Renaming LocalService to LocalCoreDataService for appropriateness
"
436070ea06fbca618060ce259358fab1eba877fa,wordpress-mobile/WordPress-iOS,"PushNotificationsManager: Renames Singleton Getter
"
7b25e78cabb9cd8f16c8bb91449919658e94fd56,wordpress-mobile/WordPress-iOS,"Renaming SiteCreationDomainsViewController to SiteCreationDomainsTableViewController.
"
b62bd05307b091f7c564fa1adf4479f76e439dc2,wso2/carbon-identity-framework,"Introduce separated cleanup mechanism for temporary authentication context data
"
5df50e03c4c35d2804a1e10b1b4af05541db102d,MethodicalAcceleratorDesign/MAD,"ongoing integration of GTPSA, big cleanup
"
14cbe90fd4fec7e96442169ab2338140ffd19196,TechEmpower/FrameworkBenchmarks,"Added Octane to the frameworks. (#2416)

* Added Octane to the frameworks.

* Renamed libchannels to octane.

* Adding the techempower_benchmark source code and build files.
"
3ada750f264a46d791306f0194f8df173ab9ee67,TechEmpower/FrameworkBenchmarks,"metadata cleanup: merged with upstream master
"
f9d90e37571acfd1f5ab6491e329b1eb1213a0ab,ZeroK-RTS/Zero-K-Infrastructure,"visual improvements for ""notification bars""

added title, tooltips (for chat), gradient
"
ec93e48a1dba46919f39ce0b980dd4c71f387ed7,ZeroK-RTS/Zero-K-Infrastructure," * zero-k website caches wiki and spotlight data in memory for improved performance
 * wiki 15minutes
 * spotlight data 1hour 

svn path=/trunk/other/; revision=1944
"
f68bd6db4b15b244dc81fe68c953431f0927952c,ZeroK-RTS/Zero-K-Infrastructure,"basic battle listing + some cleanups and fixes
"
a68b8bad47781e563693d20b48457ddd7cd8d5b2,ZeroK-RTS/Zero-K-Infrastructure,"DEPLOY_SITE
removed useless role property and added display order for roles

svn path=/trunk/other/; revision=7321
"
68153808f3ea5ab2cbbd9b71fa5260328beec02d,africanmathsinitiative/R-Instat,"Deleting set of ""replace"" parameter
"
db2a453a9ba0e5c5ec246114d3ef79d44db3fb4a,africanmathsinitiative/R-Instat,"tidy up of simpleRegOptions
"
0c3b5ac1053edb38fff4ba602b9b729ea1c220b6,angular/platform-browser-builds,"83e2d3d refactor(RegExpWrapper): remove the facade (#10512)
"
cd367e17abee27bce158f42ddc2e883b635a4ccd,angular/platform-browser-builds,"79da6bc fix(platform-browser-dynamic): Rename CACHED_TEMPLATE_PROVIDER to RESOURCE_CACHE_PROVIDER
"
1ad0a67bac321cc7c69200f304dd0d7b9311c58a,angular/platform-browser-builds,"0e2dd76 build: remove obsolete `ci-lite/` directory and files (#14994)
"
0c92e8bcfadcbf21a3b40a6cc92be88fadfb5982,angular/platform-browser-builds,"501b9fe Rename of XHR - Moving files
"
54ca3d77e57f5318e354ad786cdecda142ac054b,angular/platform-browser-builds,"2dfc9c6 refactor: dart
"
c3a266a224c248bb811a7dbdf5226cb4e98297f6,forcedotcom/salesforcedx-vscode,"Upgrade to TypeScript 2.6.2 (#242)

* Use non-null assertion operator
* Fix unused variables
"
06cac8639acdd98682a71c8e6406428f6a7682ed,metasfresh/metasfresh-webui-api,"#3777 Refactoring. This method was moved because it need to be shared

https://github.com/metasfresh/metasfresh/issues/3777
"
91ea53f28e4fc22ddeb747a726ae044f0c224967,metasfresh/metasfresh-webui-api,"FRESH-112 introduce LookupDescriptorProvider

which replaces Function<LookupScope, LookupDescriptor>
"
6b1f57e3035439a0055b08ec94eea93f6c463f29,mpigsley/sectors-without-number,"Begin splitting redux actions/reducers into sector, system, and planet
"
2ca5694de4dfa2768d49e84934a632fb7200aeb4,theonlydude/RandomMetroidSolver,"area: separated layout patches in logic
"
d770de0e8bbaaf46ab213d601a4d3d09b5c0cb82,Azure/azure-quickstart-templates,"Merge pull request #1021 from singhkay/master

Merged and removed duplicate/non-working templates, CId others"
7dd4cf4d788989bfc960e8ec9dfa0d3dfa9f0a65,Azure/azure-quickstart-templates,"made most vmss templates have ReadWrite caching on OS Disk for perf improvmeents
"
4714536c437baebe7e74adc8f85f5473a807886a,Azure/azure-quickstart-templates,"refactor code to support apiVersion change

refactor code to support apiVersion change
"
0e11fa81b6a43331506d1a6c390b96acb43300e1,CZagrobelny/new_sanctuary_asylum,"accompaniment leader activities refactor
"
8ed3a9a8f8a2bbcd4047e4bb667f7a4a96c3b1e1,ProteinsWebTeam/interpro7-client,"more cleanup
"
7960e6e8c898015bc4074c6b2f2bbbc39bbd0749,ProteinsWebTeam/interpro7-client,"refactoring schemas for pages
"
cfa86bd111ea3d8c714396d3f2b6a13a5d1f31aa,ProteinsWebTeam/interpro7-client,"replace previous unit tests with Jest
"
879102c352cbd56119816f4dbf15b6783e01ee05,ProteinsWebTeam/interpro7-client,"Merge branch 'home-improvements' into dev

# Conflicts:
#	src/components/IPScan/Summary/index.js
"
adfc5b7bed06874049ebdb25610fce45b0eede51,ProteinsWebTeam/interpro7-client,"Merge branch 'dev' into refactor-loadData
"
e51d83bc6dea06f23bd0f10af1143c1f31d2ba00,neos/neos-development-collection,"Merge pull request #421 from johannessteu/issue/neos-1765

FEATURE: Sort direction options in media browser

More flexible sorting in the media browser. The sorting is now split in sort by and sort direction to sort the asset list independently.

NEOS-1765 #close"
d306f7f872b610e566c10a7cd3229c924f12d928,neos/neos-development-collection,"TASK: Refactor absolute namespaces in Neos / Controller
"
177b32d567fabdfbb4a8ed97521e428fc22164b7,neos/neos-development-collection,"Merge remote-tracking branch 'upstream/master' into kitsunet-reduce-node-complexity
"
b56b4ef65770a41d29e0d4df5b7134c104ec3904,nimble-platform/frontend-service,"Split value-input component into one component per type
"
4f0382eceaedf6e514e7658d917c595f67e9bda8,rubymonsters/diversity_ticketing,"renames the 'undo' action that changes applications back to pending to 'revert'.
"
0095166a704ae75631055353a2fcfa7a93625d50,EducationalTestingService/rsmtool,"Merge branch 'rsmtool-refactor' into improvement/#117-disattenuated-correlations
"
8badc2846f52af7ef2be0e81784a30bcfd1184e4,GoogleCloudPlatform/magic-modules,"Finish replacing StringUtils with the new String class methods
"
f52cd5ea7767be526355afc4f86609a445c53f41,Icinga/icingaweb2-module-director,"DirectorDatafield: simplify usage
"
7a2520385696bf9facf25a0384452aa7adeee952,OpenCollective/opencollective-api,"Unify the way collective transactions are loaded to include virtualcards

As of today `collective-report`, model and graphql api each have they own way of loading collective transactions. But now we have virtual cards, there's a little business logic we need to add to ensure we load the proper transactions for collective.

When fetching collective transactions with the new function, we will now include:
- Debit transactions made by this collective without using a virtual card
- Debit transactions made using a virtual card from this collective
- Credit transactions made to this collective
"
ebe4395136a44c0cf8c8ed2492045339be5779dc,OpenCollective/opencollective-api,"Merge pull request #1547 from opencollective/enhancement/collective-transactions

Unify the way collective transactions are loaded to include virtualcards"
2736ae9d639d045b9e9dec54a30cfef86566571b,OpenCollective/opencollective-api,"[Don't merge] Split donations flow (#543)

* split the donation flow

* add meetup identifiers'

* more test fixes

* add a processedAt timestamp

* tests for the new flow

* update paypal tests and add nocks for all outgoing paypal donations requests

* changes based on code review

* add a test for sending out thank you emails to donor

* fix tests

* more fixes for tests

* fix linting errors
"
74e01da0e1ac629816043f86c2e3ffa074fc8425,OpenCollective/opencollective-api,"Collective.addHost + make sure we add the Host in Members when creating a new collective with host
"
96ada71e6864923752caa6894b500ad4a8cc1097,OpenCollective/opencollective-api,"Group.created (#619)

* send email to confirm creation of the group

* Refactor authorization for creating a group, just need to have a valid api_key. Got rid of privateGroup tests for cleanup

* removed demoHostId

* invalid api_key now returns 401

* making donations.routes tests pass

* improving tests

* fix test create group

* cleaning tests
"
7fc123b419bf4c59eafdb9d4b7719a48ecd37d69,OpenCollective/opencollective-api,"rename Card to PaymentMethod
"
5480ccc30aaf067f5cd208879bf967f663478510,OpenCollective/opencollective-api,"Fix related groups call (#501)

* instead of sending list of users, only send counts

* bug fix and nsp fix

* semi colon
"
7d9a53a727359895128528dcfee8f2a011de7b08,OpenCollective/opencollective-api,"preview, css fixes, refactoring
"
2ec7cb4a6ec09c8875d32edd3195327b40035e99,RailsEventStore/rails_event_store,"Improve v2 subscriptions API tests

Issues: #155 #196
"
747ae814a2b2f5f7259c8962bebf76b46ffb043f,RailsEventStore/rails_event_store,"Remove tests for deprecated subscribe* API

Issue: #350
"
fa603360b70f56153dc3a3c76191211f50832f53,RailsEventStore/rails_event_store,"Extract all read operations on repository from Specification

A new class SpecificationReader is now an interface between
Specification and event repository. All reads are done only via reader
class. Also all mapping is done there. Specification just have a reader
and knows nothing about repository & mapper used.
"
8cb18a234ccf4ac1616f2a64f6109c49636b1067,neinteractiveliterature/intercode,"Simplify build; switch from UglifyJS to babel-minify
"
35a47cbbfda1722b59668272744661199e788269,szymonlesisz/trezor-connect-alpha," refactoring CoreMessage + new flowtype import path
"
a51a5ddd336173e40da4151bf4e3c33cdd11c936,End-to-end-provenance/RDataTracker,"Remove duplicate nodes & update regression tests
"
35441dd160a344a2ce564b52036cd89c2f79555a,End-to-end-provenance/RDataTracker,"Merge pull request #419 from End-to-end-provenance/refactor-barb

Refactoring"
090cd22d39b0a155682430e6d6cbd21e1ba2fb42,MassDistributionMedia/rc-ca-blinds,"Merge branch 'release-1.12.0' into refactor-4196-aldeed-catalog-schema-changes
"
f3a7fc2333bf805cf83bbbc298e9f23556c2fcde,MassDistributionMedia/rc-ca-blinds,"Order dashboard search by orderId, customer info, order product info (#2717)

* Get tabs right

* Status dropdown

* Implement list as a DropDown as opposed to list

* Add onMenuItemClick first iteration

* Use queries to find orders

* Init ordersearch component

* Handle seach change setup

* Add queries to order filtering

* Separate sub in tracker autorun

* Style order search input, icon and clear button

* Init filtering of orderTable on search

* Move query into sortable table

* Use ordersListContainer

* Change queries for captured and approved statuses

* Add clear filter and active filter

* Add i18n keys

* Apply search results to OrderTable

* Update id regex query to fuzzy and case insensitive

* Add jsdoc, and withpermissions wrapper

* If there is exactly one order as a match, the matching order should be opened in the action view panel

* Order page was rendering twice fix that bug

* Delete dummy file

* Update string style

* Resolve conflict

* Uninstall bcrypt

* Remove commented out code

* Use fa-angle-down instead of fa-chevron-down

* Move the search comp into orderList.js

* Fix re-rendering issue

* If more than one order, hide ActionViewDetail from table

* Remove test log

* Change dropdown default styling

* Rename components appropriately

* Fix actionview side effect

* Add blue color for activated filter names

* Add product title, variant title and option title to order search

* Only completed orders when completed selected

* Fix Approve issue

* Delete file

* Fix issue after merging

* Remove log; fix eslint error

* Connect search query to the filter query object

* Remove Lint issue

* Updating the [0] array references in order search

* Default to original if replace returns empty; add handleclear; plus comments

* Add stored card option

* Move tracker func to parent component

* Clean-up component

* Replace shipping to previous state

* Ensure phone replace

* Resolve queries on multiple keys

* Add todo comment

* ensure other fields (e.g ids) on query are kept in handleMenuClick

* Fix RTL alignment

* Fix no data dissappearing

* Use default loading component

* Code change on search component

* Fix anonymous emails bug

* Fix moving table on select

* Remove unnecessary div wrapper around OrderTable component

* Remove hard coded zeros on search collection

* Revert indices

* Remove TODOs around shipping

* Remove regex apound phone numbers

* Return regex for phone numbers

* Have phone search work
"
f1b8c433447b03d7d8793809937d6e8a861bace3,MassDistributionMedia/rc-ca-blinds,"refactor registry routes and permissions to use flow router name and pathDef

‚Äî package routes should now be prefixed with ‚Äú/‚Äú
- use package name: in route declarations for consistent aliases in
templates
- ReactionRouter.go(‚ÄúrouteName‚Äù) without prefix uses route.name
- default roles added for the visitor to access tag, product, cart
"
05cef95fcedf58b0d8f103e9d249f326fca2d562,MassDistributionMedia/rc-ca-blinds,"implement group permissions

- implement groups
- refactor roles management ui
- remove reactioncore app permissions configuration.
- use registry for package permissions configuration
- updated for issue reactioncommerce/reaction#372
"
c842d27fde639e3fd5709db99c261a7d59647c8d,MassDistributionMedia/rc-ca-blinds,"release 0.17.1 (#1529)

* Added babelrc and stage-2 preset (#1329)

* Meteor 1.4.1.1 (#1331)

* METEOR@1.4.1.1

- METEOR@1.4.1.1
- updated Meteor packages, collections2

* version 0.15.2

* move plugin loader from startup to reaction-cli (#1332)

* preserve custom profile fields in Accounts.onCreateUser (#1335)

* copy deprecated cfs:gridfs to local and update npm deps (#1336)

* rounding of total to negate fractions of cents

* updated version

- release 0.15.3

* Josh acceptance test setup user permissions (#1315)

* First round setting up acceptance test capabilities

* webdriver working

* adding meteor ignore file structure

* create tests directory

* adding png to gitignore

* element maps

* More progress on functional test setup

* fixed assert

* using dot notation

* adding chai to dev packages

* Begin adding acceptance testing instructions to readme

* Simple login test complete

* Adding to readme about failed tests screenshots

* adding stuff

* Core permissions acceptance test

* more fixes

* went off the deep end. added some low hanging fruit tests

* enabling all passing tests for now

* fixed userAddress call

* removing docs from main readme

* linting for config fixed

* more cleanup

* additional cleanup

* using chrome instead of firefox now since ff is borked

* adding refund test

* a couple more refund tests w/ a couple fixes

Will add more assertions later for these tests.

* adding new tests to runner

* argh

* remove screenshot

* remove ignore of all .png

* updated package.json

* updated reaction.json.example

* finishing up PR

* lint cleanup

* temp workaround for missing product in store

* A couple locator changes - commented out broken stripe tests

* persistent profile language (#1338)

* allow multiple languages in Translations

- allow array to pass multiple languages in addition to shopLanguage.

* updated i18next and Translation load order

* remove session handling from i18n

- remove ‚Äúlanguage‚Äù session
- rely on Meteor.user updates (stored lang in profile)
- update i18nchooser helpers to insert user profile lang into selected
element class

* retain language on anonymous user registration

* check admin before setting lang

‚Äî don‚Äôt set lang on initial admin

* updated accounts.js

- cleanup checks

* Josh test speed increase #1347 (#1355)

* turning verbosity off when running tests by default

* Removing sleeps/pauses when I can

* flaky test fix

* #1347 cut runtime down by nearly 50%

This is still just running synchronously. As tests grows we will need
to look into running tests in parallel, however this might require some
infrastructure in place, i.e. a hosted QA environment. An environment
that can handle the load of 5-10 tests hitting it at a time.

* only build Docker image on master/development (#1359)

* only build Docker image on master/development

* chmod +x

* fix CI script typos

* load default user from env (#1369)

resolves #1368

* remove duplicate translation

* remove duplicate translations

* Shipping 1320 (#1357)

* disabled ranges

- TODO ranges are not functional yet.

* update shipping form methods

* remove settings from registry

* update swal version

- updated sweetAlert2 version

* export Import, Fixture

- export Fixture independently of Import
- refactor Import.shipping to use a modified key
- refactor load-data to use Fixture

* updated Shipping schema

* updated shipping method names

- breaking change: shipping method names updated to follow convention
of Reaction
`updateShippingMethods` becomes `shipping/methods/update`.
- adds `shipping/provider/remove` method

* add missing import

* convert info logging to debug

* updated form methods

- update form methods
- add SWAL2 confirmations

* add handling to cart rates

- if `handling` has data add `handling` to `rate`.

* updated cartTransforms

- updated to use own methods and parse float to ensure consistent
results.

* move shipping from included to core

like taxes, the core will include flat rates and the ui handling for
additional  shipping methods, which will be added to included - in the
form of `shipping-shippo` etc.

* remove card cursor:pointer (#1384)

Resolves #1309

* Product Search (#1350)

* Mock Search Files

* Mock Search Files

* Remove addProduct method

* Remove Fixtures to remove mystery Shop

* Super limited, even for a fake search

* Don't overwrite the descriptions on first run

* Larger data set for testing

* Don't log unless we are actually adding Search Products

* A simple weighted product search

* Split out plug ins into ""search"" and ""searchEngine"" plugs.

* Improve product title search, add search settings panel

* Add in variant search

* Add more options for weighting. Make the settings panel better.

* Add tags to results and search on description

* Rename plugin to be consistent with others

* Add example config file

* New test data with ""show store"" model with tags

* Simple product subscription that returns products and facets (tags) for a searchterm

* Only return ids and names of tags (we will eventually only return ids, but names for readability for now)

* Filter by tags

* We only need one plugin since our decoupling is provided by the use of a publication

* Rename plugin

* Using Mongo full-text search rather than regex search

* Using Mongo full-text search rather than regex search

* alphabetize base-style imports

* Add in hooks to keep PS collection updated

* Move build/rebuild functions into module

* New settings for fields and weights

* New settings for fields and weights

* add in hooks

* New settings for fields and weights

* Build PS collection dynamically based on configuration

* Add in vendor to list of possible fields

* initial push of search UI

* Move collections to lib so that clients can subscribe

* Add shopId to required fields

* Move collections to global collections

* Use ProductSearch collection on the client side

* Filter tags by hashtags in ProductSearch results

* Populate template with search results

* Product search results sorted by score in Ascending order

* Move (re)building search collections to job queue

* Handle form with a method so that we can rebuild collection or index when settings change

* Queue job to rebuild indexes when weights have changed

* Don't run search hooks when ProductSearch collection has not been defined

* Add Order search

* Namespace product settings

* Don't run hooks when under test

* Add missing ""shopId"" field

* More fixes to make OrderSearch collection configurable.

* Ensure index when inserting product records

* testing larger datasets

* Make function names less ridiculously long

* Pass results without relying on the product already existing in the subscription

* Don't add a bunch of products for testing by default

* style cleanup

* style cleanup

* style cleanup

* Add handle to product search collection

* Clarify log statement

* Ensure but don't drop collections when creating an OrderSearch record

* No longer build productResults on the client

* Cleanup and add `maxResults`

* Cleanup settings form

* Don't queue search collection jobs when under test

* Search result tests

* Add price to results. Make results different based upon logged-in status

* Add tests for non-published products not showing up for anonymous users

* Add tests for non-published products not showing up for anonymous users

* Add account search, jobs, etc.

* Change account search to not use text search

* ui initial push

* conflict temporary fix

* move style into less

* i18n for search

* added delay on fadeout to feign smoother transition

* sped up tag color transitions

* componentize search results content

* componentize search results grid

* style updates for search modal

* get media to show in searchGrid

* updated id date for searchGridIcons

* Use hashtags not hastags

* Change order search to use a regular query plus tests

* removed console.log

* fixed typo

* switched content order

* commit of admin buttons (currently not functional)

* Add support for text indexes in other supported languages

* Make order search results case-insensitive

* close button classes

* removed outline from nav

* removed additional media from search

We only need to show one picture in search, for now at least

* updated text

* added search clear

* style updates

* Delete all existing records when rebuilding account search

* Remove startup test files

* Also remove test data files

* Make logging less chatty

* Allow for transformations outside of the ProductSearch method

* convert tags to flexbox

* style updates

* adding scroll tag container

* clean-up of development comments

* LESS cleanup

* style cleanup

* style updates

* 96% width input & tags

formerly 80%

* move some styling from search.less to navbar.less

* cleanup & i18n

* remove errant button

* changed tag active color to ban-active

* Add documentation around ""supported language"" as suggested by CR

* added i18n to search

* changed search tags to use btn classes

* disable currently unused admin controls

* rtl support

* rtl style adjustments

* Exclude anonymous users from accounts publication (#1390)

* Exclude anonymous users from accounts publication when logged in as admin

* NPM imports first

* update deprecated _.pluck

- Patch _.pluck = _.map in lodash 4.x
- resolves issue introduced in #1390

* metafields -> details for client visibility (#1397)

* metafields -> details for client visibility

* metafields -> details

* Search UI updates (#1410)

* add margin-bottom to hovered product for better visibility on last product

* removed font-size from .btn.flat

* created react flatButton

created a new react button component so we aren‚Äôt just if/elseing our
way through a different type of button to get what we need.

* adjustment for #1402 - added overflow toggle on body

* removed font size from btn-round

* allow ESC to exit modal even when not focused on input

* Release 0.16.0 (#1413)

* updated README.md

* update to v0.16.0

* conflict fixes

* updated versions

* Better email (#1367)

* convert email sending to use Nodemailer

* add getShopSettings and getPackageSettings helpers

* replace all Meteor accounts-password email methods

* remove old email api

* rewrite mail config methods to use nodemailer-wellknown

* create emails collection for longer term log storage

* add mail service to shop mail settings schema

* refactor email sending job to use new API

* add Meteor methods for email API

* add email publication for logs page

* build new email dashboard UI plugin for using new API

* remove old Blaze email settings

* fix alerts arg checks when callback is missing

* add new FieldGroup and Loading React components

* default theme cleanup

* fix variables import order in default theme

* dependencies updates

* clean up job queue workers

* update eslint config for more React details

* fix custom email config

* fix type handling for email config port

* remove email dashboard nav tabs component until needed

* add saving state and better error handling to email settings

* change email status route name

* remove deprecated mail config hook

* add unblock to email config verify method

* add host/port to conditions for custom email config check

* move email methods to base of methods dir

* package updates

* fix comment typo

* update dockerignore to reflect new location

* default vals for mail host/port not needed in registry entry

* fix optional email save when settings are invalid

* fix email settings save button state after errors

* don‚Äôt run email settings verify method if settings are missing

* add log when new email settings are saved

* npm updates

* fix text overflow in email config panel

* fix type checking on email port setting

* fix syntax

* i18n-ify all new email components

* fix sweetalert promise

* fix 118n prop

* remove password from logs

* force immediate retry of email job

* add new column in email log table for action buttons

* remove unnecessary braces

* fix missing email port in UI

* package updates

* restore searching for email templates from the database

* clean up imports method

* Check if billing address exists (#1386)

Prevents exception if there is no billing address

* Hide user menu (#1387)

Hide user menu after clicking on any link, including ""add product""

* Make close button work on tag nav bar in mobile mode (#1393)

* Prevent no image being found if no image has priority 0. `""metadata.priority"": 0` filter will fail to find an image if none has priority 0, so sort is used instead. (#1392)

* Try to prevent inline alert pile (#1391)

* updated pull approve to version 2

See: http://docs.pullapprove.com/
and
https://blog.pullapprove.com/pullapprove-github-code-review-43761a64ea9a
#.enx67rp3f

* updated .pullapprove.yml

* updated negative reject value

* updated reset_on_push

* updated pullapprove.yml

* update pullapprove.yml

-ARRGHHH!

* package.json update for nodemailer

* Install binary non-npm version of phantomjs. reactioncommerce/reaction#1325 (#1419)

* add timeout to taxes tests (#1421)

* Renamed field_group to fieldGroup to be consistent with other files (#1417)

* Fixes #1337 (#1449)

* ro-translation (#1441)

* publish authorize-net on npm under @reactioncommerce org (#1451)

* Issue/1452 (#1453)

* Fixes #1337

* Fixes #1452

* Prevent error in `cartPayerName` helper if buyer name contains non-latin characters. The latter are not accepted by payment gateways, resulting the error in the payment form. (#1432)

* PDP Revisions and Revised (#1356)

* Initial start for handling product revisions

Changes to products / variants are diverted to a draft in the
""Revisions"" collection. Calling publish updates original products with
revision data.

* Product visibility and draft reactivity restored

Allow products publication to be notified of updates if a revision
changes.
Expand product visibility to variants.
Allow product visibility toggle to be toggled for revisions.

* Cleanups and added ability to mark products as deleted

* Publishing and diffs

Added diffs.
Added diff UI.
Added publish component.
Added translations for react components.

* Added ability to publish multiple top level products

Draft and publishing now woks from the product grid for one or many
products.
Clean up.

* Fix show diffs toggle

* tag create / remove are now properly directed to a revision.

* Fixed bug preventing metadata from revision updating

Fixed bug that prevented revision updating all together.

* Added some tests for product handle and revisions

fixed issue causing tests to not run at all.

* updated lodash dependencies

- should resolve failing test

* updating tests for product revisions

* Updated more product tests.

Updated some catalog implementations to work with revision control.

* Fixing more tests

* Fixing even more product tests.

Adding tests for revisions along with fixing broken tests.

* Removing some test expects as they have no chance of every being true

* PDP react

start of an overhaul of PDP page to fix many outlying bugs and upgrade
it to better support revision control and display of revision content.

* Variant and edit component updates

Added variant list container.
Added variant component, updated variant list to use component.
Added EditContainer component which provides an edit button based on
passed in props to child component.

* added child variants to variant list

* Added tooltips, cart button and revision object handling

* React product detail page updates

Metadata for product detail page.
Cleaning up react tag components.
Cleaning up old react components to be used on new product detail page.

* Added tags component to PDP

* Updated CSS classes for react PDP media gallery

* UI updates for varaints

Added visibility buttons to variants and child variants
Added currency helpers.
Added inventory alerts to varaints

* Cleanup of price formatting

Price formatting was moved to currency.js. Removing functionality from
the helpers file. Fixed only implementation on formatMoney with module.

* Provide translation updated to product detail container

* React based social component

* Added pinterest button

Removed generic social button.
Other cleanup.

* Edit buttons for everything

Added edit buttons to all fields, tags, and metadata.
Added component for product field.
Edit buttons can now display status based on edited field.

* product detail editing improvements

Auto hide edit button for product fields that remain unchanged.
Fixed editing behavior for multiline textfield.

* removed template tag

* product admin form react

Add a new product admin form for managing the react version of the
product detail page.

* metadata management and style updates

Add and remove metadata now works.
Updated styles for metafields.

* Adding WIP react tag list editor

* React product detail page is now primary

other various cleanup of PropTypes, and console logs

* Remove git ignored config file

* Updated textfield className handling

* Add ability to define multiple fields on edit button for diffs

* Product social container how handles change notifications properly

* Selectable variant and child variant

Added ability to prevent default action for edit container edit button
click.
Added functionality to show action view for editing a variant.

* Cleanup product detail tags and metadata.

Edit buttons for both product tags and metadata now open the
ProductAdmin view in the side panel.

* React based inline alert components and containers

* React based drag and drop.

Top variants are now draggable and sortable.
Tags are now draggable and sortable.
Added DragDropProvider to create a reusable dnd-core instance for react
components.
Added container container component for sortable items.

* Create, update and remove tag functionality added.

* Update style of customer facing metadata component

Style of the non-editable, customer-facing metadata component now
appears like a table, similar in style to the editable counterpart.

* Move media gallery to core ui components

* removed unused component

* Media gallery upload and remove

* Media gallery drag and drop sortable

* Updated registry entries and media gallery

Added registry entries for new product detail page.
Disable registry entries for old product detail page.
Fixed bug causing crash with Media Gallery and undefined variables.

* Fixed erroneous display of edit buttons with permissions

* Switch media gallery for ul to div

* Fixed exception caused by undefined data

* Add publish controls to product admin

* Updated publishing workflow.

Publishing a product revision now properly sets it as ""published"" and
will allow a new draft revision to be made for any new edits after that
point. This allows a history of published changes to be stored.

* Updated package.json with react-dnd and react-dropzone dependencies.

* Tag updates

- Fixes issues related to creating new tags
- Fixes issues related to updating existing tags
- Fixes issue where duplicated tags are added
- Adds ability to exculde tags from suggestions
- Adds new midifier for hashtags in product revision update hook
- Updated styling of editable tags. Edidatbe tags in admin view are now
full width
- Removed dead code from revision hooks

* Updated some references to lodash isArray to use built in Array.isArray

* Fixed broken multi-file uploads for media gallery.

Cleanup of unused code.

* Added add button to add images using the file picker.

* Fixed missing card titled for product admin

* Renamed classname to match file name.

* Added card group component.

* Updated product admin with card group component

* Updated product admin fields to be multiline

* Updated metadata component

Removed local state from metadata component. Parent container should
handle all updates to state.

Other various cleanup.

* Fix broken tag test

Skip publish test, revisit its usefulness later

* Re-Enabled and updated product publication tests.

updated publication collector package.

* clean up product publication tests

* Fixed slowdown caused by social buttons.

Added helper to create settings for social buttons.

* Fix tag submit on enter key

* Updated tags

Fixed issues with drag and drop re-ordering.
Fixed drag handle; now only the handle is draggable instead of the
entire tag.
Sortable item no longer auto wraps elements, instead passes helpers
functions to composed component.

* Updated drag-n-drop for variants

Drag and drop now only allowed if user has edit permissions.
cleanup.

* Updated media drag-n-drop

Drag and drop is now enabled only if the media item is editable.
Drag preview now shows up properly.

* Update meta field styles and RTL styles

* Add metadata (details) placeholders with translations

* Load and display child variant media.

* Fixed issues causing suggestions to change on arrow key input

* Add placeholder for tag input

* Updated media gallery uploader placeholder display

In edit mode, media gallery now only placeholder item in the first
slot, until a media item is uploaded.

* space-out social buttons

* add link type button

* Add basic ability to change product handle manually

* Added button toggle text, and fixed translation issues

* Product delete callback

* ensure product handle is always slug-ified

* Removed duplicated delete function

Replaced native confirm with a custom alert.

* removed console.log

* Fix for incorrect product handle being applied to grid items

* Props and PropType fixes

* Translation component updates.

Added i18nKeys for visibility status

* Add settings panel for revision control settings

* Allow disable of revision control system.

Disables collection hooks and product / products publications.

* Cleanup and removed unused props.

Added parentTag to other callbacks in tags component

* Tooltip plugin cleanup

* Added ability to disable new product detail page alongside revision control

* More css selector specificity

* Enable / disable publish controls

* Publish revision control enabled status to users.

This will allow the old / new PDP pages to be visible non admin users
if revision control is enabled / disabled.

* Fix legacy PDP media gallery styles.

Moved new media gallery styles to a more appropriate place.

* Added media gallery hover

When enabled, hovering over images in the media gallery will replace
the first image with the hovered media item. This effect is most
visible on the new product detail page.

* Fix safari flex box bug with icon button.

Cleanup.

* Add max width to PDP container.

* Force add icon index file

* removed console log in sortableItem

* moved revision logging level to debug

* Fixed bug that caused any change to a variant to toggle visibility

Removed special handling of visibility from the collection hook.
Added missing visibility toggle to edit container.

* Load media for social buttons

* Removed logging statement

* Added badge for deleted variants

* Fix weird variant selection behavior

* Fix for undefined FB reference and cleanup

* Fix for broken tests due to revision control on / off state

* Updated react-autosuggest to 6.0.4

Updated instances of react-autosuggest to use new API

* Fixed typo on visibility button tooltip

Fixed issue with button tooltips not being translated if passed as a
string.

* Clicking a variant while action view is open will now focus it for editing.

* Fixed typo in CSS classname

* Fixed classname typo

* Fix errors caused by change event attached to file upload input

* Added ability to restore product variants from trash

Top variants, and child variants can now be undeleted, while still in
an unpublished draft.

Fixed issue with variantForm not being reactively updated when variant
was changed.

* Don't delete media when variant is deleted.

Changed because products are not deleted, only sent to trash. Leaving
the media reference is important if you ever want to restore that item
from the trash.

* Adds ability to restore a deleted product for current draft

* Updated alert confirm to SWAL

* Fixed issues causing incorrect revision to be displayed for top variant

* remove security group from pull approve

- we will add back later‚Ä¶

* update for 0.17.0

* Don't try to add user to OrderSearch when user doesn't exist (#1460)

* Skip adding emails when user doesn't exist

* Remove README that's no longer relevant

* Set submitting state to handle error case correctly (#1461)

* Docker build improvements (#1468)

* clean up unused or unnecessary build deps

* install all npm deps in first Meteor build step

* create new base Docker image for better build caching

* install MongoDB in container and use it if no external MONGO_URL is found

* move deps versions to Dockerfile only for easier maintenance

* fix custom package file script

* add build script for full Docker build of base and app

* fix lodash/camelcase import that was breaking the production build

* npm updates

* update CircleCI scripts to use new Docker build

* Updated publish controls UX and fixing issues (#1473)

* Updated publish controls UX and fixing issues

- Fix bug causing error in console when publishing nothing.
- Disabled the publish button if there is nothing to publish.
- Added alert toasts for successful and unsuccessful publish.
- Publish controls now properly finds relevant revisions.

* Fixed typo

* Fixed typo in comment

* Fixed controlled component issue with input (#1469)

* Loading 1455 (#1471)

* Updated loader component to be consistent with other spinners

Added loader for PDP container.
Added a basic circular progress component.
Removed domkit package.
Replaced loader with already available spinner component through CSS.

* Renamed loading.jsx to loading.js. JSX extension is unnecessary.

* METEOR@1.4.1.2

* Added placeholders product fields (#1472)

* Fixed bug that caused visibility button to not save a change. (#1477)

* Fixed bug that caused visibility button to not save a change.

* Address issue where visibility icon button could only be used once per draft revision

* Fix product grid visibility button toggle inconsistencies.

* Added comment for legacy publish functionality

* Fix visibility toggle for product grid item

* Removed tooltip from visibility button (#1479)

* browserstack example (#1409)

* beginning of getting browserstack working

* More configs for browserstack

* runner has been moved

* creating test suite helper

* fixes and moving some stuff around

* More fixes. Allow the user to pick and choose what test suites to run.

This will make it easier for the user if they are switching test
runners frequently. I didn‚Äôt like adding all the tests in one array per
configuration. This fixes that.

Also allows the user to pick and choose what test suites apply to them.

* lint fix

* Adding reporter for tests, changed admin email, adding npm scripts for running tests

* Allow Allure reporting to be optional

* Primer for switching login/checkout tests to register/checkout

* Login tests, are now register tests

This also removes the dependency to having to create a user prior to
running

* Adding reporting to browserstack conf

Also, added npm script for opening report. Another thing I noticed,
browserstack tunnel sometimes hangs. So added process killer.

* Updating test descriptions

* lint fix

* updating npm package

* Addresses login test with hardcoded user assertion

* This allows the user to use dynamic ids in tests

* updated login test to pass local

* updated test packages

* updated from development

- use REACTION_USER/AUTH if available.

* updated versions

* updated user data

* Select products not flagged as deleted (#1489)

* Selected products not flagged as deleted

* Select all products not flagged as deleted

* Add nul to second selector

* fix order context in orderListSummary (#1493)

* Publish 1490 (#1499)

* Added a publish alert to the PDP page

Updated alert component to support child components

* Added toolbar for publish controls

* Updated publish controls and product toolbar

Added ability to change visibility of product from toolbar.
Added better controls for switching view context.
Added dropdown component.
Updated menu components.
Various other fixes.

* Added ability to discard draft changes

* Cleanup

* Added ability to disable menu items

* Cleanup

* added ability to discard changes

added ability to trigger a delete for relevant documents

* Removed delete and visibility buttons from product detail form

* Hide edit buttons when view as query param is ""customer""

* clean up

* Cleanup

* Renamed Product Settings to Product Details

Removed commented code in registry entry for product-variant

* Hide toolbar for non admin users.

Cleanup eslint issues.

* Ensure view ""as"" query param is preserved on route change

* Added icons to menu items

* Hide tooltip when button is disabled

* Fixed type in callback

* add ability to pass in original documents as a default

* Added styles for disabled menu items

Improved spacing divider in menu

* add react-addons-create-fragment

* fixed typo

* Account & Order Search (#1494)

* Change `userIsInRole` to `hasPermission`

* initial commit

* initial commit

* i18n updates

* breaking templates into smaller files

* breaking LESS into smaller files

* importing new templates

* push for collaboration

* i18n updates

* file organization

* helper functions for orders and accounts

* focus input when changing search type

* Make email search case-insensitive

* push for visibility

* update account & order results to tables

* removed old accountGrid

* Build account search using required fields and transformations

* testing ""fixed-data-table""

* Merge branch 'development' into ek-search-accounts-orders

# Conflicts:
#	imports/plugins/core/ui/client/components/index.js

* Make order build dynamic as well (unfinished)

* Use transformations for orders and accounts

* Add exact search by _id, regex search by name, and match by ""cleaned"" phone

* Refactor to eliminate duplicated code

* Merge branch 'development' into ek-search-accounts-orders

# Conflicts:
#	package.json

* update table to react-component

* updated fields for account resutls

* field name correction

* updated admin search permissions

* renamed LESS files

* Search for lastname/firstname in profile subfield

* Fix error when profile is null

* fixed propTypes error

* added new fields to order results

* i18n Updates

* new search results

* style updates

* i18n updates

* updates to account search

* new permissions for search types

* file cleanup

* file cleanup

* file cleanup

* add order date to results

* added style for shipping status

* removed billing status from results display

* Handle results when profile is null

* add click to orderID shippingStatus panel

orderID now goes to the order status / shippingInfo panel on click

* fixes for PR comments

* Wildcard search on emails in accounts/orders

* Don't log so much

* Add phone to Account Search

* Simple migrations

* Configure migrations not to log

* Change subdir name to versions so we don't have stuff in migrations/migrations

* Integrate migration logging with Reaction logging

* Move files into core

* Cleanup packages a little

* Add a down method

* Rename directory

* Rename subdirectory

* Correct import

* fixed hardcoded shop urlSlug

* remove unneeded props

* accountSearch with user management

* Re-namespace Migrations as Versions

* killed unused prop

* Re-re-structure migrations

* Add README with warning about changing API

* update migration nstantiation

- Run before, not on startup, so that options take affect before
Collections are declared.

* remove unused lodash

* update import order

* New Email Template for Order Confirmation (#1501)

* confirmation email for orders

95% ready. pushing for access on another machine.

* updated media / image code

* fix discounts data

* localizing social images

* update image handling

* fixed store logo

* update import order

* removed un-needed dataForOrderEmail key

* added babel-plugin-lodash

* fixed single quotes

* remove old ""new.html"" file

* [WIP] Updated Translations (#1495)

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* Remove _README.md

- remove out of date _README

* restore missing rtl

* add default en ltr

- add default to see if lingo populates through other files.

* disable non active default languages

 - disable languages that are without translators

* updated en.json

Fix Grammar

* cleanup merge

- remove deprecated files

* remove duplicate key

* review cleanup (#1509)

* review cleanup

- add i18n phrase for Tag in Use
- add i18next to tag Alerts
- fix typo in edItContainers
- updated import order for styleguide adherance
- comment WIP debug code for visibility button

* add email, revisions dashboard phrases

* make circleci target repo configurable using env var (#1517)

- use DOCKER_NAMESPACE env var to identify target repo

defaults to reactioncommerce if not set.

example:

when no env var set

	target-repo = reactioncommerce/base:latest

when DOCKER_NAMESPACE set to frankg

	target-repo = frankg/base:latest

* v0.17.1

- METEOR@1.4.1.3

updated
- sweetalert2
- react-taco-table
- react-autosuggest
- country-data

* fix typo (#1511)

- last review cleanup item

* Change ""Delete"" to ""Archive"" in PDP (#1513)

* Change dropdown value

* Change labels and value

* Add archive translations

* Use archive translations

* Use archive action

* Change badge title

* Change confirmation dialog

* Add archived messages

* Remove deleteThisProduct key

* Change to Archive for variants as well

* I18n translations (#1514)

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* use i18next.dir to determine language direction

- Resolves #1510
- Use `i18next.dir()` to determine language direction.

* deprecate languageDirection

* Fixes #1524 - Type Error thrown by empty addressBook (#1525)

* Fixes #1524
Error was caused by `fieldData.addressBook` existing as an empty array, this checks to make sure that `addressBook[0]` exists before looking for the `fullName` prop.

* fix camelcase typo that was breaking tests.

* Actually fix typo in addressBook.

Previous commit is what happens when you have two editor windows open with similar files open.

* only register routes for enabled packages (#1526)

* METEOR@1.4.2

* do not use revisions if the package is disabled (#1527)

* When building an accountsearch collection, actually build it. (#1532)

* Docker security updates (#1541)

* Node 4.6.1

* fix custom package file script

* refactor Docker build to run app as a non-root user

* add a delay option to the Docker entrypoint

* cleanup the cleanup scripts, remove app source after build is done

* don‚Äôt install mongos if mongo install happens in container

* update container port in docker-compose example file

* remove unused script from CI

* LingoHub Update :rocket: (#1547)

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* Fixes #1537 - Alerts throwing error (#1538)

* Fixes #1537 - Alerts throwing error
* catch errors thrown with lodash noop

See https://github.com/limonte/sweetalert2/issues/177

* Don't blind catch sweet alert errors.

* Placeholders + i18n for variant form fields (#1542)

* Fix Public / Private update when discarding changes (#1543)

* Switch to observe, instead of observe changes

Fixes issue with some PDP UI elements not updating after changes have
been discarded.

* Remove debug comments

* Move revision settings to catalog (#1544)

* Move revision settings to catalog

Added a package in core for catalog.
Added settings panel for catalog.
Updated registry entries for revisions to appear in catalog settings
panel.
Updated UI for registry settings card.

* added key for i18n

* fix port in CircleCI docker-compose test (#1549)

* add missing labels (#1550)

- emailSettingsLabel
- catalogSettingsLabel

will get moved to packages in 0.18
"
7691cfc656c7e356ac5f5eddfcb7eacf49a92238,MassDistributionMedia/rc-ca-blinds,"v0.16.1 (#1418)

* Added babelrc and stage-2 preset (#1329)

* Meteor 1.4.1.1 (#1331)

* METEOR@1.4.1.1

- METEOR@1.4.1.1
- updated Meteor packages, collections2

* version 0.15.2

* move plugin loader from startup to reaction-cli (#1332)

* preserve custom profile fields in Accounts.onCreateUser (#1335)

* copy deprecated cfs:gridfs to local and update npm deps (#1336)

* rounding of total to negate fractions of cents

* updated version

- release 0.15.3

* Josh acceptance test setup user permissions (#1315)

* First round setting up acceptance test capabilities

* webdriver working

* adding meteor ignore file structure

* create tests directory

* adding png to gitignore

* element maps

* More progress on functional test setup

* fixed assert

* using dot notation

* adding chai to dev packages

* Begin adding acceptance testing instructions to readme

* Simple login test complete

* Adding to readme about failed tests screenshots

* adding stuff

* Core permissions acceptance test

* more fixes

* went off the deep end. added some low hanging fruit tests

* enabling all passing tests for now

* fixed userAddress call

* removing docs from main readme

* linting for config fixed

* more cleanup

* additional cleanup

* using chrome instead of firefox now since ff is borked

* adding refund test

* a couple more refund tests w/ a couple fixes

Will add more assertions later for these tests.

* adding new tests to runner

* argh

* remove screenshot

* remove ignore of all .png

* updated package.json

* updated reaction.json.example

* finishing up PR

* lint cleanup

* temp workaround for missing product in store

* A couple locator changes - commented out broken stripe tests

* persistent profile language (#1338)

* allow multiple languages in Translations

- allow array to pass multiple languages in addition to shopLanguage.

* updated i18next and Translation load order

* remove session handling from i18n

- remove ‚Äúlanguage‚Äù session
- rely on Meteor.user updates (stored lang in profile)
- update i18nchooser helpers to insert user profile lang into selected
element class

* retain language on anonymous user registration

* check admin before setting lang

‚Äî don‚Äôt set lang on initial admin

* updated accounts.js

- cleanup checks

* Josh test speed increase #1347 (#1355)

* turning verbosity off when running tests by default

* Removing sleeps/pauses when I can

* flaky test fix

* #1347 cut runtime down by nearly 50%

This is still just running synchronously. As tests grows we will need
to look into running tests in parallel, however this might require some
infrastructure in place, i.e. a hosted QA environment. An environment
that can handle the load of 5-10 tests hitting it at a time.

* only build Docker image on master/development (#1359)

* only build Docker image on master/development

* chmod +x

* fix CI script typos

* load default user from env (#1369)

resolves #1368

* remove duplicate translation

* remove duplicate translations

* Shipping 1320 (#1357)

* disabled ranges

- TODO ranges are not functional yet.

* update shipping form methods

* remove settings from registry

* update swal version

- updated sweetAlert2 version

* export Import, Fixture

- export Fixture independently of Import
- refactor Import.shipping to use a modified key
- refactor load-data to use Fixture

* updated Shipping schema

* updated shipping method names

- breaking change: shipping method names updated to follow convention
of Reaction
`updateShippingMethods` becomes `shipping/methods/update`.
- adds `shipping/provider/remove` method

* add missing import

* convert info logging to debug

* updated form methods

- update form methods
- add SWAL2 confirmations

* add handling to cart rates

- if `handling` has data add `handling` to `rate`.

* updated cartTransforms

- updated to use own methods and parse float to ensure consistent
results.

* move shipping from included to core

like taxes, the core will include flat rates and the ui handling for
additional  shipping methods, which will be added to included - in the
form of `shipping-shippo` etc.

* remove card cursor:pointer (#1384)

Resolves #1309

* Product Search (#1350)

* Mock Search Files

* Mock Search Files

* Remove addProduct method

* Remove Fixtures to remove mystery Shop

* Super limited, even for a fake search

* Don't overwrite the descriptions on first run

* Larger data set for testing

* Don't log unless we are actually adding Search Products

* A simple weighted product search

* Split out plug ins into ""search"" and ""searchEngine"" plugs.

* Improve product title search, add search settings panel

* Add in variant search

* Add more options for weighting. Make the settings panel better.

* Add tags to results and search on description

* Rename plugin to be consistent with others

* Add example config file

* New test data with ""show store"" model with tags

* Simple product subscription that returns products and facets (tags) for a searchterm

* Only return ids and names of tags (we will eventually only return ids, but names for readability for now)

* Filter by tags

* We only need one plugin since our decoupling is provided by the use of a publication

* Rename plugin

* Using Mongo full-text search rather than regex search

* Using Mongo full-text search rather than regex search

* alphabetize base-style imports

* Add in hooks to keep PS collection updated

* Move build/rebuild functions into module

* New settings for fields and weights

* New settings for fields and weights

* add in hooks

* New settings for fields and weights

* Build PS collection dynamically based on configuration

* Add in vendor to list of possible fields

* initial push of search UI

* Move collections to lib so that clients can subscribe

* Add shopId to required fields

* Move collections to global collections

* Use ProductSearch collection on the client side

* Filter tags by hashtags in ProductSearch results

* Populate template with search results

* Product search results sorted by score in Ascending order

* Move (re)building search collections to job queue

* Handle form with a method so that we can rebuild collection or index when settings change

* Queue job to rebuild indexes when weights have changed

* Don't run search hooks when ProductSearch collection has not been defined

* Add Order search

* Namespace product settings

* Don't run hooks when under test

* Add missing ""shopId"" field

* More fixes to make OrderSearch collection configurable.

* Ensure index when inserting product records

* testing larger datasets

* Make function names less ridiculously long

* Pass results without relying on the product already existing in the subscription

* Don't add a bunch of products for testing by default

* style cleanup

* style cleanup

* style cleanup

* Add handle to product search collection

* Clarify log statement

* Ensure but don't drop collections when creating an OrderSearch record

* No longer build productResults on the client

* Cleanup and add `maxResults`

* Cleanup settings form

* Don't queue search collection jobs when under test

* Search result tests

* Add price to results. Make results different based upon logged-in status

* Add tests for non-published products not showing up for anonymous users

* Add tests for non-published products not showing up for anonymous users

* Add account search, jobs, etc.

* Change account search to not use text search

* ui initial push

* conflict temporary fix

* move style into less

* i18n for search

* added delay on fadeout to feign smoother transition

* sped up tag color transitions

* componentize search results content

* componentize search results grid

* style updates for search modal

* get media to show in searchGrid

* updated id date for searchGridIcons

* Use hashtags not hastags

* Change order search to use a regular query plus tests

* removed console.log

* fixed typo

* switched content order

* commit of admin buttons (currently not functional)

* Add support for text indexes in other supported languages

* Make order search results case-insensitive

* close button classes

* removed outline from nav

* removed additional media from search

We only need to show one picture in search, for now at least

* updated text

* added search clear

* style updates

* Delete all existing records when rebuilding account search

* Remove startup test files

* Also remove test data files

* Make logging less chatty

* Allow for transformations outside of the ProductSearch method

* convert tags to flexbox

* style updates

* adding scroll tag container

* clean-up of development comments

* LESS cleanup

* style cleanup

* style updates

* 96% width input & tags

formerly 80%

* move some styling from search.less to navbar.less

* cleanup & i18n

* remove errant button

* changed tag active color to ban-active

* Add documentation around ""supported language"" as suggested by CR

* added i18n to search

* changed search tags to use btn classes

* disable currently unused admin controls

* rtl support

* rtl style adjustments

* Exclude anonymous users from accounts publication (#1390)

* Exclude anonymous users from accounts publication when logged in as admin

* NPM imports first

* update deprecated _.pluck

- Patch _.pluck = _.map in lodash 4.x
- resolves issue introduced in #1390

* metafields -> details for client visibility (#1397)

* metafields -> details for client visibility

* metafields -> details

* Search UI updates (#1410)

* add margin-bottom to hovered product for better visibility on last product

* removed font-size from .btn.flat

* created react flatButton

created a new react button component so we aren‚Äôt just if/elseing our
way through a different type of button to get what we need.

* adjustment for #1402 - added overflow toggle on body

* removed font size from btn-round

* allow ESC to exit modal even when not focused on input

* Release 0.16.0 (#1413)

* updated README.md

* update to v0.16.0

* conflict fixes

* updated versions

* Better email (#1367)

* convert email sending to use Nodemailer

* add getShopSettings and getPackageSettings helpers

* replace all Meteor accounts-password email methods

* remove old email api

* rewrite mail config methods to use nodemailer-wellknown

* create emails collection for longer term log storage

* add mail service to shop mail settings schema

* refactor email sending job to use new API

* add Meteor methods for email API

* add email publication for logs page

* build new email dashboard UI plugin for using new API

* remove old Blaze email settings

* fix alerts arg checks when callback is missing

* add new FieldGroup and Loading React components

* default theme cleanup

* fix variables import order in default theme

* dependencies updates

* clean up job queue workers

* update eslint config for more React details

* fix custom email config

* fix type handling for email config port

* remove email dashboard nav tabs component until needed

* add saving state and better error handling to email settings

* change email status route name

* remove deprecated mail config hook

* add unblock to email config verify method

* add host/port to conditions for custom email config check

* move email methods to base of methods dir

* package updates

* fix comment typo

* update dockerignore to reflect new location

* default vals for mail host/port not needed in registry entry

* fix optional email save when settings are invalid

* fix email settings save button state after errors

* don‚Äôt run email settings verify method if settings are missing

* add log when new email settings are saved

* npm updates

* fix text overflow in email config panel

* fix type checking on email port setting

* fix syntax

* i18n-ify all new email components

* fix sweetalert promise

* fix 118n prop

* remove password from logs

* force immediate retry of email job

* add new column in email log table for action buttons

* remove unnecessary braces

* fix missing email port in UI

* package updates

* restore searching for email templates from the database

* clean up imports method

* Check if billing address exists (#1386)

Prevents exception if there is no billing address

* Hide user menu (#1387)

Hide user menu after clicking on any link, including ""add product""

* Make close button work on tag nav bar in mobile mode (#1393)

* Prevent no image being found if no image has priority 0. `""metadata.priority"": 0` filter will fail to find an image if none has priority 0, so sort is used instead. (#1392)

* Try to prevent inline alert pile (#1391)

* updated pull approve to version 2

See: http://docs.pullapprove.com/
and
https://blog.pullapprove.com/pullapprove-github-code-review-43761a64ea9a
#.enx67rp3f

* updated .pullapprove.yml

* updated negative reject value

* updated reset_on_push

* updated pullapprove.yml

* update pullapprove.yml

-ARRGHHH!

* package.json update for nodemailer

* Install binary non-npm version of phantomjs. reactioncommerce/reaction#1325 (#1419)

* add timeout to taxes tests (#1421)
"
5bcd994dfae415a8aff571406d45a4fcd1d3eb8a,MassDistributionMedia/rc-ca-blinds,"Release 1.4.0 (#2558)

* Removing unnecessary orders/count method

* Adding i18n on Show More button

* Adding optional check on filter in PaginatedOrders publication

* Sending subscription limit as props to React component

* Don't subscribe to all media (#2073)

* Don't subscribe to all media

- Publish brand assets globally in media publication
- Publish product media in the `Products` and `Product` publications
- Limit media to only published products

* De-duplicate fetch product media functionality

Ensure permissions and workflows are checked when fetching the media.

* Update logic of if / else inclusion / exclusion by workflow

* Fix endless spinner issue

* Add requirements to readme

Adds link to requirements docs above installation instructions

* Move requirements below installation

* Remove isHidden check from core startup b/c blocking safari - fixes #2088

* Request versions (reaction -v) output in issue template (#2087)

* Fetch all Shippo carriers (#2078)

* Init second request on after next url returned

* Refactor to fetch carriers recursively from api

* Fix transliteration package to 1.5.2 which doesn‚Äôt leak ES6 into bundle

* Fix issue #2026 changed price not displayed for prod on grid page (#2064)

* Fix issue #2016 changed price not displayed for prod on grid page

* Add getVariantQuantity function to ProductRevision

* Convert text field to select field for countries (#2082)

* [WIP] #2070 Fix PDP Url Path For Grid Settings (#2094)

* fix pdp url path for grid settings

* remove commented code

* Remove legacy PDP (#2097)

* Remove revision conditional

* Remove templates

* Set total quantity as actual sum of quantity

* Don't break out order items

* set cartItemId to just _id since they are the same now

* Fix unrelated error with missing import

* Create shipping record

* Don't use cartItemId

* Group lineItems by _id rather than cartItemId

* Use _id rather than cartItemId. Use sum of quantities rather than length

* Restore check for empty items array to fix test

* Change cartItemId to _id

* 2067 Improper Product Title Wrap (#2108)

* fix improper word wrap in product grid

* fix improper product title wrap in firefox

* Fix Avalara document id (#2114)

* Don't pass in a cartID, pass in orderId for SalesInvoice

* Don't try to parse lines unless we know we have it. No lines, no tax.

* Use order.items to display line items

* Update core.js

Changed ""admin"" to ""owner"", which is the default user we're really checking for.

* If cartItemId exists from legacy orders, then use those

* Don't create default admin user when running in app test mode

* Fix ""Set Custom Value"" on Avalara Usage Type (#2107)

* Get correct id value

* Prevent autoform from removing old values

* Roll back. Autoform still resetting to old values

* Prevent autoform from overriding custom val

* show input field for custom; pre-fill with existing custom val

* Adjust comment

* Adjust comment

* Update form reset

* Refactor subscription

* Fixes #2116 failure to send email (#2118)

* Fix parens that were out of place in wrapAsync of Email.verifyConfig

* Revert the wrapAsync function - I didn‚Äôt understand how it worked and it wasn‚Äôt the core issue

* Don‚Äôt set secure to true for port 587

http://stackoverflow.com/a/22468122/1179341 pointed me in the right direction

* Allow customer to move past validation after one pass

* Silencing needless warning

* Add missing imports

* When we get a ""GetTax"" error, revert to addressbook

* Capture and parse errors

* Fix missing import

* Add import, adjust Proptypes

* Update read only Quantity in top variant #1919 (#2065)

* Update quantity if child variants exist

* Change method not to add inentory Quantity when undefined

* Add default value for inventoryQuantinty

* Fixing non-reactivity of updating quantity field

* 1994 Console Dropzone Warnings (#2138)

* upgrade react-dropzone to latest version

* upgrade react-dropzone to latest version

* Update Summary Card for Order (#2105)

* order summary in react

* Add data to container for order details

* Get badge onto display and container

* Remove unused code clean up UI

* Rearrange fields to match design

* Change id to order id

* Remove gap at the top

* Add printableLabels

* Add address 2 if exists to ordersummary

* Remove all template code move everything into container

* Fix weird capture spinning state

* Creating a ""review and fix"" address review screen

* Add to Cart Alert Behavior (#2076)

* typo fix

* Fix Cart Alert Behavior

implement re-appearance of alert when add-to-cart is clicked rapidly

Resolves 1445

* migrate cartSubtotals template to react

* remove unused imports

* remove commented code

* migrate cartPanel template to react

* fix linting issue

* migrate cartItems template to React

* finish migrating cartDrawer and checkout popup to React

* remove debugging code

* fix linting issues

* add spinner to checkout alert

* fix linting issues

* update quantity in text on rapid clicks

* refactor cartItem component

* remove unused props

* remove jsx code from container

* implement changes from review

* refactor container method

* fix error in checkout and weird shipping display in cartDrawer

* fix cartItem title

* fadeOut remove-from-cart icon before product is removed from cart

* increase spinner size

* fix spacing and swiper issue

* escape single quote

* replace single quote with HTML entity

* Show highlited diff. Copy over values on click.

* Removing ""debug"" HTML

* Add ""review address"" translation

* Basic ""review address"" flow working

* Remove console.log

* [WIP] 2137 Specify Shippo Version (#2146)

* specify shippo api version in request header

* specify shippo api version in request header

* fix currency formatting in invoice (#2147)

* language dropdown updates (#2148)

* rework allOn / allOff language toggle

kill the ability to ‚Äúturn off‚Äù default language

* files no longer used

new files inside the header folder

* add check to hide languages when less than 2 enabled

* update settings panel to never allow default currency to be disabled

* add check to only show dropdown if more than 1 currency is enabled

* Fix missing import

* Fix import error

* Return to edit and refresh address when you cancel out of review

* Make edit behave the same as add

* Tweak styling

* fix dark-gray background on notification hover state (#2163)

* Cancel Order (#2022)

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Detail on invoices captured

* Add roll over list capability

* Add single invoice render

* Add roll down list not quantity based

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Detail on invoices captured

* Add roll over list capability

* Add single invoice render

* Add roll down list not quantity based

* Display unique items only

* Add quantities to line items

* Remove unnecessary parts of the view

* Seperate components for roll up lists and line items

* Add cancel capability

* Clean up UI

* Add item functions

* Fix Sidebar Context (#1932)

* Show Sidebar shipping in checkout

* Set actionView after payment checkout step

* Hide sidebar on entry to profile page

* Remove Inventory subscription that is not in use (#1951)

* Get package data by shopId as well as package name (#1949)

* Add capture payments capability

* Add refunds fields

* Seperate concerns in invoice component

* Clean up invoice code

* Refactorline items

* Updated i18n settings panel (#1947)

* Updated i18n settings panel

- added new package for i18n settings
- converted to react
- added currency list
- added ability to save open state to SettingsCard to user preferences
- added ability to pluck fields in form component to enable concise
forms

* Update currency lists in admin

- Only show enabled currencies in dropdown
- Do not sure updatedAt field

* Added ability to toggle all on or all off for languages and currencies

* Removed unused code

* Updated colors for card toolbar

* fix props to show correct attribute

* fixes z-index issue on select container

* fix language props

* fix prop to show enabled languages only

* Avalara Tax Compliance (#1870)

* Save company object from Avalara API

* Load `appVersion` from package,json at startup. Create global `getAppVersion`

* create avaGet function to pass in extra header info. Add getTaxCodes function

* Extend plugin to also provide tax codes

* Add Test connection option in Avalara admin dashboard

* Send taxCode along with cart/orders

* Capture full tax detail in ""taxes"" field

* Update Test Credentials to use companyCode API

* Add input field for shipping tax code

* Add provides: taxCodes API to taxcloud

* add itemCode to cart/order payload

* use item id as line number. Pass in correct productId

* Pass in shipping as additional non-taxable (based on taxcode) item

* allow avaPost/avaGet to be used asynchronously

* Add setting to turn off tax calculation separately from disabling the module

* Add the rest of the fields to the form (except validation countries)

* Use correct UID and correct URL for getTaxCode

* Add setup for address validation by country

* Don't commit documents when commit is turned off. Eliminate unneeded functions

* Eliminate async versions of avaGet/avaPost. These should never be called by external module

* Add defaults for new configuration settings. Make shippingTaxCode required

* Make get/post methods use timeout, do some logging.

* Don't do address validation when package is disabled, even when addressvalidation is enabled

* Enable addressValidation by default

* Enable addressValidation by default

* Fix date parameter

* Merge. Fix conflicts.

* Modify auth arg for test credentials setup

* Extend timeout during test credentials call

* Limit address validation country options to US and CA

* Fix returned object for non-validated addresses

* Log Avalara details to custom Avalogger

* Set new defaults

* Add tax settings to account profile page

* Update account find for taxsettings to subscribe

* Only log if logging is enabled

* Write out Avalara requests to Logs collection via Bunyan logger

* Add log retention duration setting

* Add jobs to cleanup logs older than configured setting

* Add logs subscription that totally doesn't work

* Add logs publication

* Get logs and pass into Template

* Add Log-specific wrapper for Griddle

* Show individual log records in detail form

* Refine grid and detail results

* Populate entity codes and plug into taxCalc

* Use new field names confirmed by AvaTax

* Add taxSettings to recordOrder

* Update entity code field key

* removed excess panel wrapper around griddle table

* Add translations

* Show tax settings only if avalara enabled

* Fix import order.

* Setup error handling on Avalara methods

* Add dimensions/tax code to PDP (#1931)

* Edit product's schema file to include product dimensions

* Add product dimensions in variant form

* Edit product's schema and product admin form to include country of origin

* Edit product's schema and product admin form to include tax description

* Edit product's schema and product variant form to include origin country (yet to pre-populate from product's origin country)

* Edit variant form to include list of tax codes

* Refactor listTaxCodes method

* Refactor listTaxCodes method to use template state instead of sessions

* Refactor listTaxCodes method to use template state instead of sessions - template state now works

* Edit taxCodes schema to include more descriptive fields

* Include server method to save tax codes to TaxCodes collection

* (First attempt) saving taxcodes to database

* Successfully fetching taxcodes from database

* Add error block in fetching from db method

* change value of taxcode being saved in product details

* Adding select2 package

* Using select2 to display tax codes in nicer looking select box

* Correcting import order

* Editing required fields in product schema

* Using plain select field to display tax codes

* Remove tax code label; add select2 call in onRendered function instead of onCreated

* Displaying default tax code as selected in select box

* Removing unused meteor package; correcting import order

* Throwing more descriptive meteor error on insertTaxCodes method

* Display simple input box if tax provider is not enabled

* Correct the way we test for validation on address2

* Remove extra panel divs

* Add account ID to account management screen

* Adjust log details for when there is no document type

* Rename files to match style guide

* Use individual taxSettings form each account

* Add check to prevent populating duplicates

* Fix reference to accountschema

* Fix form update to corresponding accounts

* Add unique tax setting by customer to Avalara payload

* Fix exception error on geoCoder call

* Only pass in regions when it's a ""country with regions""

* Revert ""Only pass in regions when it's a ""country with regions""""

This reverts commit b8090857183ecf1ee9a8ea01159c4e445c47609f.

* Create a refundReference which is cartId + date

* Ignore line items are not marked taxable

* Move taxDescription down to the variant level and pass if exists

* Move tax settings form into manage sidebar

* Fix tax settings saving bug

* Renamed files to fit style guide

* Don't allow a wide-open Account publication

* Remove unnecessary subscription

* Don't call API if entity codes is already populated

* Simplify logic for returning no results

* Don't select a tax rate but a tax code

* Rename function

* Properly set Avalara countryList defaultValues

* Eliminate extra slash

* Eliminate all extra slashes

* Check to ensure data is returned from API

* Also log errors in Avalogger. Correctly filter for taxable items.

* Require shopId

* linting fixes

* Add label to plain select. Rename method

* JSDoc linting

* Remove unused import

* Remove unused import

* Linting

* Check configuration and throw meaningful errors if not configured properly

* Add level to log so we can filter for errors

* Tweak HTML and styling in settings panel

* Fix i18n and timeout on testCredential

* Log error with error log level

* Moving select2 under community packages

* Adding error checks to taxcodes method

* Skip config check when testing credentials

* Trigger form validation before testcredentials

* Use native methods for assign and each

* Handle error on populating Avalara entity codes

* Add i18n for custom label

* Move i18n entry to appropriate module

* Move exemption settings into avalara module

* Implement i18n for missing fields in PDP

* Fix CircleCI failed tests

* Fix CircleCI failed tests

* Revert ""Fix CircleCI failed tests""

This reverts commit 3b238a81dd3e1345d83050b82726a2547c8d2214.

* Revert ""Fix CircleCI failed tests""

This reverts commit 66f0f787cdbf0563f14e2121cf35d7f99c525d0a.

* Removing empty selector per CR

* Use import rather than fs to get package.json

* Change per CR

* Restructure Class syntax per CR

* Put back ""Custom Packages"" header

* Add TODO

* Changing default timeout to 3000 ms

* Correct error name and make error message more specific

* - updated Accounts publication name

- Update Accounts.single to UserAccount

* Fix: Dashboard panel keeps re-opening during checkout (#1956)

* Show sidebar only if shipping is not configured

* Refactor: Show sidebar only if shipping is not configured

* Fix to show sidebar only if payment is not configured

* localize prices in emails (#1957)

* add GetShopCurrency helper

* update cart currency when user changes currency

* update schema to include currency in cart / order

* add userCurrency and exchangeRate to carts orders

* update email templates to display formatted price

* update user emails to use user currency

* Use select box of countries rather than text field for ""Origin Country"" (#1967)

* Fix 404 when adding handle and then editing a variant before publishing.

* Fixed misspelling in comment

* Remove z-index from dropdown as it creates more issues than it solves

* Moved ColumnData component to its own file. (#1972)

* Prevent hiding of nested tags on mobile (#1971)

* Show Sidebar shipping in checkout

* Set actionView after payment checkout step

* Add presentational aspect for invoice

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Add state to the invoice view

* Detail on invoices captured

* Detail on invoices captured

* Add roll over list capability

* Add roll over list capability

* Add single invoice render

* Add single invoice render

* Add roll down list not quantity based

* Display unique items only

* Add quantities to line items

* Remove unnecessary parts of the view

* Seperate components for roll up lists and line items

* Add cancel capability

* Clean up UI

* Add item functions

* Add capture payments capability

* Add refunds fields

* Seperate concerns in invoice component

* Clean up invoice code

* Refactorline items

* Add data into individual line items

* linting and minor error fixes (#1973)

* remove extra unneeded check for userId

This was causing the Logger error we were seeing

* update import order

* change way of calling userId

* fixed Shops.findOne

* updated variable name

* removed html error code from meteor error

* cart.billing should now be defined to include currency

* setting default currency if shop.currency is unavailable

* update client to match server

* lint fixes

* Avalara error handling (#1968)

* Taxcloud doesn't really support getTaxCodes yet

* Ok, calm down

* Taxcloud doesn't really provide taxCodes yet

* Log Tax code errors to Logs collection rather than throwing a Meteor.Error

* Add missing import

* Use name from namespaced provides rather than name

* Pulling tax codes from TaxCloud

* Configure saving taxcloud taxes to db and displaying them

* Move around UI components

* Move around UI components

* Add total price of line items

* Format pricing to have dollar signs

* Finalize on tax data

* add cancel meteor method for orders

* Iterate on design

* Review tax display

* finish up allowing an admin cancel an order

* add cancel order workflow

* add test for orders

* add test for start and complete cancel order methods

* finish up on cancel order

* remove swal from shippingInvoice file

* solve linting issues

* fix linting issues in orders test

* fix template issues in shippingInvoice html

* create multi-action button

* refactor code based on reviews

* update shippingInvoice.js

* remove unwanted newlines in changed files

* fix eslint errors

* fix multi-action button

* refactor code based on reviews

* refactor buttonSelect

* fix test

* fix indentation issues

* fix indentation issues

* update code based on review

* update code based on reviews

* fix cancel order test

* fix bugs

* add i18nKeyLabel to multi-function button

* turn multi-function dropdown item to button

* refactor button props fr multi-function button

* fix paypal express refund method

* add payment provider payment methods

* fix payment provider refund issues

* complete test for cancel order methods

* remove inline style from translation

* add error handling for failing refunds

* remove unneccessary lines of code

* add error handling

* fix issue based on reviews

* remove shipment panel when order has been canceled

* remove newline

* Adds Reaction method for adding roles to a default role set.

Makes it trivial to create and add roles needed by a plugin to default visitor set
Usage looks like this:
```
import { Reaction, Hooks } from ""/server/api"";

Hooks.Events.add(""afterCoreInit"", () => {
  Reaction.addRolesToDefaultRoleSet({
    allShops: true,
    roleSets: [""defaultRoles"", ""defaultVisitorRole"", ""defaultSellerRoles""],
    roles: [""stripe-connect-redirect"", ""test-role33""]
  });
});
```

* Tests for adding default roles

* One more test

* Run all tests instead of just `addDefaultRoles` tests

* Fix for Account Meteor Method tests that relied on Shops not being reset

* [WIP] 2115 Inconsistent Product Image of Cart Item (#2171)

* fix inconsistent cartItem image and productField console error

* fix fetching too many records from media

* fix fetching archived images to client

* fix display variant/product image for item without image

* Order methods test (#2159)

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Detail on invoices captured

* Add roll over list capability

* Add single invoice render

* Add roll down list not quantity based

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Detail on invoices captured

* Add roll over list capability

* Add single invoice render

* Add roll down list not quantity based

* Display unique items only

* Add quantities to line items

* Remove unnecessary parts of the view

* Seperate components for roll up lists and line items

* Add cancel capability

* Clean up UI

* Add item functions

* Fix Sidebar Context (#1932)

* Show Sidebar shipping in checkout

* Set actionView after payment checkout step

* Hide sidebar on entry to profile page

* Remove Inventory subscription that is not in use (#1951)

* Get package data by shopId as well as package name (#1949)

* Add capture payments capability

* Add refunds fields

* Seperate concerns in invoice component

* Clean up invoice code

* Refactorline items

* Updated i18n settings panel (#1947)

* Updated i18n settings panel

- added new package for i18n settings
- converted to react
- added currency list
- added ability to save open state to SettingsCard to user preferences
- added ability to pluck fields in form component to enable concise
forms

* Update currency lists in admin

- Only show enabled currencies in dropdown
- Do not sure updatedAt field

* Added ability to toggle all on or all off for languages and currencies

* Removed unused code

* Updated colors for card toolbar

* fix props to show correct attribute

* fixes z-index issue on select container

* fix language props

* fix prop to show enabled languages only

* Avalara Tax Compliance (#1870)

* Save company object from Avalara API

* Load `appVersion` from package,json at startup. Create global `getAppVersion`

* create avaGet function to pass in extra header info. Add getTaxCodes function

* Extend plugin to also provide tax codes

* Add Test connection option in Avalara admin dashboard

* Send taxCode along with cart/orders

* Capture full tax detail in ""taxes"" field

* Update Test Credentials to use companyCode API

* Add input field for shipping tax code

* Add provides: taxCodes API to taxcloud

* add itemCode to cart/order payload

* use item id as line number. Pass in correct productId

* Pass in shipping as additional non-taxable (based on taxcode) item

* allow avaPost/avaGet to be used asynchronously

* Add setting to turn off tax calculation separately from disabling the module

* Add the rest of the fields to the form (except validation countries)

* Use correct UID and correct URL for getTaxCode

* Add setup for address validation by country

* Don't commit documents when commit is turned off. Eliminate unneeded functions

* Eliminate async versions of avaGet/avaPost. These should never be called by external module

* Add defaults for new configuration settings. Make shippingTaxCode required

* Make get/post methods use timeout, do some logging.

* Don't do address validation when package is disabled, even when addressvalidation is enabled

* Enable addressValidation by default

* Enable addressValidation by default

* Fix date parameter

* Merge. Fix conflicts.

* Modify auth arg for test credentials setup

* Extend timeout during test credentials call

* Limit address validation country options to US and CA

* Fix returned object for non-validated addresses

* Log Avalara details to custom Avalogger

* Set new defaults

* Add tax settings to account profile page

* Update account find for taxsettings to subscribe

* Only log if logging is enabled

* Write out Avalara requests to Logs collection via Bunyan logger

* Add log retention duration setting

* Add jobs to cleanup logs older than configured setting

* Add logs subscription that totally doesn't work

* Add logs publication

* Get logs and pass into Template

* Add Log-specific wrapper for Griddle

* Show individual log records in detail form

* Refine grid and detail results

* Populate entity codes and plug into taxCalc

* Use new field names confirmed by AvaTax

* Add taxSettings to recordOrder

* Update entity code field key

* removed excess panel wrapper around griddle table

* Add translations

* Show tax settings only if avalara enabled

* Fix import order.

* Setup error handling on Avalara methods

* Add dimensions/tax code to PDP (#1931)

* Edit product's schema file to include product dimensions

* Add product dimensions in variant form

* Edit product's schema and product admin form to include country of origin

* Edit product's schema and product admin form to include tax description

* Edit product's schema and product variant form to include origin country (yet to pre-populate from product's origin country)

* Edit variant form to include list of tax codes

* Refactor listTaxCodes method

* Refactor listTaxCodes method to use template state instead of sessions

* Refactor listTaxCodes method to use template state instead of sessions - template state now works

* Edit taxCodes schema to include more descriptive fields

* Include server method to save tax codes to TaxCodes collection

* (First attempt) saving taxcodes to database

* Successfully fetching taxcodes from database

* Add error block in fetching from db method

* change value of taxcode being saved in product details

* Adding select2 package

* Using select2 to display tax codes in nicer looking select box

* Correcting import order

* Editing required fields in product schema

* Using plain select field to display tax codes

* Remove tax code label; add select2 call in onRendered function instead of onCreated

* Displaying default tax code as selected in select box

* Removing unused meteor package; correcting import order

* Throwing more descriptive meteor error on insertTaxCodes method

* Display simple input box if tax provider is not enabled

* Correct the way we test for validation on address2

* Remove extra panel divs

* Add account ID to account management screen

* Adjust log details for when there is no document type

* Rename files to match style guide

* Use individual taxSettings form each account

* Add check to prevent populating duplicates

* Fix reference to accountschema

* Fix form update to corresponding accounts

* Add unique tax setting by customer to Avalara payload

* Fix exception error on geoCoder call

* Only pass in regions when it's a ""country with regions""

* Revert ""Only pass in regions when it's a ""country with regions""""

This reverts commit b8090857183ecf1ee9a8ea01159c4e445c47609f.

* Create a refundReference which is cartId + date

* Ignore line items are not marked taxable

* Move taxDescription down to the variant level and pass if exists

* Move tax settings form into manage sidebar

* Fix tax settings saving bug

* Renamed files to fit style guide

* Don't allow a wide-open Account publication

* Remove unnecessary subscription

* Don't call API if entity codes is already populated

* Simplify logic for returning no results

* Don't select a tax rate but a tax code

* Rename function

* Properly set Avalara countryList defaultValues

* Eliminate extra slash

* Eliminate all extra slashes

* Check to ensure data is returned from API

* Also log errors in Avalogger. Correctly filter for taxable items.

* Require shopId

* linting fixes

* Add label to plain select. Rename method

* JSDoc linting

* Remove unused import

* Remove unused import

* Linting

* Check configuration and throw meaningful errors if not configured properly

* Add level to log so we can filter for errors

* Tweak HTML and styling in settings panel

* Fix i18n and timeout on testCredential

* Log error with error log level

* Moving select2 under community packages

* Adding error checks to taxcodes method

* Skip config check when testing credentials

* Trigger form validation before testcredentials

* Use native methods for assign and each

* Handle error on populating Avalara entity codes

* Add i18n for custom label

* Move i18n entry to appropriate module

* Move exemption settings into avalara module

* Implement i18n for missing fields in PDP

* Fix CircleCI failed tests

* Fix CircleCI failed tests

* Revert ""Fix CircleCI failed tests""

This reverts commit 3b238a81dd3e1345d83050b82726a2547c8d2214.

* Revert ""Fix CircleCI failed tests""

This reverts commit 66f0f787cdbf0563f14e2121cf35d7f99c525d0a.

* Removing empty selector per CR

* Use import rather than fs to get package.json

* Change per CR

* Restructure Class syntax per CR

* Put back ""Custom Packages"" header

* Add TODO

* Changing default timeout to 3000 ms

* Correct error name and make error message more specific

* - updated Accounts publication name

- Update Accounts.single to UserAccount

* Fix: Dashboard panel keeps re-opening during checkout (#1956)

* Show sidebar only if shipping is not configured

* Refactor: Show sidebar only if shipping is not configured

* Fix to show sidebar only if payment is not configured

* localize prices in emails (#1957)

* add GetShopCurrency helper

* update cart currency when user changes currency

* update schema to include currency in cart / order

* add userCurrency and exchangeRate to carts orders

* update email templates to display formatted price

* update user emails to use user currency

* Use select box of countries rather than text field for ""Origin Country"" (#1967)

* Fix 404 when adding handle and then editing a variant before publishing.

* Fixed misspelling in comment

* Remove z-index from dropdown as it creates more issues than it solves

* Moved ColumnData component to its own file. (#1972)

* Prevent hiding of nested tags on mobile (#1971)

* Show Sidebar shipping in checkout

* Set actionView after payment checkout step

* Add presentational aspect for invoice

* Add presentational aspect for invoice

* Add presentational view for invoice

* Add presentational view for invoice

* Add state to the invoice view

* Add state to the invoice view

* Detail on invoices captured

* Detail on invoices captured

* Add roll over list capability

* Add roll over list capability

* Add single invoice render

* Add single invoice render

* Add roll down list not quantity based

* Display unique items only

* Add quantities to line items

* Remove unnecessary parts of the view

* Seperate components for roll up lists and line items

* Add cancel capability

* Clean up UI

* Add item functions

* Add capture payments capability

* Add refunds fields

* Seperate concerns in invoice component

* Clean up invoice code

* Refactorline items

* Add data into individual line items

* linting and minor error fixes (#1973)

* remove extra unneeded check for userId

This was causing the Logger error we were seeing

* update import order

* change way of calling userId

* fixed Shops.findOne

* updated variable name

* removed html error code from meteor error

* cart.billing should now be defined to include currency

* setting default currency if shop.currency is unavailable

* update client to match server

* lint fixes

* Avalara error handling (#1968)

* Taxcloud doesn't really support getTaxCodes yet

* Ok, calm down

* Taxcloud doesn't really provide taxCodes yet

* Log Tax code errors to Logs collection rather than throwing a Meteor.Error

* Add missing import

* Use name from namespaced provides rather than name

* Pulling tax codes from TaxCloud

* Configure saving taxcloud taxes to db and displaying them

* Move around UI components

* Move around UI components

* Add total price of line items

* Format pricing to have dollar signs

* Finalize on tax data

* add cancel meteor method for orders

* Iterate on design

* Review tax display

* finish up allowing an admin cancel an order

* add cancel order workflow

* add test for orders

* add test for start and complete cancel order methods

* finish up on cancel order

* remove swal from shippingInvoice file

* solve linting issues

* fix linting issues in orders test

* fix template issues in shippingInvoice html

* create multi-action button

* refactor code based on reviews

* update shippingInvoice.js

* remove unwanted newlines in changed files

* fix eslint errors

* fix multi-action button

* refactor code based on reviews

* refactor buttonSelect

* fix test

* fix indentation issues

* fix indentation issues

* update code based on review

* update code based on reviews

* fix cancel order test

* fix bugs

* add i18nKeyLabel to multi-function button

* turn multi-function dropdown item to button

* refactor button props fr multi-function button

* test order methods

* fix paypal express refund method

* add payment provider payment methods

* fix payment provider refund issues

* complete test for cancel order methods

* remove inline style from translation

* add error handling for failing refunds

* remove unneccessary lines of code

* integration test for orders/approvePayment

* test for orders/shipmentDelivered

* add error handling

* write test for sendNotifications

* write more test

* finish writing test for order methods

* update changes based on reviews

* fix typo

* PDP Cleanup - Basic Details Card, Tax Card & Inventory Card (#2086)

* Rewrite product variantForm to render React component

* React component/container for product variantForm

* Adding checkboxes, divider, and changing i18n

* Refine PDP variant form UI to be up to standard

* Using Switch component instead of native checkbox

* Use settings card to wrap taxable and inventory tracking sections

* Displaying data via props(to be refined)

* Rendering tax code field depenging on enabled tax code provider

* Populating taxCode dropdown with data from db

* Populating taxCode collection with taxCodes on successful test credentials

* Remove unnecessary Meteor method

* Rename 'selectedVariant' to 'variant'

* Disabling fields based on child variants

* Passing variant object down from Template.currentData

* Activate restore/remove and clone variant buttons (to be refined)

* Subscribing to TaxCodes publication for display

* Removing alternate Blaze function

* Handle select and textfield input edit

* Handle switch toggle

* Updating state of select box

* onChange for regular input fields

* Removing alternate Blaze function

* Removing alternate Blaze functions

* Render archive label if variant is deleted

* Partly implement update quantity based on child variants

* Remove unnecessary input callback methods

* Make restore button change reactively to discard when isDeleted is false

* Make discard button change reactively to restore when isDeleted is true

* Remove unnecessary expandCard methods

* Fix uncontrolled input warning being thrown in browser console from React

* Make tax code field editable when no tax provider is enabled

* Revert taxable and inventory tracking back to defaulting to true

* Fix open/close of cards (to be refined)

* Attempting validation

* Adding style and disabled to textfield component

* Fixing opening of side panel when variant is clicked

* Fix accidental toggle of allow backorder switch

* update the way address data is provided (#2208)

* update the way address data is provided

* update const

* Change `profile` variable name to `profileAddress` to be more descriptive

* And `profileShippingAddress` is even better

* METEOR 1.4.4.2 (#2206)

* METEOR 1.4.4.2

* update Docker base to v1.3.1

* Jobs patch

As found by @jshimko

* Remove unneeded jobs import

* Added Kuwait, Saudi Arabia and Qatar currencies (#2204)

* added kuweit, saudi arabia and qatar currencies

* typos

* fix email log panel closing when email is sent (#2205)

* add order id to completed screen (#2202)

* Fix Email Notification During Order Refund (#2200)

* fix email notification when issuing a refund more than the total

* fix refunding loading

* add i18n

* 1638 Completed Order Logged Out State (#2201)

* add signIn page for completed order url when user user is logged out

* remove commented out code

* fix display notFound for orders that doesn't belong to user

* fix style nitpick

* implement review

* fix flashing `notFound` page before order completed

* Add in missing line break

* fix create product should flip into edit mode (#2221)

* Toggle Variant Visibility when Ancestor Product Visibility is Toggled (#2222)

* fix issue

* add fix to product grid settings

* Fix missing shop (#2224)

* make sure default shop fixture data is loaded before anything else happens

* fix inconsistent logging of whether register.json was found

* fix error logger syntax

* fix a few more logger syntax instances

* Add mute for known package dependencies

- Holding on a full React update
- Latest transliteration doesn‚Äôt load correctly
- nodemailer, griddle have upgrade blockers

* Add mute for known package dependencies

Missed a react dependency.

* swap unicode with missing semi-colon for regular apostrophe (#2223)

* swap unicode with missing semi-colon for regular apostrophe

* updated to use <Translation> instead of i18n-data

Also updated to spit out better / valid HTML.

- Changed tag from <h1> (‚ÄúEmpty Cart‚Äù shouldn‚Äôt be H1) to <p>, and also
removed the embedded <p> from inside the H1.

* made social share buttons on PDP ADA compliant (#2196)

* Fix permissions for items shown in admin dashboard (#2145)

* Initial test of filtering pkgs

* Filter showing packages by permissions

* Resolve issue with hasAccess check on registry items

* Comment

* Comment edit

* Call packages coll without filter

* Move audience addition to ReactionApps

* Better comment

* Check not needed again.Apps come based on access level

* space fix

* Test: Permissions on toolbar component

* hasProduct access on toolbar

* Fix data

* Use createProduct as filter

* Refactor toolbar permission check

* Improve Comment

* Add missing perms in pub

* remove comment

* Add comment on filter line

* Pin vsivsi:job-collection meteor package to 1.4.0 (#2228)

* React Router (#2123)

* Initial push for React Router conversion

* Implement more global router functions

- Added `Router.getQueryParam`
- Added `Router.isActiveClassName`
- Added shop prefix for routes
- Added blaze event for brand link to use `Router.go`
- Added `query-parse` nom module to parse query strings
- Added route to currentRoute on route change

* Route rendering

- Router initialize
- Rewrite reaction layout to better handle layout generation
- Add `App` component as router base component
- Add Router.replace function for push state replace

* Move rest of router from client dir, into router package

* Use Router.go for tagLink

* Fixes issue with browserRouter router initializing before router core
is ready.

* Fixed route resolution for to exact matches

* Updated dependencies and shrink-wrap

* Not found and unauthorized routes and redirects

* Rename admin template to coreLayout

- use layout name to get proper layout

* Fix broken import

* Fix redirect url for PayPal pay flow express

Double slash in url causes no route to be matched for react router.
Added new helper method that wraps Meteor.absoluteUrl() and fetches the
shop prefix without a leading slash.

* Enable onEnter and legacy enter hooks

* Added exit hooks and improved hook handling logic

Re-implement metadata hook

* Show package settings shortcuts only if requested

* Added Router.watchPathChange()

* Remove unused function

* Added router go for grid item click event

* Fix eslint issues

* Added router go for cart items

* Fix router context for hooks

* Added special handling for print layout

* Scrolling for content area as admin

* Fix router reload when auth state changes

* Fix lint issues

* Fix lint issues

* Fix blank pdf view

* Prevent route change when previous and next routes match.

-Remove reactivity from `Router.current()` to better align with flow
router api.
- Add reactive dependencies query and url param functions.

* Fixed reference for getShopName()

* Fixing broken blaze layout

- Extend the react-in-blaze component, and rename conflicting
`template` prop to `blazeTemplate` to avoid a naming collision with our
layouts.
- Added check for foundLayout, verify its defined before trying to
access
- Added support for blaze based layouts, if a react layout cannot be
found

* Removed unused packages

* Adjust width of container to alleviate some scrolling issues

* Higher zindex for cart slide out

* Fix getSlug reference

* Fixes issue with incorrectly displaying unauthorized template

* LingoHub based on development (#2218)

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Brent Hoover.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Brent Hoover.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Brent Hoover.
Project: reaction

Made with :heart: by https://lingohub.com

* 2217 Add Product Name To Invoice (#2226)

* add product name to invoice

* add Product name to title

* Permissions Fix: Use passed in ""audience"" param in ReactionApps (#2235)

* wip

* Use passed in audience for ReactionApps

* Remove debug

* fix display of unpublished option images (#2236)

* Restore helper to limit dropdown icons

* 1987 Panel Expander Arrow Overlapping on Dropdown (#2211)

* fix dropdown z-index

* use z-index variable

* reduce zindex-select variable value

* override `react-select` select menu z-index

* remove commented out style

* fix improper variable value alignment

* move import to main.less

* Fixes #2243 Paypal Express requiring login for guest accounts (#2255)

Adds `reaction-paypal/paypalDone` and `reaction-paypal/paypalCancel` roles to the defaultRoles and defaultVisitorRoles set

* Updated README.md

* Update version

* readme.md updates

* Removed unused code

* fix 2278 Router tables not initializing (#2279)

* fix notification dropdown links (#2280)

* update Router to adjust when shop URL is in provided data

* update notification onClick to open dashboard panel when needed

* re-add markOneAsRead

* style / small updates for release 1.2 (#2283)

* update import of Reaction

* readme updates

* import fixes

* add meteor import

* import order fix

* comment fixes

* add meteor import

* removed flow router import

* import order

* import fix

* update i18n key

* update translations

* wrap full app in translation provider

* fix multiple refunds for stripe (#2260)

* Simplify core layout component (#2257)

* Simplify core layout component

- Remove unnecessary wrappers in favor of the `Blaze` component, as to
not hide the fact that Blaze is still used.
- Add the footer template region

* Import Template

* 2203 Long Strings Handling in Product Option Title (#2266)

* fix long strings overflow in variant options

* fix overflow of option title

* change shipping / payment error messages in checkout (#2271)

Removed ‚ÄúConfigure now‚Äù link in checkout payments / shipping methods
when not logged in as an admin.

* Add the Vietnamese Dong as a supported currency (#2248)

* Add the Vietnamese Dong as a supported currency

* Refine and add an entry for the main store currency

* Re-introduce icon toolbar as shortcutBar (#2261)

* Re-introduce icon toolbar as shortcutBar

* Fix reference to PropTypes

* Hide toolbar on mobile

* Update shortcut bar and simplify tooltips

Show dashboard button on mobile.

* Fix responsive issues

Resolves some of the issues related to UI on the right hand side of the
screen being cut off at certain mobile breakpoints.

* fix issue (#2276)

* allow loader to show when one is passed in and defined BUGFIX (#2303)

* Change customer notification message when order is processed. (#2290)

* change notification newOrder message to you just mad an order

* change phrasing for newOrder notification message

* i18n translation updates (#2302)

* closing tag spacing

* update i18n key

* shop settings - move translations into local package

* shop settings - move translations into local package

* social - move translations into local package

* i18n - move translations into local package

* revisions - move translations into local package

* email - move translations into local package

* new i18n label

* move i18n into local packages

* loginServices - i18n Updates

* core analytics - translations

* new translations

* Fix Lint / remove unused packages.

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* CircleCI 2.0 and docker base update (#2334)

* convert CI config to use CircleCI 2.0

* update Docker base to v1.4.0

* improve Meteor check logic

* remove ununsed cache path

* cache node_modules

* improve cache saving order

* fix cache restore order

* improve overall ordering of CI config

* add better labels

* cache the Meteor dev_bundle after running tests

* install reaction-cli with yarn instead (way faster)

* More and more style changes

* Add Verification Url to Welcome Email (#2216)

* add verification to welcome email

* fix eslint error

* send invite email unless user is invited

* update bothe users and accounts colllection

* fix email verfication

* fix permission issue with verification route

* fix import order

* refactor accounts methods

* make changes based on review

* make use of reaction addRolesToDefaultRoleSet function to add new roles to the shop

* finish up email verification for invited user

* fix issue(refunds not showing) (#2317)

* fix conditional in Circle deploy script (#2338)

* don‚Äôt load any other fixtures until the default shop is loaded (#2329)

* allow a MAIL_URL string without auth (#2330)

* add loading component to fix error (#2340)

* Use proper color variables

* Create proper behaviors

* Fix bad evaluation

* Fix import order

* Add i18n

* color updates for styleguide (#2339)

* update brand-info-color

* color updates

* remove old color variables

* comments

* gray cleanup

* variable name change

* typo fix

* revert rgba from variables

* fix dem buttons

* Updated text colors

* Don't throwback a step if tax fails

* fix testing issue #2348 (#2349)

* Make this more of an ""exception"" flag

* Better handling for unique routes for React Router (#2327)

* Better handling for unique routes for React Router routes

* Added TODO comments

* Update router.js

* Fix git tagging on CircleCI 2.0 (#2362)

* handle git tag parsing now that Circle doesn‚Äôt

* clean up syntax

* Updated colors

* React unit testing example (#2170)

* component snapshot

* babel additions

* remove dependancies not used

* Use mocks to mock input props for component

* Change stored snapshot to match new look after merge with development

* replace babel-latest with babel-es2015

* Take care of warning

* babelrc to es2015

* Add back in missing babel package

* no more globals!

* Declare variable before assigning

* Declare variable before assigning

* Declare variable before assigning. Remove unused variables

* Remove unused variable, check

* Declare variable before using it

* Declare variable before using it

* Can't use `this` in an arrow function

* Correct function declarations

* Eliminate implied global `Alerts` + no undeclared

* Remove commented out code

* Declare explicit globals

* move default userCurrency deeper in the object (#2259)

This should fix the tests brought upon by strict mode

* Use Collection explicit functions

* Don't log doing nothing

* Make Alert a global because it's a mess

* Ok actually, don't do that

* Don't allow implicit globals

* Bug fixes

* Fixing lack of declaration

* Pass error to logger

* Fix import order

* Fix changed reference

* Add jest testing to Circle CI

* Update NPM packages

* Added npm test command

* Use an NPM script rather than global Jest

* Make changes to new CI config

* Change to proper step configuration

* For clarity, `test-react`

`npm run test-react` to run jest tests.

* Revert ""For clarity, `test-react`""

This reverts commit fc38b243eedb8f7a861495cae71651e6c2e4853e.

* Update Jest to current version

* Just testing to see if this fixes it

* Remove npm install of desperation

* Remove node cache

* Fix typo in inventory test description (#2364)

* fix testing issue #2348

* fix typo in test desc

* CollectionFS  cfs:tempstore and cfs:worker to fix concurrency issues with GridFS uploads (#2096)

* added cfs tempstore and worker to fix concurrency issues

* linting

* Correct the way we record tax overrides

* [WIP] Meteor 1.5 (#2371)

* Meteor 1.5

- include Buffer polyfill
- replaces abernix:standard-minifier-js with standard-minifier-js
- properly pins job-collections to 1.4.0

* Updated to 1.5.0 base image

* Pin react-meteor-data to 0.2.9

* Remove unused vars

Cherry pick
https://github.com/reactioncommerce/reaction/pull/2306/commits/b36709c19
e47b25049f90643739df4bcf5210d64

* update to reactioncommerce/base:v2.0.0

* transliteration 1.6.2 (#2389)

- Related to #2090 and #2091
- Reduces minified footprint by315k
- updates client import

* Meteor1.5 and docker updates (#2390)

* fix error handling in CI deploy script

* fix CI build script

* add docker-compose.yml for CircleCI

* install Docker Compose in CI

* set docker/docker-compose versions in CI env

* fix missing curl issue in CI test

* Updated 1.5 packages

* Declare variable (#2401)

* Implement missing router functions (#2393)

* Implement missing router functions

- Implement `Router.setQueryParam()`
- Fix `Router.getRouteName()`

* Fix function name for `setQueryParams`

* Fixes and tests

- Added jest config to package.json
- Added some jest unit tests for Router
- Added mocks for some dependencies
- Fixed route matching in Router.isActiveClassName method

* fix package.json to run tests (#2396)

* Removed comment

* Remove duplicated setQueryParams function

Fixed variable

* 2332 Fix Improper Cart Merge (#2387)

* add test suite to replicate #2332

* fix improper cart merge when user cart has items in anonymous cart already

* update anonymous cart `variants._id` to equal user cart `variants_id`

* fix console error when merging into newly logged in user cart

* implement review

* Change line width to match GH PR review width (#2407)

* Orders updates (#2400)

* add expandable header to summary

* i18n - move keys into local package

* new npm package

* new Badge component

* i18n updates

* badge style updates

* add Badge and clicktocopy to components

* clickToCopy component

* badge component

* i18n updates

* badge and ClicktoCopy components

* add card to summary section of orders

* Merge branch 'ek-orders' into ek-orders-summaryPanel

# Conflicts:
#	package.json

* update orderSummary fields

* fix imports

* ordersList react-ivize

* fix prop validation

* validation fixes for Badge component

* remove no longer used files

* comment out old blaze templates

leaving them here for a bit just to make sure no errors occur

* remove blaze templates

* orders panel LESS

* update workflow loop to remove extra headers

* removed errant test text

* fix translations

* update shrinkwrap

* tests

* simpleschema

* comment killing

* New test for <ClickToCopy />

* lint fixes

* fix

* add more props to Badge test

* refund button coming in phase2

* fix import / console error

* Update random.js

* lint fixes

* use route permissions in register.js files (#2388)

* Milestone 54 / Convert Navbar to React (#2306)

* Navbar dropdowns conversion to React (#2230)

* Implement currencies using Dropdown Menu Component

* Add active prop on list item in Dropdown menu

* Resolve reactivity for currency drop down

* Add language dropdown implementation

* Add select on current selected language

* Remove extra code

* Have language icon div be larger

* Fix pop over arrangement

* Fix spacing, add caret on language dropdown

* Deal with display when switches are pff

* Fix overflow issues on dropdown-menu

* Fix linting

* Close dropdown on menu item click

* Add import for Match

* Convert login views to React (#2250)

* Initial component/container setup for sign in page

* Replicate look of sign in form

* Replicate look of sign up form

* Use composeWithTracker in signInContainer

* Replicate look of forgot password form

* Create parent login container to hold general login for views

* Add switching between views logic

* Set up sign in form submission

* Set up sign up form submission

* Set up forgot password form submission

* Handle sign in action and error message display

* Remove template methods

* Remove template methods and alert message template

* Rewrite renderPasswordErrors method

* Render social buttons on login

* Add social login functionality

* Remove unnecessary blaze templates

* Move functions to React

* Implement sign up functionality

* Merge signin and signup containers

* Put back helper methods needed by other templates

* Abstract loginFormMessaged into react container

* Add forgot password functionality (part1)

* Remove unnecessary component in helper

* Remove forgot password template

* Clean up folder structure

* Solve invariant violation browser error

* updatepasswordOverlay react component/container

* completed updayePasswordOverlay functionality

* Remove stopPropagation function

* Capitalize social login name

* Show loading spinner while processing button clicks

* Solve onClick not working by removing 'event.stopPropagation()' on parent template

* Remove JQuery and use lodash

* Using 'event' instead of 'e' to reference event handlers

* Add validation for no email input on forgot password

* Add error message on social login

* Move capitalize function to helper file

* Move capitalize function to helper file

* [WIP]Main navbar container conversion to React (#2277)

Main navbar container conversion to React

* Convert to react: Tag navigation (#2251)

* Test tagnav component

* Use existing tag component

* Update component setup

* Use existing tagsList container

* Remove debugging

* Edit button

* Use tagItem loop to match styles instead of existing

* Base tagTree init

* Fix structure

* Fix dropdown mouseover event

* Edit conditional

* Base tag editatble

* Button switch fix

* On edit fix

* Selectable button icon

* Enable drop of tagtree by icon

* Init edit mode for tagTree

* Tagtree second level new tag

* Typo fix

* Fix top level width and classes

* Show Base tagList

* Lint clean up

* Remove commented code

* Style fix and show new tag on edit

* i18n

* Init saving top level tags

* Saving tags - cont

* New tag save fix

* Switching to Taglist custom

* Saving top level

* Enable new tag option

* Move class names to base comp

* Style on create new tag item

* Fix Hover back

* Move file

* Tag select prop

* Rename files

* Fix save and delete

* Reorder element wrapper

* Init passing the functions down

* Init editing new tag item on tree

* Separate the two new tagItems

* Adding new tags on tree + refactor üéâ

* Fix delete on subtags

* Reset form after save and prevent saving empty tags

* Prevent close of tree after save

* Restructure tree state to fix input

* Init refactor on tagTree

* Props setup after refactor

* Reposition button

* Autocompletion fixing

* Add componentWillReceiveProps to fix re-render and reset

* Refactor into container comp

* Remove debugs

* Use composewithTracker

* Remove props with spread

* Update props list

* Fix logic breaking new tag style

* Tag sort order after drag

* Clean un-used vars

* Add react tagNav to main navbar container

* Fix lint issue

* Init toggle visibility

* Close tags with overlay

* Remove JQuery references(part 1)

* Add router.go for tag click

* Mobile fixes and remove blaze files

* Fix click on mobile

* Remove jquery

* Remove jquery .closest

* UI tagnav classes update

* Fixes

* Fix undefined refs after merge with development

* Remove unused vars

* Editing should turn off on toggle

* Use Translation component over data-i18n

* Fix Brand name glitch

* Prefer standalone PropTypes import over React.PropTypes

* Inport i18next and Reaction in same line

* Space at end of self-closing tag

* One-lining imports

* Place '&nbsp' inside span for less random-looking code

* Add comment about style

* Use Divider component as separator

* import order

* remove duplicate babel preset packages

* Updated yarn.lock and removed npm-shrinkwrap.json

I‚Äôll try to add back in the release branch, but something funky is
going on with shrink-wrap

* Admin should be able to invite a user with the same name (#2386)

* turn the user name to lowercase

* turn the user name to a lowercase string with a random number e.g michael-alade49

* add custom name field to users and accounts schema

* create new env var for setting default admin‚Äôs name

* publish new name field for users

* remove unnecessary typeof check for Reaction var

* switch priority for user‚Äôs displayName source

* remove redundant email update and only add user‚Äôs name if exists

* Update version

* switch to Reaction‚Äôs new fork of Nodemailer (#2427)

* Added module aliases (#2436)

* Added module aliases

- Added module alias for `core/ui`
- Added module alias for `core/router`

* Revert jest module name mapper

* fix tests

- Fixed duplicated mocks warning
- added some new mocks
- fix translaton component test

* LingoHub Update :rocket: (#2420)

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* Add css style to differentiate read from unread notifications (#2442)

* Remove acceptance tests (#2430)

* Remove non-working tests

* Remove unneeded dependencies

* Fixed console error when dragging product images (#2443)

* Add closeOnClick option to DropDownMenu component (#2418)

* Add closeOnClick option to DropDownMenu component

* Fix lint issue - move handleDropdownToggle after componentWillReceiveProps

* add missing ""orders not found"" text (#2424)

* Updated chai package

- tested with reaction test, tests seemed to work normal

* Bunyan and Loggly updates (#2425)

* switch to official Loggly lib for Node and write new Bunyan connector for it

* update bunyan to 2.0.0

* add REACTION_LOG_FORMAT config option

* add extra comments about log formatting options

* refactor default admin user creation (#2453)

* update memory usage in CircleCI build (#2462)

* Navbar hover issue (#2451)

* added default hover style for languages and currencies class #2444

* added accounts css class to div in mainDropdownContainer #2444

* added hover styles for account class #2444

* added hover style for notification class #2444

* set css property overflow on horizontal to hidden (#2458)

* [WIP] 2452 fix on UI icon toolbar (#2460)

2452 fix on UI icon toolbar

* [WIP] 2356 fix on tag menu-sidebar glitch (#2472)

Fix on tag menu-sidebar glitch

* update media gallery new / deleted image indicators (#2469)

* add new status for mediaGalleryIndicator

* i18n translations for tooltips

* status-badge styles for media gallery

* update media gallery image new / deleted indicator

* style updates

* lint fix

* Remove random regex checks on names. Fixes #2461 (#2471)

* remove older Blaze based launchdock plugin (#2467)

* 2459 router range error fix (#2476)

* simple fix

* fix typo & linting

* fix linting issues

* 2422 Fix on email invite link leading to blank screen (#2437)

* imported LoginFormValidation to forgotContainer

* imported LoginFormValidation to passwordOverlayContainer

* added setTimeout function to delay rendering

* wrap component in translations (#2434)

* removed setTimeouts from updatePassword.js

* added spinner before mounting the component

* replaced setTimeout with life-cycle hook(componentWillRecieveProps) #2422

* imported LoginFormValidation to prevent console error

* Update current user's name on Navbar and profile page when address is added. (#2455)

* Update current user's name and profile when address is added

* Update user's name when address is updated

* Get correct admin user's name from env variables

* Updated dependencies (#2463)

* Move babelrc into package.json

* Updated dependencies

* Define missing options variable

* Revert minifier to abernix fork (#2486)

* Use abernix:standard-minifier-js

Replace standard-minifier-js with
abernix:c5c935e3078e4856147e3536a1174a89366fd0fe@2.1.0-beta.0

This should be compatible with current 1.5 tools, and is what we were
using before 1.5, because of the faster compilation and reduced memory
footprint.  Restoring in an attempt to diagnose build issues related to
memory.

* updated meteor package versions

* Fix error when inviting already invited user (#2433)

* Refactor invite function to send invites only to non invited members

* Refactor error message to show status code

* Change the error message to use inline Alert

* Clear input fields when there is error

* Use Reaction's blaze inlineAlerts for error message

* Eliminate console error on inviteShopMember call

* Updated timeout time. (#2492)

* Updated timeout time.

* don't autohide

This should not autohide, the error should display until a user resubmits with a new email address. If the error is hidden, they might not see it right away and miss it. This is a blocking error for this field so it should stay until resolved.

* Fixed product images not displaying on order completed page (#2490)

* Fix hard refresh on clicking tag link on product detail page (#2489)

* Provide tag component with missing click function

* Remove hard refresh on PDP link in Grid settings

* Remove redundant risul:moment-timezone (#2491)

* Fix ESLint4 errors correct eslint config errors (#2450)

* Properly nest ecmafeatures

* Fix indentation errors

* Change Proptype

* Use react-create-class until Erik finishes upgrading Griddle

* Add back in missing PropType imports

* More missing PropType imports

* Replcae `reaction-create-class` with `create-react-class`

* Add rule for un-undef

* Add missing `PropTypes` imports that ESLint is finally finding

* Add missing imports

* Ignore missing imports for Mocha

* Add missing imports

* Add missing imports

* remove import

* add in missing imports

* add in missing imports

* enforce react/jsx-indent linting

* Adding missing imports

* Missing Gravatar imports

* Remove unused helper

* Add in mocks to fix React tests

* Missing import

* Fix missing domain variable

* Change comment to reflect new version

* Adding local versions of `loadMoreProducts`

* Replacing Meteor package with npm package

* Correct use of amplify-store

* Remove call to missing function setCurrentProduct

* Ignoring these last few globals

* Fix missing lodash import

* Remove duplicate import

* Remove jsx indent rule that's causing files to fail incorrectly

* New SortableTable component to replace MeteorGriddle (#2416)

* rename TacoTable to Legacy

* upgrade griddle NPM

* rename MeteorGriddle to SortableTable

* break up sortable table from sortabletablelegacy (TacoTable)

* merge

* change object key names to use with react-table instead of griddle

* kill griddle, add react-table

* remove useGriddleStyles prop

* remove testData

* sortableTable updates

* sortableTable Styles

* remove old ui-grid, move into components sortableTable

* update size of Templates dashboard for better usability

* ridding the wrapper of old Griddle info

* more props passed to wrapper

* fixes for email table

* update Email table to use ReactTable

* email table convert to ReactTable

* custom pagination component for React-Table

* update Avalara to use ReactTable

* add spacing below tables

* remove leftover console.logs

* lint fixes

* lint fix

* query prop validation

* pagination updates

* componetize pagination

* move emailconfig css to LESS file

* style updates for sortableTable

* update translations

* custom full-table filter for ReactTable

* custom full table filter

* new match-sorter package for custom filter

* add translations for default table text

* translations

* kill translations for the moment, something is acting up

* add catch for error when no data is available

* various fixes

* fix shippo status

* Shippo table update

* lint fixes

* lint fixes

* remove log

* lint fix

* Fix linting problems introduced in new SortableTable (#2505)

* Show proper error messages when Stripe payments fail (#2499)

* Don't display random error messages to client

* Debugging upstream message flow

* Normalize/sanitize error so you can just show the error from the server to the client

* Remove logger statement

* Handle Match failures

* removing extra logging

* Fix tests

* Fix missing reference (#2507)

* Default to using shop country code or GeoIP result for new addresses (#2515)

* For new address default to using shop‚Äôs country code if it exists.

* use GeoIP to determine user‚Äôs country and set it in address form

* Add Tunisian Dinar currency (#2517)

* Add Tunisian Dinar currency

* Add entry in second shop (TND)

* Fix issue dragging images in PDP when settings drawer is open (#2506)

* Fix condition that enables images to be displayed to product grid

* Fix main image upload handler to upload main product image

* Fix send sms method to read settings of shop and buyer userId (#2508)

* Fix Errors importing exported product data  (#2513)

* remove _id fields from documents to be imported

* Use _id to look up product before updating

* Refactor product import callback

* Refactor import method to avoid single-line if statement

* Convert product grid to React: Milestone 57 (#2402)

* Add search input field

* React component boilerplate

* Render products with pdpPath

* Add class names to li

* Render visible class name and overlay

* Render media

* React alerts/content component boilerplate

* Remove unnecesarry div wrapper in prodict grid component

* Grid content

* Grid notices

* Grid controls (part 1)

* Grid controls (part 2)

* Remove grid control templates

* Add in functionality for modal

* Init product grid

* Products sub setup

* Use product object as props from productGrid component

* Refactor grid layout

* handleSelectProductItem handler on grid container

* Remove item and content templates

* Include itemSelectHandler in grid controls

* Add some more functions

* Handle product double click

* Handle product click of non-admins

* Init drag drop

* Add index to drag; and udpate call

* Update state indexes after drag release

* make method call after drag state change

* Fix css issue

* Enable drag based on permission

* Handle product click of admins(part 1)

* Use standalone PropTypes import over React.PropTypes

* Add componentDidMount and componentWillUnmount conditions to item container

* Subscription working right

* Handle product click of admins(part 2)

* Save products in state

* Add product grid to search grid

* Fix product display/click in search modal

* Handle product click of admins(part 3)

* Add order and account tables onto search

* Fix broken product drag & drop

* Display accounts and order tables using React

* Remove tag results when order/account search

* Add onRowClick for orders and accounts

* Change folder structure and add unMount

* Remove logs

* Replace unmountComponentAtNode with prop change

* Close modal working well

* Add proptypes

* Display products

* Fix import order

* Handle load more products

* Add permissions to search tabs

* Fix setState error

* Fix hover-over-preview on search, add it to default product-grid

* render loadMoreProducts button

* Fix search result onClick close modal

* Add active classes on tags

* Remove unused code

* Remove import on index

* Move react components/containers out of client folder into lib folder

* Move react components/containers out of lib folder

* Remove jquery

* Remove product hover over in grid

* Product search click of non-admins

* Use Translation component over data-i18n

* Fix error o searchorders

* Fix broken loadMoreProducts button

* Remove product hover over in grid: less file

* Remove infinite scroll on product grid

* Tweek orders search

* Remove logs

* Fix Bithound issues

* update state with new data when available

* update table to use SortableTableLegacy

* Fix switch of accounts on search

* Remove bnd

* Add on rowclick function to sortTableLegacy

* Fix bitHound failing file issue

* Add esc functionality on search

* Persist searchQuery on search re-open

* Set initialLoad state to false to avoid reload of all the product grid data on loadMoreProducts click (yet to fix setState error)

* Set initialLoad state to false on loadMoreProducts button click; fixes setState error on console

* Fix scroll in Search Modal when products go longer than the page

* Remove unnecessary function usage

* Fix import order

* Use Array.isArray over lodash

* Import $ from meteor/jquery

* Remove unnecessary variables

* Refactor repeated code into common function

* Correct error throwing

* update import alias

* use import alias

* use import alias

* use import alias

* use import alias

* update import order

* update import order

* import order

* Fix for no scrollbar in Dashboard (#2511)

* Add ability to scroll on dashbord

* Add scrolling to vertical toolbar only

* Hide horizontal scrollbar

* Fix for issue #1993 (#2518)

* Fix for #1993

* Fix linter errors.

* Cleanup.

* Fix unable to open fulfill order action view (#2530)

* Fix hard refresh when clicking View All notifications

* Fix click action for rendering orders on dashboard

* Add click handler to render action panel

* Fix Exception in delivering result of invoking 'email/verifySettings' (#2512)

* Only verify email settings when saving settings

* Move server method call to container component

* Fix import order

* update Docker base to v2.0.2 (#2537)

* Fix order action button reverting status to processing (#2541)

* correct order action workflow change

* always update selected order

* Update eslint to v4 (#2542)

* Update Eslint

* Auto-fix eslint errors

* fix 2547: vertically-center navbar link using @navbar-height height variable instead of percentage height (#2551)

* Fix issue 2535. Transliteration in Safari/IE (#2553)

* Use official Reaction fork

* Go back to standard import

* Provide sort parameter to Products subscription and remove duplicate sorting of products (#2552)

* Fix LoadMoreProducts button not working as it should (#2554)

* Apply limit to  products publication selector for admin users

* Get correct top level products from publications

* Set correct scroll check to load more products

* Version 1.3.1

* Meteor 1.5.1

* Fix You may not observe cursor with fields _id: 0 (#2555)

Fixes console error
```
Error: You may not observe a cursor with {fields: {_id: 0}}
```
Not really sure when it got introduced, perhaps in Meteor `1.5.1rc5`?

@erik and I had both seen this issue intermittently

* Version 1.4.0

- Release 1.3.1 renamed to 1.4.0 as there as some potential breaking
changes in the new React components (PDP Grid, ReactTables replacement
of Griddle).

* Rename emailTableColumn -> shippoTableColumn (#2564)

* LingoHub based on development (#2566)

* LingoHub Update :rocket:

Manual push by LingoHub User: Aaron Judd.
Project: reaction

Made with :heart: by https://lingohub.com

* LingoHub Update :rocket:

Manual push by LingoHub User: Spencer Norman.
Project: reaction

Made with :heart: by https://lingohub.com

* Longer timeout for circleci to run build.sh (#2565)

* longer timeout for circleci to run build.sh

* update no_output_timeout with unit of time

* Adds inline validation to variant & child variant form (#2531)

* Adds inline validation to form variant form

* remove commented code

* Save data only if form is valid

* move validation to a seperate plugin

* Simplify passing validation object into components

Adds ability to pass an entire validation status object into TextField component, and with a provided name, get the validation messages if available.

* fixed card open / close states

* Add validation to child variant form

* Fixed variable name typo

* Fixed typos on comment

* Fixed broken checkbox update handler

* Fixed top variant card closing on edit of some fields

* Fix issues with validation and other fields

- Changed variant form and child variant forms are now validaded on initial render.
- Changed flash top varient field red if error, green if valid
- Added `fields` object to validationStatus with field validation status and value
- Added helper function to validation status to test field validity

* Remove unused import
"
b447753250bec6b410fd62baa88e9416e39e44dd,MassDistributionMedia/rc-ca-blinds,"Release Cleanup (#1769)

* Add Greek Translations

Resolve #1768

* Add onOrderPaymentCaptured hook

- cleanup shipping methods
- add onOrderPaymentCaptured Hook

* Implement Template.instance scope

- add Template.instance to limit DOM query scope

* Wait for packages to load before beginning tests

* Check that package data is present and exit if not

* Fix failing test for products publication

* Merge 1775-checkout-configure

* Restore public label and refresh

- kludge disabling of input (due to a validation issue in AF), which is
because we don‚Äôt yet support updating the label (but is required).
- Restore a way to refresh methods.
"
0026e996c98f03e9a94991a1175213a1d69c5933,MassDistributionMedia/rc-ca-blinds,"Merge pull request #3642 from reactioncommerce/refactor-3636-nnnnat-accounts-revisions-hooks-events

refactor 3636 nnnnat accounts revisions hooks events"
71452fe968cf79dca5832afa88d70d3b71d86d91,MassDistributionMedia/rc-ca-blinds,Merge branch 'master' into refactor-3464-prinzdezibel-refactor-productsContainer-HOC
19f297ccd37ab7edb45771543fe09a2f8ad72e74,MassDistributionMedia/rc-ca-blinds,"deprecate Router with ReactionRouter
"
9666ba1429fd93f6dedfc0fae01fd6148ffa8ada,MassDistributionMedia/rc-ca-blinds,"(refactor) rename Import module to Importer, this prevenst the usage of a reserved keyword.
"
e7c9269eb58d551d0b067c9db9b8127bb2a2eab5,MassDistributionMedia/rc-ca-blinds,Merge branch 'release-1.8.2' into refactor-1364-willopez-rename-import-to-importer
db7552b5f6c53110423541c9440bf5507a3be55c,MassDistributionMedia/rc-ca-blinds,"(refactor): prefer template strings
"
05ad0fd603f7cdb13cd537fa2e839b6500ed04ae,betaflight/betaflight-configurator,"including collapsed view
"
8f4cf34a70fd86fb45fa03cb09563e8a9d048dfb,betaflight/betaflight-configurator,"Merge remote-tracking branch 'cleanflight/development' into GUI-rework

Conflicts:
	_locales/en/messages.json
	changelog.html
	tabs/configuration.css
	tabs/configuration.html
	tabs/landing.js
	tabs/ports.css
	tabs/ports.html
	tabs/setup.css
	tabs/setup.html
"
30a82615070a49a5bd3834889137153cf9962bcc,betaflight/betaflight-configurator,"Merge pull request #267 from mikeller/move_rc_interpolation

Moved RC interpolation settings into receiver tab."
c498e7de342fde713f88f93f0cb2aeffdad0eb95,betaflight/betaflight-configurator,"Added support for failsafe TAB

Made in cooperation with skaman82.

Summary of modifications:
- Extended data storage to hold data for new/changed MSP messages.
- Added support for added/changed MSP messages.
- Added assigned mode(s) to AUX labels.
- Tooltip changes.
- Included style modifications to configuration tab from Skaman82.
- Moved all texts from failsafe tab .html to `messages.json`.
- Removed failsafe settings from configuration tab (now obsolete).
- Added failsafe-tab variables to Backup & Restore.
- Reorganized stage 2 elements, cleanup and corrections.
"
8c10f396068cca4959afee825ed5cdeb099a7134,betaflight/betaflight-configurator,"Add support for backup and restore of led strip config.

Various minor code cleanups."
12ddbb6a3224e7791e0c85567b3d9f81f8b09e17,openfoodfoundation/openfoodnetwork,"Reworking the shop page
"
b65f51c2f847516fbb726ecee2c104b996afa6d4,openradiation/openradiation-mobile,"Ionic upgrade + improve global navigation + remove useless css
"
4c39c77976233c31014cf6f038ecced265e37ac3,teampheenix/StarCraft-Casting-Tool,"New: Playernames can now be assigned to Aligulac IDs in the Misc Settings to improve reliability of the Aligulac Prediction.
"
560354a1e27a17ddac85254bc8be2e1f25c4a58d,CompassionCH/compassion-switzerland,"Merge pull request #586 from ecino/10.0-emanuel

CO-1988 Refactor cms_form_compassion"
1491d3b337dea362f578798e1d2372ddca5c75ae,CompassionCH/compassion-switzerland,"Sync GP Refactoring

- Split module sponsorhip_sync_gp into module sponsorship_sync and child_sync
- Add common methods to sync modules in module mysql_connector
- Delete useless install_modules_compassion
"
2c66cb587b74b8e14d087039249d649bf9a91d14,aspnetboilerplate/aspnetboilerplate,"Simplified DisposableDependencyObjectWrapper.
"
7b35bd72b07e6a758327e6b9ef21625a36bc3616,cynicaloptimist/improved-initiative,"update react-form and move @types/enzyme to dev
"
1f7e2394deba8505da34096c4943fa5c35185b76,squatsandsciencelabs/OpenBarbellApp,"Hackily connected Android collapsed settings. Not styled at al lyet
"
a4d3960cb643cbaafd729655db5087de01be7cad,Multiscale-Genomics/mg-process-fastq,"Added in tidying of old files in the tmp dir to try and prevent running out of space
"
c498e7de342fde713f88f93f0cb2aeffdad0eb95,cleanflight/cleanflight-configurator,"Added support for failsafe TAB

Made in cooperation with skaman82.

Summary of modifications:
- Extended data storage to hold data for new/changed MSP messages.
- Added support for added/changed MSP messages.
- Added assigned mode(s) to AUX labels.
- Tooltip changes.
- Included style modifications to configuration tab from Skaman82.
- Moved all texts from failsafe tab .html to `messages.json`.
- Removed failsafe settings from configuration tab (now obsolete).
- Added failsafe-tab variables to Backup & Restore.
- Reorganized stage 2 elements, cleanup and corrections.
"
f21404310bf1df7f621ee2c8b7d234836ecff639,cleanflight/cleanflight-configurator,"Merge pull request #25 from wanderzell/GUI-rework-skaman82

Toolbar styles"
82badeece14dbdd06fdaf9b84e2b1fe700ec14a3,cleanflight/cleanflight-configurator,"callback hell resolving patch, optimize
"
8e79a250ed61e7369ea539eb9151f16ed0a05ef4,cleanflight/cleanflight-configurator,"Basic rework of: Adjustments and PID tabs, little fixes and changes here and there
"
b2096832d0a897e1bd1b4d6e32282cb805f7b058,reasonml-editor/reasonml-idea-plugin,"improve OCaml parser
"
1df84e96f267dc53f654377881fb79df2f322086,reasonml-editor/reasonml-idea-plugin,"improve both parsers
"
bf1ed527ff2c6cbd6e89c8f9a87778902d057fd1,reasonml-editor/reasonml-idea-plugin,"#73 - improve match parsing
"
dadcc98fbd496b5d13c6c491d118ea39291ab7e8,unicef/etools-partnership-management,"Merge pull request #656 from unicef/feat--refactor-env-flags

Refactor environment flags"
348631b8eea2b817cab1d6d0510b9110bf101982,unicef/etools-partnership-management,"migrate-review-and-sign:
- moved files, updated paths
"
2a3081dd9761ce6d2e74a8b6e283242aefaa714a,unicef/etools-partnership-management,"refactored status elements, removed polymer dirty checks
"
d50435324f121fd0abd3ee523f3f450e771b5344,unicef/etools-partnership-management,"refactor: behaviors names
"
9918ce27a8608b146220d5435ab15301ee744c50,unicef/etools-partnership-management,"Refactoring
"
1c4cbf3c8636e0f865390b2c6629a4b43d31dc50,unicef/etools-partnership-management,"refactor(lists): extract common behavior
"
37c833423b589b3d6614824749ece19822f72daf,unicef/etools-partnership-management,Merge branch 'develop' into refactor
1943639af5345374a844a647fef4cf7edb952a7e,unicef/etools-partnership-management,"lists common behavior refactor, remove unused code
"
bc874e96ac75bb6f3d5ba43389c2bccabda0f53b,unicef/etools-partnership-management,"refactor app config
"
158aa51fd089790c4add028110d18f109cd06753,unicef/etools-partnership-management,"Merge pull request #357 from unicef/fix-pdssfa-renaming

Remove ToR from PD/SSFA ToR naming"
85b0851ef6ba09ac77b5e851e994f0bc326bc943,unicef/etools-partnership-management,"Merge pull request #823 from unicef/feature--remove-gesture-mixin

Refactoring"
8454813179de5f91c4af868fbc23257300464680,voyages-sncf-technologies/hesperides,"Refactoring (#274)

* Homog√©n√©isation suite √† l'atelier
* Cr√©ation des modules commons, core et tests
* boolean is*
* VersionId g√©r√© dans les agr√©gats
* Utilisation de Collections.emptyList() et Optional plut√¥t que null
* Limite sur la recherche de plateformes et applications
"
0d8712ce4a45e0b21de15f1e9dae71188056f07e,wordpress-mobile/AztecEditor-Android,"Merge pull request #334 from wordpress-mobile/feature/janitorial-thing

Repo cleanup"
00493d18cecc0278dc07c6f326fad41d23012b9c,wordpress-mobile/AztecEditor-Android,"Refactor horizontal rule span name
"
763e6fd1bb15e3bb4cc17f69db5bc54c40070a79,StadGent/fractal_styleguide_gent-base,"DTGB-439: Refactored page grid layout.
"
887cf1ff822064d967d45ad07e21100a4a095e4e,AdaptiveConsulting/ReactiveTraderCloud,"consolidating popout interactions in models with the region manager
"
841f607b8d5de6e78233f0a048c8a516ac0c1564,AdaptiveConsulting/ReactiveTraderCloud,"Merge pull request #736 from AdaptiveConsulting/story/final/type-and-refactor

ARTP 53 Footer, 54 Regions, 55 Notionals, 56 OpenFin, 80 Link typed and refactored"
17c3bb4267cc4ae797c42394486ec72dcda8cf39,AdaptiveConsulting/ReactiveTraderCloud,"Merge branch 'story/blotter/type-epics' into story/analytics/type-and-refactor
"
5802410f31cf74c2cfd54bee334845b6d8b4021a,AdaptiveConsulting/ReactiveTraderCloud,"Merge with story/connection/type-and-refactor
"
651ae66ed2a8cc56d116e8166dab300b497883f6,AdaptiveConsulting/ReactiveTraderCloud,"Cleanup
"
155549d80b67eab7f698437cc96781ad0c3f86d2,ministryofjustice/opg-digi-deps-client,"dd-1186 Created controller tests for contact to make sure that users are forwarded to new contact. Abstracted common controller code to abstract class.
Renamed namespaces on some tests to make consistent.
"
0c2495deebda4d0a2ba17dc7eae6a09cae14da7e,ministryofjustice/opg-digi-deps-client,"Merge pull request #350 from ministryofjustice/gds_elements

Style refactor"
dc07c8d9fd37375ee382667ec0d55b90abcc1c34,ministryofjustice/opg-digi-deps-client,"refactor and align services
"
0f7c0606d64c2990db2c0fc2418639bd14c69c9e,ministryofjustice/opg-digi-deps-client,"Merge branch 'odr' of https://github.com/ministryofjustice/opg-digi-deps-client into odr

# By Elvis Ciotti
# Via Elvis Ciotti (4) and GitHub (2)
* 'odr' of https://github.com/ministryofjustice/opg-digi-deps-client:
  odr lint
  admin: user with same email error on field
  master fix delete
  admin: only display available roles + fix edit role
  DDPB-336 jump to user functionality + error page
  DDPB-336 edit user display extra info
  DDPB-336 simplify and fix admin layout
  DDPB-297 fix email error + behat tests
  DDPB-297 enable checkMX and checkHost
  DDPB-297 email confirmation when signing up
"
799463f0d5bb9e18806e78f83835260d0cc4d614,ministryofjustice/opg-digi-deps-client,"DDPB-1984 Fixed PDF by moving variables into method calls on report entity
"
f6858dfd14c743e968ff3736cfa435c92d447b87,ministryofjustice/opg-digi-deps-client,"session-keep-alive action + session timeout dialog using from OK action + refactor in separate js file
"
aeb875f45f54a63a1657ef76a7db6a63dec2f200,ministryofjustice/opg-digi-deps-client,"DDPB-917 notifications component refactored into a macro
"
fd141ffb773f759e573cb4aa8614a27b50a48e6a,ministryofjustice/opg-digi-deps-client,"DDPB-1478 Revised checkFile to not account for different file types
"
0e7db92bcb67b45db9a0db8b81d01593be127114,ministryofjustice/opg-digi-deps-client,"DD-929 Refactored show/hide behaviour for opening balance date to re-use radiohide component created for safeguarding form. moved all logic for controlling if info is visible or not on js/none js browsers to css for speed and to make generic and reusable. added support for js and none js legends to date control.
"
c2496c8ce3bf46018c321e00ba2a9f293d559601,ministryofjustice/opg-digi-deps-client,"Merge branch 'pa-voters-acl' of github.com:ministryofjustice/opg-digi-deps-client into pa-voters-acl

* 'pa-voters-acl' of github.com:ministryofjustice/opg-digi-deps-client: (32 commits)
  pa-voters-acl removed stop on failure from behat tests
  pa-voters-acl Fixed bug with calling TeamMemberAccount constructor and ensured non team members get PA account edit page
  pa-voters-acl Redirected self editing user to main account page. Passed logged in user to Team Member Account form to remove role field for team members
  pa-voters-acl Added requirement for phone and job tiltle when editing users
  pa-voters-acl - Made phone/job title mandatory for editing users only
  pa-voters-acl - Added exception handler to edit
  pa-voters-acl Added exception handler for form errors, and rerted Admin count back to 2
  DDPB-1081 heading sizes, support title and back link removed
  pa-voters-acl Changed max admins from 2 to 3
  pa-voters-acl Fixed edit user and check for administrator in view. Fixes remaining behat tests
  pa-voters-acl Added test for Add link, fixed validation for role name
  pa-voters-acl Fixed paths preventing access (incorrectly)
  pa-voters-acl check status of page checks individually
  pa-voters-acl Fixed test checking /admin/user page. Changed to main admin page (which IS the user page)
  DDPB-1062 - Passed Team to TeamMember Form constructor to check whether max admins have been reached.
  Fixed ACL code to return boolean (seems to dislike Voter constants)
  Added and fixed ACL using voters
  pa-voters-acl  Fixed permission check for Add User link
  pa-voters-acl clean up and simplify messages
  pa-voters-acl working version of voters
  ...
"
613b45072c9caef33ec8a8209c62ee64fb55a2ae,ministryofjustice/opg-digi-deps-client,"dd-92 * Refactor forms so they're hidden for JS. * Correct form padding. * Hide Account header data in editMode.
"
ee4a9ac9f12da679eb0198d3f4b55763d3a257ee,ministryofjustice/opg-digi-deps-client,"Merge pull request #299 from ministryofjustice/refactor

2 more classes unit tested, controller refactor, remove reportSubmitted, memcached, fix namesapce and groups, remove unuese classes"
b01e75c5cfa6c8a9c6ea1d4ce639b5ed7b2bb3e0,ministryofjustice/opg-digi-deps-client,"refactor activation email following notification example + moved emails to Emails dir
"
573b81720f34b2211326bf28e708b1094fe9e1ea,ministryofjustice/opg-digi-deps-client,"* Style contact page for multiple add.
* Add link button for contact
* Refactor for JS approach
"
cdd8554b6fbe5cc085c903a035831ebd3483c907,regardscitoyens/the-law-factory-parser,"refacto & improve diffs calculation
"
e2d4f43fbda0ccf2c3ea569875b3b8eb9c62e2d3,wikimedia/operations-software-librenms,"refactor: Added all os tests
"
e09f5c552cee0707a3a20593ff1fe7c9aad267cf,wikimedia/operations-software-librenms,"Merge pull request #3800 from murrant/rrd-create-remote

RRD Cleanup: centralize rrd_exists check, utilize data_update() and rrd_name()"
745479107452f2242144720518dcd8f0232152d1,wikimedia/operations-software-librenms,"code standard/cleanups

git-svn-id: 739fc08bb31dd03cfeeb6a72c94f1ec9dd35058d@1978 61d68cd4-352d-0410-923a-c4978735b2b8
"
3831ad3f45db726ae57afea2caf38a0bb4c94108,wikimedia/operations-software-librenms,"First cut at unified data storage for rrdtool & influxdb

As a side-effect, this adds InfluxDB support for MIB-based polling.
"
8060d5a0303e50cf2c7fdd466d9bf338c9c70a95,wikimedia/operations-software-librenms,"rejig events system (still not great. meh) clean up some pages.


git-svn-id: 739fc08bb31dd03cfeeb6a72c94f1ec9dd35058d@1223 61d68cd4-352d-0410-923a-c4978735b2b8
"
d5d80299bdc62ac266cba9b9b4b6424ea59b596c,OCSInventory-NG/OCSInventory-ocsreports,"merge with passero branch
I was modify a little bit your code for it to be more flexible
tx passero!"
75d29be8c3db0f7e7495181ccf56a92f09a98e6c,ScorexFoundation/sigmastate-interpreter,"SizeOd, Extract(all of them) serializers and specs
"
4e68a880db3433798e6ce2bdd806ce6cc47aae23,ScorexFoundation/sigmastate-interpreter,"Merge branch 'master' of github.com:ScorexFoundation/sigmastate-interpreter into reg-rework
"
547da538477f4ddcfbe7b78746f742651fd51cc4,angular/platform-browser-dynamic-builds,"e1adf96 refactor(NgUpgrade): remove deprecated addProvider
"
773b3a9f07195f514b7f0caad2d293a0fee768d2,angular/platform-browser-dynamic-builds,"2f7492c refactor(compiler): remove unneeded fields from metadata
"
5f5eadce84e3c7fae63fbb6adbcbeb1f797b650e,phoronix-test-suite/phoronix-test-suite,"A number of clean-ups to Phoronix Test Suite and support multiple possible paths in PossiblePaths XML for test profile
"
51671d7de76254b0cfa9a385e6add726a68b5067,phoronix-test-suite/phoronix-test-suite,"Clean up text headers in stdout
"
039d70827b6fdd4e3dad807c0a6ccb6b0adb3baa,phoronix-test-suite/phoronix-test-suite,"pts-core: Rewrite of the local results viewer, now use HTML+JS rather than XSL
"
08fbc2952f6bd6b7a6dfb81c2b416c9ab14c2f1a,phoronix-test-suite/phoronix-test-suite,"pts-core: Cleanup test installation code
"
a8ad8334f4200007bb9e2197df4f9499a9e209e8,phoronix-test-suite/phoronix-test-suite,"pts-core: MASSIVE REWORK of handling of test result generation through result_manager
"
25affa2d6e0fc5d6cc8ea6d8a508fb76836ec0b7,predictive-technology-laboratory/sensus,"More cleanup.
"
e6c6f708d05669f1e40adbd36d90b6b32059d40e,predictive-technology-laboratory/sensus,"Merge pull request #80 from predictive-technology-laboratory/input-pages-and-groups

Rework input prompts to allow groups and different types. Closes #61."
93811666ae5d325adecae7075b65810e2c8a1444,WikiEducationFoundation/WikiEduDashboard,"Refactor CourseMeetingsManager to reduce duplicate calculations

All the uses of CourseMeetingsManager require the week_meetings, so we should just calculate that once each time we need a new CourseMeetingsManager.

We could improve things further by refactoring the way the TrainingModuleDueDateManager interacts with CourseMeetingsManager, so that it doesn't create a new one for every training module assigned for a course.
"
dfb5830d4585f7894cbc8e0066cfbdfaa3608641,WikiEducationFoundation/WikiEduDashboard,"Refactor frontend API utility
Add tag management to frontend for admins
Resolves #165
"
ca99efe19167df1c5087ac72756ef0704aa98e8f,WikiEducationFoundation/WikiEduDashboard,"More data layer cleanup
Move copy from models to local file
"
79fc7c0250fcf589006dde5078e2cac5a6da81fd,WikiEducationFoundation/WikiEduDashboard,"Remove unused dependency
"
05fadcd371fe80fec7cfc1dd7a9e7cc0e8cd3573,WikiEducationFoundation/WikiEduDashboard,"Merge pull request #903 from WikiEducationFoundation/styleguide

Styleguide and style cleanup"
ad4322565c87e5cc0490d82f4dfe37643e10a205,WikiEducationFoundation/WikiEduDashboard,"Merge pull request #1987 from WikiEducationFoundation/WeekStoreRedux

Convert WizardStore, WeekStore, and BlockStore to redux

This is a pretty massive refactor that replaces the Flux stores for handling the assignment wizard and the timeline with redux.

Along the way, there are also a few minor bugs that I discovered and fixed, but this is mostly a refactor that keeps the behavior the same.

WeekStore and BlockStore are replaced by a combined timeline reducer, since those two stores were so closely interdependent anyway. The data format for the new reducer is still a little awkward, like the previous one was, but I've tried to streamline it somewhat. Weeks and blocks are still stored separately in objects (with week/block IDs as the keys), even though the expected format for all the component is an array of weeks, with each week including the array of blocks included. This transformation is now handled through the getWeeksArray selector, which rebuilds the weeks with the blocks that belong to that week whenever the blocks object gets updated. All rendering and syncing with the server uses the weeks array from that selector. The separate object of blocks is only used within the selector for constructing the weeks array, and the corresponding `persisted` objects are only used internally within the reducer to handle resetting of unsaved changes."
8fecea03f1b2b7dfe9f4f509b8bd49f957b522b4,WikiEducationFoundation/WikiEduDashboard,"Create campaign from course

Remove obsolete fetchCampaings from api.js and server_actions.js

Change spec_helper to allow focusing specific tests or describe blocks

Bug: T152792
"
ede68c669fde984d6095e9313d49a8af295ae885,cisco-system-traffic-generator/trex-core,"Merge branch 'refactor'
"
89309695626ba47a7e9f4c908a4d46c8b059df0f,cisco-system-traffic-generator/trex-core,"stateful scheduler cleanup

Signed-off-by: Hanoh Haim <1f34741bfa88280155d5053f5e8f4b89d8aa79bf@cisco.com>
"
eae78d4356b8834b78a91c52d869a7949f8f3e90,cisco-system-traffic-generator/trex-core,"improve Stateful scheduler

Signed-off-by: Hanoh Haim <1f34741bfa88280155d5053f5e8f4b89d8aa79bf@cisco.com>
"
0b7ea14f8924d22c49523eb1386fb256031ae26d,wordpress-mobile/WordPress-FluxC-Android,"UpdateSitePluginError renamed as ConfigureSitePluginError
"
9c88866a61f7a40249de08fd788c39477e28f381,wordpress-mobile/WordPress-FluxC-Android,"Better naming for plugin checks in ImmutablePluginModel
"
e31de03880a317a95d9a7d5c0d1a270ab019ae99,wordpress-mobile/WordPress-FluxC-Android,"Renaming blog ID to site ID
"
daacf7398e245c26c8abbc9800a78df2b9efba61,wordpress-mobile/WordPress-FluxC-Android,"Renamed DomainAvailabilityResponsePayload and Minor code refactors
"
9a80c77f10de2def3e06c267bdab8c5d4e161667,wordpress-mobile/WordPress-FluxC-Android,"Merge remote-tracking branch 'origin/develop' into issue/plugin-optimizations-master
"
e36954d59cfd60df87a982e9cb4f796042af5318,angular/platform-webworker-dynamic-builds,"e44f69c refactor(ivy): move dir flags to tnode (#22901)
"
bef9e96c2c65dc1aa81f221baba001bf1676db29,joomla-projects/media-manager-improvement,"Rename form fields to lowercase (#17584)

"
14d532baed60aca9712566d28d7867621e2de523,joomla-projects/media-manager-improvement,"[4.0] com_associations javascript clean up (#14945)

* com_associations

* cs
"
f8d91c01e09e996b00958a79035e9e6b4d311dc5,joomla-projects/media-manager-improvement,"Refactor tests to use CSV datasets
"
2570285679ddd9174694687d2dca87f1f2581c04,joomla-projects/media-manager-improvement,"Custom fields (#11833)

* Update gallery.xml

* Update fields.php

* Update internal.php

* Update field.php

* Update dprules.php

* Update section.php

* Update base.php

* Update view.html.php

* Update view.html.php

* Update render.php

* Update modal_article.php

* Update sql.php

* Update fields.php

* Remove commented debug code

* Update fields.php

* #14 fixed Joomla Coding Standards and added function dock blocks code

* #14 fixed Joomla Conding Standards and added function dock blocks

* #14 Fixed class dock block mistake

* we did not require this any more

* #14 fixed Joomla Coding Standards and added function dock block in helper file at back-end

* #14 Fixed only Joomla Coding Standards in FieldsHelper file

* #14 removed where function, added dock blocks and fixed dock bocks coding standards errors

* #14 formatted as the function doc blocks

* #14 formatted as the function doc blocks

* Check the active menu correct

Closes #72

* Move the label field to the options tab

Closes #22

* Label has it's own field and must not stay in params

Regression from #22

* Backport from Digital-Peak/DPFields#32

* Fix the save and copy action

Closes #37

* Store data on reload

Closes #76

* Don't add always the All language to the query

Closes #38

* Count the items in the category manager from com_fields

Closes #61

* Corrected colspan when fields are assigned to a language

* #14 fixed conflict

* Don't save the All category

Closes #19

* Minor language updates

* Fix ""Show On"" tooltip's description

The tooltip's description for the 'Show On' field is not showing because it is currently looking for the label.

* Don't hardcode com_content.article

Closes #80

* Load the types form when the data is an array

* Create the links correct for the count item feature

Closes #82

* Show the value from com_fields instead of the the users helper

Closes #81

* Set the language correct on the fields cache

Closes #47

* Removed string conversion error

Closes #47

* Changed links to 3.7

* Remove legacy DPFields code

* Get data from state correctly

* Add joins to the com_fields in search plugin (#83)

Add joins to com_fields in the content search plugin

* Add new core rule core.edit.value (#75)

* Add 'onFieldBeforePrepare' and 'onFieldAfterPrepare' events

* Rename ""Field Category"" to ""Field Group""

Closes #91

* Add option to disable custom fields per component

Closes #87

* Use select box to define the images directory

Closes #97

* Truncate correctly

Closes #101

* Change description field to plain textarea

Closes #94
CLoses #99

* Parameters are more clear and improved comment

Adapted change from
https://github.com/joomla/joomla-cms/pull/10722/commits/32c9048b88383ba6028743a48517176952d9a574

* onFieldBeforePrepare and onFieldAfterPrepare events now triggered even when custom field value is empty

* Cast before access

* Create params even when they are empty

* Add com_fields menu entries on back end

Closes #109

* Extract the context correctly

Closes #112

* Add custom fields for contact

* Add inline group create

Closes #114

* Add simple context mapping

Closes #117

* Dont assign a not existing category when a field is saved with no catid

* Rename string with group and not category

Closes #124

* Category strings should be named Field Groups

Closes #126

* Show the fields on the blog listing

Closes #108

* Installer crashes somehow

Closes #132

* Merge the types set up into JFormField (#104)

* Merge field types into JFormFields

* Converting the rest of the fields

* Merge DP Field Rendering with Joomla Form Fields

* Remove the gallery scripts

* Rename the interface to JFormDomfieldinterface for auto loading

* Add article field as demo how a component can add fields

* Removing mustache, will be replaced later with a new parser

See #12 for the discussion

* Fixing composer setup, reverting to 3.6.x branch

* Fixing code style errors

Closes #14

* Rename upgrade file to 3.7

* Strip slashes from description

Related to #139

* Removing Simplepie from the database installer script

Reverts 8381e46758d18c6286fde35c52b1a2a475d7d0df
See comments for more information

* Show field group description in form

Closes #139

* List field changed key to value and value to name

Closes #121

* Use the first category as field filter when creating an article

Closes #144

* Dont show a user field on the front end

Closes #149

* Add always the fields path when adding the custom fields

Closes #150

* Added hint (placeholder) option

Closes #151

* Correct redirect after checkin action

Closes #154

* Check for group access levels when getting the fields (#153)

* Consider field group state

Closes #155

* Added missing language strings

Closes #129

* JArrayHelper => ArrayHelper

* reduce model method (#160)

* Fixing permission inheritance to edit the value of a field in the form (#157)

* Correct path for parameters folder when not in Joomla libraries

* Type selection (#162)

Closes #134

* Display class attributes (#143)

* User home (#161)

* Add home parameter to media field

* Correct path for paramneters folder when not in Joomla libraries

* Fixing code style errors

* Add new context for com_contact for contact form fields (#115)

* Add new context for com_contact for contact form fields

* Prepare the value on com_contact mail

* Fixing travis code style errors

* Use the correct variable name

Closes #163

* Show the all label when no category is assigned

Closes #165

* Don't set 0 as default hint when not present

Closes #166

* Fix Sniffer Whitespace errors

* Fix Sniffer Whitespace errors (#167)

* Cleanup field model

* Support fields plugins

* Add gallery plugin

* Moved since tag to 3.7

* Some brushup

* Update controller.php

* Update field.php

* Update fields.php

* Update controller.php

* Update fields.php

* Update internal.php

* Update fields.php

* Update fields.xml

* Update field.php

* Update fields.php

* Update type.php

* Update section.php

* Update field.php

* Update field.xml

* Update filter_fields.xml

* Update field.php

* Update view.html.php

* Update edit.php

* Update modal_options.php

* Update view.html.php

* Update default.php

* Update default_batch_body.php

* Update modal.php

* Update field.xml

* Update en-GB.com_fields.sys.ini

* Update en-GB.com_fields.ini

* Update en-GB.plg_fields_gallery.ini

* Update en-GB.plg_fields_gallery.sys.ini

* Update en-GB.plg_system_fields.ini

* Update en-GB.plg_system_fields.sys.ini

* Update modal_article.php

* Update controller.php

* Update field.php

* Update default_custom.php

* Update captcha.php

* Update editor.php

* Update media.php

* Update user.php

* Update editor.xml

* Update media.xml

* Update user.xml

* Update usergrouplist.xml

* Update abstractlist.php

* Update domfieldinterface.php

* Update field.php

* Update email.php

* Update file.php

* Update imagelist.php

* Update sql.php

* Update tel.php

* Update textarea.php

* Update url.php

* Update calendar.xml

* Update checkboxes.xml

* Update imagelist.xml

* Update integer.xml

* Update list.xml

* Update radio.xml

* Update sql.xml

* Update textarea.xml

* Update url.xml

* Update gallery.xml

* plugin

* plugin2

* typo

* Change to uft8mb4

* Add new extensions to the script file

* Revert merge conflict composer changes

* No needed changes

* Library form fields should be unaware of com_fields

* Default to https

* Order the tables correct

* Cleanup language strings

* Code errors from cleanup

* Remove tags support

* Add category filter

* Display fielg group label when editing a group

* Display all fields which are assigned to all languages correct

* Don't show fields on categories as it is not ready yet

* Update fields.php

* Don't transofrm the category name

* Correct quote name function used

* Revert ""Display fielg group label when editing a group""

This reverts commit 133133267e88a341cb5634d814a87e06f3e8daf3.

* Disable tags on custom field groups

* Don't include category state in filter on back end

* Remove debug code

* CS fix

* Shortening the line length

* Install SQL files for postgres

* Use JDatabaseQuery

* Option to show the user custom fields on the front on the contact view

* Comment for item_id table column

* Remove class for textareas

* Fix no menu item pages giving wrong links (#12020)

* [plg_system_logout] Load language files only when needed (#11736)

* Update logout.php

* cs and stuff

* Update logout.php

* Adding Options Button (#12033)

* fix paths (#12032)

* Fix routing for non-sef menu items with Modern Routing (#12021)

* [com_banners] - publishing time does not honor timezone (#11978)

* [com_banners ] -  publishing time does not honor timezone

* impress only when needed

impress only when needed

* CS fix

cs fix

* Order stylesheet attributes the same as link attributes (#12052)

* use joomla-projects docker

* Phase out JString calls in libraries (#12058)

* Admin app - JString -> StringHelper (#12056)

* Site app & Plugins - JString -> StringHelper (#12057)

* New Feature, Multilanguage: Add the possibility of displaying associations in article info and in articles list. Replaces #11935 (#12042)

* Replaces

* Modifying to fit Thomas proposal

* modifying fetching flags param

* adding showon + some

* [JAccess] Improve ACL asset preloading performance/memory consumption (#12028)

* improve component asset preload speed

* Update user.php

* Update access.php

* Update access.php

* Update access.php

* Update access.php

* not convinced yet, but revert changes in juser

* make sure that components are always preloaded

* only a logged users (with user id) can be root.

* [com_contact] - moved the captchaEnabled var from default to view (#11964)

* [com_contact] - moved the captchaEnabled var out of the default.php file to the view.html.php file

moved the captchaEnabled var out of the default.php file to the view.html.php file.

* moved captchaEnabled to the view

moved captchaEnabled to the view

* missed var  declarationi/initialization

missed var   $captchaSet  declarationi/initialization

* Session interaction refactoring (#10905)

* Allow lazy starting a session

* Defer starting sessions in the installer

* Defer starting session in JApplicationCms

* Deprecate creating sessions in JFactory

* Start restructuring session load sequence in JApplicationCms

* Add JSession object to onAfterSessionStart event trigger

* Override afterSessionStart for install app to not store the user

* Expand the database storage object for better API

* Fix session listener declaration

* Restructure session bootup and when the session metadata operations run

* 3.5 -> 3.6

* Remove option, out of scope

* Tweak things so the behavior is closer to current API

* Undefined variable

* Get store name from session object

* Remove this, out of scope

* PHPCS fix

* Deep rooted application dependencies are my absolute favorite

* Move comment, doc blocks, consistent method signature

* Again on the consistency, we don't like E_STRICT errors

* Nevermind, confused myself with checkSession, carry on...

* Until the day the unit tests no longer follow the doc block code styles...

* Lost line in merge

* One more merge conflict fix

* This internal coupling is addressed

* Fix query from merge

* [com_content] - add articles ordering by votes, ratings (#11225)

* Add setDocumentTitle() function in JViewLegacy (#11399)

* setDocumentTitle() function in JViewLegacy

* PHPCS

* JED turned to https (#12076)

* JED truned to https

JED truned to https
Minor fixes on proper use of Joomla!

* Update README.txt

Same as #12076

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED turned https

* JED and community turned https

* JED, community and org turned https

* JED and community turned https

* JED and community turned https

* correct/add quotename (#12070)

* Label: Users Options: Login name > Username (#12073)

The language label ""Change Login Name"" is not consistent with the front-end label ""Username"".

This PR changes the language label to ""Change Username"" and the decription to ""Allow users to change their Username when editing their profile.""

The front-end login screens use the label ""Username""
Login Component:
![login-component](https://cloud.githubusercontent.com/assets/1217850/18627996/579510ca-7e5e-11e6-9161-6268e9ccb213.png)

Login Module:
![login-module](https://cloud.githubusercontent.com/assets/1217850/18627997/579595ae-7e5e-11e6-8920-edf34631a3c7.png)

### Testing Instructions
#### Before the PR
Users > Manage > [Options] > [User Options]
The last entry is ""Change Login Name"" 
+ hover description ""Allow users to change their Login name when editing their profile.""

![login-back-end-options](https://cloud.githubusercontent.com/assets/1217850/18627995/5791ac32-7e5e-11e6-8b18-94a34372c422.png)


#### After the PR
Users > Manage > [Options] > [User Options]
The last entry is ""Change Username"" 
+ hover description ""Allow users to change their Username when editing their profile.""

![login-back-end-options-after](https://cloud.githubusercontent.com/assets/1217850/18627998/5799ceb2-7e5e-11e6-9a5e-234dcf2db14e.png)

* Update .travis.yml (#12079)

* Add vote order check

* [a11y] Protostar back to top (#12446)

* [a11y] Protostar - back to top link

* Oops Andre was right

* add anchor for non-js enabled browsers

* Added missing com_fields component from last merge
"
78680494abae1dae98a1617c02012abf26b5f827,joomla-projects/media-manager-improvement,"SCSS clean-up
"
6868f4abd110168ffec18a819898638f0816ea7b,joomla-projects/media-manager-improvement,"$^ Refactored com_modules ini/keys, customized item(s)

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@15353 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
f9aa3423e2172194fbe7294c1fb80dc8e79e0a38,joomla-projects/media-manager-improvement,"Move mvc classes to MVC namespace and give them better names (#17614)

* Move mvc classes to MVC namespace and give them better names

* Fixing tests
"
e5ad859658da3f2d503be9d7bd54737ba9af6658,joomla-projects/media-manager-improvement,"CSS-Grid improvements (#19241)

"
121704d0731923217078de35437a31ad53c5484a,joomla-projects/media-manager-improvement,"Improvements in the Associations Edit Workflow (#12344)

* changes in model preprocessForm to allow all associations fields to be dumped

* adjustement

* there is no need to block the language field now

* simplify association tab in the templates files

* let's make the layout more dynamic

* add the js behaviours

* solve one of strange bug ...

* improvements and allow associations on create

* correct language string

* render a warning message

* solve categoies issue

* add new language methods getContentLanguages and getInstalledLanguages

* let's now load all content languages, including the unpublished ones

* correct label for bug in categories modal field! all other model fields have this

* ups correction in js

* default pivot is language code

* doc blocks corrections

* cs

* language correction thanks brian

* fix conflicts final
"
ecdc844575a73823e7a3aa09b7032ffb719e8984,joomla-projects/media-manager-improvement,"Fixed some code
Removed obsolete tables
removed obsolete backend component

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@11780 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
53aad6f251d13257d58ca3e7b8317a7de576b2b2,joomla-projects/media-manager-improvement,"Cleanup installer plugins (#10308)

* Cleanup the installation plugins

* Further cleanup

* Update the installation SQL files

* Update default.php

* Update packageinstaller.php

* Update urlinstaller.php

* Update 3.6.0-2016-05-06.sql

* Update joomla.sql

* Update joomla.sql

* Update folderinstaller.php
"
f816a1115bda8ed0f2e98e3da1eb131284bb7449,joomla-projects/media-manager-improvement,System test fixes and improvements
870478bbe71e87175e224d5318269b78e7342c36,joomla-projects/media-manager-improvement,"Merge pull request #2163 from nonumber/jux-actions

[JUX2] [01] Moved actions (on hover) dropdown to status buttons"
d0842d521fe8b0fa944659ad5d0db59364cd5233,joomla-projects/media-manager-improvement,"Remove unnecessary parentheses in installation (#13298)

"
36d4508e2b1e7fb6a3979e1f0284624668bed9c6,joomla-projects/media-manager-improvement,"Improve quickicons layout
"
601de23e5bf8683967880fbb0d6f9ad03faeecd7,joomla-projects/media-manager-improvement,"Start on topbar improvements
"
9e3bd1a91fc2813f7a4d20f37f9a54dc4032bc21,joomla-projects/media-manager-improvement,"Use dropdown instead group
"
050d34a9eebdecc384852b6421e845e7fe11106c,joomla-projects/media-manager-improvement,"Visual cleanup on borders and login page

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@13955 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
a51c7b2167c9ad4516cfd245e26ca04c39baf953,InnovateUKGitHub/innovation-funding-service,"INFUND-1779 -refactoring, adding validation to user-registration, organisation type, address forms. refactoring for unit tests.
"
b90252d5e6157eccadf8a83b872c5c9acd1b3a5c,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into feature/INFUND-2694-simplify-lambdas
"
2c8849210f640832d8576c1867b07c1148e2cf6d,InnovateUKGitHub/innovation-funding-service,"IFS-3202: Refactor and add test coverage
"
d9522b4b2a9af4893e26e811376193f8a2a8919e,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into bugfix/IFS-3181-zdd-cleanup-ifs-2776
"
0cc33122a252f45c7dd66a05cb48b7922f72dd0e,InnovateUKGitHub/innovation-funding-service,"Merge pull request #588 in IFS/innovation-funding-service from feature/INFUND-4819-as-an-academic-partner-i-want to development

* commit '2c7f85dbb24cbdb2f090bbdb98fd73784fbd6456 [formerly fc2baaa0a02702e1245509f8d715a2c7e6471d2f]':
  INFUND-4819: Fixed unit test.
  INFUND-4819: Fixed the spend profile CVS category name after refactoring.
  INFUND-4819: PR comments.
  INFUND-4819: Removed unused file.
  INFUND-4819: Changed the academic cost category names to match the prot.
  INFUND-4819: Patch level update.
  INFUND-4819 styling for academic spend profile
  INFUND-4819 small chang to the template to not output divs
  INFUND-4819: Merge conflicts and changes based on the lead partner spend profile.
  INFUND-4819: Merge conflicts and changes based on the lead partner spend profile.
  INFUND-4819: Academic partner spend profile. Partial check-in (WIP)


Former-commit-id: b2356e5f927cbdee9f452f755e955b18cf997ab6"
37db9b533d7a1873a2a0dc18947ebd8559a2d071,InnovateUKGitHub/innovation-funding-service,"INFUND-3949 - altered code to use project user table rather than process role for PM, and some cleanup of other code
"
b62deddb18a4f027cade30c480ce8a0a364fdff3,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into bugfix/IFS-3411-zdd-cleanup
"
426562f36fb4ddb04e1917d111123d6f98ebd5ca,InnovateUKGitHub/innovation-funding-service,"IFS-4801 renamed competition project documents
"
c1b7b933a15e9b3967e9e40d42be1cf47334c7d3,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into development

* 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service:
  INFUND-1555 - documenting code, and a couple of renames
  INFUND-1555 - documenting code, and a couple of renames
"
ef4fd635f44e2eb623ef2c1d5f0972a1d8726e7c,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2550 in IFS/innovation-funding-service from bugfix/IFS-1051-application-submit to development

* commit '9cab2372bdd215bbeda97aa7ce87447a36b8202b':
  IFS-1051 Create a variable for org type in setup
  IFS-1051 Update from review comments
  IFS-1051 Update tests to cover RTO and business
  IFS-1051 Refactor application submit to use a different competition
"
2a08ff4ae21b945774ea52558f600938b5938c92,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2409 in IFS/innovation-funding-service from feature/IFS-346-applicationformcontroller to development

* commit '4892e22d93eecdaaabba14609cb2ae0da7203320':
  IFS-346 added comments and todo with number
  IFS-346 Typo fix
  IFS-346 Added tests for ApplicationSectionSaver
  IFS-346 Application question saver tests added
  IFS-346 Application question details tests added
  IFS-346 ApplicationQuestionFileSaver tests added
  IFS-346 Application Question Non file saver tests
  IFS-346 WIP place the basics in for the tests
  IFS-346 Creating tests for ApplicationSectionFinanceSaver
  IFS-346 Creating test for ApplicationQuestionSaver
  IFS-346 Fixing / adjusting Unit tests
  IFS-346 Improving Applicant Ajax controller
  IFS-346 Fixing funding request bug
  IFS-346 Catch NumberFormatExceptions and added comment
  IFS-346 Formatting
  IFS-346 Splitting up savers
  IFS-346 Moving and refactoring saver functions
"
2687b6ba69b18f32faf1d7a3c30edead32658c8a,InnovateUKGitHub/innovation-funding-service,"Fixing missed out classes form refactor


Former-commit-id: 7e687ac9d39947aa4fbe44d5e507cc8e85c4aeb0"
a114f494b50f84f3dd80b738bc6b78a2a01ea5ad,InnovateUKGitHub/innovation-funding-service,"Merge pull request #13 in IFS/innovation-funding-service from feature/IFS-2780-invite-assessor-to-interview-panel-pending-and-declined-tab to development

* commit 'f4062782f7aaa0fd1e17117e4f9f9fba78516149':
  IFS-2780 Fixing template error.
  IFS-2780 Added Ats
  IFS-2780 updated Ats for pending and declined tab
  IFS-2780 fixing template url errors.
  IFS-2780 Renaming tab and endpoint to pending and declined.
  IFS-2780 Added Ats for pending and declined tab
  IFS-2780 fixing redirect and disabling resend button.
  IFS-2780 addressing review comments.
  IFS-2780 New controller for interview invite overview page.
"
ef0cc8be30e2339094f74622d575992d25310178,InnovateUKGitHub/innovation-funding-service,"INFUND-2982 refactor, persisting (in)complete sections for setup against
competitions"
834f6e0fd7e8425cb18d801606e68d2507fbf317,InnovateUKGitHub/innovation-funding-service,"More refactor
"
f315fecaa4ceb8cc63a673a2b68b159776270c69,InnovateUKGitHub/innovation-funding-service,"Merge pull request #15 in IFS/innovation-funding-service from bugfix/IFS-3068-delete-userroletype to development

* commit '2a4f452e6d0d6d3e49b14734c30454f3c865926c':
  IFS-3068 fixing admin ATs.
  IFS-3068 fix unit tests
  IFS-3068 - Review tidy.
  IFS-3068 - Reverts naming of EditUserResource#userRoleType to support ZDD.
  IFS-3068 - Renames UserRestService#findByUserRoleType -> findByUserRole
  IFS-3068 - Unit test fixes.
  IFS-3068 - Deletes UserRoleType
"
ddbdd92a8423803491431a85db3e29b1d911644f,InnovateUKGitHub/innovation-funding-service,"Merge pull request #445 in IFS/innovation-funding-service from feature/INFUND-4581-as-a-competitions-team-member to development

* commit '6d9870bf1916ec6046848e61fc1ad7eff6a50427 [formerly a5546335881f0ddaf4da28da6b1309243c711ef0]':
  INFUND-4581 Catching possible saving errors
  INFUND-4581 Migration patch levels update
  INFUND-4641: Adjusted the text field id's
  INFUND-4581 Fixing server errors after adding an cofunder with JS
  INFUND-4581 Updating flyway migration
  INFUND-4641: Changed the IDs in the tests
  INFUND-4581 Update flyway patch number
  INFUND-4581 Code cleanup
  INFUND-4581 Autosave multiple new rows
  INFUND-4581 WIP autosave Funding information refactored Funders
  INFUND-4581 Refactor non JS
  INFUND-4581 Refactoring non JS
  INFUND-4581 WIP refactoring funders/cofunders
  INFUND-4581 Start refactoring funders


Former-commit-id: ea6d125aa446a0c2c0fc35b6ae22a6c935770dbb"
1d2b6a2e97bcc7c92cd99aff6790bdeab9703864,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2652 in IFS/innovation-funding-service from feature/IFS-1324-new-organisation-matching-companies to development

* commit '8a1c3213bdd0d35b2087d9366620f930a6ec99c3': (24 commits)
  IFS-1324 updating tests after IFS-1293 web test data are in
  Monitoring officer fix
  IFS-1324 Amending title after review comment
  IFS-1324 Amending review comments
  IFS-1325 Update with the correct keyword
  IFS-1325 Fixing failing tests
  IFS-1325 Fixing failing tests
  IFS-1325 Combining test cases. Second commit on the tests
  IFS-1324 IFS-1325 - First working acc test for business, still a bit rough
  IFS-1325 Adding tests cases for the REsearch org type scenarion - initial commit
  IFS-1324 IFS-1325 - WIP acc test for organisation matching
  IFS-1324 IFS-1325 - PR comments & removed addAddress data-service API
  IFS-1324 IFS-1325 - Addressed several review comments: - Results returned from repository now always order by id - Add matching rules in separate function in matching service - Cleaned up parameters in save controller function
  IFS-1324 IFS-1325 - Uncrufted the OrganisationTypeEnum
  IFS-1324 IFS-1325 - Added test for new invite service method
  IFS-1324 IFS-1325 - Removed obsolete documentation tests
  IFS-1324 IFS-1325 - Reverted enum rename as it didn't fall in line with the other enum names
  IFS-1324 IFS-1325 - Added research type to comp 16 for testing purposes, and fixed an acc test failing because it was matching organisations
  IFS-1324 IFS-1325 - Created new unit tests and cleaned up old code
  IFS-1324 IFS-1325 - Fixed problem in invite journey
  ...
"
975fc750bffdcc4106b538c84b0c80c2145befd8,InnovateUKGitHub/innovation-funding-service,"Merge pull request #100 in IFS/innovation-funding-service from feature/IFS-3252-invite-assessor-to-interview-panel-key-statistics to development

* commit '2b15b544ec8913a06245f6371f072fd8740eade5': (41 commits)
  IFS-3252 typo fix
  IFS-3252 Updated Key stats
  IFS-3252 Updated Ats
  IFS-3252 - Fixes interview application model populators so that they call the correct end point for statistics.
  IFS-3252 - Fixes interview application model populators so that they call the correct end point for statistics.
  IFS-3252 - Acc test fixes for removed 'Assessors in invite list' stat
  IFS-3252 - Removes 'Assessors on invite list' from assessor invite screens.
  IFS-3252 - Reverts font-ie8.css
  IFS-3252 Updated ATs
  IFS-3252 - Fixes failing CompetitionKeyStatisticsControllerDocumentation
  IFS-3252 - Review tidy-up
  IFS-3252 - Adds missing ZDD annotation references and removes commented-out endpoint
  IFS-3252 - Adds missing documentation to CompetitionStatisticsController
  IFS-3252 - Moves interview statistics endpoints to CompetitionStatisticsController
  IFS-3252 - Removes unused attributes from AssessmentServiceImpl
  IFS-3252 - Formatting and tidy around ReviewStatisticsService
  IFS-3252 - Fixes disabled Accepted tab on interview assessor pending page
  IFS-3252 Updated ATs
  IFS-3252 Added ATs
  IFS-3185 - Content fix for interview panel assessor invite find tab - Rejected -> Declined
  ...
"
14db1894a2f16c44f5fff195d47ece213b4e8e39,InnovateUKGitHub/innovation-funding-service,"IFS-421 - Remove setters from OrganisationType. Simplifies OrganisationTypeEnum and replace object types with primatives where possible.
"
617bcfd406e6b0eb6ea69f57eec114222216ed88,InnovateUKGitHub/innovation-funding-service,"Merge pull request #671 in IFS/innovation-funding-service from compmgt-application to development

* commit 'a6dafaa4a8f0e5877795d2473a9c3a3f52b5f3a1 [formerly 8669520ca2d677a430b81a528f5084d5d578deb1]':
  INFUND-5632 Code improvements
  INFUND-5632 Code improvements
  INFUND-5632 Fixing failing robot test
  INFUND-5837 Code refactor for review
  INFUND-5632 Refactoring subsections comp setup
  INFUND-5835 Styling template for editing and changing questions separate
  INFUND-5629 Temporary disabling Acc test that needs a refactor, application questions comp-setup
  INFUND-5629 Fixing unit tests
  INFUND-5629 Code refactoring
  INFUND-5882 Changing templates for editing the questions separate
  INFUND-5881 Changing controllers for editing the questions separate
  INFUND-5632 Template improvements
  INFUND-5632 Code improvements and disabling useless unittests
  INFUND-5632 Showing the applications separate
  INFUND-5834 Create templates for showing separate questions
  INFUND-5833 Changing the webcontrollers for showing the questions separately


Former-commit-id: 955ef22ddcfd7452e7894ad2f3428948d13f4a94"
8d900b92ebcc8394b501ce2521a0164e1f45f6c6,InnovateUKGitHub/innovation-funding-service,"Merge remote-tracking branch 'origin/development' into feature/INFUND-5793-create-commons-project

* origin/development: (93 commits)
  INFUND-6238 Added the password the the VNC open
  INFUND-6238 added bash flag for opening VNC client.
  INFUND-5864 addressed review comments
  Adding exec to scripts
  updating native-docker documentation
  INFUND-6227 Closed paragraph, which hopefully doesn't cause the e-mail template to be scrambled anymore.
  updated content for INFUND-6089
  content update for INFUND-6141
  updated capitalization and tweaked margin to prevent words meeting in the middle
  content update for INFUND-6158
  INFUND-5768 - Update to managing and allocating assessors to prioritise skills over innovation area
  INFUND-6117 - reject documents banner for internal team
  INFUND-5767 - As a comp exec I want to be able to assign one innovation area to an assessor so invites accuratlely reflect their skill set
  INFUND-5126 - GOL partner view
  INFUND-5257 change content to Project Manager and adjust test
  INFUND-6064 - Prototype front-door work
  INFUND-6190 status of saved assessment
  INFUND-5980 fix acceptance test
  INFUBD-6178 AJ content updates
  INFUND-???? - renamed file
  ...

# Conflicts:
#	ifs-data-service/src/test/java/com/worth/ifs/competitiontemplate/builder/CompetitionTemplateBuilder.java
#	ifs-data-service/src/test/java/com/worth/ifs/competitiontemplate/builder/FormInputTemplateBuilder.java
#	ifs-data-service/src/test/java/com/worth/ifs/competitiontemplate/builder/QuestionTemplateBuilder.java
#	ifs-data-service/src/test/java/com/worth/ifs/competitiontemplate/builder/SectionTemplateBuilder.java


Former-commit-id: 133361695aae3bccef35b1b8ab5bd330e8a6baff"
bb697670cb5e6adbf3a4e5333d2508d2abc3a606,InnovateUKGitHub/innovation-funding-service,"INFUND-3004 Refactored Competition statuses to automatically open.


Former-commit-id: d3628febb8417c9f13d19084d910b7d9246bb89a"
bb227961586e31930a1bcf42deac1e767eadc7fa,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1575 in IFS/innovation-funding-service from feature/INFUND-8597-assessor-agreement to development

* commit '1c950b365a47996e91b222c07de7122b0b09d796 [formerly c3c736d248192f891c9aac66ef00a1ba4d7863f4]':
  INFUND-8597 - Renumbers database patches.
  INFUND-8597 - Re-compiled CSS.
  INFUND-8597 - Fixes typo in UserProfileStatusResourceBuilder and changes it to use withArraySetFieldByReflection().
  INFUND-8597 Correcting expression after renaming contract to agreement.
  INFUND-8597 Database script for new Assessor agreement text. Renaming Contract to Agreement.
  INFUND-8597 changed assessor contract to agreement and URL paths
  INFUND-8597 added list indent class


Former-commit-id: b1f3872494b45347bce5f67a035acb643ccd1460"
a23d2f2e16c520ebdd747525084ef92b01ca5bcd,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-7094-refactor-project-setup-status
"
60d5ba6be740ae6ad3065b4f0ebf861212686c1b,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1475 in IFS/innovation-funding-service from bugfix/INFUND-8147-secure-fileentryservice to development

* commit 'e10632b0f332a60c0bbe7ff780d81a60b2cc2a62 [formerly c7214b9be8719dd6c475c41ed15935155348e476]': (56 commits)
  Corrected last failing web-side test: all building and all tests passing
  Correcting web-side failing tests due to changes on upload file method signature
  merged dev in
  Merged dev in
  More tests adjustments
  Correcting issue with deleting an attachment
  Converting @Query into a jpa named method and adjusting code using the previous method.
  Changed upload process of an attachment under a project thread to include project id, to add permission context. It‚Äôs building and working user-wise, not including adjusted tests yet.
  Raising new local script level
  Actions upon PR comments
  Removing import org.innovateuk.ifs.file.resource.FileEntryResource from *AttachmentRestService
  Actions upon PR comments
  raised script level
  Done correcting web-side tests using attachments
  Including the attachments RESTDocs into the documentation - some issues with attachments documentation to solve
  Adding ProjectFInandeAttachmentsControllerDocumentation - upload method still  failing
  Fixing web-side tests using Attachments
  adding test around the delete method on PFAttachmentControllerTest
  Improving ProjectFinanceAttachmentServiceTest.test_downloadSuccessfulIfAttachmentExists
  Changed AttachmentService download to attachmentFileAndContents and tests and prod code around it - finished ProjectFinanceAttachmentServiceTest and added ControllerTest
  ...


Former-commit-id: ed3a0962a64cdf7e2067973d2612e8d8367af8e4"
771d625e44528d2c3b7ce8f8db3616af5a5ad8ce,InnovateUKGitHub/innovation-funding-service,"Merge pull request #283 in IFS/innovation-funding-service from feature/INFUND-3011-as-a-lead-partner-supply-other-document to development

* commit '2d9f3dfde9247aebbdfe3f3218881aa54c946bf4': (47 commits)
  INFUND-3011 - fixing merge conflict spotted in pull request review
  INFUND-3422 - adding tests for web ProjectService
  INFUND-3420 - adding tests for web controller
  INFUND-3420 - adding tests for web controller
  INFUND-3420 - adding tests for web controller
  INFUND-3420 - adding tests for web controller
  INFUND-3420 - adding tests for web controller
  INFUND-3420 - adding tests for web controller
  INFUND-3422 - added tests for rest services
  INFUND-3422 - testing ProjectServiceImpl for file methods
  INFUND-3424 - adding asciidocs for collaboration agreement methods
  INFUND-3424 - adding asciidocs for collaboration agreement methods
  INFUND-3424 - adding asciidocs for collaboration agreement methods
  INFUND-3424 - adding asciidocs for collaboration agreement methods
  INFUND-3424 - adding asciidocs for collaboration agreement methods
  INFUND-3424 - adding asciidocs for collaboration agreement methods
  INFUND-3026 - extracting more common file maipulation test patterns
  INFUND-3026 - extracting more common file maipulation test patterns
  INFUND-3423 - breaking out common getFileDetails test pattern
  INFUND-3423 - continuing tests around file actions for project
  ...
"
020e02f5fa78fb78352d7da27f774086fe204a1a,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch
"
d81999320beaa6a16057b82950062cdd12d55090,InnovateUKGitHub/innovation-funding-service,"#9256-further refactoring gol
"
3854b3e56594577f16a0c127ad7e15fb9edf7c6b,InnovateUKGitHub/innovation-funding-service,"Merge pull request #198 in IFS/innovation-funding-service from data-service-test-heirarchy to development

* commit '670890b522194b059b9e0f5512a72e048b4cd705': (22 commits)
  Addressed review comments
  Corrected broken tests
  Corrected broken test
  fixed data service tests following refactor
  More refactor
  More refactor
  More refactor
  More refactor
  More refactor
  More Refactor
  More refactor
  more refactoring
  more refactor
  More refactoring
  More refactoring
  More refactor
  More refactoring
  More refactoring
  More refactoring
  delete unused imports
  ...
"
f305929aacaf11592590b1cc08a73f0de31f792b,InnovateUKGitHub/innovation-funding-service,"INFUND-1610 - extracting ApplicationController code into service
"
f40d756720e2b22d123f953b8e3004ac509fc447,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-9040-simplify-userprofileservice-in
"
8f56749abfb4551f0dbb0993c42a4bccffbe620b,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into feature/INFUND-2265-as-an-applicant-i-want-to-be

* development: (34 commits)
  INFUND-1627 internal view project setup table
  INFUND-1733 As an applicant I want to see if the 'Your Finance' section is marked as complete in the overview page Code update based on PR review
  INFUND-3268  Guidance text in dropdown Appendix boxes for questions 5, 6 and 8 need changing individually
  Updating Email tags
  INFUND-3142 - adding web controller tests
  Fixing the failing overview test
  INFUND-3143 - added test for project users call
  INFUND-3144 - adding asciidoc for getting project users
  INFUND-3144 - adding rest endpoint documentation
  INFUND-3144 - adding rest endpoint documentation
  INFUND-1733 As an applicant I want to see if the 'Your Finance' section is marked as complete in the overview page small code cleanup
  INFUND-3254 - swapping ProcessRoles for ProjectUsers for the purposes of assigning a Finance Contact
  INFUND-1733 As an applicant I want to see if the 'Your Finance' section is marked as complete in the overview page Code update based on PR review
  INFUND-3253 - creating Partner users based upon original Application Lead and Collaborators
  INFUND-3252 - adding new Project-based roles
  INFUND-3251 - implementing ProjectUser entity
  INFUND-3143 - introducing Project User to allow roles to be allocated to Projects
  INFUND-3143 - adding role data
  INFUND-2620 finance contact assign template
  INFUND-3143 - adding additional checking on roles in the selection of Finance Contact, and happy path and failure tests
  ...
"
372b3e1900cd35ce2f7341b798a7009d4d55af79,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into feature/INFUND-1144-going-back-from-the-create-your

* development: (69 commits)
  INFUND-1042 user profile - removed link from header and moved to the proper template
  Fix for the 'accept invitation' test case (assessor)
  Fix for the 6 broken acceptance tests during the night build
  Gave test run script a more sensible name
  Added failing tag for Assessor broken tests
  INFUND-1280 improved thyme leaf template by cleaning up
  Small fix for error pages
  Ignoring python bytecode file
  text amends
  script to insert the database and then update it
  Fix for broken tests Assessment progress is 1 out of 4 Application Summary returns an error message when submitting empty feedback
  Start of a run script for Michael
  INFUND-1169 to INFUND-1173 text updates
  INFUND-1390 Added firefox profile with the ""focusmanager.testmode"" set to true
  update of testDataDump for test to remove finance figures so they can edit them
  Renaming test files
  Some more changes in finance section, assign-reassign and application form tests
  Added second assessor credentials
  Implemented a suite of running tests, called via the run_local2.sh script
  Fixed the validation test for the duration field
  ...
"
0349f3ee4e97a2608577773d81230b0f89d87305,InnovateUKGitHub/innovation-funding-service,"Merge pull request #697 in IFS/innovation-funding-service from bugfix/IFS-3405-link-errors-in-summary-to-field-in-academic-finances to development

* commit 'd71d38ce46f5f019e02a80817570b641cb722f82': (49 commits)
  IFS-3405 - Addressing PR comments. markSectionAsComplete check moved out of handlers, new instance of ValidationMessages added, isSaveAndReturnRequest added to fix issue with save and return validating fields.
  IFS-3405 Update AT's
  IFS-3405 Update AT's
  IFS-3405 - Static updated to make use of util.
  IFS-3405 - Addressing PR comments. Variable name change, method name update to camel case and if statement moved into a different method.
  IFS-3405 - getCurrenlyLoggedInUser returned, Autowired removed.
  IFS-3405 - Addressing PR comments. Variable named updated to be clearer.
  IFS-3405 - Update to markSectionAsComplete request, new AcademicFinanceHandler moved down & new extracted method validateLong added.
  IFS-3405 - dataServiceError returned to error.
  IFS-3405 - Refactor of financeFileIsEmpty
  IFS-3405 - AcademicJesValidator and test deleted.
  IFS-3405 - Addressing PR comments: Variable name change.
  IFS-3405 - NON_DECIMAL_FIELD updated to TSB_REFERENCE.
  IFS-3405 - TSB reference field added to condition.
  IFS-3405 Buttons working as expected
  IFS-3405 - PR comments addressed. Primitive longs added and Je-S fragment name and comment updated.
  IFS-3405 - Addressing PR comments. Added primitives, removed word test from unit tests.
  IFS-3405 Save and Return button working now
  IFS-3405 - Check for TSB reference field added to conditional.
  IFS-3405 - Fix for TSB reference field populating data.
  ...
"
c6e8c93234d2a1b5e9b8891f3bb1b6bd2f84ccfc,InnovateUKGitHub/innovation-funding-service,"Merge pull request #173 in IFS/innovation-funding-service from feature/INFUND-2694-simplify-lambdas to development

* commit '0d0adadb0c1dce977df163e692bbcc6ce414d9fe':
  Refactoring. TestSuits names should not contain spaces, so that they can be run by terminal
  INFUND-2694 Simplify Lambdas Reducing the lambda expression number of lines
  INFUND-2694 Simplify Lambdas SonarCube issues
  INFUND-2694 Simplify Lambdas SonarCube issue L74 L83
  INFUND-2694 Simplify Lambdas SonarCube issue L80
  INFUND-2694 Simplify Lambdas Small fixes and refactoring
  Fixing merging issues
  INFUND-2694 Simplify Lambdas Quick fix for method signature
  INFUND-2694 Simplify Lambdas SonarCube issue 278
  INFUND-2694 Simplify Lambdas SonarCube issue L166
  INFUND-2694 Simplify Lambdas SonarCube issue L127
  INFUND-2694 Simplify Lambdas SonarCube issue L90
  INFUND-2694 Simplify Lambdas Issue L127 SonarCube
  INFUND-2694 Simplify Lambdas Syntax fix
  INFUND-2694 Simplify Lambdas Issue L278 SonarCube
"
60d41f9d5e8562ad52de376993237b4533adef0f,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/IFS-3081-zdd-cleanup-from-ifs-2564-and-ifs-2565-via-ifs-3032
"
f3b4dba299628a4473f823793e655545a416424d,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into feature/INFUND-2694-simplify-lambdas
"
c8b639c0258de56824fb286b93054cd1380375d3,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into feature/INFUND-2694-simplify-lambdas
"
f9860cfa7ac4690450c0681bc839f897a7ac1ba3,InnovateUKGitHub/innovation-funding-service,"Merge pull request #256 in IFS/innovation-funding-service from feature/INFUND-3949-support-project-manager-with-project-users-table to development

* commit '628b26df6a35847e4badebbdafcac6fbdb5a6d61':
  INFUND-3949 - merging dev back into PR as branch was stale
  INFUND-3949 - titied code
  INFUND-3949 - amended ids in patch
  INFUND-3949 - added migration patches to create already-existing PMs in the project_user table before deleting the project_manager column from project
  INFUND-3949 - altered code to use project user table rather than process role for PM, and some cleanup of other code
  INFUND-3949 - altered code to use project user table rather than process role for PM, and some cleanup of other code
"
46048adf3b30d51fca53b9706caef3a5e7087ff0,InnovateUKGitHub/innovation-funding-service,"Merge pull request #524 in IFS/innovation-funding-service from feature/INFUND-5195-data-tier-support-for-user-profile to development

* commit '995f49fc5762a92a127a037ae14c3a3230c172a9 [formerly 2d2f84dfea90b5c5f2af00953536dab4b13f5552]':
  INFUND-5195 - Fixes Contract annex mapping and ContractBuilderTest.
  INFUND-5195 - Renames appendices on Contract to annexes an adds annex 3.
  INFUND-5195 - renumber flyway patch.
  INFUND-5195 - renumber flyway patch.
  INFUND-5195 - Adds Profile and Contract entities to the data tier. ContractRepository, builders and tests. Implements Spring Data JPA Auditing. Adds BaseAuthenticationAwareIntegrationTest to provide common authentication methods to integration tests.


Former-commit-id: 7d5d91256bd1b8bc2a95e8993a08a57396f86fdb"
f36ba1a53f4a663c8c3f84fe581a6a2eb9f94516,InnovateUKGitHub/innovation-funding-service,"Merge pull request #41 in IFS/innovation-funding-service from feature/IFS-2782-assign-applications-to-interview-panel-send-invites to development

* commit '3afc29dd7d3de87ae5ffe9acd066f3915dd5ca95':
  IFS-2782 content fixes.
  IFS-2782 code tidy
  IFS-2782 adding missing novalidate from form.
  IFS-2782 Fixing validation issue.
  IFS-2782 adding error styling to subject.
  IFS-2782 fixing issues with invite applicant.
  IFS-2782 addressed comments
  IFS-2782 added steps to cancel sending email
  Fixing compliation error.
  IFS-2782 adding missing line break.
  IFS-2782 moving email template.
  IFS-2782 Added Ats for sent invite
  IFS-2782 fixing template links.
  IFS-2782 fixing unit tests.
  IFS-2782 using workflow handler.
  IFS-2782 Addressing review comments.
  IFS-2782 updating javadoc.
  IFS-2782 Sending interview invites to applicants complete.
  IFS-2782 working on post endpoint for send application invite.
  IFS-2782 adding new controller for send applicant invite and renaming interview endpoints.
"
e89745eea04fac40d4a4bf7d748125d6c4e721b5,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into development

* 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service:
  INFUND-1680 removing general call and only have it where it is necessary which is on the summary page
  INFUND-1612 - manually adding in CostItem return type after merge confilct
  INFUND-1612 - manually adding in CostItem return type after merge confilct
  INFUND-1612 - extracting CostController logic into service and pushing rest results up stack
  INFUND-1612 - pushing rest failures up into web layer for invites code
  INFUND-1612 - adding serviceresult returns to rest of inviteservice
  INFUND-1162 - extracting Invites code to services after removing ResourceEnvelopes
  INFUND-1162 - removed ResourceEnvelopes fom codebase
"
8756ee9a406f86d2151dc955ca0a3db571b9446a,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of ssh://git.devops.innovateuk.org/ifs/innovation-funding-service into feature/IFS-4160-zdd-cleanup-for-ifs-3622
"
fd09690042fa8f4044b2ebfcb34031ef27660a22,InnovateUKGitHub/innovation-funding-service,"INFUND-4581 Refactor non JS


Former-commit-id: 91537c2cf25bf6248131992e04647f5b039c0af4"
1d05e890719f0dcade4e9fa6408fe809debff6fe,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2312 in IFS/innovation-funding-service from feature/IFS-222-Project-Details-Refactor to development

* commit '902c6469dc698983341988d90b08a0adba948044': (21 commits)
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  IFS-222-Project-Details-Refactor
  ...
"
3c937d03481d343f5388882f00c060931352b396,InnovateUKGitHub/innovation-funding-service,"INFUND-9231 Replacing service methods in ifs-web-core in favour of calling rest services directly where service methods add no extra behaviour.
"
09ed159d007d900780b861e8c8b2b02587056985,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch
"
8ea83cd04a03bed61862f366724cf3231dfad44c,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2262 in IFS/innovation-funding-service from feature/INFUND-8747-new-dataservice-for-application to development

* commit '2db4372a0e6502a89b39211ae4684e31324bc6a6': (42 commits)
  INFUND-8747 Fix for readonly mode
  INFUND-8747 Fix failing organisation size
  INFUND-8747 Fix for readonly mode
  INFUND-8747 Fix for project costs
  INFUND-8747 Fixing acc tests failures in templates
  INFUND-8747 Fixing failing acc tests
  INFUND-8747 Fixing some acc failures
  update keyword expecting 6 arguments
  INFUND-8747 Tiding up
  INFUND-8747 fixing template expression.
  INFUND-8747 addressing review comments.
  INFUND-8747 Removed unused TODO.
  INFUND-8747 Addressing comments.
  INFUND-8747 fixing more acc tests
  INFUND-8747 fixing acceptance tests.
  INFUND-8747 ready fixed unit tests.
  INFUND-8747 fixing template after merge conflicts.
  INFUND-8747 Fixed unit tests.
  INFUND-8747 cleaning up template.
  INFUND-8747 adding unit test.
  ...
"
89877001f2e4b3696e68ed1f70ba5758f5dff7ed,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2071 in IFS/innovation-funding-service from bugfix/INFUND-9255-create-spendprofilecontroller to development

* commit '15ead217ab4f388ad0faf538e22c1950a2e239f3':
  addressing PR comments
  Removing comment
  moving more code holding SpendProfile logic to a project.spendprofile.* package and decoupling some code.
  fixing broken verify(cations) at ProjectSpendProfileControllerTest.
  splitting 'SpendProfile' logic from ProjectFinances components across the rest and web side of the project.
  moving the new `SpendProfileController` from `org.innovateuk.ifs.project.financecheck.controller` to `org.innovateuk.ifs.project.spendprofile.controller`. Same for its test and documentation.
  INFUND-9255 refactoring - adding SpendProfileControllerDocumentation (now having all unit tests passing)
  INFUND-9255 refactoring
"
c5c77541a08cf72b48aae008b8d05dedef3ccdda,InnovateUKGitHub/innovation-funding-service,"Merge pull request #549 in IFS/innovation-funding-service from feature/IFS-4175-replace-tabs-component-with-new-gds-tabs-component to development

* commit '38b08d5f75312afdbf6c8450e479909676caa6f8':
  IFS-4175 Fix merge conflict
  IFS-4175 Fix Support ATs. Remove commented out code
  IFS-4175 Fix acc tests
  IFS-4175 Fix acc test
  IFS-4175 Add new tabs to PSM
  IFS-4117 Uglify the JS
  IFS-4175 Add new tabs to comp management templates
  IFS-4175 Delete old tabs component. Add new markup to front door tabs. Add new markup to Comp management tabs
"
ac1dfa05d74be0a044a68e31f1cfea0ed587d3da,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into development

* 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service: (24 commits)
  Improvements in the ""Not in the company house"" test suite
  Adding extra validation checks to acceptance tests
  Improvements in the company house lookup test suite
  centralise content for prototype pages in ie8
  INFUND-917 further refactoring of finance
  INFUND-917 Refactoring finance code
  INFUND-1348 update to table
  INFUND-1570 dashboard updates
  INFUND-1571 comp dashboard
  INFUND-1967: Added acceptance test to check for this bug
  Ensuring that edit_profile_details.robot leaves the database in a good state
  Enabling virtual display browsing
  Minor changes to the run_tests_locally script
  Minor changes to the run_tests_locally script
  Update to prototype index pages
  INFUND-1348 open / closed applications
  Added arguments and reduced the number of the keywords in the Log-in test suite
  Updated test tags and comments
  Removed the pending tags from the ""Assign reassign"" test suite
  INFUND-1877 added the properties to the example dev build
  ...
"
a728f920b1d4b78459804e8edb1b6995ec68e06d,InnovateUKGitHub/innovation-funding-service,"Merge pull request #3027 in IFS/innovation-funding-service from feature/IFS-2639-expand-contract-queries-and-resolved-banner to development

* commit 'e663f388ef753cd01867321fc6f9c6eadabd3935': (53 commits)
  IFS-2639 - regenerated css and js after merge conflicts
  IFS-1987 Awaiting response link is renamed to View
  IFS-1987-Queries-Close-Conversation
  IFS-1987-Queries-Close-Conversation
  IFS-1987-Queries-Close-Conversation
  IFS-1987-Queries-Close-Conversation
  IFS-1987 HappyPath
  IFS-2639 - updated variable name for user, as per PR comments
  IFS-1987 Fix Review Comments. Applicant can see queries resolved
  IFS-1987 Fix selector
  IFS-1987 Fix small things
  IFS-1987 Pr Finance is able to mark query discussions as resolved.
  IFS-1987 Make The existing ATs green after the collapsible sections
  IFS-2639 - renamed user variables in test following PR comments
  IFS-1987 - adding classes back into the template for filter js to target
  IFS-1987 - regenereated javascript after merge conflict
  IFS-2639  Include Collapsible sections in the ATs. The ATs are no complete due to bug. Thus are not green with this commit, but is a step towards.
  IFS-1987-Queries-Close-Conversation
  IFS-1987 - cleaned up javascript rewrite
  IFS-1987 - added unique id usage to collapsible javascript to stop having to stash collapsible information against the page url, allowing it to remember collapsible state of an item across different pages
  ...
"
d03066587593a543960beeef28637a24c55b42a9,InnovateUKGitHub/innovation-funding-service,"INFUND-7745 robot test restructure


Former-commit-id: 2706eea902033d3d44db708479572f1fa0497951"
3c11d1b30d95bb8f85c5b0143168a44e0f19698b,InnovateUKGitHub/innovation-funding-service,"Merge pull request #132 in IFS/innovation-funding-service from bugfix/IFS-3140-uj-application-academic-finances-nan-client-side-validation to development

* commit 'bead6d04769348486f8c7ee6697496c28baa7c02':
  Remove screenshot capture, that was left for debugging
  IFS-3140 Remove check for negative numbers
  IFS-3140 Academic finances green
  IFS-3140 applicant commons
  IFS-3140 Academic finances green
  IFS-3140 Removing a file before uploading a new one
  IFS-3140 fix buttonlink
  IFS-3140 fix typo
  IFS-3140 Pushing half way my changes
  IFS-3140: change backend message to be equal to frontend message
  IFS-3140 Fix selector in Finance summary
  IFS-3140 firs attempt to fix the acc tests
  IFS-3140: fixed totals bug
  IFS-3140: making sure the error in summary is linked to a field
  Small refactoring, remove duplicate keyword
  IFS-3140: update from development
  IFS-3140: show error message when input field is text
  IFS-3140 Remove data-prevent-input-regex
  IFS-3140 Compile assets after removal of comments
  IFS-3140 Add pattern validation. Prevent user typing non-numeric characters. Add isNumeric check to javascript
"
6f3d90176d9def685c1033c8600131eb2c5b8c31,InnovateUKGitHub/innovation-funding-service,"Merge pull request #192 in IFS/innovation-funding-service from ifs-sil-resources to development

* commit 'fad90e739a5cd83e3af1faa50bc3857dbfe57dc4':
  moved compile dependency
  code tidy
  added task inputs to prepareDocker tasks
  ifs-security project created
  sil-resources project created
"
37bb5c8edef5b57daa98d233b367fd04f92ddb1a,InnovateUKGitHub/innovation-funding-service,"Merge pull request #694 in IFS/innovation-funding-service from feature/INFUND-3726-as-an-assessor-i-want-to-select to development

* commit '4d467ed37ba222c1d8d901b8c275da96da819db3 [formerly 5ef9129fd187f7d380a5464a26dd1c80eba4c470]':
  INFUND-3726 Dropping the Process Outcome order column, relying on sorting by identifier instead.
  INFUND-1180 Correcting link to invite view.
  INFUND-3726 Adding ProcessOutcomeBuilderTest.
  INFUND-3726 Updating assessor-competition-dashboard.html with correct state property names.
  INFUND-3726 Adding ProcessOutcomeResourceBuilderTest and adding state helpers to AssessorCompetitionDashboardApplicationViewModel.
  added status columns
  Changed link to button as there is no non-JS fallback page to link to here
  INFUND-3726 Reverting a change to add back in the abstract doExecute in BaseAssessmentAction. The overridden doExecute can be responsible for making the state change as well.
  INFUND-3726 Introducing new states and transitions in AssessmentWorkflow. Only showing submit checkbox on the Assessors competition dashboard if the application is ready to submit.
  fixed closed button
  updated view template to include checkboxes and confirm popup


Former-commit-id: d8bb3ed2ecf19ce363003eade5dad321b5ff6312"
15d57fcdaf13aa82582d0ef74e3e6d0252ffb6cb,InnovateUKGitHub/innovation-funding-service,"Merge pull request #406 in IFS/innovation-funding-service from feature/INFUND-3004 to development

* commit '6d35773abcc8200225338c7a7a1984f4414b0b9b [formerly 5e47bd38dd5342d0d601b7f30633500a25e29b69]':
  INFUND-3004 Update acc test, due to change in the divs
  INFUND-3876: Updated the test cases for the 'Ready to open' tests
  INFUND-3004 Fixed search template
  Updating the 'HappyPath' tags for 'Create competition' test suite
  Fixed the ""Application questions"" test
  INFUND-4247: added an extra test tag
  INFUND-3004 removing setupComplete property from competition resource.
  INFUND-3004 Renaming again.
  INFUND-3004 Renaming migration sql.
  INFUND-3004 Refactored Competition statuses to automatically open.


Former-commit-id: 463143f8defafbeb37e5b44f84fabb484ad61d3b"
3f9b6ada8514623efce954011c4f9b5d87c091f2,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into PS-AT-refactoring
"
790bec455366690132a8e9cbd0cb64e74a0c0d5d,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into development

* 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service: (29 commits)
  INFUND-1042 Added the line that wasn't there earlier
  INFUND-784: Acceptance test for the Finance summary
  INFUND-1503 && INFUND-1435  fixed some small mistakes that happened if you deleted all of the removed fields.
  Implemented the 'materials' test in order to test the fix of the infund-1503
  INFUND-863 assigning assessors
  improved accessibility by making the hundred field that is being used by finances type=""hidden"".
  Small accessibility improvements
  INFUND-821 final changes
  INFUND-957 css for 957 and some small tweaks
  INFUND-957 When you submit the form by pressing the enter button, the first submit-button is used. (might be a re-assign)
  INFUND-1279 : Acceptance test: Edit profile details and Added a new global variable - ${EDIT_PROFILE_URL}    ${SERVER}/profile/edit
  INFUND-1503 The users gets alerts when the page is reloaded
  INFUND-1503 The users gets alerts when the page is reloaded
  INFUND-1503 The users gets alerts when the page is reloaded
  INFUND-1170 text changes
  INFUND-1018 - Created resources, controller and service for persisting invites
  INFUND-1018 - Flyway migration script added for Invite and InviteOrganisation tables
  INFUND-524 - Some code review changes
  INFUND-1018 - Introduced Invite and InviteOrganisation entities for persisting collaborator invitations
  Fixes for the other_funding_section
  ...

# Conflicts:
#	ifs-web-service/src/main/java/com/worth/ifs/application/finance/model/OrganisationFinance.java
"
fdc6e1de33708e53f387a17497ff8dcf50a76825,InnovateUKGitHub/innovation-funding-service,"IFS-3823: first cleanup user service and inviteservice
"
a561a2503cf89e06f9248dd5a27b9ef413856bb9,InnovateUKGitHub/innovation-funding-service,"Merge remote-tracking branch 'origin/feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch


Former-commit-id: 317741882338a7dc8e527f9459d30129bbb56451"
f3a1d978213293bd089a500894eaee6f7a99305a,InnovateUKGitHub/innovation-funding-service,"Merge pull request #252 in IFS/innovation-funding-service from bugfix/INFUND-3760-comp-summary-performance to acceptance

* commit '9705f3f4b9bc8dfddb2af1ffd287044860e10b76':
  INFUND-3760 change double to Decimal(5,2) and various other PR fixes
  INFUND-3760 being consistent with the scale
  INFUND-3760 remove extra migration and minor cleanup
  INFUND-3760 make the unit tests and integration tests pass again
  INFUND-3760 quick fix for slow progress calls
"
6152e040b247b5105723cc5c53386a81061bfdca,InnovateUKGitHub/innovation-funding-service,"Improved styling for finance components
"
ed1831dc02a95310507c71194449d2c9a531359f,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1722 in IFS/innovation-funding-service from bugfix/INFUND-8538-weak-input-validation to development

* commit '9f859babcab8ba83fc5154110281ebea72c0fddb [formerly 88a02fb879b533b26702d31197fdd5f182adef32]':
  INFUND-8538 Updated script number
  INFUND-8583 Review Comments
  INFUND-8538 - Content review of error messages.
  INFUND-8538 - Review comments.
  INFUND-8538 - Review comments.
  INFUND-8538 - Review comments.
  INFUND-8538 - Increased patch number.
  INFUND-8538 - Further tests and database patch to add validators to assessor inputs.
  INFUND-8538 - Changed AssessorFormInputService to use FormValidators.
  INFUND-8538 - Fixed failing tests.
  INFUND-8538 - Proposed fix for input validation.


Former-commit-id: eb1fb72a23f26c517ae8c247e8c3c36b28c1848b"
92abf0f38062197cc95544cebc6c7eef15dc7785,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into bugfix/INFUND-4702-populate-short-name-field-of


Former-commit-id: 848cf5833fc12e771708850c370049e4975fc3c8"
3793c17de6113c57c30902fff6cf0c1f32dc6b49,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2206 in IFS/innovation-funding-service from feature/branch-to-resolve-conflict-with-acc to development

* commit '1f31138d2e2bc2681ca6c68ce3a2a51957606837': (38 commits)
  Resolved deploy-functions merge conflict.
  [Gradle Release Plugin] - Preparing new release version:  '1.1.1-SNAPSHOT'.
  [Gradle Release Plugin] - Performing release:  '1.1.0-RC3'.
  Refactor build script for new naming convention of shib in prod
  INFUND-9392 remove profile execution annotation from controller
  INFUND-9392 remove profile execution annotation from controller
  INFUND-9392 making email reset service async
  Only use one IDP container for all environments.
  Shib memory upgraded.
  INFUND-9393-Submitted-App-Still-Team-Pages
  INFUND-9393-Submitted-App-Still-Team-Pages
  INFUND-9393-Submitted-App-Still-Team-Pages
  INFUND-9202 Moved Tomcat log directory to standard location (/var/log/tomcat) instead of root; updated comments.
  INFUND-9393-Submitted-App-Still-Team-Pages
  INFUND-9393-Submitted-App-Still-Team-Pages
  INFUND-9393-Submitted-App-Still-Team-Pages
  INFUND-9393-Submitted-App-Still-Team-Pages
  production idp upgrade to include GA
  INFUND-9390 add permissions rule for access to public content item
  INFUND-9405 Modified search signature in controller for default search.
  ...
"
70a991aa59e6017d45b38e20b85519091fe3fc21,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2507 in IFS/innovation-funding-service from feature/IFS-984-Innovation-Lead-User-Journey-Changes to development

* commit '609ec9a8ae6951c6c8e81fc5ec0a05ec855611e1':
  Added checks to not see few buttons
  IFS-984 Andy's comments on ticket addressed, buttons for inform and reinstating applications removed for readonly mode
  IFS-984 Adding unit tests
  IFS-994 Added ATs for story IFS-984
  IFS-1028 Allow support user to see application summary totals
  IFS-1028 Fixed issue with amounts showing as 0 for innolead and support
  IFS-984 removed link to assessor invite page for inno lead user as well.  Fixed some unit tests
  IFS-984 updating test code to match changes to constructors
  IFS-984 Made all view model and link navigation changes as per the ticket.  Excepting any assessor pages which is going to be reworked by BAs
"
af6d9bfb1c5adb7418a636b971eae061b6387bbb,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into feature/INFUND-844-as-an-applicant-i-want-to-receive

* development: (32 commits)
  INFUND-2551 Removed ""innovate uk"" quotes and changed body class of terms and conditions
  Tagged two tests cases as pending due to INFUND-2568
  INFUND-2456   Create a new template for the static content.
  INFUND-2497:Acceptance tests for the Password validations
  INFUND-1633 widening permissions for reading finance totals
  INFUND-1592 updated links
  INFUND-2562 Forgot compiled js
  INFUND-2562 Wrong password validation message + made messaging consistent to the shib validation
  Fixing failing tests
  INFUND-1592 updating numbers for spend too high
  INFUND-1633 fix to update cost permissions
  INFUND-2555 - documenting NotSecured methods
  INFUND-1633 refactor allowing mutliple lookup strategies for a particular permissioned object type
  INFUND-2258 make password reset and update details POST only
  INFUND-2555 - adding comments to BaseSecurityServiceTest
  INFUND-2555 - added csv output for service method to permission rule mappings
  INFUND-1633 refactor before changing functionality of lookup strategies
  INFUND-2555 - made all inner test services public for recording purposes
  INFUND-2555 - added recording proxies for service calls AND permission rules
  INFUND-1633 delete permission rules;
  ...

# Conflicts:
#	ifs-data-service/src/main/java/com/worth/ifs/finance/transactional/CostService.java
#	ifs-data-service/src/test/java/com/worth/ifs/finance/service/CostServiceSecurityTest.java
"
cd31724b19fcb594bfae19660d38f80adafa7548,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1378 in IFS/innovation-funding-service from feature/INFUND-7745-restructure-the-robot-files to robot-test-factory

* commit 'd03066587593a543960beeef28637a24c55b42a9 [formerly 2706eea902033d3d44db708479572f1fa0497951]':
  INFUND-7745 robot test restructure


Former-commit-id: 344e3551915f50e8640c585db32a2c2744b76a1a"
2cbff3743dac7a449bb7723eaa9212b4c068c88d,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into feature/IFS-713-remove-unused-getmappings-in-application-service
"
a0bb9caaa222aa163c751c641e7ff9253ee0d1c5,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into development

* 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service:
  Updating Failing tags
  INFUND-1633 dealing with null values in permissions model
  INFUND-1281: More than one application per user
  SHIB: Fix for broken font URL
  INFUND-1633 fix for null pointers in the invite permissions
  INFUND-1633 removing the new TODOs on the cost service and changing the CustomPermissionsEvaluator to be able to deal with subclasses
  Refactoring invite contributors test suite
  INFUND-1633 aggregation of service and rest results
  Refactoring invite contributors test suite
  Resurrecting some old tests
  Adding validation to the test counting script
  Updating tags in the submit section
"
5fdb9f93b78f13938c9d52a98caf59989b32bd6e,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/IFS-141-front-door-microservice' into feature/IFS-141-front-door-microservice-data-refactor
"
6079f2716e4e9b5b33a9fec699d1dd58220077ed,InnovateUKGitHub/innovation-funding-service,"INFUND-4537 - Rename InviteStatusConstants -> InviteStatus to make the intent clearer.


Former-commit-id: e2864283a43f4994a0d80df011ee1e8da5d06f7e"
bf15425d2c0b9015ca0a2ac6cbcc472b9ada975d,InnovateUKGitHub/innovation-funding-service,"INFUND-3977: Refactoring emails
"
1660ebf0d08e9629b09bb5e6ee203e517b72fe4a,InnovateUKGitHub/innovation-funding-service,"general code cleanup: removed all custom equals implementations in favour of using equals builder and hashcode builder from apache commons
"
fec3e48acb68d88d6d26caf173dd788e184d5217,InnovateUKGitHub/innovation-funding-service,"Merge pull request #139 in IFS/innovation-funding-service from feature/INFUND-2982-create-a-competition-step-1-initial to feature/CompetitionSetup

* commit '9243114ec842217fda1b7afa3859a7f074bc41d3': (78 commits)
  INFUND-2982 Competition type
  INFUND-2982 Competition type resource builder extended
  INFUND-2982 adding javadoc to newly created classes
  INFUND-2982 refactoring for testability, separate services for populating forms and saving data for each section of competition setup
  INFUND-2982 refactor, persisting (in)complete sections for setup against competitions
  INFUND-2982 restructuring the competition setup sections.
  INFUND-3042: Adding some checks in the acc tests of the competition setup
  INFUND-3044, INFUND-3043, INFUND-3042, INFUND-3041
  INFUND-2982 Refactoring method of CategoryLinkService
  INFUND-2982 Category and CategoryLink repository unit tests
  INFUND-2982 CategoryService & CategoryLinkService Unit test
  INFUND-2982 Additional comments on class
  INFUND-2982 Rest documentation + unit test for category
  INFUND-2982 Competition setup controllers tests
  INFUND-3058 Controller test
  INFUND-2945 fixing prototype styling
  INFUND-2945 null check also checking for empty string
  INFUND-2945 As a Competition Executive I want to be able to create a new competition from the Competitions Dashboard so Innovate UK can create a new competition.
  INFUND-2982 Initial step 1 - styling & client side validation
  INFUND-2982 Reworked competition setup to have ""please select....""
  ...
"
8d694e3cdf32661f25edbc7c979e5e838209aeae,InnovateUKGitHub/innovation-funding-service,"INFUND-3967 Adding view of the appendix response (if any) to the Assessment Feedback view. Also refactoring view models to not use the Resource types where possible. Creating AssessmentFeedbackApplicationDetailsModelPopulator, AssessmentFeedbackModelPopulator, and AssessmentFeedbackNavigationModelPopulator to populate the view models.
"
05dc67a0cb205040ee051d105e3931049194dc16,InnovateUKGitHub/innovation-funding-service,"#9256-renaming GOL classes to make it consistent
"
b80305a3a80606b0ae2d1715abfb10991f0e380a,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch


Former-commit-id: 1356ed3555c67e2e185dee2af03c907a9c189e5a"
5c2998512152e94991248174a14b842b0e322b4e,InnovateUKGitHub/innovation-funding-service,"INFUND-3183, fixed the styling bug and a lot of other front-end stuff:

- Removed the double js/no-js button, is bad for a11y and not necessary
- Removed javascript hide/show that isn't necessary, we've got a body class
- Did some styling for the save button
- Notify applicants is still in the left info container, even without javascript
- Did button styling for buttons in the left info container
- Fixed INFUND-3218 The ""Notify"" button should be green
- small cleanup of html
"
dd9e149868d0fd7279c2d9afa28352cb7ac432a0,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2086 in IFS/innovation-funding-service from feature/INFUND-9189-Package-Refactoring-MO to development

* commit 'f44d0fa04504a7b13b8ffe3c1970797df16698c4': (21 commits)
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  INFUND-9189-Package-Refactoring-MO
  ...
"
c2079cad28bc12b541c87047c1d00d4037060428,department-of-veterans-affairs/vets-website,"Reorder imports and add additional ones, include overrides until we can permanently integrate usds, and clean up form organization
"
87c411f7728c25ee11374bc4c32a471966583aa2,department-of-veterans-affairs/vets-website,"Prevent use of @extend in SCSS.

Closes department-of-veterans-affairs/vets.gov-team#1903

  - Upgraded sass-lint to 1.10.2

Other changes to sass-lint configuration

  - Add verbose, no-exit options so that linter displays errors
  - Enforce double quotes for strings
    - Updated SCSS files to use double quotes instead of single quotes
  - Modified mixin rule to allow use of some mixins before declarations
  - Updated SCSS files to use double quotes instead of single quotes
  - Disallow color literals
    - Consolidated colors and added variables to account for one-offs
  - Disallow trailing white space (and removed trailing white space)
  - Enforce space after colon (and added spaces after colons)
  - Disallow space before colon
"
54c27e642551d3569220bebe7ce888483eb9fe5b,department-of-veterans-affairs/vets-website,"Add benefit selection to 1990e (#5015)

* Add benefit selection

* Update vets-json-schema version

* Fix shrinkwrap

* Share benefitsLabels

* Adds tests

* Change helpers extension

* Remove .js extension from helper imports

* Import benefitsLabels from the right place

* Remove second onSubmit() call
"
375e4594c3177b0f4bd46f186a79a947b71d4a28,department-of-veterans-affairs/vets-website,"Spacing changes to reflect semantics of markup (#6780)

* Change to include to USWDS typography

* Spruce up HTML to match USWDS markup

* Bump uswds to 1.4.2

* Change USWDS import order

* Add Bitter

* Add Bitter

* Fix Bitter not showing up

* Remove reference to Roboto Slab

* Define bold Bitter

* Remove font-size on .feature

* Consolidate header style for process steps

* Remove commented code

* Fix h6 style

* Remove margin-top on h1

* add a comment

* Remove margin top from modal titles

* remove margin-top from header sign-in modal

* Switch header to usa-font-lead

* Remove margin-bottom on tabs

* Default table width to 100%

* Sprucing up GI profile page

* Use sans-serif font on search results cards

* FIxing margin-top problems

* Remove margin-top from alert heading

* Fixes for alert dialog headings margin-top

* Remove borderless table class

* H6 adjustments

* Move font-faces into their own file

* Add usa-font-lead styles to va-introtext

* Add borderless tables back

* Remove top margins

* Remove margin top

* Switch to load bitter locally
"
01ae18c0e4d0e1ba670972fed7797bc147ef52f2,department-of-veterans-affairs/vets-website,"Prescriptions tests (#2865)

* scaffold rx tests

* begin adding shallowrender tests to rx

* remove isRequired for boolean value, because react defaults to true by convention

* add reducer test, clean up component test

* clean up AlertBox tests

* add e2e test for rx.  this is still breaking because of an es6 issue

* remove fake data from history,jsx.  remove faker from package.json.

* adding mock api for rx-tests

* add fetch polyfill.  also introduce a snippet for debugging phantomjs

* add passing tests

* fix typo in nightwatch config

* fix tab

* use two words intead of five words
"
fa3e5805aa10f16a1eb2d567f3abadd60a1d7da5,department-of-veterans-affairs/vets-website,"Appealsv2 alert content mg (#7139)

* Update Alerts to segment take action and info alerts

* Update alert helper to output descriptions in jsx, add displayType property to all

* Lift content-getter logic up to Alerts controller, implement support for ordered alert display types

* Update style to remove alert icons and realign content

* Add more alerts to mock data

* Refactor alert component to abstract away css class implementation, add displayType

* pass displayType prop to alert component

* Remove css class as concern of helper (moved to alert component instead)

* Update comments in helper

* Remove cssClass property from alert helper

* Remove old console log

* Update alert types, alert content

* Update mock data to use new alert types

* Update tests

* lint fix

* left-align take action heading with alert boxes, make alert box padding equal

* Update Alert proptypes

* Rename Alerts to AlertsList

* Remove whitespace from scss lint

* Remove unnecessary empty defaultProp
"
b19d67741eaedda446d763fc06c67ecc250f9426,department-of-veterans-affairs/vets-website,"Upgrade node 6.10.3 -> 6.11.1

Heroku notified us of a node vulnerability
(https://nodejs.org/en/blog/vulnerability/july-2017-security-releases/).
It doesn't appear that this causes any direct issue for our users, but
can affect review applications (and potentially review instances).

Accompanies
https://github.com/department-of-veterans-affairs/devops/pull/1789
"
da0a9e1876360f7490ac93b48fb70c61e7570412,department-of-veterans-affairs/vets-website,"Launch V1 of top-level navigation

Closes department-of-veterans-affairs/vets.gov-team#593

- Updated Veterans Crisis line styles (closes department-of-veterans-affairs/vets.gov-team#991)
- Rewrote crisis line media queries to use USWDS media mix-in
- Updated mobile search button design (closes department-of-veterans-affairs/vets.gov-team#994)
"
166b3268560c3fd217226bd06bb40779b0716977,department-of-veterans-affairs/vets-website,"Split military screens on edu benefits (#3539)

"
4b1b841dc0ef0bd6179a8e13e6e247edc9dd77cd,department-of-veterans-affairs/vets-website,"Rx View History Page (#2921)

* Split loading of prescriptions between Active and History tabs.

* First pass at table in history view.

* Stubbed out sorting mechanism for table.

* Moved SortableTable component to table folder.

* First pass at getting table in history view to sort.

* Consolidated loadAllRx and loadActiveRx. Renamed prescription action creators as loadPrescription(s) because loadRxs looks weird.

* Fixed code that got pushed into one line.

* Construct the query string, including pagination, in fetching of Rx collection.

* Removed some debugging code.

* Made queries variable const since it's never reassigned.

* downgrade webpack-dev-server and fall back to old rewrite

* Whitespace removal.

* Added functionality to switch sort orders on history page.

* Removing actionableContent const from Prescription.jsx

* Adding an id property to submit button.

* Incorporating sortOptions change. Should fix merge conflict.

* Split loading of prescriptions between Active and History tabs.

* First pass at table in history view.

* Stubbed out sorting mechanism for table.

* Moved SortableTable component to table folder.

* First pass at getting table in history view to sort.

* downgrade webpack-dev-server and fall back to old rewrite

* Consolidated loadAllRx and loadActiveRx. Renamed prescription action creators as loadPrescription(s) because loadRxs looks weird.

* Fixed code that got pushed into one line.

* Construct the query string, including pagination, in fetching of Rx collection.

* Removed some debugging code.

* Made queries variable const since it's never reassigned.

* Whitespace removal.

* Added functionality to switch sort orders on history page.

* Incorporating sortOptions change. Should fix merge conflict.

* Moved history view state into its own object in prescriptions reducer.

* Table in history view collapses into a list in smaller screen.

* Quick fix to load data from API in kebab-case. Will change it later to read keys in camel case.

* Added currentSort to prop type validation to SortableTable. Added spacing between header and sort arrow.

* Shared collapsible table list styles between OrderHistory table in Detail page and table in History page.

* Renamed CSS class.

* Added links for detail page and glossary modal in table in history view.

* Styling changes for history view table. No bottom border and no text decoration on links to detail page.

* Added fill date to history view.

* Added sort menu dropdown in mobile version of history view.
"
2fe2651618add3f372b9e4e533a1957e3bfaa3db,department-of-veterans-affairs/vets-website,"Refactored redirects to fix Redux errors about dispatching from reducers.
"
71bd4a84cb7094de5a70f58c87149bda3f485c70,department-of-veterans-affairs/vets-website,"[WIP] housing-assistance (#5242)

* stubbing out housing assistance pages

* updating Apply file name

* housing assistance index pour

index housing assistance copy - please review!

* poured content for home loans

Note use of PK coding - these should be cards but coding was not included in the page layout. Please advise.

* poured content for va-backed loans

* changing ""adaptive housing"" from PK to Card

* poured content for purchase loan

outstanding: callout box and callout button info from copy deck

* poured content for NADL

outstanding: button from copy deck

* poured content for IRRRL

can we check line 67? no ** in copy deck but I noticed all other steps have bolded content to lead

* poured content for cash-out refinance loan

outstanding: button (apply for CEO)

* fixing bullet md

* fixing piano keys

* fixing piano keys

* fixing link

changed /housing-assistance/home-loans/apply-for-coe to /housing-assistance/home-loans/apply-for-certificate-of-eligibility

* Adding back slashes to links

* Pouring in content

* Pouring in content

* updating template

* Pouring in content

* working on table

* updating service-connected disability definition

* updating template

* Add list formatting to table

* pouring in content

* ready for beth

- Added missing period in first piano key
- Added template
Note: Alignment of page is off

* ready for Beth

- fixed description of third piano key

Beth: Can you give me your thoughts on the final link on this page?
[Learn more about VA-backed home loans](http://www.benefits.va.gov/home-loans/).

The link is broke and I'm wondering why we wanted to link here and if there's somewhere else we should link to?

* updating template

* updating template

* updating template

* updating template

* adding tables

* Update eligibility table formatting

* fixing template

* fixing template

* fixing template

* fixing template

* fixing template

* fixing template

* fixing template

* fixing template

* removing blue box

* adding button and fixing title

Beth:  few things here:

1) The www.benefits.va.gov/home-loans/ link appears to be broken. Let's call this out to SMEs and ask about a redirect. 
2) Made the video links calls to action and added to ""If you need more help:"" links because that seemed like a good fit (rather than a right-column callout). Let me know if you disagree.
3) We have in the deck that there should be an ""Apply for your COE"" button callout. I'll ask Rachael about adding this. Thanks!

* fixing piano key title

* fixing piano key title

* fixing subway map

* update

* adding <br> in blue box

* fixing subway map

* updating card title to match apply for coe page

* adding <br> and fixing link

* Proof: housing-assistance-landing page

* Proof: adaptive-housing-grants

* Update bullet formatting

* Proof: home-loans

* Proof: va-backed-loans

* Proof: purchase-loan

* Proof 2: purchase-loan

* Proof: cash-out-refinance

* Housing callouts (#5409)

* adding logic for housing callout

* updating template for callouts

* updating from md to html

* Proof 2: cash-out-refinance

* updating callout

* Proof: nadl

* Proof: irrrl

* Proof: trouble-making-payments

* Proof 2: trouble-making-payments

* Move service requirements into accordions

* Proof: eligibility

* Proof 2: eligibility

* Proof: apply-for-certificate-of-eligibility

* fixed capping in piano keys: va-backed-loans

* Change COE table to plain text

* Add green apply button to COE page

* Add headings + green apply button to cash out page

* Add green apply button to eligibility page

* Headings and green apply button on purchase loan

* Add green apply button to NADL

* revert button links to COE to text links

* housing template updates

* Change text links in Apply for COE to relatedlinks

* Updated text on related links

* Added text to relatedlinks

* Restored text for related links

* SME feedback: va-backed-loans

* SME feedback: apply-for-certificate-of-eligibility

* SME feedback: trouble-making-payments

* SME feedback: trouble-making-payments

* SME feedback: trouble-making-payments

* SME feedback: trouble-making-payments

* SME feedback: trouble-making-payments

* Update process list classes on apply for COE page

* Revert to remove duplicate links on apply COE page

* SME feedback: va-backed-loans

* SME feedback: purchase-loan

* SME feedback: purchase-loan

* SME feedback: purchase-loan

* SME feedback: irrrl

* Updates based on SME changes

* Updating filename per slack

* updating URLS per filename change

* Updating folder name to match content change

* updating per SME changes to NADL option

* updates based on SME feedback to NADL option

* updates based on SME feedback to NADL option

* updates based on SME feedback to NADL option

* updating loan limit $ per va.gov

Beth: As I was looking into the loan limit info per SME feedback, I saw that the $ had been updated for 2017. So I've updated it here. It's now $424,100 (up from $417,000).

* updating loan limit $ per Va.gov

Beth: As I was looking into the loan limit information on VA.gov, I noticed that it's been updated for 2017. It's now $424,100 (up from $417,000). I've updated here to match.

* adding loan limit bullet per SME feedback

* adding loan limit bullet per SME feedback

* adding sentence re: loan limits per SME feedback

* updating per SME feedback

Beth: Here, I needed to walk a line with the SME feedback on ""because of the VA partial guarantee..."" because of the fact that we've added ""VA direct and VA-backed home loans."" So I've revised to say ""But you may be offered better loan terms than with a traditional loan from a private bank or mortgage company."" And then will address full SME comment on the ""Loan Options"" page within VA-backed loans.

* updates per SME feedback

* Create loan-options.md

* adding related links header

Beth: Tried to differentiate this header a little from the main page title.

* updates per SME feedback on NADL option

* 1 last update per SME feedback

* SME feedback: cash-out-refinance

* SME feedback: adaptive-housing-grants

* SME feedback: housing-assistance landing page

* SME feedback: adaptive-housing-grants

* SME feedback: nadl

* Add accordions to COE page

* Added text above new accordions: apply-for-coe

* Adjusting accordion text: apply-for-coe

* Formatting tweaks to accordions: apply-for-coe

* Final proof: adaptive-housing-grants

* Final proof: apply-for-certificate-of-eligibility

Changed eBenefits link to bring Vets to a more specific page rather than the general landing page.

* Final proof: eligibility

* Final proof: loan-options

* Final proof: nadl

* Final proof: purchase-loan

* Update loan-options collection to point to new URL

* Proof: loan-options

* Final proof: home-loans

* incorporating SME round 2 change

* Incorporating SME round 2 change

* Incorporating SME Round 2 comment

* Incorporating SME Round 2 changes

* Incorporating SME Round 2 changes

* Incorporating SME Round 2 changes

* Incorporating SME Round 2 changes

* Incorporating SME Round 2 changes

* Incorporating SME Round 2 changes

* Incorporating additional SME Round 2 feedback

* Incorporating additional SME Round 2 changes

* Incorporating additional SME Round 2 changes

* Incorporating SME Round 2 changes

* Fixing changes after heroku preview

* Updates post heroku preview

* Incorporating SME Round 2 changes

* Adding <br>s to fix spacing

* Post-heroku preview changes

* Additional update to SME changes

Beth: Made the lead-ins under ""Why might I want a VA-backed purchase loan?"" h4 headers because the text felt like was getting a bit lost. I believe Mel had done this on another similar page in another section of the site and I thought it looked much better. If you disagree, please feel free to change back!

* Additional post-heroku preview changes

* spacing fixes

* Additional post-heroku preview updates

* Additional post-heroku preview changes

* Post-heroku preview update

* Breaking up PMI and MIP bullets for bullet length

* Removing period in bullet

* Removing period in bullet

* Adding link to find regional loan center

* Proof tweak: loan-options

* Proof tweak: purchase-loan

* Proof tweak: irrrl

* Adding <br> for spacing

* proofing update

* Add housing home page blurb and link

* switch order of home page blurbs

* proofing updates

* proofing change

* proofing updates

* proofing update

* proofing update

* Proofing updates

Beth: I removed ""your"" from ""Get your military service records online"" link because it's under the spouse accordion. So they wouldn't be getting their records; they'd be getting their spouse's records. Just bringing to your attention for an accuracy check. Also, I put the ""Download Form 21-534"" on its own close to the second bullet since it's directly tied to that one, and then put ""Find out if you qualify..."" and ""Get military service records"" links slightly below with another break since those 2 apply to both conditionals in the bullets.

* Adding housing assistance to nav

* Lower case l in Home loan L2 nav
"
f99f880e19ee93db8521e3a49ca294a5eb0e0073,wso2-extensions/identity-inbound-auth-oauth,"Refactoring code
"
6ff2084ef625b520cfde0cd01a3589db6d9fd7aa,wso2-extensions/identity-inbound-auth-oauth,"Merge pull request #705 from sagara-gunathunga/dao-refactoring

Refactored  code base to use OAuthTokenPersistenceFactory instead of TokenMgtDAO "
00db3ded6bc8906fd17d57812161f9374dc94147,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Bug 44133: Cleanup how we do config"""
ec7288fa880d0b003a9b2b9bb1054473c2eb9468,wikimedia/mediawiki-extensions-MobileFrontend,"Hygiene: Move settings into standalone module

Rename settings methods.

Change-Id: I7ec0be06ebd7dd7aea0622f8a0e44ca08834597c
"
e4b29e8fc8d044489a7bc39ffebfc534eddbfe1f,wikimedia/mediawiki-extensions-MobileFrontend,"Improve reference display for better readability (beta and alpha)

Change-Id: Ie668c15fbc6be16c9bbbacc9edbc79797a90d491
"
9df51161dbb0158a230f13066e4003550ccb4cc0,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Refactor search input and watchlist buttons CSS"""
3587bbe6de127cc47820852dbea7ff417b5a6aeb,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Wikigrok B improvements"""
ed69eddc1f22be98aa01386bf886cab361da4516,wikimedia/mediawiki-extensions-MobileFrontend,"Bug 47857: Deprecate #mw-mf-searchForm, allow search term clearing

Previously when typing a search term a cross appeared that allowed you
to reset the value. This code seems to have been lying dormant

Take opportunity to rename clearlink to more meaningful clear
Bug: 47857

Change-Id: Ib3db61be25452c4b3eedb5e54756cfe0d144882a
"
0dfb279c5becd5a1bf93b2a32734be523da5334c,wikimedia/mediawiki-extensions-MobileFrontend,"small refactoring
"
f4e67458e275ea6f446ef1eba77037517cd12449,wikimedia/mediawiki-extensions-MobileFrontend,"Hygiene: Refactor Notification code - add NotificationBadge class

The code is very brittle here as the NotificationOverlay
communicates with the NotificationBadge. NotificationOverlay assumes
HTML markup rather than uses reliable methods to communicate changes.

This formalises their relationship.

To render the badge on the client the secondaryButton template is
now shipped to the client.

Tests have been added to cover behaviour.
The module lives in skins.minerva.notifications.badge to avoid pulling
all skins.minerva.notifications modules into the environment which can
lead to side effects due to the unconditional wiring up many of these modules
do to the existing HTML. It is not added to mobile.notifications.overlay to
avoid pulling OOjs UI into the startup JavaScript.

Additional changes:
* Migrate Minerva specific onResourceLoaderRegisterModules code
into Minerva.hooks
* Now loadModuleScript lives inside NotificationBadge revert to using
loader.using - this also has the benefit of not removing the notification
badge icon in the top right corner
* Drop the .zero display:none rule as now only one of the badges is rendered
at any given time.

Change-Id: I246ed23164ff3f7ef8ea15896a9b3a0d19c2bb0d
"
66f39167a3c239d560d66accc7a96eb513cf6b9b,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Code hygiene: Move drawer css into separate file"""
44354a3fa4f3b12120f9db2f79299506aab4d48b,wikimedia/mediawiki-extensions-MobileFrontend,"Hygiene: Use toast terminology

Simplify home page now it inherits from article page

Change-Id: I227d5384023a4bab5e34331f2c3dbc567bce4eef
"
5a587652b3f0a9e12f261b552efacd788436dd6a,wikimedia/mediawiki-extensions-MobileFrontend,"WikiGrok A/B test dry run

* Create the wikiGrokUser class, which encapsulates the state of a user
  that might be entered into the test
* Create the WikiGrokAbTest class, which controls whether or not a user
  is eligible to enter the test and, if so, which version of WikiGrok
  they'll see

Change-Id: If038f131a78e171479db6a18c311940d79c42277
"
2ec464c227d80aa1a8fa7707c6fb7a133f878506,wikimedia/mediawiki-extensions-MobileFrontend,"Story 1262: Adding user to last modified

A second pass at Kaldari's 1st attempt on this tricky piece
of coding. This one only adds the user profile with JavaScript which
simplifies the i18n messages somewhat. Features the most creative use
of PLURAL evah.

Also breaks out common functionality between lastModified in beta
and stable and ensures they do not run at the same time.

Minimal changes to the skin itself.

Also rename sibling-link class since it no longer always refers to
a link

Change-Id: I0874956d593c02bea38d45eafebbba781dc5ab9a
"
964337ee51ed592a17eee391ddbef40fa9d68dfa,wikimedia/mediawiki-extensions-MobileFrontend,"Rewrite footer how skins do it

This rewrites the footer in a desktop compatible way
Make footer css available for all pages
Don't give the main page mw-mf-special use page-Main_Page as it
is on desktop

Change-Id: I1253edfaa5af3d7782a87caf2e3ab0c9b3ae66f0
"
1c156811db15f9ce7db5b566f23ec50ff59fcdd6,wikimedia/mediawiki-extensions-MobileFrontend,"Rename jsEnabled class to client-js to be consistent with desktop

Change-Id: Ic546e3c1994ee34e7dcb10fe039d349ea8f2afc9
"
5211ace092b02e6d5244ae77666267440095d011,wikimedia/mediawiki-extensions-MobileFrontend,"Move header to generic MinervaTemplate

Slight modifications to handling of special page headers to store
them in one template variable. This makes a few html changes to the
special page making it more consistent with the normal page skin

Ensure watch star doesn't initiate on special pages

Change-Id: I95d3cdacb6c07744541f0a0d5d04d2b976dcf22b
"
103cc4ac7215f672125fca733e3ecabbc4459124,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Hygiene: Clean up editor.js"""
9bea92aa4b5e3ed1116b24ff7313cf3591730ead,wikimedia/mediawiki-extensions-MobileFrontend,"first version of main menu navigation

move old navigation code into mf-navigation-legacy.js
create new navigation code in mf-navigation.js
	includes table of contents and language overlay
	unavailable functions for time being grayed out
add relevant html in SkinMobile.php
update css served in MobileFrontend.php for beta users
add styling in nav.css
add different markup to beta html
add mw-mf- prefixes to html components where changes occur
update existing css definitions to include mw-mf- prefix

Change-Id: I9d19f7530a29abeaec026ea1d58dd44652c4cea0
"
96cb3c522ebfe884b11ddad2f38989211b640325,wikimedia/mediawiki-extensions-MobileFrontend,"Story 488: Add pageimages to search results (beta)

Also includes new styling in stable for search error

On search results list add page images to the left of search
results in beta.
Update stable to use same markup.

Associated changes:
* Remove lots of dead code
* Rename mw-mf-watchlist-results class to more generic .page-list
and apply to nearby and watchlist views
* Make search results use articleList template

Change-Id: I938c8cf9448ed510bbf88c7d042193dcd35a7d8e
"
d5d17f74d4f2b89892bc32eb76b48f402637cb18,wikimedia/mediawiki-extensions-MobileFrontend,"Deprecate $wgMFForceSecureLogin in favor of core setting

Change-Id: If2fd6ae42e58f6824d752b2e8b3b804ae99d450d
"
b8af5b8356f90d198bafd6d7bb44ade27b9627e2,wikimedia/mediawiki-extensions-MobileFrontend,"Infobox description editing

To test:
* Make sure you are using an account you created after setting up Wikidata instance
* Create item on http://wikidata.wiki.local.wmftest.net:8080/
* In LocalSettings.php
** Set $wgMFWikiDataEndpoint = 'http://wikidata.wiki.local.wmftest.net:8080/w/api.php';
** Set $wgCrossSiteAJAXdomains = array( '*' );
* Navigate to page http://localhost:8080/wiki/Albert_Einstein?wikidataid=<item number>

Change-Id: I87c9deec5dd3efafd98ff43298a7cfaf4e1dcbb4
"
de421f6b83f73cc44503d4e8fa1586f07d045c2c,wikimedia/mediawiki-extensions-MobileFrontend,"Remove focus outlines on touch devices

Assumption: touch-based devices users are much less likely to use use a
physical keyboard (Tab) for navigation.

Also, remove redundant CSS rules for disabling the outline in other
places and use outline: 0 instead of outline: none which seems to be
correct according to specs. [1]

[1] https://developer.mozilla.org/en-US/docs/Web/CSS/outline

Change-Id: I0ac8cf9a6bce8d525e553cae449cb17ab4d6de68
"
b0606e637d6aa4b8f1fd3e66f3c275ae3a38f5e3,wikimedia/mediawiki-extensions-MobileFrontend,"Refactor the way we run mobile JavaScript tests

This introduces a few changes:

* /tests/javascripts follows the directory structure of /javascripts.

* onResourceLoaderTestModules hook automatically checks if there is a
  test file for every JavaScript file we use in our ResourceLoader
  modules and if it finds it, creates a corresponding RL test module.
  No more dependency problems when adding new JavaScript test files!

* Messages and templates are loaded for tests just as they are loaded in
  the extension itself (hence the changes in test_mf-photo.js,
  test_carousel.js and test_mf-navigation.js)).

* Our JavaScript tests now have to be run using mobile version of
  Special:JavaScriptTest page, this also ensures they run in the
  environment they were written for.

* Sinon.js updated to 1.6.0.

There are a couple of hacks in place
* mobile.tests.base is prefixed with a 0. to force earlier loading. On
Jon's Mac Air this was loading after mobile.toggling module

* The settings tests set a cookie for 400ms. By the time the check was
run this cookie had expired so the limit was increased.

Dependency: I84e0512590de9ff2dbdf519d983a0c1c2d007194
Change-Id: I593a9c0e8edcb04a351a06a457327f63d698a298
"
6dedb3ca8dbb1b54bda6227684c4c4085993f68f,wikimedia/mediawiki-extensions-MobileFrontend,"Use OutputPage headElement function to generate head element

Diff: https://gist.github.com/jdlrobson/5281620
override getPageClasses on SkinTemplate
Move any classes on html tag or article tag to body tag
Merge specialPage and mw-mf-special classes
Use action-edit instead of actionEdit class
Deprecate getForceLeftMenu on context and move to special page itself
Make it possible for other modules to access main menu
Rename noMargins, navigationEnabled, navigationFullScreen to use hypens

Change-Id: I42908b734623a48ac32f318f011124486c5f01ae
"
0a3284c2ddbd4305a81750d314f89e5854971b25,wikimedia/mediawiki-extensions-MobileFrontend,"add jshint to MobileFrontend

jshint is now integrated into jenkins
so let's take advantage

add config file and Makefile helper
(note Makefile specifically targets all subdirectories except
external as we cannot guarantee external js will follow our
standards)
remove jslint config from top of js files as this seems
to conflict with .jshintrc
update pre-commit hook to run jshint
(note I originally tried make tests but there seems to be an
issue with running this from a different directory)

update documentation in README

Patch set 4: I edited .jshintrc. It didn't check the global or undefined
variables at all. Also, all options default to false so no need to
specify them, maxerr doesn't seem to have any effect. Added unused and
some custom globals (it seems we need mw). (jgonera)

Change-Id: I58ede993b97dac0ac707b2686dd1ecae915590df
"
e7c2c8e1a95779a8a778d372141e8d0fd54db0e6,wikimedia/mediawiki-extensions-MobileFrontend,"Separate the entry point modules

Certain modules are used to setup features/routes (e.g. bind
to certain hash fragments) or to progressively enhance the page.

This splits those out to make it clearer and cleans up their dependencies
in the process (if a parent has a dependency it doesn't need to be restated)

Change-Id: I48d75893be973451e16ca0b593ac828b8e118eb3
"
25b85ff8934c63fae1a454c0198e9068907c037c,wikimedia/mediawiki-extensions-MobileFrontend,"Implement Schema:MobileWebBrowse logging

Also:
* Create the mobile.browse module and move related files into the module
  folder
* Load mobile.browse only on those pages where the page belongs to a category
* Create modules for Special:TopicTag and moves resources into the
  module folder

Bug: T94744
Change-Id: I06662af55433bea358a8b2c3eba85f42a2f58d78
"
3aafe92b7396201096358fdb73a42c0e704a4a24,wikimedia/mediawiki-extensions-MobileFrontend,"SchemaMobileWebLanguageSwitcher: fix the language overlay version

'bottom-of-article' is used for describing the language switcher
button. Instead of using it to also describe the language overlay
use 'simpler-overlay', which is more precise.

Also use the schema revision #15302503, which introduced the above
change.

Bug: T125278
Change-Id: I96e5eedca409367f2b09b09fa3b8287201fc1516
"
ddd8ecaccc59360f2023df8c837258e716263591,wikimedia/mediawiki-extensions-MobileFrontend,"Merge changes Ie44d9e24,I78f608b4,Ica241c6e

* changes:
  Story 836: Promote language search to stable
  Correct left padding on headers and footers in 'list' overlays
  Rewrite language overlay
"
c00a6bd67d18aec13968c6cb6ff8c87e37174304,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Improve reference display for better readability (beta and alpha)"""
1de775bd1c41eda88a94a19c1028bcce9093de54,wikimedia/mediawiki-extensions-MobileFrontend,"Remove an unneeded use of SITENAME

See:
https://translatewiki.net/wiki/Thread:Support/About_MediaWiki:Mobile-frontend-quick-lookup-not-internal/en

Change-Id: I0c7b7c203b71d4a7d9391e6724ce3a56dccc77bb
"
33c3201bd07232759e738f47962036aabb68c091,wikimedia/mediawiki-extensions-MobileFrontend,"Allow lazy loading of references (feature flagged)

When enabled this replaces the list of references with
a link to a non-existent special page which is passed
the parameters it needs to render the list of referenes

When a reference is clicked it fires off a request to the API
to get the references object.

This needs various changes in the Cite API which are listed
below.

Changes:
* When feature flag enabled sub and sup tags are hidden. URLS for
these will be rewritten when Special:References fallback is in place
* setup function of references module  now requires the page object
* getReference private method now requires page to be passed
* Introduce private method getReferenceData which obtains
references via API or from DOM depending on feature flag
* mobile.references now uses the editor gateway so it can parse
reference raw wikitext (hopefully this can be removed at later date)
* Refactor tests for reference to use a template and not trigger
DOM events
* New style module added for beta skin
* Error handling when reference lookup fails

Depends-On: I81a965bcb47d17df18f1e415e3c25f88f6b48ffc
Bug: T125896
Change-Id: I287608a8fdfa61fe2d9270ab7df4da9bca3aef4c
"
5360771b265e122e0419726638e7bdb36462edd1,wikimedia/mediawiki-extensions-MobileFrontend,"minor css cleanup

"
82111301600a94372a6c94ae3e1841199d321a9a,wikimedia/mediawiki-extensions-MobileFrontend,"allow user to switch site-wide language from the MobileOptions/Language page

* this allows the user to toggle to different language versions of the mobile site
* you can access it from the bottom of the left navigation bar
* it is linked to from the footer of the overlay created by the
language option under the action toolbar via the footer

changes:
rename class of header to mw-mf-language-header
(to keep more generic for reuse in other overlays)
refactor navigation overlay to allow non-text headers
allow overlays to be locked (e.g. no back arrow - user
should use desktop back instead)

Change-Id: I55b9795e1d8984c4203dc5de1beff44ea341bfb4
"
84a0ca8570fe8fce4e26abf241af063934e2c274,wikimedia/mediawiki-extensions-MobileFrontend,"Link to Special:Nearby out of the article

If the article has coordinates.

Also cleanup rendering of page secondary section to make it easier
to add new link/button elements.

Bug: 72864
Change-Id: Id76fd55a6fcfe14870c44fdc599161f0e6d66c6a
"
40c3d05d3a41a8d40363bd9f280cc2a7dd0eb080,mariadb-corporation/mariadb-columnstore-engine,"Fix rpath settings

I accidentally used CMAKE_INSTALL_PREFIX which isn't always set for the
engine build. This patch uses INSTALL_ENGINE instead
"
6fd2b75b94064f284038c42414d6c2f530cb1940,architecture-building-systems/CityEnergyAnalyst,"Merge pull request #1622 from architecture-building-systems/i1541-refactor-and-rejig-optimization

I1541 refactor and rejig optimization"
221cb51341ef7fa340d913f24e709bb002a99335,architecture-building-systems/CityEnergyAnalyst,"`i_ia, i_m, i_st` -> `tsd[['I_ia', 'I_m', 'I_st']]`
"
1d3b1363b101e1e05dbdc3048a9d8b93ab9f784f,architecture-building-systems/CityEnergyAnalyst,"Merge branch 'master' into i1541-refactor-and-rejig-optimization
"
46d9c20598a774b4c918ed9f2bd8a164fa5b7076,architecture-building-systems/CityEnergyAnalyst,"more refactoring and adding CAPEX along with Capex_a
"
fff65713e677935b5d9d18d0c549726bfcddfdcf,architecture-building-systems/CityEnergyAnalyst,"Refactor parts of CalcThermalLoads into smaller functions
"
25ac00e6c620ceae24800f685eb833a7cd43f676,smallAreaHealthStatisticsUnit/rapidInquiryFacility,"Improve the handling of script files by the Java code.
"
1b7b28a51821d79003a1a8b35e97a06258a20780,smallAreaHealthStatisticsUnit/rapidInquiryFacility,"Merge pull request #34 from smallAreaHealthStatisticsUnit/experimental/rename_packages

Rename all packages to follow Java conventions"
