commit,repo_name,message
17b451965c684c6cc2d90981bed3269f18226036,h2o/h2o,"squash-merge branch 'kazuho/refactor/simplify-ctor'
"
453dfa96e3d67b76ac0bdfdcbd540563fa134875,h2o/h2o,"move configurator of modules to lib/configurator/
"
f7f691394516115ba2933147ed37ba612c3292bb,h2o/h2o,"refactor mruby middleware
"
146e76b53c5a1059d4cd60ed9184e62a473e882b,h2o/h2o,"Merge pull request #364 from h2o/kazuho/wordpress-url-rewrite

Implement features to sufficient to support WordPress URL rewrites"
4bd102dc20898ffd817df0ed21dd874fb9f57484,h2o/h2o,"Merge branch 'kazuho/refactor/per-context-config' into kazuho/expr/revproxy
"
d0dafa03039c761bd2da4b04ef6dfebe89994aee,h2o/h2o,"Improvements to reported stats

- Add a structure to track internally generated errors
- Structure the stats a pluggable modules. New status reporting code can
  use the `h2o_config_register_status_handler` (for queries that need to
  access per thread data) or `h2o_config_register_simple_status_handler`
  (for queries that can be run in the request context) APIs in order to
  add new statuses
- requests statuses and error reporting is moved under
  `lib/handler/status/`
"
dc8dbeb06cdff4e560d4263ac7f887b32649108e,h2o/h2o,"Track stream errors

We introduce `h2o_stream_send_state` which tracks the state of the
stream: finalized, in progress, or error.
We make `h2o_ostream_pull_cb` return this type and `h2o_send` pass it as
an argument. This way protocol implementations can then chose the
appropriate behavior regarding the downstream response.
In particular, we address the case of H2 in `finalostream_send` by
sending `RST_STREAM` if the stream had an error.
"
9711289111cd529662b303ddb37e35a9c1180f04,h2o/h2o,"split proxy_should_drop flag into for-request and for-response flags
"
71c6957c8da5bd8bd5abbe285a67feea7f9fb89f,h2o/h2o,"refactor the handler interface and implement the file handler
"
eed177cdf9113f24a7d791bdaf7f2d3761667556,h2o/h2o,"more renames
"
6812d83301b652d3432775402a31089c093f4508,lxc/lxc,"cgfsng: enable ""force"" for ""cgroup-full""

This enables cgroup-full:{mixed,ro,rw}:force and reworks the mount logic.
When cgroup-full was specified we used to bind-mount the cgroups from the host.
That is pretty weird thing to do given that you can simply mount them directly
without going through bind-mounts.

Signed-off-by: Christian Brauner <48455ab3070520a2d174545c7239d6d0fabd9a83@ubuntu.com>
"
8aa4885c224acf396a9413a272b97928f7345ede,lxc/lxc,"configure.ac: Cleanup, comments, indent, ...

This commit doesn't do any functional change to configure.ac but does a fair
amount of cleaning up.

It re-orders the various blocks by type (options, checks, expands, ...).
It also consistently uses tabs for indents.

Signed-off-by: Stéphane Graber <089afc6d81f66f1168a9849e15660feae286e024@ubuntu.com>
Acked-by: Serge E. Hallyn <3df611b026e4639bee8aef7a4beb2e39fcebb313@ubuntu.com>
"
692ba18faeb83e1a92743c198484f18b4fc18bc5,lxc/lxc,"cgroup: re-introduce ns cgroup support

If a cgroup hierarchy has ns cgroup composed, then we need to treat
that differently:

1. The container init will have already been switched to a new cgroup
called after its pid.
2. We can't move the container init to new deeper cgroup directories.

So, if we detect an ns cgroup, don't bother trying to construct a new
name according to the pattern.  Just rename the current one to the
container name, and save that path for us to later enter and remove.

Note I'm not dealing with the subpaths so nested containers probably
won't work.  However as ns cgroup is very much legacy, that should be
ok.  Eventually we should be able to drop ns cgroup support altogether,
but not just yet.

Signed-off-by: Serge Hallyn <3df611b026e4639bee8aef7a4beb2e39fcebb313@ubuntu.com>
Acked-by: Stéphane Graber <089afc6d81f66f1168a9849e15660feae286e024@ubuntu.com>
"
592fd47a6245508b79fe6ac819fe6d3b2c1289be,lxc/lxc,"CVE-2015-1335: Protect container mounts against symlinks

When a container starts up, lxc sets up the container's inital fstree
by doing a bunch of mounting, guided by the container configuration
file.  The container config is owned by the admin or user on the host,
so we do not try to guard against bad entries.  However, since the
mount target is in the container, it's possible that the container admin
could divert the mount with symbolic links.  This could bypass proper
container startup (i.e. confinement of a root-owned container by the
restrictive apparmor policy, by diverting the required write to
/proc/self/attr/current), or bypass the (path-based) apparmor policy
by diverting, say, /proc to /mnt in the container.

To prevent this,

1. do not allow mounts to paths containing symbolic links

2. do not allow bind mounts from relative paths containing symbolic
links.

Details:

Define safe_mount which ensures that the container has not inserted any
symbolic links into any mount targets for mounts to be done during
container setup.

The host's mount path may contain symbolic links.  As it is under the
control of the administrator, that's ok.  So safe_mount begins the check
for symbolic links after the rootfs->mount, by opening that directory.

It opens each directory along the path using openat() relative to the
parent directory using O_NOFOLLOW.  When the target is reached, it
mounts onto /proc/self/fd/<targetfd>.

Use safe_mount() in mount_entry(), when mounting container proc,
and when needed.  In particular, safe_mount() need not be used in
any case where:

1. the mount is done in the container's namespace
2. the mount is for the container's rootfs
3. the mount is relative to a tmpfs or proc/sysfs which we have
   just safe_mount()ed ourselves

Since we were using proc/net as a temporary placeholder for /proc/sys/net
during container startup, and proc/net is a symbolic link, use proc/tty
instead.

Update the lxc.container.conf manpage with details about the new
restrictions.

Finally, add a testcase to test some symbolic link possibilities.

Reported-by: Roman Fiedler
Signed-off-by: Serge Hallyn <3df611b026e4639bee8aef7a4beb2e39fcebb313@ubuntu.com>
Acked-by: Stéphane Graber <089afc6d81f66f1168a9849e15660feae286e024@ubuntu.com>
"
c43e9ced757428a3d578271decedc60aeab22e42,lxc/lxc,"Merge pull request #2527 from brauner/2018-08-15/file_lock_fixes

lxccontainer: improve file locking"
70e1f27e0bc2fd15e6a702a4b75e92b0a82e0857,lxc/lxc,"Merge pull request #1851 from brauner/2017-10-10/setsid_for_mini_init

init: rework dumb init"
ab2d32f88ce27337a1b429e32058f0948cb72bf0,lxc/lxc,"Replace create/destroy by a script

The simplification of the container configuration makes
pointless to have so much complexity in the container creation.
Let's remove that and replace by some scripts.

Signed-off-by: Daniel Lezcano <3211518dd4d87cb3f7ee12cb52e14b7fb2bc0446@fr.ibm.com>
"
ab1bf971d2db43777cbf3892fb887bf71ce7d155,lxc/lxc,"Create log file in lxcpath for non-system containers

On Fri, 26 Apr 2013 10:18:12 -0500
Serge Hallyn <3df611b026e4639bee8aef7a4beb2e39fcebb313@ubuntu.com> wrote:

> Quoting Dwight Engen (1793d65cf7b9eefb2bb8f5bee9a4b8ba782c26da@oracle.com):
> > On Fri, 26 Apr 2013 09:37:49 -0500
> > Serge Hallyn <3df611b026e4639bee8aef7a4beb2e39fcebb313@ubuntu.com> wrote:
> >
> > > Quoting Dwight Engen (1793d65cf7b9eefb2bb8f5bee9a4b8ba782c26da@oracle.com):
> > > > Using lxc configured with --enable-configpath-log, and
> > > > specifying a path to the lxc commands with -P, the log file
> > > > path is generated with a basename of LOGPATH instead of the
> > > > lxcpath. This means for example if you do
> > > >
> > > > lxc-start -P /tmp/containers -n test01 -l INFO
> > > >
> > > > your log file will be
> > > >
> > > > /var/lib/lxc/test01/test01.log
> > > >
> > > > I was expecting the log to be /tmp/containers/test01/test01.log.
> > > > This is particularly confusing if you also have test01 on the
> > > > regular lxcpath. The patch below changes the log file path to be
> > > > based on lxcpath rather than LOGPATH when lxc is configured with
> > > > --enable-configpath-log.
> > > >
> > > > I think that even in the normal non --enable-configpath-log case
> > > > we should consider using lxcpath as the base and not having
> > > > LOGPATH at all, as attempting to create the log files
> > > > in /var/log is not going to work for regular users on their own
> > > > lxcpath. If we want that, I'll update the patch to do that as
> > > > well.
> > >
> > >
> > > Perhaps we should do:
> > >
> > > 	1. If lxcpath == default_lxc_path(), then first choice is
> > > 	   LOGPATH, second is lxcpath/container.log
> > > 	2. when opening, if first choice fails, use second choice
> > > 	   if there is any.
> > >
> > > That way 'system' containers will go to /var/log/lxc, as I think
> > > they should.  Custom-lxcpath containers should never go
> > > to /var/log/lxc, since their names could be dups of containers in
> > > default_lxc_path(). And if the system is a weird one where
> > > default_lxc_path is set up so that an unprivileged user can use
> > > it, then we should log into $lxcpath.
> >
> > That sounds good to me. So these rules would apply in both the
> > regular and --enable-configpath-log cases.

I updated the patch to try to open the log file according to the
choices given above. Along the way I cleaned up log.c a bit, making
some things static, grouping external interfaces together, etc...
Hopefully that doesn't add too much noise.

> > > (Note this patch will trivially conflict with my new lxc_clone.c
> > > causing it to fail to build - unfortunate result of timing)
> >
> > Yeah unfortunately this touches every lxc_log_init() caller. I can
> > work on the above logic and re-submit after your new lxc_clone
> > stuff goes in.
>
> No no, I'll just need to remember to update mine.  Don't hold up on
> mine, this is just the nature of such collaboration  :)
>
> > Did you have any thoughts on the XXX what to pass in for lxcpath in
> > lxc_init? Right now it just falls back to LOGPATH.
>
> No - that's a weird one, since lxc_init runs in the container.  If
> there were only system containers I'd say always use LOGPATH.
> However there are people (apparently :) who use container sharing the
> host's rootfs...
>
> lxc-execute does know the lxcpath.  Perhaps we can simply have
> src/lxc/execute.c:execute_start() look at handler->conf to see if a
> rootfs is set.  If rootfs is NOT set, then pass lxcpath along to
> lxc-init.  Then lxc-init can mostly do the same as the others?  (It
> doesn't use src/lxc/arguments.c, so you'd have to add lxcpath to
> options[] in lxc-init.c)

So I did this, only to realize that lxc-init is passing ""none"" for the
file anyway, so it currently doesn't intend to log. This makes me
think that passing NULL for lxcpath is the right thing to do in
this patch. If you want me to make it so lxc-init can log, I can do
that but I think it should be in a different change :)

--

Signed-off-by: Dwight Engen <1793d65cf7b9eefb2bb8f5bee9a4b8ba782c26da@oracle.com>
Signed-off-by: Serge Hallyn <3df611b026e4639bee8aef7a4beb2e39fcebb313@ubuntu.com>
"
1d23c3c6050875c32a32b889cf115e38f37d23ba,ACP3/cms,"closes #54
- Moved the password form fields from the users account profile action to the user account settings action
"
4d369063d7f6673c976256a0b36679f4ca6dfa81,ACP3/cms,"- major refactoring of the class dependencies
- removed the version number from the system settings and made it a constant inside the the application bootstrapping class
- outsourced the cache setting (just the cache_driver for now) into a separate yml file
- added a proper 500 error page to the installer if something seriously fails during the installation process
  -> the exception in getting logged into the file ""installer-critical.log"" 
- fixed the installer 404 error page if a controller action can't be found"
366ab8c870b01fd4a1b41fdfc4e73359619bdf2d,xjdr/xio,"gradle and circleci

using gradle cache for alpn-boot jar

cleanup ci configs

increasing timeout for ci

gradle submodule projects
"
298afac0e0cb5fa4eb952de4dbcdb3a3b527b9e2,Jguer/yay,"Merge pull request #567 from Morganamilo/refactor-install

Refactor install"
6f95c587b670b5419435478272fb2c5709cfa3dd,cylc/cylc,more main prog cleanup
a4dffd5fee3641a76d5ddc59b96f62381c8c810c,cylc/cylc,"Merge pull request #999 from benfitzpatrick/119.initial_cycle_time_to_point

#119: rename cycle time to cycle point"
bd675f027e978e23c55ce85edafe5263a36fc409,cylc/cylc,"Async tasks reimplemented.
"
164e946950e5c9b038700565b34c513be797aab7,cylc/cylc,"More command and GUI help improvements.
"
31e50118e2f46b9f156160940df83f2c79724bd5,cylc/cylc,"A few corrections to the previous TaskID conversion commit.

All use of the old taskid class (and module) is now gone; but there's
more to do yet to make full use of the new TaskID class.
"
4fecfd3651d204d0708800bcbbe241e83feac20c,cylc/cylc,"Tidied task proxy and job submit code a bit.

Includes getting rid of some unnecessary passing of global config items
from the task class into job_submit, and cleaner use of task owner and
host variables.
"
a1df321c0a4c246855dd4db8f84a7e96446b7f45,cylc/cylc,"Merge branch 'master' into new-task-cleanup-algorithm
"
8f1ed321bb0c151d1abefdf0e74dfdb9b3f2cbad,cylc/cylc,"Replaced the pickle reg db with simpler flat files.

Closes #327
"
b262d379c8ed054fe40ba32784b15bac28d3a778,cylc/cylc,"finish cycling.loader interface refactor
"
f4c3a892eb5e1212269cdbcedebc42a60cbc3fa4,cylc/cylc,removed obsolete get_config method from src
c7e23171caeeeca010a769adc387f4b396981126,cylc/cylc,"Merge pull request #2067 from matthewrmshin/consolidate-service-files

Consolidate service files"
b27695093e23b2d8ca11c73ec24fb3173694c3ed,cylc/cylc,"Merge pull request #857 from benfitzpatrick/cylc-gui.toolbar-text

cylc graph, cylc gui: add toolbar text, rename 'landscape' mode"
895d81ad35e733e81c750fce50add987d8931d70,cylc/cylc,"Cleaner thread start and exit logging.
"
f86bca3aa977ce8e5981277297024d9bb4b53485,cylc/cylc,"Merge pull request #2005 from matthewrmshin/improve-corrupt-port-file-handling

Improve handling of missing/corrupted port file"
d29dc0a6c67bc9a888787985c9715a75c1da72a7,cylc/cylc,"draft of per-task-instance cleanup-cutoff
"
7d2494be8b7ce6cbf6d411f195cb58f8968b7f12,eciis/web,"Making tests and refactoring the DialogController removing the
"
987cf95aaa285546e4ce865242c99a09da8b6e5f,eciis/web,"Removing a useless import
"
8f032f4520d013a27a89272aa5249682fe7bcbec,eciis/web,"Refactoring invite_handler
"
35d2dfe3616c134741eb12ae113ffae25000de97,eciis/web,"Refactoring removing_institution
"
c7105e8c107840db6062a015093bf31b046ee31b,eciis/web,"Merge pull request #542 from eciis/refactoring-update-stub-institution

Refactoring update stub institution"
06c4601ac8af97c2d031dd85ae519ac4bea942ca,epam/DLab,"Fixed some errors and refactored code
"
52931d4e02fc85225b24505ba97399aca1044571,este/este,"Deps and little refactoring
"
c1dbba44d4c319162e95a6eef7a437b3316816d9,este/este,"Native context (#1529)

* Paths must be quoted for Windows

* Context refactoring in progress

* Close #1525
"
0585bee1ef3dad3882932b863b0d82204edad94a,gocd/gocd,"Splitting windows commands into multiple lines
"
30e010015c66dc4e29caa6763ce5004dfbc1e78f,gocd/gocd,"Merge pull request #2367 from ketan/remove-dead-code

Remove old controllers that have been superseeded"
3633280a962c28e814da6b3444af67a9bb5f2e28,gocd/gocd,"Initial Work to move CR into a separate module

* This will allow for the sharing of the CR models and serialization
between plugins and the go server
* see #5374 for more details
"
eef3825e34cd445f80984d199d35480e63d0ed03,gocd/gocd,"Copy plugin-endpoint.js to cached assets root so that it is available to plugins

The js file is copied to the root of the classpath so that it can be written
to the cached assets root on get static assets requests.

This allows us to maintain the library in one place, while still making it
available to both server and plugin iframes.
"
1d9d0357e64d55fe47c923dc10b081fe56a31a56,gpac/gpac,"refactoring: m3u8 to mpd converting
"
322e766075090358bdfffa64007d97e31d3bda6c,grow/grow,"Updating commands to clear cache first. Separate cache files.
"
90050a181a83e11e1e13eb105d84cfbe7ba8fdc8,grow/grow,"Internal cleanup -> flatten documents folder.
"
832b685740f52dd1ac04fe7cdda4cc5ad1e7fa92,grpc/grpc,"Merge pull request #8517 from markdroth/circular_dependency_fix

Move method_config module from ext/client_channel to lib/transport."
3dca23aa0deb3d14ec97d998e1b37b3c2c403d65,grpc/grpc,"Make zlib a first class build citizen
"
183a59fa23bb18c7efe458949a1dbde25994433d,grpc/grpc,"Clean up connector code.
"
6d84373f8e9e21e4eee1f30c1573280eba455b9d,grpc/grpc,"Manually merge release-0_11 into make-errors-public-beta to solve conflict
"
e360568a70783d5bb5da1b3a51098ffdcc59d2d5,grpc/grpc,"Rename poll_kick_test to poll_kick_posix_test
"
a0f5db15815d3ec5b2ad3b781cca5e2eb6468824,grpc/grpc,"Rename GRPCCallOptions+internal->GRPCCallOptions+Internal
"
423d6fd7ed418aead7d494e8d3c31ecd6e2743f1,grpc/grpc,"Optimize framing a little

- rely on the fact that data-to-come holds a reference to
data-being-written, so there's no need to add a ref for every frame
written
- provide an 'inlined' version of grpc_slice_malloc (via a #define) that
gives the compiler more information about small allocations to enable
better optimization
"
c84886b2754d77cd413313b1c3719e5f638b814e,grpc/grpc,"Better implementation, flip timer logic to make 0-init pre-triggered
"
73596b8d049a7d441a006c1e422c9aa90ef2dd47,grpc/grpc,"Merge pull request #3618 from dgquintas/cq_alarm

Added grpc_alarm (renamed previous one to grpc_timer)"
f975f74c016d5850d10644c4865e76e05e4b7815,grpc/grpc,"Refactor workqueues a little to make them great again
"
3d04e025bcffd1e583d502de4ee26625ea866b21,grpc/grpc,"Remove lockfree-stack implementation that is no longer used
"
fb2eb5279e3979f959163261f7d25543d078e869,grpc/grpc,"Merge pull request #13830 from jtattermusch/cmake_cleanup

Simplify top level CMakeLists.txt"
f2b2558cc38ea68c070a528ccf612a2eec90ee81,grpc/grpc,"Merge pull request #2593 from ctiller/elliptic-orange-chamelion

Rename grpc_channel_create to grpc_insecure_channel_create"
d953959e2bafd645b6ed674861a310daba5f80ae,grpc/grpc,"Enable split code generation

To support magical internal build processes, the pb2 files need to be
split into pure-proto and gRPC parts. This performs that split and
further fixes bad module names in the test harness that interfered with
the intended test implementation.

An unfortunate side effect, due to limitations of protoc and holdover
behavior we must support in major version 1.x, is that trash files are
generated in split generation. This shouldn't be a problem in normal
protoc plugin use.
"
c4b6ffb1b6aa9fb3c5fbf15a5e7e2862cfc4624c,grpc/grpc,"Add a GrpcLibrary class to wrap grpc_init and grpc_shutdown and convert all the tests to init/shutdown free.
"
a0912d5f1b067faf8e53f88be6bfbbaef5071634,grpc/grpc,"Merge pull request #17254 from jtattermusch/runtests_python_nits

run_tests.py cleanup: nits in PythonLanguage"
485d77628d0ce8889a420576d5bc41ccbbf48963,grpc/grpc,"Move string.h to internal code
"
e621f13ecd64d005ad3dfe84f67e81dde6c113ef,grpc/grpc,"Simplified ruby interop test files
"
6848c4e14584e55859018b30390589c418b93358,grpc/grpc,"wip. prior to cq refactoring
"
8b1d59cafac9b2dd30cd080450ee68e85a039dc4,grpc/grpc,"Add some debug utilities

This PR adds a set of debug helpers that are intended for calling only from gdb. They cross abstraction boundaries and allow quickly accessing one thing from another thing.
I expect to grow this library significantly over time to aid debugging tricky problems.
"
d38b2c479a53a15ea080a468bc54295baa78b386,grpc/grpc,"Merge pull request #6761 from ctiller/there-were-no-fatalities

Rename GRPC_CHANNEL_FATAL_FAILURE --> GRPC_CHANNEL_SHUTDOWN"
23821ceb690a71ef307c8878d352c534c27d838b,grpc/grpc,"Reworked GrpcEnvironment initialization and shutdown to allow running all tests at once.
"
786522166ed35f93d64c316c0e4911a74d782be0,grpc/grpc,"Merge pull request #3027 from jboeuf/security_connector_refactoring

Security connector refactoring"
3924afbf9c354888e2d13a9399299ef49e923894,grpc/grpc,"Merge pull request #5752 from vjpai/make_open_loop_again

More fixes for performance benchmarking code"
aa3b19741f345faa3eb3d9bdcfa9d7064e5c439c,grpc/grpc,"Rename tracer_peer to tracer_util
"
e300670153d3c7cf62660c49c90cbfc6a63f3c0c,grpc/grpc,"Simplify hash table API: remove per-entry vtable and take ownership of
keys and values.
"
20afa3d7c933207c548ed11928c47b552b5b2f80,grpc/grpc,"BufferPool --> ResourceQuota
"
ff2828be3dcb22f09d05117eaa1dddea17703ecf,grpc/grpc,"Rewriting mutex, condition_variable, and thread.
"
1b2db6333d4783e18b8d72db7893a758c4fcd2b9,grpc/grpc,"Moved protos out of core_codegen interface
"
1a768777796ba7ed76558312601d25a2080fd8bd,grpc/grpc,"Delete unused code
"
662ec97674dd0918f4db4c21f5f47038c535a9ba,grpc/grpc,"Merge pull request #12878 from markdroth/pick_first_subchannel_list

Refactor subchannel_list code out of RR and use it in PF."
c3ec3f55d93e530a2c344812e734c02d49e5e7c0,grpc/grpc,"Clean up output
"
5f8d05bb9c72d950ca35e27a8da8a303765c85cb,grpc/grpc,"Merge pull request #2698 from soltanmm/reorganize-python

Reorganize src/python."
4c0fe49f76e0e3d7e7ceed5722cc43010af61ab3,grpc/grpc,"Move subchannel_call_holder code into client_channel module.
"
1f41b6b5eda983052b31f60dcbe24b8021bc2fc2,grpc/grpc,"Simplify adding annotations, annotate more things
"
50ad1bbbf1ea5a028e95a696449dd2c40cdc65a6,grpc/grpc,"Merge pull request #3119 from ctiller/cleaner-build

Cleaning up our build process for windows a little"
707efdbbce4688d8b6395663c971411c66ac5fcb,perl6/doc,"Split proceed/succeed markers

Closes #1089
"
c94eb15a47335d509aa2d0d118e145cc25863906,pnpm/pnpm,"refactor: use the term id instead of fullname

npm uses the term ID, so for consistency pnpm should
use the same terminology.

Close #377
"
ef38bbe3f84ffc9562ca4dbe68788bfbcc17067b,pnpm/pnpm,"chore: remove separate test package
"
3a68118748ead8fa2e24b1fdc412577accd7f834,pnpm/pnpm,"refactor: use util.promisify instead of thenify
"
878fc629f790ccadef6f6dd7c2f65f6584da978b,pnpm/pnpm,"refactor: use @pnpm/read-package-json
"
8f030ed1096fa0469f64c522b3a5cc335ff1c2b1,pnpm/pnpm,"refactor: move option type to @pnpm/types
"
47fe2d67e8460e8cf0eec0270f25394acbf1852e,pnpm/pnpm,"refactor: use PnpmOptions as createResolver options types
"
2b6981556f032b8bf0f2ffcf97663bfb3a8cf0d3,pnpm/pnpm,"fix: make use of function instead of getter
"
5a146d4e7c0fa5967bf20778e09322738acd8c4a,pnpm/pnpm,"chore: no separate package for tests
"
d816f2d5be2649dc7cd03fd20c60f302f6a29422,pnpm/pnpm,"refactor: move the git resolver to a separate package
"
5a6f7fb8a226c16aafa268be687bd2b515849d48,sireum/v3,"Refactored Slang AST.
"
00d3477a6a18a971054defb5740f5d69f6c53d8c,sireum/v3,"Adapted to library collection API refactoring.
"
c4f4fb87ca168396c830b0fdcd4b81739ace9561,sireum/v3,"Refactored Slang AST.
"
43867d6b8e992b5f660aaa8eabb51f0a38fe3bbb,sireum/v3,"Refactored DefaultProofContext to ForwardProofContext. Reorganized examples.
"
d70f8bad2e9346ee3adda37a93c347300e68b0b8,xing/hops,"refactor plugin, replace custom code with existing npm modules
"
1861a4cd6bb5597f224615d8a321451f6e2af946,xing/hops,"refactor(react): use untool react mixins
"
47a43aad36f0099efdfead105accbd1ecf1000af,xing/hops,"refactor(spec): switch to jest
"
8cc81911936f64895adf3227344eb9ce98649147,xing/hops,"refactor(lambda): use hops-mixin
"
ca8469024864db3fbabfe02fa32fe608fcc0eae4,xodio/xod,"refactor(rt/c++): rename root namespace (_program → xod)
"
a81b4b23f3ad1ec2f8bfebcc6c849464c8ceac40,xodio/xod,"Merge pull request #1171 from xodio/refactor-convert-bound-values

Migrate bound values into bound literals"
1518d10734134dd1043f81ec7365587b9c506628,xodio/xod,"feat,refactor(xod-client-electron): add bundled arduino packages index and functions to get list of boards from it, also refactor `sortByVersion` function to sort strange arduino versions (E.G. ""1.6.4+1.19"") properly
"
15c9727dc1d4e9f23e9c90ebe71806f85cf54ad7,xodio/xod,"refactor(infra): kill xod-core package
"
c2d373b3c193f70b4804276ac2059483da2ae4f4,xodio/xod,"refactor(links): replace link properties fromPinId and toPinId with single array pins (link has no direction, but data flow really defined by pin direction)
"
deab64b7928240bcf3f4d316a24ab692f38d05bb,xodio/xod,"refactor(stdlib): use port and byte pins in xod/common-hardware
"
425e7e6165330c47ea25cbea55c236c5c265fe2f,xodio/xod,"refactor(Pins): moving pins inside nodes without saving them in the state shape (getting them by selectors).

Now pins and links between them are being displayed, but actions, reducers and linking are in process
"
2654ac09ccc5da6e2fe99e60291d4c6013958c3e,0xAX/emacs,"Minor integer overflow fixes.

* window.c (Fset_window_new_pixel): Don't let new_pixel go negative.
This improves on the previous fix to this function.
(window_resize_check): When summing up pixel counts, don't rely on
undefined behavior if the sum overflows.

Fixes: debbugs:16033
"
b246f9329c26a1174f760d345927d740aaac364b,0xAX/emacs,"* composite.c (composition_reseat_it): Remove unused locals.

(find_automatic_composition, composition_adjust_point): Likewise.
"
3155cb1585da7235145d76791feaf6170d8be0f1,0xAX/emacs,"Merge from origin/emacs-26

11bd8aa24b Fix flymake's loading of subr-x
b500e06f4d Fix Bug#28896
d815de017b Skip a Flymake test for old gcc versions
fd3d8610b2 Make :align-to account for display-line-numbers
831eafc8ae Augment Flymake API for third-party extensions
ddd547fada Improve treatment of Fortran's ""class default""
234b1e3864 Flymake backends must check proc obsoleteness in source bu...
3ea6a4d4ba Skip an rsync test in tramp-tests.el
25f83fa7c5 ; Indentation fixes
4d578d432d On Windows default a frame's border width to zero (Bug#28873)
6f1dea5c74 Spelling fixes
b8433b0954 Use pop-to-buffer-same-window instead of switch-to-buffer
2f7163fb72 Fix the MSDOS build.
2551d28fe8 Fix line number display after 'widen'
dc8812829b Remove resizable attribute on macOS undecorated frames (bu...
b970a4a52a Fix handling of `border-width' in `frameset--restore-frame...
445e92658f Mention how to send CC to > 1 address in a bug report
8ca6fa585a Improve format-time-string doc
2e1b3522b8 Improve documentation of 'line-number-display-width'
5b6e59cfdb Implement vc-default-dir-extra-headers for vc-rcs
22adeca42a In NEWS give advice on use of `switch-to-buffer' (Bug#28645)
2c3e6f1ddc Dont update primary selection with winner-undo
b38724ab67 Work around ImageMagick bug 825
20cc68e871 Document rectangle-preview option more (Bug#27974)
a0b7b301dd Do not reject https://gnu.org in commit messages
fb4200a875 Fix Edebug spec for cl-defun (bug#24255)
db68cefe72 Fix errors in kmacro.el post-command-hook
c63b344c3d Fix range-error in image-dired.el
081d2187c4 Fix 'line-number-display-width' in hscrolled windows
16e85456e7 Fix error in tramp-smb-handle-insert-directory
613db8d35c Don't reject PBM header whitespace unnecessarily
3205b12a78 Fix regression in display of PPM images
1ca9ae7069 Require subr-x when compiling nnimap.el
de60992053 Fix ert-test finding by symbol (Bug#28849)
51615a8082 Don't remember old debugger window (Bug#17882)
5980de3727 Disable python native completion on w32 (Bug#28580)
616b4c5956 Let select-frame-by-name choose any frame when called from...
8eb3c01dbd * lisp/dired-aux.el (dired-create-directory): Doc fix.
325dfdae13 Avoid compilation warnings in optimized builds
f79382819c ; * src/composite.c (Fclear_composition_cache): Fix last c...
f95cd5cd70 Improve customization of arabic-shaper-ZWNJ-handling.
a7f154688d Improve customization type of 'mouse-drag-and-drop-region'
864734d112 ; Prefer https: to http: in GNU URLs
3c78960a47 Encourage https: in commit messages
def9715282 ; Cleanup of etc/NEWS
4e59ecc646 Fix wording in Elisp manual's child frames section (Bug#28...
eda9f5018c Another fix for C mode fontification of w32 source files
05aadd8990 Fix fontification of ALIGN_STACK functions
aa0c38f358 Make sure thread stack is properly aligned on MS-Windows
d7038020aa Do not under-align pseudovectors
ff33053012 Fix indentation bug in multi-line CSS selectors
8968be822e ; * etc/NEWS: Grammar and spelling fixes
716b84034d gnutls_mac_get_nonce_size has been added in gnutls 3.3
55e313f7be ; * CONTRIBUTE: More suggestions for using US English.
622c675648 * CONTRIBUTE: Suggest American English.

# Conflicts:
#	etc/NEWS
#	msdos/sed2v2.inp
"
655ab9a380068143cfb9a31d01488e83676d81c1,0xAX/emacs,"Refine redisplay optimizations to only redisplay *some* frames/windows
rather than all of them.
* src/xdisp.c (REDISPLAY_SOME): New constant.
(redisplay_other_windows, wset_redisplay, fset_redisplay)
(bset_redisplay, bset_update_mode_line): New functions.
(message_dolog): Use bset_redisplay.
(clear_garbaged_frames): Use fset_redisplay.
(echo_area_display): Use wset_redisplay.
(buffer_shared_and_changed): Remove.
(prepare_menu_bars): Call Vpre_redisplay_function before updating
frame titles.  Compute the actual set of windows redisplayed.
Don't update frame titles and menu bars for frames that don't need to
be redisplayed.
(propagate_buffer_redisplay): New function.
(AINC): New macro.
(redisplay_internal): Use it.  Be more selective in the set of windows
we redisplay.  Propagate windows_or_buffers_changed to
update_mode_lines a bit later to simplify the code.
(mark_window_display_accurate_1): Reset window and buffer's
`redisplay' flag.
(redisplay_window): Do nothing if neither the window nor the buffer nor
the frame needs redisplay.
* src/window.h (struct window): Add `redisplay' field.
(wset_redisplay, fset_redisplay, bset_redisplay, bset_update_mode_line)
(redisplay_other_windows, window_list): New declarations.
* src/window.c (select_window, Fset_window_start): Use wset_redisplay.
(window_list): Not static any more.
(grow_mini_window, shrink_mini_window): Use fset_redisplay.
* src/minibuf.c (read_minibuf_unwind): Don't redisplay everything.
* src/insdel.c (prepare_to_modify_buffer_1): Use bset_redisplay.
* src/frame.c (Fmake_frame_visible): Don't redisplay everything.
* src/frame.h (struct frame): Add `redisplay' field.
Move `external_menu_bar' bitfield next to other bit-fields.
(SET_FRAME_GARBAGED): Use fset_redisplay.
(SET_FRAME_VISIBLE): Don't garbage the frame;
Use redisplay_other_windows.
* src/buffer.h (struct buffer): Add `redisplay' field.
* src/buffer.c (Fforce_mode_line_update): Pay attention to the `all' flag.
(modify_overlay): Use bset_redisplay.
* src/alloc.c (gc_sweep): Don't unmark strings while sweeping symbols.

* lisp/doc-view.el (doc-view-goto-page): Update mode-line.
"
d67b4f80dbe514d6e351e7d89c78921c85e7dbe7,0xAX/emacs,"* xterm.c (syms_of_xterm):
* xselect.c (syms_of_xselect):
* xmenu.c (syms_of_xmenu):
* xfns.c (syms_of_xfns):
* xfaces.c (syms_of_xfaces):
* xdisp.c (syms_of_xdisp):
* window.c (syms_of_window):
* w32fns.c (syms_of_w32fns):
* undo.c (syms_of_undo):
* textprop.c (syms_of_textprop):
* terminal.c (syms_of_terminal):
* syntax.c (syms_of_syntax):
* sound.c (syms_of_sound):
* search.c (syms_of_search):
* print.c (syms_of_print):
* minibuf.c (syms_of_minibuf):
* macros.c (syms_of_macros):
* keymap.c (syms_of_keymap, initial_define_key)
(initial_define_lispy_key):
* keyboard.c (syms_of_keyboard):
* insdel.c (syms_of_insdel):
* image.c (syms_of_image):
* fringe.c (syms_of_fringe):
* frame.c (syms_of_frame):
* fontset.c (syms_of_fontset):
* fns.c (syms_of_fns):
* fns.c (syms_of_fns):
* fileio.c (syms_of_fileio):
* fileio.c (syms_of_fileio):
* eval.c (syms_of_eval):
* doc.c (syms_of_doc):
* dispnew.c (syms_of_display):
* dired.c (syms_of_dired):
* dbusbind.c (syms_of_dbusbind):
* data.c (syms_of_data):
* composite.c (syms_of_composite):
* coding.c (syms_of_coding):
* cmds.c (syms_of_cmds):
* charset.c (define_charset_internal, syms_of_character):
* ccl.c (syms_of_ccl):
* category.c (syms_of_category, init_category_once):
* casetab.c (syms_of_casetab):
* casefiddle.c (syms_of_casefiddle):
* callint.c (syms_of_callint):
* bytecode.c (syms_of_bytecode):
* buffer.c (keys_of_buffer, syms_of_buffer):
* alloc.c (syms_of_alloc):
* process.c (syms_of_process, init_process):
* lread.c (syms_of_lread, init_obarray):
* font.c (build_style_table):
* emacs.c (syms_of_emacs, main): Replace calls to intern with
intern_c_string, calls to make_pure_string with
make_pure_c_string.  Use pure_cons instead of Fcons.

* process.c (socket_options): Make it const.
(set_socket_option, init_process): Use a const pointer.

* lread.c (intern_c_string): New function.
(defvar_kboard, defvar_lisp, defvar_lisp_nopro, defvar_bool)
(defvar_int): Uset it.  Make the name const char*.

* font.c (struct table_entry): Remove unused member.  Make NAMES
constant.
(weight_table, slant_table, width_table): Make constant.

* emacs.c (struct standard_args): Make name and longname constant.
"
3d319c8f92f639940b35c750697e82d22b7c17ba,0xAX/emacs,"Merge changes made in Gnus trunk.

shr.el (shr-render-td): Use a cache for the table rendering function to avoid getting an exponential rendering behaviour in nested tables.
shr.el (shr-insert): Rework the line-breaking algorithm.
shr.el (shr-insert): Don't leave trailing spaces.
shr.el (shr-insert-table): Also insert empty TDs.
shr.el (shr-tag-blockquote): Ensure paragraphs after </ul>.
gnus-start.el (gnus-get-unread-articles): Require gnus-agent before bidning gnus-agent variables.
mm-decode.el (mm-save-part): If given a non-directory result, expand the file name before using to avoid setting mm-default-directory to nil.
gnus.el (gnus-carpal): The carpal mode has been removed, but define the variable for backwards compatability.
nnimap.el (nnimap-update-info): Remove double setting of high.
nnimap.el (nnimap-update-info): Don't ignore groups that have no UIDNEXT.
shr.el (require): Require cl when compiling.
shr.el (shr-tag-hr): New function.
"
de0bde6284da06b603b578cc5d19002fd15f928d,0xAX/emacs,"Copyedits and updates for Emacs manual's first few chapters.

* doc/emacs/basic.texi (Inserting Text): Add xref to Completion.  Add
ucs-insert example, and document prefix argument.
(Moving Point): Fix introduction; C-f/C-b are no longer equivalent
to left/right.  Tweak left-char and right-char descriptions.
M-left and M-right are now bound to left-word/right-word.
(Erasing): Document delete-forward-char.

* doc/emacs/commands.texi (User Input): Define ""input event"" more clearly.
(Keys): Add xref to Echo Area.
(Commands): Clarify relation between commands and functions.

* doc/emacs/entering.texi (Entering Emacs): Define ""startup screen"".
Document window-splitting behavior with command-line inputs.
(Exiting): Remove obsolete paragraph about shells without suspend
functionality.

* doc/emacs/frames.texi (Non-Window Terminals): Index just ""text-only
terminal"", which is used throughout the manual now.

* doc/emacs/screen.texi (Screen, Menu Bar): Copyedits.
(Point): Remove duplicate paragraph on cursors, also in Screen.
(Mode Line): Trailing dashes no longer shown on X displays.
"
928b5acc5e1e370d98a73d65ea13df4a67a82c4b,0xAX/emacs,"* dired.c (file_name_completion): Don't return t if the match is exact
but with different capitalization.
* minibuf.c (Ftry_completion): Simplify.
"
f700caa38bb4972bec481cca3af0778706b02498,0xAX/emacs,"Updates to Font Lock docs in Lisp manual.

* doc/lispref/modes.texi (Minor Modes): Update how mode commands should treat
arguments now.
(Mode Line Basics): Clarify force-mode-line-update.
(Mode Line Top): Note that the example is not realistic.
(Mode Line Variables, Mode Line Data, %-Constructs, Header Lines)
(Emulating Mode Line): Use ""mode line"" instead of ""mode-line"", and
""mode line construct"" instead of ""mode line specification"".
(Syntactic Font Lock): Remove mention of obsolete variable
font-lock-syntactic-keywords.
(Setting Syntax Properties): Node deleted.
(Font Lock Mode): Note that Font Lock mode is a minor mode.
(Font Lock Basics): Note that syntactic fontification falls back
on `syntax-table'.
(Search-based Fontification): Emphasize that font-lock-keywords
should not be set directly.
(Faces for Font Lock): Avoid some confusing terminology.
(Syntactic Font Lock): Minor clarifications.
"
0c8c7e5cff0405b40e5ff755f88e3deef85f8eb2,0xAX/emacs,"* gnutls.c (emacs_gnutls_handle_error): Remove unused local.
"
4fe22cdf59bec57eb4c4ca0264009d6b2e956707,0xAX/emacs,"Command line arg processing fix (Bug#5392)

* src/emacs.c (standard_args): Adjust arg priorities to reflect how
they are processed in startup.el.

* lisp/startup.el (command-line): Remove unused --icon-type arg.
Handle --display arg, passing it to command-line-1 (Bug#5392).
"
27900ac72a8959291062eda9ef5eda9fc3f8595f,0xAX/emacs,"Use AUTO_CONS instead of SCOPED_CONS, etc.

* doc/lispref/internals.texi (Stack-allocated Objects):
Adjust to match the revised, less error-prone macros.
* src/frame.h (AUTO_FRAME_ARG): Rename from FRAME_PARAMETER.
* src/lisp.h (AUTO_CONS): Rename from scoped_cons.
(AUTO_LIST1): Rename from scoped_list1.
(AUTO_LIST2): Rename from scoped_list2.
(AUTO_LIST3): Rename from scoped_list3.
(AUTO_LIST4): Rename from scoped_list4.
(AUTO_STRING): Rename from SCOPED_STRING.
* src/frame.h (AUTO_FRAME_ARG):
* src/lisp.h (AUTO_CONS, AUTO_LIST1, AUTO_LIST2, AUTO_LIST3)
(AUTO_LIST4, AUTO_STRING):
Prepend a new argument 'name'.
Declare a variable instead of yielding a value.
All uses changed.
* src/lisp.h (STACK_CONS, AUTO_CONS_EXPR): New internal macros.
"
fc10058a4f8a68891bd7a3508d62f03bfa5bf7ce,0xAX/emacs,"Fix support of scripts in w32font.c  (Bug#19993)

 src/w32font.c (font_supported_scripts): Add subranges for Latin
 Supplement, Latin Extended-A/B, Vai, Supplemental Punctuation, Tai
 Le, Buginese, Yijing Hexagrams, Ancient Greek Numbers, Tai Xuan
 Jing, Counting Rods, Sundanese, Lepcha, Ol Chiki, Saurashtra,
 Kayah Li, Rejang, Ancient Symbols, Phistos Disc, Carian, Lycian,
 Lydian, Dominoe Tiles, and Mahjong Tiles.  Break the Mathematical
 Alphanumeric Symbols into several ""scripts"" like fontset.el does.
 (syms_of_w32font): DEFSYM all the new script symbols.

 lisp/international/fontset.el (script-representative-chars): Add a
 representative character for 'vai'.
"
0dfeed58d3244487a545bb4d4e19658eb299937b,0xAX/emacs,"Clean up SIGCHLD handling a bit.

* process.c, process.h (catch_child_signal):
Now always extern, even if !NS_IMPL_GNUSTEP.
* process.c (catch_child_signal): Move glib tickler here from
init_process_emacs, so that it's done earlier in Emacs
initialization.  Also move the noninteractive && !initialized
check here from init_process_emacs.  This is all a bit cleaner for
GNUish platforms, and I hope it works around the Cygwin bug.
* sysdep.c (init_signals): Invoke catch_child_signal here, so
that glib signal handling is tickled before glib creates threads.

Fixes: debbugs:14569
"
d48c98cda83d2c74981c61a0b9d9b379c46217f4,0xAX/emacs,"Don't enforce :protection in EIEIO objects any more

* doc/misc/eieio.texi (Slot Options): Document :protection as unsupported.

* lisp/emacs-lisp/eieio-core.el (eieio--scoped-class-stack): Remove var.
(eieio--scoped-class): Remove function.
(eieio--with-scoped-class): Remove macro.  Replace uses with `progn'.
(eieio--slot-name-index): Don't check the :protection anymore.
(eieio-initializing-object): Remove var.
(eieio-set-defaults): Don't let-bind eieio-initializing-object.

* lisp/emacs-lisp/eieio-generic.el (call-next-method): Don't bother checking
eieio--scoped-class any more.

* test/automated/eieio-test-methodinvoke.el (eieio-test-method-store):
Use an explicit arg instead of eieio--scoped-class.  Update all callers.

* test/automated/eieio-tests.el (eieio-test-25-slot-tests)
(eieio-test-26-default-inheritance, eieio-test-28-slot-protection)
(eieio-test-30-slot-attribute-override)
(eieio-test-31-slot-attribute-override-class-allocation): Don't check
that we enforce :protection since we don't any more.
"
d1be20a1d3580411aa303d5fa6af2a52eac52fd1,0xAX/emacs,"dired-x largely cosmetic changes.

* lisp/dired-x.el (dired-clean-up-after-deletion, dired-do-relsymlink)
(dired-do-relsymlink-regexp, dired-find-buffer-nocreate): Use #'.
(dired-hack-local-variables): Use inhibit-read-only.
(dired-guess-default): Simplify.
(dired-make-relative-symlink): Use dotimes.
(dired-simultaneous-find-file): Use dolist.
(dired-mark-sexp): Remove unneeded `if'.  Use line-end-position.
(dired-x-hands-off-my-keys): Doc fix.
(dired-x-bind-find-file): Doc fix.  Use remapping.
(after-init-hook): No need to add dired-x-bind-find-file.
(dired-x-find-file, dired-x-find-file-other-window): Doc fixes.
No need to call expand-file-name.
(dired-filename-at-point): Remove unused locals `end', `filename'.
"
768b24eb0e880c0b39e36fd089905cdca572a758,0xAX/emacs,"On GNU/Linux, use timerfd for asynchronous timers.
* configure.ac (toplevel): Check whether GNU/Linux-specific
timerfd functions and macros are available.
* m4/clock_time.m4 (gl_CLOCK_TIME): Check for clock_getres as well.
* src/atimer.c (toplevel) [HAVE_TIMERFD]: Include sys/timerfd.h.
(toplevel): Rename alarm_timer_ok to special_timer_available.
[HAVE_TIMERFD]: Declare timerfd.
[HAVE_CLOCK_GETRES]: Declare resolution.
(start_atimer) [HAVE_CLOCK_GETRES]: Round up timestamp to
system timer resolution.
(set_alarm) [HAVE_TIMERFD]: Use timerfd_settime.
(timerfd_callback) [HAVE_TIMERFD]: New function.
(atimer_result, debug_timer_callback, Fdebug_timer_check)
[ENABLE_CHECKING]: New function for the sake of automated tests.
(init_atimer) [HAVE_TIMERFD]: Setup timerfd.
[HAVE_CLOCK_GETRES]: Likewise for system timer resolution.
[ENABLE_CHECKING]: Defsubr test function.
* src/atimer.h (timerfd_callback) [HAVE_TIMERFD]: Add prototype.
* src/lisp.h (add_timer_wait_descriptor) [HAVE_TIMERFD]: Likewise.
* src/process.c (add_timer_wait_descriptor) [HAVE_TIMERFD]: New function.
* test/automated/timer-tests.el (timer-tests-debug-timer-check): New test.
"
3193acd258557340907a7281d067fdbb426c2f54,0xAX/emacs,"Use INTERNAL_FIELD for processes.
* src/process.h (PVAR): New macro.  Adjust style.
(struct Lisp_Process): Change Lisp_Object members to INTERNAL_FIELD.
* src/print.c, src/process.c, src/sysdep.c, src/w32.c:
* src/xdisp.c: Users changed.
* admin/coccinelle/process.cocci: Semantic patch to replace direct
access to Lisp_Object members of struct Lisp_Process to PVAR.
"
e73691e1a47834aff367c9131fc3c7d78751d821,0xAX/emacs,"Improve make-temp-file performance on local files

* lisp/files.el (make-temp-file): Let make-temp-file-internal do
the work of inserting the text.
* src/fileio.c (Fmake_temp_file_internal): New arg TEXT.
All callers changed.
"
e2f560b1dce37776d33b61d50a468641dd950890,0xAX/emacs,"* sysdep.c (setpgrp): Remove definition, not used in this file.
"
d8e2b5ba620f3a69dd22d778d00aec3b71e3a87a,0xAX/emacs,"src/eval.c (unwind_to_catch) [DEBUG_GCPRO]: Remove redundant assignment.
"
fcd42c11c0e0e5fa3ab931ad2126b1d855ba240f,0xAX/emacs,"Unify Fx_focus_frame between all ports.
* src/frame.h (x_focus_frame): New prototype.
* src/xfns.c (Fx_focus_frame): Remove.
(syms_of_xfns): Do not defsubr it.
(x_focus_frame): X implementation.
* src/nsfns.m (Fx_focus_frame): Remove.
(syms_of_nsfns): Do not defsubr it.
(x_focus_frame): NS implementation.
* src/w32term.c (Fx_focus_frame): Remove.
(x_focus_on_frame): Rename to...
(x_focus_frame): W32 implementation.
* src/w32term.h (x_focus_on_frame): Remove prototype.
* src/w32fns.c (Fx_focus_frame): Remove.
(syms_of_w32fns): Do not defsubr it.
* src/frame.c (Fx_focus_frame): Define here.
(syms_of_frame): Defsubr here.
* src/gtkutil.c (xg_tool_bar_callback): Use x_focus_frame.
* lisp/frame.el (x-focus-frame): Mark as declared in frame.c.
"
ed6ce56e2326fb8b257e63e015598ad74b5fd35c,0xAX/emacs,"Terminate vc-disable-async-diff with extreme prejudice.

* vc/vc.el, and all backends: API cleanup; the backend diff method
takes an explicit async flag.  This eliminates a particularly ugly
global.
"
40b2d973c8855ba5017687defb720e85d4790938,0xAX/emacs,"* nsfont.m (ns_has_attribute): Remove.
	(ns_findfonts, nsfont_open): Use ns_attribute_fvalue() instead.
"
605a20a98823768578d6faed5f04cb00e57da2bb,0xAX/emacs,"Improve handling of processes on remote hosts.

* eshell/esh-util.el (eshell-path-env): New defvar.
(eshell-parse-colon-path): New defun.
(eshell-file-attributes): Use `eshell-parse-colon-path'.

* eshell/esh-ext.el (eshell-search-path): Use
`eshell-parse-colon-path'.
(eshell-remote-command): Remove argument HANDLER.
(eshell-external-command): Check for FTP remote connection.

* eshell/esh-proc.el (eshell-gather-process-output): Use
`file-truename', in order to start also symlinked files. Apply
`start-file-process' instead of `start-process'. Shorten `command'
to the local file name part.

* eshell/em-cmpl.el (eshell-complete-commands-list): Use
`eshell-parse-colon-path'.

* eshell/em-unix.el (eshell/du): Check for FTP remote connection.

* net/tramp.el (tramp-eshell-directory-change): New defun.  Add it
to `eshell-directory-change-hook'.
"
38b2c0769fbfc40162fc8c39170fcb28bcf69520,0xAX/emacs,"* dired.c (directory_files_internal, file_name_completion):

Rename locals to avoid shadowing.
"
85816ac1c59f9ec922686450119f7f1bf63fcd0d,0xAX/emacs,"mail-source.el (mail-source-delete-crash-box): Always move the crash box to the Incoming file.  Fixes mistake in previous checkin; Do incremental NOV updates when scanning new male.  (nnml-save-incremental-nov, nnml-open-incremental-nov, nnml-add-incremental-nov): New functions to do ""incremental"" nov updates, where we just append to the end of the existing nov files without reading/writing them in full.
"
00d4ba2794243763b818c013669e36c1d2c7de62,0xAX/emacs,"Further improvements in Tramp's file name unquoting

* lisp/net/tramp-adb.el (tramp-adb-handle-file-local-copy)
(tramp-adb-handle-write-region): Unquote localname.
(tramp-adb-handle-copy-file): Implement direct copy on remote device.
(tramp-adb-handle-rename-file): Quote arguments, add ""-f"" to force.

* lisp/net/tramp.el (tramp-file-name-unquote-localname): New defun.
(tramp-handle-file-name-case-insensitive-p):
* lisp/net/tramp-gvfs.el (tramp-gvfs-get-file-attributes)
(tramp-gvfs-connection-mounted-p, tramp-gvfs-mount-spec)
(tramp-gvfs-maybe-open-connection):
* lisp/net/tramp-sh.el (tramp-make-copy-program-file-name):
* lisp/net/tramp-smb.el (tramp-smb-get-share)
(tramp-smb-get-localname): Use it.

* test/lisp/net/tramp-tests.el (tramp--test-docker-p): New defun.
(tramp--test-special-characters, tramp-test34-utf8)
(tramp-test34-utf8-with-stat, tramp-test34-utf8-with-perl)
(tramp-test34-utf8-with-ls): Use it.
"
8a44e6d176989d8eef140314098c76a70248ba61,0xAX/emacs,"Optimize ASCII file reading with EOL format detection and decoding.
"
798aef02223bdfdf4ff383e59590b2a44eaf3a0c,0xAX/emacs,"Integer-related fixes for term.c etc.

* dispextern.h (face_tty_specified_color): New function.
* term.c (turn_on_face): Don't rely on undefined behavior when
assigning an out-of-range value to 'long'.  Simplify
test for toggling highlight.
(tty_capable_p): Omit last two (unused) args.  All callers changed.
* term.c (tty_capable_p, tty_menu_display, tty_menu_add_selection)
(read_menu_input, tty_menu_activate, tty_menu_show):
* xfaces.c (x_supports_face_attributes_p)
(tty_supports_face_attributes_p):
Use bool for boolean.  All callers changed.
(tty_supports_face_attributes_p): Omit defaults for color indices;
no longer needed.  Simplify tail call.
"
a601d3134020e10162d4b8c9af0039478ed532ea,0xAX/emacs,"Search recursively in gzipped files.  (Bug#4982)

(grep-highlight-matches): Add new options
`always' and `auto'.  Doc fix.
(grep-process-setup): Check `grep-highlight-matches' for
`auto-detect' to determine the need to compute grep defaults.
Move Windows/DOS specific --colors settings handling
to `grep-compute-defaults'.  Check `grep-highlight-matches'
to get the value of ""--color="".
(grep-compute-defaults): Compute `grep-highlight-matches' when it
has the value `auto-detect'.  Move Windows/DOS specific settings
from `grep-process-setup'.
(zrgrep): New command with alias `rzgrep'.
"
5013fc0876296bde339d1cbbdfb19a0cfa1c4079,0xAX/emacs,"* alloc.c (die): Move ""assertion failed"" string here ...

* lisp.h (eassert): ... from here.  Also, suppress evaluation of
COND when SUPPRESS_CHECKING.  This shrinks the executable text
size by 0.8% to 2.2% when configured with --enable-checking,
depending on optimization flags (GCC 4.8.1 x86-64).
"
c4e2be4587ec6d0f1367b1bfe220a71360e25bea,0xAX/emacs,"* lisp/emacs-lisp/eieio*.el: Align a bit better with CLOS

* lisp/cedet/semantic/db-el.el (semanticdb-elisp-sym->tag): Fix copy&paste
error (semanticdb-project-database => sym).  Avoid eieio--class-public-a
when possible.

* lisp/emacs-lisp/eieio-base.el (make-instance): Add a method here rather
than on eieio-constructor.

* lisp/emacs-lisp/eieio-core.el (eieio--class-print-name): New function.
(eieio-class-name): Make it do what the docstring claims.
(eieio-defclass-internal): Simplify since `prots' isn't used any more.
(eieio--slot-name-index): Simplify accordingly.
(eieio-barf-if-slot-unbound): Pass the class object rather than its
name to `slot-unbound'.

* lisp/emacs-lisp/eieio.el (defclass): Use make-instance rather than
eieio-constructor.
(set-slot-value): Mark as obsolete.
(eieio-object-class-name): Improve call to eieio-class-name.
(eieio-slot-descriptor-name, eieio-class-slots): New functions.
(object-slots): Use it.  Declare obsolete.
(eieio-constructor): Merge it with `make-instance'.
(initialize-instance): Use `dolist'.
(eieio-override-prin1, eieio-edebug-prin1-to-string):
Use eieio--class-print-name.

* test/automated/eieio-test-methodinvoke.el (make-instance): Add methods
here rather than on eieio-constructor.
"
3d9d848682f41fff87e19103f8b12968e9ba14e3,0xAX/emacs,"lisp/Makefile.in: Ignore CEDET subdirectories when making subdirs.el.

lisp/emacs-lisp/autoload.el (generated-autoload-feature): New var.
(autoload-rubric): Use it.

lisp/cedet/semantic/adebug.el (data-debug-insert-find-results-button): Require
db-find.

lisp/cedet/semantic/analyze.el: Require semantic/tag.  Don't declare
autoloaded functions.

lisp/cedet/semantic/chart.el: Don't declare autoloaded functions.

lisp/cedet/semantic/complete.el: eval-when-compile semantic/find for macro.
(semantic-collector-calculate-completions-raw): Require semantic/db-find.

lisp/cedet/semantic/ctxt.el (semantic-up-context): Require semantic/find.
Don't require it at top-level.

lisp/cedet/semantic/db-ebrowse.el (semanticdb-ebrowse-dump): Require
data-debug.  Don't require it at top-level.  Don't require semantic/sort.

lisp/cedet/semantic/db-find.el: Add local vars for autoloading.
Don't require semantic/tag-file and semantic/sort.
(semanticdb-find-default-throttle, semanticdb-find-result-length)
(semanticdb-find-result-nth, semanticdb-find-result-nth-in-buffer)
(semanticdb-find-tags-by-name, semanticdb-find-tags-for-completion)
(semanticdb-find-translate-path, semanticdb-find-table-for-include): Autoload.

lisp/cedet/semantic/db-ref.el: Require semantic and semantic/tag.
(semanticdb-ref-test): Require data-debug.  Don't require it at
top-level.

lisp/cedet/semantic/db-typecache.el: Require semantic and semantic/tag.
Declare semantic-sort-tags-by-name-then-type-increasing and
semantic-scope-tag-clone-with-scope.
eval-when-compile semantic/find for semantic-find-tags-by-* macros.
Add local vars for autoloading.
(semanticdb-typecache-find): Autoload.

lisp/cedet/semantic/db.el: Add local vars for autoloading.
(semanticdb-current-database, semanticdb-current-table)
(semanticdb-file-table-object): Autoload.

lisp/cedet/semantic/decorate.el: Don't requirements for autoloaded functions.

lisp/cedet/semantic/doc.el: Add local vars for autoloading.
(semantic-documentation-for-tag): Autoload.

lisp/cedet/semantic/edit.el: Drop requirements for autoloaded functions.

lisp/cedet/semantic/find.el: Add local vars for autoloading.
(semantic-current-tag, semantic-find-tag-by-overlay)
(semantic-find-first-tag-by-name): Autoload.

lisp/cedet/semantic/format.el: Add local vars for autoloading.
(semantic-format-tag-name, semantic-format-tag-custom-list)
(semantic-format-tag-functions): Autoload.

lisp/cedet/semantic/fw.el: Require semantic/loaddefs.

lisp/cedet/semantic/html.el (semantic-html-recursive-combobulate-list):
Use assoc-string instead of assoc-case.

lisp/cedet/semantic/ia.el (semantic-ia-insert-tag): Move up to avoid
compiler error.
(semantic-ia-complete-symbol-menu): Require imenu.
(semantic-ia-fast-jump): Require semantic/decorate/include.

lisp/cedet/semantic/idle.el: Require semantic and semantic/tag.
Declare semanticdb-typecache-refresh-for-buffer and eldoc-message.
eval-when-compile semantic/find for semantic-find-tags-by-name macro.

lisp/cedet/semantic/sort.el: Add local vars for autoloading.
(semantic-flatten-tags-table, semantic-tag-external-member-parent):
Autoload.

lisp/cedet/semantic/tag-file.el: Add local vars for autoloading.
(semantic-go-to-tag, semantic-dependency-tag-file): Autoload.

lisp/cedet/semantic/tag-ls.el: Add local vars for autoloading.
(semantic-tag-prototype-p): Autoload.

lisp/cedet/semantic/tag.el: Don't declare autoloaded functions.

lisp/cedet/semantic/analyze/complete.el: Add local variables for autoloading.
(semantic-analyze-possible-completions): Autoload.

lisp/cedet/semantic/analyze/fcn.el: Require mode-local.
"
6ae87264fd7d9ce6614e7048bc57a431d480098a,0xAX/emacs,"src/w32term.c,window.c,xdisp.c: Remove unused variables.
* w32term.c (w32_read_socket): Remove unused variable `buf'.

* window.c (Fset_window_configuration): Comment out unused variables.

* xdisp.c (Fwindow_text_pixel_size): Remove unused variables
`value' and `endp'.
"
8654f9d7d6d7c3ee97232a34a40250dcbc57af8e,0xAX/emacs,"Use fdopendir, fstatat and readlinkat, for efficiency.

On my host, this speeds up directory-files-and-attributes by a
factor of 3, when applied to Emacs's src directory.
These functions are standardized by POSIX and are common these
days; fall back on a (slower) gnulib implementation if the host
is too old to supply them.
* .bzrignore: Add lib/dirent.h.
* lib/Makefile.am (libgnu_a_SOURCES): Add openat-die.c, save-cwd.c.
* lib/careadlinkat.c, lib/careadlinkat.h: Merge from gnulib,
incorporating: 2013-01-29 careadlinkat: do not provide careadlinkatcwd.
* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
* lib/dirent.in.h, lib/fdopendir.c, lib/fstatat.c, lib/openat-priv.h:
* lib/openat-proc.c, lib/openat.h, m4/dirent_h.m4, m4/fdopendir.m4:
* m4/fstatat.m4: New files, from gnulib.
* lib/openat-die.c, lib/save-cwd.c, lib/save-cwd.h: New files.
These last three are specific to Emacs and are not copied from gnulib.
They are simpler than the gnulib versions and are tuned for Emacs.
* admin/merge-gnulib (GNULIB_MODULES): Add fdopendir, fstatat, readlinkat.
(GNULIB_TOOL_FLAGS): Do not avoid at-internal, openat-h.
Avoid dup, open, opendir.
* nt/inc/sys/stat.h (fstatat):
* nt/inc/unistd.h (readlinkat): New decls.
* src/conf_post.h (GNULIB_SUPPORT_ONLY_AT_FDCWD): Remove.
* src/dired.c: Include <fcntl.h>.
(open_directory): New function, which uses open and fdopendir
rather than opendir.  DOS_NT platforms still use opendir, though.
(directory_files_internal, file_name_completion): Use it.
(file_attributes): New function, with most of the old Ffile_attributes.
(directory_files_internal, Ffile_attributes): Use it.
(file_attributes, file_name_completion_stat): First arg is now fd,
not dir name.  All uses changed.  Use fstatat rather than lstat +
stat.
(file_attributes): Use emacs_readlinkat rather than Ffile_symlink_p.
* src/fileio.c: Include <allocator.h>, <careadlinkat.h>.
(emacs_readlinkat): New function, with much of the old
Ffile_symlink_p, but with an fd argument for speed.
It uses readlinkat rather than careadlinkatcwd, so that it
need not assume the working directory.
(Ffile_symlink_p): Use it.
* src/filelock.c (current_lock_owner): Use emacs_readlinkat
rather than emacs_readlink.
* src/lisp.h (emacs_readlinkat): New decl.
(READLINK_BUFSIZE, emacs_readlink): Remove.
* src/sysdep.c: Do not include <allocator.h>, <careadlinkat.h>.
(emacs_norealloc_allocator, emacs_readlink): Remove.
This stuff is moved to fileio.c.
* src/w32.c (fstatat, readlinkat): New functions.
(careadlinkat): Don't check that fd == AT_FDCWD.
(careadlinkatcwd): Remove; no longer needed.

Fixes: debbugs:13539
"
1b8dff239bf8091a75572064ff8fb085f3c073d6,0xAX/emacs,"* lisp/emacs-lisp/package.el: Don't recompute dir.  Use pkg-descs more.
(package-desc): Add `dir' field.
(package-desc-full-name): New function.
(package-load-descriptor): Combine the two arguments.  Don't use `load'.
(package-maybe-load-descriptor): Remove.
(package-load-all-descriptors): Just call package-load-descriptor.
(package--disabled-p): New function.
(package-desc-vers, package-desc-doc): Remove aliases.
(package--dir): Remove function.
(package-activate): Check if a package is disabled.
(package-process-define-package): New function, extracted from
define-package.
(define-package): Turn into a place holder.
(package-unpack-single, package-tar-file-info):
Use package--description-file.
(package-compute-transaction): Use package--disabled-p.
(package-download-transaction): Don't call
package-maybe-load-descriptor since they're all loaded anyway.
(package-install): Change argument to be a pkg-desc.
(package-delete): Use a single pkg-desc argument.
(describe-package-1): Use package-desc-dir instead of package--dir.
Use package-desc property instead of package-symbol.
(package-install-button-action): Adjust accordingly.
(package--push): Rewrite.
(package-menu--print-info): Adjust accordingly.  Change the ID format
to be a pkg-desc.
(package-menu-describe-package, package-menu-get-status)
(package-menu--find-upgrades, package-menu-mark-upgrades)
(package-menu-execute, package-menu--name-predicate):
Adjust accordingly.
* lisp/startup.el (package--description-file): New function.
(command-line): Use it.
* lisp/emacs-lisp/package-x.el (package-upload-buffer-internal):
Use package-desc-version.
"
1d4887a3f35ffaf1f788cf5368e25d2cbf94ee94,0xAX/emacs,"Improve documentation of 'pcase'

* doc/lispref/control.texi (Pattern matching case statement):
Reorganize, expand, and improve wording.

* etc/NEWS: Mention that 'pcase' changes are documented.

Co-authored-by: John Wiegley <3f305b4b498a0d8642698be7e34009ae75d7e01c@gnu.org>
Co-authored-by: Michael Heerdegen <4f6b9018065b9697a806a7d6559704bc065c6835@web.de>
"
a25f4dfafb02f162dcfca3729b37ed2bbcfe44e0,0xAX/emacs,"* lisp.h (circular_list_error, FOREACH): Remove; unused.

* data.c (circular_list_error): Remove.
"
68b98f17f9dbf0384e83d03ca01ee8ddd2217eeb,0xAX/emacs,"Fix the MSDOS build due to recent changes.

 msdos/mainmake.v2 (boot): Condition the value on the existence of
 autogen/README, not admin/admin.el, since the latter is now part
 of the release tarball.
 (install): Don't copy lib-src/fns.el, as that file is no longer
 generated in that directory.
 msdos/sed1v2.inp (LIB_PTHREAD, LIB_PTHREAD_SIGMASK): Edit to empty.
 (SETTINGS_CFLAGS, SETTINGS_LIBS): Edit these instead of
 GCONF_CFLAGS and GCONF_LIBS.
 msdos/sedlibmk.inp (ALLOCA_H, AR, ARFLAGS, GNULIB_CHDIR, GNULIB_DUP)
 (GNULIB_FDATASYNC, GNULIB_FDOPEN, GNULIB_FSTAT, GNULIB_PCLOSE)
 (GNULIB_PTHREAD_SIGMASK, GNULIB_RAISE, GNULIB_SIGACTION)
 (GNULIB_SIGPROCMASK, GNULIB_SIGNAL_H_SIGPIPE, HAVE_FDATASYNC)
 (HAVE_PCLOSE, HAVE_POPEN, HAVE_POSIX_SIGNALBLOCKING)
 (HAVE_PTHREAD_SIGMASK, HAVE_RAISE, HAVE_SIGACTION)
 (HAVE_SIGHANDLER_T, HAVE_SIGINFO_T, HAVE_SIGSET_T)
 (HAVE_STRUCT_SIGACTION_SA_SIGACTION)
 (HAVE_TYPE_VOLATILE_SIG_ATOMIC_T, LIB_PTHREAD)
 (LIB_PTHREAD_SIGMASK, NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H)
 (NEXT_SIGNAL_H, REPLACE_FDOPEN, REPLACE_PTHREAD_SIGMASK)
 (REPLACE_RAISE): New edits.
 (gl_LIBOBJS): Remove md5.o, filemode.o, and sha1.o.  Add
 pthread_sigmask.o.
 (@GL_GENERATE_ALLOCA_H_TRUE@, @GL_GENERATE_ALLOCA_H_FALSE@): Edit
 to comment out unneeded lines.
 (warn-on-use.h): Edit the recipe commands to work with DJGPP
 without requiring a Unixy shell.
 msdos/inttypes.h (strtoimax) [DJGPP < 2.04]: New macro.
 msdos/sed2v2.inp (HAVE_ALLOCA, HAVE_DECL_STRTOLL, HAVE_DECL_STRTOIMAX)
 (HAVE_STRTOLL, HAVE_SIGSET_T, HAVE_SNPRINTF): New edits.

 .bzrignore: Add ./GNUmakefile.unix.
 config.bat: Rename GNUmakefile, so it is not run on MS-DOS.
 Rename signal.in.h and alloca.in.h.

 src/sysdep.c (snprintf) [EOVERFLOW]: If EOVERFLOW is not defined,
 use EDOM.
"
cc0f2ece4753d6e15eaa9519dc672b9ef332a55d,0xAX/emacs,"Fix some function declarations

* lisp/calc/calc-embed.el (thing-at-point-looking-at):
* lisp/emacs-lisp/map-ynp.el (x-popup-dialog):
* lisp/obsolete/lmenu.el (x-popup-dialog):
* lisp/emacs-lisp/package.el (url-recreate-url):
* lisp/mail/mailclient.el (clipboard-kill-ring-save):
* lisp/subr.el (x-popup-dialog): Update declaration.

* lisp/mail/rmail.el (rmail-mime-message-p):
* lisp/window.el (tool-bar-lines-needed): Remove unnecessary declaration.
"
ffdc270a762ee93261f133632a9f82ea6ace9424,0xAX/emacs,"Use Gnulib ACL implementation, for benefit of Solaris etc.

* configure.ac: Remove -with-acl option, since Gnulib does that for
us now.
(LIBACL_LIBS): Remove; no longer needed.
* lib/Makefile.am (CLEANFILES, SUFFIXES): New (empty) macros,
for the benefit of the new ACL implementation.
* lib/makefile.w32-in (GNULIBOBJS): Add $(BLD)/acl-errno-valid.$(O).
($(BLD)/acl-errno-valid.$(O)): New rule.
* lib/acl-errno-valid.c, lib/acl-internal.h, lib/acl.h:
* lib/acl_entries.c, lib/errno.in.h, lib/file-has-acl.c:
* lib/qcopy-acl.c, lib/qset-acl.c, m4/acl.m4, m4/errno_h.m4:
New files, taken from gnulib.
* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
* admin/merge-gnulib (GNULIB_MODULES): Add qacl.
(GNULIB_TOOL_FLAGS): Do not avoid errno.
* etc/NEWS: Emacs is no longer limited to POSIX ACLs.  --disable-acl,
not --without-acl, since we're now using Gnulib's implementation.
* nt/config.nt (HAVE_ACL_SET_FILE): Rename from HAVE_POSIX_ACL.
* nt/inc/ms-w32.h (EOPNOTSUPP): New macro.
* src/Makefile.in (LIB_ACL): New macro.
(LIBACL_LIBS): Remove.
(LIBES): Use LIB_ACL, not LIBACL_LIBS.
* src/fileio.c: Include <acl.h>.
Use HAVE_ACL_SET_FILE rather than HAVE_POSIX_ACL.
(ACL_NOT_WELL_SUPPORTED): Remove.  All uses replaced by
!acl_errno_valid.
(Fcopy_file) [!WINDOWSNT]: Use qcopy_acl instead of rolling
it ourselves.

Fixes: debbugs:14295
"
8bf997efee7b3bc523a4c2bad3a1b228b14e40dd,0xAX/emacs,"* cedet/semantic/idle.el (semantic-idle-scheduler-work-timer):
Change timeout to 1.  Doc fix.

* cedet/semantic/edit.el (semantic-change-hooks): Add
semantic-edits-change-function-handle-changes directly.

* cedet/semantic/util.el (semantic--completion-cache): Move to
semantic.el.
(semantic-symbol-start): Remove unneeded function.

* cedet/semantic.el (semantic--completion-cache): Move here from
semantic/util.el
(semantic-clear-toplevel-cache, semantic--set-buffer-cache)
(semantic-fetch-tags): Reset semantic--completion-cache.
(semantic-force-refresh): New function
(semantic-mode-map): New variable.

* cedet/semantic/senator.el: New file.

* cedet/ede.el: Fix autoload.
(ede-customize-forms-menu): Handle null projects.
"
ded80a25b7d4a088dd4c4a714666705749106138,0xAX/emacs,"Cleanups for src/callproc.c.
* src/callproc.c (child_setup): Remove subprocesses conditional.
Remove code dealing with SET_EMACS_PRIORITY, unused.
"
93855df97b1f05c7edce377c8af9da444b3dcc66,0xAX/emacs,"Merge changes made in Gnus trunk.

nnmaildir.el (nnmaildir-request-accept-article): Don't call `unix-sync' unless it's defined.
gnus-art.el (gnus-article-stop-animations): Use `elt' instead of `aref' for XEmacs compatibiltiy.
spam.el (spam-fetch-field-fast): Rewrite slightly for clarity.
gnus-sum.el (gnus-summary-refer-thread): Since lambdas aren't closures, quote the form properly (bug#9194).
gnus-sum.el (gnus-summary-insert-new-articles): Clean up slightly.
 (gnus-summary-insert-new-articles): Protect against servers that are down.
"
b3bf18b3b87ac8f00857b8bfc3f2c74cf0e2fb7d,0xAX/emacs,"Use SAFE_ALLOCA etc. to avoid unbounded stack allocation.

This follows up on the recent thread in emacs-devel on alloca; see:
http://lists.gnu.org/archive/html/emacs-devel/2014-09/msg00042.html
This patch also cleans up alloca-related glitches noted while
examining the code looking for unbounded alloca.
* alloc.c (listn):
* callproc.c (init_callproc):
Rewrite to avoid need for alloca.
* buffer.c (mouse_face_overlay_overlaps)
(report_overlay_modification):
* buffer.h (GET_OVERLAYS_AT):
* coding.c (make_subsidiaries):
* doc.c (Fsnarf_documentation):
* editfns.c (Fuser_full_name):
* fileio.c (Ffile_name_directory, Fexpand_file_name)
(search_embedded_absfilename, Fsubstitute_in_file_name):
* fns.c (Fmake_hash_table):
* font.c (font_vconcat_entity_vectors, font_update_drivers):
* fontset.c (fontset_pattern_regexp, Ffontset_info):
* frame.c (Fmake_terminal_frame, x_set_frame_parameters)
(xrdb_get_resource, x_get_resource_string):
* ftfont.c (ftfont_get_charset, ftfont_check_otf, ftfont_drive_otf):
* ftxfont.c (ftxfont_draw):
* image.c (xbm_load, xpm_load, jpeg_load_body):
* keyboard.c (echo_add_key, menu_bar_items, tool_bar_items):
* keymap.c (Fdescribe_buffer_bindings, describe_map):
* lread.c (openp):
* menu.c (digest_single_submenu, find_and_call_menu_selection)
(find_and_return_menu_selection):
* print.c (PRINTFINISH):
* process.c (Fformat_network_address):
* scroll.c (do_scrolling, do_direct_scrolling, scrolling_1):
* search.c (search_buffer, Fmatch_data, Fregexp_quote):
* sound.c (wav_play, au_play):
* syntax.c (skip_chars):
* term.c (tty_menu_activate, tty_menu_show):
* textprop.c (get_char_property_and_overlay):
* window.c (Fset_window_configuration):
* xdisp.c (safe__call, next_overlay_change, vmessage)
(compute_overhangs_and_x, draw_glyphs, note_mouse_highlight):
* xfaces.c (face_at_buffer_position):
* xmenu.c (x_menu_show):
Use SAFE_ALLOCA etc. instead of plain alloca, since the
allocation size isn't bounded.
* callint.c (Fcall_interactively): Redo memory_full check
so that it can be done at compile-time on some platforms.
* coding.c (MAX_LOOKUP_MAX): New constant.
(get_translation_table): Use it.
* callproc.c (call_process): Use SAFE_NALLOCA instead of
SAFE_ALLOCA, to catch integer overflows on size calculation.
(exec_failed) [!DOS_NT]: New function.
(child_setup) [!DOS_NT]: Use it.
* editfns.c (Ftranspose_regions):
Hoist USE_SAFE_ALLOC + SAFE_FREE out of 'if'.
* editfns.c (check_translation):
Allocate larger buffers on the heap.
* eval.c (internal_lisp_condition_case):
Check for MAX_ALLOCA overflow.
* fns.c (sort_vector): Use SAFE_ALLOCA_LISP rather than Fmake_vector.
(Fbase64_encode_region, Fbase64_decode_region):
Avoid unnecessary calls to SAFE_FREE before 'error'.
* buffer.c (mouse_face_overlay_overlaps):
* editfns.c (Fget_pos_property, check_translation):
* eval.c (Ffuncall):
* font.c (font_unparse_xlfd, font_find_for_lface):
* ftfont.c (ftfont_drive_otf):
* keyboard.c (echo_add_key, read_decoded_event_from_main_queue)
(menu_bar_items, tool_bar_items):
* sound.c (Fplay_sound_internal):
* xdisp.c (load_overlay_strings, dump_glyph_row):
Use an ordinary auto buffer rather than alloca, since the
allocation size is fixed and small.
* ftfont.c: Include <c-strcase.h>.
(matching_prefix): New function.
(get_adstyle_property): Use it, to avoid need for alloca.
* keyboard.c (echo_add_key):
* keymap.c (describe_map): Use ptrdiff_t, not int.
* keyboard.c (echo_add_key): Prefer sizeof to strlen.
* keymap.c (Fdescribe_buffer_bindings): Use SBYTES, not SCHARS,
when counting bytes.
* lisp.h (xlispstrdupa): Remove, replacing with ...
(SAFE_ALLOCA_STRING): ... new macro with different API.
This fixes a portability problem, namely, alloca result
passed to another function.  All uses changed.
(SAFE_ALLOCA, SAFE_ALLOCA_LISP): Check for MAX_ALLOCA,
not MAX_ALLOCA - 1.
* regex.c (REGEX_USE_SAFE_ALLOCA, REGEX_SAFE_FREE)
(REGEX_ALLOCATE): New macros.
(REGEX_REALLOCATE, REGEX_ALLOCATE_STACK, REGEX_REALLOCATE_STACK)
(REGEX_FREE_STACK, FREE_VARIABLES, re_match_2_internal):
Use them.
* xdisp.c (message3): Use SAFE_ALLOCA_STRING rather than doing it
by hand.
(decode_mode_spec_coding): Store directly into buf rather than
into an alloca temporary and copying the temporary to the buf.

Fixes: debbugs:18410
"
c87523bd8dbd9c9c5b8afdae43107f0badc0c924,0xAX/emacs,"text-quoting-style in emacs-lisp diagnostics

* lisp/emacs-lisp/advice.el (ad-read-advised-function)
(ad-read-advice-class, ad-read-advice-name, ad-enable-advice)
(ad-disable-advice, ad-remove-advice, ad-set-argument)
(ad-set-arguments):
* lisp/emacs-lisp/byte-opt.el (byte-compile-inline-expand)
(byte-compile-unfold-lambda, byte-optimize-form-code-walker)
(byte-optimize-while, byte-optimize-apply):
* lisp/emacs-lisp/bytecomp.el (byte-compile-lapcode)
(byte-compile-log-file, byte-compile-format-warn)
(byte-compile-nogroup-warn, byte-compile-arglist-warn)
(byte-compile-cl-warn)
(byte-compile-warn-about-unresolved-functions)
(byte-compile-file, byte-compile-fix-header)
(byte-compile--declare-var, byte-compile-file-form-defmumble)
(byte-compile-form, byte-compile-normal-call)
(byte-compile-variable-ref, byte-compile-variable-set)
(byte-compile-subr-wrong-args, byte-compile-setq-default)
(byte-compile-negation-optimizer)
(byte-compile-condition-case--old)
(byte-compile-condition-case--new, byte-compile-save-excursion)
(byte-compile-defvar, byte-compile-autoload)
(byte-compile-lambda-form)
(byte-compile-make-variable-buffer-local, display-call-tree)
(batch-byte-compile):
* lisp/emacs-lisp/cconv.el (cconv-convert, cconv--analyze-use)
(cconv-analyze-form):
* lisp/emacs-lisp/chart.el (chart-space-usage):
* lisp/emacs-lisp/check-declare.el (check-declare-scan)
(check-declare-warn, check-declare-file)
(check-declare-directory):
* lisp/emacs-lisp/checkdoc.el (checkdoc-this-string-valid-engine)
(checkdoc-message-text-engine):
* lisp/emacs-lisp/cl-extra.el (cl-parse-integer):
* lisp/emacs-lisp/cl-macs.el (cl--parse-loop-clause, cl-tagbody)
(cl-symbol-macrolet):
* lisp/emacs-lisp/cl.el (cl-unload-function, flet):
* lisp/emacs-lisp/copyright.el (copyright)
(copyright-update-directory):
* lisp/emacs-lisp/edebug.el (edebug-read-list):
* lisp/emacs-lisp/eieio-base.el (eieio-persistent-read):
* lisp/emacs-lisp/eieio-core.el (eieio--slot-override)
(eieio-oref, eieio-oset-default):
* lisp/emacs-lisp/eieio-speedbar.el:
(eieio-speedbar-child-make-tag-lines)
(eieio-speedbar-child-description):
* lisp/emacs-lisp/eieio.el (defclass, change-class):
* lisp/emacs-lisp/elint.el (elint-file, elint-get-top-forms)
(elint-init-form, elint-check-defalias-form)
(elint-check-let-form):
* lisp/emacs-lisp/ert.el (ert-get-test):
* lisp/emacs-lisp/find-func.el (find-function-search-for-symbol)
(find-function-library):
* lisp/emacs-lisp/generator.el (iter-yield):
* lisp/emacs-lisp/gv.el (gv-define-simple-setter):
* lisp/emacs-lisp/lisp-mnt.el (lm-verify):
* lisp/emacs-lisp/package-x.el (package-upload-file):
* lisp/emacs-lisp/package.el (package-version-join)
(package-disabled-p, package-activate-1, package-activate)
(package--download-one-archive)
(package--download-and-read-archives)
(package-compute-transaction, package-install-from-archive)
(package-install, package-install-selected-packages)
(package-delete, package-autoremove)
(package-install-button-action, package-delete-button-action)
(package-menu-hide-package, package-menu--list-to-prompt)
(package-menu--perform-transaction)
(package-menu--find-and-notify-upgrades):
* lisp/emacs-lisp/pcase.el (pcase-exhaustive, pcase--u1):
* lisp/emacs-lisp/re-builder.el (reb-enter-subexp-mode):
* lisp/emacs-lisp/ring.el (ring-next, ring-previous):
* lisp/emacs-lisp/rx.el (rx-check, rx-anything):
* lisp/emacs-lisp/smie.el (smie-config-save):
* lisp/emacs-lisp/subr-x.el (internal--check-binding):
* lisp/emacs-lisp/testcover.el (testcover-1value):
Use curved quotes in diagnostic format strings.
"
ebb99847285bca912e04f79dd3d9dcc84769ccf6,0xAX/emacs,"Change comparison functions =, <, >, <=, >= to take many arguments.
* src/data.c: Change comparison functions' interface and
  implementation
* src/lisp.h: Make arithcompare available for efficient two arg
  comparisons
* src/bytecode.c: Use arithcompare
* src/fileio.c: Use new interface
* test/automated/data-tests.el: New tests for comparison functions
* etc/NEWS
"
a9ac20c179e62f69c77a068f6107e4b186e4c24d,0xAX/emacs,"Add support for `file-system-info' in Tramp

* lisp/net/tramp.el (tramp-file-name-for-operation):
Add `file-system-info'.

* lisp/net/tramp-adb.el (tramp-adb-handle-file-system-info): New defun.
(tramp-adb-file-name-handler-alist): Use it.

* lisp/net/tramp-gvfs.el (tramp-gvfs-file-system-attributes)
(tramp-gvfs-file-system-attributes-regexp): New defconst.
(tramp-gvfs-handle-file-system-info): New defun.
(tramp-gvfs-file-name-handler-alist): Use it.
(tramp-gvfs-get-directory-attributes): Fix property name.
(tramp-gvfs-get-root-attributes): Support also file system attributes.

* lisp/net/tramp-sh.el (tramp-sh-handle-file-system-info): New defun.
(tramp-sh-file-name-handler-alist): Use it.
(tramp-sh-handle-insert-directory): Insert size information.
(tramp-get-remote-df): New defun.

* lisp/net/tramp-smb.el (tramp-smb-handle-file-system-info): New defun.
(tramp-smb-file-name-handler-alist): Use it.
(tramp-smb-handle-insert-directory): Insert size information.

* test/lisp/net/tramp-tests.el (tramp-test37-file-system-info):
New test.
(tramp-test38-asynchronous-requests)
(tramp-test39-recursive-load, tramp-test40-remote-load-path)
(tramp-test41-unload): Rename.
"
e8001d4c27e1e33c83b9994aac4d5fc3feada2da,0xAX/emacs,"Do not munge contents of local symbolic links

This lets Emacs deal with arbitrary local symlinks without
mishandling their contents (Bug#28156).  For example,
(progn (shell-command ""ln -fs '~' 'x'"") (rename-file ""x"" ""/tmp/x""))
now consistently creates a symbolic link from '/tmp/x' to '~'.
Formerly, it did that only if the working directory was on the
same filesystem as /tmp; otherwise, it expanded the '~' to
the user's home directory.
* lisp/dired.el (dired-get-filename): Use files--name-absolute-system-p
instead of rolling our own code.
* lisp/files.el (files--name-absolute-system-p): New function.
(file-truename, file-chase-links): Use it to avoid mishandling
symlink contents that begin with ~.
(copy-directory, move-file-to-trash):
Use concat rather than expand-file-name, to avoid mishandling
symlink contents that begin with ~.
* src/fileio.c (Fmake_symbolic_link): Do not expand leading ""~"" in the
target unless interactive.  Strip leading ""/:"" if interactive.
(emacs_readlinkat): Do not prepend ""/:"" to the link target if
it starts with ""/"" and contains "":"" before NUL.
* test/src/fileio-tests.el (try-link): Rename from try-char,
and accept a string instead of a char.  All uses changed.
(fileio-tests--symlink-failure): Also test leading ~, and ""/:"",
to test the new behavior.
"
6a37ecee0884ff30ac7666e6502e2a9d2608f291,0xAX/emacs,"Port to 32-bit --with-wide-int

Prefer symbol indexes to struct Lisp_Symbol * casted and then
widened, as the latter had trouble with GCC on Fedora 21 when
configured --with-wide-int and when used in static initializers.
* lib-src/make-docfile.c (write_globals): Define and use symbols like
iQnil (a small integer, like 0) rather than aQnil (an address
constant).
* src/alloc.c (garbage_collect_1, which_symbols):
* src/lread.c (init_obarray):
Prefer builtin_lisp_symbol when it can be used.
* src/dispextern.h (struct image_type.type):
* src/font.c (font_property_table.key):
* src/frame.c (struct frame_parm_table.sym):
* src/keyboard.c (scroll_bar_parts, struct event_head):
* src/xdisp.c (struct props.name):
Use the index of a builtin symbol rather than its address.
All uses changed.
* src/lisp.h (TAG_SYMPTR, XSYMBOL_INIT): Remove, replacing with ...
(TAG_SYMOFFSET, SYMBOL_INDEX): ... new macros that deal with
symbol indexes rather than pointers, and which work better on MSB
hosts because they shift right before tagging.  All uses changed.
(DEFINE_LISP_SYMBOL_BEGIN, DEFINE_LISP_SYMBOL_END):
No longer noops on wide-int hosts, since they work now.
(builtin_lisp_symbol): New function.
"
09ffa822f8c0ff82d7a277d1bc673cc0831010b6,0xAX/emacs,"* emacs-lisp/smie.el (smie-prec2->grammar): Simplify handling
of :smie-open/close-alist.
(smie-next-sexp): Make it accept a ""start token"" as argument.
(smie-indent-keyword): Be careful not to misidentify tokens that span
more than one line, as empty lines.  Add argument `token'.
"
23f86fce48e1cc8118f0ea5cce49d1acfd4364c4,0xAX/emacs,"Cleanup xmalloc.
* admin/coccinelle/xzalloc.cocci: Semantic patch to convert
calls to xmalloc with following memset to xzalloc.
* src/lisp.h (xzalloc): New prototype.  Omit needless casts.
* src/alloc.c (xzalloc): New function.  Omit needless casts.
* src/charset.c: Omit needless casts.  Convert all calls to
malloc with following memset to xzalloc.
* src/dispnew.c: Likewise.
* src/fringe.c: Likewise.
* src/image.c: Likewise.
* src/sound.c: Likewise.
* src/term.c: Likewise.
* src/w32fns.c: Likewise.
* src/w32font.c: Likewise.
* src/w32term.c: Likewise.
* src/xfaces.c: Likewise.
* src/xfns.c: Likewise.
* src/xterm.c: Likewise.
* src/atimer.c: Omit needless casts.
* src/buffer.c: Likewise.
* src/callproc.c: Likewise.
* src/ccl.c: Likewise.
* src/coding.c: Likewise.
* src/composite.c: Likewise.
* src/doc.c: Likewise.
* src/doprnt.c: Likewise.
* src/editfns.c: Likewise.
* src/emacs.c: Likewise.
* src/eval.c: Likewise.
* src/filelock.c: Likewise.
* src/fns.c: Likewise.
* src/gtkutil.c: Likewise.
* src/keyboard.c: Likewise.
* src/lisp.h: Likewise.
* src/lread.c: Likewise.
* src/minibuf.c: Likewise.
* src/msdos.c: Likewise.
* src/print.c: Likewise.
* src/process.c: Likewise.
* src/region-cache.c: Likewise.
* src/search.c: Likewise.
* src/sysdep.c: Likewise.
* src/termcap.c: Likewise.
* src/terminal.c: Likewise.
* src/tparam.c: Likewise.
* src/w16select.c: Likewise.
* src/w32.c: Likewise.
* src/w32reg.c: Likewise.
* src/w32select.c: Likewise.
* src/w32uniscribe.c: Likewise.
* src/widget.c: Likewise.
* src/xdisp.c: Likewise.
* src/xmenu.c: Likewise.
* src/xrdb.c: Likewise.
* src/xselect.c: Likewise.
"
9481c00201c52494d5119cecd4c267bfd0c5d19e,0xAX/emacs,"Install new buffer display functions and variables.

* window.el (display-buffer-function): Rewrite doc-string.
(display-buffer-window, display-buffer-alist): New variables.
(display-buffer-split-specifiers)
(display-buffer-side-specifiers)
(display-buffer-macro-specifiers): New constants.
(display-buffer-even-window-sizes, display-buffer-set-height)
(display-buffer-set-width, display-buffer-select-window)
(display-buffer-in-window, display-buffer-reuse-window)
(display-buffer-split-window-1, display-buffer-split-window)
(display-buffer-split-atom-window, display-buffer-pop-up-window)
(display-buffer-pop-up-frame, display-buffer-pop-up-side-window)
(display-buffer-in-side-window, normalize-buffer-to-display)
(display-buffer-normalize-specifiers-1)
(display-buffer-normalize-specifiers-2)
(display-buffer-normalize-specifiers, display-buffer-frame): New
functions.
(display-buffer): Major rewrite.
(display-buffer-other-window, display-buffer-other-frame)
(pop-to-buffer, switch-to-buffer-other-window)
(switch-to-buffer-other-frame): Rewrite.
(display-buffer-same-window, display-buffer-same-frame)
(display-buffer-same-frame-other-window)
(pop-to-buffer-same-window, pop-to-buffer-same-frame)
(pop-to-buffer-other-window)
(pop-to-buffer-same-frame-other-window)
(pop-to-buffer-other-frame, switch-to-buffer-same-frame)
(switch-to-buffer-other-window-same-frame): New functions.
(same-window-p, special-display-p): Rewrite disabling warnings.
Make obsolete.
(pop-up-frames, display-buffer-reuse-frames, pop-up-windows)
(display-buffer-mark-dedicated): Initialize to symbol 'unset.
Make obsolete
(same-window-buffer-names, same-window-regexps)
(special-display-frame-alist, special-display-popup-frame)
(special-display-function, special-display-buffer-names)
(special-display-regexps, pop-up-frame-alist)
(pop-up-frame-function, split-window-preferred-function)
(split-height-threshold, split-width-threshold)
(even-window-heights): Make obsolete.
"
df5b49306e8e82e2f18ed3243700c11ca7835750,0xAX/emacs,"Simplify and port recent bool vector changes.

* configure.ac (BITSIZEOF_SIZE_T, SIZEOF_SIZE_T):
New symbols to configure.
* src/alloc.c (ROUNDUP): Move here from lisp.h, since it's now used
only in this file.  Use a more-efficient implementation if the
second argument is a power of 2.
(ALIGN): Rewrite in terms of ROUNDUP.  Make it a function.
Remove no-longer-necessary compile-time checks.
(bool_vector_exact_payload_bytes): New function.
(bool_vector_payload_bytes): Remove 2nd arg; callers that need
exact payload changed to call the new function.  Do not assume
that the arg or result fits in ptrdiff_t.
(bool_vector_fill): New function.
(Fmake_bool_vector): Use it.  Don't assume bit counts fit
in ptrdiff_t.
(vroundup_ct): Don't assume arg fits in size_t.
* src/category.c (SET_CATEGORY_SET): Remove.  All callers now just
invoke set_category_set.
(set_category_set): 2nd arg is now EMACS_INT and 3rd is now bool.
All callers changed.  Use bool_vector_set.
* src/category.h (XCATEGORY_SET): Remove; no longer needed.
(CATEGORY_MEMBER): Now a function.  Rewrite in terms of
bool_vector_bitref.
* src/data.c (Faref): Use bool_vector_ref.
(Faset): Use bool_vector_set.
(bits_word_to_host_endian): Don't assume you can shift by CHAR_BIT.
(Fbool_vector_not, Fbool_vector_count_matches)
(Fbool_vector_count_matches_at): Don't assume CHAR_BIT == 8.
* src/fns.c (concat): Use bool_vector_ref.
(Ffillarray): Use bool_vector_fill.
(mapcar1): Use bool_vector_ref.
(sxhash_bool_vector): Hash words, not bytes.
* src/lisp.h (BOOL_VECTOR_BITS_PER_CHAR): Now a macro as well as
a constant, since it's now used in #if.
(bits_word, BITS_WORD_MAX, BITS_PER_BITS_WORD): Fall back on
unsigned char on unusual architectures, so that we no longer
assume that the number of bits per bits_word is a power of two or
is a multiple of 8 or of CHAR_BIT.
(Qt): Add forward decl.
(struct Lisp_Bool_Vector): Don't assume EMACS_INT is aligned
at least as strictly as bits_word.
(bool_vector_data, bool_vector_uchar_data): New accessors.
All data structure accesses changed to use them.
(bool_vector_words, bool_vector_bitref, bool_vector_ref)
(bool_vector_set): New functions.
(bool_vector_fill): New decl.
(ROUNDUP): Move to alloc.c as described above.
"
22a648b4d6cfcb369730b0c41232a047fd5616fb,0xAX/emacs,"* xdisp.c (syms_of_xdisp): Remove duplicated definition of Qtext.
"
5cb15713d8575fae940c9f177874ea98e5e7c7e0,0xAX/emacs,"Silence byte-compiler warnings.

* lisp/emacs-lisp/bytecomp.el (byte-compile-insert-header):
* lisp/faces.el (crm-separator): Silence byte-compiler.
* lisp/progmodes/gud.el (gdb-speedbar-auto-raise, gud-tooltip-mode)
  (tool-bar-map): Remove unneeded defvars.
"
28e0124dd05419689a8a94ec4381e53d4644989c,0xAX/emacs,"* src/keyboard.c (Vtop_level_message): Rename to
Vinternal__top_level_message, as suggested by Stefan Monnier in
http://lists.gnu.org/archive/html/emacs-devel/2014-08/msg00493.html
All related users changed.
* lisp/startup.el (normal-top-level): Now use internal--top-level-message.
* doc/lispref/eval.texi (Eval): Mention possible recovery from stack overflow.
"
381c0bfaf2104295f25c4cc0ea68e881ed37170e,0xAX/emacs,"Unbreak jumping to an alias's definition

* lisp/emacs-lisp/find-func.el (find-function-library): Return a pair
(ORIG-FUNCTION . LIBRARY) instead of just its second element.
(find-function-noselect): Use it.

* lisp/progmodes/elisp-mode.el (elisp--xref-identifier-file): Rename to
`elisp--xref-identifier-location', incorporate logic from
`elisp--xref-find-definitions', use the changed
`find-function-library' return value.
"
85fece3ec2ac88faec0ae3da5417d6e60b10cc63,0xAX/emacs,"GLYPH_DEBUG fixes

The following patches are for when GLYPH_DEBUG && !XASSERT.
* dispextern.h (trace_redisplay_p, dump_glyph_string):
* dispnew.c (flush_stdout):
* xdisp.c (dump_glyph_row, dump_glyph_matrix, dump_glyph):
Mark as externally visible.
* dispnew.c (check_window_matrix_pointers): Now static.
* dispnew.c (window_to_frame_vpos):
* xfns.c (unwind_create_frame):
* xterm.c (x_check_font): Remove unused local.
* scroll.c (CHECK_BOUNDS):
* xfaces.c (cache_fache): Rename local to avoid shadowing.
* xfns.c, w32fns.c (image_cache_refcount, dpyinfo_refcount): Now static.
* xdisp.c (check_window_end): Now a no-op if !XASSERTS.
(debug_first_unchanged_at_end_vpos, debug_last_unchanged_at_beg_vpos)
(debug_dvpos, debug_dy, debug_delta, debug_delta_bytes, debug_end_vpos):
Now static.
(debug_method_add): Use va_list and vsprintf rather than relying
on undefined behavior with wrong number of arguments.
(dump_glyph, dump_glyph_row, Fdump_glyph_matrix):
Don't assume ptrdiff_t and EMACS_INT are the same width as int.
In this code, it's OK to assume C99 behavior for ptrdiff_t formats
since we're not interested in debugging glyphs with old libraries.
* xfaces.c (cache_face): Move debugging code earlier; this pacifies
GCC 4.6.0's static checking.
"
2f592f95d2344d4a28eb946848330dca49e0f5ee,0xAX/emacs,"Merge the specpdl and backtrace stacks.  Make the structure of the
specpdl entries more obvious via a tagged union of structs.
* src/lisp.h (BITS_PER_PTRDIFF_T): New constant.
(enum specbind_tag): New enum.
(struct specbinding): Make it a tagged union of structs.
Add a case for backtrace records.
(specpdl_symbol, specpdl_old_value, specpdl_where, specpdl_arg)
(specpdl_func, backtrace_function, backtrace_nargs, backtrace_args)
(backtrace_debug_on_exit): New accessors.
(struct backtrace): Remove.
(struct catchtag): Remove backlist field.
* src/data.c (let_shadows_buffer_binding_p, let_shadows_global_binding_p):
Move to eval.c.
(Flocal_variable_p): Speed up the common case where the binding is
already loaded.
* src/eval.c (backtrace_list): Remove.
(set_specpdl_symbol, set_specpdl_old_value): Remove.
(set_backtrace_args, set_backtrace_nargs)
(set_backtrace_debug_on_exit, backtrace_p, backtrace_top)
(backtrace_next): New functions.
(Fdefvaralias, Fdefvar): Adjust to new specpdl format.
(unwind_to_catch, internal_lisp_condition_case)
(internal_condition_case, internal_condition_case_1)
(internal_condition_case_2, internal_condition_case_n): Don't bother
with backtrace_list any more.
(Fsignal): Adjust to new backtrace format.
(grow_specpdl): Move up.
(record_in_backtrace): New function.
(eval_sub, Ffuncall): Use it.
(apply_lambda): Adjust to new backtrace format.
(let_shadows_buffer_binding_p, let_shadows_global_binding_p): Move from
data.c.
(specbind): Adjust to new specpdl format.  Simplify.
(record_unwind_protect, unbind_to): Adjust to new specpdl format.
(Fbacktrace_debug, Fbacktrace, Fbacktrace_frame): Adjust to new
backtrace format.
(mark_backtrace): Remove.
(mark_specpdl, get_backtrace, backtrace_top_function): New functions.
* src/xdisp.c (redisplay_internal): Use record_in_backtrace.
* src/alloc.c (Fgarbage_collect): Use record_in_backtrace.
Use mark_specpdl.
* src/profiler.c (record_backtrace): Use get_backtrace.
(handle_profiler_signal): Use backtrace_top_function.
* src/.gdbinit (xbacktrace, hookpost-backtrace): Use new backtrace
accessor functions.
"
a041960a7ca40a5af684efb3e859edd9daae907d,0xAX/emacs,"Improve ralloc.c interface checking.

See http://lists.gnu.org/archive/html/emacs-devel/2011-12/msg00720.html
* buffer.c (ralloc_reset_variable, r_alloc, r_re_alloc)
(r_alloc_free) [REL_ALLOC]: Move decls from here ...
* lisp.h (r_alloc, r_alloc_free, r_re_alloc, r_alloc_reset_variable)
[REL_ALLOC]: ... to here, to check interface.
* m/ia64.h (r_alloc, r_alloc_free) [REL_ALLOC && !_MALLOC_INTERNAL]:
Remove decls.  This fixes an ""It stinks!"".
"
44b031a6b00d435deab1ba36cf4a80183c0fe5aa,0xAX/emacs,"Remove unused output variable LIB_SRC_EXTRA_INSTALLABLES.

* configure.in (LIB_SRC_EXTRA_INSTALLABLES): Remove, unused.

* lib-src/Makefile.in (INSTALLABLES): Remove @LIB_SRC_EXTRA_INSTALLABLES@.

* msdos/sed3v2.inp (INSTALLABLES): No more @LIB_SRC_EXTRA_INSTALLABLES@.
"
0fc50303657161480bb34b09ad4cad99bb5fdd57,0xAX/emacs,"calc-menu.el (calc-modes-menu): Add entries for matrix modes
and simplification modes.
"
9cb2ac56160821e76bb138c0b847b608d1e6473e,0xAX/emacs,"src/chartab.c (uniprop_table_uncompress): Remove unused local variable.
"
2de39f089a464cc265b6c583684226d1a94abbfa,0xAX/emacs,"* lisp/emacs-lisp/edebug.el: Miscellaneous cleanup.
Remove obsolete byte-compiler hack that tried to silence some warnings.
(edebug-submit-bug-report): Remove.
(edebug-get-buffer-window, edebug-sit-for, edebug-input-pending-p):
Remove aliases, use the un-prefixed name instead.
(edebug-pop-to-buffer): Consider other frames.
(edebug-original-read):: Make it more obvious that it's always defined.
(edebug--make-form-data-entry, edebug--form-data-name)
(edebug--form-data-begin, edebug--form-data-end): Rename from the
single-dashed name, and implement with cl-defstruct.
(edebug-set-form-data-entry): Use the standard accessors.
(edebug-make-top-form-data-entry): Use push.
(edebug-no-match): Drop useless `funcall'.
(mapcar, mapconcat, mapatoms, apply, funcall): Don't add debug specs
to functions.
(defsubst, dont-compile, eval-when-compile, eval-and-compile)
(delay-mode-hooks, with-temp-file, with-temp-message, ad-dolist)
(with-syntax-table, push, pop, 1value, noreturn, defadvice)
(easy-menu-define, with-custom-print): Remove redundant specs.
(edebug-outside-overriding-local-map)
(edebug-outside-overriding-terminal-local-map): Remove, unused.
(edebug--display): Bind unread-command-events directly to nil rather
than binding it to unread-command-events and later setting it to nil.
(edebug--display): Kill edebug-eval-buffer here...
(edebug--recursive-edit): ...rather than here.
Bind standard-output and standard-input.
(edebug-eval): Check cl-macroexpand-all is fboundp.
(edebug-temp-display-freq-count): Fix last change.

* lisp/emacs-lisp/easymenu.el (easy-menu-define): Add `debug' spec.
* lisp/subr.el (noreturn, 1value): Add `debug' spec.
* lisp/emacs-lisp/advice.el: Require cl-lib.
(ad-copy-tree): Remove, use copy-tree instead.
(ad-dolist): Remove use dolist or cl-dolist instead.
(ad-do-return): Remove, use cl-return instead.
(defadvice): Add `debug' spec.
"
3f65970414538063e38ada2a47cb4ef4f35b630e,0xAX/emacs,"Remove calendar code obsolete since at least version 23.1

* lisp/calendar/cal-bahai.el (calendar-absolute-from-bahai)
(calendar-print-bahai-date, calendar-bahai-prompt-for-date)
(calendar-goto-bahai-date, list-bahai-diary-entries)
(mark-bahai-calendar-date-pattern, mark-bahai-diary-entries)
(insert-bahai-diary-entry, insert-monthly-bahai-diary-entry)
(insert-yearly-bahai-diary-entry):
* lisp/calendar/cal-china.el (chinese-calendar-time-zone)
(chinese-calendar-location-name)
(chinese-calendar-daylight-time-offset)
(chinese-calendar-standard-time-zone-name)
(chinese-calendar-daylight-time-zone-name)
(chinese-calendar-daylight-savings-starts)
(chinese-calendar-daylight-savings-ends)
(chinese-calendar-daylight-savings-starts-time)
(chinese-calendar-daylight-savings-ends-time)
(chinese-calendar-celestial-stem)
(chinese-calendar-terrestrial-branch)
(calendar-absolute-from-chinese, calendar-print-chinese-date)
(calendar-goto-chinese-date):
* lisp/calendar/cal-coptic.el (calendar-absolute-from-coptic)
(calendar-print-coptic-date, coptic-prompt-for-date)
(calendar-goto-coptic-date, calendar-absolute-from-ethiopic)
(calendar-print-ethiopic-date, calendar-goto-ethiopic-date):
* lisp/calendar/cal-french.el (calendar-absolute-from-french)
(calendar-print-french-date, calendar-goto-french-date):
* lisp/calendar/cal-hebrew.el (diary-sabbath-candles-minutes)
(calendar-absolute-from-hebrew, calendar-print-hebrew-date)
(hebrew-calendar-yahrzeit, calendar-goto-hebrew-date)
(holiday-rosh-hashanah-etc, holiday-hanukkah)
(holiday-passover-etc, holiday-tisha-b-av-etc)
(list-hebrew-diary-entries, mark-hebrew-calendar-date-pattern)
(mark-hebrew-diary-entries, insert-hebrew-diary-entry)
(insert-monthly-hebrew-diary-entry)
(insert-yearly-hebrew-diary-entry, list-yahrzeit-dates)
(diary-omer, diary-yahrzeit, diary-rosh-hodesh, diary-parasha)
(diary-sabbath-candles):
* lisp/calendar/cal-islam.el (calendar-absolute-from-islamic)
(calendar-print-islamic-date, calendar-goto-islamic-date)
(list-islamic-diary-entries, mark-islamic-calendar-date-pattern)
(mark-islamic-diary-entries, insert-islamic-diary-entry)
(insert-monthly-islamic-diary-entry)
(insert-yearly-islamic-diary-entry):
* lisp/calendar/cal-iso.el (calendar-absolute-from-iso)
(calendar-print-iso-date, calendar-iso-read-args)
(calendar-goto-iso-date, calendar-goto-iso-week):
* lisp/calendar/cal-julian.el (calendar-absolute-from-julian)
(calendar-print-julian-date, calendar-goto-julian-date)
(calendar-absolute-from-astro, calendar-print-astro-day-number)
(calendar-goto-astro-day-number):
* lisp/calendar/cal-mayan.el (calendar-print-mayan-date)
(calendar-next-haab-date, calendar-previous-haab-date)
(calendar-next-tzolkin-date, calendar-previous-tzolkin-date)
(calendar-next-calendar-round-date)
(calendar-previous-calendar-round-date)
(calendar-absolute-from-mayan-long-count)
(calendar-goto-mayan-long-count-date):
* lisp/calendar/cal-move.el (scroll-calendar-left)
(scroll-calendar-right, scroll-calendar-left-three-months)
(scroll-calendar-right-three-months):
* lisp/calendar/cal-persia.el (calendar-absolute-from-persian)
(calendar-print-persian-date, persian-prompt-for-date)
(calendar-goto-persian-date):
* lisp/calendar/cal-x.el (calendar-after-frame-setup-hooks):
* lisp/calendar/calendar.el (view-diary-entries-initially)
(mark-diary-entries-in-calendar, calendar-today-face)
(diary-face, holiday-face, view-calendar-holidays-initially)
(mark-holidays-in-calendar, initial-calendar-window-hook)
(today-visible-calendar-hook, today-invisible-calendar-hook)
(hebrew-diary-entry-symbol, islamic-diary-entry-symbol)
(bahai-diary-entry-symbol, american-date-diary-pattern)
(european-date-diary-pattern, european-calendar-display-form)
(american-calendar-display-form, holidays-in-diary-buffer)
(all-hebrew-calendar-holidays, all-christian-calendar-holidays)
(all-islamic-calendar-holidays, all-bahai-calendar-holidays)
(fancy-diary-buffer, increment-calendar-month)
(extract-calendar-month, extract-calendar-day)
(extract-calendar-year, exit-calendar, calendar-date-is-legal-p)
(mark-visible-calendar-date, calendar-version):
* lisp/calendar/diary-lib.el (diary-button-face, sexp-diary-entry-symbol)
(diary-display-hook, list-diary-entries-hook)
(mark-diary-entries-hook, nongregorian-diary-listing-hook)
(nongregorian-diary-marking-hook, print-diary-entries-hook)
(abbreviated-calendar-year, number-of-diary-entries)
(view-other-diary-entries, add-to-diary-list)
(include-other-diary-files, simple-diary-display)
(fancy-diary-display, print-diary-entries, mark-diary-entries)
(mark-sexp-diary-entries, mark-included-diary-files)
(mark-calendar-days-named, mark-calendar-month)
(mark-calendar-date-pattern, sort-diary-entries)
(list-sexp-diary-entries, make-diary-entry, insert-diary-entry)
(insert-weekly-diary-entry, insert-monthly-diary-entry)
(insert-yearly-diary-entry, insert-anniversary-diary-entry)
(insert-block-diary-entry, insert-cyclic-diary-entry)
(fancy-diary-font-lock-keywords, fancy-diary-display-mode):
* lisp/calendar/holidays.el (general-holidays, oriental-holidays)
(local-holidays, other-holidays, hebrew-holidays)
(christian-holidays, islamic-holidays, bahai-holidays)
(solar-holidays, list-calendar-holidays)
(check-calendar-holidays, mark-calendar-holidays)
(filter-visible-calendar-holidays):
* lisp/calendar/lunar.el (calendar-phases-of-moon, phases-of-moon)
(diary-phases-of-moon): Remove obsolete aliases.

* lisp/calendar/cal-menu.el (cal-menu-load-hook): Remove obsolete hook.
* calendar/cal-x.el (calendar-one-frame-setup)
(calendar-only-one-frame-setup, calendar-two-frame-setup):
Remove obsolete functions.
(cal-x-load-hook): Remove obsolete hook.

* calendar/calendar.el (european-calendar-style): Remove obsolete variable.
(calendar-date-style): No longer consult european-calendar-style.

* calendar/calendar.el (european-calendar, american-calendar):
Remove obsolete commands.

* calendar/calendar.el (calendar-for-loop): Remove obsolete macro.

* calendar/diary-lib.el (diary-face): Remove obsolete variable.
(diary-font-lock-date-forms, diary-fancy-font-lock-keywords):
Use the face `diary' instead of the variable `diary-face'.

* calendar/holidays.el (hebrew-holidays-1, hebrew-holidays-2)
(hebrew-holidays-3, hebrew-holidays-4): Remove obsolete variables.

* lisp/calendar/icalendar.el (icalendar--date-style): Remove function.
Replace all uses with calendar-date-style.

* lisp/textmodes/remember.el (calendar-date-style): Declare.
(remember-diary-convert-entry):
No longer consult european-calendar-style.

* test/automated/icalendar-tests.el (icalendar--calendar-style):
Remove test, no longer relevant.
"
9b92c13baa084fac067c750bd16300668b80ad2a,0xAX/emacs,"* progmodes/octave.el (octave-abbrev-table): Remove abbrev
definitions.  Use completion-at-point to insert keywords.
(octave-abbrev-start): Remove.
(inferior-octave-mode, octave-mode): Use :abbrev-table instead.
"
0a49f158f1598fb92989f3cbdc238a7e5f1bd8a3,0xAX/emacs,"Improve uses of CHECK_LIST etc.

* src/eval.c (FletX): Report an error for invalid constructs like
‘(let* (a . 0))’, so that ‘let*’ is more consistent with ‘let’.
(lambda_arity): Use plain CHECK_CONS.
* src/fns.c (CHECK_LIST_END): Move from here to lisp.h.
(Fcopy_alist): Remove unnecessary CHECK_LIST call, since
concat does that for us.
(Fnthcdr, Fmember, Fmemql, Fdelete, Fnreverse):
Use CHECK_LIST_END, not CHECK_LIST_CONS.  This hoists a
runtime check out of the loop.
(Fmemq): Simplify and use CHECK_LIST_END instead of CHECK_LIST.
(Fassq, Fassoc, Frassq, Frassoc):
Simplify and use CHECK_LIST_END instead of CAR.
(assq_no_quit, assoc_no_quit): Simplify and assume proper list.
(Fnconc): Use plain CHECK_CONS, and do-while instead of while loop.
* src/fontset.c (Fnew_fontset):
* src/frame.c (Fmodify_frame_parameters):
Use CHECK_LIST_END at end, rather than CHECK_LIST at start, for a
more-complete check.
* src/gfilenotify.c (Fgfile_add_watch):
Omit unnecessary CHECK_LIST, since Fmember does that for us.
* src/lisp.h (lisp_h_CHECK_LIST_CONS, CHECK_LIST_CONS):
Remove; no longer used.
(CHECK_LIST_END): New inline function.
"
cb5af79249c2c9e21405e6237db11935b50dd1c5,0xAX/emacs,"Fix compiler warnings in the MinGW build

* configure.ac [mingw32]: Don't add -Wpointer-sign, and add
-Wno-pointer-sign, to keep the noise level down.

* nt/mingw-cfg.site (gl_cv_warn_c__Wredundant_decls): Disable
-Wredundant-decls, as that produces a lot of noise due to
redeclaration of time-related functions by gnulib.
* nt/runemacs.c (set_user_model_id): Fix argument type of
'SetCurrentProcessExplicitAppUserModelID'.

* src/image.c (x_create_bitmap_from_file) [HAVE_NTGUI]: Don't
declare 'dpyinfo', as it is unused.
(xpm_load): Fix warnings about pointer signedness.
* src/w32proc.c (IsValidLocale, init_winsock): Remove redundant
prototypes.
(sys_spawnve): Avoid warnings about discarding 'const' qualifier.
(sys_select): Provide prototype.
(g_b_init_compare_string_w): Move declaration to file scope.
* src/w32heap.c (dumped_data_commit): Now static.
(FREEABLE_P): Avoid warnings about pointer comparison with integer.
(mmap_realloc): Cast to 'char *' for arithmetics on void pointers.
* src/w32console.c (ctrl_c_handler, sys_tputs, sys_tgetstr)
(evalcost, cmputc, cmcheckmagic, cmcostinit, cmgoto, Wcm_clear):
Provide prototypes.
* src/w32.c (globals_of_w32, conv_sockaddr_to_lisp): Remove
redundant prototypes.
(w32_get_internal_run_time, map_w32_filename): Provide prototype.
(init_environment, sys_ctime): Avoid warnings about discarding
'const' qualifier.
Include utimens.h.
(sys_ctime, sys_chdir, sys_creat, sys_fopen, sys_mkdir)
(sys_open, sys_rename, sys_rmdir, is_slow_fs, term_winsock)
(sys_close, sys_dup2, sys_read, sys_write, sys_localtime): Provide
prototypes.
(sys_rename_replace): Use %d to avoid compiler warnings.
(_wsa_errlist): Make the message text 'const char *', to avoid
compilation warnings.
(dynlib_reset_last_error): Move prototype to file scope.
(w32_get_resource): First argument is now 'const char *'.
* src/w32uniscribe.c (syms_of_w32uniscribe): Provide prototype.
(otf_features): Second argument is no 'const char *'.
* src/w32term.c (free_frame_menubar, x_wm_set_size_hint)
(x_set_window_size): Remove redundant prototypes.
(XChangeGC, XGetGCValues, w32_draw_underwave)
(w32_draw_rectangle, w32_shift_glyphs_for_insert, x_mouse_leave)
(x_calc_absolute_position, x_destroy_window): Now static.
(menubar_selection_callback): Move prototype to file scope.
* src/w32font.c (g_b_init_get_glyph_outline_w): Remove redundant
declaration.
(w32_to_x_charset): Fix warnings about discarding 'const' qualifier.
(w32font_full_name): Fix warnings about implicit conversion of
'float' to 'double'.
* src/w32reg.c (w32_get_rdb_resource): Fix warnings about
discarding 'const' qualifier.
* src/w32menu.c (syms_of_w32menu, globals_of_w32menu)
(set_frame_menubar): Remove redundant prototypes.
(menubar_selection_callback, w32_menu_display_help): Provide
prototypes.
(simple_dialog_show): Avoid warnings about discarding 'const'
qualifier.
* src/w32fns.c (syms_of_w32fns, globals_of_w32fns)
(free_frame_menubar, w32_strerror, x_set_menu_bar_lines)
(x_set_tool_bar_lines, x_set_internal_border_width): Remove
redundant prototypes.
(current_popup_menu): Remove redundant declaration.
(colormap_t): Member 'name' is now 'const char *'.
(add_system_logical_colors_to_map): Fix signed/unsigned warnings.
(x_decode_color, x_set_border_pixel)
(x_clear_under_internal_border, x_set_name, hook_w32_key)
(reset_w32_kbdhook_state, deliver_wm_chars, w32_backtrace): Now
static.
(w32_load_cursor, w32_key_to_modifier, map_keypad_keys)
(w32_msg_worker, w32_last_error): Provide prototypes.
(funhook, lookup_vk_code): Avoid warnings about missing
parentheses.
(x_default_font_parameter, Fw32_notification_notify): Avoid
warnings about discarding 'const' qualifier.
(Fx_create_frame): Avoid warnings about empty body of 'else'.
(x_screen_planes): Ifdef away unused function.
(Fx_show_tip): Remove unused variables.
(Fw32_battery_status): Avoid warnings about implicit promotion
from float to double.
(Fw32_notification_notify): Initialize 'timeout'.
* src/profiler.c (profiler_cpu_running) [HAVE_ITIMERSPEC]: Only
define the TIMER_SETTIME_RUNNING value if it will be used.
* src/w32notify.c (send_notifications): Ifdef away an empty if
clause.  Remove unused variable.
(watch_end, watch_completion): Provide prototypes.
* src/sound.c (sound_warning) [WINDOWSNT]: Don't define: unused.
* src/callproc.c (child_setup, getenv_internal_1) [WINDOWSNT]: Fix
warning with pointer signedness.
* src/gnutls.c (gnutls_x509_crt_get_signature)
(gnutls_alert_send_appropriate) [WINDOWSNT]: Don't define, and
don't load them from the GnuTLS library, as they are no longer
used.
* src/process.c (DATAGRAM_CHAN_P) [!DATAGRAM_SOCKETS]: Don't
define, as it's unused.
* src/unexw32.c (open_input_file, open_output_file)
(close_file_data): Remove redundant prototypes.
(_start): provide prototype.
(mainCRTStartup): Move prototype to file level.
(find_section): Use type-cast to shut up compiler warnings.
(offset_to_section, relocate_offset): Now static.
(find_section): First argument is now a 'const char *'.
(offset_to_section): Ifdef away, as it's unused.
* src/w32heap.h (find_section): Adjust prototype.
* src/dynlib.c (dynlib_reset_last_error): Provide prototype.
* src/dired.c (directory_files_internal_w32_unwind): Avoid
warnings about missing prototypes.
(is_slow_fs) [WINDOWSNT]: Provide prototype at file level.
(directory_files_internal) [WINDOWSNT]: Fix warnings about pointer
signedness.
* src/fileio.c (Ffile_writable_p, Ffile_regular_p) [WINDOWSNT]:
Fix warnings about pointer signedness.
* src/filelock.c (WTMP_FILE) [WINDOWSNT]: Don't define, it's
unused.
* src/sysdep.c (_getpid): Remove redundant prototype.
(sys_subshell) [DOS_NT]: Don't define 'status', it's unused.
[!MSDOS]: Don't define 'st', it's unused.
(init_sys_modes) [DOS_NT]: Don't define 'terminal', it's unused.
(str_collate) [WINDOWSNT]: Avoid warnings about pointer signedness.
* src/keyboard.c (tty_read_avail_input) [WINDOWSNT]: Don't define
n_to_read, as it is not used.
(MAX_ENCODED_BYTES) [WINDOWSNT]: Don't define, as it's unused.
* src/w32font.h (syms_of_w32font): Remove redundant prototype.
* src/xfaces.c (x_display_info) [HAVE_NTGUI]: Remove unused macro.
* src/term.c (init_tty) [DOS_NT]: Ifdef away variables that are
not used by DOS_NT builds, to avoid compiler warnings.
* src/menu.c (current_popup_menu) [HAVE_NTGUI]: Remove redundant
declaration.
* src/dispnew.c (init_display) [WINDOWSNT]: Use type-cast to shut
up compiler warnings.
* src/w32term.h (x_set_window_size, x_get_focus_frame)
(x_make_frame_visible, x_make_frame_invisible, x_iconify_frame)
(x_set_frame_alpha, x_activate_menubar, x_bitmap_icon)
(x_free_frame_resources, x_real_positions)
(display_x_get_resource): Remove redundant prototypes.

* lib-src/ntlib.c (sys_ctime, sys_fopen, sys_chdir, mkostemp)
(sys_rename, gettimeofday): Provide prototypes.
* lib-src/ntlib.h (getuid, geteuid, mkostemp): Remove redundant
declarations.
* lib-src/emacsclient.c (w32_getenv): Argument is now 'const char *'.
(xstrdup, w32_get_resource, w32_window_app, w32_execvp, ttyname)
(close_winsock, initialize_sockets, w32_set_user_model_id)
(w32_find_emacs_process, w32_give_focus) [WINDOWSNT]: Add
prototypes.
(w32_get_resource) [WINDOWSNT]: Fix a warning about signedness
difference.
(w32_set_user_model_id): Update prototype of
SetCurrentProcessExplicitAppUserModelID to avoid compiler
warnings.
(start_daemon_and_retry_set_socket) [WINDOWSNT]: Use type-cast to
shut up compiler warnings.
* lib-src/etags.c (MAXPATHLEN) [WINDOWSNT]: Remove unused macro.
"
a864ef14570715dc3233fbbf2e9da7aa8f29729e,0xAX/emacs,"Use bool for booleans in font-related modules.

* font.c (font_intern_prop, font_style_to_value)
(font_style_symbolic, font_parse_xlfd, font_parse_fcname)
(generate_otf_features, font_check_otf_features, font_check_otf)
(font_match_p, font_list_entities, font_at):
* fontset.c (fontset_id_valid_p, reorder_font_vector
(fontset_find_font, Fset_fontset_font)
(face_suitable_for_char_p) [0]:
* ftfont.c (fc_initialized, ftfont_get_open_type_spec)
(ftfont_open, ftfont_text_extents, ftfont_check_otf):
(m17n_flt_initialized, ftfont_shape_by_flt):
* ftxfont.c (ftxfont_draw_bitmap, ftxfont_draw):
* nsfont.m (nsfont_draw):
* w32font.c (w32font_draw):
* w32term.c (x_draw_glyphless_glyph_string_foreground):
Use bool for booleans.
* font.h: Adjust to above API changes.
(struct font, struct font_driver, struct font_driver_list):
Use bool for booleans.
(struct font): Remove useless member encoding_type.
All users removed.
* fontset.c, xftfont.c: Omit unnecessary static decls.
"
203a557223f9e174268cd985aa15b5a593c94703,0xAX/emacs,"* progmodes/octave.el (octave-syntax-propertize-function): Change
\'s syntax to escape when inside double-quoted strings. 
(octave-font-lock-keywords): Use octave-operator-regexp.
(octave-completion-at-point): Renamed from
octave-completion-at-point-function.
(inferior-octave-directory-tracker): Robustify.
(octave-text-functions): Remove and fix its uses.  No such things
any more.

Fixes: debbugs:14332
"
a1edea0c88ac69acc1b386a67859a674dd5af5aa,0xAX/emacs,"* frame.h (struct frame) [USE_X_TOOLKIT]: New member shell_position.
* xfns.c (x_window): Use it to allow xfree later.
(x_encode_text): Drop 3rd arg; unused.  Tweak comment and adjust users
where appropriate.  Use bool for booleans and remove redundant checks.
(Fx_backspace_delete_keys_p): Use XkbFreeKeyboard; explain why.
* xterm.c (x_free_frame_resources): Free shell_position.
"
97976f9f3fcf588535bf4afad71de92860bb2f8e,0xAX/emacs,"Fix permissions bugs with setgid directories etc.

* configure.ac (BSD4_2): Remove; no longer needed.
* admin/CPP-DEFINES (BSD4_2): Remove.
* doc/lispintro/emacs-lisp-intro.texi (Files List):
directory-files-and-attributes now outputs t for attribute that's
now a placeholder.
* doc/lispref/files.texi (Testing Accessibility): Document GROUP arg
of file-ownership-preserved-p.
(File Attributes): Document that 9th element is now
just a placeholder.
* doc/lispref/os.texi (User Identification): Document new functions group-gid,
group-real-gid.
* etc/NEWS: Document changes to file-attributes,
file-ownership-preserved-p.
Mention new functions group-gid, group-real-gid.
* lisp/files.el (backup-buffer): Don't rely on 9th output of
file-attributes, as it's now a placeholder.  Instead, use the new
optional arg of file-ownership-preserved-p.
(file-ownership-preserved-p): New optional arg GROUP.
Fix mishandling of setuid directories that would cause this
function to return t when it should have returned nil.
Document what happens if the file does not exist, and when
it's not known whether the ownership will be preserved.
* lisp/net/tramp-sh.el (tramp-sh-handle-file-ownership-preserved-p):
Likewise.
(tramp-get-local-gid): Use group-gid for integer, as that's
faster and more reliable.
* src/dired.c (Ffile_attributes): Return t as the 9th attribute,
to mark it as a placeholder.  The old value was often wrong.
The only user of this attribute has been changed to use
file-ownership-preserved-p instead, with its new group arg.
* src/editfns.c (Fgroup_gid, Fgroup_real_gid): New functions.

Fixes: debbugs:13125
"
0afb4571a7b54dc7693e605f7ec8a0a3a9251b4d,0xAX/emacs,"Updates for compiling with Gtk+ 3.0 (--with-x-toolkit=gtk3).

* configure.in: Require 3.0 for --with-gtk3.  Add HAVE_GTK3.

* doc/emacs/xresources.texi (GTK resources): ~/.emacs.d/gtkrc does not work
for Gtk+ 3.

* src/gtkutil.c: Include gtkx.h if HAVE_GTK3.  If ! HAVE_GTK3, define
gdk_window_get_screen, gdk_window_get_geometry,
gdk_x11_window_lookup_for_display and GDK_KEY_g.
(xg_set_screen): Use DEFAULT_GDK_DISPLAY.
(xg_get_pixbuf_from_pixmap): New function.
(xg_get_pixbuf_from_pix_and_mask): Change parameters from GdkPixmap
to Pixmap, take frame as parameter, remove GdkColormap parameter.
Call xg_get_pixbuf_from_pixmap instead of
gdk_pixbuf_get_from_drawable.
(xg_get_image_for_pixmap): Do not make GdkPixmaps, call
xg_get_pixbuf_from_pix_and_mask with Pixmap parameters instead.
(xg_check_special_colors): Use GtkStyleContext and its functions
for HAVE_GTK3.
(xg_prepare_tooltip, xg_hide_tooltip): Call gdk_window_get_screen.
(xg_prepare_tooltip, create_dialog, menubar_map_cb)
(xg_update_frame_menubar, xg_tool_bar_detach_callback)
(xg_tool_bar_attach_callback, xg_update_tool_bar_sizes): Call
gtk_widget_get_preferred_size.
(xg_frame_resized): gdk_window_get_geometry only takes 5
parameters.
(xg_win_to_widget, xg_event_is_for_menubar): Call
gdk_x11_window_lookup_for_display.
(xg_set_widget_bg): New function.
(delete_cb): New function.
(xg_create_frame_widgets): connect delete-event to delete_cb.
Call xg_set_widget_bg.  Only set backgrund pixmap for ! HAVE_GTK3
(xg_set_background_color): Call xg_set_widget_bg.
(xg_set_frame_icon): Call xg_get_pixbuf_from_pix_and_mask.
(xg_create_scroll_bar): vadj is a GtkAdjustment for HAVE_GTK3.
Only call gtk_range_set_update_policy if ! HAVE_GTK3.
(xg_make_tool_item): Only connect xg_tool_bar_item_expose_callback
if ! HAVE_GTK3.
(update_frame_tool_bar): Call gtk_widget_hide.
(xg_initialize): Use GDK_KEY_g.

* src/xmenu.c (menu_position_func): Call gtk_widget_get_preferred_size.

* src/xsmfns.c (gdk_set_sm_client_id): Define to gdk_set_sm_client_id
if ! HAVE_GTK3
(x_session_initialize): Call gdk_x11_set_sm_client_id.

* src/xterm.c (XFillRectangle): Use cairo routines for HAVE_GTK3.
(x_term_init): Disable Xinput(2) with GDK_CORE_DEVICE_EVENTS.
Load ~/emacs.d/gtkrc only for ! HAVE_GTK3.

* src/xterm.h (DEFAULT_GDK_DISPLAY): New define.
(GDK_WINDOW_XID, gtk_widget_get_preferred_size): New defines
for ! HAVE_GTK3.
(GTK_WIDGET_TO_X_WIN): Use GDK_WINDOW_XID.
"
b0b9e5923267012e5c4f3523ee601c229ea85232,0xAX/emacs,"Small Makefile cleanup mainly related to tags file generation

* src/Makefile.in (abs_srcdir): New, set by configure.
(maintainer-clean): Remove pointless echo.  That should be in the
top-level Makefile, if anywhere.  Delete TAGS-LISP.
(extraclean): No s/ and m/ directories for some time.
(TAGS): Remove no-longer-defined S_FILE.
Pass absolute filenames to etags once more.
(TAGS-LISP, $(lwlibdir)/TAGS): Correctly pass ETAGS to sub-makes.
($(lwlibdir)/TAGS): Remove useless subshell, check cd return value.

* lisp/Makefile.in (lisptagsfiles1, lisptagsfiles2, lisptagsfiles3)
(lisptagsfiles4): Use absolute filenames again.
(TAGS, TAGS-LISP): Not everything needs to run in one line.
Remove all *loaddefs files, not just the first.  Remove esh-groups.
(maintainer-clean): Delete TAGS, TAGS-LISP.

* lwlib/Makefile.in (abs_srcdir): New, set by configure.
(ETAGS, ctagsfiles): New variables.
(TAGS): Use ETAGS, ctagsfiles.  Use absolute filenames again.
"
6e3165fb24673920b31d67a61ee8e8a2e0b25eec,0xAX/emacs,"mm-decode.el (mm-inline-media-tests): Add text/x-sh.
gnus-art.el (gnus-mime-inline-part): Use mm-display-inline rather than mm-insert-inline to insert inline part: this respect mm-inline-media-tests displayers.
mm-view.el (mm-display-shell-script-inline): New function.
mm-decode.el (mm-inline-media-tests): Add x-shellscript and x-sh.
mm-uu.el (mm-uu-type-alist): Add org block.
 (mm-uu-org-src-code-block-extract): New function.
mm-view.el (mm-display-org-inline): New function.
mm-decode.el (mm-automatic-display): Add text/org.
mailcap.el (mailcap-mime-extensions): Add .org.
"
ed8be7ff74614e2514275f18e166905814963fdd,0xAX/emacs,"Misc custom group fixes

* cus-start.el (show-trailing-whitespace): Move to editing basics.
* faces.el (trailing-whitespace): Don't use whitespace-faces group.
* obsolete/old-whitespace.el (whitespace-faces): Remove group.
(whitespace-highlight): Move to whitespace group.

* comint.el (comint-source):
* pcmpl-linux.el (pcmpl-linux):
* shell.el (shell-faces):
* eshell/esh-opt.el (eshell-opt):
* international/ccl.el (ccl): Remove empty custom groups.

* completion.el (dynamic-completion-mode):
* jit-lock.el (jit-lock-debug-mode):
* minibuffer.el (completion-in-region-mode):
* type-break.el (type-break-mode-line-message-mode)
(type-break-query-mode):
* emulation/tpu-edt.el (tpu-edt-mode):
* progmodes/subword.el (global-subword-mode, global-superword-mode):
* progmodes/vhdl-mode.el (vhdl-electric-mode, vhdl-stutter-mode):
* term/vt100.el (vt100-wide-mode): Specify explicit :group.

* term/xterm.el (xterm): Change parent group to terminals.

* master.el (master): Remove empty custom group.
(master-mode): Remove unused :group argument.
* textmodes/refill.el (refill): Remove empty custom group.
(refill-mode): Remove unused :group argument.

* textmodes/rst.el (rst-compile-toolsets): Use rst-compile group.

* cedet/semantic/symref/list.el (semantic-symref-auto-expand-results)
(semantic-symref-results-mode-hook)
(semantic-symref-results-summary-function): Fix :group.

* erc/erc-list.el (erc-list):
* erc/erc-menu.el (erc-menu):
* erc/erc-ring.el (erc-ring): Define custom groups, for define-erc-module.

* gnus/shr-color.el (shr-color-visible-luminance-min)
(shr-color-visible-distance-min): Use shr-color group.

* url/url-news.el (url-news): Remove empty custom group.
"
796bb9364a5244a089769f4c92daab1835b618c7,0xAX/emacs,"Remove support for DJGPP v1.x (bug#5813).

 CPP-DEFINES (__DJGPP__, __GO32__): Remove, no longer used.
"
3b64d86b56c392642f204efe4981fd8ec33e7f62,0xAX/emacs,"* vc.el (vc-trunk-p): Rename to vc-rcs-trunk-p and move to vc-rcs.el.
(vc-minor-part): Rename to vc-rcs-minor-part and move to vc-rcs.el.
(vc-default-previous-revision): Rename to vc-rcs-previous-revision
and move to vc-rcs.el.
(vc-default-next-revision): Rename to vc-rcs-next-revision and
move to vc-rcs.el.
(vc-cvs-update-changelog): Move to vc-cvs.el, use vc-call-backend.
(vc-rcs-update-changelog): Remove.
(vc-update-changelog-rcs2log): Rename to vc-rcs-update-changelog
and move to vc-rcs.el.

* vc-rcs.el (vc-rcs-latest-on-branch-p, vc-rcs-checkin)
(vc-rcs-checkout, vc-rcs-rollback): Adjust for the vc-rcs-trunk-p
renaming.
(vc-rcs-trunk-p, vc-rcs-minor-part, vc-rcs-previous-revision)
(vc-rcs-next-revision, vc-rcs-update-changelog): Moved here from
vc.el, renamed to be RCS specific.

* vc-cvs.el (vc-cvs-previous-revision, vc-cvs-next-revision): New functions.
(vc-cvs-update-changelog): Moved here from vc.el.

* vc-sccs.el (vc-sccs-previous-revision, vc-sccs-next-revision):
New functions.
"
76e53c6ed3c63a71a49d21cb46e517a40f987d38,GNOME/glib,"Removed unused variable is_main_group. (#512381, Wouter Bolsterlee)

2008-01-27  Matthias Clasen  <mclasen@redhat.com>

        * glib/goption.c: (group_list_has_visible_entries):
        Removed unused variable is_main_group.  (#512381,
        Wouter Bolsterlee)



svn path=/trunk/; revision=6390
"
2a677d1370a1983c2c5e1a4a6dd5f0d9fa9868b3,GNOME/glib,"locks: drop _INIT macros

All locks are now zero-initialised, so we can drop the G_*_INIT macros
for them.

Adjust various users around GLib accordingly and change the docs.

https://bugzilla.gnome.org/show_bug.cgi?id=659866
"
eb4a1640a2717633da8719274f2514b90b5279c2,GNOME/glib,"Remove duplicated GSeekable functions. (#509990) Just use the

2008-01-21  Alexander Larsson  <alexl@redhat.com>

        * gfileinputstream.[ch]:
        * gfileoutputstream.[ch]:
        * gio.symbols:
	Remove duplicated GSeekable functions. (#509990)
	Just use the g_seekable_xxx() calls instead.



svn path=/trunk/; revision=6342
"
3fe8c8aa53c5c0bb074b7f45db873ded5afccd8e,GNOME/vala,"Comment handling improvements

Fixes bug 529040, bug 540513, and bug 546096.
"
9c5443a1041e28145f8b68c0c58d8d73e5857fce,GNOME/vala,"Convert ternary conditionals into if statements, fixes bug 543870 and bug

2008-11-29  Jürg Billeter  <j@bitron.ch>

	* vala/Makefile.am:
	* vala/valablock.vala:
	* vala/valacodenode.vala:
	* vala/valaconditionalexpression.vala:
	* vala/valadeclarationstatement.vala:
	* vala/valaexpression.vala:
	* vala/valanullchecker.vala:
	* vala/valastatementlist.vala:
	* gobject/valaccodebasemodule.vala:
	* gobject/valaccodegenerator.vala:
	* gobject/valaccodemodule.vala:

	Convert ternary conditionals into if statements,
	fixes bug 543870 and bug 554594

svn path=/trunk/; revision=2083
"
dbd34556e48d5566750328a1cac82f00a2852a28,GNOME/vala,"Add CCodeDelegateModule, move more code to GErrorModule

2008-11-03  Jürg Billeter  <j@bitron.ch>

	* gobject/Makefile.am:
	* gobject/valaccodebasemodule.vala:
	* gobject/valaccodedelegatemodule.vala:
	* gobject/valaccodedynamicpropertymodule.vala:
	* gobject/valaccodegenerator.vala:
	* gobject/valagerrormodule.vala:

	Add CCodeDelegateModule, move more code to GErrorModule

svn path=/trunk/; revision=1969
"
457053b12382af6629ee5c64d0b2615b5ca6083b,GNOME/vala,"Separate visiting expressions from visiting expression statements

2008-11-30  Jürg Billeter  <j@bitron.ch>

	* vala/valaexpressionstatement.vala:
	* vala/valanullchecker.vala:
	* vala/valasymbolresolver.vala:
	* gobject/valaccodebasemodule.vala:

	Separate visiting expressions from visiting expression statements

svn path=/trunk/; revision=2095
"
a9f4b154465e0308489b0e8b13460006fe77ee86,GNOME/vala,"Move method checking to Method.check

2008-11-06  Jürg Billeter  <j@bitron.ch>

	* vala/valamethod.vala:
	* vala/valasemanticanalyzer.vala:

	Move method checking to Method.check

svn path=/trunk/; revision=1992
"
70ae8e54be874dfbb241e62661d85fa622db32d9,GNOME/vala,"Fix the newsegment virtual method in GstBaseSrc, move the

2008-05-23  Juerg Billeter  <j@bitron.ch>

	* vapi/packages/gstreamer-base-0.10/:

	Fix the newsegment virtual method in GstBaseSrc, move the
	GST_BASE_TRANSFORM_* constants to the GstBaseTransform class,
	fix weak fields in GstBase*, and hide the abidata fields,
	patch by Ali Sabil

	* vapi/gstreamer-base-0.10.vapi: regenerated

svn path=/trunk/; revision=1414
"
6bd0bd4179826efaad8eef666639e3204e9606de,Hack23/cia,"gson 2.8.3 -> 2.8.4
com.amazonaws 1.1.319 -> 1.1.320
"
238c409d5080159ff8c04a7c0ab393199e4d6667,Hack23/cia,cleanup
ef5170ad9682b0823991c3203af64fba68ec6577,Hack23/cia,"com.amazonaws 1.11.351 -> 1.11.353
org.hibernate:hibernate-search-orm 5.10.1.Final -> 5.10.2.Final"
f32294b10f570fad82f9bc59f4dca9c43af94a5d,Hack23/cia,cleanup
d2f73921256bcfb63e86b076905f5cc530a1819a,Hack23/cia,pom cleanup
805c173ee5300dc6fe48b5e5681d34f90f7866a3,apereo/cas,"clean up properties. tested throttling and config binding
"
38ab55299aa47d960f99887e805fd898053f9727,apereo/cas,"Fix CouchDb testing WIP (#3613)

* break ci to fix ci

* fixup! TEMP split couchDb tests into user and admin version
"
e054f3f25620db080d25bcbfa571f3a0fc5a4b71,apereo/cas,"Clean up service extraction in proxying cases for all event resolvers
"
623541bbf11725abd22df1759723fb514d77e68e,apereo/cas,"clean up duplicate dependencies
"
1739049b45966b15502bdc3662dc0c2cc66fc0f5,apereo/cas,"Clean up service extraction in proxying cases for all event resolvers
"
6a84778b3b67687e350ae398ac8c4f6f7bf7189f,apereo/cas,"clean up release publishing flags
"
d7c163425273b29a0137b3142c438d2dfeab2d75,apereo/cas,"Merge pull request #196 from leleuj/CAS-1188

CAS-1188 : Make SAML support as an optional module for CAS server"
4616b79a1e21e888773b1bc6d55a690815129834,apereo/cas,"Merge pull request #1429 from Unicon/slo-pgts

SLO callbacks for PTs; PT/PGT ticket clean up"
839271e5dd0141c234b8e751f1e2bcbce71bfb61,apereo/cas,"removed deprecated config
"
ced5bb5d24ca020fef896e75203a42f26a255d5a,apereo/cas,"Reorganized bean creators for ldap, specially.
"
3b431b24d7cdcbd483cb4f33fc6249718c047753,apereo/cas,"extract out shiro into its own module
"
39bb072c568dab7780dab96acf2d6fae81ce4f01,apereo/cas,"updated deprecated config
"
95e5703c4792f06de26d25d8b5c4cc3d1f6265a1,apereo/cas,"Clean up incommon attr rel policy to allow a more generic filter via entity attrs
"
d50b76cbe82aa4fadbd7b1309a63039671561a13,apereo/cas,"Integrate JavaScript linting into build process (#2621)

* Explaining how to use Unicode property values

* Update Configuring-Monitoring-Administration.md

* [skip ci]

* Update Configuring-Monitoring-Administration.md

* Update circle.yml

* Adding UI coding standards

* code clean-up based on standards

* code clean-up for standardization

* adding babel, standard and webpack

* Adding linting task to the build process

* Adding .eslintignore file

* Changed spacing to 4

* Added description to the npmLint task

* Removed unused packages

* Code style cleanup

* Removed console.log statement

* Code optimization

* Code style cleanup

* Code style cleanup
Code optimization

* Adding $ and urls to globals list since they are used in almost every file.

* Removed /* global */ block at top

* Removed /* global */ block at top

* Removed urls from the /* global */ block

* Code style cleanup

* Changed pm.js reference to passwordMeter.js

* Code style cleanup
Refactored some variables for optimization

* Code style cleanup

* Code style cleanup

* Code style cleanup

* Code style cleanup
Code refactored for optimization

* Code style cleanup

* removed non-library scripts
"
8f22570ee3c1edb7154b1c49df2278490bba4d3f,apereo/cas,"checkstyle cleanup and formatting of the source
"
ec32223012e07d0c0b7e9a27a7e502bbf37483f0,apereo/cas,"cleaning up val references [force build]
"
92899296bc5fe73839471c473872a77a7644bf88,apereo/cas,"set minimium idle count on datasource correctly (#2462)

* set minimium idle count on datasource correctly

min idle count was being set to max idle time

* remove unused max idle time property from code and documentation
"
95fb04a12095d561c6b17df7ad6e33941875e10f,apereo/cas,"clean up password policy handling
"
48861c88cdd2dc6428c0075557952c78bcb06fa6,bcgov/hets,"Improvements to data import performance
"
0721ac40f91295bb3995f86966e5dd031028ca85,erlang/otp,"Add DTrace support for OS X, Solaris, and Linux (via SystemTap), 1/4

Since it's been quite a while since I've written C code, *and* I
haven't done any significant hacking on the VM itself in years, it's
quite likely that I haven't done things in 100% proper style.  Or
my co-collaborators Dustin Sallings (CouchBase) or Michal Ptaszek
(Erlang Solutions).  My intent for this patch is to start discussion
and review of DTrace support for consideration for the R15 release.

For additional background on the motivation for this work, please
see the slides for the presentation at the Erlang User Conference 2011
in Stockholm:
  https://www.erlang-factory.com/upload/presentations/462/euc2011-draft2.pdf

Changes relative to dtrace-review2 branch:
    * Fix errors in OTP test suite 'kernel' file_SUITE
    * Fix errors in OTP test suite 'kernel' prim_file_SUITE
    * Fix bad pointer bug in efile_drv.c flush_write()
    * Move the DTrace material from the top of `README.md` into a
      new file, `README.dtrace.md`

Changes since last push to GitHub (relative to commit 5828a4fb28, which
was the former `dtrace-review1` branch):
    * Rebased onto 14 Nov 2011's ""master"" branch
    * Recent changes to the async task queuing mechanism means that
      the async worker queue length is not available.  A bogus value
      of -1 is hard-coded until there's a good way to peek into the
      new queue structure and find the queue length.
    * Small fixes based on review comments by Mikael Pettersson,
      Andrew Thompson, and Andreas Schultz.

Add autoconf support: use ""./configure --enable-dtrace"" on all supported
platforms:
    * OS X Snow Leopard or later
    * Solaris 10 or OpenSolaris
    * Linux, via SystemTap's DTrace compatibility packages
    * FreeBSD 9.0RC1.  FreeBSD 8 and earlier do not have support
      for USDT, DTrace's User-land Statically Defined Tracing.

See the file `erts/emulator/beam/erlang_dtrace.d` for the definition
of all DTrace probes in the virtual machine so far.

Example D scripts can be found in `lib/dtrace/examples`.  Note that if
you see the error message `{name of probe} does not match any probes`,
then there is no Erlang VM process + DTrace probes running.  To fix,
start a DTrace-enabled VM or remove `-q` from the `dtrace` command line.

The `lib/dtrace` directory contains a small code-only OTP application
that contains code that allows Erlang code to trigger a DTrace probe.
Dynamic creation & deletion of DTrace probes is not currently
supported, so the `dtrace:p()` function is hacked to allow a variable
number of arguments (up to four integers and up to four strings) to be
used.  See the comments at the top of `lib/dtrace/src/dtrace.c` for
more detail.

One feature that may be controversial is the notion I've introduced
of a special process dictionary key that can be used by Erlang code to
tag I/O operations for an application-specific purpose.  Right now,
that tag's name is `dtrace_utag`.  The dictionary keys used by `sys`
and other modules start with a dollar sign.  Perhaps there is some
convention (but not a dollar sign?) that this tag should use?

The purpose of the process dictionary key is to allow the tag to
be included in trace messages, e.g. for file I/O, without changing the
API of the `file.erl` module's functions.  For example, here's a use
of the tag when calling the `file:rename/2` function:

    (bar@sbb2)1> put(dtrace_utag, ""GGOOOAAALL!!!!!"").
    undefined

    (bar@sbb2)2> dtrace:init().
    ok

    %% Now start both the `user-probe.d` and `efile_drv.d` D scripts
    %% found in the `lib/dtrace/examples` directory.

    (bar@sbb2)3> dtrace:p(7, 8, 9, ""one"", ""four"").
    true

    %% The output from the `user-probe.d` script:
    <0.40.0> GGOOOAAALL!!!!! 7 8 9 0 'one' 'four' '' ''

    (bar@sbb2)4> file:rename(""old-name"", ""new-name"").
    {error,enoent}

    %% The output from the `efile_drv.d` script:
    async I/O pool port #Port<0.59> queue len 1
    async I/O pool port #Port<0.59> queue len 0
    efile_drv enter tag={1,110} user tag GGOOOAAALL!!!!! | RENAME (12) | args: old-name new-name , 0 0 (port #Port<0.59>)
    async I/O worker tag={1,110} | RENAME (12) | efile_drv-int_entry
    async I/O worker tag={1,110} | RENAME (12) | efile_drv-int_return
    efile_drv return tag={1,110} user tag GGOOOAAALL!!!!! | RENAME (12) | errno 2

I'm not exactly happy with this choice of tagging, namely using
`put(dtrace_utag, Tag::list())`.  But this is an experiment, so
we'll see how it goes.  I can't imagine changing the API for
all file.erl functions in order pass the tag explicitly.

Some modules have some extensive (ab)use of the C preprocessor to
reduce the amount of #ifdefs that clutter the code.  In several places,
I have not #ifdef'ed automatic variables because of clutter.  For the
same reason, there are a handful of cases where I added DTrace-related
members to a struct definition without an #ifdef.  I feel that the
result is easier to read than earlier drafts where I did use many more
`https://github.com/slfritchie/otp/tree/dtrace-experiment+michal2` if
you're curious.)  I expect there may be some debate about whether the
bloat of the affected structs is worthwhile.  I erred on adding stuff
to structs, especially in the efile_drv.c driver, not having a full
grasp on what was thread-safe and what was not ... so I erred on the
side of caution.

The efile_drv.c has a work-around for a crazy GCC optimization bug.
Thank goodness for Google, I dunno how I would've found a work-around
for this silly thing.  Many thanks to Trond Norbye for writing clearly
about the problem in a membase Git repo commit message.

/*
 * A note on probe naming: if ""__"" appears in a provider probe
 * definition, then two things happen during compilation:
 *
 *    1. The ""__"" will turn into a hypen, ""-"", for the probe name.
 *    2. The ""__"" will turn into a single underscore, ""_"", for the
 *       macro names and function definitions that the compiler and
 *       C developers will see.
 *
 * We'll try to use the following naming convention.  We're a bit
 * limited because, as a USDT probe, we can only specify the 4th part
 * of the probe name, e.g. erlang*:::mumble.  The 2nd part of the
 * probe name is always going to be ""beam"" or ""beam.smp"", and the 3rd
 * part of the probe name will always be the name of the function
 * that's calling the probe.
 *
 * So, all probes will be have names defined in this file using the
 * convention category__name or category__sub_category__name.  This
 * will translate to probe names of category-name or
 * category-sub_category-name.
 *
 * Each of ""category"", ""sub_category"", and ""name"" may have underscores
 * but may not have hyphens.
 */

Add tentative support for sequential tracing sending, queueing, and
receiving a message.  I don't believe I've fully covered all the major
places where it would be useful to have the sequential trace token info
in a probe -- guidance from the OTP team would be helpful, if there's
time to do that kind of review.

Add global variable `erts_this_node_sysname`.
"
c4d931d22f446d60fbde0b7d705fe8103bdeaf5f,erlang/otp,"[httpc] Deprecated interface module http has been removed.
It has (long) been replaced by http client interface module httpc.

OTP-9359
"
036a9c4edd013b8a97e5075e3da10b68698d2916,erlang/otp,"ssl: Rename ssl_certificate_db to ssl_pkix_db for clarity

Conflicts:

	lib/ssl/src/ssl.app.src
	lib/ssl/src/ssl_manager.erl
"
9374cbac71c5ef4eff1aaf248ce74c472746d595,erlang/otp,"Merge branch 'bjorn/erts/beam-ops'

* bjorn/erts/beam-ops:
  Make '0 bsl BigNumber' consistently succeed
  Break out most instructions from beam_emu.c
  beam_makeops: Pretty-print the generated code
  beam_makeops: Define ARCH_32 and ARCH_64
  Introduce micro instructions
  Simplify specifying implementation of instructions

OTP-14532
"
0a1e2b5e6c92cbea2d2e853facb8b4d6f058d541,erlang/otp,"erts: Refactor erts_queue_message
"
ee71e0e20819e2ab9e251f4bb46e8b0b19f2a1b3,erlang/otp,"Merge branch 'hans/ssh/test_reorg/OTP-12230' into maint

* hans/ssh/test_reorg/OTP-12230:
  ssh: Reorganize and extend the test suites
"
708b71548d9f0eee1676f7fca7c159a2d9a79abf,erlang/otp,"Merge branch 'sverker/dist-flags-consolidate'
"
d26326c38dd5e79b78703d26667c1b79e3fb6e9a,erlang/otp,"Refactor '%live' and '%def' annotations

The annotations in the optimizing passes currently looks like this:

    {'%live',NumRegistersUsed,RegistersUsedBitmap}
    {'%def',RegistersDefinedBitmap}

(NumRegistersUsed is no longer used.)

When I attempted to extend some optimizations, I found that I had to
add additional clauses to tolerate/handle both types of
annotations. That problem would only get worse if any more annotations
are added in the future.

To simplify annotation handling, this commit wraps both types of
annotations in a {'%anno',_} tuple:

    {'%anno',{used,RegistersUsedBitmap}}
    {'%anno',{def,RegistersDefinedBitmap}}

The '%live' annotation has been renamed to 'used' to make it somewhat
clearer what it means, and the unused NumRegistersUsed part of the
old annotation has been removed.

Alternatives considered: My first attempt was to wrap the annotation
in a 'set' tuple so that there would only be 'set' tuples in a block.
For example:

    {set,[],[],{anno,{live,RegistersUsedBitmap}}}

It was not as convenient as expected. Annotations often need to be
handled specially from other instructions in a block. When they are
wrapped in a 'set' tuple, they can very easily be handled incorrectly
or passed on to the next pass. That causes subtle errors or worse
code, and it can be difficult to debug.

Therefore, my conclusion is that annotations should be distinct from
other instructions, to make it obvious when one have missed to handle
an annotation.
"
4513946835523d099a28f933d40a6275a46097aa,erlang/otp,"Merge branch 'sverk/threadsafe-code-loading'

* sverk/threadsafe-code-loading: (59 commits)
  erts: Fix assert failure when code_server exits ""during"" commit
  erts: Fix memory leak in code loading
  erts: Adapt gdb etp-command for new beam_ranges
  erts: Set correct default tracing when loading code
  erts: Fix faulty assert in non-smp debug vm
  erts: Use correct macro for ""yield-return""
  erts: Refactor code loading with renaming
  erts: Seize code_ix lock when updating trace settings
  erts: Switch order between code_ix lock and thread blocking
  erts: Fix race bug in finish_after_on_load
  erts: Refactor export staging lock
  erts: Activate staged code in a thread safe way
  erts: Suspend processes waiting for code_ix lock
  erts: Fix compiler warning in inet_drv
  erts: Fix single threaded fallback in new BIF finish_loading_1
  erts: Fix type bug
  Break apart erlang:load_module/2 into two separate BIFs
  Use magic binaries in erts_prepare_loading() and erts_finish_loading()
  erts: Cleanup non-blocking load
  erts: Fix memory query for non-blocking module table
  ...

OTP-9974
"
b079018e38272604ffacfece9b97924a9e39df5c,erlang/otp,"Implement magic references

Magic references are *intentionally* indistinguishable from ordinary
references for the Erlang software. Magic references do not change
the language, and are intended as a pure runtime internal optimization.

An ordinary reference is typically used as a key in some table. A
magic reference has a direct pointer to a reference counted magic
binary. This makes it possible to implement various things without
having to do lookups in a table, but instead access the data directly.
Besides very fast lookups this can also improve scalability by
removing a potentially contended table. A couple of examples of
planned future usage of magic references are ETS table identifiers,
and BIF timer identifiers.

Besides future optimizations using magic references it should also
be possible to replace the exposed magic binary cludge with magic
references. That is, magic binaries that are exposed as empty
binaries to the Erlang software.
"
2d540b95755a6f628b0cfc5a9bab4ff41046fe4b,erlang/otp,"Rename type evaluable -> eval

Export the old type as a synonym for backwards compatability. The name
evaluable is a bit too awkward.
"
24f0d567ceffb0f1555bc3032b7801ba377e5a3b,erlang/otp,"Merge branch 'bjorn/remove-test_server/OTP-12705'

* bjorn/remove-test_server/OTP-12705:
  Remove test_server as a standalone application
  Erlang mode for Emacs: Include ct.hrl instead test_server.hrl
  Remove out-commented references to the test_server applications
  Makefiles: Remove test_server from include path and code path
  Eliminate use of test_server.hrl and test_server_line.hrl
"
165846b143c8275350972caaf4c1013cfe5db043,erlang/otp,"Merge tag 'OTP_R16B03_yielding_binary_to_term'

Yielding binary_to_term.

OTP-11535

* tag 'OTP_R16B03_yielding_binary_to_term':
  Increase versions for OTP_R16B03_yielding_binary_to_term
  erts: Adjust term_to_binary reduction factors
  erts: Yield after trapping term_to_binary if gc has been ordered
  erts: Let term_to_binary disable gc while trapping
  erts: Improve stress of binary_to_term in binary_SUITE
  erts: Fix bug in binary_to_term for compressed on halfword
  erts: Fix crash when binary_to_term throws badarg
  erts: Trapping memcpy in binary_to_term
  erts: Cleanup code for trapping binary_to_term
  erts: Add erlang wrappers to binary_to_term
  trapping uncompress
  trapping size calculation
  trapping binary_to_term/2
  trapping STRING_EXT
  trapping lists and tuples
  trapping binary_to_term passing binary_SUITE

Conflicts:
	erts/preloaded/ebin/erlang.beam
	erts/preloaded/ebin/erts_internal.beam
	erts/vsn.mk
	lib/kernel/vsn.mk
	lib/stdlib/vsn.mk
"
067cfe79da2490d49288a50db73ad2a884411934,erlang/otp,"Merge branch 'raimo/sctp-dev/OTP-9239'

* raimo/sctp-dev/OTP-9239: (21 commits)
  erts: Possible bugfix for error chunk on old Solaris 10
  kernel: Documented gen_sctp:peeloff/2
  kernel: Adjust SCTP test to SuSE quirk
  erts: Fixes for SCTP on old Solaris 10
  Update preloaded files
  erts,kernel: Return eprotonosupport when SCTP is not supported
  kernel: Adjust SCTP tests to Solaris quirks
  erts: Fix SCTP decoding byteorder bug for adaptation_ind
  kernel: Rewrite SCTP test socket handler
  kernel: Fix SCTP tests for the FreeBSD protocol stack
  kernel: Bugfix - SCTP connect with sndrcvinfo in assoc_change event
  erts: Default enable SCTP in configure
  Update primary bootstrap and preloaded files
  erts: Use SCTP functions in default libs
  erts: Improve SCTP message defragmenting
  erts,kernel: Bugfix - collect fragmented SCTP messages on recv
  kernel: Add tests for gen_sctp:peeloff/2
  erts,kernel: Implement gen_sctp:peeloff/2
  kernel: Add tests for SCTP stream sockets
  erts,kernel: Add type stream sockets to SCTP
  ...
"
234ef0eb9803d4c4cfb82848e3d3d14d89d1ddf5,erlang/otp,"Make map update instruction functions indepedent of instruction format

Having the helper functions for map update knowing all the details
of operands for the instruction will make it difficult to make
improvements such as better packing.
"
c283f8035e1ac18a6d150a2013c7f929cc32bffc,erlang/otp,"Merge branch 'egil/maps/hamt/OTP-12585'

* egil/maps/hamt/OTP-12585: (113 commits)
  erts: Fix bug in ESTACK and WSTACK
  kernel: Add spec for erts_debug:map_info/1
  mnesia: Update mnesia tests to reflect new ETS hash
  erts: Ensure maps uses _rel functions in halfword
  erts: Do not treat errors as fatal in erl_printf_term
  erts: Update preloaded erts_internal.beam
  erts: Add map decomposition wrappers
  erts: Ensure halfword has correct temp-heap for maps
  hipe: Handle separate hashmap tag correctly
  erts: Fix map bug in dec_term for 32-bit debug VM
  stdlib: Update qlc tests to reflect new ETS hash
  stdlib: Remove obsolete hashmap references in io_lib
  erts: Enhance maps ordering tests
  hipe: Fix maps sort order testcase
  erts: Remove unused variable in crashdump creation
  erts: Fix typo in copy_struct for halfword emulator
  erts: Restrict GCC intrinsics by compiler version
  erts: Fix windows bug in hashmap_info
  erts: Fix typo in make_hash2 for 32-bit arch
  Fix beam_load assert
  ...

Conflicts:
	erts/emulator/beam/bif.tab
"
bd698a302da6f4ca0940add26852c32dc27d3d07,erlang/otp,"Merge branch 'maint'

* maint:
  ssh: Reorganize and extend the test suites
"
a69339d9f8c73d2a0a2369289b464db00c479302,erlang/otp,"erts: Remove ERTS_SMP and USE_THREAD defines

This refactor was done using the unifdef tool like this:
    for file in $(find erts/ -name *.[ch]); do unifdef -t -f defile -o $file $file; done

where defile contained:
    #define ERTS_SMP 1
    #define USE_THREADS 1
    #define DDLL_SMP 1
    #define ERTS_HAVE_SMP_EMU 1
    #define SMP 1
    #define ERL_BITS_REENTRANT 1
    #define ERTS_USE_ASYNC_READY_Q 1
    #define FDBLOCK 1
    #undef ERTS_POLL_NEED_ASYNC_INTERRUPT_SUPPORT
    #define ERTS_POLL_ASYNC_INTERRUPT_SUPPORT 0
    #define ERTS_POLL_USE_WAKEUP_PIPE 1
    #define ERTS_POLL_USE_UPDATE_REQUESTS_QUEUE 1
    #undef ERTS_HAVE_PLAIN_EMU
    #undef ERTS_SIGNAL_STATE
"
e5875001247e6a6ac4f474157a51a8c54f94ae49,erlang/otp,"Convert XML files to UTF-8
"
cb16ed8d78c9b19e85305dbaad9b5773085e509d,erlang/otp,"Merge branch 'egil/maps/refactor-tagscheme/OTP-12585'

* egil/maps/refactor-tagscheme/OTP-12585:
  erts: Refactor Map - use multiple values ESTACK_PUSHN
  erts: GC needs the size even if the frag is not referenced
  Revert ""hipe: Handle separate hashmap tag correctly""
  erts: Combine flat and hash maps under one unifying tag
"
fc542a462a750f19b8fb06fcecc6f2034ec86d59,frida/glib,"Bug 553820 - gpoll.c: undeclared identifier

2008-09-25  Tor Lillqvist  <tml@novell.com>

	Bug 553820 - gpoll.c: undeclared identifier

	* glib/gmain.c
	* glib/gpoll.c: Make the g_poll() function non-static also on
	Windows. Prefix an underscore to the g_main_poll_debug variable
	and make it non-static in gmain.c so that it can be used in
	gpoll.c. Add back missing variable declaration.


svn path=/trunk/; revision=7542
"
875ad12345e22b3189e524d9bede58f6e7b5cf88,frida/glib,"gdatetime: Use proleptic gregorian

Use Proleptic Gregorian calendar instead of the Julian calendar
as the internal representation.

https://bugzilla.gnome.org/show_bug.cgi?id=50076

Signed-off-by: Emmanuele Bassi <049ee2061f71220e5aaf33f5be422fc2a2b06a44@linux.intel.com>
"
cf5346d5027fdc4779b48c44748c7293ce105898,frida/vala,"GTree binding improvements, patch by Evan Nemerson, fixes bug 564823

2008-12-17  Jürg Billeter  <j@bitron.ch>

	* vapi/glib-2.0.vapi:

	GTree binding improvements, patch by Evan Nemerson,
	fixes bug 564823

svn path=/trunk/; revision=2204
"
51bc9af71f6c7462a7294675a6e5af3ff451bc7f,frida/vala,"Make DestroyNotify delegate argument nullable.

2008-04-16  Marc-Andre Lureau  <marcandre.lureau@gmail.com>

	* vapi/glib-2.0.vapi: Make DestroyNotify delegate argument
	nullable.

svn path=/trunk/; revision=1242
"
4b4f30b45d387e780d6a49faf6fa4bfb4d7a8570,frida/vala,"Improve get_actual_type signature

2008-11-28  Jürg Billeter  <j@bitron.ch>

	* vala/valabinaryexpression.vala:
	* vala/valaelementaccess.vala:
	* vala/valaforeachstatement.vala:
	* vala/valamemberaccess.vala:
	* vala/valamethodcall.vala:
	* vala/valasemanticanalyzer.vala:
	* gobject/valaccodearraymodule.vala:
	* gobject/valaccodeassignmentmodule.vala:
	* gobject/valaccodecontrolflowmodule.vala:

	Improve get_actual_type signature

svn path=/trunk/; revision=2066
"
e9e1dec9830ac20e51ae6b41d3584585be2ff54e,hluk/CopyQ,"Windows: Remove unnecessary thread for server which crashes the app
"
48f7fa064a9b96593c1abf3950242003d329369f,hluk/CopyQ,"Refactor action handling
"
ff7b504ce0b1ccc228360df6d7f7a35d2511ae84,hluk/CopyQ,"Refactor timers
"
1fb175b7b2226fe16d949f7889e2af41d9edf11c,meganz/sdk,"Merge changes that were needed for building MEGAcmd 0.9.9 for NAS.
- freeimage adjustment for arm_64
- cmake script that gives an easy non-cygwin way to develop and test changes with visual studio
- use m_time_t a lot more to avoid problems with time_t where it is only 32 bits
- provide m_time() m_localtime() m_mktime to use instead of time() localtime() mktime()
- address quite a few warnings about 64/32 bit lossy conversions in 32 bit builds where it was safe to do so
- fix for (probably never hit case) where streaming fingerprint calc can't jump between block with a 32 bit value
- sdk_test added to confirm fingerprint calc is still working
"
71d1bc5a830e3b3c595fca5b66e2b58e39892113,meganz/sdk,"Merge pull request #577 from meganz/get-user-avatar-color

Make `MegaApi::getUserAvatarColor()` static member"
fcf0fe184b125274d36dc9d56bbfa8d81b209c99,meganz/sdk,"Merge pull request #6 from wizzard/master

Moved console / stdin Waiter code into separate classes. Rename all Wait* classes."
118934181970ddb469ce0b240fed1fd0d29fd51e,meganz/sdk,"Refactoring, documentation and minor changes in megaapi
"
26ef275e0bddfa48c7bed7e29212c5d89dd6b283,meganz/sdk,"New function to do copy+rename at once
"
4c4ea557b344b035507652cfbc3b616904f958e9,mujx/nheko,"Replace shared pointers of MatrixClient with a single instance
"
a17b6dffafb450c48c1c1f5034e85763aa7a6a5e,mujx/nheko,"Clean up headers
"
80f53176d92f27843e6cc555288e1e2412e0c2ea,ncw/rclone,"Rename log functions and factor into own file
"
1bdafcfbf1758609f82c0fc02675090e6fa2aaa7,oVirt/vdsm,"net: Move sysctl module under the network package

The sysctl module contains only network related actions, therefore it
fits well under the network package.

Change-Id: I573b4b115f78c08d020272316203122ba1987662
Signed-off-by: Edward Haas <416ab6a6c3e37a8cab0d365516e79cce8f9be5ad@redhat.com>
"
7a462f5accabad9ba347ebac9c9b7e3ddf98d9c2,oVirt/vdsm,"Split xmlrpc server into its own rpm

We would like to move towards a model where API bindings are optional.  This
means that we can package each one separately any any combination of bindings
can be enabled/disabled by editing the vdsm configuration file.  This patch
splits the XMLRPC binding into a new package (vdsm-xmlrpc) and modifies the
binding loading logic in clientIF to check the configuration file and handle
import errors that can result if a user enables the binding but does not install
the rpm.

Change-Id: Ifdf84af0b903406c148877e26ec27e6ed913bd51
Signed-off-by: Adam Litke <db68fba232b2c49ed3e9d3081df349dde7b61dfd@us.ibm.com>
Reviewed-on: http://gerrit.ovirt.org/3892
Reviewed-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
"
44d8afc38c0bed66481a84a249816d6d837d110c,oVirt/vdsm,"Related to BZ#705058 - Don't start monitoring domains when reconstructing master

recontructMaster caused domain monitoring threads to be created (repostats)
but were never released. During ""reconstructMaster"" the storage pool is
not connected and hence there is no point in monitoring domain liveness at all.

Change-Id: I05914b8c3a8f304e0acda5463e1ad00630c3233b
Reviewed-on: http://gerrit.usersys.redhat.com/634
Reviewed-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
Tested-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
"
8ca1e146bdaafb1781b9bfce64bc6d7cccc8ce7d,oVirt/vdsm,"packaging: rename supervdsmServer.py to supervdsmServer and add environment file

supervdsm process is started by ""python supervdsmServer.pyc"". This is a
bit verbose when it is put in the SysV init script and SystemD service
unit. This patch renames supervdsmServer.py to supervdsmServer to enable
the init script start supervdsmServer directly.

In this patch, an environment file is also add for supervdsmd service.

Change-Id: Ifbcfcfb6f22040d038541c79ac4d0e66ac106504
Signed-off-by: Zhou Zheng Sheng <65b0ce20bd56bed337a28a83658db2bbcb0adacc@linux.vnet.ibm.com>
Reviewed-on: http://gerrit.ovirt.org/17100
Reviewed-by: Alon Bar-Lev <2e3ceb4d37adc6ae3ccc00d3646e0e0a036ace03@redhat.com>
Reviewed-by: Yaniv Bronhaim <cda664369e6ef18cc7279a83d77e4d3390dd4f6b@redhat.com>
Reviewed-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
"
e633b541f1d6030e9be1eec075660eddf5bff985,oVirt/vdsm,"virt: move NetworkInterfaceDevice into vmdevices

No code changes besides import fixes and the renaming:
vm.NetworkInterfaceDevice -> vmdevices.network.Interface

Change-Id: I686bf58787ffd0c670827a51d1d6792dd14a445a
Signed-off-by: Francesco Romani <c7100b580e6017ef67482ace46578cdd2d2e0dfe@redhat.com>
Reviewed-on: http://gerrit.ovirt.org/34559
Reviewed-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
"
ff6e0aa4caaaf5cc3c8c80485654c58a5e249c0e,oVirt/vdsm,"Remove checkDomain().

This API function is unused and is based on buggy functions with outdated semantics.

Change-Id: Ie063eb81dfdae630d6d47dc6fcea90b055b5bae6
Reviewed-on: http://gerrit.ovirt.org/425
Reviewed-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
Tested-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
"
71eb4b51dafcc2dfc75834f30ac7539a5769db6e,oVirt/vdsm,"rpc: moving module to lib/vdsm


Change-Id: Ie2b083e72f83ad7f92f0636443eb620e92dd6cff
Signed-off-by: pkliczewski <a3686ba591e03445d6c34ed327e69ce19609f801@gmail.com>
Reviewed-on: https://gerrit.ovirt.org/53289
Continuous-Integration: Jenkins CI
Reviewed-by: Yaniv Bronhaim <cda664369e6ef18cc7279a83d77e4d3390dd4f6b@redhat.com>
Reviewed-by: Dan Kenigsberg <184831158ae7531bcabc22617ed51e8717c81e93@redhat.com>
"
395776fe36ec40723e1679219adc715141c31c4c,AnSyn/ansyn,"refactor(ngrx): change packages store to forFeature
"
978d0109afdad03060696610a74d6aff0df38eb6,Bytom/bytom,"Add import private key progress query (#331)

* Add import private key progress query

* Add xpub return when get progress

* Store account address index separately

* Add private key import complete flag

* Add import private key rollback process

* Refactor private key import code

* Fix the divisor zero problem

* Fix rescan progress return logic problem

* Fix variable reading and writing conflicts
"
daee829102dc7b73d4c5e8fb8ce7e6672de659fb,FoalTS/foal,"Add @foal/common and refactor core-dependent packages.
"
3bfc010be1643e3cd5089b48599bc80dd7f45c64,ILSCeV/Lara,"Rename an event type
"
44b569cb1a7985a8896fbc13217965cfddeb610b,ILSCeV/Lara,"Merge pull request #257 from ILSCeV/feature/refactor-shift-management

Feature/refactor shift management"
23d392b5e801c48ca00436d38e4c912d07bffdde,K-Fet/K-App,"Merge pull request #299 from K-Fet/refactor/miscs

Add rate limiting to auth operations"
e7a3ac7d7b7c70af01cfd20e1a95648b20349263,Neamar/KISS,"Renamed holder package to pojo
"
d376bbdbaf285a33e2cc3875d9cdd08cb48cc7b0,Neamar/KISS,"More renaming from holder to pojo
"
8b953484ad14339ecbed828268bd4da5dae1dbd4,Neamar/KISS,"Code cleanup
"
60c697a741d45f439f1fabb4c85201a3890d2c4c,apple/swift,"Merge pull request #9364 from bitjammer/rdar-32025974-split-migrator-passes

[Migrator] Separate AST Pass implementations"
44f15558d6c5bdcc75cce9d8981943f459e153cd,apple/swift,"Revert ""Refactor: Rename Parser::consumeToken, consumeLoc. Add consumeToken API.""

This reverts commit 39bfc123a30bfcd297c4c62e8d39541d07ab74c7.
"
33d8b469d4f18626cd685bf9c3bc8273253419d5,apple/swift,"[SE-0111] Store argument labels directly on subscript expressions.

Factor out the trailing storage of call arguments, since we'll need it
for a few different kinds of expression nodes. Use it for both
CallExpr (which already had this storage, albeit with a specialized
implementation) and now SubscriptExpr.
"
da39d9b17b4845611f79ae7c4b1124e60d7c6672,apple/swift,"[GenericSig Builder] Rework RequirementSource to describe requirement path.

Reimplement the RequirementSource class, which captures how
a particular requirement is satisfied by a generic signature. The
primary goal of this rework is to keep the complete path one follows
in a generic signature to get from some explicit requirement in the
generic signature to some derived requirement or type, e.g.,

1) Start at an explicit requirement ""C: Collection""
2) Go to the inherited protocol Sequence,
3) Get the ""Iterator"" associated type
4) Get its conformance to ""IteratorProtocol""
5) Get the ""Element"" associated type

We don't currently capture all of the information we want in the path,
but the basic structure is there, and should also allow us to capture
more source-location information, find the ""optimal"" path, etc. There are
are a number of potential uses:

* IRGen could eventually use this to dig out the witness tables and
  type metadata it needs, instead of using its own fulfillment
  strategy
* SubstitutionMap could use this to lookup conformances, rather than
  it's egregious hacks
* The canonical generic signature builder could use this to lookup
  conformances as needed, e.g., for the recursive-conformances case.

... and probably more simplifications, once we get this right.
"
b5fef06c2cfac8c723872dcbbc661ebe66110216,apple/swift,"Merge pull request #18541 from slavapestov/clean-up-class-layout

Clean up IRGen class layout logic"
418aa75eb21c2e08f7bb968875081532cf35c438,apple/swift,"[stdlib] Rename _NSSwiftXXX => _SwiftNativeNSXXX

...to better reflect the purpose of these classes

Swift SVN r22911
"
6f8b468cb6d4a04ee66c3723acab5a7c3eb1fd8a,apple/swift,"Change switches and selects to use NullablePtr<EnumElementDecl> instead of EnumElementDecl * when their API explicitly requires the user to check for nullptr. NFC.

This is just good to do and hopefully will help prevent people from forgetting
to check in the future by annotating the API explicitly as returning a
potentially nullptr.

Swift SVN r25364
"
57ad36d52153a1a92dcd14d1dbae51ba6310dfc5,apple/swift,"SIL.rst: Call addresses *T instead of Address<T>.

Swift SVN r3524
"
9ece955aca3bf89417546e00892506fb0a98c660,apple/swift,"SIL Serialization: Small renaming and cleanup
"
a795e87c6573879daff03678094a14a70ca04ada,apple/swift,"Revert ""IRGen: get unchecked_ref_cast working with class existential operand""

This reverts commit r28840.  It broke check-swift-optimize-unchecked.

Swift SVN r28847
"
011e306fe826b4368fa05b99b08080f1605f1630,apple/swift,"Sema: Add -enable-experimental-nested-generic-types frontend flag

Also, split up test/decl/nested.swift into several files.
"
715bd5e507ae61112bf647678b1c099369185d20,apple/swift,"SimplifyCFG: Simplify conditional branches to cond_fail blocks

cond_fail on the branch condition value leading to the cond_fail's parent block.

Swift SVN r25665
"
b51cf748d2d28f81db5ed18b30417db4fcefafa0,apple/swift,"Merge pull request #5213 from jckarter/simplify-partial-apply

"
4f354a7f0930174bf4aa9841f8e9ec85545d50fa,apple/swift,"Revert ""[ABI/Runtime] NFC: Rename function metadata arguments to parameters""

This reverts commit 801b35e28c918e9d4af111085c9617711bbbe0cd.
"
111af0322f1b6ba873d63bb9117f143186b137f7,apple/swift,"Using ProjectionTree to create NewProjectionTree and wire NewProjectionTree up
with function signature optimizations to make sure it passes some basic testing.

We are one step closer to get rid of the old projection.
"
8d8b60f9735db5866893ca73fc7665507fd87d3b,apple/swift,"Code completion: implement result caching per-imported module across muptiple
ASTContexts

This introduces swift::ide::CodeCompletionCache, which is a persistent code
completion result cache.

Right now REPL happens to use it (try importing Cocoa and doing code
completion), and the difference is noticeable.  But completion in REPL is
still slow, because Cocoa goes through the AST Verifier on every completion
(for unknown reasons).

This commit does not implement cache invalidation yet, and it does not use
libcache to evict cache entries under memory pressure.

This commit also introduces two regressions:
- We get fewer Cocoa results that expected.  Module::isModuleVisible in Clang
does not incorrectly reports that that ObjectiveC.NSObject submodule is not
visible from Cocoa.

- We are not implementing the decl hiding rules correctly.  We used to rely on
visible decl lookup to do it for us, but now we have a different data structure
we have real decls from the current module and we have a text-only cache, so we
are forced to reimplement this part of name lookup in code completion.


Swift SVN r9633
"
d829b3c775ede5f4cae3ca60e1f77880efb11bdd,apple/swift,"Unify the complete unqualified lookup logic in the UnqualifiedLookup class.



Swift SVN r2109
"
f929885d80b5b236c141708c9a367c21ddc110c6,apple/swift,"[CSGen] Switch to use `AnyFunctionType::getParams()` instead of `getInput()`
"
fbd2e4d872d1aa57bfba2ab1f4d280bb1e90cbb8,apple/swift,"Rename @asmname to @_silgen_name.

This reflects the fact that the attribute's only for compiler-internal use, and isn't really equivalent to C's asm attribute, since it doesn't change the calling convention to be C-compatible.
"
a5be2fff01cffd2f78dc91359eb97698e75693d5,apple/swift,"[sil] Use FullApplySite instead of ApplyInst in SILInstruction::getMemoryBehavior().

We were giving special handling to ApplyInst when we were attempting to use
getMemoryBehavior(). This commit changes the special handling to work on all
full apply sites instead of just AI. Additionally, we look through partial
applies and thin to thick functions.

I also added a dumper called BasicInstructionPropertyDumper that just dumps the
results of SILInstruction::get{Memory,Releasing}Behavior() for all instructions
in order to verify this behavior.
"
f8852c97de5e6830aaeefd545107f56e75f5f975,apple/swift,"[ParseableInterface] Don't serialize all SIL like a SIB file (#20976)

This would break resilience, which makes a distinction between ""SIL
only inside the module, which is inside the resilience domain"" and
""SIL we're going to serialize, which is outside the resilience
domain""."
ae1b06b0410146cd5d12911f1d94e7b4a002242e,apple/swift,"[Sema] Display simplified conditional conformance fixits on the command line.

Fixes rdar://problem/39170601 and SR-7352.
"
b8a24266733faa5b11e3ba0da9573b2e727bf0d7,apple/swift,"Introduce the formal protocol IntegerLiteralConvertible for integer literals.

This eliminates the last of the old ""convert literal to specific type""
code, as all of the basic literal kinds now go directly through formal
protocols. One minor casualty of this change is that we've lost the
""integer constant too large"" warning. Filed as
<rdar://problem/14070127>, which is likely to be addressed in SIL.


Swift SVN r5477
"
5c16c10a2d42df30efdff4154d49aeaabeca61b8,apple/swift,"Merge pull request #1557 from gregomni/typealias

Change all remaining tests to use associatedtype instead of typealias in protocols"
7500c6eced5af30abd2a8c04058efefe4e1b792a,apple/swift,"[Diagnostics] Switch from vector to set to avoid storing duplicate solution types

This allows callees of `getPossibleTypesOfExpressionWithoutApplying`
to get only unique types from the re-run of the solver.
"
725f1ba737564c334a069073fa462f385adedba0,apple/swift,"Remove the long-obsolete and deprecated Swift 1 @objc_block and @thin attributes,
these were subsumed by @convention in Swift 2.

We still support @thin for metatypes in SIL of course.
"
072868d3f6b663fcd44d53da03e0ef474e49e385,apple/swift,"Simplify the implementation of visitCoerceExpr/visitForcedCheckedCastExpr,
and diagnoseGeneralConversionFailure().  The previous approach of trying
to dig into anchors would often lead to complaining about types at 
different levels in the same diagnostic, and the complexity of the former
code isn't needed now that other changes have landed.



Swift SVN r31036
"
9106aa62540e1e157bcf0fd3f92695e97d66e1dd,apple/swift,"Rewrite the function-call infrastructure.  This gets us
a lot closer to successfully emitting the polymorphic-min-over-ranges
example;  the main blocker right now seems to be that the witness
for a static member function is not, in fact, a static member
function at al, but a freestanding function.  That's legitimate,
but it probably needs some shepherding through the witness
system.

Swift SVN r2532
"
78e2e593516f3afbb576340e696e2cfce57300f7,apple/swift,"[IDE] Fix crasher 063-swift-generictypeparamtype-get.swift

This test was crashing (except under asan) because we were using dead
pointers to stack memory where a TypeChecker used to live.
"
231db9d10839d4d23b3655aca439e4f04eb7fbfe,apple/swift,"Clang importer: Import ObjC 'id' as Swift 'Any' (behind a flag).

For experimentation purposes, add a flag to cause the Clang importer to map ObjC APIs using `id` to `Any` instead of `AnyObject`.
"
096903732cdcda603658a2635ae6dfc32bd1c4e7,apple/swift,"[stdlib] Make _NSDictionaryCore, _NSDictionary internal

These shadow protocols don’t add any real type safety, and exposing them in the ABI seems unnecessary.
"
ca53873226e94b077cb4c55f3b39034af64fdaa1,apple/swift,"Don't show private discriminators in simplified demanglings

These are really long and don't tell you anything interesting
in backtraces. They can also take up quite a bit of valuable
real estate in vertical layouts.

rdar://problem/22982415
"
a060eb5aca89662acf1fa7a26125088a87680634,apple/swift,"[SE-0075] Transfer the power of config resolution to Namebinding

This completely removes Parse’s ability to make any judgement calls
about compilation conditions, instead the parser-relevant parts of
‘evaluateConditionalCompilationExpr’ have been moved into
‘classifyConditionalCompilationExpr’ where they exist to make sure only
decls that we want to parse actually parse later.

The condition-evaluation parts have been moved into NameBinding in the
form of a Walker that evaluates and collapses IfConfigs.  This walker
is meant as an homage to PlaygroundLogger.  It should probably be
factored out into a common walker at some point in the future.
"
1b63b688bf2c6e5a3349a9038bfd24c1c6371ed4,apple/swift,"[AST] Use TinyPtrVector for the list of overridden declarations.

TinyPtrVector is a more-space-efficient SmallVector<_, 1>. Use it."
6b51806b54d0bba32298cd945b04eab737d3bef0,apple/swift,"[SE-0157] Make *Collection.SubSequence conform to corresponding *Collection.

Introduce (recursive) constraints that make the *Collection constraint
of SubSequence match that of its enclosing *Collection, e.g.,
MutableCollection.SubSequence conforms to MutableCollection.

Fixes rdar://problem/20715031 and more of SR-3453.
"
b4a2dc8add6ba2b0989755c891fc701873b88819,apple/swift,"Improve contextual member unexpected arguments diagnostic
"
3fc229173337f1698aa1886d1e3edbade03c7887,apple/swift,"Add basic typo correction for unqualified lookup.

There's a lot of room for better QoI / performance here.
"
1d3bdfae7f5a659b97f0f907027410c19460454c,apple/swift,"Separate dependency tracking from Make-style .d file generation.

This refactoring is groundwork for saving the cross-module dependencies
in the swiftdeps files as well, so that we know to rebuild files if an
outside file changes (such as a bridging header, another framework's
headers, or another framework's swiftmodule).

Part of rdar://problem/19270920

Swift SVN r24258
"
2127da6a91f59541192a0c9e0f8de4aa5f619a0b,apple/swift,"Enhance the function_ref instruction to maintain a refcount on the 
SILFunction that it references.  Use this in the mandatory inlining
pass to remove deserialized transparent functions, to clean up the
-emit-sil output of the compiler (and presumably speed up compile 
time).  This implements rdar://15272652



Swift SVN r9699
"
0c474eb68124e266849a81f9de761fb0a8384a59,apple/swift,"Sema: Move some code from preCheckExpression() pass to static methods on TypeExpr

This is just an NFC refactoring to simplify the pre-check
pass a little bit.
"
639fb85c5f9dc324eed4dfa6a34631bf375a0760,apple/swift,"[Refactoring] Rename CollapseNestedIfExpr to CollapseNestedIfStmt

'if' is not expression, but statement.
"
8bebb084e6602ddc3822a0700a7b1cd3710a103c,apple/swift,"Rename 'RequirementKind::ValueWitnessMarker' to 'WitnessMarker'.

It's witnessing protocol requirements, not values, and ""value witness"" has a particular meaning in IRGen.

Swift SVN r11814
"
8dff92ad4d714ae957898ef6818730886e297293,apple/swift,"Move pre-specializations of popular types away from the standard library.

Pre-specializations were only used by Onone builds, but were kept inside the standard library dylyb anyways. This commit moves all the pre-specializations into a dedicated Swift module and a dynamic library, which are only used by Onone builds.

This reduces the code size of libswiftCore.dylib by 4%-5%.
"
f2758e2b8b2586b54aaf39af9736469437af8955,apple/swift,"Rename globalloadforwarding.sil to globalredundantloadelimination.sil

Swift SVN r32516
"
87de4ead29348a6b0b4a125fdc13fcd95b3e6e9b,apple/swift,"Merge pull request #2302 from natecook1000/nc-doc-revisions

[stdlib] Revise documentation for Array- and Set-related types."
5e2b27cc0031bc6b2cb38c9f924f8658d1cb7654,apple/swift,"Merge pull request #16978 from slavapestov/bogus-di-assertion

DI: Remove unnecessary assertion"
47dd7a4cf4dc8f7c83538dcc91d7ef3d2ab2148e,apple/swift,"rename SIL internals for AllocVar and DeallocVar to [De]AllocStack.
No syntax change yet.


Swift SVN r6382
"
49a6c8eb7b1c8fec15f6259241c4880e9b9ace73,apple/swift,"Do all target info management in Clang, and drop -target-abi / -target-feature.

Previously we hardcoded a few important default CPUs, ABIs, and features into
Swift's driver, duplicating work in Clang. Now that we're using Clang's
driver to create the Clang ""sub-compiler"", we can delegate this work to Clang.

As part of this, I've dropped the options for -target-abi (which was a
frontend-only option anyway) and -target-feature (which was a hidden driver
option and is a frontend-only option in /Clang/). We can revisit this later
if it becomes interesting. I left in -target-cpu, which is now mapped
directly to Clang's -mcpu=.

Swift SVN r22449
"
e096d1c033a823219b9afe30fb1015d202e2d5e9,apple/swift,"[CMake] Simplify add_swift_library

This patch splits add_swift_library into two functions one which handles
the simple case of adding a library that is part of the compiler being
built and the second handling the more complicated case of ""target""
libraries, which may need to build for one or more targets.

The new add_swift_library is built using llvm_add_library, which re-uses
LLVM's CMake modules. In adapting to use LLVM's modules some of
add_swift_library's named parameters have been removed and
LINK_LIBRARIES has changed to LINK_LIBS, and LLVM_LINK_COMPONENTS
changed to LINK_COMPONENTS.

This patch also cleans up libswiftBasic's handling of UUID library and
headers, and how it interfaces with gyb sources.

add_swift_library also no longer has the FILE_DEPENDS parameter, which
doesn't matter because llvm_add_library's DEPENDS parameter has the same
behavior.
"
aa880a190daa15da93c9e3cef94116a937067d57,apple/swift,"Merge pull request #8557 from DougGregor/substitution-map-cleanups

"
ebc3e77a7e624546a308cab7047ea66006360f60,apple/swift,Merge pull request #2294 from apple/stdlib-simplify-plus-eq-signature
39389b9c0923a14a98c68f34ec03a407f7438900,apple/swift,"[SE-0125] Remove `isUniquelyReferenced` and the `NonObjectiveCBase` class

We can express the same using the `isUniquelyReferencedNonObjC` API.

- Rename `isUniquelyReferencedNonObjC` to `isKnownUniquelyReferenced`.
- Cleanup `ManagedBufferPointer` by removing holdsUniqueOrPinnedReference` and
  renaming `holdsUniqueReference` to `isUniqueReference`.
- No longer promise to return false from `isKnownUniquelyReferenced` for @objc
  class instances.

SR-1962
rdar://21886410
"
ba6d3850f56a05c56e19a86111e39f393cd4e580,apple/swift,"Sema: Remove some apparently-dead code from CSDiag

I noticed this while working on some other changes.
"
40fb0e79613ba1cd07db1fd74100af1093c867ff,apple/swift,"Introduce a simplified entry point for looking up a member type.

The new TypeChecker::lookupMemberType() handles substitution of the
base type into the type result, as well as eliminating results for
which the resulting types are equivalent.


Swift SVN r5927
"
c080be74eb8883c5b284ca425ffeb3267dff2060,apple/swift,"Merge pull request #7679 from slavapestov/any-hashable-stdlib-cleanup

stdlib: Address a couple of ABI FIXMEs by deleting code"
94dd92fcb890f92460cf31c7d85e205c385b46d2,apple/swift,"Fix compiler_crashers 22725 & 28236 by reworking parameter parsing error
recovery a bit.
"
c39da37525255d3bc141038ff567b4aca57d316e,apple/swift,"Merge pull request #3474 from CodaFi/postminimalist-abstract-expressionism

[SE-0115] Rename *LiteralConvertible protocols to ExpressibleBy*…"
f211c1d3d297fd23a9b9fb30261cd43c10a991d7,apple/swift,"SIL: Factor out boilerplate from unary insns.

Create a UnaryInstructionBase that factors all the boilerplate out of all the unary instructions. It'll be easy to generalize to all fixed-arity instructions, but let's start simple. No functionality change.

Swift SVN r4854
"
e9c559b718d228f686abb58b71d5a69929a20992,apple/swift,"[SILGen] Bootstrapping opaque values  (#7113)

[NFC] Add -enable-sil-opaque-values frontend option.

This will be used to change the SIL-level calling convention for opaque values,
such as generics and resilient structs, to pass-by-value.  Under this flag,
opaque values have SSA lifetimes, managed by copy_value and destroy_value.

This will make it easier to optimize copies and verify ownership.

* [SILGen] type lowering support for opaque values.

Add OpaqueValueTypeLowering.
Under EnableSILOpaqueValues, lower address-only types as opaque values.

* [SIL] Fix ValueOwnershipKind to support opaque SIL values.

* Test case: SILGen opaque value support for Parameter/ResultConvention.

* [SILGen] opaque value support for function arguments.

* Future Test case: SILGen opaque value specialDest arguments.

* Future Test case: SILGen opaque values: emitOpenExistential.

* Test case: SIL parsing support for EnableSILOpaqueValues.

* SILGen opaque values: prepareArchetypeCallee.

* [SIL Verify] allow copy_value for EnableSILOpaqueValues.

* Test cast: SIL serializer support for opaque values.

* Add a static_assert for ParameterConvention layout.

* Test case: Mandatory SILOpt support for EnableSILOpaqueValues.

* Test case: SILOpt support for EnableSILOpaqueValues.

* SILGen opaque values: TypeLowering emitCopyValue.

* SILBuilder createLoad. Allow loading opaque values.

* SIL Verifier. Allow loading and storing opaque values.

* SILGen emitSemanticStore support for opaque values.

* Test case for SILGen emitSemanticStore.

* Test case for SIL mandatory support for inout assignment.

* Fix SILGen opaque values test case after rebasing.
"
5a9ccc5ab22e36b5cb049ce3cfb8ff8f5a3ccd3c,apple/swift,"Add ASTDumper support for AvailabilityQueryExpr

This patch also moves some static utility methods involving PlatformKind out of Attr.h and into PlatformKind.h.


Swift SVN r21896
"
26c00fd429fa67b829db448d2da84b12d320488a,apple/swift,"SIL: Add a switch_int instruction.

This will help represent cleanup blocks in the grown-up Clang way instead of the childish SILGen way, e.g.:

  retain %x
  retain %y
  ...
break_branch:
  %1 = int_literal 1 : $Builtin.Int64
  br cleanup(%1)
return_branch:
  %2 = int_literal 2 : $Builtin.Int64
  br cleanup(%2)
cleanup(%dest : $Builtin.Int64):
  release %z
  release %y
  switch %dest, case 1: break_dest, case 2: return_dest

Swift SVN r6753
"
4b008e6f318949134d9237bd103ac9aac47ddcbc,apple/swift,"stdlib: rename RangeReplaceableCollectionType.splice() to insertContentsOf()

rdar://21972324

Swift SVN r30608
"
43196c27ace07a2bc53c3855c88e48141ccddacf,apple/swift,"[IRGen] 'void **' -> 'void ***' in swift_getGenericWitnessTable.

This is simpler, because the native form of that last argument is: a
pointer to a buffer (*) of pointers (*) to witness tables, which is
modelled as a buffer of void *s. Thus, void ***.
"
3ea754481eaeac9cd71c40038c388ef9145ac7a1,apple/swift,"[Frontend] Allow -emit-interface with -typecheck (#19676)

Textual module interfaces don't actually depend on SILGen, so we
shouldn't need to run SILGen (or serialize an entire binary module) if
we're just trying to emit a textual interface. On the other hand, if
we /are/ going to run SILGen and then SIL diagnostics, we shouldn't
delay those diagnostics by spending time emitting a textual interface,
or for that matter a TBD file.

Using this, update all the ModuleInterface tests that use
`-emit-module -o /dev/null` to use `-typecheck` instead, except for
those using `-merge-modules`."
31805386427aedcb49809227f2bbc4376ad83b9d,apple/swift,"Sema: Remove unused TypeChecker::resolveMemberType()
"
4539dbfd0622a799ad2ab89f6b1bbc407500e50e,apple/swift,"[Serialization] Simplify the representation of GenericParamLists (#20446)

Now that we don't store requirements in the GenericParamList, there's
no reason to use trailing records to list out the
GenericTypeParamDecls.

No functionality change."
f489f2a6fd8a9b1bc1db6544caeb3a683c8edf64,apple/swift,"Clean up AST representation of 'super'.

Replace the more specific Super*RefExpr nodes with a single SuperRefExpr that resolves members of 'this' relative to its superclass. Add an OtherConstructorDeclRefExpr for referring to a constructor as called from another constructor, and use it to represent resolved 'super.constructor' expressions. (It should also be able to represent delegating constructors for free, if we decide we want to add syntax for that.)

Swift SVN r4286
"
398cbba5be508106c95a75b1e3cc39642442e676,apple/swift,"Rename SILConstant to SILDeclRef.

""SILConstant"" doesn't really describe its role in SIL anymore, which is to provide a reference to a Swift declaration in a SIL instruction, such as a method or nominal type field.

Swift SVN r6559
"
9eee4adc9142bb491ee314867afa00982e51973b,apple/swift,"[Parse] Parameter list parsing cleanup

* Removed `parseConstructorArguments()`, unified with
  `parseSingleParameterClause()`.
* Use `parseSingleParameterClause()` from `parseFunctionSignature()`, so
  that we can share the recovery code.
* Removed `isFirstParameterClause` parameter from `mapParsedParameters`,
  because it's predictable from `paramContext`.
"
86fd48456d1d69b7f0608859d0fb873735066bbe,apple/swift,"Clean up var decl parsing

This works now instead of giving a trail of parse errors:
  var x : Int, y : Int { get { return 42 } }

This is now an explicit error rather than a trail of parse errors:
  var x, y : Int { get { return 42 } }

Swift SVN r3811
"
10a5bfe70cd273a3d5d8ee7aca0c7a1cf1944efc,apple/swift,"Merge pull request #15534 from xedin/rdar-35890334

[Diagnostics] Improve diagnostics for type parameter requirements"
c0bc4f20be84a207c5c57fae03ce65b064bc2bf6,apple/swift,"[QoI] Improve diagnostics for unresolved member with incorrect arguments

`FailureDiagnosis::visitUnresolvedMemberExpr` tries to use the same logic
as `diagnoseSingleCandidateFailures` so instead of doing that let's remove
some of the special handling and use `diagnoseSingleCandidateFailures`
directly instead, which improves label diagnostics and handles more erroneous
cases as well.

Resolves: rdar://problem/31898542
"
8b7cc4f6197876b491064e0756c803fb652a175f,apple/swift,"Make -i compatible with shebangs and forward arguments correctly

The driver option -i now requires an input file as argument, and any
options after the input file will be treated as arguments to the
interpretted file.

This also renames the frontend option to -interpret, since it is parsed
as a flag, unlike -i. We could support -interpret in the driver if we
wanted, which would allow us to use --, but wouldn't work with shebang
scripts. For now, it's frontend-only.

Swift SVN r19718
"
2ab1f296646a4d98287280c336ca1787d93ca697,apple/swift,"Use emitRValueForDecl in various places that expect an RValue, and
use emitReferenceToDecl when we expect an lvalue or rvalue.  This
makes the code more explicit and avoids duplicating the ""emit a
load if emitReferenceToDecl returned an lvalue"" logic.


Swift SVN r12603
"
64693183da022f5b090c74770bded36be1a474bb,apple/swift,"[DCE] Add a very primitive dead code elimination pass

DCE is added as a separate SIL pass with it's own entry point.

For now, detect and simplify the branch instructions with constant
conditions and delete unreachable basic blocks (for now, we do not even
pay any regards to the basic block arguments).

Swift SVN r6713
"
836c9d6eb474028a8cda2d3f7f850655628e90a1,apple/swift,"Rename -Ofast to -Ounchecked.

<rdar://problem/17202004>

Swift SVN r20454
"
6c26b80e6e759345b475bba3bcc621cfc5151b89,apple/swift,"[Foundation] Rework the backing storage for CharacterSet to be more performant and bridge correctly to objective-c and CF

Some cases of using isSuperset can cause crashes, this was caused by improper subclassing callouts; this pr resolves those failures (and provides unit tests for that case)
The cases where the bridge was traversed too much now only causes a single bridge out call (without needing to reallocate or thrash retain/release)
String.components(separatedBy: CharacterSet) should be considerably faster now not only for more apporpriate bridging calls but also no longer needing to bridge arrays back and forth.

Resolves the following issues:
rdar://problem/17281998
rdar://problem/26611771
rdar://problem/29738989
"
4d827aa7d5136cac07927cd38b2e5fac40d46b50,apple/swift,"Replace an unnamed namespace with a static specifier on the function


Swift SVN r10766
"
fdc3e70d6dca36f174b21cd5ab82ffc2be55c85d,apple/swift,"move SILGenFunction::Writeback out of line and rename it to LValueWriteback
in preparation for more work on it.  NFC.


Swift SVN r11876
"
31eae3675b1be3a549271480c6b9d6fda05b02e3,apple/swift,"[sourcekitd] Remove XPCTracing

This code was an experiment in how to collect information after a crash,
that did not end up being used.  It's unclear how much it has bitrotted
at this point, since it has no tests and was not designed with automated
testing in mind.  Parts of it interfere with some changes I want to make
to the underlying tracing mechanism, so I am finally removing it.  This
also lets us remove the buffer copying in the parts of tracing used by
the compile notifications, improving performance.

For rdar://39538847
"
a66b35d79b4634e051d1968a582334ea12512dc8,apple/swift,"[Constraint solver] Allow constraint regeneration when inputs are simplified.

When we process a constraint, the first step is generally to call
getFixedTypeRecursive() to look through type variables. When this
operation actually does non-trivial work, we could save
that result by considering the current constraint ""solved"" and
generating a new constraint (if needed!) with the simplified types.

This commit adds the infrastructure to do that, because it's important
when getFixedTypeRecursive() starts performing more interesting
substitutions (e.g., handling member types of type
variables). However, enabling for the common case of looking through a
type variable isn't profitable (it's ~2% slower to type-check the
standard library). Stage in this infrastructure change now.
"
0774db030f26270cb44c92a64676988231990d1d,apple/swift,"[Migrator] Separate AST Pass implementations

The SyntacticMigratorPass is getting Too Big To Fail and covers
multiple migrations. There was already an early exit to not run
the pass if APIDigesterDataStorePath wasn't supplied, so SE-0110
tuple splat fix-its weren't getting run. This manifested in Migrator
tests not printing migrated contents on Linux.

New: ASTMigratorPass
Renamed: SyntacticMigratorPass -> APIDiffMigratorPass
New: TupleSplatMigratorPass

These implementations are entirely hidden and can only be invoked
by a swift::migrator function.

rdar://problem/32025974
"
982e3d09f89aadadcec63ae8637188dcd1d12740,apple/swift,"[stdlib] Revise documentation for new indexing model

This revises and expands on documentation for the new collection methods
for working with indices and the revised Swift 3 set APIs. In addition,
it includes documentation for the new range types.
"
ae8b125f82dc46db111fb4d6fb13893f2bbe9a5e,apple/swift,"[Sema] Revise #15412 in response to feedback (2)

- Emit a warning in Swift 4 for performing a redeclaration that will be illegal in Swift 5

- Minor fixes
"
5d8a7ff9e70ca781e2130027f035ecb4341c6e53,apple/swift,"Allow multiple comma-separated enum elements in a 'case' decl.

Introduce an EnumCaseDecl for source fidelity to track the 'case' location and ordering of EnumElementDecls. Parse a comma-separated list of EnumElementDecls after a 'case' token.

Swift SVN r8509
"
9ac6c23c1dda9ecbd5cb048c4b19cb975f7dad44,apple/swift,"rename IsaPattern -> IsPattern to follow source syntax, NFC.




Swift SVN r25951
"
3d273367f463602508940ec6d3f3a5f9fb216fa3,apple/swift,"SIL: rename TupleElementInst -> ExtractInst
Now that it's being used on both tuples and structs, the current name doesn't make much sense. SIL.rst specifies a unified set of extract/insert/gep instructions that operate on either tuples or nominal fragile structs.

Swift SVN r3303
"
9ec658ae7f1ad687594654417ed54476b18ac127,apple/swift,"Merge pull request #10289 from nathawes/rdar32148117-multiline-syntax-coloring-issues

[syntax-coloring] Rework the syntax map to use offset + length and simplify the delta logic"
b65d0c1d117332a632c10895e62218fa380d8251,apple/swift,"Consolidate `_stdlib_random` functions (#2)

* Use the `__has_include` and `GRND_RANDOM` macros

* Use `getentropy` instead of `getrandom`

* Use `std::min` from the <algorithm> header

* Move `#if` out of the `_stdlib_random` function

* Use `getrandom` with ""/dev/urandom"" fallback

* Use `#pragma comment` to import ""Bcrypt.lib""

* <https://docs.microsoft.com/en-us/cpp/preprocessor/comment-c-cpp>
* <https://clang.llvm.org/docs/UsersManual.html#microsoft-extensions>

* Use ""/dev/urandom"" instead of `SecRandomCopyBytes`

* Use `swift::StaticMutex` for shared ""/dev/urandom""

* Add `getrandom_available`; use `O_CLOEXEC` flag

Add platform impl docs

Update copyrights

Fix docs

Add _stdlib_random test

Update _stdlib_random test

Add missing &

Notice about _stdlib_random

Fix docs

Guard on upperBound = 0

Test full range of 8 bit integers

Remove some gyb

Clean up integerRangeTest

Remove FixedWidthInteger constraint

Use arc4random universally

Fix randomElement

Constrain shuffle to RandomAccessCollection

warning instead of error

Move Apple's implementation

Fix failing test on 32 bit systems
"
63cd1258ea9bd4d9baf22ff6f2db28582e4de8e6,apple/swift,"Stop using SourceManager::getBufferIdentifierForLoc to find buffer IDs

The right way is findBufferContainingLoc. getBufferIdentifierForLoc is
both slower and wrong in the presence of #sourceLocation.

I couldn't come up with a test for the change in IDE/Utils.cpp because
refactoring still seems to be broken around #sourceLocation. I'll file
bugs for that.
"
67ca7ce1e91e011e2ad24d0b349a2675e70a4f29,apple/swift,"SIL: Rename 'protocol_metatype' to 'existential_metatype'.

It's not forming the metatype for the protocol type (exists t: P. t).metatype, it's forming the existential of a metatype of a conforming type, exists t: P. (t.metatype).

Swift SVN r14520
"
637017de901c22203f1f05877696c6361d90e8b8,apple/swift,"Merge branch 'apple-master' into simplify-module-digester
"
1a991da16d1a76dc0b465aa24da26db0ae70481a,apple/swift,"AST: Assign interface types to ParamDecls

First, ensure all ParamDecls that are synthesized from scratch are given
both a contextual type and an interface type.

For ParamDecls written in source, add a new recordParamType() method to
GenericTypeResolver. This calls setType() or setInterfaceType() as
appropriate.

Interestingly enough a handful of diagnostics in the test suite have
improved. I'm not sure why, but I'll take it.

The ParamDecl::createUnboundSelf() method is now only used in the parser,
and no longer sets the type of the self parameter to the unbound generic
type. This was wrong anyway, since the type was always being overwritten.
This allows us to remove DeclContext::getSelfTypeOfContext().

Also, ensure that FuncDecl::getBodyResultTypeLoc() always has an interface
type for synthesized declarations, eliminating a mapTypeOutOfContext()
call when computing the function interface type in configureInterfaceType().

Finally, clean up the logic for resolving the DynamicSelfType. We now
get the interface or contextual type of 'Self' via the resolver, instead
of always getting the contextual type and patching it up inside
configureInterfaceType().
"
807dd5864e50a9a8cf471133044037a590d5cb27,apple/swift,"Renamed swift::types to swift::file_types.
"
37c461cc5943421f5baf44bc558b426ebade0635,apple/swift,"Serialization: Serialize shared thunks referenced from fragile functions

If a thunk is referenced from two different functions, the thunk inherits
the fragile attribute from the first function that forced it to be emitted.

This is wrong, in case the first function might not be fragile, while
the second one is. Copying the fragile attribute to an existing thunk when
checking if it has already been emitted is also wrong, because the thunk
might reference another thunk, and so on.

The correct fix is to have SIL serialization serialize the transitive
closure of all fragile functions and thunks referenced from fragile
functions. Re-work SIL function serialization to use a worklist so that
we can do this.

Part of https://bugs.swift.org/browse/SR-267.
"
0a3197390fe70e074e02cabbce0824f4f41a7970,apple/swift,"Various changes:
 - Don't ""aka"" a Builtin.Int2123 type, it just makes a bad diagnostic worse.
 - Split out the predicate that CSDiag uses to determine what a conversion
   constraint is to a helper fn, and add subtype constraints to the mix.
 - Move eraseTypeData into CSDiag (its own client) as a static function.
 - Make eraseTypeData be a bit more careful about literals, in an attempt to
   improve diagnostics when literals get re-type-checked.  It turns out that
   this still isn't enough as shown by the regression on the 
   decl/func/default-values.swift testcase, and the 
   Constraints/dictionary_literal.swift testcase where one bad diagnostic turns
   into another different one, but I'll keep working on it.
 - Beef up diagnoseContextualConversionError and the caller to it to be more
   self contained and principled about the conversion constraints it digs out
   of the system.  This improves the diagnostics on a couple of cases.



Swift SVN r30642
"
85be76718236d4415c87754d0672febab7cad6b5,apple/swift,"introduce a new ConstraintSystem::solveSingle helper function to simplify some 
clients.  NFC.



Swift SVN r30163
"
60ae475ca0d79448351ef9161e54e4c0ccd4f3c4,apple/swift,"[IRGen] Make -emit-public-type-metadata-accessors a no-op.

This work-around is no longer needed now that the full fix landed in
https://github.com/apple/swift/pull/16615. The argument is left with a warning
to help with migration between compilers with the work-around and compilers with
the full fix (see also rdar://problem/40502379).

Fixes rdar://problem/40476573.
"
481fbb7b9134b9f37394354e8baeb57f013fcb8c,apple/swift,"Drop the non-interface types from SILFunctionType.

There are some straggling references to the context generic param list, but nothing uses the non-interface param or result types anymore!

Swift SVN r13725
"
55be501ad6d4d103db7b4ba303aa54343acaa779,apple/swift,"Merge pull request #2429 from natecook1000/nc-revise-core

[stdlib] Revise documentation for core types and protocols"
1e5daf75572f48143be19ecfea70fcc01ec8030d,apple/swift,"[Sema] Suppress deprecation warnings inside implicit functions

This commit suppresses deprecation warnings for references to deprecated symbols
by climbing the DeclContext hierarchy to determine if the warning location is
inside an implicit function.

This is a quick fix to get rid of spurious warnings for deprecated enums whose
nil literal conformance is synthesized by the importer. These warnings would
occur even when user code made no apparent reference to the enum in question and
instead only referred to an imported class that itself referred to the enum in a
method signature. This quick fix intentionally drops some valid warnings
(for example, for a synthesized call to a deprecated initializer in a super
class). rdar://problem/20024980 tracks adding these special purpose warnings
back.

rdar://problem/20007266

Swift SVN r25720
"
be71ab28e24064c137b747932a9b9dec165bf921,apple/swift,"SIL: Add an MarkUninitializedBehavior instruction for behavior DI.

This instruction creates a ""virtual"" address to represent a property with a behavior that supports definite initialization. The instruction holds references to functions that perform the initialization and 'set' logic for the property. It will be DI's job to rewrite assignments into this virtual address into calls to the initializer or setter based on the initialization state of the property at the time of assignment.
"
6af5d3c0bf4a6325bc88539a3f44a991c69c37a4,apple/swift,"libSyntax: rename KeepTokensInSourceFile to KeepSyntaxInfoInSourceFile.
"
735a23a0a349a7943824c01f52befd1ace2e6a33,apple/swift,"[sil-combine] Rewrite unchecked_addr_cast to access layout compatible first element fields via typed GEPS.

A first element field of a nominal type is either the first element of a
struct or the first payload of an enum. We currently allow the stdlib to
rappel into struct heirarchies using reinterpretCast. This patch teaches
the optimizer how to rewrite such unchecked_addr_cast into
unchecked_enum_data_addr and struct_element_addr instructions. Then
Mem2Reg and Load Store Forwarding will remove the allocation generated
by such uses of reinterpret cast.

<rdar://problem/16703656>

Swift SVN r18977
"
751c463a2e58855270eaa77ef625e0ab293a23a8,apple/swift,"Rewrite the way we represent construction of value types so that it looks
more like a call.  This should be enough to get generic constructors working.



Swift SVN r2437
"
d771054c7bc36f90edfb22b98db585709daa990b,apple/swift,"build: use the new object format property

Simplify the ELF checks based on review comments from Dimitri Gribenko.
"
10eb1785e584c743bf0de9d51ed739df6fccfcab,apple/swift,"IRGen: Clean up FIXME in emitConditionalConformancesBuffer()
"
f2edd610cbd7171bb73837ccd6cb2f59f1a3ebfb,apple/swift,"Don't give IRGenDebugInfo privileged access to the TypeConverter.

Now that it's using the public routines for getting a TypeInfo,
make sure it's actually lowering types appropriately.

Swift SVN r10571
"
981f8f650981b6e3ad4fe81839445630f0a8021e,apple/swift,"Rename ""destructor"" -> ""deinit"" (as a keyword) and -> ""deinitializer"" (in diagnostics).


Swift SVN r14380
"
c5a08605b1a609951d2a54389b3fb93afd04eec5,apple/swift,"Merge pull request #3365 from benlangmuir/unresolved-member-stmt-condition

[CodeCompletion] Improve StmtCondition recovery for code-completion"
c4622014f8660b1d18bf2c418065491251fa29c3,apple/swift,"Start importing NSArray* with the sugar AnyObject[]! rather than Array<AnyObject>!.

... and simplify type printing so we don't overparenthesize such types.



Swift SVN r18183
"
0cccfe9299fc1a9c40a8980e9f3d03d075b6ee81,apple/swift,"rename the Walker class to ASTWalker to match ASTVisitor.


Swift SVN r1201
"
960b0bfd35963d7ddc353c942e4eb92d4e0c240e,apple/swift,"Move most type lookup from name-binding into TypeChecker::validateType.  Use this to make type resolution more powerful, so we can resolve members of types like S<Int>
and Int[].

Type resolution for types named in ExtensionDecls remains a part of name-binding; it has to use more restrictive rules because we can't perform general member lookup until
we've resolved all the types named in ExtensionDecls.



Swift SVN r2313
"
af1e0b316e62f26eefeccf3b516e258357695c3c,apple/swift,"Sema: Your monthly dose of minor @objc fixes

- Disallow @objc on members of non-@objc protocols (the
  real reason for this patch)

- Add a separate diagnostic for @objc appearing on members
  in non-class, non-protocol types.

- Clean up the code that enforces that @objc can only be
  applied to @objc-rooted classes. The diagnostic would
  be incorrectly emitted for @objc subclasses of generic
  classes.

Fixes <rdar://problem/17273524>.

Swift SVN r31303
"
5036806e5a210f1929d4d199abcc3af693c3c690,apple/swift,"AST: Remove some unnecessary getCanonicalType() calls
"
b26ac34adeb404a5f33d6afc4490472921f8095c,apple/swift,"rework how let-ness of 'self' is determined, to be based on the type of self.
This time, it correctly handles static methods, which have metatypetype.


Swift SVN r11302
"
9d4fc913d9b8ccfade0b477175bf1546b30b7337,apple/swift,"Track dependencies of SIL instructions on opened archetypes which they use

Till now there was no way in SIL to explicitly express a dependency of an instruction on any opened archetypes used by it. This was a cause of many errors and correctness issues. In many cases the code was moved around without taking into account these dependencies, which resulted in breaking the invariant that any uses of an opened archetype should be dominated by the definition of this archetype.

This patch does the following:
- Map opened archetypes to the instructions defining them, i.e. to open_existential instructions.
- Introduce a helper class SILOpenedArchetypesTracker for creating and maintaining such mappings.
- Introduce a helper class SILOpenedArchetypesState for providing a read-only API for looking up available opened archetypes.
- Each SIL instruction which uses an opened archetype as a type gets an additional opened archetype operand representing a dependency of the instruction on this archetype. These opened archetypes operands are an in-memory representation. They are not serialized. Instead, they are re-constructed when reading binary or textual SIL files.
- SILVerifier was extended to conduct more thorough checks related to the usage of opened archetypes.
"
bc942090eeba7fdf8ae40fbd61eb5a320031f56c,apple/swift,"cleaning up initializePointee/deinitializePointee, error messages and comments
"
6b3ef547ec657fa8cbe42eb088679c6a9c4b8103,apple/swift,"Replace ""Members"" arrays with an intrusive linked list.

The use of ASTContext-allocated arrays to store the members of nominal
type declarations and the extensions thereof is an
abomination. Instead, introduce the notion of an ""iterable""
declaration context, which keeps track of the declarations within that
context (stored as a singly-linked list) and allows iteration over
them. When a member is added, it will also make sure that the member
goes into the lookup table for its context immediately.

This eliminates a ton of wasted memory when we have to reallocate the
members arrays for types and extensions, and moves us toward a much
more sane model. The only functionality change here is that the Clang
importer no longer puts subscript declarations into the wrong class,
nor does it nested a C struct within another C struct.



Swift SVN r16572
"
8a99d672c02c18dc9eefd27fe24715851bb5675f,apple/swift,"Merge pull request #10983 from jrose-apple/ParseSIL

[Parse] Split ParseSIL out into its own library."
7a08716de3e8e06ab22c84fd265e284a5f0ddc5f,apple/swift,"Runtime: Factor out a helper function on Metadata to say when metadata refers to a class type.

Rename the existing misleadingly-named ""isClassType"" to ""isClassObject"", and document that it refers to (swift or ObjC) class objects, the latter of which aren't always type metadata.

Swift SVN r22153
"
bfcc8482d808ca164f37263a5ab63954fe3f0df1,apple/swift,"Re-apply ""[ClangImporter] Ban a few deprecated methods of NSDocument.""

Now with the right REQUIRES line in the new test.

rdar://problem/21177341

Swift SVN r29237
"
615ca4a360a8095d25ef371573665a07679307e9,apple/swift,"implement the rest of character literal support, and enhance Char to be character literal
compatible.  This wraps up rdar://11305635, though some cleanup of the testsuite can now be done.


Swift SVN r1672
"
53403e29ac53cce03dc4587e66c23b3de48fbcbe,apple/swift,"[+0-all-args] Remove the SILOption EnableGuaranteedNormalArguments and minimally simplify code.

I made this change by removing the SILOption and then doing a compile, fix loop. I
purposely did not move around the code to make the refactoring really easy to
see.
"
c8752d1570977586f3ff5e00fa6e4d279a21eaa5,apple/swift,"[migrator] Revert ""migrator: avoid inserting base name while renaming if users' member access doesn't specify the base name. rdar://40373279""

We've seen cases where using dot member names cause build errors. Thus, we revert this QOL fix.

rdar://40458118
"
8ab1e2dd502fc7f37a67572699165e03f268c377,apple/swift,"Unify debug scope and location handling in SILInstruction and SILBuilder.

The drivers for this change are providing a simpler API to SIL pass
authors, having a more efficient of the in-memory representation,
and ruling out an entire class of common bugs that usually result
in hard-to-debug backend crashes.

Summary
-------

SILInstruction

Old                   New
+---------------+     +------------------+    +-----------------+
|SILInstruction |     |SILInstruction    |    |SILDebugLocation |
+---------------+     +------------------+    +-----------------+
| ...           |     | ...              |    | ...             |
|SILLocation    |     |SILDebugLocation *| -> |SILLocation      |
|SILDebugScope *|     +------------------+    |SILDebugScope *  |
+---------------+                             +-----------------+

We’re introducing a new class SILDebugLocation which represents the
combination of a SILLocation and a SILDebugScope.
Instead of storing an inline SILLocation and a SILDebugScope pointer,
SILInstruction now only has one SILDebugLocation pointer. The APIs of
SILBuilder and SILDebugLocation guarantees that every SILInstruction
has a nonempty SILDebugScope.

Developer-visible changes include:

SILBuilder
----------

In the old design SILBuilder populated the InsertedInstrs list to
allow setting the debug scopes of all built instructions in bulk
at the very end (as the responsibility of the user). In the new design,
SILBuilder now carries a ""current debug scope"" state and immediately
sets the debug scope when an instruction is inserted.
This fixes a use-after-free issue with with SIL passes that delete
instructions before destroying the SILBuilder that created them.

Because of this, SILBuilderWithScopes no longer needs to be a template,
which simplifies its call sites.

SILInstruction
--------------

It is neither possible or necessary to manually call setDebugScope()
on a SILInstruction any more. The function still exists as a private
method, but is only used when splicing instructions from one function
to another.

Efficiency
----------

In addition to dropping 20 bytes from each SILInstruction,
SILDebugLocations are now allocated in the SILModule's bump pointer
allocator and are uniqued by SILBuilder. Unfortunately repeat compiles
of the standard library already vary by about 5% so I couldn’t yet
produce reliable numbers for how much this saves overall.

rdar://problem/22017421
"
9b74a4b0d647b498657e52b5af00a5a9da6f6c10,apple/swift,"SILGen: Fix memory leak when sub-expression of ErasureExpr throws

If we didn't initialize the existential, we have to emit a cleanup
because we may have allocated a buffer on the heap to store the value.

Factor out the TakeExistentialCleanup that appears in a few places,
rename it to DeinitExistentialCleanup and add support for deallocating
boxed existentials.

Then, use a special Initialization subclass to keep track of the
state of the memory in emit{AddressOnly,Boxed}Erasure().

Swift SVN r31259
"
60581da15ed0d907469743a615d9238de3407095,apple/swift,"[ConstraintSystem] Add `Splitter`, `Component` and binding steps

* `SplitterStep` is responsible for running connected components
  algorithm to determine how many independent sub-systems there are.
  Once that's done it would create one `ComponentStep` per such
  sub-system, and move to try to solve each and then merge partial
  solutions produced by components into complete solution(s).

* `ComponentStep` represents a set of type variables and related
  constraints which could be solved independently. It's further
  simplified into ""binding"" steps which attempt type variable and
  disjunction choices.

* ""Binding"" steps such as `TypeVariableStep` and `DisjunctionStep`
  are responsible for trying type binding choices in attempt to
  simplify the system and produce a solution. After attempting each
  choice they introduce a new ""split"" step to compute more work.
"
c101e360a9ec19791e4c6ed1eb0c205afb4f8d38,apple/swift,"[driver] Use ""const std::string &"" instead of StringRef.

…for strings required to be null-terminated.

Swift SVN r12790
"
ea293c08b551d2c52857658eb4f49d6d5eb0b99d,apple/swift,"IRGen: Move getTypeRef() to a method on IRGenModule and clean up
"
4b9efc5acc480be9d9f33e94c1a83b396b2f4a96,apple/swift,"Introduce the notion of an 'unknowable' coercion result, for cases
where it is possible that the coercion will be well-formed, but we
don't know because there are subexpressions that don't have types,
e.g., a literal. When we come by later and resolve literals, the
unknowable may become knowable.

This is the skeleton of <rdar://problem/11445907>, but there is still
work to do to ensure that we only get unknowable results when we
truly can't know (which has a major effect on overloading) and to push
unknowable checking further into the type checker.

This change allows us to eliminate the hack wherein a literal would be
coerced to protocol type by directly using the default type for that
literal. Instead, the result is simply unknowable, and resolution of
literals to their default literal types will perform the type checking
later. 

Finally, we now give type coercion expressions, e.g.,

  Int(blah)

the type of the thing we're coercing to, even if the coercion to or
construction of Int from blah is unknowable, which aids type
checking.





Swift SVN r2181
"
c597ad17756c223518842a42a8b60700648c4e54,apple/swift,"[Coverage] Use a MapVector to store coverage maps in a module, NFC (#15858)

Using a MapVector allows coverage maps to be printed in a deterministic
order, and to be queried by function name. This makes an assertion
cheaper."
f63dff16c70673a0e5f7f895df7cb02ea5be643e,apple/swift,"AST: Don't allow @_transparent on extensions

Quiz: What does @_transparent on an extension actually *do*?

1) Make all members @_transparent?
2) Allow your members to be @_transparent?
3) Some other magical effect that has nothing to do with members?

The correct answer is 1), however a few places in the stdlib defined
a @_transparent extension and then proceeded to make some or all members
also @_transparent, and in a couple of places we defined a @_transparent
extension with no members at all.

To avoid cargo culting and confusion, remove the ability to make
@_transparent extensions altogether, and force usages to be explicit.
"
913f09838aeca18a66ca6c28b0fa92353f72a505,apple/swift,"[stdlib] Add a default generate() for generators...

...that are also sequences, and rip out all redundant implementations of
generate() that match a default.

Swift SVN r30035
"
f6e85d1d6478a98c7600fc2c9974819b5f08bc97,apple/swift,"[SIL] Simplify SILInstructionResultArray::iterator

No major change in execution time, but why make things more
complicated than they need to be? It does make
SILInstructionResultArray::begin drop out of the top ten functions in
the inverted call stack (not counting performLLVM).
"
deac6d7020624f177f7c4ef95a28b1c6ca7855e9,apple/swift,"stdlib: rename generic parameters from T to Element

... for LazySequence, LazyForwardCollection, LazyBidirectionalCollection,
LazyRandomAccessCollection.

Part of rdar://21429126

Swift SVN r29633
"
87b4eeccf337f3843fa282d1a55bcc0363d6ea93,apple/swift,"Make same-type requirements prefer to be rooted at outer generic parameters.

All archetypes from outer scopes are fixed (as a lame implementation
restriction), so same-type constraints that involve archetypes from
outer scopres should treat the archetypes from outer scopes as the
representative. Do so, and start eliminating the notion of a ""primary""
archetype that was preventing this fix from occurring earlier, so that
""all archetypes"" and the set of requirements generated from the
archetype builder still line up.

Fixes rdar://problem/19519590.

Swift SVN r29869
"
e6cade2c47d3b15ecaaa173eff7762a61ac96ce3,apple/swift,"Make the definition of implicit default constructors lazy.

Tie the laziness into name lookup, so any attempt to look for the
constructors in a struct will ensure that the implicit default
constructor gets generated and added to the lookup set.

Laziness here is not about performance. Rather, it is a step toward
defining the implicit default constructor only when all instance
variables have implicit default constructors. Because Swift allows
struct definitions to come in any order, we need to wait until we've
done the first round of type-checking on declarations, then resolve
implicit default constructors as-needed, finalizing them all before
moving on to check function bodies.



Swift SVN r4888
"
722cc29cab06d361744a9121f8c1dcbc6f1a4f68,apple/swift,"Factor out DeclContext::getParentModule().  This cleans up a few places where
similar loops were duplicated.

No functionality changes.


Swift SVN r6353
"
8ff40a3a22b499c49906ff619745bebd791885a5,apple/swift,"Revert ""Move pre-specializations of popular types away from the standard library.""

This reverts commit 4d4c2cdba92e979ccc382d64451f840355b65012.
"
2c0b89ceea1b1d100e9c4f958a8000f0f60281ff,apple/swift,"Recognize -> Self? as an optional dynamic-self return,
and correctly handle Self? downstream in a number of
places.

Swift SVN r15572
"
8b561ade538b854054ce1b02489e288d7b8ebf84,apple/swift,"Merge pull request #18750 from rjmccall/misc-cleanups-for-coroutines

"
d5ae69b27638a848aa31c879fe1a67863e4e126a,apple/swift,"fix <rdar://problem/18213320> enum with raw values that are too big are not diagnosed

On that testcase, we now generate:

t.swift:8:22: error: integer literal '123456' overflows when stored into 'UInt8'
  case tooFarByFar = 123456
                     ^
t.swift:7:8: error: integer literal '256' overflows when stored into 'UInt8'
  case twoHundredFiftySix
       ^

instead of spitting out some warnings with no source loc (which Xcode eats).


This patch:
 - Propagates source locations for literals when synthesizing code in various places,
   so we get the right diagnostic at the right spot.
 - Improves the constant folding SIL Pass to print the value overflowing, which is
   necessary for cases with an implicit value (like 256 above), and is general goodness
   for the QoI of the diagnostic anyway.



Swift SVN r27756
"
eb898b29cf5e2d77d5082c8b4fe35b35fa469a55,apple/swift,"Merge pull request #7718 from DougGregor/make-all-dependent-types-truth

"
2c08429e27c4005445a0f17941a4e0a16d6fbb57,apple/swift,"split up typeCheckTopLevelInputsExcludingMain

because the old name and code were just confusing to me

# Conflicts:
#	lib/Frontend/Frontend.cpp
"
ab3f77baf251f8050b148df21264316b18eea0b3,apple/swift,"Make SILInstruction no longer a subclass of ValueBase and
introduce a common superclass, SILNode.

This is in preparation for allowing instructions to have multiple
results.  It is also a somewhat more elegant representation for
instructions that have zero results.  Instructions that are known
to have exactly one result inherit from a class, SingleValueInstruction,
that subclasses both ValueBase and SILInstruction.  Some care must be
taken when working with SILNode pointers and testing for equality;
please see the comment on SILNode for more information.

A number of SIL passes needed to be updated in order to handle this
new distinction between SIL values and SIL instructions.

Note that the SIL parser is now stricter about not trying to assign
a result value from an instruction (like 'return' or 'strong_retain')
that does not produce any.
"
c58aafdce5e330fa0b49067eaa4c16a49bf6c245,apple/swift,"[Constraint solver] Unify the two typeVarOccursInType implementations.

NFC, thanks @CodaFi!
"
19fe31fde9e368c603db2273b75b57a1ccbc1e52,apple/swift,"IRGen: Emit and use accessors for generic type metadata

Instead of directly emitting calls to swift_getGenericMetadata*() and
referencing metadata templates, call a metadata accessor function
corresponding to the UnboundGenericType of the NominalTypeDecl.

The body of this accessor forwards arguments to a runtime metadata
instantiation function, together with the template.

Also, move some code around, so that metadata accesses which are
only done as part of the body of a metadata accessor function are
handled separately in emitTypeMetadataAccessFunction().

Apart from protocol conformances, this means metadata templates are
no longer referenced from outside the module where they were defined.
"
0d6d9a0ffb938e52c0ea414c808bebd4b49c387b,apple/swift,"Move the DeclContext base class from FuncExpr to FuncDecl

FuncDecl still has a FuncExpr because capture list is stored in FuncExpr
(which is a CapturingExpr).


Swift SVN r8179
"
f9c52b120530699856ac03999cc3aff3c857dcde,apple/swift,"Merge pull request #7294 from slavapestov/more-subst-map-impl-hiding

Better encapsulation of SubstitutionMap internals"
1d20fe2bef80f212b44e52fc99e5d937fd0eac53,apple/swift,"Refactor out apply related combines from SILCombinerVisitors.cpp => SILCombinerApplyVisitors.cpp.

This includes code related to optimizing partial_apply, apply, and try_apply.

Original SILCombinerVisitors was relatively large with ~3300 lines of code. This
is a part of a series of commits that slims down the file. This commit reduces
SILCombinerVisitors to ~1050 lines of code, a 70% reduction.

Now the code remaining in SILCombinerVisitors only deals with some miscellaneous
canonicalizations related to:

1. Loads.
2. Ref Counting instructions.
3. Existential Initializations.
4. Projections/Aggregates.
5. Control Flow Canonicalizations.

I am going to rename SILCombinerVisitors.cpp to SILCombinerMiscVisitors.cpp. If
it gets too big, we can split it again.

Swift SVN r32327
"
3b202c18d8cbb88b4135375eb0b4dbf8fd3f0b83,apple/swift,"Use 'hasAssociatedValues'

Use 'hasAssociatedValues' instead of computing and discarding the
interface type of an enum element decl.  This change has specifically not
been made in conditions that use the presence or absence of the
interface type, only conditions that depend on the presence or absence
of associated values in the enum element decl.
"
49741cfdd9fbb741a93fbe26ec9b03d4cbac71d4,apple/swift,"[stdlib] Rewrite UTF8 decoding
"
ae86d64644692eaa753a321b42ac13c056f5dfe5,apple/swift,"Rename Decl::getLocStart() to Decl::getStartLoc().  Add Decl::getLoc(), which is essentially the location which should be used for diagnostics.



Swift SVN r2105
"
0c74e485a3890d4f7570bdabd95af6f53aa63eea,apple/swift,"Merge pull request #12107 from apple/revert-12097-gsb-nested-type-lookup

Revert ""[GSB] Centralize, clean up, and cache nested type name lookup"""
18b6f5e9e32819e3f3f1ba51840126e335a9c31b,apple/swift,"stdlib: simplify the '+=' singature for arrays
"
87aaf10e6bfad52a14117b75293533bd39c40f70,apple/swift,"[Diagnostics] Improve error when type parameters aren't equal
"
668f38732de1d10ef9adb8f7f4076bf10ede1900,apple/swift,"SIL.rst: Cleanups.

Swift SVN r6562
"
8f6a58b99886637b02bc1fd2c6599f46ed80bb1e,apple/swift,"SIL: Split address-only enum dispatch from destructive projection.

Split 'destructive_switch_enum_addr' into separate 'switch_enum_addr' and 'take_enum_data_addr' instructions. This should unblock some optimization work we would like to do with enums.

Swift SVN r12015
"
a7012f23efda8cfc70b075cfdd01e98541808362,apple/swift,"Remove swift::ArrayType.  It is dead and vestigial code for supporting fixed size
arrays, which never got baked.  Remove it until we have time to do things right.


Swift SVN r16995
"
fe37b82a0b0e312bf82a61deed9813157bf48d4d,apple/swift,"IRGen: Rename TypeInfo::initializeValueWitnessTable to initializeMetadata.

Its job will be a bit more broad for generic structs, where it needs to fill field offsets into the metadata in addition to storing the final size, stride, and alignment information to the value witness table.

Swift SVN r9104
"
2415cd90289de60bc6ff41db0d209d1c86fc5c91,apple/swift,"Code completion: rename a variable for consistency with AST node name


Swift SVN r9425
"
caeca69466d02740d23145180b92629e7871f2ad,apple/swift,"fix <rdar://problem/19086357> SILGen crashes reabstracting default argument closure in members

When emitting default arguments for a parameter, emitApplyOfDefaultArgGenerator
was trying to reconstruct the original type by looking at the decl that it came
from.  However, it doesn't know the number of curry levels already applied, so it
was wrong in the case of default arguments on methods and initializers (which already
have self applied).

Fix this by having the caller pass this information in, since it knows the original
type.

While we're at it, remove the code for handling default arguments from the general 
SILGenExpr logic.  Default arguments in tuples are no longer a general thing, they 
are only valid in argument lists.



Swift SVN r27800
"
398f20c50664d76a4fded3692da6ed1f7fcff71f,apple/swift,"[+0-all-args] Add SILGenBuilder APIs for createRefToBridgeObject and use it in emitBuiltinCastToBridgeObject to ensure cleanups are on the actual bridge object.

This eliminates a case where we were not moving a cleanup onto a forwarding case
and instead just jammed the original cleanup and the new value into 1 managed
value.

NFC, but helps the ownership verifier.

rdar://34222540
"
8c478d1cb760b1fa0db26bfac793a8cb06203786,apple/swift,"remove the foreach keyword, switching foreach loops to use 'for' instead. 
This uses one-token lookahead to distinguish between the two forms.


Swift SVN r1710
"
e5068920bb753679c56f115ff8dba1051fc322da,apple/swift,"SILGen: Handle ObjC ownership conventions of calls

Port IRGen's calculation of consumed arguments and return value semantics to SILGen, and use it to handle the ownership semantics of calls. Refactor the handling of properties and other clients of emitApply so they can properly hand ownership semantics down to it.

This should let all the moribund cleanup management code in IRGen die. Unfortunately Scope appears to be tied into scoped calculated metadata caching so it's not quite ready to die.

Swift SVN r4834
"
672ae3fcbddda4025c52dc3638fe5fa2e2561e91,atom/github,"Clean up status bar consumption
"
02b77450f7e1fd5ac112f3656d420fc681bc2b22,atom/github,"Clean up code
"
448222fdae43ca4ec7ec6bb2bcf12b66b0fdca36,atom/github,"Refactor git and github tab tracking behavior into a utility class
"
f20a012d0e154266ee33ea57407a2fad22f03c27,bokeh/bokeh,"Merge pull request #1870 from bokeh/task/rename_builders_methods

rename get_data, get_source, prepare_values, draw builders methods"
68524f97a000e0c0f1996092ffa23427126ea3ff,bokeh/bokeh,"Update directory.py

remove unnecessary line setting `self._static = None` (set in parent class now)"
a14914dda42f7e6727a42543ae47eae58cf19f1f,bokeh/bokeh,"Initial split of bokeh.js into bokeh.js and bokeh-widgets.js
"
afaa5b25113a878b27cb296e4640ee8e3bf1c083,bokeh/bokeh,"Rename SessionContext.add_callback to add_next_tick_callback

For consistency with our other uses.
"
00f8c57fb2008a300f40770cec96a0647dc6d0d2,bokeh/bokeh,"Merge pull request #1083 from ContinuumIO/task/cleanup2

Task/cleanup2"
d4b34e259e04858893f7b89cd9fe0e5d234f88cc,bokeh/bokeh,"Move to head/tail_style enum
"
abc0d229e0df4be052a4e5ece2fa6d38e9a7d1aa,bokeh/bokeh,"Some basic client-server talk working with new server

 * split up ClientSession into ClientConnection and ClientSession
 * split up ServerSession into ServerConnection and ServerSession
 * change ClientConnection to implicitly run main loop when
   required (so the public API blocks until desired state is reached)
 * drop ServerDocument
 * make ServerSession contain only a single document
 * make only some messages have a session ID; multiple sessions
   can now be used with a single websocket connection, so only
   messages that relate to a session have the session id
 * delete server.storage that isn't used at least for now
 * track sessions by name in BokehTornado

Play with this by running bokeh.client.test_main() if desired.

Next steps include actually hooking up the Document in each
session to send changes and pull/push.
"
a695c67e5f64042435aa484eb8a6e1d6602d1a5d,bokeh/bokeh,"Use computed_renderers instead of renderers in selection tools
"
56221c56142689c4490f32f92f1e422c1e0483ac,bokeh/bokeh,"Merge pull request #1810 from bokeh/bugfix/curplot

Removing curplot leftovers and make show ask for an object."
ea45bd2c937715a7c394224e40d48609bd7328ce,bokeh/bokeh,"Re-implement embed.components() for Tornado, fix up test_embed.py

Also delete plot_js.html which was unused.
"
c0a7eb46d5fc8bb38b6c74e6bdaca1af35b1322c,bokeh/bokeh,"Merge pull request #3712 from bokeh/mattpap/use_make_id

Use make_id() instead of str(uuid.uuid4())"
1d5d78a5ddfab274593a803c839201bd0cf72d95,bokeh/bokeh,"Rename bk- prefix to bk-bs- when referring to Bootstrap's classes
"
5283cf2fd5d6a6e7f1df893f5b26054cfb1b56fa,bokeh/bokeh,"simplify and mix examples input
"
f3f845254112463640b4e9d31a77e36c398eebce,bokeh/bokeh,"Refactor to watch coffee dir and watch LESS not CSS
"
663aa21b68d8f052dac8b9e1d9345e65fb2196af,bokeh/bokeh,"Cleanup defaults and display_defaults
"
dd04e5dd1e3b1c74d644a0c3a02c1e10d55105cd,bokeh/bokeh,"improve make_glyph_plot to take options dict as last arg, fix up all tests and demos to use, also add nicer plot titls to demos
"
8e85aa47aa5e2045d42c3db18274f2a07092d4f7,bvcms/bvcms,"--allow iPhone to allow OrgLeaders in Parent Org to checkin
--Volunteer Management, confirmation, instructions
--check for no data on pdf reports, display message
--Work on Building Checkin, guest of feature
--Rewrite Sage Payments to use POST instead of WebServices
"
62da0da84aa2a94393bc00f6b40e8d41ec3f99af,bvcms/bvcms,"-- ALPHA VERSION: Needs DBML and to include new files --
Additional updates and clean-up
"
123ecbaee5660ada91585fa453bdac1ffd95bb08,bvcms/bvcms,"Fix Contribution Search and Totals By fund to consolidate results and option to group by Fund and BundleType
"
790dda9dded33d4f8492def40ca263123ae3799c,bvcms/bvcms,"-major email people rewrite (internal), supports threads, scheduling
-Removed Db support on HttpContext (big deal)
-Refactoring, remove old, unused code
"
148f3bbabb9d93f63e9fc85838dbcb39a973a2bc,bvcms/bvcms,"1) Major rewrite of RecReg and Recreation management
"
49d10ee25bdbba5a40eaa4b0032bbc783bb80f13,bvcms/bvcms,"1) fix bug when adding new user
2) PeopleExtra table for converted data having no place to go
3) Fix MovePersonStuff when in smallgroup
4) QB new functions (MeetingId, PeopleExtra info)
5) VolInterest reworked
6) Major Reorganization of MVC files (supports MVC2 RC)
7) New email technique to make Return-path a bellevue.org address
8) Able to email from Volunteers/Calendar
"
93e568305f1aa4d93ad0d9f6ddb261434861284d,bvcms/bvcms,"--onlinereg allow for partial coupons on balance due payments
--large rewrite of how transactions are posted
--Work on Building Checkin
--misc bug fixes
"
dd8bdf0e6b708047ef8bc3e19b39ac458db87eb2,dials/dials,"Added an index generator based on Graeme's python code that mirrors the interface to cctbx.miller.index_generator.
Also added helper class to calculate all rotation angles within a given range.

"
d40c8a53f2400e90cd31e83631b8eeab0b0a5fa0,ello/webapp,"Rework NotificationParser to handle all things
"
d0c2932357f84b94dc80ecc2d56af6f238f538fc,ello/webapp,"Add an Emoji asset with some simple defaults

Wired up existing assets that are living in the static directory.
This should eventually use the path to the CDN of emoji assets instead."
c8e048cf0eaf81bdba01b5e87d60c49ed9abd7c0,ello/webapp,"Simplify webpack from a community boilerplate

https://github.com/gaearon/react-transform-boilerplate"
519eaa0f08d22029886bff016c0e7734fc63624f,ello/webapp,"Convert the flag modal over for the WebApp

- [x] Add the choices screen
- [x] Clicking on a choice reveals a submit button within it’s cell
- [x] Once the choice is made, reveal the confirmation screen
- [x] Hook the response value back to a connected component so we can
eventually send off to the API"
b36f9fb3163188230198222a69098fafacb1e3ab,ello/webapp,Renames and moves Beacon into ZeroStream
975e2aea0f9b3c3ceea09a7a6b92f0a00ce0d32f,ello/webapp,"refactored 'sessionStorage' into Session class, so that components using sessionStorage can be tested

- adds specs for sessh / Session object
- adds specs for Notifications container, make sure it sets session keys
"
0caf972a26e3b2f2a33f5c5af4346267d8f02850,ello/webapp,"Teach webapp to use hosted promo data (#732)

* Wire up stuff to get remote promos

* Refactor, add auth promo fetch

Also teach SignIn to find promos in store

* Teach discover routes to fetch promos

Also teach DiscoverContainer to find promos in the store

* Drop unused imports

* Be more dynamic

* Add hack to set up store for SignIn

* Appease linter

* Handle remote CTA

* Need to wrap here now

* Drop data subdir

* Add promo endpoints to config

* Make sure sagas are running before router starts

This means onEnter hooks can make stuff happen

* Work with prerendered async routes

* Tell routes to finish transition on failure

* Teach components to deal with no promos

* Restore thing lost in rebase

* Use idioms
"
8c5b8f79e216da0edcfd1bcee8dafb728c4e6ffe,ello/webapp,"Renames StreamComponent to StreamContainer.
"
cad1b12e8b5d7877663f21de33453779f3292fa0,ello/webapp,"Adds search view with input and post/user toggle.

* Remove unnecessary sass files
* All API endpoints are now methods returning an object
* Adds active state to Button
* Makes action optional in stream component
* Removes eslint skip on stream component
* Promotes stream component padding
* Adds the `/search` route with actions
* Fixes/updates tests

[Finishes #106054126]"
5cf313d9fa25a0c8fda17456e38765856db23e39,ello/webapp,"Move meta tags management out to a container

Even though this sort of goes against what Helmet recommends, it's
easier and a little more performant with the use of selectors to manage
the generation of the tags. We tend to have to do a lot more client side
gathering of the tags (truncating text, combining images, etc) than we'd
like. Having them live in the container allows us to control how much
they're getting generated on re-renders and keeps them in one place.

Other things that happened here:

1. Added a bunch of selectors to cache the lookups
2. Moved some default tags that never change out to the html templates
3. Moved some string constants to locales/en.js file (more to here)
4. Cleaned up some of the parent containers and `params` properties
5. Added stubs for image and embed blocks
6. Added unit tests around the new selectors
7. Random cleanup
8. Removed the old helmet components
"
59742960533ad02dac41aa4f59c8c82cebaf9fb7,erxes/erxes,"Refactored customerform
"
b691b7b5639209622627821e1c5879555928117d,erxes/erxes,"Move queries to graphql folder
"
82d0a6b1dd862c2f41b900b8b8a6488b58282cb8,erxes/erxes,"Refactor
"
b96dcf0067e2c52261dfcdad4cd5facf8e0652a3,erxes/erxes,"Merge branch 'refactor' into develop
"
b9f192e5635e009d1daf020b5d455e9b6f7ad7fb,erxes/erxes,"Merge branch 'feature-refactor-ui' into develop
"
2e52a1fdeef8f8e3fb452a20f800292e82470f3a,erxes/erxes,"Merge branch 'refactor' into develop
"
c3374197d18bf080530548116f32d883da5693c8,flarum/core,"Added zend-stragility (missing), removed some redundant code.
"
5ce4e0b5cb23819a893cc014a0072626ebfe6bb5,imma/ubuntu,"split out yarn from node block, fogg displays lifecycle, health status
"
01f8bd277ac06815c44d74f46298d52fae43d019,imma/ubuntu,"simplifying local vagrant builds to just virtualbox
"
23a2d6a26b43d8a4ca05ef143d06658cc0e44a15,movim/movim,"- Finish Jabber cleaning
- Clean some commented code
- Port getMessage to the Post class
- CSS fix
"
e3d004e2baded1055c6ac5110ebbbba1bc3e56f8,movim/movim,"- Update some icons
- Add recycle + place in Post display
- Rewrite some responsive design CSS
"
1d7d96ff6a40fa7655983246af4324ae2c509bd2,movim/movim,"Improve the information displayed in the Rooms widget
"
dd4ded775da901395a4995d80cc2b65372b1d83b,movim/movim,"Fix a bug in RosterLinkDAO
Cleanup old code
"
57db05dbbf3a3ab2fefe704690a9b19e55ab338c,movim/movim,"- Move Contact (vCard) data to Modl
- Rewrite Picture generation system
"
6f51d33ebf419a2d8e92cfb8f3ff102e43e6a325,movim/movim,"Rename the table from Key to EncryptedPass to prevent issues with MySQL
"
9f0ae65d102202b5a044390de8496b5a9c1640df,movim/movim,"Revert ""Refactor Movim_tpl""

This reverts commit 2caba60bd6a85c3551dd9d19c4ddfc29c2baba8e.
"
cf3353f2fa03b05a29acc358e6dc62494f1b074e,movim/movim,"- Rename WidgetLoad() to load() in all the project
"
3aaee00c544fd1e720e593e345f598b3a011f3d9,movim/movim,"- Display number of elements in each groups of the roster
- Remove the session colunm in the Postn table to mutualize the posts in the database
- Rewrite all the related SQL requests 
- Fix some issues in the Postn related widgets
"
8e5746e8f7fdb2dea059992057c2944228071586,movim/movim,"Merge branch 'master' into cleanup
"
90d77ed8dfae7504c41710823fb9d69f610c58c5,nismod/smif,"Refactored controller into sos model builder and reader
"
30f7617269509b8188117d005edfa2026252f7c6,ntop/ntopng,"Fix for #66
Improvements for OS detection
"
d50a895f36c3cf7770d71e263b496795f8469567,ntop/ntopng,"Traffic recording gui improvements
"
8fc56f16083f8899dfc6d502738d034b63a58a93,ntop/ntopng,"Win fixes
Optimized geolocation memory
"
1854b884a2f33366173282be0c93d701b79b909d,ntop/ntopng,"Improved ICMP stats, added last peer, made them available interface wide
"
6f9a7d0238a4ffbc0e45215a68b8feefa9031380,ntop/ntopng,"Lua code cleanup
"
af4660e6424a6bea0ab04187a1fd2a18477183f3,ntop/ntopng,"Improve Facebook detection by using interflow metrics
"
58e48e452944937a7710970be71abe725cd03b70,ntop/ntopng,"Improved flow status detection
"
317c868760086479608828603046ae6472e678f9,ntop/ntopng,"Improved TV discovery
"
aa3fdab5e3d23224def11c772a1bd78350ae47aa,nunit/nunit,"Merge from trunk

--HG--
branch : runner
rename : src/interfaces/Framework/ITestCaseData.cs => src/framework/Shared/Framework/ITestCaseData.cs
rename : src/interfaces/Framework/MessageMatch.cs => src/framework/Shared/Framework/MessageMatch.cs
extra : convert_revision : charlie%40nunit.com-20091017171652-g6htewysijwc5adf
"
d4ce9c516e1b3bc44f4a1205cfa55664d6287bcf,nunit/nunit,"Bug fix 440109

--HG--
rename : src/framework/NUnitLite/Framework/Contains.cs => src/framework/Shared/Framework/Contains.cs
extra : convert_revision : charlie%40nunit.com-20091011203901-i24enzrw4gs4780u
"
7bc4356b77a496020ba960b482457aab1de2249b,nunit/nunit,"Merge trunk

--HG--
branch : code-gen
rename : src/framework/Assume.cs => src/framework/NUnit/Framework/Assume.cs
rename : src/framework/CategoryAttribute.cs => src/framework/NUnit/Framework/CategoryAttribute.cs
rename : src/framework/CollectionAssert.cs => src/framework/NUnit/Framework/CollectionAssert.cs
rename : src/framework/Constraints/DelayedConstraint.cs => src/framework/NUnit/Framework/Constraints/DelayedConstraint.cs
rename : src/framework/Constraints/DirectoryConstraints.cs => src/framework/NUnit/Framework/Constraints/DirectoryConstraints.cs
rename : src/framework/Constraints/PredicateConstraint.cs => src/framework/NUnit/Framework/Constraints/PredicateConstraint.cs
rename : src/framework/DatapointAttributes.cs => src/framework/NUnit/Framework/DatapointAttributes.cs
rename : src/framework/DirectoryAssert.cs => src/framework/NUnit/Framework/DirectoryAssert.cs
rename : src/framework/ExplicitAttribute.cs => src/framework/NUnit/Framework/ExplicitAttribute.cs
rename : src/framework/FileAssert.cs => src/framework/NUnit/Framework/FileAssert.cs
rename : src/framework/IgnoreException.cs => src/framework/NUnit/Framework/IgnoreException.cs
rename : src/framework/IncludeExcludeAttributes.cs => src/framework/NUnit/Framework/IncludeExcludeAttributes.cs
rename : src/framework/InconclusiveException.cs => src/framework/NUnit/Framework/InconclusiveException.cs
rename : src/framework/Iz.cs => src/framework/NUnit/Framework/Iz.cs
rename : src/framework/JoinTypeAttributes.cs => src/framework/NUnit/Framework/JoinTypeAttributes.cs
rename : src/framework/List.cs => src/framework/NUnit/Framework/List.cs
rename : src/framework/MaxTimeAttribute.cs => src/framework/NUnit/Framework/MaxTimeAttribute.cs
rename : src/framework/RandomAttribute.cs => src/framework/NUnit/Framework/RandomAttribute.cs
rename : src/framework/Randomizer.cs => src/framework/NUnit/Framework/Randomizer.cs
rename : src/framework/RangeAttribute.cs => src/framework/NUnit/Framework/RangeAttribute.cs
rename : src/framework/RepeatAttribute.cs => src/framework/NUnit/Framework/RepeatAttribute.cs
rename : src/framework/RequiredAddinAttribute.cs => src/framework/NUnit/Framework/RequiredAddinAttribute.cs
rename : src/framework/SetCultureAttribute.cs => src/framework/NUnit/Framework/SetCultureAttribute.cs
rename : src/framework/SetUICultureAttribute.cs => src/framework/NUnit/Framework/SetUICultureAttribute.cs
rename : src/framework/SetUpFixtureAttribute.cs => src/framework/NUnit/Framework/SetUpFixtureAttribute.cs
rename : src/framework/StringAssert.cs => src/framework/NUnit/Framework/StringAssert.cs
rename : src/framework/SuccessException.cs => src/framework/NUnit/Framework/SuccessException.cs
rename : src/framework/SuiteAttribute.cs => src/framework/NUnit/Framework/SuiteAttribute.cs
rename : src/framework/TestFixtureSetUpAttribute.cs => src/framework/NUnit/Framework/TestFixtureSetUpAttribute.cs
rename : src/framework/TestFixtureTearDownAttribute.cs => src/framework/NUnit/Framework/TestFixtureTearDownAttribute.cs
rename : src/framework/Text.cs => src/framework/NUnit/Framework/Text.cs
rename : src/framework/TheoryAttribute.cs => src/framework/NUnit/Framework/TheoryAttribute.cs
rename : src/framework/ThreadingAttributes.cs => src/framework/NUnit/Framework/ThreadingAttributes.cs
rename : src/framework/ValueSourceAttribute.cs => src/framework/NUnit/Framework/ValueSourceAttribute.cs
rename : src/framework/ValuesAttribute.cs => src/framework/NUnit/Framework/ValuesAttribute.cs
rename : src/framework/Assert.cs => src/framework/Shared/Framework/Assert.cs
rename : src/framework/AssertionException.cs => src/framework/Shared/Framework/AssertionException.cs
rename : src/framework/AssertionHelper.cs => src/framework/Shared/Framework/AssertionHelper.cs
rename : src/framework/Constraints/AttributeConstraints.cs => src/framework/Shared/Framework/Constraints/AttributeConstraints.cs
rename : src/framework/Constraints/BasicConstraints.cs => src/framework/Shared/Framework/Constraints/BasicConstraints.cs
rename : src/framework/Constraints/BinaryOperations.cs => src/framework/Shared/Framework/Constraints/BinaryOperations.cs
rename : src/framework/Constraints/CollectionConstraints.cs => src/framework/Shared/Framework/Constraints/CollectionConstraints.cs
rename : src/framework/Constraints/ComparisonAdapter.cs => src/framework/Shared/Framework/Constraints/ComparisonAdapter.cs
rename : src/framework/Constraints/ComparisonConstraints.cs => src/framework/Shared/Framework/Constraints/ComparisonConstraints.cs
rename : src/framework/Constraints/Constraint.cs => src/framework/Shared/Framework/Constraints/Constraint.cs
rename : src/framework/Constraints/ConstraintBuilder.cs => src/framework/Shared/Framework/Constraints/ConstraintBuilder.cs
rename : src/framework/Constraints/ConstraintExpression.cs => src/framework/Shared/Framework/Constraints/ConstraintExpression.cs
rename : src/framework/Constraints/ConstraintExpressionBase.cs => src/framework/Shared/Framework/Constraints/ConstraintExpressionBase.cs
rename : src/framework/Constraints/ConstraintFactory.cs => src/framework/Shared/Framework/Constraints/ConstraintFactory.cs
rename : src/framework/Constraints/ConstraintOperators.cs => src/framework/Shared/Framework/Constraints/ConstraintOperators.cs
rename : src/framework/Constraints/ContainsConstraint.cs => src/framework/Shared/Framework/Constraints/ContainsConstraint.cs
rename : src/framework/Constraints/EmptyConstraint.cs => src/framework/Shared/Framework/Constraints/EmptyConstraint.cs
rename : src/framework/Constraints/EqualConstraint.cs => src/framework/Shared/Framework/Constraints/EqualConstraint.cs
rename : src/framework/Constraints/EqualityAdapter.cs => src/framework/Shared/Framework/Constraints/EqualityAdapter.cs
rename : src/framework/Constraints/FloatingPointNumerics.cs => src/framework/Shared/Framework/Constraints/FloatingPointNumerics.cs
rename : src/framework/Constraints/IResolveConstraint.cs => src/framework/Shared/Framework/Constraints/IResolveConstraint.cs
rename : src/framework/Constraints/MessageWriter.cs => src/framework/Shared/Framework/Constraints/MessageWriter.cs
rename : src/framework/Constraints/MsgUtils.cs => src/framework/Shared/Framework/Constraints/MsgUtils.cs
rename : src/framework/Constraints/NUnitComparer.cs => src/framework/Shared/Framework/Constraints/NUnitComparer.cs
rename : src/framework/Constraints/NUnitEqualityComparer.cs => src/framework/Shared/Framework/Constraints/NUnitEqualityComparer.cs
rename : src/framework/Constraints/Numerics.cs => src/framework/Shared/Framework/Constraints/Numerics.cs
rename : src/framework/Constraints/PathConstraints.cs => src/framework/Shared/Framework/Constraints/PathConstraints.cs
rename : src/framework/Constraints/PrefixConstraints.cs => src/framework/Shared/Framework/Constraints/PrefixConstraints.cs
rename : src/framework/Constraints/PropertyConstraint.cs => src/framework/Shared/Framework/Constraints/PropertyConstraint.cs
rename : src/framework/Constraints/RangeConstraint.cs => src/framework/Shared/Framework/Constraints/RangeConstraint.cs
rename : src/framework/Constraints/ResolvableConstraintExpression.cs => src/framework/Shared/Framework/Constraints/ResolvableConstraintExpression.cs
rename : src/framework/Constraints/SameAsConstraint.cs => src/framework/Shared/Framework/Constraints/SameAsConstraint.cs
rename : src/framework/Constraints/StringConstraints.cs => src/framework/Shared/Framework/Constraints/StringConstraints.cs
rename : src/framework/Constraints/ThrowsConstraint.cs => src/framework/Shared/Framework/Constraints/ThrowsConstraint.cs
rename : src/framework/Constraints/Tolerance.cs => src/framework/Shared/Framework/Constraints/Tolerance.cs
rename : src/framework/Constraints/TypeConstraints.cs => src/framework/Shared/Framework/Constraints/TypeConstraints.cs
rename : src/framework/DescriptionAttribute.cs => src/framework/Shared/Framework/DescriptionAttribute.cs
rename : src/framework/ExpectedExceptionAttribute.cs => src/framework/Shared/Framework/ExpectedExceptionAttribute.cs
rename : src/framework/GlobalSettings.cs => src/framework/Shared/Framework/GlobalSettings.cs
rename : src/framework/Has.cs => src/framework/Shared/Framework/Has.cs
rename : src/framework/IExpectException.cs => src/framework/Shared/Framework/IExpectException.cs
rename : src/framework/IgnoreAttribute.cs => src/framework/Shared/Framework/IgnoreAttribute.cs
rename : src/framework/Is.cs => src/framework/Shared/Framework/Is.cs
rename : src/framework/ListMapper.cs => src/framework/Shared/Framework/ListMapper.cs
rename : src/framework/PropertyAttribute.cs => src/framework/Shared/Framework/PropertyAttribute.cs
rename : src/framework/SetUpAttribute.cs => src/framework/Shared/Framework/SetUpAttribute.cs
rename : src/framework/SpecialValue.cs => src/framework/Shared/Framework/SpecialValue.cs
rename : src/framework/TearDownAttribute.cs => src/framework/Shared/Framework/TearDownAttribute.cs
rename : src/framework/TestAttribute.cs => src/framework/Shared/Framework/TestAttribute.cs
rename : src/framework/TestCaseAttribute.cs => src/framework/Shared/Framework/TestCaseAttribute.cs
rename : src/framework/TestCaseData.cs => src/framework/Shared/Framework/TestCaseData.cs
rename : src/framework/TestCaseSourceAttribute.cs => src/framework/Shared/Framework/TestCaseSourceAttribute.cs
rename : src/framework/TestFixtureAttribute.cs => src/framework/Shared/Framework/TestFixtureAttribute.cs
rename : src/framework/TextMessageWriter.cs => src/framework/Shared/Framework/TextMessageWriter.cs
rename : src/framework/Throws.cs => src/framework/Shared/Framework/Throws.cs
rename : src/tests/AssertThrowsTests.cs => src/tests/NUnit/Framework/AssertThrowsTests.cs
rename : src/tests/AssumeThatTests.cs => src/tests/NUnit/Framework/AssumeThatTests.cs
rename : src/tests/CollectionAssertTest.cs => src/tests/NUnit/Framework/CollectionAssertTest.cs
rename : src/tests/ConditionAssertTests.cs => src/tests/NUnit/Framework/ConditionAssertTests.cs
rename : src/tests/Constraints/AfterConstraintTests.cs => src/tests/NUnit/Framework/Constraints/AfterConstraintTests.cs
rename : src/tests/DirectoryAssertTests.cs => src/tests/NUnit/Framework/DirectoryAssertTests.cs
rename : src/tests/EqualsFixture.cs => src/tests/NUnit/Framework/EqualsFixture.cs
rename : src/tests/FileAssertTests.cs => src/tests/NUnit/Framework/FileAssertTests.cs
rename : src/tests/GreaterEqualFixture.cs => src/tests/NUnit/Framework/GreaterEqualFixture.cs
rename : src/tests/GreaterFixture.cs => src/tests/NUnit/Framework/GreaterFixture.cs
rename : src/tests/LessEqualFixture.cs => src/tests/NUnit/Framework/LessEqualFixture.cs
rename : src/tests/LessFixture.cs => src/tests/NUnit/Framework/LessFixture.cs
rename : src/tests/ListContentsTests.cs => src/tests/NUnit/Framework/ListContentsTests.cs
rename : src/tests/NotEqualFixture.cs => src/tests/NUnit/Framework/NotEqualFixture.cs
rename : src/tests/NotSameFixture.cs => src/tests/NUnit/Framework/NotSameFixture.cs
rename : src/tests/NullableTypesTests.cs => src/tests/NUnit/Framework/NullableTypesTests.cs
rename : src/tests/RandomizerTests.cs => src/tests/NUnit/Framework/RandomizerTests.cs
rename : src/tests/RangeTests.cs => src/tests/NUnit/Framework/RangeTests.cs
rename : src/tests/SameFixture.cs => src/tests/NUnit/Framework/SameFixture.cs
rename : src/tests/StringAssertTests.cs => src/tests/NUnit/Framework/StringAssertTests.cs
rename : src/tests/Syntax/AfterTests.cs => src/tests/NUnit/Framework/Syntax/AfterTests.cs
rename : src/tests/Syntax/ArbitraryConstraintMatching.cs => src/tests/NUnit/Framework/Syntax/ArbitraryConstraintMatching.cs
rename : src/tests/Syntax/InvalidCodeTests.cs => src/tests/NUnit/Framework/Syntax/InvalidCodeTests.cs
rename : src/tests/Syntax/TestCompiler.cs => src/tests/NUnit/Framework/Syntax/TestCompiler.cs
rename : src/tests/TypeAssertTest.cs => src/tests/NUnit/Framework/TypeAssertTest.cs
rename : src/tests/ValuesAttributeTests.cs => src/tests/NUnit/Framework/ValuesAttributeTests.cs
rename : src/tests/ArrayEqualsFailureMessageFixture.cs => src/tests/Shared/Framework/ArrayEqualsFailureMessageFixture.cs
rename : src/tests/ArrayEqualsFixture.cs => src/tests/Shared/Framework/ArrayEqualsFixture.cs
rename : src/tests/ArrayNotEqualFixture.cs => src/tests/Shared/Framework/ArrayNotEqualFixture.cs
rename : src/tests/CollectionAdapter.cs => src/tests/Shared/Framework/CollectionAdapter.cs
rename : src/tests/Constraints/AndTest.cs => src/tests/Shared/Framework/Constraints/AndTest.cs
rename : src/tests/Constraints/BasicConstraintTests.cs => src/tests/Shared/Framework/Constraints/BasicConstraintTests.cs
rename : src/tests/Constraints/CollectionConstraintTests.cs => src/tests/Shared/Framework/Constraints/CollectionConstraintTests.cs
rename : src/tests/Constraints/ComparerTests.cs => src/tests/Shared/Framework/Constraints/ComparerTests.cs
rename : src/tests/Constraints/ComparisonConstraintTests.cs => src/tests/Shared/Framework/Constraints/ComparisonConstraintTests.cs
rename : src/tests/Constraints/ConstraintTestBase.cs => src/tests/Shared/Framework/Constraints/ConstraintTestBase.cs
rename : src/tests/Constraints/EmptyConstraintTest.cs => src/tests/Shared/Framework/Constraints/EmptyConstraintTest.cs
rename : src/tests/Constraints/EqualTest.cs => src/tests/Shared/Framework/Constraints/EqualTest.cs
rename : src/tests/Constraints/FloatingPointNumericsTest.cs => src/tests/Shared/Framework/Constraints/FloatingPointNumericsTest.cs
rename : src/tests/Constraints/MsgUtilTests.cs => src/tests/Shared/Framework/Constraints/MsgUtilTests.cs
rename : src/tests/Constraints/NotTest.cs => src/tests/Shared/Framework/Constraints/NotTest.cs
rename : src/tests/Constraints/NumericsTest.cs => src/tests/Shared/Framework/Constraints/NumericsTest.cs
rename : src/tests/Constraints/OrTest.cs => src/tests/Shared/Framework/Constraints/OrTest.cs
rename : src/tests/Constraints/PathConstraintTests.cs => src/tests/Shared/Framework/Constraints/PathConstraintTests.cs
rename : src/tests/Constraints/PropertyTests.cs => src/tests/Shared/Framework/Constraints/PropertyTests.cs
rename : src/tests/Constraints/SameAsTest.cs => src/tests/Shared/Framework/Constraints/SameAsTest.cs
rename : src/tests/Constraints/StringConstraintTests.cs => src/tests/Shared/Framework/Constraints/StringConstraintTests.cs
rename : src/tests/Constraints/ThrowsConstraintTests.cs => src/tests/Shared/Framework/Constraints/ThrowsConstraintTests.cs
rename : src/tests/Constraints/TypeConstraintTests.cs => src/tests/Shared/Framework/Constraints/TypeConstraintTests.cs
rename : src/tests/MessageChecker.cs => src/tests/Shared/Framework/MessageChecker.cs
rename : src/tests/Syntax/CollectionTests.cs => src/tests/Shared/Framework/Syntax/CollectionTests.cs
rename : src/tests/Syntax/ComparisonTests.cs => src/tests/Shared/Framework/Syntax/ComparisonTests.cs
rename : src/tests/Syntax/EqualityTests.cs => src/tests/Shared/Framework/Syntax/EqualityTests.cs
rename : src/tests/Syntax/OperatorOverrides.cs => src/tests/Shared/Framework/Syntax/OperatorOverrides.cs
rename : src/tests/Syntax/OperatorTests.cs => src/tests/Shared/Framework/Syntax/OperatorTests.cs
rename : src/tests/Syntax/PathConstraintTests.cs => src/tests/Shared/Framework/Syntax/PathConstraintTests.cs
rename : src/tests/Syntax/PropertyTests.cs => src/tests/Shared/Framework/Syntax/PropertyTests.cs
rename : src/tests/Syntax/SerializableConstraints.cs => src/tests/Shared/Framework/Syntax/SerializableConstraints.cs
rename : src/tests/Syntax/SimpleConstraints.cs => src/tests/Shared/Framework/Syntax/SimpleConstraints.cs
rename : src/tests/Syntax/StringConstraints.cs => src/tests/Shared/Framework/Syntax/StringConstraints.cs
rename : src/tests/Syntax/SyntaxTest.cs => src/tests/Shared/Framework/Syntax/SyntaxTest.cs
rename : src/tests/Syntax/ThrowsTests.cs => src/tests/Shared/Framework/Syntax/ThrowsTests.cs
rename : src/tests/Syntax/TypeConstraints.cs => src/tests/Shared/Framework/Syntax/TypeConstraints.cs
rename : src/tests/TestDelegates.cs => src/tests/Shared/Framework/TestDelegates.cs
rename : src/tests/TestFixtureAttributeTests.cs => src/tests/Shared/Framework/TestFixtureAttributeTests.cs
rename : src/tests/TextMessageWriterTests.cs => src/tests/Shared/Framework/TextMessageWriterTests.cs
extra : convert_revision : charlie%40nunit.com-20090919171629-20264zawfab7rwpo
"
182ed8f72b5d5fd1853dd7d1a88a915794eb3c9b,oppia/oppia,"Move each skin to its own directory. Load only the HTML template, and let that template load everything else.
"
7a9db7305c095d45d68f66edb58fa3b9513428de,oppia/oppia,"Fix: #3465 - Updated and renamed to ClassifierDataModel (#3504)

* updated classifier_data_model

* nit feature added

* added docstring"
51ffcbf362c25bd58a358c0c85ffb66d8c050c1a,oppia/oppia,"Separating the state transition logic from the rest of the handler.
"
5e04f44f59645f53b9b395793e0196892304f410,oppia/oppia,"Add the current user as an attribute of each request handler. Simplify the logic for the gallery controller.
"
31613acbda06376af754cd035eedf62f5840cf66,oppia/oppia,"Refactor graphData out into a graphDataService.
"
c71382e7441058739ed56273d6f856de571237ee,oppia/oppia,"Clearing some unneeded methods and variables. Minor fixes to the widget repository.
"
b81a690b7e678ca1f00baa9245328607ec9a8d8d,oppia/oppia,"Commit 7. Guard against sending duplicate emails. #1416
Incorporated all feedback. _generate_hash and _check_duplicate are now class methods of SentEmailModel.
Modified the job to just put() for all. Rewrote tests to swap out _generate_hash function.
Changes made to make all changes compatible.
"
043a4e5c56c4d08b1bd5db9968648d8c0a103c3a,oppia/oppia,"Finish cleaning up obj_services.py.
"
1375a14d92b376d88d3dfab14ce1f3537ba38a75,oppia/oppia,"Tidy up loading dots indicator on the editor navbar during save and publish actions.
"
4c0a9dfa559c7a183eb26cb12aec437ab6122ac8,oppia/oppia,"Audio redesign (#4271)

* Dirty fix for broken navbar.

* Some changes. Not done.

* Still need to change settings dialog to dropdown.

* Add language dropdown to audio bar.

* Fix progress bar.

* Move styles into classes.

* Lint.

* Fix tests.

* Remove unused methods.

* Fix margins to account for new navigation; change images for audio toggle to CSS/HTML; suggested changes; minor bug.

* Suggested changes. Fix margin to show progress dots on desktop.
"
03f15720b4f4e88224541179d19f46c8ab2d0b2c,oppia/oppia,"Updated the URL interpolation service to sanitize parameters using
escape instead of the Oppia HTML sanitizer. Updated the collection data
service to return promise objects when fetching or loading a collection,
rather than requiring the caller to pass in callbacks. Added tests for
both the collection data and URL interpolation services.
"
87237672a49b5bbb79b3d4cf33ebca529ee30529,oppia/oppia,"Addressed all review comments, which included adding an animation to slide
the upcoming exploration tiles list in the collection learner view into and
out of view when it is expanded/collapsed. The end exploration was also
updated to display the title of the collection, if it's currently being
played within the context of a collection. The URL interpolation service's
policy on parameter values was tightened to instead enforce a whitelist of
acceptable characters.
"
90613a0e8d4295c276944e41c4a69918c5591810,oppia/oppia,"UI improvements and bug fixes to history diff-view
* Auto-update diff-view when selection is changed
* Make diff-view larger
* Auto scroll to diff-view on selection
* Remove 'revert' function in diff-view
* Fix bug in returning version number when there are more than 30 revisions
* Fix alignment of revision data
"
ab7d41b683b806147d0aec07cefb0b93fe104c49,oppia/oppia,"Fix #2925: Add ExplorationBackendApiService (#2999)

* Fixes #2925: Added apply_draft to _fetchCollection

* Fixes 2925: Added routes for Readonly and Editable Exploration Handlers

* Fixes 2925: Added constants for Angular access to Exploration data templates

* Fixes 2925: Added route for Editable Exploration Handler

* Fixes 2925: moved logic to appropriate services

* Fixes 2925: add BackendApiService

* Added Version and Apply Draft to ExplorationBackendApi

* Fixes #2925: Changed calls to use ExplorationBackendApiservice

* Fixes #2925: Added ReadOnlyExplorationBackendApi to exploration_player

* Fixes #2925: Removed logging

* Fixes #2925: Normalized naming to response

* Fixes #2925: Standardized naming to response

* Fixes #2925: Renamed reserved word for http delete method

* Fixes #2925: corrected indentation

* Fixes #2925: added delete exploration test

* Fix #2925: Correct Lint error

* Corrected approach to Readonly and Editable ExplorationBackendApiService

- Split services to read from reader.py for
ReadOnlyExplorationBackendApiService or editor.py for
EditableExplorationBackendApiService.
- Added additional template for ReadOnlyExplorationBackendApiService
- Addressed Review comments

* Cleanup Constants

* Refactored Readonly exploration Code to loadLatest and loadVersion

* Adapted HistoryServices to new ReadOnly methods and Minor Cleanup

* Changed v to version for url used by Reader.py

* Address review comments and add 2 methods to the editableExplorationBackendApiService

* Repointed historyServicesSpec from createhandler to explorehandler

* Fixed linter errors

* Fix #2925: Correct version retrieval in player services

* Fixes #2925: Corrected Statistics Merge

* Fix #2925: renamed applydraft for consistency

* Fixes #2925: Addressed review comments

* Fixes #2925: Corrected applyDraft Error

* Address review comments

* Corrected dependency issue
"
c7199dfd8762183c0308883222ce949d34253064,oppia/oppia,"Minor variable renaming and tidying up.
"
eddc8d54ed0c6c53e7ad207e109165663a837781,oppia/oppia,"Show better language descriptions in gallery and editor page. Update wording in editor page modals and move tooltips onto their corresponding action buttons.
"
125bc0eb3ce6029a5d4c187654e993d1414d0fe5,oppia/oppia,"Add Portuguese translations to feconf, sort the existing ones, and remove unused ones.
"
323f450c033cda435a543f8e7db329311db4928d,oppia/oppia,"Refactoring and adding validation to the Exploration model.
"
37a43ca249ffd2b60bf98f791995048ce0ec5269,oppia/oppia,"Fix part of #2863: Create front-end domain object for Interactions (#3049)

* Create Interaction front-end domain object.

* Cleanup

* fix front end tests

* remove console logs

* Lint

* Remove comment

* Remove console logs

* add interaction object dependency to player

* Convert backend state dicts to front end domain obejcts for computeGraphService

* Convert states to objects for history tab

* Convert state objects to backend dicts for YAML conversion in history tab

* Renaming in historyTab protractor test

* Add classifier_model_id to state domain object

* renaming

* rename rule_specs

* rename to confirmedUnclassifiedAnswers

* confirmedUnclassifiedAnswers rename in tests

* rename default_outcome and customization_args in interaction object to camelCase

* Missed renaming

* Remove console logs

* messed up merge

* Remove console logs

* Fixes

* Create StatesObjectFactory

* Fix new state template test
"
5182d7e10730158437e4e12183537cd28fbf3a04,oppia/oppia,"Merge pull request #1113 from oppia/test-naming

Make the naming of test scripts consistent."
177f62e8d9100952f29d972136fbc0d42cbca103,prmr/JetUML,#265 Code cleanup
e2cc825f8d632d0b2e384b1862ad9bee9be5fa3f,pubkey/rxdb,"REFACTOR(RxCollection) split from constructor to prepare()
"
8358d17e1a5dda340fac5b7af0a6057304b53575,qreal/qreal,"Fixed default square shape;
Added rename dialog title translit
"
88cc1cff634df4210a6c9378a9726e3edf7fb47d,qreal/qreal,"Small refactoring: something migrated into view/private
"
0218c87d412336219b7e782675b78df0bd990011,qreal/qreal,"Installer usage docs moved to top of the script;
Paths to Qt are needed to be specifier to bin/ folder;
Fixed some installer bugs under windows.
"
5052a65745489fa66784e161110db3e6a6f3a75c,qreal/qreal,"- saving and loading of device configuration to/from diagram
- some unfinished refactoring in models
"
3ba87c3e29a94daa5228f67c884a1a15bc598d85,qreal/qreal,"Some improvement for undo/redo;
Some critical bugfixes;
Added auto-explosing for hard explosions
"
e18a799f4a8a201b265456d876b4575ecffd0038,qreal/qreal,"Plugins interface extended with controller interface.
Controller rafactored to use modules concept instead of digrams.
"
46f3829a64cb660de0312b1c900ac87a6f550b1c,qreal/qreal,"cleanup: spaces => tabs, QList<Id> => IdList
"
7b2790872f8f026fe46f788f088feab9d68a895a,railt/railt,"Fix and improve dependencies
"
d9d46a8bbb1b30d322057bb513ea4317bda735d3,scala/scala,"Merge remote-tracking branches 'hubertp/topic/buildinfo', 'VladUreche/issue/5248' and 'VladUreche/issue/5054-usecase-cleanup2' into develop
"
fa24227b39a972462aaa1642353151bfe545dbc8,scala/scala,"Replace a list of booleans by a mutable BitSet.

The modified code saves, for each element of a list, a boolean state
variable that is modified before an operation and restored afterwards.
The code was using a `List.map`, which creates a linked list with the
same length as the input list, with as many Boolean objects.
We change the code to use a BitSet instead, which needs less memory.
"
69d8830083ad509acadcca3051b64154532bc145,scala/scala,"Removed unnecessary DebugSetting, folding the s...

Removed unnecessary DebugSetting, folding the small extra functionality
back into ChoiceSetting. No review.

"
e5da30b843fe8bfe1638e3e08cdeaa4b6ae2f2d1,scala/scala,"Backport of SI-6846.

Squashed commit of the following:

commit 55806cc0e6177820c12a35a18b4f2a12dc07bb39
Author: Paul Phillips <paulp@improving.org>
Date:   Wed Dec 19 07:32:19 2012 -0800

    SI-6846, regression in type constructor inference.

    In 658ba1b4e6 some inference was gained and some was lost.
    In this commit we regain what was lost and gain even more.
    Dealiasing and widening should be fully handled now, as
    illustrated by the test case.
    (cherry picked from commit dbebcd509e4013ce02655a2687b27d0967b3650e)

commit e6ef58447d0f4ef6de956fcc03ee283bb9028c02
Author: Paul Phillips <paulp@improving.org>
Date:   Fri Dec 21 15:11:29 2012 -0800

    Cleaning up type alias usage.

    I determined that many if not most of the calls to .normalize
    have no intent beyond dealiasing the type. In light of this I
    went call site to call site knocking on doors and asking why
    exactly they were calling any of

      .normalize
      .widen.normalize
      .normalize.widen

    and if I didn't like their answers they found themselves
    introduced to 'dropAliasesAndSingleTypes', the recursive widener
    and dealiaser which I concluded is necessary after all.

    Discovered that the object called 'deAlias' actually depends
    upon calling 'normalize', not 'dealias'. Decided this was
    sufficient cause to rename it to 'normalizeAliases'.

    Created dealiasWiden and dealiasWidenChain.

    Dropped dropAliasesAndSingleTypes in favor of methods
    on Type alongside dealias and widen (Type#dealiasWiden).
    These should reduce the number of ""hey, the type alias doesn't work"" bugs.

    (cherry picked from commit 3bf51189f979eb0dd41744ca844fd12dfdaa0dee)

    Conflicts:
    	src/compiler/scala/tools/nsc/interpreter/CompletionOutput.scala

commit c1d8803cea1523f458730103386d8e14324a9446
Author: Paul Phillips <paulp@improving.org>
Date:   Sat Dec 22 08:13:48 2012 -0800

    Shored up a hidden dealiasing dependency.

    Like the comment says:

    // This way typedNew always returns a dealiased type. This
    // used to happen by accident for instantiations without type
    // arguments due to ad hoc code in typedTypeConstructor, and
    // annotations depended on it (to the extent that they worked,
    // which they did not when given a parameterized type alias
    // which dealiased to an annotation.) typedTypeConstructor
    // dealiases nothing now, but it makes sense for a ""new"" to
    // always be given a dealiased type.

    PS:
    Simply running the test suite is becoming more difficult all
    the time. Running ""ant test"" includes time consuming activities
    of niche interest such as all the osgi tests, but test.suite
    manages to miss the continuations tests.
    (cherry picked from commit 422f461578ae0547181afe6d2c0c52ea1071d37b)

commit da4748502792b260161baa10939554564c488051
Author: Paul Phillips <paulp@improving.org>
Date:   Fri Dec 21 12:39:02 2012 -0800

    Fix and simplify typedTypeConstructor.

    Investigating the useful output of devWarning (-Xdev people,
    it's good for you) led back to this comment:

      ""normalize to get rid of type aliases""

    You may know that this is not all the normalizing does.
    Normalizing also turns TypeRefs with unapplied arguments
    (type constructors) into PolyTypes. That means that when
    typedParentType would call typedTypeConstructor it would
    find its parent had morphed into a PolyType. Not that it
    noticed; it would blithely continue and unwittingly discard
    the type arguments by way of appliedType (which smoothly
    logged the incident, thank you appliedType.)

    The simplification of typedTypeConstructor:

    There was a whole complicated special treatment of AnyRef
    here which appears to have become unnecessary. Removed special
    treatment and lit a candle for regularity.

    Updated lots of tests regarding newly not-so-special AnyRef.
    (cherry picked from commit 394cc426c1ff1da53146679b4e2995ece52a133e)

commit 1f3c77bacb2fbb3ba9e4ad0a8a733e0f9263b234
Author: Paul Phillips <paulp@improving.org>
Date:   Fri Dec 21 15:06:10 2012 -0800

    Removed dead implementation.

    Another ""attractive nuisance"" burning off time until I
    realized it was commented out.
    (cherry picked from commit ed40f5cbdf35d09b02898e9c0950b9bd34c1f858)
"
f0e9237834d00ea9e27937e44dc8b8382be32db6,scala/scala,"Merge branch 'merge-2.10.wip-x' into merge-2.10.x-master

* merge-2.10.wip-x: (24 commits)
  SI-6023 reify abstract vals
  Removing controversial `either` method from Futures API.
  SI-6695 Test case for fixed Array match bug
  adds comments to standard attachments
  SI-6673 fixes macro problems with eta expansions
  Restore the opimization apparently lost after merge.
  SI-6624 set info of case pattern binder to help find case field accessors
  Scaladoc update for collection.mutable.MultiMap
  SI-6663: don't ignore type parameter on selectDynamic invocation
  SI-6551: don't insert apply call in polymorphic expression.
  SI-6634 Fixes data corruption issue in ListBuffer#remove
  Fixes SI-6628, Revert ""Fix for view isEmpty.""
  SI-6661 - Remove obsolete implicit parameter of scala.concurrent.promise method
  Fixes SI-6150 - backport to 2.10.x branch.
  SI-5330, SI-6014 deal with existential self-type
  Fixes SI-6559 - StringContext not using passed in escape function.
  SI-6648 copyAttrs must preserve TypeTree#wasEmpty
  Fix raw string interpolator: string parts which were after the first argument were still escaped
  sane printing of renamed imports
  SI-6440 Address regressions around MissingRequirementError
  ...

Conflicts:
	src/library/scala/collection/generic/IndexedSeqFactory.scala
	src/library/scala/collection/mutable/ListBuffer.scala
	src/reflect/scala/reflect/internal/Symbols.scala
	src/reflect/scala/reflect/internal/Types.scala
	test/files/run/t6150.scala
"
7d83be218473f08ab560c937318faadce2617d95,scala/scala,"Logging cleanup.

Reduced the amount of extraneous logging noise at the
default logging level.

Was brought to my usual crashing halt by the discovery of identical
logging statements throughout GenASM and elsewhere. I'm supposing
the reason people so grossly underestimate the cost of such duplication
is that most of the effects are in things which don't happen, aka
""silent evidence"".

An example of a thing which isn't happening is the remainder of
this commit, which exists only in parallel universes.
"
d9d6494fa7704ebacfa74e92a964381895bbf8d4,scala/scala,"SI-6976 Fix value class separate compilation crasher.

We can't guarantee that the owner of the value class
is initialized, and if it isn't, the search for the
companion module will turn up bubkis.

This is a localized fix, but I'd be suprised if there
weren't other places that suffered from the same problem.

Wouldn't it be nicer to have something like:

    // doesn't force info
    sym.raw.info
    sym.raw.companionModule

    // forces info
    sym.info
    sym.companionModule
"
9129cfe9117e41d44cda30222ffef22b70767cfb,scala/scala,"SI-4270 Disqualify in scope implicits that are shadowed.

If an expression wouldn't type check explicitly, it shouldn't be
allowed implicitly.

Employs typedIdent, which already does this sort of thing rather well,
instead of continuing to reimplement it in Implicits.

Remove check for non-implicit synonym, which is subsumed by typing an Ident.

Workaround Scaladoc oddity, by using an attributed select when the context
is deficient.
"
001e910f9774b2da00da2d56b7ba92d78a9c20ce,scala/scala,"Did a bunch of symbol oriented work on checkers.

changes in Global and Typer to accomodate this, and renamed ""Checkers""
to ""ICodeCheckers"" to make some less confusing space for the future
""SymbolCheckers"". No review.

"
ffc2389840852a120fecd772206d55db9a79f30e,scala/scala,"Replaced LiftCode with a function in MacroContext

Major cleanup of reification:
* LiftCode phase has been removed
* Code has been deprecated and will be removed as we roll a new starr
* Logic related to type-directed lifting has been purged

scala.reflect.macro.Context#reify now provides the same services
as LiftCode provided (except that it returns Tree, not Code).

For testing purposes, I've retained the oh-so-convenient automagic lift.
test/files/codelib/code.jar now hosts Code.lift reimplemented in a macro,
so that the tests can continue working as if nothing has happened.
"
bc3b1e2c9453ef90f6fb7aaa3dea6e24ba19d017,scala/scala,"Rename copyTo to build based on consensus of 3
"
3f7b8b58748eb70aec4269f1ef63853b5ad4af60,scala/scala,"Exhaustivity: TreeMakers as boolean propositions

We check exhaustivity by representing a match as a formula in
finite-domain propositional logic (FDPL) that is false when
the match may fail. The variables in the formula represent
tested trees in the match (type tests/value equality tests).

The approximation uses the same framework as the CSE analysis.
A matrix of tree makers is turned into a DAG, where sharing
represents the same value/type being tested.

We reduce FDPL to Boolean PL as follows.
For all assignments, V_i = c_i_j, we introduce a proposition
P_i_j that is true iff V_i is equal to the constant c_i_j,
for a given i, and all j, P_i_j are mutually exclusive
(a variable cannot have multiple values).
If the variable's domain is closed, we assert that one of P_i_j
must be true for each i and some j. The conjunction of these
propositions constitutes the equality axioms.

After going through negational normal form to conjunctive normal
form, we use a small SAT solver (the DPLL algorithm) to find
a model under which the equational axioms hold but the match fails.
The formula: EqAxioms /\ -MatchSucceeds.
Note that match failure expresses nicely in CNF: the
negation of each case (which yields a disjunction) is anded.

We then turn this model into variable assignments
(what's the variable (not) equal to, along with recursive
assignments for its fields). Valid assignments (no ill-typed
field assignments) are then presented to the user as counter examples.
A counter example is a value, a type test, a constructor call
or a wildcard. We prune the example set and only report the
most general examples. (Finally, we sort the output to yield stable,
i.e. testable, warning messages.)

A match is only checked for exhaustivity when the type of the
selector is ""checkable"" (has a sealed type or is a tuple
with at least one component of sealed type).

We consider statically known guard outcomes, but generally back
off (don't check exhaustivity) when a match has guards
or user-defined extractor calls. (Sometimes constant folding
lets us statically decide a guard.)
We ignore possibly failing null checks (which are performed
before calling extractors, for example), though this could
be done easily in the current framework. The problem is false
positives. People don't usually put nulls in tuples or lists.

To improve the exhaustivity checks, we rewrite `List()` to Nil.
TODO: more general rewrite of List(a, b, ..., z) to `a :: b :: ... :: z`.
When presenting counter examples, we represent lists in the
user-friendly List(a,...,z) format. (Similarly for tuples.)

There are no exhaustivity checks for a match-defined PartialFunction.

misc notes:
- fix pure case of dpll solver
  impure set (symbol that occurs both as a positive and negative literal)
  was always empty since I was looking for literals (which are not equal if positivity is not equal)
  but should have been looking for symbols

- FDPL -> BoolPL translation collects all syms in props
  since propForEqualsTo generates an Or, must traverse the prop
  rather than assuming only top-level Syms are relevant...

  also, propForEqualsTo will not assume Or'ing a whole domain is equivalent to True
  (which it isn't, since the type test may fail in general)

- improve counter example description
  - treat as constructor call when we either have definite type information about a real class,
    or we have no equality information at all, but the variable's type is a class
    and we gathered constraints about its fields (typically when selector is a tuple)
  - flatten a :: b :: ... :: Nil to List(a, b, ...)
  - don't print tuple constructor names, so instead of ""Tuple2(a, b)"", say ""(a, b)""

- filter out more statically impossible subtypes
  the static types convey more information than is actually checkable at run time
  this is good, as it allows us to narrow down the subtypes of a sealed type,

  however, when modeling the corresponding run-time checks we need to ""erase"" the
  uncheckable parts (using existentials so that the types are still well-kinded),
  so that we can use static subtyping as a sound model for dynamic type checks

- experimental java enum handling seals enum class
    before, we created a refinement class as the placeholder for the sealed children
    it seems more direct to use the enum class for that
    this way, the new pattern matcher's exhaustiveness checker just works for java enums
"
c8434cc0a4e48f7d63a2c598e3096d3efcd8c33d,scala/scala,"Introduce factories with builders.
Optimize optionSequence (in TraverseTest) when the underlying
IterableFactory happens to be an IterableFactoryWithBuilder
"
1080f86548a0217854351f263bcfb6f05ab3d9aa,scala/scala,"Optimize mkString and addString

- Short circuit empty collections
- Switch to java Stringbuilder
- mark `mkString`/`addString` methods final, create a overridable
  function
- fix Map.addString regression (and add tests)
- unify addString/mkString impl for LazyList
"
e6abaa0219fa06e05028d78eb8e0ac9093e0fab7,scala/scala,"Pull up append and prepend from Vector to immutable.Seq.
Provide (inefficient) view-based default implementations.
Also provide a view-based default implementation of the updated operation.
"
179f9a97f29319b29f74a61e02d0a6e87114bac0,scala/scala,"Merge commit 'efadbe4354' into merge/2.13.x-to-2.12.x-20180301

Conflicts:
	src/compiler/scala/tools/nsc/backend/jvm/CodeGen.scala
      => bean info removal vs backend parallel refactor
	src/compiler/scala/tools/nsc/symtab/classfile/ClassfileParser.scala
      => parseExceptions moves vs addParamNames addition
	src/intellij/scala.ipr.SAMPLE
      => SBT 0.13.17 upgraded, this section of the file is replaced by `sbt intellij` anyway.
	src/library/mima-filters/2.12.0.backwards.excludes
      => no MiMa on this branch
	src/reflect/scala/reflect/runtime/JavaUniverseForce.scala
      => the usual
	versions.properties
      => version bumps on 2.12 subsumed by already bumped versions on this branch.
"
455526f52c0d7a98f2b0bef8f29e7fb542bfe600,scala/scala,"Large logging cleanup effort.

Quieted down many logging statements which contribute
disproportionate noise.  Made others emit something more sensible.
Spent lots of time on the inliner trying to find a regular
format to make the logs more readable.  Long way to go here but
it'd be so worth it to have readable logs instead of mind-numbing
indiscriminate text dumps.
"
518635385ac1ba14aa230de3e431793331300546,scala/scala,"SI-7872 Plug a variance exploit in refinement types

Refinement types are collapsed to a TypeTree with an original
during type checking; this was enough to evade variance validation
in refchecks.

This commit:

  - validates the original of `TypeTree`s in refchecks
  - changes VarianceValidator to recurse into:
    - the originals of `TypeTree`s
    - `TypTree` (to cover, e.g. `CompoundTypeTree` / `SelectFromTypeTree`)

It also finds an unreported variance violation in an existing
test case, variances.scala. This looks to be legitimate.
"
7349476e5cf7984acf40055cb55d78cbaed41043,scala/scala,"A selection of cleanups stemming from recent in...

A selection of cleanups stemming from recent investigations.

"
f0bff86d31c0ce9548e595c4b4b7fda8efe038c0,scala/scala,"introduce NullaryMethodType to disambiguate Pol...

introduce NullaryMethodType to disambiguate PolyType

motivation:
given `def foo[T]: (T, T)` and `type Foo[T] = (T, T)`,

`foo.info` and `TypeRef(_, Foo, Nil).normalize` are both
`PolyType(List(T), Pair[T, T])`

uncurry has been relying on an ugly hack to distinguish these
cases based on ad-hoc kind inference without this distinction,
the type alias's info (a type function) would be transformed to
`PolyType(List(T), MethodType(Nil, Pair[T, T]))`

anonymous type functions are being used more often (see #2741, #4017,
#4079, #3443, #3106), which makes a proper treatment of PolyTypes more
pressing

change to type representation:
PolyType(Nil, tp) -> NullaryMethodType(tp)
PolyType(tps, tp) -> PolyType(tps, NullaryMethodType(tp)) (if the polytype denoted a polymorphic nullary method)

PolyType(Nil, tp) is now invalid

the kind of a PolyType is * iff its resulttype is a NullaryMethodType or a MethodType (i.e., it's a polymorphic value)
in all other cases a PolyType now denotes a type constructor

NullaryMethodType is eliminated during uncurry

pickling:
for backwards compatibility, a NullaryMethodType(tp) is still pickled as a PolyType(Nil, tp),
unpickling rewrites pre-2.9-pickled PolyTypes according to the expected kind of the unpickled type (similar to what we used to do in uncurry)
a pickled PolyType(Nil, restpe) is unpickled to NullaryMethodType(restpe)
a pickled PolyType(tps, restpe) is unpickled to PolyType(tps, NullaryMethodType(restpe)) when the type is expected to have kind *

the rewrite probably isn't complete, but was validated by compiling
against the old scalacheck jar (which has plenty of polymorphic nullary
methods) nevertheless, this commit includes a new scalacheck jar

summary of the refactoring:
* PolyType(List(), tp) or PolyType(Nil, tp) or PolyType(parms, tp) if params.isEmpty ==> NullaryMethodType(tp)
* whenever there was a case PolyType(tps, tp) (irrespective of tps isEmpty), now need to consider the
  case PolyType(tps, NullaryMethodType(tp)); just add a case NullaryMethodType(tp), since usually:
    - there already is a PolyType case that recurses on the result type,
    - the polytype case applied to empty and non-empty type parameter lists alike
* tp.resultType, where tp was assumed to be a PolyType that represents a polymorphic nullary method type
  before, tp == PolyType(tps, res), now tp == PolyType(tps, NullaryMethodType(res))

* got bitten again (last time was dependent-method types refactoring)
by a TypeMap not being the identity when dropNonConstraintAnnotations
is true (despite having an identity apply method). Since asSeenFrom
is skipped when isTrivial, the annotations aren't dropped. The
cps plugin relies on asSeenFrom dropping these annotations for
trivial types though. Therefore, NullaryMethodType pretends to
never be trivial. Better fix(?) in AsSeenFromMap: `if(tp.isTrivial)
dropNonContraintAnnotations(tp) else ...`

TODO: scalap and eclipse

review by odersky, rytz

"
308ae2d3967cf885f2aa5c5c2489b79abb865d42,scala/scala,"Explicitly call `toSeq` on wildcard-star patterns

With name-based pattern matching, unapplySeq can return any type that
has an `isEmpty` and `get` methods. The object returned by `get` needs
to have `apply`, `length` or `lengthCompare` and `drop` methods.

This PR changes the type of `x @ _*` bound to `scala.Seq`. To support
that change, the object returned by `unapplySeq.get` is converted by
calling `.toSeq` or `drop(n)`.

This means there are two changes in the interface for name-based pattern
matching:
  - the object needs to define a `toSeq` method
  - the `drop` method needs to return a `scala.Seq`

The `unapplySeq` method defined in `collection.SeqFactory` now returns
a value class wrapper that delegates to the collection. `toSeq` no
longer exposes mutable collections.

`Array.unapplySeq` uses a similar value class wrapper.
"
79db90986a2f26aeea39e586cabda2926fb69987,scala/scala,"Better `IterableOnce` support in collection operations

- Remove `Iterable#fromIterable`: It was an inlined forwarder to
  `iterableFactory.from`. Other factorytypes do not get a dedicated
  method, either. `fromIterable` was also unnecessarily constraining
  because it still required an `Iterable` even though
  `IterableFactory#from` has allowed `IterableOnce` for some time now.

- Remove `SortedSet#sortedFromIterable` (same situation)

- Change `fromSpecificIterable` to `fromSpecific(IterableOnce)`:
  Another remnant from an earlier version of a collection strawman where
  building from `IterableOnce` was hard and requiring an `Iterable` used
  to be the standard.

- Make `Iterable#concat` and `Iterable#zip` accept `IterableOnce`
  arguments

- Make `appendedAll`/`prependedAll`/`concat` implementations in
  `ArrayOps`, `StringOps`, `Seq`, `Map` and `Set` implementations accept
  `IterableOnce`

Fixes https://github.com/scala/bug/issues/11053"
f33ce2a2d28aca0571b62104697d23f815cf84d4,scala/scala,"Simplify UndoLog, track indyLambdaImplMethods more precisely

When inlining an instruction that would cause an IllegalAccessError (if
it doesn't get inlined itself later), directly store all of the state
necessary to later roll back a method. No longer track changes to the
method on the go.

Track indyLambdaImplMethods more precisely. When a closure allocation
is eliminated (dead code, unused value), remove the corresponding
method handle from the list of referenced lambda body methods.

Fixes scala-dev#62
"
e557acb9a7d672c0635c3eaf9fe385adc41e5c86,scala/scala,"part 2 of the dependent method refactoring: imp...

part 2 of the dependent method refactoring: improved interaction with
implicit search (needed for oopsla paper)

more to come in this area, see e.g. #3346 (stanford edsl stuff)

reopens #13, which wasn't fixed properly before imo, anyway (have a look at -Xprint:typer output before this commit: a type that's not expressible in surface syntax is inferred -- also removed duplicate test file)

closes #3731: co-evolve type alias type symbols when their rhs is
updated and they are referenced by type selections (see typemap)

review by odersky

"
3be520bcfc84f207d172934f9b147e31355cd877,scala/scala,"improves showRaw

addresses concerns raised in http://groups.google.com/group/scala-user/browse_thread/thread/de5a5be2e083cf8e
"
2e69ae41d9b4af6dd87e14e5f6f980c51e164e4c,scala/scala,"Renaming phase time-travel methods.

enteringPhase and exitingPhase are our unambiguously named
phase time travel methods.  atPhase is deprecated.  Other methods
and uses have all been brought into line with that.

Review by @lrytz.
"
39ab5a6643b4ae75254a0d17964fda27cdd5c4da,sdss/marvin,moving to a proper lib directory
a8fb8e8a67bf711d191ec87c2c8c656dd7e803df,sdss/marvin,refactored plate controller
dcd1deb25332611bc1d94dd97b24089738bdc9ac,sdss/marvin,"moved modelGraph into db, and started marvindb class"
e67c859ef5941f6355c08f0974fb09044d9d1360,sg-s/xolotl,"cleaned up a few channels
"
43a7ef4eaa0a0347beee6f6cc4ef919b80e457cb,tboox/xmake,"improve to search root project directory
"
0f508610cbd7680d40c6303f4d72696db0243acc,tsuru/tsuru,"refactored service using bson.M instead map of insterfaces
"
7fdef38a22e7fb5467d8cf9113f6eb9062e089cd,tsuru/tsuru,"app,provision: Using platform instead of framework in function names and struct properties
"
083e7e21e5df5f780bb93523c2189613ad860a61,tsuru/tsuru,"app, provision/juju: use Unit.Available instead of checking status twice
"
ce2f492b5d6ec2e1f84a0cf1a5aa9893a9459da6,tsuru/tsuru,"api: variable renaming
"
6beba9ca47f27699b16557d1db9198daf9bca446,tsuru/tsuru,"provision: change the Provisioner interface

 * Added the method RemoveUnits, that takes the app and the number of
   units to remove
 * Changed the method RemoveUnit. Now it takes the unit to remove, not
   the application

Getting rid of a bug introduced by tsr 0.5.0, with unit-add and
unit-remove.
"
bf5bce4784207d6ea7d8f3247e9108375f1ed666,tsuru/tsuru,"Refactoring CloneRepositoryHandler
"
b76383e290f4a05a5da5c0820aedeafe3b5389c4,tsuru/tsuru,"api/app: fix AppList handler to use $in instead of match entire list

The handler was matching the entire list in the collection, instead of
issue a $in query to MongoDB.

Closes #52.
"
d5aa9c178d7ff772487e1272896b912f25609f04,uias/Tabman,"Rename Bar component directories
"
c179b9f89f6632760b7275d148b2c8853035490a,uikit/uikit,"add assign, cleanup
"
97a5a9affb6e3562aa73848568ad06bc3df162b5,vapor/vapor,"cleanup + fixtests
"
d55e0374104c11e26b86a6ea1b6f8f1d0d736ca2,vapor/vapor,"make DateMiddleware init private; assert on eventloop; fixes #1628
"
983b7b9696c0200ab8c0821a4904fb5eac46123c,vapor/vapor,"improve error struct names
"
c691c463c2743d672dadbdef64a0eaa372c4c42e,vapor/vapor,"removing main for more simplified testing w/in xcode
"
17852b9aa32d0f66ed0e16251dc369b83ef0c2d5,vapor/vapor,"separate out auth and redis
"
967eef1267bbc7a61cf3ffe4fd412242a7d4cb69,vapor/vapor,"chttp refactor cleanup
"
fb87e136b1eb9d8c36fc1ef74c582b7d8975b4da,yamcs/yamcs,"Add XTCE-like alarms support for integers, floats & enums

The spreadsheet structure is a little bit different than the
previous Limits sheet. Low/high columns were removed, and
replaced by a trigger type/ trigger value column. Low/high are
now two different trigger types. An additional trigger type
‘state’ was added which allows triggering on the state of
Enumerated parameters. There appeared to be already
some logic in place for this, but not through the
spreadsheetloader.

Severity levels were extended. This was also
reflected in an update of MonitoringResult, which
was not using the XTCE alarm levels.
"
c12a97577eea2b04006635b79693b8ef115873f0,zulip/zulip,"Rework local_settings_template.py to be clear about what the user needs to do

(imported from commit f69ea0d57e885509abc70dc4f2bee6e36169691f)
"
8f058937a0fa626d65f88735928942e9893ad718,zulip/zulip,"Rename recipient.user_or_class to type.id.

(imported from commit 74639cd08d0f53ae39624fc793f6fe55325b6d45)
"
62d6360a4810455608b89679c66e6b61245b56b0,zulip/zulip,"Extracted model code out to unread.js.

Most of the model logic pertaining to unread counts had been in
zephyr.js, along with a couple global variables.  Now the code
is encapsulated in unread.js.  It was a pretty straightforward
extraction with some minor method name changes.  Also, a small
bit of the logic had also been in stream_list.js.

Conflicts:
	tools/jslint/check-all.js

(imported from commit f0abdd48f26ab20c5beaef203479eb5a70dacfff)
"
ff427745515ca1773522cd20bffa462e2a7c5fa4,zulip/zulip,"Refactor unread client handling to use 'read' flags per message

(imported from commit ca48745396e7fbac456e5eb2e7dbe4adc62b3492)
"
8d17de124787b1c3e93bf50a50cf76758ac381c9,zulip/zulip,"Move some early setup code

(imported from commit ca57718e4a71f43bbf229d2a6e8c70174bb3583f)
"
a92f2a52298054fa304275137a5b844791333975,zulip/zulip,"Rename 'Narrow to messages containing' to 'Search for'.

(imported from commit 147164bb96bb4fdb451454956ac56f5d3b2424b6)
"
4973d992d1d21ddb6d0a0ca49651f752754aa2a2,zulip/zulip,"emoji_picker: Move the category tabs to just below the emoji filter.

Also removes the now unused `get_rendered_emoji_categories()` function.
"
2f6d722d9b06bcc09185528f643491000852fcaf,zulip/zulip,"Extract ui.set_user_list_heights().

This is a simple extraction--just moving code, nothing fancy.

(imported from commit 6c3717db43728b1ef73b17dd923eec4f7d6f6e4c)
"
f9f8b18e2f9ac53793bcf3c1e3ce784943d7c80f,zulip/zulip,"lint: Ban use of json_success({}) instead of json_success().
"
07af59d4cc639ded25808ff0c547e4673a087128,zulip/zulip,"tornado: Split get_events_backend into two functions.

The lower-layer function, now called get_events_backend, is intended
to be called by multiple code paths (including the upcoming
get_events_internal).
"
0f377a127782dddf19bbf5a7208cfda2ebc7bc36,zulip/zulip,"Use stats.zulip.net instead of old stats internal IP

(imported from commit 1ec504b953272e2b52b80e202b099764dceb2be0)
"
f1ba3ded42726fc5007546508149c8834dd77465,zulip/zulip,"Revert ""Extract reply from email.""

This reverts commit f1f48f305e38c7cdab471fbd6d62c9a06b5f664b.

The use of sklearn unfortunately caused a substantial slowdown to the
Zulip provisioning process, which didn't seem worth it for a
relatively minor feature.
"
5359e6b0d4af5d0b9a4180d074252290f49cd5e7,zulip/zulip,"Convert Zulip to use Jinja2 templates.

This results in a substantial performance improvement for all of
Zulip's backend templates.

Changes in templates:
- Change `block.super` to `super()`.
- Remove `load` tag because Jinja2 doesn't support it.
- Use `minified_js()|safe` instead of `{% minified_js %}`.
- Use `compressed_css()|safe` instead of `{% compressed_css %}`.
- `forloop.first` -> `loop.first`.
- Use `{{ csrf_input }}` instead of `{% csrf_token %}`.
- Use `{# ... #}` instead of `{% comment %}`.
- Use `url()` instead of `{% url %}`.
- Use `_()` instead of `{% trans %}` because in Jinja `trans` is a block tag.
- Use `{% trans %}` instead of `{% blocktrans %}`.
- Use `{% raw %}` instead of `{% verbatim %}`.

Changes in tools:
- Check for `trans` block in `check-templates` instead of `blocktrans`

Changes in backend:
- Create custom `render_to_response` function which takes `request` objects
  instead of `RequestContext` object. There are two reasons to do this:
    1. `RequestContext` is not compatible with Jinja2
    2. `RequestContext` in `render_to_response` is deprecated.
- Add Jinja2 related support files in zproject/jinja2 directory. It
  includes a custom backend and a template renderer, compressors for js
  and css and Jinja2 environment handler.
- Enable `slugify` and `pluralize` filters in Jinja2 environment.

Fixes #620.
"
560636e37259510c480bc2a1e8e3802d05906e13,zulip/zulip,"views: remove unused imports.

(imported from commit 68f66fe79dfb72671e6a7c79bb98646ec729c701)
"
3455e3716011160c17f6f8d617629ffb77f67de5,zulip/zulip,"Get rid of is:pm alias for is:private-message

It's cleaner if the filtering code recognizes only one value.
We can add this back in by converting in the parser.

(imported from commit 453b7b01e094955c6d66be63b5d997cc56b50a35)
"
ec5120e80721b153f5069d340d44161cf56d869e,zulip/zulip,"refactor: Remove six.moves.zip import.
"
5e70577f84d0d8048fa7c1e58ed6a3e34c831b64,zulip/zulip,"models: Rename Realm.show_digest_email field.

This renames Realm.show_digest_email field to
digest_emails_enabled, for greater clarity as to what it does
just from seeing the setting name, without having to look it up.

Fixes part of #10042.
"
2d73e03e37dda57b36505f5c1a492c3752dae038,zulip/zulip,"ui-refactor: Rename modals.js to overlays.js.

Fixed #4702.
"
eb9f7a04b75526097d9d4dd3d4b7373de48f086c,zulip/zulip,"Rewrite topic zoom to fix bugs and make cleaner.

In the first cut at topic zoom, I was re-rendering the
streams list, but this created glitches with orphaned
list items.  The reproducible bug was that unread counts
on unshown streams weren't updating.

In the new approach, I keep the elements more permanent, and
I just hide and show them as needed, either through jQuery
show/hide or permanent CSS selectors.

I got rid of toggle_zoom(), so that we just explicitly zoom
in and zoom out in all situations.  In particular, when we
narrow, it's more clear now that only stay zoomed in when
we're narrowing to the same stream as before (including topic
narrows within that stream).

When you zoom in, the number of topics is no longer limited
to 30, since that was kind of arbitrary anyway.  (In practice,
the number of topics is usually well under 30, anyway, due to
the way we track them on the client.)

(imported from commit 5b6c143dee9ba9fe557d8cc36335ff28efb4b0de)
"
bd7b7adb6bdead878830ee6878fe94f44daf81f3,zulip/zulip,"Rename api.common to humbug

Fixes #482.

(imported from commit 1bd6a7fd993d8d5e225e0311c288dbce0c369a40)
"
c59cb40a71bee02e83bd3eea4f858f10b745c544,zulip/zulip,"CSS cleanup.

Try to adhere to Bootstrap grid system a bit more consistently.
Unstyle subscriptions page for consistency.
Still not sure why the ""affix"" jumps when we switch to ""Subscriptions.""

(imported from commit 1c28de4e2ef3d6ed3d1bdcfd143eadefba2b46cb)
"
5293cdebe82150513ba8c6078909072ecefc1bd1,zulip/zulip,"Rename LOCAL_SERVER to ENTERPRISE.

(imported from commit 7edf353eefe6c9e7aac74b7bbc37b923cac1b913)
"
6b2b7ab3ffc2e0c68ca4457ce7ac55ddc95a239e,zulip/zulip,"Rename GitHubBackend to GitHubAuthBackend for consistency.
"
5914afc0186b8323684c9d2436182f6881dfccb3,zulip/zulip,"cleanup: Use a single loop in do_send_messages.
"
e25b9f4feb61b1ddf200949abc089e153d27a02f,GMOD/jbrowse,"found a way to move _trackMenuOptions into ExportMixin to avoid code duplication: use dojo.safeMixin instead of dojo.extend
"
db0e9a711e3ccfb0c66128610ca403975e1165af,GMOD/jbrowse,"unify colors between DNA, SNPCoverage, and Alignments/PileUp tracks
"
e8948d01a4daaacff8d787373d5d8d0b0b0bd7da,GMOD/jbrowse,"make wigglevaluedisplay flag explicitly say ""no data"" when there is no data
"
0002cc40a9d718a37a9fa79e411d16f3f81e7d11,GMOD/jbrowse,"Consolidate separate PairedRead track type into the single Alignments2 track
"
5c03f0e348f235dee0754d820c5c1ae6b078fc32,PyCQA/pylint,"Fix false positive unused-variable in lambda default arguments (#2276)

The NameConsumer to_consume frame needed to be backed out by one so that
for lambda bound default argument variables (closure) could consume the
name in a higher scope (just like function default arguments)

Close #1921
Close #1552
Close #1099
Close #210"
7bccbd99f9e9d0814a8cefdf44e305decbe03a8b,SUSE/DeepSea,"benchmarks: rename client-rbd to benchmark-rbd

Signed-off-by: Mohamad Gebai <4b1818709d11eee17933b57a46059e8da9e14825@suse.com>
"
a85e758eb640bc6d44696b8ad00ecf896a63b515,aleju/imgaug,"Reduce code duplication in Invert

This patch decreases code duplication in the
parameter parsing of
augmenters.arithmetic.Invert by using
the parameter handling functions in
parameters.py.
"
e719c8e58107b3ad5e43112e07bcbfc47e41b80a,aleju/imgaug,"Unify imports from parameters.py

The augmenter files so far used each two different
import styles for parameters.py simultaneously.
Some stochastic parameters were directly imported
(from parameters import Soandso), while also the
whole file was imported (import parameters). This
has now been simplified to a file import for all
augmenter files.
"
8c82198978a1b47553e47a8caeced22f325ad573,anlaneg/dpdk,"ring: remove debug setting

The debug option only provided statistics to the user, most of
which could be tracked by the application itself. Remove this as a
compile time option, and feature, simplifying the code.

Signed-off-by: Bruce Richardson <66b9e8e8fbd5e9f41f91b0af050876182ce9d0e4@intel.com>
Reviewed-by: Yuanhan Liu <5dcef21195e64c9c08aa779bb62b25e9133eaa33@linux.intel.com>
Acked-by: Olivier Matz <dfcc1510895413197abb4336e39bb0a3906cba71@6wind.com>
"
01eb53eefeb40e82915fef92be64fd46a6178282,anlaneg/dpdk,"ethdev: rename folder to library name

Library folder name and output library name are same except a few flaws
including librte_ether.

This library is network device abstraction layer, the name ""ethdev"" fits
better than ""ether"", and library & header files already named as ethdev.

Also there is a rte_ether.h in the net library which can cause confusion.

Signed-off-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
Acked-by: Bruce Richardson <66b9e8e8fbd5e9f41f91b0af050876182ce9d0e4@intel.com>
Acked-by: Jerin Jacob <5bca7d2a432bc0f5422b70b2701a4e4fa32edd00@caviumnetworks.com>
"
0d8c6e6ba09967b386e7a62254cb9a974ba7a5e0,anlaneg/dpdk,"net/mlx5: rename flow counter configuration macro

The HAVE_IBV_DEVICE_COUNTERS_SET_SUPPORT is replaced with
HAVE_IBV_DEVICE_COUNTERS_SET_V42. At this stage it is just
macro renaming. This macro is defined if system supports
the ""old"" Flow counters functionality, MLNX_OFED version
from 4.2 to 4.4 is required.

We need to do this preparation before introducing the new
configuration macro (HAVE_IBV_DEVICE_COUNTERS_SET_V45) for
the ""new"" Flow counters support.

Both makefile and meson.build are changed.

Signed-off-by: Viacheslav Ovsiienko <5b8db9bb93a9a9aefc8828f79604d1fe963a53dd@mellanox.com>
"
50c4440ee89bf1fe1303baa86f5b8f9e99b35361,anlaneg/dpdk,"app/testpmd: fix build with bypass without ixgbe

When ixgbe bypass is not explicitly disabled while ixgbe is disabled:
app/test-pmd/testpmd.c:304:27: error:
	‘RTE_PMD_IXGBE_BYPASS_TMT_OFF’ undeclared here

The ixgbe bypass feature is meaningful only if ixgbe is enabled.
So we need to check both.

A best fix will be to enable bypass always and remove this option.

Fixes: e261265e42a1 (""ethdev: move bypass functions to ixgbe PMD"")

Signed-off-by: Thomas Monjalon <5f50a84c1fa3bcff146405017f36aec1a10a9e38@monjalon.net>
"
e261265e42a15164aa649521227f7c2c4740c703,anlaneg/dpdk,"ethdev: move bypass functions to ixgbe PMD

Move all bypass functions to ixgbe pmd and remove function
pointers from the eth_dev_ops struct.

Signed-off-by: Radu Nicolau <fa459cf59d47c122ba776e9a6f631c862bf44680@intel.com>
Acked-by: Wenzhuo Lu <58cb9036bdff9a5412edc3b9f70e105ccf59954f@intel.com>
"
ea85e7d711b664558a53a8131e22fdff952e5241,anlaneg/dpdk,"ethdev: retrieve xstats by ID

Extended xstats API in ethdev library to allow grouping of stats
logically so they can be retrieved per logical grouping  managed
by the application.
Changed existing functions rte_eth_xstats_get_names and
rte_eth_xstats_get to use a new list of arguments: array of ids
and array of values. ABI versioning mechanism was used to
support backward compatibility.
Introduced two new functions rte_eth_xstats_get_all and
rte_eth_xstats_get_names_all which keeps functionality of the
previous ones (respectively rte_eth_xstats_get and
rte_eth_xstats_get_names) but use new API inside.

test-pmd: add support for new xstats API retrieving by id in
testpmd application: xstats_get() and
xstats_get_names() call with modified parameters.

doc: add description for modified xstats API
Documentation change for modified extended statistics API functions.
The old API only allows retrieval of *all* of the NIC statistics
at once. Given this requires a MMIO read PCI transaction per statistic
it is an inefficient way of retrieving just a few key statistics.
Often a monitoring agent only has an interest in a few key statistics,
and the old API forces wasting CPU time and PCIe bandwidth in retrieving
*all* statistics; even those that the application didn't explicitly
show an interest in.
The new, more flexible API allow retrieval of statistics per ID.
If a PMD wishes, it can be implemented to read just the required
NIC registers. As a result, the monitoring application no longer wastes
PCIe bandwidth and CPU time.

Signed-off-by: Jacek Piasecki <5e1ddc2c85b7acbcba75e0e83b3bb6ce7fe01339@intel.com>
Signed-off-by: Kuba Kozak <67670b66df7eb69a86e2579475d68b34f383c70c@intel.com>
Signed-off-by: Tomasz Kulasek <2fc2c8542a2a68801ce1aaca56eae5adf14485ae@intel.com>
Acked-by: Harry van Haaren <b9ad04ed670c22cfa7f5f9ab17e311ca85d11a76@intel.com>
"
7d3b1ec47fae5b2d972e05d0ee37bb7a1731b085,anlaneg/dpdk,"test: move unit tests to separate directory

This is to logically group unit tests into their own folder,
separating them from ""app"" folder.

Hopefully this will make the unit test in DPDK more visible.

Following binaries moved to ""test"" folder:
cmdline-test
test-acl
test-pipeline
test            <-- various DPDK unit tests

Signed-off-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
Acked-by: Bruce Richardson <66b9e8e8fbd5e9f41f91b0af050876182ce9d0e4@intel.com>
"
78be885295b86da2c208324f1e276e802812b60d,anlaneg/dpdk,"net/mlx5: handle drop queues as regular queues

Drop queues are essentially used in flows due to Verbs API, the
information if the fate of the flow is a drop or not is already present
in the flow.  Due to this, drop queues can be fully mapped on regular
queues.

Signed-off-by: Nelio Laranjeiro <2f8dd9032d5b85ca4b53dec8ce664eb6998836be@6wind.com>
Acked-by: Yongseok Koh <76b37c91816d73ef9cf709e3e83a68f2d162f1e2@mellanox.com>
"
5d109deffa87a39a7804c3db7890d3459fac0205,anlaneg/dpdk,"ethdev: add traffic management API

This patch introduces the generic ethdev API for the traffic manager
capability, which includes: hierarchical scheduling, traffic shaping,
congestion management, packet marking.

Main features:
- Exposed as ethdev plugin capability (similar to rte_flow)
- Capability query API per port, per level and per node
- Scheduling algorithms: Strict Priority (SP), Weighed Fair Queuing (WFQ)
- Traffic shaping: single/dual rate, private (per node) and shared (by
  multiple nodes) shapers
- Congestion management for hierarchy leaf nodes: algorithms of tail drop,
  head drop, WRED; private (per node) and shared (by multiple nodes) WRED
  contexts
- Packet marking: IEEE 802.1q (VLAN DEI), IETF RFC 3168 (IPv4/IPv6 ECN for
  TCP and SCTP), IETF RFC 2597 (IPv4 / IPv6 DSCP)

Signed-off-by: Cristian Dumitrescu <25468b8a3698eeb3c368247f8635924bb4a1ce2c@intel.com>
Acked-by: Jerin Jacob <5bca7d2a432bc0f5422b70b2701a4e4fa32edd00@caviumnetworks.com>
Acked-by: Balasubramanian Manoharan <60f326976903c5a4367a155e6c2d06a8b7aed908@caviumnetworks.com>
Acked-by: Hemant Agrawal <90d96ef1ecd8ed49b97c7897be950e80824a9c5c@nxp.com>
"
af4f09f28294fac762ff413fbf14b48c42c128fd,anlaneg/dpdk,"net/mlx5: prefix all functions with mlx5

This change removes the need to distinguish unlocked priv_*() functions
which are therefore renamed using a mlx5_*() prefix for consistency.

At the same time, all functions from mlx5 uses a pointer to the ETH device
instead of the one to the PMD private data.

Signed-off-by: Nelio Laranjeiro <2f8dd9032d5b85ca4b53dec8ce664eb6998836be@6wind.com>
Acked-by: Adrien Mazarguil <9d39ea493ca46c560334f650ac5d4b5ffbcb5cf0@6wind.com>
"
ba9219fe42e19fa93a51474bbb7a1fd656dce9ac,anlaneg/dpdk,"drivers/dpaa2: remove duplicate includes

Signed-off-by: Stephen Hemminger <06fa905d7f2aaced6dc72e9511c71a2a51e8aead@networkplumber.org>
Acked-by: Hemant Agrawal <90d96ef1ecd8ed49b97c7897be950e80824a9c5c@nxp.com>
"
faf2b25c9f80b50b50487d3f9c4224ecbd962733,anlaneg/dpdk,"fm10k: support VMDQ in multi-queue configuration

Add separate functions to configure VMDQ and RSS.
Update dglort map and logic ports accordingly.
Reset MAC/VLAN filter after VMDQ config was changed.

Signed-off-by: Shaopeng He <870b5c1b507b39dc4c03732837d23d1b46787697@intel.com>
Acked-by: Jingjing Wu <64d28b617c3b4840f5ded1bfa611cba7fadfe5c7@intel.com>
Acked-by: Michael Qiu <f0309ca2255ec42822adda7c4b8f366ca4bb5572@intel.com>
"
ca743ea84ee1fe59dec991d1ea766e9525675c0c,anlaneg/dpdk,"cfgfile: increase entry name and value sizes

This patch refers to the ABI change proposed for
librte_cfgfile(rte_cfgfile.h). In order to allow
for longer names and values, the values of macro
CFG_NAME_LEN and CFG_VAL_LEN is increased.

Signed-off-by: Jasvinder Singh <97b766ecf460b59e2781d4fc0469065206870f5c@intel.com>
Acked-by: Cristian Dumitrescu <25468b8a3698eeb3c368247f8635924bb4a1ce2c@intel.com>
"
bf89cbedd2d9a48e2c0c4b5ce4da628b3a71db5c,anlaneg/dpdk,"cxgbe: optimize forwarding performance for 40G

Update sge initialization with respect to free-list manager configuration
and ingress arbiter. Also update refill logic to refill mbufs only after
a certain threshold for rx.  Optimize tx packet prefetch.

Approx. 3 MPPS improvement seen in forwarding performance after the
optimization.

Signed-off-by: Rahul Lakkireddy <3a6b348815dc68871481a310c146a6b821ba8f72@chelsio.com>
Signed-off-by: Kumar Sanghvi <f6a160a15fd9abb18ae6fdc1d3a3ec4658ed0db6@chelsio.com>
"
c06ddf9698e0c2a9653cfa971f9ddc205065662c,anlaneg/dpdk,"meter: add configuration profile

This patch adds support for meter configuration profiles.
Benefits: simplified configuration procedure, improved performance.

Q1: What is the configuration profile and why does it make sense?
A1: The configuration profile represents the set of configuration
    parameters for a given meter object, such as the rates and sizes for
    the token buckets. The configuration profile concept makes sense when
    many meter objects share the same configuration, which is the typical
    usage model: thousands of traffic flows are each individually metered
    according to just a few service levels (i.e. profiles).

Q2: How is the configuration profile improving the performance?
A2: The performance improvement is achieved by reducing the memory
    footprint of a meter object, which results in better cache utilization
    for the typical case when large arrays of meter objects are used. The
    internal data structures stored for each meter object contain:
       a) Constant fields: Low level translation of the configuration
          parameters that does not change post-configuration. This is
          really duplicated for all meters that use the same
          configuration. This is the configuration profile data that is
          moved away from the meter object. Current size (implementation
          dependent): srTCM = 32 bytes, trTCM = 32 bytes.
       b) Variable fields: Time stamps and running counters that change
          during the on-going traffic metering process. Current size
          (implementation dependent): srTCM = 24 bytes, trTCM = 32 bytes.
          Therefore, by moving the constant fields to a separate profile
          data structure shared by all the meters with the same
          configuration, the size of the meter object is reduced by ~50%.

Signed-off-by: Cristian Dumitrescu <25468b8a3698eeb3c368247f8635924bb4a1ce2c@intel.com>
Signed-off-by: Jasvinder Singh <97b766ecf460b59e2781d4fc0469065206870f5c@intel.com>
"
740feaf349b10ca166aaaa77aa903368e1897f16,anlaneg/dpdk,"ethdev: remove driver name from device private data

rte_driver->name has the driver name and all physical and virtual
devices has access to it.

Previously it was not possible for virtual ethernet devices to access
rte_driver->name field (because eth_dev used to keep only pci_dev),
and it was required to save driver name in the device private struct.

After re-works on bus and vdev, it is possible for all bus types to
access rte_driver.

It is able to remove the driver name from ethdev device private data and
use eth_dev->device->driver->name.

Signed-off-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
Acked-by: Shreyansh Jain <9744844f062a9f6cf95f66f06508da54c8fc7929@nxp.com>
Acked-by: Jan Blunck <428a1e03bf18d7720952a3563b48222e4a94a135@infradead.org>
"
975ffea6f67152088dc941426a1f3ef631cece85,anlaneg/dpdk,"net/i40e: remove DPDK PF version specific code

This patch removes unused code related to DPDK PF version.

Signed-off-by: Beilei Xing <7fb7e49de6d75fb4140bfcdada52e66859d93ebd@intel.com>
"
7f0034275a242af43c0108daf7a9add6677ab62b,anlaneg/dpdk,"cryptodev: remove digest length from crypto op

Digest length was duplicated in the authentication transform
and the crypto operation structures.

Since digest length is not expected to change in a same
session, it is removed from the crypto operation.

Also, the length has been shrunk to 16 bits,
which should be sufficient for any digest.

Signed-off-by: Pablo de Lara <28355d9cfe41bb8148aea0fb24f47aae8f4217a1@intel.com>
Acked-by: Declan Doherty <b4388acd850cd8caad5000a112795063f04807ac@intel.com>
Acked-by: Akhil Goyal <74d7c4c993a22c1d4f60c46ff3d95c969a24a25c@nxp.com>
Acked-by: Fiona Trahe <7ba562cc372916cd557d0be347608f8b4da4f746@intel.com>
"
de96fe68ae95990f5ce2cd4c8d9547ab62d2a810,anlaneg/dpdk,"net/tap: add basic flow API patterns and actions

Supported flow rules are now mapped to TC rules on the tap netdevice.
The netlink message used for creating the TC rule is stored in struct
rte_flow. That way, by simply changing a metadata in it, we can require
for the rule deletion without further parsing.

Supported items:
- eth: src and dst (with variable masks), and eth_type (0xffff mask).
- vlan: vid, pcp, tpid, but not eid.
- ipv4/6: src and dst (with variable masks), and ip_proto (0xffff mask).
- udp/tcp: src and dst port (0xffff) mask.

Supported actions:
- DROP
- QUEUE
- PASSTHRU

It is generally not possible to provide a ""last"" item. However, if the
""last"" item, once masked, is identical to the masked spec, then it is
supported.

Only IPv4/6 and MAC addresses can use a variable mask. All other
items need a full mask (exact match).

Support for VLAN requires kernel headers >= 4.9, checked using
auto-config.sh.

Signed-off-by: Pascal Mazon <f8a8edbbccb52ea5be26461cb34f4752a08c0c30@6wind.com>
Acked-by: Olga Shern <94f6c1998eaef6808fd787423400815213eeb35d@mellanox.com>
Acked-by: Keith Wiles <f97a07384723981b442bf4ce37d40edbfd008094@intel.com>
"
36271e74466cd307ebe13ef30fdb275c395d7012,anlaneg/dpdk,"net/mlx5: update prerequisites for upcoming enhancements

The latest version of Mellanox OFED exposes hardware definitions necessary
to implement data path operation bypassing Verbs. Update the minimum
version requirement to MLNX_OFED >= 3.3 and clean up compatibility checks
for previous releases.

Signed-off-by: Nelio Laranjeiro <2f8dd9032d5b85ca4b53dec8ce664eb6998836be@6wind.com>
Signed-off-by: Adrien Mazarguil <9d39ea493ca46c560334f650ac5d4b5ffbcb5cf0@6wind.com>
"
1cbe755fef47d65c88222eb8130a1dcab36a4adf,anlaneg/dpdk,"ethdev: rename UDP tunnel port functions

The names of function for tunnel port configuration are not
accurate. They're tunnel_add/del, better change them to
tunnel_port_add/del.
The old functions are directly replaced because the API and ABI
compatibility of ethdev are already broken in 16.04.

Signed-off-by: Wenzhuo Lu <58cb9036bdff9a5412edc3b9f70e105ccf59954f@intel.com>
Acked-by: Konstantin Ananyev <cbd5212b59ab42a210d72992d23a3aa17cfd3eaf@intel.com>
"
7b25dc7b7e5a098552c0d640eee132b83d42db56,apache/spark,"[SPARK-13466] [SQL] Remove projects that become redundant after column pruning rule

JIRA: https://issues.apache.org/jira/browse/SPARK-13466

## What changes were proposed in this pull request?

With column pruning rule in optimizer, some Project operators will become redundant. We should remove these redundant Projects.

For an example query:

    val input = LocalRelation('key.int, 'value.string)

    val query =
      Project(Seq($""x.key"", $""y.key""),
        Join(
          SubqueryAlias(""x"", input),
          BroadcastHint(SubqueryAlias(""y"", input)), Inner, None))

After the first run of column pruning, it would like:

    Project(Seq($""x.key"", $""y.key""),
      Join(
        Project(Seq($""x.key""), SubqueryAlias(""x"", input)),
        Project(Seq($""y.key""),      <-- inserted by the rule
        BroadcastHint(SubqueryAlias(""y"", input))),
        Inner, None))

Actually we don't need the outside Project now. This patch will remove it:

    Join(
      Project(Seq($""x.key""), SubqueryAlias(""x"", input)),
      Project(Seq($""y.key""),
      BroadcastHint(SubqueryAlias(""y"", input))),
      Inner, None)

## How was the this patch tested?

Unit test is added into ColumnPruningSuite.

Author: Liang-Chi Hsieh <viirya@gmail.com>

Closes #11341 from viirya/remove-redundant-project.
"
9032f7c0d5f1ae7985a20d54ca04c297201aae85,apache/spark,"SPARK-1160: Deprecate toArray in RDD

https://spark-project.atlassian.net/browse/SPARK-1160

reported by @mateiz: ""It's redundant with collect() and the name doesn't make sense in Java, where we return a List (we can't return an array due to the way Java generics work). It's also missing in Python.""

In this patch, I deprecated the method and changed the source files using it by replacing toArray with collect() directly

Author: CodingCat <zhunansjtu@gmail.com>

Closes #105 from CodingCat/SPARK-1060 and squashes the following commits:

286f163 [CodingCat] deprecate in JavaRDDLike
ee17b4e [CodingCat] add message and since
2ff7319 [CodingCat] deprecate toArray in RDD
"
e4c51d21135978908f7f4a46683f70ef98b720ec,apache/spark,"Address Patrick's and Reynold's comments

Aside from trivial formatting changes, use nulls instead of Options for
DiskMapIterator, and add documentation for spark.shuffle.externalSorting
and spark.shuffle.memoryFraction.

Also, set spark.shuffle.memoryFraction to 0.3, and spark.storage.memoryFraction = 0.6.
"
6dfe38a03a619282815b4032243a20414eea712e,apache/spark,"[SPARK-4397][Core] Cleanup 'import SparkContext._' in core

This PR cleans up `import SparkContext._` in core for SPARK-4397(#3262) to prove it really works well.

Author: zsxwing <zsxwing@gmail.com>

Closes #3530 from zsxwing/SPARK-4397-cleanup and squashes the following commits:

04e2273 [zsxwing] Cleanup 'import SparkContext._' in core
"
d26f7cb0121767da678bbbbf3a0e31c63d5e3159,apache/spark,"[SPARK-14971][ML][PYSPARK] PySpark ML Params setter code clean up

## What changes were proposed in this pull request?
PySpark ML Params setter code clean up.
For examples,
```setInputCol``` can be simplified from
```
self._set(inputCol=value)
return self
```
to:
```
return self._set(inputCol=value)
```
This is a pretty big sweeps, and we cleaned wherever possible.
## How was this patch tested?
Exist unit tests.

Author: Yanbo Liang <ybliang8@gmail.com>

Closes #12749 from yanboliang/spark-14971.
"
d8cf67858988bed287c0125095729f7f808aabad,apache/spark,"[SQL] Remove unnecessary case in HiveContext.toHiveString

a follow up of #3547
/cc marmbrus

Author: scwf <wangfei1@huawei.com>

Closes #3563 from scwf/rnc and squashes the following commits:

9395661 [scwf] remove unnecessary condition
"
ebdfa6bb9766209bc5a3c4241fa47141c5e9c5cb,apache/spark,"Using name yarn-alpha/yarn instead of yarn-2.0/yarn-2.2
"
c27718f376483dbe6290de612094c8d4ce9b16b4,apache/spark,"[SPARK-2781][SQL] Check resolution of LogicalPlans in Analyzer.

LogicalPlan contains a ‘resolved’ attribute indicating that all of its execution requirements have been resolved. This attribute is not checked before query execution. The analyzer contains a step to check that all Expressions are resolved, but this is not equivalent to checking all LogicalPlans. In particular, the Union plan’s implementation of ‘resolved’ verifies that the types of its children’s columns are compatible. Because the analyzer does not check that a Union plan is resolved, it is possible to execute a Union plan that outputs different types in the same column.  See SPARK-2781 for an example.

This patch adds two checks to the analyzer’s CheckResolution rule. First, each logical plan is checked to see if it is not resolved despite its children being resolved. This allows the ‘problem’ unresolved plan to be included in the TreeNodeException for reporting. Then as a backstop the root plan is checked to see if it is resolved, which recursively checks that the entire plan tree is resolved. Note that the resolved attribute is implemented recursively, and this patch also explicitly checks the resolved attribute on each logical plan in the tree. I assume the query plan trees will not be large enough for this redundant checking to meaningfully impact performance.

Because this patch starts validating that LogicalPlans are resolved before execution, I had to fix some cases where unresolved plans were passing through the analyzer as part of the implementation of the hive query system. In particular, HiveContext applies the CreateTables and PreInsertionCasts, and ExtractPythonUdfs rules manually after the analyzer runs. I moved these rules to the analyzer stage (for hive queries only), in the process completing a code TODO indicating the rules should be moved to the analyzer.

It’s worth noting that moving the CreateTables rule means introducing an analyzer rule with a significant side effect - in this case the side effect is creating a hive table. The rule will only attempt to create a table once even if its batch is executed multiple times, because it converts the InsertIntoCreatedTable plan it matches against into an InsertIntoTable. Additionally, these hive rules must be added to the Resolution batch rather than as a separate batch because hive rules rules may be needed to resolve non-root nodes, leaving the root to be resolved on a subsequent batch iteration. For example, the hive compatibility test auto_smb_mapjoin_14, and others, make use of a query plan where the root is a Union and its children are each a hive InsertIntoTable.

Mixing the custom hive rules with standard analyzer rules initially resulted in an additional failure because of policy differences between spark sql and hive when casting a boolean to a string. Hive casts booleans to strings as “true” / “false” while spark sql casts booleans to strings as “1” / “0” (causing the cast1.q test to fail). This behavior is a result of the BooleanCasts rule in HiveTypeCoercion.scala, and from looking at the implementation of BooleanCasts I think converting to to “1”/“0” is potentially a programming mistake. (If the BooleanCasts rule is disabled, casting produces “true”/“false” instead.) I believe “true” / “false” should be the behavior for spark sql - I changed the behavior so bools are converted to “true”/“false” to be consistent with hive, and none of the existing spark tests failed.

Finally, in some initial testing with hive it appears that an implicit type coercion of boolean to string results in a lowercase string, e.g. CONCAT( TRUE, “” ) -> “true” while an explicit cast produces an all caps string, e.g. CAST( TRUE AS STRING ) -> “TRUE”.  The change I’ve made just converts to lowercase strings in all cases.  I believe it is at least more correct than the existing spark sql implementation where all Cast expressions become “1” / “0”.

Author: Aaron Staple <aaron.staple@gmail.com>

Closes #1706 from staple/SPARK-2781 and squashes the following commits:

32683c4 [Aaron Staple] Fix compilation failure due to merge.
7c77fda [Aaron Staple] Move ExtractPythonUdfs to Analyzer's extendedRules in HiveContext.
d49bfb3 [Aaron Staple] Address review comments.
915b690 [Aaron Staple] Fix merge issue causing compilation failure.
701dcd2 [Aaron Staple] [SPARK-2781][SQL] Check resolution of LogicalPlans in Analyzer.
"
1070b566d4cde4e9a69ccd318747b218f5a44dc7,apache/spark,"Renaming Client => AppClient
"
ed04846e144db5bdab247c0e1fe2a47b99155c82,apache/spark,"[SPARK-11263][SPARKR] lintr Throws Warnings on Commented Code in Documentation

Clean out hundreds of `style: Commented code should be removed.` from lintr

Like these:
```
/opt/spark-1.6.0-bin-hadoop2.6/R/pkg/R/DataFrame.R:513:3: style: Commented code should be removed.
# sc <- sparkR.init()
  ^~~~~~~~~~~~~~~~~~~
/opt/spark-1.6.0-bin-hadoop2.6/R/pkg/R/DataFrame.R:514:3: style: Commented code should be removed.
# sqlContext <- sparkRSQL.init(sc)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/spark-1.6.0-bin-hadoop2.6/R/pkg/R/DataFrame.R:515:3: style: Commented code should be removed.
# path <- ""path/to/file.json""
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
```

tried without export or rdname, neither work
instead, added this `#' noRd` to suppress .Rd file generation

also updated `family` for DataFrame functions for longer descriptive text instead of `dataframe_funcs`
![image](https://cloud.githubusercontent.com/assets/8969467/10933937/17bf5b1e-8291-11e5-9777-40fc632105dc.png)

this covers *most* of 'Commented code' but I left out a few that looks legitimate.

Author: felixcheung <felixcheung_m@hotmail.com>

Closes #9463 from felixcheung/rlintr.
"
a13780670d8810a9fb52d8cc4e42d3c5155a8d1d,apache/spark,"Added a unit test for local-cluster mode and simplified some of the code involved in that
"
52b5bb0b7fabe6cc949f514c548f9fbc6a4fa181,apache/spark,"[SPARK-16476] Restructure MimaExcludes for easier union excludes

## What changes were proposed in this pull request?
It is currently fairly difficult to have proper mima excludes when we cut a version branch. I'm proposing a small change to take the exclude list out of the exclude function, and put it in a variable so we can easily union excludes.

After this change, we can bump pom.xml version to 2.1.0-SNAPSHOT, without bumping the diff base version. Note that I also deleted all the exclude rules for version 1.x, to cut down the size of the file.

## How was this patch tested?
N/A - this is a build infra change.

Author: Reynold Xin <rxin@databricks.com>

Closes #14128 from rxin/SPARK-16476.
"
5effc016c893ce917d535cc1b5026d8e4c846721,apache/spark,"[SPARK-16879][SQL] unify logical plans for CREATE TABLE and CTAS

## What changes were proposed in this pull request?

we have various logical plans for CREATE TABLE and CTAS: `CreateTableUsing`, `CreateTableUsingAsSelect`, `CreateHiveTableAsSelectLogicalPlan`. This PR unifies them to reduce the complexity and centralize the error handling.

## How was this patch tested?

existing tests

Author: Wenchen Fan <wenchen@databricks.com>

Closes #14482 from cloud-fan/table.
"
17def8cc1132a5c94d895dacba4217ef9a0e5bd0,apache/spark,"Refactor ExternalAppendOnlyMap to take in KVC instead of just KV
"
8b325b17ecdf013b7a6edcb7ee3773546bd914df,apache/spark,"[SPARK-18547][CORE] Propagate I/O encryption key when executors register.

This change modifies the method used to propagate encryption keys used during
shuffle. Instead of relying on YARN's UserGroupInformation credential propagation,
this change explicitly distributes the key using the messages exchanged between
driver and executor during registration. When RPC encryption is enabled, this means
key propagation is also secure.

This allows shuffle encryption to work in non-YARN mode, which means that it's
easier to write unit tests for areas of the code that are affected by the feature.

The key is stored in the SecurityManager; because there are many instances of
that class used in the code, the key is only guaranteed to exist in the instance
managed by the SparkEnv. This path was chosen to avoid storing the key in the
SparkConf, which would risk having the key being written to disk as part of the
configuration (as, for example, is done when starting YARN applications).

Tested by new and existing unit tests (which were moved from the YARN module to
core), and by running apps with shuffle encryption enabled.

Author: Marcelo Vanzin <vanzin@cloudera.com>

Closes #15981 from vanzin/SPARK-18547.
"
ff9ebfabb47e3439c7b78cb4e3c33423a1467a9a,apache/spark,"Merge pull request #762 from shivaram/sgd-cleanup

Refactor SGD options into a new class."
248067adbe90f93c7d5e23aa61b3072dfdf48a8a,apache/spark,"[SPARK-2961][SQL] Use statistics to prune batches within cached partitions

This PR is based on #1883 authored by marmbrus. Key differences:

1. Batch pruning instead of partition pruning

   When #1883 was authored, batched column buffer building (#1880) hadn't been introduced. This PR combines these two and provide partition batch level pruning, which leads to smaller memory footprints and can generally skip more elements. The cost is that the pruning predicates are evaluated more frequently (partition number multiplies batch number per partition).

1. More filters are supported

   Filter predicates consist of `=`, `<`, `<=`, `>`, `>=` and their conjunctions and disjunctions are supported.

Author: Cheng Lian <lian.cs.zju@gmail.com>

Closes #2188 from liancheng/in-mem-batch-pruning and squashes the following commits:

68cf019 [Cheng Lian] Marked sqlContext as @transient
4254f6c [Cheng Lian] Enables in-memory partition pruning in PartitionBatchPruningSuite
3784105 [Cheng Lian] Overrides InMemoryColumnarTableScan.sqlContext
d2a1d66 [Cheng Lian] Disables in-memory partition pruning by default
062c315 [Cheng Lian] HiveCompatibilitySuite code cleanup
16b77bf [Cheng Lian] Fixed pruning predication conjunctions and disjunctions
16195c5 [Cheng Lian] Enabled both disjunction and conjunction
89950d0 [Cheng Lian] Worked around Scala style check
9c167f6 [Cheng Lian] Minor code cleanup
3c4d5c7 [Cheng Lian] Minor code cleanup
ea59ee5 [Cheng Lian] Renamed PartitionSkippingSuite to PartitionBatchPruningSuite
fc517d0 [Cheng Lian] More test cases
1868c18 [Cheng Lian] Code cleanup, bugfix, and adding tests
cb76da4 [Cheng Lian] Added more predicate filters, fixed table scan stats for testing purposes
385474a [Cheng Lian] Merge branch 'inMemStats' into in-mem-batch-pruning
"
554403fd913685da879cf6a280c58a9fad19448a,apache/spark,"[SQL] Improve DataFrame API error reporting

1. Throw UnsupportedOperationException if a Column is not computable.
2. Perform eager analysis on DataFrame so we can catch errors when they happen (not when an action is run).

Author: Reynold Xin <rxin@databricks.com>
Author: Davies Liu <davies@databricks.com>

Closes #4296 from rxin/col-computability and squashes the following commits:

6527b86 [Reynold Xin] Merge pull request #8 from davies/col-computability
fd92bc7 [Reynold Xin] Merge branch 'master' into col-computability
f79034c [Davies Liu] fix python tests
5afe1ff [Reynold Xin] Fix scala test.
17f6bae [Reynold Xin] Various fixes.
b932e86 [Reynold Xin] Added eager analysis for error reporting.
e6f00b8 [Reynold Xin] [SQL][API] ComputableColumn vs IncomputableColumn
"
09c7179e812a06cb43a4975bca15d1b9963da975,apache/spark,"MetricsServlet code refactor according to comments
"
c03299a18b4e076cabb4b7833a1e7632c5c0dabe,apache/spark,"[SPARK-4233] [SPARK-4367] [SPARK-3947] [SPARK-3056] [SQL] Aggregation Improvement

This is the first PR for the aggregation improvement, which is tracked by https://issues.apache.org/jira/browse/SPARK-4366 (umbrella JIRA). This PR contains work for its subtasks, SPARK-3056, SPARK-3947, SPARK-4233, and SPARK-4367.

This PR introduces a new code path for evaluating aggregate functions. This code path is guarded by `spark.sql.useAggregate2` and by default the value of this flag is true.

This new code path contains:
* A new aggregate function interface (`AggregateFunction2`) and 7 built-int aggregate functions based on this new interface (`AVG`, `COUNT`, `FIRST`, `LAST`, `MAX`, `MIN`, `SUM`)
* A UDAF interface (`UserDefinedAggregateFunction`) based on the new code path and two example UDAFs (`MyDoubleAvg` and `MyDoubleSum`).
* A sort-based aggregate operator (`Aggregate2Sort`) for the new aggregate function interface .
* A sort-based aggregate operator (`FinalAndCompleteAggregate2Sort`) for distinct aggregations (for distinct aggregations the query plan will use `Aggregate2Sort` and `FinalAndCompleteAggregate2Sort` together).

With this change, `spark.sql.useAggregate2` is `true`, the flow of compiling an aggregation query is:
1. Our analyzer looks up functions and returns aggregate functions built based on the old aggregate function interface.
2. When our planner is compiling the physical plan, it tries try to convert all aggregate functions to the ones built based on the new interface. The planner will fallback to the old code path if any of the following two conditions is true:
* code-gen is disabled.
* there is any function that cannot be converted (right now, Hive UDAFs).
* the schema of grouping expressions contain any complex data type.
* There are multiple distinct columns.

Right now, the new code path handles a single distinct column in the query (you can have multiple aggregate functions using that distinct column). For a query having a aggregate function with DISTINCT and regular aggregate functions, the generated plan will do partial aggregations for those regular aggregate function.

Thanks chenghao-intel for his initial work on it.

Author: Yin Huai <yhuai@databricks.com>
Author: Michael Armbrust <michael@databricks.com>

Closes #7458 from yhuai/UDAF and squashes the following commits:

7865f5e [Yin Huai] Put the catalyst expression in the comment of the generated code for it.
b04d6c8 [Yin Huai] Remove unnecessary change.
f1d5901 [Yin Huai] Merge remote-tracking branch 'upstream/master' into UDAF
35b0520 [Yin Huai] Use semanticEquals to replace grouping expressions in the output of the aggregate operator.
3b43b24 [Yin Huai] bug fix.
00eb298 [Yin Huai] Make it compile.
a3ca551 [Yin Huai] Merge remote-tracking branch 'upstream/master' into UDAF
e0afca3 [Yin Huai] Gracefully fallback to old aggregation code path.
8a8ac4a [Yin Huai] Merge remote-tracking branch 'upstream/master' into UDAF
88c7d4d [Yin Huai] Enable spark.sql.useAggregate2 by default for testing purpose.
dc96fd1 [Yin Huai] Many updates:
85c9c4b [Yin Huai] newline.
43de3de [Yin Huai] Merge remote-tracking branch 'upstream/master' into UDAF
c3614d7 [Yin Huai] Handle single distinct column.
68b8ee9 [Yin Huai] Support single distinct column set. WIP
3013579 [Yin Huai] Format.
d678aee [Yin Huai] Remove AggregateExpressionSuite.scala since our built-in aggregate functions will be based on AlgebraicAggregate and we need to have another way to test it.
e243ca6 [Yin Huai] Add aggregation iterators.
a101960 [Yin Huai] Change MyJavaUDAF to MyDoubleSum.
594cdf5 [Yin Huai] Change existing AggregateExpression to AggregateExpression1 and add an AggregateExpression as the common interface for both AggregateExpression1 and AggregateExpression2.
380880f [Yin Huai] Merge remote-tracking branch 'upstream/master' into UDAF
0a827b3 [Yin Huai] Add comments and doc. Move some classes to the right places.
a19fea6 [Yin Huai] Add UDAF interface.
262d4c4 [Yin Huai] Make it compile.
b2e358e [Yin Huai] Merge remote-tracking branch 'upstream/master' into UDAF
6edb5ac [Yin Huai] Format update.
70b169c [Yin Huai] Remove groupOrdering.
4721936 [Yin Huai] Add CheckAggregateFunction to extendedCheckRules.
d821a34 [Yin Huai] Cleanup.
32aea9c [Yin Huai] Merge remote-tracking branch 'upstream/master' into UDAF
5b46d41 [Yin Huai] Bug fix.
aff9534 [Yin Huai] Make Aggregate2Sort work with both algebraic AggregateFunctions and non-algebraic AggregateFunctions.
2857b55 [Yin Huai] Merge remote-tracking branch 'upstream/master' into UDAF
4435f20 [Yin Huai] Add ConvertAggregateFunction to HiveContext's analyzer.
1b490ed [Michael Armbrust] make hive test
8cfa6a9 [Michael Armbrust] add test
1b0bb3f [Yin Huai] Do not bind references in AlgebraicAggregate and use code gen for all places.
072209f [Yin Huai] Bug fix: Handle expressions in grouping columns that are not attribute references.
f7d9e54 [Michael Armbrust] Merge remote-tracking branch 'apache/master' into UDAF
39ee975 [Yin Huai] Code cleanup: Remove unnecesary AttributeReferences.
b7720ba [Yin Huai] Add an analysis rule to convert aggregate function to the new version.
5c00f3f [Michael Armbrust] First draft of codegen
6bbc6ba [Michael Armbrust] now with correct answers\!
f7996d0 [Michael Armbrust] Add AlgebraicAggregate
dded1c5 [Yin Huai] wip
"
95cd643aa954b7e4229e94fa8bdc99bf3b2bb1da,apache/spark,"[SPARK-3885] Provide mechanism to remove accumulators once they are no longer used

Instead of storing a strong reference to accumulators, I've replaced this with a weak reference and updated any code that uses these accumulators to check whether the reference resolves before using the accumulator. A weak reference will be cleared when there is no longer an existing copy of the variable versus using a soft reference in which case accumulators would only be cleared when the GC explicitly ran out of memory.

Author: Ilya Ganelin <ilya.ganelin@capitalone.com>

Closes #4021 from ilganeli/SPARK-3885 and squashes the following commits:

4ba9575 [Ilya Ganelin]  Fixed error in test suite
8510943 [Ilya Ganelin] Extra code
bb76ef0 [Ilya Ganelin] File deleted somehow
283a333 [Ilya Ganelin] Added cleanup method for accumulators to remove stale references within Accumulators.original to accumulators that are now out of scope
345fd4f [Ilya Ganelin] Merge remote-tracking branch 'upstream/master' into SPARK-3885
7485a82 [Ilya Ganelin] Fixed build error
c8e0f2b [Ilya Ganelin] Added working test for accumulator garbage collection
94ce754 [Ilya Ganelin] Still not being properly garbage collected
8722b63 [Ilya Ganelin] Fixing gc test
7414a9c [Ilya Ganelin] Added test for accumulator garbage collection
18d62ec [Ilya Ganelin] Updated to throw Exception when accessing a GCd accumulator
9a81928 [Ilya Ganelin] Reverting permissions changes
28f705c [Ilya Ganelin] Merge remote-tracking branch 'upstream/master' into SPARK-3885
b820ab4b [Ilya Ganelin] reset
d78f4bf [Ilya Ganelin] Removed obsolete comment
0746e61 [Ilya Ganelin] Updated DAGSchedulerSUite to fix bug
3350852 [Ilya Ganelin] Updated DAGScheduler and Suite to correctly use new implementation of WeakRef Accumulator storage
c49066a [Ilya Ganelin] Merge remote-tracking branch 'upstream/master' into SPARK-3885
cbb9023 [Ilya Ganelin] Merge remote-tracking branch 'upstream/master' into SPARK-3885
a77d11b [Ilya Ganelin] Updated Accumulators class to store weak references instead of strong references to allow garbage collection of old accumulators
"
c33f802044c02025c3e4530add1b82586156cbb0,apache/spark,"Simple cleanup on Spark's Scala code while testing core and yarn modules:
-) Remove some of unused imports as I found them
-) Remove "";"" in the imports statements
-) Remove () at the end of method call like size that does not have size effect.
"
17e62113d446c87d0313daa2ac230867591627be,apache/spark,"Moved DeployMessage's into its own DeployMessages object.
Also renamed MasterState to MasterStateResponse and WorkerState to WorkerStateResponse for clarity.
"
3886b5493341b2abdf12d4d8052145399a6e590a,apache/spark,"A few small scheduler / job description changes.

1. Renamed SparkContext.addLocalProperty to setLocalProperty. And allow this function to unset a property.

2. Renamed SparkContext.setDescription to setCurrentJobDescription.

3. Throw an exception if the fair scheduler allocation file is invalid.
"
6871cc8f3eb54ad674dea89645599c92a8b94415,apache/spark,"[SPARK-12718][SPARK-13720][SQL] SQL generation support for window functions

## What changes were proposed in this pull request?

Add SQL generation support for window functions. The idea is simple, just treat `Window` operator like `Project`, i.e. add subquery to its child when necessary, generate a `SELECT ... FROM ...` SQL string, implement `sql` method for window related expressions, e.g. `WindowSpecDefinition`, `WindowFrame`, etc.

This PR also fixed SPARK-13720 by improving the process of adding extra `SubqueryAlias`(the `RecoverScopingInfo` rule). Before this PR, we update the qualifiers in project list while adding the subquery. However, this is incomplete as we need to update qualifiers in all ancestors that refer attributes here. In this PR, we split `RecoverScopingInfo` into 2 rules: `AddSubQuery` and `UpdateQualifier`. `AddSubQuery` only add subquery if necessary, and `UpdateQualifier` will re-propagate and update qualifiers bottom up.

Ideally we should put the bug fix part in an individual PR, but this bug also blocks the window stuff, so I put them together here.

Many thanks to gatorsmile for the initial discussion and test cases!

## How was this patch tested?

new tests in `LogicalPlanToSQLSuite`

Author: Wenchen Fan <wenchen@databricks.com>

Closes #11555 from cloud-fan/window.
"
2051428173d8cd548702eb1a2e1c1ca76b8f2fd5,apache/spark,"[SPARK-20980][SQL] Rename `wholeFile` to `multiLine` for both CSV and JSON

### What changes were proposed in this pull request?
The current option name `wholeFile` is misleading for CSV users. Currently, it is not representing a record per file. Actually, one file could have multiple records. Thus, we should rename it. Now, the proposal is `multiLine`.

### How was this patch tested?
N/A

Author: Xiao Li <gatorsmile@gmail.com>

Closes #18202 from gatorsmile/renameCVSOption.
"
b69e7166ba76d35d75b98015b0d39a8a004a7436,apache/spark,"Coalescer now uses current preferred locations for derived RDDs. Made run() in DAGScheduler thread safe and added a method to be able to ask it for preferred locations. Added a similar method that wraps the former inside SparkContext.
"
65b987c3ed79b8362dda53b70434652d2d4840da,apache/spark,"[SPARK-4397][Core] Reorganize 'implicit's to improve the API convenience

This PR moved `implicit`s to `package object` and `companion object` to enable the Scala compiler search them automatically without explicit importing.

It should not break any API. A test project for backforward compatibility is [here](https://github.com/zsxwing/SPARK-4397-Backforward-Compatibility). It proves the codes compiled with Spark 1.1.0 can run with this PR.

To summarize, the changes are:

* Deprecated the old implicit conversion functions: this preserves binary compatibility for code compiled against earlier versions of Spark.
* Removed ""implicit"" from them so they are just normal functions: this made sure the compiler doesn't get confused and warn about multiple implicits in scope.
* Created new implicit functions in package rdd object, which is part of the scope that scalac will search when looking for implicit conversions on various RDD objects.

The disadvantage is there are duplicated codes in SparkContext for backforward compatibility.

Author: zsxwing <zsxwing@gmail.com>

Closes #3262 from zsxwing/SPARK-4397 and squashes the following commits:

fc30314 [zsxwing] Update the comments
9c27aff [zsxwing] Move implicit functions to object RDD and forward old functions to new implicit ones directly
2b5f5a4 [zsxwing] Comments for the deprecated functions
52353de [zsxwing] Remove private[spark] from object WritableConverter
34641d4 [zsxwing] Move ImplicitSuite to org.apache.sparktest
7266218 [zsxwing] Add comments to warn the duplicate codes in SparkContext
185c12f [zsxwing] Remove simpleWritableConverter from SparkContext
3bdcae2 [zsxwing] Move WritableConverter implicits to object WritableConverter
9b73188 [zsxwing] Fix the code style issue
3ac4f07 [zsxwing] Add license header
1eda9e4 [zsxwing] Reorganize 'implicit's to improve the API convenience
"
1de1d703bf6b7ca14f7b40bbefe9bf6fd6c8ce47,apache/spark,"SPARK-1939 Refactor takeSample method in RDD to use ScaSRS

Modified the takeSample method in RDD to use the ScaSRS sampling technique to improve performance. Added a private method that computes sampling rate > sample_size/total to ensure sufficient sample size with success rate >= 0.9999. Added a unit test for the private method to validate choice of sampling rate.

Author: Doris Xin <doris.s.xin@gmail.com>
Author: dorx <doris.s.xin@gmail.com>
Author: Xiangrui Meng <meng@databricks.com>

Closes #916 from dorx/takeSample and squashes the following commits:

5b061ae [Doris Xin] merge master
444e750 [Doris Xin] edge cases
3de882b [dorx] Merge pull request #2 from mengxr/SPARK-1939
82dde31 [Xiangrui Meng] update pyspark's takeSample
48d954d [Doris Xin] remove unused imports from RDDSuite
fb1452f [Doris Xin] allowing num to be greater than count in all cases
1481b01 [Doris Xin] washing test tubes and making coffee
dc699f3 [Doris Xin] give back imports removed by accident in rdd.py
64e445b [Doris Xin] logwarnning as soon as it enters the while loop
55518ed [Doris Xin] added TODO for logging in rdd.py
eff89e2 [Doris Xin] addressed reviewer comments.
ecab508 [Doris Xin] ""fixed checkstyle violation
0a9b3e3 [Doris Xin] ""reviewer comment addressed""
f80f270 [Doris Xin] Merge branch 'master' into takeSample
ae3ad04 [Doris Xin] fixed edge cases to prevent overflow
065ebcd [Doris Xin] Merge branch 'master' into takeSample
9bdd36e [Doris Xin] Check sample size and move computeFraction
e3fd6a6 [Doris Xin] Merge branch 'master' into takeSample
7cab53a [Doris Xin] fixed import bug in rdd.py
ffea61a [Doris Xin] SPARK-1939: Refactor takeSample method in RDD
1441977 [Doris Xin] SPARK-1939 Refactor takeSample method in RDD to use ScaSRS
"
83061be697f69f7e39deb9cda45742a323714231,apache/spark,"[SPARK-14858] [SQL] Enable subquery pushdown

The previous subquery PRs did not include support for pushing subqueries used in filters (`WHERE`/`HAVING`) down. This PR adds this support. For example :
```scala
range(0, 10).registerTempTable(""a"")
range(5, 15).registerTempTable(""b"")
range(7, 25).registerTempTable(""c"")
range(3, 12).registerTempTable(""d"")
val plan = sql(""select * from a join b on a.id = b.id left join c on c.id = b.id where a.id in (select id from d)"")
plan.explain(true)
```
Leads to the following Analyzed & Optimized plans:
```
== Parsed Logical Plan ==
...

== Analyzed Logical Plan ==
id: bigint, id: bigint, id: bigint
Project [id#0L,id#4L,id#8L]
+- Filter predicate-subquery#16 [(id#0L = id#12L)]
   :  +- SubqueryAlias predicate-subquery#16 [(id#0L = id#12L)]
   :     +- Project [id#12L]
   :        +- SubqueryAlias d
   :           +- Range 3, 12, 1, 8, [id#12L]
   +- Join LeftOuter, Some((id#8L = id#4L))
      :- Join Inner, Some((id#0L = id#4L))
      :  :- SubqueryAlias a
      :  :  +- Range 0, 10, 1, 8, [id#0L]
      :  +- SubqueryAlias b
      :     +- Range 5, 15, 1, 8, [id#4L]
      +- SubqueryAlias c
         +- Range 7, 25, 1, 8, [id#8L]

== Optimized Logical Plan ==
Join LeftOuter, Some((id#8L = id#4L))
:- Join Inner, Some((id#0L = id#4L))
:  :- Join LeftSemi, Some((id#0L = id#12L))
:  :  :- Range 0, 10, 1, 8, [id#0L]
:  :  +- Range 3, 12, 1, 8, [id#12L]
:  +- Range 5, 15, 1, 8, [id#4L]
+- Range 7, 25, 1, 8, [id#8L]

== Physical Plan ==
...
```
I have also taken the opportunity to move quite a bit of code around:
- Rewriting subqueris and pulling out correlated predicated from subqueries has been moved into the analyzer. The analyzer transforms `Exists` and `InSubQuery` into `PredicateSubquery` expressions. A PredicateSubquery exposes the 'join' expressions and the proper references. This makes things like type coercion, optimization and planning easier to do.
- I have added support for `Aggregate` plans in subqueries. Any correlated expressions will be added to the grouping expressions. I have removed support for `Union` plans, since pulling in an outer reference from beneath a Union has no value (a filtered value could easily be part of another Union child).
- Resolution of subqueries is now done using `OuterReference`s. These are used to wrap any outer reference; this makes the identification of these references easier, and also makes dealing with duplicate attributes in the outer and inner plans easier. The resolution of subqueries initially used a resolution loop which would alternate between calling the analyzer and trying to resolve the outer references. We now use a dedicated analyzer which uses a special rule for outer reference resolution.

These changes are a stepping stone for enabling correlated scalar subqueries, enabling all Hive tests & allowing us to use predicate subqueries anywhere.

Current tests and added test cases in FilterPushdownSuite.

Author: Herman van Hovell <hvanhovell@questtec.nl>

Closes #12720 from hvanhovell/SPARK-14858.
"
23f966f47523f85ba440b4080eee665271f53b5e,apache/spark,"[SPARK-3930] [SPARK-3933] Support fixed-precision decimal in SQL, and some optimizations

- Adds optional precision and scale to Spark SQL's decimal type, which behave similarly to those in Hive 13 (https://cwiki.apache.org/confluence/download/attachments/27362075/Hive_Decimal_Precision_Scale_Support.pdf)
- Replaces our internal representation of decimals with a Decimal class that can store small values in a mutable Long, saving memory in this situation and letting some operations happen directly on Longs

This is still marked WIP because there are a few TODOs, but I'll remove that tag when done.

Author: Matei Zaharia <matei@databricks.com>

Closes #2983 from mateiz/decimal-1 and squashes the following commits:

35e6b02 [Matei Zaharia] Fix issues after merge
227f24a [Matei Zaharia] Review comments
31f915e [Matei Zaharia] Implement Davies's suggestions in Python
eb84820 [Matei Zaharia] Support reading/writing decimals as fixed-length binary in Parquet
4dc6bae [Matei Zaharia] Fix decimal support in PySpark
d1d9d68 [Matei Zaharia] Fix compile error and test issues after rebase
b28933d [Matei Zaharia] Support decimal precision/scale in Hive metastore
2118c0d [Matei Zaharia] Some test and bug fixes
81db9cb [Matei Zaharia] Added mutable Decimal that will be more efficient for small precisions
7af0c3b [Matei Zaharia] Add optional precision and scale to DecimalType, but use Unlimited for now
ec0a947 [Matei Zaharia] Make the result of AVG on Decimals be Decimal, not Double
"
a7af6cd2eaf9f6ff491b9e1fabfc9c6f3d0f54bf,apache/spark,"[SPARK-14281][TESTS] Fix java8-tests and simplify their build

This patch fixes a compilation / build break in Spark's `java8-tests` and refactors their POM to simplify the build. See individual commit messages for more details.

Author: Josh Rosen <joshrosen@databricks.com>

Closes #12073 from JoshRosen/fix-java8-tests.
"
6847b00cebb6c7be2b9367a6f2fbfacef762f535,bitpay/copay,"wip refactor formaters - clean services - ref styles
"
c10bcf0cdbcee636887ab412e49cecc6ed4eb9f0,bitpay/copay,"Merge pull request #3 from matiu/gab1

Refactor profile creation"
4b8e18735db398b1f6a6df782b92bd40a040e721,bitpay/copay,"Rename manage by profile. Created a new page ""createWallet""
"
23b1d77ec18c9d66ae55df01bb537464a1ea12fc,bitpay/copay,"Merge pull request #5476 from cmgustavo/ref/coinbase-02

Fix first link to your account. Removes unused variables. Fix spinner"
073b063a48dd4e39362d35df233c6bc82711d34e,bitpay/copay,"improve tx proposal list item styling
"
4c1fa3d7b45f3bffa5b261e5369b20e64de00896,bitpay/copay,"Fix angular issue if hide the top-bar using ""ng-if"" instead ""ng-show"". Same dark blue background when typing the PIN
"
00ca9f1c32f397ec67b6b8d4ddfca06d35ff4d2d,bitpay/copay,"make unit configurable in settings. update after @cmgustavo comments
"
73c2fec6c92a598b4214bb026851594f47e14e6f,bitpay/copay,"Fix parse error of TXP. Removes unused variables
"
02140af96add48d490374fa01c260102606104a3,bitpay/copay,"cancel feature refactor
"
4b80ed37b1480bf6892ad9107526cb0873ef1bda,bitpay/copay,"Merge pull request #8000 from gabrielbazan7/feat/processes

[V4] FEAT: Succes Modal after re-broadcast a transaction, rename proc…"
8035846fafb7e5e5dd4fe136c17110af9a61c1ec,bitpay/copay,"feat(build): use cordova-custom-config, remove unnecessary hooks
"
06c83a8abad7abac6aec8024cda9c6ab99f0906e,bitpay/copay,"Move files to /model
"
0718b8b5a112ea44b11dca4eb06476cb8aae1d74,bitpay/copay,"Merge pull request #8076 from Gamboster/fix/renameModal

Fix: success Modal renamed to finish modal"
f80f2b87754d690209fc5eb232ba0eb6e235cfe6,bitpay/copay,"better balance collapse animation performance on android
"
e59fc26f0d485ceb0d11f784455d9ac6acf14e31,bitpay/copay,"Merge pull request #1716 from matiaspando/iss1700

Replaced a call to a function for a variable"
18ffaa172a2648fc32280a43b7754ff88abf5665,bitpay/copay,"refactor txProposal input signature handling
"
e992b976e0f073dd6424af0ed7477868836b59fb,bitpay/copay,"settings: refactor views
"
b405510db3d4f12336ac34929fdcfae56268f1c2,bitpay/copay,"Improvement open TX modal
"
1c264deb2c053a71423914232b3149d0025974df,bitpay/copay,"test: use is_browser instead of try/catch to detect browser.
"
eb1aaf679c09d3385f6865fdb10952ca87a7ebda,bitpay/copay,"Merge pull request #243 from maraoz/optimize/addresses

Optimize address tab, with lazy loading"
a2d83d6c7c8e1ce55a546384d454350fd1c21180,bitpay/copay,"rename push notifications variables - fix log when enable/disable notifications
"
19b3d9bb1560dbd15ac0b133c2436408d3c5fa33,bitpay/copay,"refactor bitpay card
"
86a150608d5a23a11d03034d4deae70be92d6078,gentics/mesh,"Move classes in different packages
"
2da98a7aede7b56791518f0a3297f845c7177416,gentics/mesh,"Refactor mesh client
"
e9e07575e4f0c72bf1717e93e7b6f72ab9d4d5e4,gentics/mesh,"Add huge performance improvement to search query handling.
"
55e80091c09b060202a1a4d4d3f1c0006e8b0a74,gentics/mesh,"Fix various tests after transaction handler cleanup
"
8a132c7047f5c30088c90bed480907b468fe9f47,gentics/mesh,"Move interfaces into common module
"
d6aff116367b77534e7765a5fad447a6c5452af7,gentics/mesh,"Refactor search verticle tests
"
8d7825e7215e9f936990fce9a6636b3b62c1e3e9,gentics/mesh,"Cleanup of transactional usage
"
bd7c5f4efe1e2f962b88e819b46d8e84fee5ef83,gentics/mesh,"Refactor vertx hazelcast usage
"
c55bc222c6cfa060147c5b2a294e8ce3dbacfb17,gentics/mesh,"Move more es specific classes to elasticsearch module
"
16c011d4cd0e87f5b27942a43095c174026825fe,gentics/mesh,"Use dedicated database revision hash instead of mesh version to divide clusters
"
d16db85eebbb34801c753e19082de84903690876,google/gapid,"Vulkan:Unify the naming of 'recreate' atoms (#158)

"
2639f8f46a038b3a8c88cac5f3bbe74562512a06,google/wuffs,"Rename std/flate's decoder to flate_decoder.
"
124a329e735cd676d172e3a26d4a18292edd8143,google/wuffs,"Remove the obsolete is_marked method
"
a2cf739e52b6f9fa91b0a51a83c96c894a884a5d,google/wuffs,"Make an io_{reader,writer}'s buffer private
"
94c054a3412ed74615c88849ebc60d2be662fc94,google/wuffs,"Remove unused byte-swapping functions
"
83df6769ac007ae7d41546287ccb6dd1df727b1c,ipfs/go-ipfs,"Merge pull request #3856 from ipfs/feat/commands2.0

Extract and rework commands package"
37cf360db547ea3b0b3195e6597f9b4d5ce96ae9,ipfs/go-ipfs,"Merge pull request #3107 from ipfs/feat/routing/interfaces

routing: rework interfaces to make separation easier"
c01452e5ea6b03ebeffe76246980d697bb973db7,ipfs/go-ipfs,"move dht record code into new package
"
875d4a3e587dbc72b8a7d807e77fd5561de4b3e5,ipfs/go-ipfs,"Merge pull request #5609 from ipfs/gx/extract-files

gx: update to use extracted go-ipfs-files"
682686d91714f5327349c56cb76f36c1d2b44504,jabber-at/hp,"get rid of old settings.GPG
"
966512e25b90232d930685c1eb797e11237bd6ae,keybase/kbfs,"Merge pull request #531 from keybase/strib/KBFS-35-more-refactor-into-file-data

file_data: use for block changes, and supporting multiple levels of indirection in reads"
a2323f47fadff9b1364ca2840ea793e1b5073221,keybase/kbfs,"Split off code into kbfs{crypto,hash,sync} packages (#396)

This will enable serverutil to not depend on
libkbfs anymore.

Also make RootMetadata and UserQuotaInfo
not depend on Config."
4e508de23364e027b4af161de1c0562124e2e85a,keybase/kbfs,"key_manager: Rekey now adds new devices to old key bundles

When a new device is added, it needs to be added to all the previous
key bundles to be able to read the old data.  This commit refactors
Rekey() to do that.

Issue: #385
"
1b027bb40e1d2e7fcef0f373195583d8b5c34fa1,keybase/kbfs,"Vendor client/go/... (#1760)

Also vendor go-crypto and saltpack.

This pulls in a fix for HTTPSrv.

This also moves some types out of libkb."
b92f7f348b5e6c2ea42706fca1355ca1f948ce93,lriki/Lumino,"move core include files
"
e0e7755d561ebae108e2f5f02753004ae546b7ca,lriki/Lumino,"rename RenderFeatures
"
59270f527660b2ee5c8624c31f8a064ace1d9702,luci/luci-go,"luci-cron: Refactor how Engine interacts with TaskManagers.

Also add more stuff to it (like ability to persist task-specific state), and
add a check to prevent accidental override of Invocation entities if they are
modified concurrently (it should not be happening during normal workflow).

R=nodir@chromium.org,estaab@chromium.org
BUG=

Review URL: https://codereview.chromium.org/1524003002
"
efa670fa05214f2e20a565bb8dd82413a3d7d69f,phetsims/sun,"refactor RadioButtonGroup to use RadioButtonModel, see #119
"
4038bd331a6886d70d5a795a4a9f0817b0da38e8,ruby-x/rubyx,"clean up block names and export of qualified names makes assembler nicer to read
"
6eba363fb8cf1c47ef68714c0758ad21ff90302f,ruby-x/rubyx,"more speration

Separating vm and parfait
especially in method this is hairy, lots of ripples
bug is back in sod (i hope thats a good thing)
"
ee0a1ca8233311e3602ac41520c5278cb3f90f8d,ruby-x/rubyx,"renaming methods args and frame

to arguments_type and frame_type, because that is what they are
In honour of setup bug, where the types of those types were loaded,
instead of just them types
"
74216229338d7c293371435cc4bb752b04af871a,secdev/scapy,"BPF: import & code clean-up
"
d399eefb003d6488db616882bf3ae1f0d5a8ece7,spotify/scio,"Add *withAttributes Pubsub I/O (#546)

* Add Pubsub input and outputs with attribute support

* Remove extra space

* Remove unnecessary import

* Add idLabel and timestampLabel to saveAsPubsubWithAttributes

* Refactor pubsub inputs to use helper method

* Pull immutable jmap wrapper out into utils

* Use JMapWrapper for Pubsub attribute map
"
2b455076a96e2d1a706709aa94dd2c036a08dc73,spotify/styx,"Merge pull request #55 from spotify/dont-cleanup-on-debug-enabled

Disabled pods cleanup if debug is enabled"
19203ada4779e7ac2ca5bcb1b74a6dc47d9c1f88,spotify/styx,"Bulk optimize imports
"
bcac55dc553ec20de9d642bc7379760e576ccef0,spotify/styx,"Rename completed in Backfill
"
865b71ef5e736991a4327c8ca49dae8596c58f79,yiisoft/yii2,"cleanup CHANGELOGs
"
1085f1bd9b065157585cb558552839ee59f0dacd,yiisoft/yii2,"cleanup after #4092

fixes #4086
"
b7d6f6141afdca5ea31e6034c1a24215b4dfb9ba,yiisoft/yii2,"Added `isAssociative()` and `isIndexed()` to `yii\helpers\ArrayHelper`
"
bd589620d84103d0fb43c339bd0b152493dce22e,yiisoft/yii2,"Merge branch 'master' into elasticsearch

* master: (59 commits)
  Refactored hasMany and hasOne so that they support cross-DBMS relationship.
  removed unused asset.php files
  fixed composer.json autoload pathes
  fixed c&p error
  allow installing yii2-dev and get the Yii.php file in the same place
  updated dev composer.json dependencies
  added composer.json for yii2-dev package
  fixed broken UniqueValidator
  removed call to nonexistsend property
  cleanup redis AR
  refactored Model and redis AR to allow drop of RecordSchema
  refactored redis AR to relect the latest changes
  ""yii\swiftmailer\Mailer::createSwiftObject()"" simplified.
  fixed empty result in findByPk list
  fixed problem with not closed transaction in deleteAll()
  fixed broken test
  apply changes to db\AR -> redis\AR
  added dependency in db\AR -> redis\AR needs to be refactored later
  redis AR cleanup
  ensure atomicity of operations
  ...

Conflicts:
	tests/unit/data/config.php
"
42a58870fe5d81d970c9009f06dd523a8f76d129,yiisoft/yii2,"moved db interfaces and traits back to yii/db.
"
757a2ef99ba12716131ca395006dfc713518c89c,yiisoft/yii2,"Merge pull request #2106 from danschmidt5189/2103-rename-accessdeniedhttpexception

#2103 improves http exception consistency and adds new subclasses"
06feccff8b6ade03fd020256b030555eea69064e,yiisoft/yii2,"refactored query builder.
finished Sort.
"
4a201c7ad5b1baad3487d21d888f6e683052017f,yiisoft/yii2,"Removed unused variables
"
fc75ab87be5008807c529e0cb28a7911a71261d7,yiisoft/yii2,"Renamed ListViewBase → BaseListView
"
8277d43190942feeccc692e37a8ba85fa431f163,zeit/next.js,"Rewrite url when exporting only if there's a href. (#2316)

"
35b1b494877c37bcef36a1fa5cd7d2f190e21d06,zubairq/yazz,"Made node error handling more clear

We need to log errors more, and show information messages less
"
05b0ebc3bc2aaa84f58ba89edc5796f59d03116a,zubairq/yazz,"Move powershell subprocess into its own module

This is nice as it means that the NodeJS subprocesses are not just in child.js anymore. Powershell is moved to powershell.js
"
5c833466bcd2eb07cc12103af276a0a78b254e3a,zubairq/yazz,"Move the drivers data to sqlite

Still need to remove all the pouchdb driver code though
"
298cdd3864c1d87812cd580c42bcd06e54023a0a,AscEmu/AscEmu,"More rewrite and sorting in class World
"
bf190c20aa8f904439e86d9ae19bc1a8061e7a3f,AscEmu/AscEmu,"Add set and check AIScriptType functions. Renamed enum values.
"
8999833338afc8711f4bebb1935918e761768864,AscEmu/AscEmu,"Add set and check functions for AIState. Renamed enum values.
"
a3dc2f85814340ada66fa9ab4d4024c343f1a687,AscEmu/AscEmu,"Rewrite handlers for CMSG_MAIL_TAKE_ITEM
Add special cases to serialised packet SMSG_SEND_MAIL_RESULT
Removed file MailHandler.Legacy.cpp (everything is rewritten)
Style replaced types and a small amount of local variable renaming.
"
eadf5af4c83bf1f890512acb38ab7dfe482ca81c,AscEmu/AscEmu,"Scripting: Moved a bunch of MoonCreatureAI functions to base class CreatureAIScript.
 * NOTE the main goal of this is to get rid of MoonScripting.
"
5a8fcb0c335a43c4cadc66a9f7a1b61f2eccf796,AscEmu/AscEmu,"Corrected all itemsetids in items table
Added linked itemsetids for negative sets
Moved loading of items_linked_itemsets to an extra function
Changed all uint32 itemsetid values (ItemProto) to int32
Updated .char additemset to handle negative itemsets

Close #196 (the seitds are now correct, if some sets need a link to an other set use items_linked_itemsets table).
"
2230da8b9a4e15dbb8d72e5285e53ab2595c4789,AscEmu/AscEmu,"Extract AuraInterruptFlags.h
Fix Linux Compile
"
c7985de0a7f0769d6e4e112b18314aceecf2642c,Broadcom/dpdk,"remove unneeded tests for NULL when freeing

free() already handles NULL pointer.

Signed-off-by: David Marchand <f28529695cfa9e3e1eb84e7072aa626af4abb18e@6wind.com>
"
03d8f4710030645c138d8b0f74f5168db6954df9,Broadcom/dpdk,"ethdev: return named opaque type instead of void pointer

""struct rte_eth_rxtx_callback"" is defined as internal data structure and
used as named opaque type.

So the functions that are adding callbacks can return objects in this
type instead of void pointer.

Also const qualifier added to ""struct rte_eth_rxtx_callback *"" to
protect it better from application modification.

Signed-off-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
Acked-by: Neil Horman <3316dc2d77df57653443c0391a5296176d6ca9c3@tuxdriver.com>
"
7d619406f31ddf115714b32778c33f6dc0ead470,Broadcom/dpdk,"pci: remove deprecated specific config

The driver i40e was using a specific PCI config before the release 16.04.
Since 16.04, it is always enabled in i40e (commit 56465cfaf).
The API has been deprecated in the commit 68f77593823cab.
The igb_uio implementation has been deprecated in commit b7cf8e155.
The config helper - through igb_uio sysfs entries - is now removed.

Signed-off-by: Thomas Monjalon <ee2fa8b2681c737f775687e475dcbf2028a412f1@6wind.com>
Acked-by: Helin Zhang <aba9dfdb1a6ec8bf1ff66b95272c029f8dfde1b1@intel.com>
Acked-by: David Marchand <f28529695cfa9e3e1eb84e7072aa626af4abb18e@6wind.com>
"
d35cc1fe6a7a1cafb6b70c514bcfb9f0cee9e4b7,Broadcom/dpdk,"eal/x86: revert select optimized memcpy at run-time

Revert the patchset run-time Linking support including the following
3 commits:

Fixes: 84cc318424d4 (""eal/x86: select optimized memcpy at run-time"")
Fixes: c7fbc80fe60f (""test: select memcpy alignment unit at run-time"")
Fixes: 5f180ae32962 (""efd: move AVX2 lookup in its own compilation unit"")

The patchset would cause perf drop in vhost/virtio loopback performance
test. Because the run-time dispatch must cost at least a function call
comparing to the compile-time dispatch. And the reference cpu cycles value
is small. And in the test, when using 128-256 bytes packet, it would cause
16%-20% perf drop with mergeble path. When using 256 bytes packet, it would
cause 13% perf drop with vector path.

Signed-off-by: Xiaoyun Li <151cc00bdba86cfa2ecfc39aaa98def8f092d9d8@intel.com>
"
a61dc000d55dca9e0947fa067b7dc503f42af28a,Broadcom/dpdk,"ethdev: remove deprecated statistics

Some statistics were deprecated since release 2.1 (49f386542af4).
The last deprecated counter to be used was imcasts.

The VF loopback statistics are also removed as they are used only
in igb and duplicated in extended statistics.

The new counters should be added to extended statistics.

Signed-off-by: Thomas Monjalon <ee2fa8b2681c737f775687e475dcbf2028a412f1@6wind.com>
Acked-by: Remy Horton <34c343e92f0e27f7a8e26a1d8d2146ae7c7dd1a3@intel.com>
"
2f45703c17acb943aaded9f79676fd56a72542b2,Broadcom/dpdk,"drivers: make driver names consistent

As discussed in the past release, driver names are modified
to be more consistent, and the future driver should follow
this new convention.

Driver names consist of:
""driver category""_""driver folder name""_""optional extra name"".

For example:
- Crypto null driver       -> ""crypto_null""
- Network IXGBE VF driver  -> ""net_ixgbe_vf""

Signed-off-by: Pablo de Lara <28355d9cfe41bb8148aea0fb24f47aae8f4217a1@intel.com>
"
066918a77fecfc4eb64eeaa6a618cb18e67abc7d,Cognifide/AET,Merge branch 'master' into features-cleanup
e2a080efb361922bae1337e47dd52be736f1c1be,GNOME/devhelp,"Split dh-util between lib and app
"
a5549023804a8cef50f71dc2d7a723be8e83f3d1,Homebrew/brew,"Add `mktmpdir` helper method.
"
faf51f254d912e5e0c39a1f4fa5a696bd67c56c4,Homebrew/brew,"Make generic caveats for launchd plist files.
"
f59eb358c29c5f40601a99e3f1bf7e8e891f10ba,Homebrew/brew,"missing_formula: subsume historic logic.

These methods belong together so combine them in a single class to
provide a simpler API.
"
0dcf753666201136f24d0ffeedc77455eb4a69ea,Homebrew/brew,"Merge pull request #4415 from MikeMcQuaid/tmp-cleanup

Cleanup HOMEBREW_TEMP handling"
acc7309ca34a28d340583bad619e236b6bc78e52,Homebrew/brew,"Rename `Base` and `InternalUseBase`.
"
8b55cb5ecbbf6a73cf580a2b847252ea509a1131,Homebrew/brew,"Refactor commands to remove ""require cmd/help""
"
7d5b8a5cea122c09f297dffa6b76187c413a9565,Homebrew/brew,"tests: cleanup tests.

Remove pending tests that are never run on CI (i.e. require `--online`),
remove fixtures for those tests and just make `--official-cmd-taps`
run by `--online` instead.
"
6ff5b0aefece6eb7e08e74776ac0a784f77c4d22,KC3Kai/KC3Kai,"Show two lines of nodes if necessary for Events History

* Record boss node flag to `battles` table
* Use stored onBoss stats instead if no flag found
* Update TL pointer
"
9160278cc22e4afd027aa7f18e01ca8feff5c165,KC3Kai/KC3Kai,"[Fixes #429] Hides deprecated features

* for myself, i'll let it through with toggle
* i'll miss those deprecated features for sure lol
"
75e591177f50720b95ede5d77d875ca85a5ae55e,KC3Kai/KC3Kai,"Separate Settings / About + New Devs
"
2bfd42ac3780cc9f686127b3ed9c020f421e37c9,KC3Kai/KC3Kai,"Fix PictureBook module, highlight built timer face for new ship

* Refine PictureBook module to correct and improve data collecting
* Add new setting option to select new ship detection method
* Update SRoom badge page
* Update TL pointer
"
60b6e7646edd9789a77b82eb133f56ed0d165fbc,Microsoft/pxt,"adding target nickname, used to generate file names - to be used instead of the .id
"
14acec83fe961d3df1595a1b9c941deba817c57c,Microsoft/pxt,"Store target version in headers (#4284)

* storing and inserting targetversion

* more patching

* load version from hex file info

* do not override targetid when installing script

* add targetversion to json script

* update targetversion on save

* do not override targetversion in merge

* use version download from cloud, cleanup cloud interfaces

* adding targetVersion to JsonScript

* unknown version when importing
"
ca39928f79feffc9ae395ab5529cb1dc4716782c,Microsoft/pxt,"yelm -> ks namespace rename, part 1
"
2ca340a61a9583d245f9cf54cacca72aeb436ba3,Microsoft/pxt,"mutator refactor
"
b65e36f30add50ec906e549fd1013a46a4aad75a,Microsoft/pxt,"moving pxtarget.json definition into separate file
"
5fd7859e9feac969a804703dafa61db11a549f80,Microsoft/pxt,"split core into separate components
"
7b5425f1bd6efdd9f5eedde102d7626b269c6ecc,NMGRL/pychron,"cleanup recall
"
a3c077b6e7169c23ae656e34d38e312f4759da2c,NMGRL/pychron,"reorganized massspec-pychron tests
"
155c336e211f3834a5477eb923948cb3928b623b,OGRECave/ogre,"Removing a lot of now redundant static casts
"
bd20b9d150dad73ccfdf3a57465c88b6f3921b58,OGRECave/ogre,"Remove unnecessary header includes, add forward declarations, etc. to reduce compile times.
"
1e7ff01b82b0dcffa7562da22f41b9c1de20ccf2,PMEAL/OpenPNM,"Major improvements to the subset functionality:
- A new method is available in misc called clone_simulation that does just that (see docstring)
- subset is now a part of misc, and it calls clone_simulation, then trims it.
- The subsets file has been removed from Utilities
"
9042e66b31a39f1c7ab1a8f95adb51bbbf615527,Ribtoks/xpiks,"Refactored ArtworksListModel
"
448a41cc438d8ab6cd5a5f409c16734fdb5054f9,Ribtoks/xpiks,"Upload classes refactoring to smart pointers
"
e3f7704918036f11ff688dd9451bc3fb8cc3efdb,Ribtoks/xpiks,"Refactor async coordinator to ref
"
0ef1db34d1da95a1298cd9eaff5edaa2588a979f,Ribtoks/xpiks,"Added feature to backup metadata to separate files
"
f2ae9b6cc0f704f81a768d532cee9d4e0c54e941,Ribtoks/xpiks,"Minor improvement for cleaning finalization list
"
459d975c21ca89e73e1c38f878069594adc7f41f,Ribtoks/xpiks,"Colors refactoring [ci skip]
"
4ed73c2a41ca5b95807133808df44ee2600b8394,Ribtoks/xpiks,"Cleanups and fixes after mergin
"
671e86c047f98578f60c8356583cd5f1c55a4cf2,Ribtoks/xpiks,"Improved suggestion technology
"
a1ebd3e8f81862181bc403e008e54a7d119773e7,Ribtoks/xpiks,"Finished metadata writing refactoring
"
278db50055b71fad36dae29611aabd5ad5e89332,ServUO/ServUO,"Bug Fixes
- Updated Generation Categorization
- Fixed GenCategorization crash Fix
- Added ISecurable to BaseLight
- Fairy Dragon now uses FightMode.Closest, negative karma, per UO Stratics
- Removed redundant Fairy Dragon
"
76c39461f505b4bfa79eb50020837693392fd8eb,ServUO/ServUO,"* never used parameters have been deleted.
* ConPvP system has been deleted.
"
caeba53a4c77560866ebb38009f5004216eb73fc,ServUO/ServUO,"Bug Fixes/Enhancements
- Field spells are more EA like.  Purely cosmetic!
- Archery Butte and Dragon Head now gives gump option for east/south facing addon placement.
- Fixed component ID's for Alchemist table addons
- Fixed ID for Elven Podium
- Removed [Constructable] from 0 parameter TreasureMap constructor which was causing crashes. This crash has also been fixed
- Scouring Toxin ID Fixed
- Runed Switch now adds random charge to Master Craftsman Talisman
- Added Justice Virtue Tile to cleanup britannia Rewards
- Adjusted craft ingredients for SmallRoundBasket (again!)
- Wheat Wort ID Fixed
- Item Weight now takes FC into account when it displays 0 (FC1 w/spell channeling)
- Casting spells now prevents players from changing directions, per EA.  Era check of ML for non direction change.
- Enchant spell should no longer give -1 casting when the weapon already has Spell Channeling
- Wall of stone change to be like EA in covering impassable objects
"
7f71a970c710575c2886c4e153ec1f14a51f2aa0,ServUO/ServUO,"Moved files/Bug Fixes
- Removed unused scripts - Ability, AbilityTheSix and AuraCreature.cs
- Moved harvest scripts to Services/Harvest
- Renamed a couple classes (garbage SA code being fixed one script at a time)
- Added code to Imbuing GetTotalWeight to account for artifact base resist bonus
- Updated Abyssal Infernal and Stygian Dragon Abilities per EA
"
dc223b4383bfe0baeff578bf0dbdae6546ebf932,Sylius/Sylius,"Remove redundant marker interfaces for channel based promotion action / rules
"
88ca3ab4301ed1ddf8c362c1045c2c0d6f37a7c6,Sylius/Sylius,"[Behat] Move shared storage to behat services
"
65e7360d47c89237a6f2f3d0d7db4f1b35fae634,Sylius/Sylius,"[Factory] Revert renaming createTyped and createNamed methods
"
07d9c3bbcb6ab45db460365e4feeef080331372d,Sylius/Sylius,"Flashes clean up
"
747322a1fab2ac2ac5fb055812d2bc4d68fe3316,Sylius/Sylius,"Merge pull request #6744 from Zales0123/unify-taxon-rule-checkers

[Core][Promotion] Unify taxon rule checkers"
bb334cf93972cea6064feb41300a342ba19e279d,VoltDB/voltdb,"ENG-9547: tests: Rewrite TestDR2BufferParser and TestDR2IdempotencyFilter
"
f997f326067759f8b513e00566036cee455f5f7c,VoltDB/voltdb,"ENG-10045, make DRConsumerDrIdTracker seerializable, remove dead code.

Change-Id: I640707164625fb1b8d490ace1dc558073d6d6075

ENG-10045, address review comments.

Change-Id: Idf9f01d27b599a6ca8c503517062dbd84ec42908

ENG-10045, while reset per site's tracker, also clear last applied unique ids.

Change-Id: Ifd7261d26941f012534f01f67fc149a202cb2238
"
29b1468b59ecfc54793b30d3f80e2cb6a2116614,VoltDB/voltdb,"Clean up more legacy functions
"
076c4425612f2f3f9d4dd68d6de32a7deb8e7f94,VoltDB/voltdb,"Merge pull request #1885 from VoltDB/ENG-7132-refactor-parsedcolinfo

Refactor ParsedColInfo to be more statement-neutral"
16e279e317f3ee96ef6c7e311ab027d8c9acc82a,VoltDB/voltdb,"Make HSQL amenable to OFFSET with no LIMIT clause

Add unit tests for same, for both SELECT and DELETE.
"
6a430b29257d54f4ff628b27d3c07ddf04d17527,VoltDB/voltdb,"ENG-4345 (partial) Agg Executor refactor. Small behavior change -- no longer requires COUNT(*) [or any agg] to take a dummy argument. Let the planner sweat it.
"
ddc1c1e48c1e18e634d3682588ffab17a40ac6dd,VoltDB/voltdb,"Refactored code.
"
30e723322ae16b0c8dc2c533b1f7c37a56e785b9,VoltDB/voltdb,"VMC-71 View/Add/Drop users in security (Modified code to show loading image.)
"
07ef9c766f7417d0fc372b174594ec535701fe93,VoltDB/voltdb,"Vmc 308 (#135)

* VMC-308 Added codes related to Prepare Shutdown, Quiesce and checking
export and dr status before shutting down the cluster.

* VMC-308 Modified code to check outstanding client transactions and importer
requests before shutting down. Also, worked on the UI part related to task.

* VMC-308 Added failure, success and loader icons for the steps in shutdown
process. Also made design changes in pop-up.

* VMC-308 Modified code to fix issues while completing dr and export transactions.

* VMC-308 Modified code to fix variable issues.

* VMC-308 Added the button events and change the shutdown message.

* VMC-308 Modified code to fix the issue with shutdown process not responding.
"
ff234c8226c6bd8aa93961bc51aed5d5374c55a2,VoltDB/voltdb,"Merge branch 'master' of github.com:VoltDB/voltdb into optimize-null-checking
"
776b4b3ffdf3bbc926cb20e605678d488fef5834,VoltDB/voltdb,"Cleaned up the AdHoc query path in EE so that failure of initializing the
plannodes or executing the query will not lead to the end of the world. An error
will be returned to the frontend and let the frontend decide what to do.
"
c0930a39472ff9a922b312d2bc60cd52db305466,VoltDB/voltdb,"ENG-4568: Simplify SnapshotTableTask's constructor by passing the Table object
to it directly.
"
30c88bea2bbc6df2ffa77eab23c34fcbb58e56c6,VoltDB/voltdb,"Misc. cleanup motivated by sql-coverage testing.
"
0b22a5c07d120f5e1a0e803b5c0fcbea712cc51b,VoltDB/voltdb,"Make stringfunctions use non-leaky factory functions and hide the leaky ones to prevent future accidental use.
"
8acdc3ebd0e1d53307886d1132e4e2156c475030,VoltDB/voltdb,"Vmc 299 (#121)

* VMC-299 Made changes to add feature related to add and update import configuration.

* VMC-299 Modified code to display default properties related to import type.

* VMC-299 Added missing default field(region) for kinesis in ""add/update
import configuration"" pop-up.

* VMC-299 Modified code to display proper error message for import config.

* VMC-299 Code re-factoring according to git pull feed-backs.

* VMC-299 Modified ids and values for geb tests.

* VMC-299 Added geb tests for add import configuration.

* VMC-299 Modified geb tests related to ""Add Import Configuration"". Also added
tests related to ""Update Import Configuration"".
"
1f4eb8830be2937bfaf2f83b3c135ad22a02abe7,VoltDB/voltdb,"Merge branch 'master' into cleanup-VoltDBEngine.h
"
df66cb5344f576e79d811f7fcffdf25e4b1e3faa,akvo/akvo-rsr,"[#1828] Refactor IATI import models

The models used when importing IATI activity XML are revised.
See the docstrings of the models for more info.
"
84cc6ea19a2e10f77a731a0d4901163d34161bbf,akvo/akvo-rsr,"[#21406319, #23361761] Updated the DatabaseAdmin and DatabaseAdminCommand classes to use the new deployment host config and refactored config classes.  Renamed the create_instance() factory methods to create_with()."
a5f9176ce1f74ab6ae49ba10fcf9043a47a66cf3,akvo/akvo-rsr,"[#3127] Various improvements

S
"
799c49b27e1e04e938a062f2d4227da3a7254ae0,akvo/akvo-rsr,"Removed deprecated empty_label argument from get_mollie_banklist on InInvoiceForm.
"
a62e546ff3b672d6107e04cc15fd2eb31b74186b,akvo/akvo-rsr,"[#3363] Move the project creation book-keeping API calls to backend

Creation of a project makes multiple API requests, apart from the actual request
to create a project.

- Adding a reporting organisation to the project
- Making a LogEntry for the project creation
- Setting up custom fields for the project

These can be moved to the backend to make things faster on the client side.
"
e79bfcfa513db6eb2580b4c9bfdbc4ab35f0b5ac,akvo/akvo-rsr,"[#809] Rewrote the routing middleware + tests

Tests needs to be cleaned up, probably to different test cases per
accessed host. Updated Piwik template tag to reflect changes.
"
67ea1c06a6ae2fe8b1cacfa4931b92411621b4c4,akvo/akvo-rsr,"[#1525] Moved all admin JS to JSX file
"
c5af8321ae1f631d08000888cf6480129627b438,akvo/akvo-rsr,Various fixes and improvements to the donation subsystem.
5992397e38b77d75c2d4e9d549dcc840274f85d9,akvo/akvo-rsr,"[#1965] Merge branch '#1897-refactor-results' into #1965-results-myrsr
"
edae680db72cf756941d3cde8be0210baf61347f,akvo/akvo-rsr,"[#3217] Tighten security

Refactor my_rsr.user_management view to extract parts of the code into utils.manageable_objects.

Use manageable_objects in UserProjectsAccessViewSet.get_queryset to limit access to user objects that the manager has access to.

Use manageable_objects in my_rsr.user_projects view to restrict access in a similar way.
"
62a59e2bd684cd6c52d6ffb57730b70dffba0cb9,akvo/akvo-rsr,"[#2102] Move IATI export to a cron job implementation
"
b932bc6b88c1ec510e28589e20b0fef435c596d1,brltty/brltty,"Rename ""keyboard key table"" to ""keyboard table"". (dm)
"
dd0257c3fc4420c40f64118ee2b48892d3f541b2,brltty/brltty,"Clean up the Linux USB input alarm. (dm)


git-svn-id: 30a5f035a20f1bc647618dbad7eea2a951b61b7c@8152 91a5dbb7-01b9-0310-9b5f-b28072856b6e
"
e531eb2026ab3f565c38189343e6b4795a9c4483,brltty/brltty,"Rename the xxxdefs.h core headers to xxx_types.h. (dm)
"
076b0188b98dcc5eea3100626b45adc0073bd908,cilium/cilium,"Inter cluster connectivity (ClusterMesh)

This commit introduces connectivity between endpoints in multiple clusters.
The feature requires basic connectivity between all cluster nodes of all
clusters.

Two new options are added to unique identify clusters:

--cluster-name=NAME

   Human-readable, unique name to identify the cluster.

--cluster-id=ID

   Unique identifier for the cluster. Must be in the range of 1..255. The
   unique cluster ID is utilized to make per cluster security identities unique
   across multiple clusters without requiring co-ordination when allocating
   security identities.

CLUSTERMESH_CONFIG_PATH

  Path to a directory with individual configuration files pointing to remote
  clusters. Cilium monitors the directory using fsnotify to detect file
  changes.  Each file is interpreted as an etcd configuration and a connection
  is attempted. Each configuration represents a remote cluster. If the
  connection is successful, the nodes and ipache will be synchronized to the
  local instance, thus making the cluster reachable from the individual agent.

  This option is set to a default value in the DaemonSet file and populated by
  an Kubernetes secret. If present, the files stores in the secret are
  automatically mounted into the Cilium pod.

Upon successful connection to a remote etcd. All nodes in all remote clusters
are discovered to either build a tunnel mesh between all clusters or to
establish direct routing.

The IP cache of all clusters are synchronized to establish egress policy
enforcement. Ingress policy enforcement is provided by relying on the identity
based mechanism with a fall back to IP based security.

Signed-off-by: Thomas Graf <5f50a84c1fa3bcff146405017f36aec1a10a9e38@cilium.io>
"
c779a752a8f2e78e137fcef6c033cc6af9503edc,cilium/cilium,"k8s: refactored CNP ObjectMeta to Metadata

Signed-off-by: André Martins <bc9800b9d52a24cce72a73dd528afed53f10e5fc@cilium.io>
"
755a468fa22a7d6480745d533d70ac91aaddd2f6,cilium/cilium,"Consolidate ICMPv6 code

Signed-off-by: Thomas Graf <5f50a84c1fa3bcff146405017f36aec1a10a9e38@cilium.io>
"
838921b07b18d399e07171deadf0ee8ff1991195,cilium/cilium,"Rename directories to reflect go binaries

This allows to continue using `go install` to install pkg files in the
GOPATH without install conflicting binary names.

Signed-off-by: Thomas Graf <5f50a84c1fa3bcff146405017f36aec1a10a9e38@cilium.io>
"
5ccca3451ae2bcc63efaee09a93aaa6b7d1270a1,cilium/cilium,"daemon: Delete deprecated code to remove older cilium-envoy.log at startup

We had added a one time `cilium-envoy.log` removal, pre-1.0 stage to remove the cilium log in
older location on users running cilium-envoy setup.
This code simply removes this deprecated code to do this one-time cleanup since we are post
1.1 at this point, and have given enough time for this code to bake.

Fixes: #3050
Signed-Off-By: Manali Bhutiyani <f91afadb65fa57d2313cebbfecb7de1f482fe10f@covalent.io>
"
a2214fa3f3ac706cb96b2982abfedffd62f4ff4d,commsy/commsy,"Refactoring.
"
6fd5e6a67acc50d443a5b6c3339f710a3d0d3a95,consul/consul,"unifies styles for participation not allowed
"
87ec74b49fdc05fe6f93024e9eadb3f46556e599,consul/consul,"Merge pull request #1253 from consul/refactor-styles

Refactor styles"
7cfd47ad87a3d72b30d95b8d5fdd90e91322c6c0,consul/consul,"removes duplicated content on polls show
"
00c965b715952778a65118c9112c7979628e2507,consul/consul,"Clean up
"
a3503c7eb35c2fd9803726cfa596b6972e675a15,consul/consul,refactors manager proposal votes
1f1034a14738f66d09ffeec8f3eb433d530542bb,consul/consul,"adds banner creation/edition/deletion specs
refactors admin banners specs"
217c920cb3e59a79a856c9d605553064d5cbd854,debops/debops,"Move the role code to a subdirectory
"
533c8419346fc04c1731e84d09a528e5d805cfea,debops/debops,"Move the role code to a subdirectory
"
7e02175194480d4b638c35862ab659d66b3868df,debops/debops,"Make the 'weight' parameter more useful
"
968ff9a225a2f9c8e96f94b11eb9cc40f3ef1716,debops/debops,"Rewrite of debops.gitusers role

This is a rewrite of the 'debops.gitusers' role focused on making the
role more general and allowing for better flexibility in the future.

Shell scripts have been changed from a templated files stored directly
in user home directories to a set of normal files stored in central
location (/var/lib/gitusers/ by default). They are not templated and use
the ~/.giconfig file to read current user configuration and act
accordingly.

Users can now create different types of repositories - at the moment
a default repository type is 'jekyll' and it will finction similarly to
how GitHub Pages operates. Another available repository type is 'deploy'
and it allows to run user-provided scripts from 'deploy/' directory
included in the repository (if user has a correct permission for it).
"
59b4fbe8ec222d9f8b0a3f584fb5e23c2c2de1ee,debops/debops,"Add support for rewritten debops.pki role

This commit removes 'debops.pki' role dependency, which doesn't need to
run a scond time after creating the necessary PKI directory structure.
Also support for Diffie-Hellman parameter generation is removed and DHE
parameters from 'debops.pki' role are used instead.
"
7206bcd8f2d162957b93d317a48f4bafc1a85011,debops/debops,"Move the role code to a subdirectory
"
01c3ea89963ec70b36d6c44d15f59a777753d94d,debops/debops,"Optimize documentation. Fully automated edit :)

Scripts:

* https://github.com/ypid/ypid-ansible-common/blob/master/bin/sphinx-inline
* https://github.com/ypid/ypid-ansible-common/blob/master/bin/sphinx-debops-role-build
"
09e533ac0722379c1a168dbdc9b89c6c7df28848,debops/debops,"Merge pull request #14 from drybjed/refactor-postfix-tables

Refactor Postfix hash table management"
314bcaddec34e873b8eea4e383af9e9439ef4051,debops/debops,"Merge pull request #19 from drybjed/tinc-rewrite

Rewrite of the 'debops.tinc' role"
8f26e3ffaad7d41710dd96e36d366d9c6803ef0b,debops/debops,"Improve external SMB storage support, disabled by default
"
755b966207c0d7e19f96be0a32922045260dd1ff,debops/debops,"debops-optimize
"
e949210f68aec97b51f40e797385c67bfd9e81f4,debops/debops,"Merge branch 'ypid-rework-2'
"
a1a600b39f9b54be436ba94cee49d21d87df58e1,debops/debops,"Rename all role variables to 'dokuwiki__*'
"
99a97f6e13f7c7c6b5e2ad08132bbfbfdb30c37c,debops/debops,"Merge branch 'rework-2' of https://github.com/ypid/ansible-php into ypid-rework-2
"
0bbf0fac74a9d7bcb029d39fe553161ae36571ef,debops/debops,"Merge branch 'drybjed-cleanup-apt-autoremove'
"
62910937c597e0c9d0570d375f3bce505d39fd5c,debops/debops,"Move ansigenome metadata to a separate file
"
9f8723bd2aa574a692960106d70aa60263427440,debops/debops,"Merge branch 'ypid-update-owncloud-and-rework'
"
f84f40b85ea108702e681ebaaad3490773a4284a,debops/debops,"Merge branch 'ypid-rework-2'
"
5fb19a46c10de4c852f9cdb2f142cbbe23797b2a,debops/debops,"Move the role code to a subdirectory
"
78d58efc5909b5c4b583df9433ff7a5800ff0f08,debops/debops,"Full role rewrite
"
19a8ebd115ce1cd5d5a157d0fbf3d83f958edb1c,debops/debops,"Merge pull request #3 from ypid/rework

Rework, added docs."
1d028a09bab41203a47f334c4d4a8b944ae94a49,debops/debops,"Merge branch 'ypid-role-rewrite-review-2' into role-rewrite
"
58356dd0f36d5e1bbfb97e232b31da73e2d0ba45,debops/debops,"Merge pull request #3 from drybjed/gitlab-rewrite

Gitlab rewrite"
02e03b540186bbd1f9f7bdb4be5ce2cd1e32bfe9,dotnet/roslyn,"Now that we have only one kind of switch statement, rename
bound nodes to recognize that fact.
"
c176f34e67731acd4fd0facd234ea69eec6f00e0,dotnet/roslyn,"Remove unneeded app.config from test projects

Since #f9b4d71a, tests inherit app.config if they don't specify one. Removed the ones that match the default behavior.
"
362986fca28fcd90904ad1b0851e033792c60f2f,dotnet/roslyn,"Move stack checking to rewriters
"
b3e3111bb2e9d4f4cb3582929e14ee1f9ef039da,dotnet/roslyn,"Address PR feedback

1. Rename `ILocalInitializer` to `IVariableInitializer`
2. Refactor OperationFactory methods
3. Change type of `IVariableDeclaration.Initializer` from `IOperation` to `IVariableInitializer`
"
3ee91ad7e33643fccd31a545ae5062e6e8c1c05f,dotnet/roslyn,"Make BlockSpan a struct type.
"
a163b8a68a897f01cb316fb6378fa2184d945903,dotnet/roslyn,"Merge pull request #5683 from tmat/HostObjects

Clean up host object public APIs"
4c84e35e122c0b91c7d147d7236cfcfcf0bf98a8,dotnet/roslyn,"Optimize ternary deconstruction (#29645)

Merged on behalf of @alrz"
0b9d0b437b79d4a89523cb10a9b96b5159e28211,dotnet/roslyn,"Merge pull request #18564 from CyrusNajmabadi/symbolFindOOP4

Move graph query search OOP as well."
90199f65a1a0bce1363a83a8976e408ac8c29d8e,dotnet/roslyn,"Respond to code review feedback

Mostly renaming and adding comments to make it clearer what is happening
in deferred project load.
"
d3a28d45ceb84ec892590eb451e9098bf393af94,dotnet/roslyn,"Code clean up  (#26802)

* remove usings when format document

* sort usings when format document

* add code fix

* hack fix for the issue with apply multiple changes.

* refactoring

* 3 changes

1. put open file editorconfig change tracking back
2. handle open file leaking when solution close with files opened case
3. don't share locks between editorconfig events and roslyn events

* skip the 'Remove unused variable' when format document

* changed code fix part to use ""fix all"" and only fixes P1 list rather than fix everything in the document. also not apply changes to buffer until everything is done rather than doing it per fix.

* made undo experience better

* add expression body as one of fix to offer

* add code fix options in format document settings

* add hidden box IsCodeCleanupConfiguredCheckBox to track if the user ever configured the code cleanup

* clean up

* fix some tests

* disable a test temporarily

* PR comments

* refactoring

* Revert ""3 changes""

This reverts commit 7e0fd53f02a0e20d063440b3cce5569e51e71afc.

* PR comments

* PR comments

* renaming

* bug fixing

* PR comments

* refactoring

* refactoring

* refactoring

* refactoring

* Make ICodeCleanupService extend ILanguageService

* refactoring

* refactoring

* fix deadlock, call Format inside CodeCleanupService

* rename async methods

* PR comments

* move files under features

* PR comments

* PR comments

* Never Show this again will never show the code cleanup info bar for this user.

* rename

* use ImmutableArray
"
c69ef217fcc9ce175dc2166d6ef1ffe42bf0c441,dotnet/roslyn,"Merge pull request #15069 from CyrusNajmabadi/codeCleanupMessages

Improve the messages we give for code fixes in the error list.

Fixes #14630"
3460d12c6924950515865d6cd35dbe65621aaf76,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/master' into delegate-creation

* dotnet/master:
  Report binding error for typed LINQ query on a type expression (#22412)
  clean up
  more refactoring
  Fixed tests
  fix test after rebase
  one more test
  CR feedback
  Allow taking unmanaged/pinned addresses of readonly variables.
  Fix typo in INotifyCompletion API in doc (#22417)
  Fix serialization of attribute data to account for named params argument (#22231)
  Create tests to cover test plans #19216 and #20127 (#22284)
  Checked uses of RefKind.RefReadOnly
  String rename
  Check for null before registering incremental analyzer in work coordinator.
  clean up
  Create tests to cover test plans #19216 and #20127
"
5f1f1f4606e527727ef5a09273e5094bd5b3ae8d,dotnet/roslyn,"Merge pull request #20582 from jaredpar/fix-more

More build / SDK cleanup"
eca6714c7a1bda13a3224e0dcbd5e3a8cb0e3a79,dotnet/roslyn,"adding output window logger (#30451)

* added output window logger and made logger to read options as solution is loaded.

* log workspace events

* previously I made output window not to come to front automatically. but that's counter intuitive because the reason I added this is so that I can see what's going on as VS is opened with solution.

this make sure my output window pane is set to front when enabled.

* removed ThreadHelper usage from diagnosticsToolWindow project.
"
539de37dec291e601d7529d37aeb04c3a76988c2,dotnet/roslyn,"Merge pull request #20571 from jaredpar/fix-misc

Post SDK cleanup"
976608dc7770b25529f52f026228a08ece2f142c,dotnet/roslyn,"Port C# synthesized symbol refactoring work to VB

CR feedback, mostly unifying the code for C# and VB
 (changeset 1307676)
"
2d0272a0fc77fa585d5baa548c72af82bf74b8e3,dotnet/roslyn,"Improved parsing and IDE experience
"
80a3b9a8a8471ea4f8e718839947d7e607f3bf97,dotnet/roslyn,"Make temporary paths a compilation parameter

The compiler must make use of a temporary path when signing files.  This is a restriction forced on us by the underlying CLR signing APIs.

Historically the compiler used `Path.GetTempPath` (`GetTempPath` in native) as the location to write the temporary files.  This is unsuitable for the compiler server as it makes use of several pieces of process global state that be different between build invocations: TMP, TEMP, USERPROFILE and the current working directory.

In general these variables are the same between invocations but in larger build systems it's not uncommon for TEMP / TMP in particular to be manipulated and set to invalid values.  This can lead to builds where signing fails in the server but passes in the command line.  This occurs because the server gets the initial TEMP value and uses it for all compilations while the command line gets a fresh TEMP value on every invocation.

To work around this the compiler must thread through the temporary path as a build parameter.  This is the general approach we've taken for all state that is typically process global but can differ from invocation to invocation.

Also need a custom implementation of `GetTempPath` in order to pass down the correct working directory.
"
fa9663bb2519d7cf327c5374ea5fc7dccf1e0e11,dotnet/roslyn,"Since addition of expression-bodied methods a method body doesn't need to be a block syntax. Clean up a few places in code-gen and SourceMethodSymbol that seem to not reflect the new reality.
Corrects reporting of WRN_ExternMethodNoImplementation - avoid reporting it for expression bodied methods if ERR_ExternHasBody has already been reported (to match behavior of block bodied methods).
 (changeset 1338919)
"
c9b96c664bd73fae86821d69428198a06d719876,dotnet/roslyn,"Move command line tests back to net46

These projects reference the compiler EXE projects and hence copy them
to the output directory. This appears to not cause the correct
app.config file (ex csc.exe.config) to be copied along with it. It's
missing the necessary binding redirects that are generated from a direct
compile of the project. As a result when it' invoked from the unit tests
it fails.

It's possible this is a SDK bug and I will dig into that. For now though
I need to unblock the suites.
"
1097a1bcf186c9a0509ad42aba3daadbe67c66b1,dotnet/roslyn,"Rename method.
Make it clearer that a method is for testing only.
"
d7ddb4070fb72a61e62a3690a0fddaf1d68363c5,dotnet/roslyn,"Namespace changes

Moved IComWrapperFactory to a separate file.
Moved IComWrapper and IComWrapperFactory to the Shell.Interop namespace.
"
269277818839c1487e21a2474b44e98179cb3921,dotnet/roslyn,"Merge pull request #12275 from CyrusNajmabadi/completionRazorMaster

Refactor completion commit."
2d2a61c1bd7f1cb774747d7997c165d37fd5c784,dotnet/roslyn,"Improve reliability of the code
"
bdb8ff076f98538e3a518e30956f61e0586eeaac,dotnet/roslyn,"Merge pull request #6799 from CyrusNajmabadi/replaceMethodCaseInsensitive

Allow the 'replace method with property' refactoring to work with get/set methods, not just Get/Set methods.

Fixes #6718"
05ac18855a499321a06cadecd8248c2879f4e026,dotnet/roslyn,"Simplify.
"
6e1b88806743ddfcd82afa06ae85d84f4b66556c,dotnet/roslyn,"Improve packing of control flow graph. (#26234)

"
efd59a3bf863d2516ae96c95678f8200bb816982,dotnet/roslyn,"Move QuickInfo to EditorFeatures.Wpf and EventHookup to CSharpVisualStudio

This is a really ugly refactoring that removes the WPF APIs from
IDeferredQuickInfoContent and adds a service in EditorFeatures.Wpf that
converts from them to WPF elements. It's a straightforward refactoring
and everything still works, but it's not pretty at all.

EventHookup also worked with QuickInfo directly, and thus had to be
moved out of CSharpEditorFeatures. There isn't a CSharp-specific
EditorFeatures.Wpf assembly, so it's going into the Visual Studio layer
for now.
"
9723499fb8ccd414bf0a64513899adb0778df9e4,dotnet/roslyn,"Remove dead code.
"
9ee65cac92372961905c5d1068e2401928cf718e,dotnet/roslyn,"Simplify updating LKG compiler & analyzers by introducing ""global"" NuGet references

This changeset introduces the concept of a ""global"" nuget package. The references to the NuGet packages are inserted into the Open VSL.Settings.targets file, which is imported into every project in Roslyn. This ensures that every project automatically gets these ""global"" packages. (changeset 1386548)
"
c4e440b48d10a1f19f1e08869cc7bce98c2cec68,dotnet/roslyn,"Remove the uber VSIX

These projects are no longer needed. Removing them.

Historically these were used to create an uber VSIX that nested all of
our other VSIX for a single deployment point. In practice though we have
not actually used these. The install / uninstall issues around them are
too problematic.

Should the uninstall issues be fixed we will consider bringing these
back
"
dfdfd1d4b66b8e0d3c9ddb044cf23c7cc159f044,dotnet/roslyn,"Simplify display string.
"
8f8559d3a16af1eaaeece13cb32037bd37740a6c,dotnet/roslyn,"made us to clean up all live errors for projects that built cleanly
"
93ebb390110f8473679255f5125e8f4e4c324eb7,dotnet/roslyn,"Ensure experimental settings run against experimental features

While working on another change I noticed that our testing support for experimental features didn't actually verify the underlying feature was experimental.  Hence helpers like ParseExperimental(...) would continue to function without error when tuples / ref returns were attached to the /langver switch.  This creates maintenance issues in our test framework as it's unclear what we're actually testing.

I refactored the code involved to verify the features are actually experimental and removed some troublesome helpers.
"
e7221252bd1b313f7f2ee7dfcfb9001e30c13879,dotnet/roslyn,"Rename StaticNullChecking test class to NullableReferenceTypesTests (#28423)


"
e54a8ea4b9a17299ac94942fd8251e336ebcdbcc,dotnet/roslyn,"Simplify metadata reference searching in Add-Import.
"
67969bc007c3176f0e5771666cd5ba83367ff104,dotnet/roslyn,"Merge pull request #1341 from mavasani/Issue249

Fixes #249 : Fix IDE diagnostics test framework to use DiagnosticAnalyzerService to compute diagnostics rather than DiagnosticAnalyzerDriver.

This change serves multiple purposes:
1) Makes our test framework consistent with the IDE scenario in fetching diagnostics. We have missed out on multiple regressions where the core IDE DiagnosticAnalyzerDriver does the right thing and hence the tests pass, but the DiagnosticService in IDE does additional filtering and certain diagnostics are not reported in VS. This change should avoid such bugs.
2) Enable testing for diagnostics V2 engine work that JohnHamby is doing to merge IDE and compiler analyzer drivers. For this engine, there is no IDE driver and hence existing IDE diagnostics tests can't be run. This change should enable running IDE diagnostic tests on V2 engine.
3) Move a whole bunch of test only code in DiagnosticAnalyzerService_Test.cs into the test layer."
4de5a5cb0efcadc5efa5d6caa9bb2f2c30146c64,dotnet/roslyn,"Rename files.
"
f9ebce0a3056646064cf52208eb40487b80b8aca,dotnet/roslyn,"EnC and EE cleanup (#21226)

* Clean up Concord exception utilities

* Avoid dependency on IL stream in EnC local slot mapping

* Fix lambda EnC
"
f0f0077c530371e4ef634d78dd66109a7db797a2,dotnet/roslyn,"Delete unused Desktop assemblies

This deletes the empty and unused Desktop assemblies from the code base.
"
860fa08fd335dfb338982e58804f24f6f73acf60,dotnet/roslyn,"Merge pull request #2243 from srivatsn/fixprojs

Cleaning up unused msbuild imports that was causing MSBuildWorkspace to fail"
2ee80821a8c7a1f4c2d20f51c90fe5cd5415797f,dotnet/roslyn,"Merge branch 'master' into 6517-deterministic-switch-rename
"
91bf08fcadd016f54024aed379ab5d0438a0ac56,dotnet/roslyn,"Merge pull request #9870 from AlekseyTs/Emit.UnitTests

Clean-up skipped tests in Roslyn.Compilers.VisualBasic.Emit.UnitTests.DLL"
0b21622575aca04e30274d751bd239752b38ff63,dotnet/roslyn,"Move type to its own file.
"
1ec0ba668382558ab5c37cdf75248c91d56a3e2c,dotnet/roslyn,"Move to NetStandard2.0 RTM for our ref assemblies

This changes the reference assemblies we use for the CoreClr compiler
compilation to be Net Standard 2.0 RTM. Previously they were a beta
version.

This did mean a number of tests had to be moved to be desktop specific
again. This is primarily due to the presence of ValueTuple as a default
type in Net Standard 2.0. Tests that relied on ValueTuple not being
defined had to be moved to net461 which doesn't have that type defined
by default.
"
1a7ad1440fc78fa79b4d203dd9236df43802cd7f,dotnet/roslyn,"Merge pull request #20728 from CyrusNajmabadi/reenableRefactoring

Reenable 'Move declaration near reference' refactoring."
aabe6bda498ee67ca96fcdd7680a3ab9a1db2e10,dotnet/roslyn,"Merge pull request #29887 from dotnet/sharwell/preview-cleanup

Preview cleanup"
aa1e5464044ddb4cb85c32cfaf2d9a86beb2748d,dotnet/roslyn,"ENC Support of C#7.0 features: Local Slot Mapping Tests and Edit and Continue Tests

Enc tests (#18893)

* remove unnecessary tests

* pattern matching tests
"
bcc8af40e7616c06c04f2c9ee3c2c30257fe79ef,dotnet/roslyn,"Extract method refactoring should handle tuples in VB (#13278)

"
0183aa22c5112acd34676d514f7314ce16618619,dotnet/roslyn,"Improve definite-assignment behavior in error cases for switch and is-pattern
Also reduce cascaded diagnostics in attribute argument binding.
Fixes #9154
"
04419cab0c379315119637858e67925bf07161ee,dotnet/roslyn,"Merge pull request #1091 from tmat/master

Use empty array for unspecified public key instead of default(ImmutableArray<byte>) ..."
f7b666db04d060a650c9550d13e1d13acd28b1ae,dotnet/roslyn,"Move the spiller between initial lowering and lambda lowering

- Added some improved debug-time display for synthesized locals
- Added some invariant checking regarding bound nodes.
- Move invocation of the spiller into LocalRewriter.Rewrite
- Add an error for when an expression tree contains a switch expression
- Made the local substituter apply at the top level in the expression spiller because expressions can now contain statements (BoundSpillSequence)
- Move the error ERR_ByRefTypeAndAwait to IteratorAndAsyncCaptureWalker
- Skip broken tests due to #25702
"
68688f4ec1a2fd32eac4b99b2e7e03e8ba1eb84e,dotnet/roslyn,"Made non-struct private/internal fields/properties readonly
"
2f4008089bae6aa8d976352d89186701b55c8cfc,dotnet/roslyn,"Merge remote-tracking branch 'dotnet/master' into delegate-creation

* dotnet/master: (33 commits)
  Test dumper change to include Isimplicit/Language and some formatting change  (#22309)
  Add regression tests for fixed local function crashes (#22470)
  Use error=true in Obsolete attribute on IsByRefLikeAttribute for ref struct (#22492)
  Add tests with ref readonly and ref assemblies (#22419)
  Add test for sequence point issue with local function and conditional (#22499)
  Keep ProjectState._documentStates sorted rather than resorting the IDs
  Throttle NFW watson. (#22483)
  Suggest ""in"" for argument positions in IDE (#22480)
  Disable unboxing and generic conversions to/from ref-like types (#22357)
  Hold DocumentIds in ProjectState in ImmutableLists
  Fix bug in build-utils Ensure-SdkInPathAndData
  Add additional tests around Span escaping (#22413)
  Turn on the compiler server by default for the compiler VSIX (#22473)
  add 64bit detect code to razor remote host client (#22432)
  Fix a bug in escape analysis related to 'in' arguments (#22457)
  Ref must come before 'partial' in a 'ref partial struct' (#22403)
  Address PR feedback
  Ensure partial method implementation is completed when needed (#22414)
  Remove PROTOTYPE markers from ""private protected"" feature (#22407)
  added IVariableDeclarationStatement back to for loop's before condition (#22358)
  ...
"
19f49b0f4a0d887547195ec06f9eb6b2e0f21228,dotnet/roslyn,"Merge pull request #22774 from mavasani/OperationsRename

Operations API rename/refactor"
2263baf1464e2acbd8bbd15ee2ba74b47c2f3f71,dotnet/roslyn,"Merge pull request #25739 from gafter/rpatterns12

recursive-patterns(12): Improve switch code by using pattern variables as match automaton temps"
65d8132113f900b209dfb319e2cf57f0607b771d,dotnet/roslyn,"Implement proper 'this' capturing for local functions (#14736)

Currently, when a local function is captured inside another local
function or lambda it can capture 'this' without generating a frame.
This is useful, but when that lambda is itself captured then the
capturing closure must also capture the frame pointer, namely 'this'.
Currently, local function frame pointers are not correctly captured when
the captured local function itself captures something from a ""higher""
scope than the capturing local function.

This change solves this problem by:

1) Considering a local function's captured variables when deciding its
scope. If the local function captures variables from a higher scope,
that local function will be analyzed as belonging to the ""higher"" scope,
causing that local function to register for frame capturing.

2) Since the proxies for capturing frames are not available at the time
of local function reference rewriting, the proxies must be saved. There
is a new temporary bound node for this purpose,
PartiallyLoweredLocalFunctionReference, that stores the proxies and the
underlying node for later use during the rewriting phase. This node
should never make it past LocalFunctionReferenceRewriting.

When these steps are completed, local functions should act very
similarly to all other captured variables with different frames, where
the frame pointers are captured and walked in a linked list in order to
access the target with the proper receiver/frame pointer."
dbc9e6c12389f90f359745e251a79bed4e494c83,dotnet/roslyn,"Commit rename on save and debugging run mode

Fixes internal TFS bug 1142095

Commit any existing rename session when a document is saved or when
debugging run mode is entered. This ensures rename sessions are
completed before Edit and Continue sets the buffers to readonly when
debugging begins or when break mode is exited.
"
c3e74a7102e24c2ccd7cb554ec1ebc9e9d538caa,dotnet/roslyn,"Unify the CompileAndVerify
"
fbb8866bd5e75079e35541defe7667986aa739b0,dotnet/roslyn,"Delete unused files from the compiler layer

Move IVsSQM.cs to VS where it was being used as a linked file.
"
373915ad3ee37e33f5d3506151fae6f9206a7b49,dotnet/roslyn,"Extract out common core so we can produce a VB version.
"
de82acad8caf35d532ae0ed78f260b8850f2aa95,dotnet/roslyn,"Simplify shape of control flow graph when conditional branches involve conditional, coalesce and throw expressions. (#26463)

"
5a9cdf18b87481cf2e1264d62a8b2a024f1b597c,dotnet/roslyn,"Merge pull request #18490 from jmarolf/test-move/run-project-system-vsi

Add option to run just netcore integration tests"
80ed32ec29b8b3ad7f954c104712c1b3f723ec4e,dotnet/roslyn,"IVT, new API and cleanup
"
28de8cc4522d823b6c1723dd55d3057060c11efe,dotnet/roslyn,"Add ControlFlowGraph class to encapsulate all information about a control flow graph. (#24659)

"
cdf6029ce0c86cfc3852f0c9bd7c0ab33adea6d6,dotnet/roslyn,"Unskip passing tests related to double negative 0

This is cleanup from DevDiv #1043494.
"
4c2862c19c16bdedddd4cadcf53a7f1d74b749e7,dotnet/roslyn,"Move delegated constructor responsibility to the refactoring provider.
"
b83993a7faf8a7734b4c22bf7b73032f99621849,dotnet/roslyn,"Merge pull request #24134 from 333fred/unified-conversions

Unified conversions"
fdfc978b5a8c33136a259b4fe3793c352aec2757,dotnet/roslyn,"Improve add-using perf in interactive window.

1. When creating symbol tree infos, lazily produce BKtrees.  That way we don't
   take the perf hit for features that want to search but don't need fuzzy matching

2. Don't perform fuzzy matching interactive.  The problem here is that interactive
   Doesn't have a 'serialization service'.  As such, when VS loads and we run
   interactive, we end up having to produce all the same BKtrees for metadata again.
   In normal scenarios we can store these in the .vs file, so we only pay the price
   the very first time.  In Interactive we always pay the price the first time
   after VS loads.
"
f58f5ab8dee535ce5c08fbda56a04557ae0618dc,dotnet/roslyn,"Reduce the variety of optimization related compilation option values used in tests to: Release, DebuggableRelease and Debug.

By default tests should use Release, which enables all optimizations.
PDB tests should mostly use Debug.
We should have targeted tests for DebuggableRelease, for optimizations that are selectively disabled to improve debuggability of release builds.

   (changeset 1312277)
"
e9488f355f1cbf2049f0f94ce668efd51e8da5e0,dotnet/roslyn,"Metadata writer refactoring
"
2fd96569ceee89ac248768fe26f13d3cda0966ce,dotnet/roslyn,"Merge pull request #5134 from agocke/ChangeFtoU

Change unzip to use the -u option instead of the -f option"
2c7cac77da9ab72708a53d27b10f64a777108fd9,dotnet/roslyn,"Merge pull request #24487 from alrz/optimal-def-assignment

Simplify definite-assignment check for InlineDeclaration codefix"
26a0fac75e52b0990536d13eb27a3feee1b8664c,dotnet/roslyn,"Merge pull request #21538 from mavasani/LookupSymbols

Optimize performance for LookupSymbols(name)"
9f507167b2dfad7ccf9fe360584f9088e539f192,dotnet/roslyn,"Break types into separate files.
"
422e450e129c2f5ea21f574d93fe7fd87ce67d18,dotnet/roslyn,"Move more code to common layer.
"
d481f1cd364de615d274c2ccde68e37126f1959e,drupal/drupal,"- Patch #572932 by sun: rename hook_elements() to hook_elements_info() for consistency. Yay to API clean-ups during 'slush'.
"
66f740c58475b84b907326a0e50e4d91c2fc03ee,drupal/drupal,"- Patch #626286 by sun, David_Rothstein, Rob Loach: make contextual links a module.
"
6275cc594982e1a71df8de7d9efb4395a2c7c58e,drupal/drupal,"#1536844: Moved language, path, theme, and module initialization from bootstrap to request listeners.
"
fc63f5e0c43bfad13ca7cc453a50a90e1fc74dd7,drupal/drupal,"Issue #2050759 by tim.plunkett, fietserwin: Move drupal_chmod and other code in file.inc to a Drupal\Core\File\FileSystem class
"
5fb617d7ac1335c9a5cefddc1bba11c204f4a5ed,drupal/drupal,"Issue #1938926 by sun, Cottser, joelpittet, pplantinga: Convert simpletest theme tables to table #type.
"
2f959b9693fc2c386a223fd418c5d8fc76441629,drupal/drupal,"Issue #2188613 by Berdir, Xen, andypost: Rename EntityStorageController to EntityStorage.
"
0e0e6b3df4bafad3309d6581fa2a4e5ddc1dcec0,drupal/drupal,"Issue #1541676 by Berdir, tstoeckler, Rob Loach: Convert Simpletest base test classes to PSR-0.
"
c06bf841a6787ed8832e0c164d8b9e26350eddec,drupal/drupal,"Issue #2002934 by drupee, damiankloip, x.algorithm, kevin.reiss, heddn: Rename Views method validate_argument() to validateArgument().
"
0fc52f11785205df0a17d4e30d6c36c94ef3afbb,drupal/drupal,"Issue #2077473 by dawehner, damiankloip, pwolanin: Replace local action plugin discovery with YamlDiscovery and handle routes with parameters.
"
e9ca98b69d45b935fe4963a345cba92a87164ddb,drupal/drupal,"- Patch #504678 by catch: use objects instead of arrays.
"
e32a11e76bbe8be639987e331fb8c7e647e0a5e7,drupal/drupal,"Issue #2110345 by mr.york, effulgentsia, Désiré, fgm, fago, pfrenssen, stefan.r, Berdir, Rajendar Reddy: Simplify validation constraint implementations for fields.
"
23b59123d180ada8b20cfec2bcd708335c6dbd37,drupal/drupal,"Issue #1998466 by dawehner, ParisLiakos: Convert filter_xss_admin() and similar function to an Xss component.
"
ca665f7be315aedc499228b156bd194982d1cd74,drupal/drupal,"Issue #1827448 by RobLoach, sun, jbrown, tstoeckler: Use __DIR__ instead of DRUPAL_ROOT where possible/sensible.
"
3ad40a3e3a743de9a3a9373b1f5be61868f108e1,drupal/drupal,"Issue #2002986 by jastraat, rjleigh, tvlooy, Dan Reinders: Rename Views method summary_name() to summaryName().
"
413008b8909370514096cdc8a5fc186f5babd234,drupal/drupal,"#898520 follow-up by Damien Tournoud, chx, David Rothstein: Clean-up the upgrade path: comment.
"
d4da27e5fab98c2556181bdb413bc172a2eeda53,drupal/drupal,"Issue #1987692 by becw, cbiggins, tim.plunkett | vijaycs85: Convert all references to entity_get_form() as page callbacks to _entity_form() w/ corresponding routing.yml entries.
"
dd663c405e32200fbba290209a093d0685aebb19,drupal/drupal,"Issue #2031725 by fgm, fago, vladan.me, Nebel54, Berdir: Move all entity display interfaces to the core component.
"
4511dc22e6207830a797eff94d256e7695289d47,drupal/drupal,"Issue #2228921 by sun: Consolidate system.module + system.theme + system.theme.disabled into core.extension config.
"
719b36a4928c401b4998f8def21bd5deb24ad595,drupal/drupal,"Issue #2208631 by slashrsm: Rename \Drupal\Core\Path\Path to \Drupal\Core\Path\AliasStorage.
"
cd224643ba8c751638c3ff66ead08bdb429db7bf,drupal/drupal,"Issue #1496458 by swentel, pcambra, n3or, kbasarab, sun, marcingy: Convert maintenance mode settings to configuration system.
"
ae0984f8711db81fd2157d189bbddb1105a9cc19,drupal/drupal,"Issue #1942346 by swentel: Convert Field API variables to CMI.
"
f72f814f7b077e12bfb436f8a092c19e81763dca,drupal/drupal,"- Patch #1404198 by sun, beejeebus, fago, chx: Separate database cache clearing from static cache clearing and data structure rebuilding.
"
76a157fe32fd9adbb98b782b527e83a50b06e159,drupal/drupal,"Issue #1763974 by tim.plunkett, EclipseGC, berdir, xjm, neclimdul, FabianX: Convert entity type info into plugins.
"
f09028107ca18a8f897ff517d2ed04688e1c567d,drupal/drupal,"- Patch #413732 by brianV: database code clean-up.
"
5083e13522d29f0865144a02f448a084818b2f06,drupal/drupal,"- Patch #333143 by justinrandell: cleaning up the Drupal bootstrap code, removing bootstrap flag in system table.
"
7be75b4686f8be3c57351c691520b300a40ee552,drupal/drupal,"Issue #1814496 by Berdir, deviance, Lars Toomre: Make queue a container service.
"
4f37cf02556c374ea4db81433d492d4dd2e3aa5d,drupal/drupal,"Issue #1700382 by Albert Volkman, cam8001: Replace remaining references to drupal_attributes() with new Attributes().
"
a8b3369b9597ba23af7c15f2a207651e134839ba,drupal/drupal,"- Patch #557542 by CorniI, catch, fago, Crell, sun | pwolanin, chx, webchick, mattyoung, alexanderpas, justinrandell, dropcube, moshe weitzman, Damien Tournoud, Rob Loach, Dries: cache module_implements() for better performance and scalability.
"
9a09f69b7d2a517dd069183018e7bafd2c372011,drupal/drupal,"Issue #2048827 by claudiu.cristea, tim.plunkett: Move Image toolkit API from system.module to Drupal\Core.
"
2c85074181ecdbc672eae3258eeb9888f4c5e5d8,ekoontz/babel,"remove unneeded src/babel/english/writer.clj
"
faaf0a48c18831a7de6556343da42406a9cd9a88,ekoontz/babel,"more work to improve generation speed
"
bb3eaa75030d8b116899ae8bc57fc683298b0e42,ekoontz/babel,"consolidate two s-aux rules into one
"
1aabb585def234ecaf03e9857530a570c813d1a3,emacs-ess/ESS,"Cache pkg info in non-package and related cleanups
"
cd63275826eca411d7dd5a93ad235ff02a7e8abd,emacs-ess/ESS,"move all injected code into ESSR.R and ess-developer.R

git-svn-id: fe53fb5f0676e2326ee71780652dea251e2b27e6@5525 0bbaf3bd-34e0-0310-bf65-c717079852d4
"
14f2b096620e01f089886627341d6df51b1295b1,embree/embree,"improved benchmarking mode to also print min/avg/max and standard deviation, also only 50% best frames are taken
"
1c4be29d4ecc17b753b1c8850aad7c2bcc18ea3c,embree/embree,"renamed RTCORE* to RTC*
"
d6408c1fe80293bab2c68e698013e8781db1bc30,embree/embree,"cleanups
"
03f8d5c802e90f154bd52a4fc140ba767affff1e,embree/embree,"curve related renames
"
f89cc7901a3a297f0ac488fc5cde56fc5e6db66c,embree/embree,"renamed Geometry::id to Geometry::geomID
"
bcfc40b8e93b5f10b4920df6b5818d7d3716c14f,embree/embree,"separated bezier1_intersector from bvh4hair traverser
"
f04ba2c73e9d9f1079a72c32b37613fbd1a75a42,embree/embree,"cleaned up counting of filter functions inside scene
"
5a408d2652a64b8d0c0cd4044fc50d82691b4425,embree/embree,"Updates to scene graph conversions. Splitted some grid conversions
up to get more flexibility.
"
74b9243984e1afab567c44dc2cd20d88ddb07557,embree/embree,"renamed rtcSetGeometryNumPrimitives to rtcSetGeometryPrimitiveCount and rtcSetGeometryNumTimeSteps to rtcSetGeometryTimeStepCount
"
f72fc2ebfb30d98e5660ae73e0fd3e9ad2e83067,embree/embree,"cleanups of msmblur builder
"
07b787cc062284a5b1facf6fec75c7a02b35e43b,embree/embree,"RTCScene renames
"
2b89c3707a6b68035dddd52506b66f179f21edc4,embree/embree,"TASKING_TBB_INTERNAL -> TASKING_INTERNAL
"
405052aa13bef32a788516dd229e1007d9aae610,embree/embree,"pset -> parallel_set, pmap -> parallel_map, sort.h -> parallel_sort.h
"
70557040d72bb0c3377e87c0e33d5f965b8743c2,embree/embree,"renaming AffineSpace3f to AffineSpace3fa, similar for LinearSpace
"
0ce568b54532def2e10edd9d19354c89d7298e73,embree/embree,"spatial splits working properly in bvh4hair_builder2
"
8e061ddd73e8a65165f820933927b053a8bb0c82,embree/embree,"cleanups in pathtracer
"
d8d4f41f45c2f65bf4f829a47b68e3134a9d1753,facebook/flow,"Add loc of default keyword to default exports in file sig

Summary:
Currently, default exports don't always have a clear location to point to. For
example, given `export default <expr>` it's not necessarily a good idea to
point to `<expr>`, which could span vast swaths of source.

Consider get-def, which might resolve to a default export. This location gives
a sensible place to jump.

This location is also useful for follow-up work that refactors import/export
code. We can pre-populate tvars based on file sig information, but we need a
location so the statement pass can look up the tvar later. Default exports are
the only export type that don't always have a location without this change.

Reviewed By: nmote

Differential Revision: D6541404

fbshipit-source-id: 3df344232de06c1632598e90417130fb485f2e5e
"
508d9611c25637fd9d13455bd01356590213c18b,facebook/flow,"any propagation for opaqueT

Summary: added any propagation case for opaqueT <: any and any <: opaqueT by expanding any to match the shape of the opaqueT. Also refactored the array case to use a new expand_any helper along with the opaqueT case.

Reviewed By: samwgoldman

Differential Revision: D10389689

fbshipit-source-id: ff591c32badce522b2c0d26028e53a8661648735
"
a5b697f194646f1d9b60d851127a095bef125483,facebook/flow,"Make ROArray type covariant in variance checking

Summary:
We currently treat the type parameter in ReadOnlyArrays as invariant (neutral polarity).
This leads to the following reporting an error:
```
class Foo<+T> {
  good (x: number) : $ReadOnlyArray<T> {
      return [];
  }
}
```

The error reported is that T is in an invariant position and is expected to only occur covariantly.
Since ReadOnlyArrays are read only, it seems that they should be treated covariantly.

Additionally, the following code typechecks, indicating that we treat it covariantly
in __flow:
```
function good(x: $ReadOnlyArray<number>) : $ReadOnlyArray<number | string> {
  return [];
}
```

Reviewed By: samwgoldman

Differential Revision: D5259916

fbshipit-source-id: 8f56b31be267bdb9e9929e379f7e16a6c3553156
"
26aa6c23728110ab2d41f74d3fbd7600fb021d8c,facebook/flow,"Child imports everything from parent(s)

Summary: Entree´:
This adds another functionality to nested module. Child modules import everything declarared in parent (in fact all ancestor).
This is done so that child modules can access identifiers defined in one of their parent modules even when they are flattened
for Flow declarations.

Main Idea: Push a list of things to be maintained in the dfs stack along with each module node.

Sides:
1. Improved presentation logic of the generated flow declaration files. But still a few lint issues are raised.
2. Added generate_exp.sh file which refreshed .exp files in tests for the new diff.

Reviewed By: @avikchaudhuri

Differential Revision: D2157545
"
73145b22c28b31abc43c259ee28e51d50b5a4a20,facebook/flow,"Add type checking for explicit type arguments in new/call

Summary:
In the previous diff, I added support for parsing call and new expressions with
explicit type arguments, e.g., `f<T>(x)`. This diff continues that work by
adding support to the type system.

During the AST pass, the type arguments are converted from annotations into
types and stored along with the value arguments inside a CallT and a
ConstructorT use.

Currently, when calling a polymorphic function or instantiating a polymorphic
class, the type parameters are implicitly instantiated and their types are
inferred.

Using the type arguments, we can instantiate a polymorphic type explicitly,
which gives developers a way to constrain the types.

This capability is also very useful for adding annotations for exports. For
example, if I export a `new Map()` instance, the implicit instantiations
become missing annotation errors. With this feature, it becomes possible to
export `new Map<K,V>()` instead.

Fixes https://github.com/facebook/flow/issues/926
Fixes https://github.com/facebook/flow/issues/2630

Reviewed By: avikchaudhuri

Differential Revision: D7657630

fbshipit-source-id: b829db79d3503e40990f0fb1cf145303457e5aa9
"
1ad8bab1bcf04000d37ada0ba4c62503de26a3c8,facebook/flow,"move suggest logic into Type_info_service

Summary:
it returns type info, so fits with the other related functions. not
coincidentally, everything using `Query_types` is in `Type_info_service` now,
except `flow_dot_js.ml`. `flow_dot_js.ml` can hopefully be made to use
`Type_info_service` instead of duplicating its functionality, and `Query_types`
can be moved into this directory.

Reviewed By: avikchaudhuri

Differential Revision: D5088378

fbshipit-source-id: f059ab487096daeb26cf3f08e73ef51b5ede3eed
"
9ff6374deaafd2a4c9237f359835f5a4098c5345,facebook/flow,"Annotations on destructuring bindings should create upper bounds

Summary:
Type annotations on non-destructuring bindings already create upper bound
constraints on the established binding. This diff makes destructuring bindings
behave the same way, which should align Flow's behavior with reasonable
expectations.

This wasn't working as expected because evaluating destructuring bindings
involves operations such as GetPropT, which create new tvars with lower bounds.
In order to create upper bounds, we use the BecomeT machinary to unify a tvar
with itself.

Because GetPropT performs a reposition, this diff depends on D3453988. Added
tests for destructuring with union-like annotations added to prevent
regressions. Note that annotations which use unions of objects (instead of
objects with union-like props) are still problematic, and I will deal with them
in a follow-up diff.

Fixes https://github.com/facebook/flow/issues/731
Fixes https://github.com/facebook/flow/issues/736

Reviewed By: avikchaudhuri

Differential Revision: D3456119

fbshipit-source-id: 512d0fb9f7571657c8d465116bfcbbcaa2a297a2
"
f70ac076b3e534e551efce393da141b97155f4ea,facebook/flow,"move global changeset functions into submodule for clarity

Summary: Some functions in changeset.ml mutate global variables rather than the standard functional behavior, but not all. This moves the global state-affecting functions into a Global submodule so it is easier at a glance to see whether a method is modifying global state.

Reviewed By: panagosg7

Differential Revision: D10185139

fbshipit-source-id: 4177ba1c496c241130c3d216112d7ff55a7e94ea
"
a7e3623919625ac33205be1c21b9d29b47f60189,facebook/flow,"split ExtendsT

Summary:
ExtendsT had two distinct personalities. During the day it served as UseT
(use_op, ExtendsT _) to check subclassing. At night it hid under a bizarre cloak
as ClassT (ExtendsT _) to do refinements with instanceof.

This diff splits 'em up.

Reviewed By: samwgoldman

Differential Revision: D6050574

fbshipit-source-id: afb76fb4f04cca0922349f532b3921646cee064c
"
e4b2c0590a81bdd1a2726708c6fe3f75cd9de839,facebook/flow,"Enable phantom types by comparing type args only in type apps with the same polymorphic type

Summary:
The following currently does not produce an error:

```
type T<Phantom> = any;
type A = T<number>;
type B = T<string>;

declare var a: A;
(a: B);
```

https://flow.org/try/#0C4TwDgpgBAKgPABQBYEMB2wD2BbAfFAXinRAG4AoUSKAQUNjjQFdsAjCAJ1wqugCF68AM7AOASzQBzbuXIATCAGMANig7QAbmuIAuWhQAUKPXwCUFIA

However, I believe that it should. Looking at the code it appears like the intention was to make this an error by sending `TypeAppT (c1, _) ~> TypeAppT (c2, _)` when `c1` and `c2` are the same to `TypeAppVarianceCheckT`. However, to check if `c1` and `c2` are the same we performed a referential equality check (`c1 = c2`).

This does not catch every case where `c1` and `c2` are the same. Notably it doesn't catch in the above case where the `PolyT` for `T` is repositioned in such a way that `c1` and `c2` for `A` and `B` respectively are unequal. Also, if you move `T` to the bottom of the file, say:

```
type A = T<number>;
type B = T<string>;

declare var a: A;
(a: B);

type T<Phantom> = any;
```

Then `c1` and `c2` for `A` and `B` respectively will be two different tvars.

This diff replaces the referential equality check (`c1 = c2`) with a step further. We concretize both `c1` and `c2` then check the referential equality of the `PolyT` def types.

I discovered this bug (at least I believe it's a bug, correct me if I'm wrong) when exploring how to type Relay `createFragmentContainer()`. Relevant to this diff is typings that look like:

```
type Fragment<Ref, Shape> = Shape;

declare opaque type ViewerFragmentRef;
type ViewerFragment = Fragment<ViewerFragmentRef, number>;
declare var viewerFragment: ViewerFragment;
declare var viewerFragmentRef: ViewerFragmentRef;

({
  viewer: viewerFragmentRef,
}: $ObjMap<
  {
    viewer: ViewerFragment,
  },
  <Ref, _Fragment: Fragment<Ref, mixed>>(_Fragment) => Ref,
>);
```

`Fragment` has a phantom type argument `Ref`. When we Flow `Fragment<ViewerFragmentRef, number>` into `_Fragment` we want `ViewerFragmentRef` to reach `Ref`. If we expand the type apps then `ViewerFragmentRef` will be ignored and `Ref` will only have an upper bound of `mixed`.

Reviewed By: samwgoldman

Differential Revision: D5648147

fbshipit-source-id: 566c266b57271d2fc8606a85abffc3c913f242af
"
29072144e429be5160bbddfc2070ac99140fff41,facebook/flow,"async/await

Summary: Diff adds async/await support.

Required some buildout of Env_js structures, so took the
opportunity to refactor for clarity, reuse etc. Also did
a little prep for upcoming let/const infrastructure there.

May do a final hygiene pass on Env_js, but wanted to put
this up now so async/await experts can give it a reality
check while I still have pre-Nuclide time to add/fix.

Reviewed By: @avikchaudhuri

Differential Revision: D2138982
"
ff07cd569eaa06dad72ba72ae2df37cf2eb14933,facebook/flow,"non-null-fix and type destructors rewrite

Summary:
A little while back `$NonNull<T>` was added as a type operator using `*` under the
hood to propagate constraints. Unfortunately it is a bit fragile.

While it's cool that we can express things like `$NonNull<T>` (and we do some of
that in our React model), the general approach has some serious limitations.
(1) `*` can be pin types down in undesirable ways, as we've seen with
`ReactElement<*>`.
(2) Constraints can lead to underspecification, as we've seen
in the definition of `ReactClass<T>`.

Meanwhile we've begun a line of work to add type destructors (starting with
`$PropertyType`). This diff adds another one, `$NonNullVoidType`. It basically takes
over the job of `$NonNull<T>`, which can now be removed.

Overall this diff makes the feature far more stable than possible with `*`
alone. We can of course generalize the process of making destructors and put it
back into the type system, but that's for later.

Fixes https://github.com/facebook/flow/issues/2199

Reviewed By: samwgoldman

Differential Revision: D3680253

fbshipit-source-id: 6c15ed3608e48604acda24975945f8a795b7b9ba
"
cbb183328dd2517b2926d16e2d50b63b1eddd55e,facebook/flow,"Optimize files_to_infer for multiple files

Summary:
Originally `files_to_infer` was built to support `flow focus-check`, which took a single focused file. It wasn't terribly fast, but since it ran only once that was fine.

When `flow focus-check` was changed to support multiple focused files, `files_to_infer` just ran the same code N times. So I've tried to rewrite it to look up dependents and dependencies for multiple focused files as a batch.

This is important for lazy modes too, since they have to re-compute `files_to_infer` each recheck in order to know which file changes they can safely ignore.

Reviewed By: samwgoldman

Differential Revision: D5863549

fbshipit-source-id: 3f0ef2881d34bd3523fd45a71afa9c8c9701d236
"
67c9c3013e6346af584f14c6edfc9b7198cec215,facebook/flow,"Tighten up representation of union enums

Summary:
This is a pure refactoring diff that replaces DefTs with a new variant type
which is narrower. Canonicalizing works by rewriting all similar types to be
equal, i.e., changing reasons, removing locations. This makes types similar by
mapping to new types (canon_t and base_t) which only include the distinguishing
bits from the original DefT.

Reviewed By: mroch

Differential Revision: D6058764

fbshipit-source-id: f95865cf211072cb003a1350d6054395b23fb51e
"
c9d644e3f25890bad31a429424a2ad15210dc96c,facebook/flow,"temporary base types

Summary:
This diff introduces syntax for temporary base types that carry literal types:

`$TEMPORARY$number<42>`
`$TEMPORARY$string<""hello"">`
`$TEMPORARY$boolean<true>`

These map to internal types NumT(42), StrT(""hello""), BoolT(true) respectively.

They are useful in codemods that translate internal types to annotations, since neither the literal
types `42`, `""hello""`, `true` nor the base types `number`, `string`, `boolean` work in all
cases. Specifically, in covariant uses the literal types always work but the base types may not,
whereas in contravariant uses the base types always work but the literal types may not.

Note that this is a temporary facility!

(a) Eventually we will default to the ""more natural"" base type and the user has to explicitly
override the default carry the literal type, but that change is hard to roll out.

(b) Meanwhile the user can decide what they want in each case, and replace a temporary type by
either the base type or the literal type.

Reviewed By: panagosg7

Differential Revision: D12876606

fbshipit-source-id: c819ec83ea976efb480499b04f460a88b61b7d1c
"
92d5cf0ad1c6c5388119ea3c1d33a47030cd8cb1,facebook/flow,"remove unused option wrapper on lint severities

Summary:
A bunch of functions took an optional parameter but were always passed a Some _
argument. Probably the remains of a hasty refactor.

Reviewed By: samwgoldman

Differential Revision: D6029279

fbshipit-source-id: 24e66514077c2be76a08fa86679697db114d25c9
"
922479010b30ee110dd32332b2e697038f202274,facebook/flow,"[Normalizer] Only simplify type aliases of imported classes

Summary:
**Before:**
We were simplifying type aliases of all class types. For example,
```
// ex 1
class A {}
type T = typeof A;
```
the returned type for `T` would be simplified as:
```
Class(A, None)
```
The reason this shortcut was introduced in the first place was to simplify imports of classes:
```
// ex 2
import typeof { C } from 'm';
type _A = C;
```
Querying C in last line should still return the remote definition instead of the local one.

**Now:**
This changes the behavior for ex 1 to report `T` as
```
TypeAlias(T, Class(A, None))
```
The behavior of ex 2 remains the same, since there is not much point in reporting the import location
as provenance of `C`.

Reviewed By: samwgoldman

Differential Revision: D8664607

fbshipit-source-id: 18846a88dc6507716382db4fdb60331468a008f2
"
5ae40e26ee7f8f2a1a9c58c0b8c95f448001321e,factor/factor,"vm: remove promotion strategy, clean up compaction code"
b8845cb87efdf316f19902c2b94d37fbc4e5e19c,factor/factor,"Almost done with regexp cleanup
"
a3f0c6c057b6a579f9c316a013f248e1cf25865c,factor/factor,"use singletons instead of subclassing the image class
"
3ad52dd85b3f371f8fdb4ad9924979a74596c6ec,factor/factor,"FUEL: New refactoring: extract region as ARTICLE: (C-cC-xa).
"
bf41b187b0fa8ead7f700e6af76585599c608dff,factor/factor,"Re-organize code so that with-compilation-unit can infer
Fix with-compilation-unit to work in deployed code"
262e9d3443ec9a6f00c6d82f2fd24e5e131917ce,factor/factor,"Clean up vocabs.loader and add littledan's unit test feature
"
692b648feb31883123cc70d21759e3d61351b62a,factor/factor,"Change tabular-output and smash-pane behavior to fix panes unit tests; re-organize panes code to make more words private
"
81430947d52647a1531e46dd7947b263a2710d2d,factor/factor,"PowerPC: fix set-callstack primitive and start updating optimizing compiler backend for recent changes
"
a1aac4278696d303598679561cc8f399e1610cb7,factor/factor,"vm: clean up gc events, remove -verbosegc switch, fix compaction bug"
33d775890cfe24d95fc295cfe6da4399b36c25fd,factor/factor,"More stack frame refactoring
"
69266e3c4d78c5dbf4af4ee584c0fe97947ed344,factor/factor,"irc.client: Remove unused imports, add authors.txt, add more tests.
"
c4ef640f4d201ef4cb9257becb51272ccf52b014,factor/factor,"Big VM cleanup
- Move forward declarations of 'struct factor_vm' to one place
- Rename template parameters from T and TYPE to descriptive names. New convention: CamelCase for template parameters
- Change some higher-order functions taking function pointers into templates, and define classes overriding operator(). There's a bit of new boilerplate here but its more consistent than the old mish-mash approaches
- Put GC state into a gc_state struct
- Use exceptions instead of longjmp for non-local control transfer in GC
- In code GC, instead of interleaving code block tracing with copying, add code blocks which need to be revisited to an std::set stored in the gc_state"
2c40a6667c548263bfc121f0f0f60cd8b0adcd2d,factor/factor,"Merge branch 'master' into marshall

* master: (96 commits)
  compiler.cfg.dataflow-analysis: iterative dataflow analysis framework
  functors: add MIXIN:, SINGLETON:
  Add assoc-refine, which takes the intersection of a sequence of assocs
  compiler.cfg: Fix unit tests
  compiler.cfg.registers: minor optimization
  compiler.cfg.ssa: Cytron's SSA construction algorithm
  compiler.cfg.dominance: fix idom computation, compute dominator tree, compute dominance frontiers, add some tests
  Move conjoin-at from compiler.cfg.liveness to sets
  sequences.abbrev: add docs - not much, but a start
  sequences.abbrev: keep insertion order
  sequences.abbrev: more small refactoring
  sequences.abbrev: small refactoring
  sequences.abbrev: Initial commit
  opengl is for chumps
  alien.inline.compiler: help-lint fix
  parser: remove outdated unit tests that were superseded by tests in vocabs.parser
  vocabs.parser: add tests to assert that the correct errors get thrown
  ui.tools.listener: selecting a word from a completion popup now behaves like a USE: followed by a FROM:
  FROM: and RENAME: give a more meaningful error if the vocabulary does not exist
  compiler.cfg.stack-analysis: fix outdated tests
  ...
"
11ddbc03a4d56763d8eec123ddce61083db1a661,factor/factor,vm: signal handling cleanup
e7243da0b80dda06cfea3e55954431a7c70b8fb7,factor/factor,Clean up memoize code to not use gensym anymore
dea3604264a050d2abdf058eab93558580fe54b9,factor/factor,"Remove some usages of deprecated features
"
43c873f00a4e023f851b7ebb0cfe59397f445a11,factor/factor,"compiler.cfg.linear-scan: code cleanup
"
ee3e84a1f867850ceb7ad907e951d65a55263e29,factor/factor,"define-partial-eval framework in propagation pass makes it easy to add transforms; moving some transforms from stack checker to propagation, making them stronger
"
31a9954530c424e7dfb22a7da1cd80d5df5a7f8a,factor/factor,"Documentation updates and cleanups
"
ba1a958a321efdec8be27cdb4c7b0edcffd13468,factor/factor,"Move cd and cwd primitives to native I/O, fix Windows normalize-pathname
"
c833373a63b8d8e3146782c92608bbdfb8141e62,fastai/fastai,"Merge branch 'jh-datablock-refactor' of github.com:fastai/fastai into jh-datablock-refactor
"
49ff2c3cc66d5ce90e1dbe697f09d690d43b81fc,fastai/fastai,"tqdm notebook fix; jagged arrays in DataLoader; refactor PoolingLinearClassifier
"
967d94c7913f83b446981cba943e4f0f7d84dd07,fastai/fastai,"refactor data blocks
"
27c3a4122bf2f0a8b89d7ed49625103eb5681ede,frappe/frappe,"knowledge base cleanup
"
8661ca858f24bcb55af80605a2c785d121fce57a,frappe/frappe,"added jscolor and style cleanups
"
8527e52465df465731c21fb7d2a406c70f8ba7b0,frappe/frappe,"[cleanup] frappe.utils.scroll_to
"
2dc3054cc2ad41b5a84437dbe0ab4400ad5e57b8,frappe/frappe,"Merge pull request #261 from pdvyas/wsgi

Refactorings to remove globals"
49460beed59b6ee618f15e82fb0b536a55488fff,frappe/frappe,"Refactored plugin architecture to allow custom script reports
"
bc3761c3eae69a55ab507d2d192eb26b3d8921c4,frappe/frappe,"Install fixes, started to rewrite translate.py webnotes/wnframework#351
"
8950bfce829a849da4e74c9a630e26ca78307993,frappe/frappe,"[fixes] [imap] cleanup, rename fields, re-org
"
25f83d8f32a243c1b93d5c888bdcfbb21f095c08,frappe/frappe,"Module name based on app title and make init while creating folder
"
4967093f0932c1f01aad356852195253cf60f574,fsharp/fsharp,"Make enum cases public (#5002)

* Make Enum have public cases

* simplify

* add some tests

* Test case
"
7ee4c7f4a6af9a2b3bde3826e6e618528a461de5,fsharp/fsharp,"Don't suggest things when the entered identifier is in scope (#2218)

* Don't suggest things when they are in scope

* Don't suggest things when they are in scope

* Use id as term

* cleanup namespaces

* Proper suggestion of double tick identifiers - fixes #2217

* Do not suggest operators
"
6453d1b5b28649c010b2eb606ae7023c0ba372be,fsharp/fsharp,"Restructure NameResolution (#4471)

"
d47027d10d6b741826c47c3ae10cf6b89f34b205,fsharp/fsharp,"Color struct types with measure as value types (#5022)

* return SemanticClassificationType.ValueType for types with measure

* color measured structs as structs (only)

* add tests (wip)

* all the tests are green

* simplify code

* Update service.fs
"
1c0495ca37caee375afbeefb90e3fa44eda9db61,fsharp/fsharp,"Cancel background work  (#3063)

* cleanup

* cleanup

* diagnostics

* cleanup diagnostics

* even cleaner diagnostics

* cleanup diagnostics

* default tuning

* adjust tuning, more logging

* add test, fix whitespace

* cancel background steps

* reduce changes
"
38571be12b9be458c87836aa8d32eb1726f5b467,fsharp/fsharp,"ILX cleanup Part 2
"
7fce39fd1e39ccb55ffad634c2edf973e6d38013,fsharp/fsharp,"Navigable symbols (ctrl+click to go to definition) (#4906)

* First cut

* fix

* Order in the court

* Rename

* get rid of unused gtdservice

* wut

* Add file

* Remove unused opens

* do it right (marolf)

* Cleanup

* unused value

* Make the navigable URL the decl symbol

* refactor

* IT WAS A DIFFERENT MEF

* clean up a bit
"
6ce962e97de24273d167b6c174344e3017a6e4c7,fsharp/fsharp,"[WIP] test cleanup (#1732)

* Cleanup 'fsharp' suite
* remove resx arguments processing and System.Windows.Forms dependency 
* add FSharp.sln
* Normalize code in fsc.fs and add comments
* Normalize, simplify and cleanup lists of FX_NO_XYZ defines
* Delete all batch files from ""fsharp"" suite
* Remove FSHarp.Compiler.Hosted, it was silly
* Remove testing for portable profiles from ""fsharp"" suite as it was mostly disabled
* Reinstate ``isNil`` for ``List.empty``
* Normalize ``#if`` followed by empty then ``#else``
* Remove unused defines
* Remove old stay-resident compiler that was used on Mono years ago"
1d655445fc7ce73edaa426b72b0afab3adb8724b,fsharp/fsharp,"Implement inline rename (#1932)

* add InlineRenameService skeleton

* implement IEditorInlineRenameService instead of inheriting AbstractEditorInlineRenameService, which is roslyn-AST bound

* add some real logic into InlineRenameService

* everything in place, but does not work yet

* TryOnBefore/AfterGlobalSymbolRename should return `true`

* some progress

* port comments

* add RenamedSpansTracker

* trying to adjust span positions

* fixes

* do not check whole project in renamed symbol is local for file

* update inline rename implementation

* remove RenamedSpansTracker

* fixed: CommonHelpers.tryClassifyAtPosition return wrong result at the end position

* do not fix spans for now

* Revert ""fixed: CommonHelpers.tryClassifyAtPosition return wrong result at the end position""

This reverts commit af816832511f82458447505806a5aae44726664b.

* refactoring

* refactoring

* use Async.Cache instead of mutable Task reference to emulate a non auto-starting promise

* solution wide Inline Rename (wip)

* fix after merge

* update Microsoft.CodeAnalysis.xxx packages to 2.0.0-rc

* fix after merge
"
e8afcfd501df5f38d49c36c95995f4f7feeb4c36,gem/oq-engine,"Unified classical and classical_tiling
"
c21d108a8cb1e7c4f96e6b1270f317a4a1999d61,gem/oq-engine,"Some simplifying refactoring
"
eb5bdf899452174d3cbe28b3709b251756af028d,gem/oq-engine,"Cleanup [skip hazardlib]
"
9d103ac9bba73e2d4118845ac01ef5e0cf702edd,gem/oq-engine,"Merge branch 'improve-classical-workflow' into remove-risk-calculation
"
e37ac61762622d59372f670bff939194739d5595,gem/oq-engine,"Moved risk general calculator code to new location, updated imports, etc.
"
08feacca8e57da823d64f7b0eea98c82952179d6,gem/oq-engine,"merge branch 'rename-memcached' of github.com:bwyss/openquake into rename-memcached

Conflicts:
	tests/hazard_unittest.py
"
7a81cf4fcf9c3d6f93d2d12ccdfe15e074baabf6,gem/oq-engine,"Some refactoring
"
8dfb7519b765c473eed37e84deb51dbcd4ca8678,gem/oq-engine,"Merge pull request #372 from al-maisan/db-names-cleanup

[r=larsbutler] [f=813381,816440,815912]
This cleans up the database name space, please see https://bugs.launchpad.net/openquake/+bug/813381/comments/6 for details."
a155ff3f341d61a728685570ccba44e649809100,gem/oq-engine,"Removed the riskinput.combine function
"
930bb9e86de8be36ad8b48c90980823df9f8d502,gem/oq-engine,"Cleanup [demos]
"
21f50908c342f81c197690dfebe2631c8c83263a,gem/oq-engine,"Refactored the scenario_damage QA tests
"
7fc0a5bc7fee7454bf9333afc58d6d07b048cbca,gem/oq-engine,"Some refactoring
"
a56eeb3fd2ecf8e7b58c607c7b6fc1e7e7f02829,gem/oq-engine,"geo/mesh: refactored get_mean_dip(), now doesn't use python loops!
"
c22af2792dda09e34e2ebe77e0e326a172fceab8,gem/oq-engine,"More cleanup
"
9a164122ee5aa2a024a85fbea60596d98f2fa279,gem/oq-engine,"Improved the CacheInserter to write on a StringIO directly
"
4b4632391c5f700481fd04703c0ce9c6cd267c26,gem/oq-engine,"Refactored the SourceSitesFilter
"
0c63db2aa17c6b16e94833f7fd6a8cabdb943aba,gem/oq-engine,"More refactoring and renaming
"
1fef84244a75427168242c5a307bf7dc35fe42b8,gem/oq-engine,"Merge pull request #3722 from gem/cleanup2

More python3 cleanup"
50241ab0ab4ab0c6f7d00dd5664cb626abe18270,gem/oq-engine,"Cleaned up output table (removed a bunch of unused fields)
"
a40cb61bccf80630b70b0110968dd75651ed03f3,gem/oq-engine,"Merge pull request #15 from angri/mesh

[r=acerisara][f=931490]
Mesh object and rupture-surface-mesh interaction refactoring "
1b100f46722c6277dbec201076d14f67c748d2ff,gem/oq-engine,"Removed an unused sitecol
"
5ed3fcab8b79f97166b1b40d1488e0be8be6533c,gem/oq-engine,"Refactored the HazardGetter [skip hazardlib] [demos]
"
12b3f641d01b011f6d311249224cde50764664e0,gem/oq-engine,"Merge branch 'master' of github.com:gem/oq-engine into renamed-files
"
d89bb0be2dd26cac707b41e0d904a047db086edb,gem/oq-engine,"Refactored classical psha module
"
33204f890dc6db3d268d5276975d458732897f94,gem/oq-engine,"Merge pull request #2791 from gem/dmg_total

Made more readable dmg_total.csv"
654445d19f90ce8f222fd005f2084bf37ee906fe,gem/oq-engine,"Merge branch 'master' into nrml-risk-refactor
"
46e1ceda7c16ddc3b5c1440a2ecf50ebd201fe41,gem/oq-engine,"Renamed etags->eids
"
63405e6ca2369a1366b514f1d99f9a28831b1d31,gem/oq-engine,"Renamed oq_params to oq_job_profile
"
a4fd68257f604d6a297c485c4182287585041385,gem/oq-engine,"Merge pull request #626 from gem/rmdict

Propedeutic refactoring of the risk models management"
59988e6c60c4bc544add4314aa1e8162f953a0ea,gem/oq-engine,"db:

Renamed hazard parameter `poes_hazard_maps` to `poes`.
"
015ca98216224552fc22e726b8e3abb26cccb4fa,gem/oq-engine,"rename portfolio to model, part 1
"
b74b970d900c249cc52d09412768920575a3adc6,gem/oq-engine,"Merge pull request #1147 from gem/simplify_hazard_getter_query

Simplify hazard getter query"
c2d706eb4348e2531207117d1e3b7f22d48f20da,gem/oq-engine,"Renamed the `csq_` outputs of the scenario_damage to `losses_`
"
28d84952406760add0924c23e443ef68eb8318ec,gem/oq-engine,"Cleanup
"
d907cc468c48a70e123e31f88e256185ff6e095e,gem/oq-engine,"Some cleanup
"
ea936b726ed50f219500c456f457889d2e99e055,gem/oq-engine,"refactored classical and event based
"
4c9fc49dcb2eb002238650aeb755fc938013042c,gem/oq-engine,"Some cleanup [skip hazardlib][demos]
"
2424c0354a313e633d0a651e995ac92f2e96e265,gem/oq-engine,"Merge pull request #328 from favalex/risk-curve-db-writer-cleanup

Slightly modified the db tables used to store the loss curves."
cf492434f342db286c39b60f3dccf89cabd8dd64,gem/oq-engine,"Merge pull request #461 from mbarbon/rewrite-test-code-with-django

[r=al-maisan,favalex][f=833654]
Rewrite test code using Django ORM"
01133f206540ebccd1f4ed1d6d2bec4ce49992ce,gem/oq-engine,"risk demos: all sym-linked files are moved into a new 'common' directory, and .ini files modified accordingly
"
642ec13754eceb12fc1eaf649d4d7762bd52223f,hughsie/fwupd,"trivial: Remove GetUpdates as it is no longer used
"
b529de2bfc455def446e5ae7bab22ab69046d3c8,indico/indico,"Move dashboard to user module and jinja
"
c504eb3ac08ec4cebb1bab67d91081a478a4a6c4,indico/indico,"Move _EventProxy class to module level
"
97329dea61976f52bf0244bb9ad28cc0d3926196,indico/indico,"Room selector widget improvements

* Fixed clear filter deselecting rooms
* Prevent submit form on ENTER
* Avoid sending selected rooms twice in the form
* Fixed leaked variable
"
6e9e9513bfb6ded20e9ef2e6e7d3f5160feb9af9,indico/indico,"[IMP] Refactoring ConferenceReview code

 - This class has changed the name
"
b5947841475c49cbff9bebfc46e60baab578e804,indico/indico,"[DEL] Deleted obsolete code
"
3acdda0465ddf893e73eb8e684a3f87dd3ddbb32,indico/indico,"[FIX] add() -> insert()

 * for ZODB 3.8.*
"
1536696b1559e9ddde4bcc553388a08bde3a5a71,indico/indico,"Rename categories/{categories,management}.js
"
7641f83024c4ffa54e008db8ca8fada17afafb03,indico/indico,"Renaming
"
928f51cc993950cde067b01c0260cba8af0b217d,indico/indico,"[REF] RegForm Angular: RESTAPI renamed
"
2855b1e859b9e5481678121ceedd6161f2e6ec3e,indico/indico,"[DEL] Removed not used Session Slot related code

- removed WPModSlotEdit, WPModSlotNew related code
- removed abstractMgr parameter from WPModMergeAbstracts
"
3145e6bdc57dd54d609a7ecc2c2f024b523438e5,indico/indico,"Rename to wtf_field_kwargs
"
bea9ba3b3556790c51dca930c1937f48918d1ea7,inviwo/inviwo,"Core: Event cleanup, compiling version. Need more testing, for glfw and touch

"
9fa50f3a90d749a684a3c0763bf2c507c5cd5ff7,inviwo/inviwo,"Core: Ports, more interface cleanup, added a NetworkLock RAII class also.

"
e7a3ea2c2be0dd6a76c24f8fb0e7bf79ba1cf0e2,itchio/butler,"Unified pagination
"
120e5721693a88961256db0b1d199fa925d5f80e,itchio/butler,":arrow_up: wharf, use fanout in split, simplify ranges some more
"
fd82db4331b47b165e8504fccbcbb574dcd0f1e4,itchio/butler,"rename 'cave' command to operate, introduce contexts
"
6b02558a1326426673fadedf9f89bb40b16261a8,jackwasey/icd,"long to wide deprecated version working better
"
d394d62a256d141be5c8bc1e829dbdc320d8bd58,jackwasey/icd,"ignore some intermediate compiled files in build
drop jwutil dependency and bring in the few functions into util.R
GNU GPL copyright notice and LICENSE files
"
5799555c56cc664a98049908a8335ee8590a1e1f,jackwasey/icd,"remove redundant code for 'possible' ICD-10 codes - there are too many; don't export default S3 method when it re-uses UseMethod to work around bug: https://github.com/klutometis/roxygen/issues/448 ; better ICD-10 code testing
"
bacd1244f8ef00ddc74541912cf5c7163b546d87,jackwasey/icd,"rename data as PCS seems to be accepted abbreviation for procedure codes
"
b5d25427e5cf45dfb88669b15ad04b126c174b3e,jekyll/jekyll,"Merge branch 'master' into minor-refactors
"
e5a5fa5c4b40918247be8486d27a1676b6d2b044,jesopo/bitbot,"modules/logging.py -> IRCLogging.py; IRCLog.py -> IRCBuffer.py; change logging
to be an object on the server object instead of an event call
"
27809a507a76dcceddc219654d1abcb891bbe51e,jopamer/swift,"[stdlib] Don't @asmname POSIX APIs

For reasons not entirely clear yet, this can cause problems in the
compiler when some modules bring in the same names via the Darwin
module (see <rdar://problem/18184795>).  Use SwiftShims instead.

Swift SVN r21646
"
fca25fbeb99616b1f24c76a0f495cc08d5bea761,jopamer/swift,"Comment improvements and test fixes
"
f657ad2d3a8fd516974951bde9f0961257ffcd1b,jopamer/swift,"Rename *ExistentialOpaque instructions to *ExistentialValue.

These instructions have the same semantics as the *ExistentialAddr instructions
but operate directly on the existential value, not its address.

This is in preparation for adding ExistentialBoxValue instructions.
The previous name would cause impossible confusion with ""opaque existentials""
and ""opaque existential boxes"".
"
be3d1af5254ceae0a01ec25d3f62934294e2f8f4,jopamer/swift,"[ABI/Runtime] NFC: Rename function metadata arguments to parameters
"
823c24b355017e3797c665c656b48fc61f01bc85,jopamer/swift,"[SE-0112] Rename ErrorProtocol to Error.

This is bullet (5) of the proposed solution in SE-0112, and the last
major piece to be implemented.
"
b22fd22d5736b440c09ae7cd3f0e97d7c3d51419,jopamer/swift,"SILGen: Handle Builtin.gep as a SIL builtin.

Add an index_raw_pointer instruction that acts like index_addr but for RawPointers, and use it to lower Builtin.gep into SIL instead of into IR.

Swift SVN r5479
"
d03a575279cf5c523779ef68f8d7903f09ba901e,jopamer/swift,"Unify the capitalization across all user-visible error messages  (#11599)

* Unify the capitalization across all user-visible error messages (fatal errors, assertion failures, precondition failures) produced by the runtime, standard library and the compiler.

* Update some more tests to the new expectations.
"
b4ec45d6254b5aa73635c3274f2b6b0f5f8c17d6,jopamer/swift,"stdlib: make Slice.init(base:bounds:) public

Swift SVN r30113
"
a57199cf681fe41e25a95dd42b1972ea4f690f40,jopamer/swift,"[refactoring] Implement ""Convert to Trailing Closure"" refactoring action
"
8b97f911c6317aa57bbc45be006cde0e9ae874dc,jopamer/swift,"Reimplement (de-)serialization of protocol conformances.

Primarily, unique normal protocol conformances and reference them via
a conformance ID. This eliminates the use of trailing records for
normal protocol conformances and (more importantly) the cases were we
would write incomplete conformances. The latter could cause problems
if we ever ended up deserializing an incomplete conformance without
also deserializing a complete record for that same conformance.

Secondarily, simplify the way we write conformances. They are now
always trailing records, and we separate out the derived conformance
kinds (specialized/inherited) from either a reference to a normal
conformance in the current module file (via a normal conformance ID)
or via a cross-reference to a conformance in another module file
(currently always a normal conformance, but this need not always be
the case). As part of this, make each conformance record
self-sustaining, so we don't have to push information down to the
reading routines (e.g., the conforming type) to actually produce a
proper conformance. This simplifies deserialization logic further.

Swift SVN r26482
"
99b075c32a69ddfd2a0ed1295bfdd1085dadd9bc,jopamer/swift,"Rename SILFunctionTrans -> SILFunctionTransform

Swift SVN r13536
"
7955aa13e63fc3da24ad9bfb44c1c07ae1551bff,jopamer/swift,"Rename @NSKeyedArchive* attributes.

@NSKeyedArchiveLegacy -> @NSKeyedArchiverClassName
@NSKeyedArchiveSubclassesOnly -> @NSKeyedArchiverEncodeNonGenericSubclassesOnly

Fixes rdar://problem/32178796.
"
b8ca098949317c139cc47510a7b3925997e7b80e,jopamer/swift,"Merge pull request #8742 from practicalswift/gardening-20170413

[gardening] Use consistent headers. Remove redundant includes. Remove unused methods. Fix typos, etc."
44d46de7c95250881e0c3bd1e79204196d95582d,jopamer/swift,"Use swift::SourceManager's addNewSourceBuffer() instead of llvm::SourceMgr's AddNewSourceBuffer().

Also remove the SourceLoc parameter from addNewSourceBuffer(). In llvm::SourceMgr
it is used to indicate textual inclusion, which we don't have in swift.

Swift SVN r10014
"
d4db635e3de6e0b4283dd8a13282e536293ffe5f,jopamer/swift,"Add object literal syntax and _{Color,Image}LiteralConvertible protocols

Add syntax ""[#Color(...)#]"" for object literals, to be used by
Playgrounds for inline color wells etc. The arguments are forwarded to
the relevant constructor (although we will probably change this soon,
since (colorLiteralRed:... blue:... green:... alpha) is kind of
verbose). Add _ColorLiteralConvertible and _ImageLiteralConvertible
protocols, and link them to the new expressions in the type checker.
CSApply replaces the object literal expressions with a call to the
appropriate protocol witness.

Swift SVN r27479
"
086c12114dfdff1b7b7179a6052f43a8d73557ed,jopamer/swift,"IRGen: switch to absolute pointers for nominal type descriptors

Alter the value metadata layout to use an absolute pointer for the
nominal type descriptor rather than a relative offset relative to the
complete type metadata.  Although this is slightly less efficient in
terms of load times, this is more portable across different
environments.  For example, PE/COFF does not provide a cross-section
relative offset relocation.  Other platform ports are unable to provide
a 64-bit relative offset encoding.

Given that the value witness table reference in the value metadata is
currently an absolute pointer, this page is most likely going to be
dirtied by the loader.
"
d5a619bbad4bdbcdb5cb865f276de1e2c46f4e88,jopamer/swift,"Small refactoring of call graph code.

This is a first step towards building a better call graph.

Swift SVN r21152
"
c5e3dc4e2031f5456793d10dd680598022b2b253,jopamer/swift,"Rename ArrayDowncastExpr to CollectionDowncastExpr. NFC


Swift SVN r18898
"
a4d7b37eecc1b8a8e94cf1ef7ae1da1fe71f7706,jopamer/swift,"[sil-devirtualizer] Use stricter type checks before casting

Before generating an upcast instruction, make sure that the required type conversion is valid.

Fixes rdar://28601761
"
acf5a426bb2e499e491415a037f0a8171cd40e1d,jopamer/swift,"as a tiny QoI improvement, parse ""#if 0"" and recover as if the user
wrote ""#if false"" while producing an error + fixit.


Swift SVN r28411
"
d4fbca11834fb089d86c4fa8eb41601efdb73c96,jopamer/swift,"[Sema/CS] std::function -> llvm::function_ref for some non-escaping params.
"
fb3eb0b646ba2c7120590c71f387a5e2f24f18f7,jopamer/swift,"Simplify function signature optimzation.

Several functionalities have been added to FSO over time and the logic has become
muddled.

We were always looking at a static image of the SIL and try to reason about what kind of
function signature related optimizations we can do.

This can easily lead to muddled logic. e.g. we need to consider 2 different function
signature optimizations together instead of independently.

Split 1 single function to do all sorts of different analyses in FSO into several
small transformations, each of which does a specific job. After every analysis, we produce
a new function and eventually we collapse all intermediate thunks to in a single thunk.

With this change, it will be easier to implement function signature optimization as now
we can do them independently now.

Small modifications to the test cases.
"
d5cbb0bd6225effa4a20c7b5cbda3f4ec0f17d14,jopamer/swift,"Runtime changes for the copy-on-write existential implementation

Adds the runtime implementation for copy-on-write existentials. This support is
enabled if SWIFT_RUNTIME_ENABLE_COW_EXISTENTIALS is defined. Focus is on
correctness -- not performance yet.

Don't use allocate/deallocate/projectBuffer witnesses for globals in cow
existential mode.

Use SWIFT_RUNTIME_ENABLE_COW_EXISTENTIALS configuration to set the default for
SILOptions.

This includes an IRGen fix to use the right projection in
emitMetatypeOfOpaqueExistential if SWIFT_RUNTIME_ENABLE_COW_EXISTENTIALS is set.

Use unknownRetain instead of native retain in dynamicCastToExistential.
"
aceb63e058bd89ca1f7c11f85f96ed3f8000b347,jopamer/swift,"[stdlib] Improve the flatMap deprecation message

<rdar://problem/36555646>
"
e418e93511d84cb93ad26b2d04a14706749bc228,jopamer/swift,"Start cleaning up method name importing.

Import a selector into a Swift method name, performing splitting at
that point. Use the resulting method name to determine the argument
names of the parameters, rather than trying to chop up the selector
again. There's more refactoring to do here.

This fixes a longstanding bug where the first argument of an
Objective-C method got the internal parameter name when it should
have gotten no name at all.

Swift SVN r15850
"
a4afb993f1a850a8daced55f612defe3fed3c2f7,jopamer/swift,"AST: Make Type::transform() more robust with ParenTypes

There is never any reason for a transform to treat a ParenType
differently from the underlying type itself. Calling the given
function with ParenTypes is a source of bugs where they get
desugared on accident. Make transform() skip the function
entirely for ParenTypes, and remove a spot where we were
checking explicitly.
"
6a24e5475edc485f3755dd84ca925a863076cb61,jopamer/swift,"Remove a separate bit for @objc inference, and use normal implicit attributes

This allows us to get rid of /* @objc(inferred) */ completely.


Swift SVN r16215
"
319a7b4cddba613f7c3479dee4a5458b2796ec87,jopamer/swift,"Merge pull request #10277 from slavapestov/unqualified-lookup-cleanup

Unqualified lookup cleanup"
d16ae98e2ad6d97c9c99aa6c57e4e67d91ae9188,jopamer/swift,"Review fixes:

Rename isThereAPrimaryInputWithAFilenameAt to isInputPrimary.
Remove spurious delayed_function_body_parsing.
Simply return type of getOutputFilenamesFromCommandLineOrFilelist.
"
d56f67ed814fbef398dc710fe9f5c5ff92b52a90,jopamer/swift,"Merge pull request #5459 from DougGregor/occurs-check-cleanup

"
f7c873507b92430a2554b12647267816ac2b424e,jopamer/swift,"rename ExprVisitor to ExprStmtVisitor, since it can visit either kind.


Swift SVN r464
"
9418b9cfd43fa4c8ba38762b44587c63f75445bc,jopamer/swift,"[Type Checker] Try harder to synthesize enum Equatable conformance on demand.

If either parameter to == has a known concrete type at constraint generation
time, see if that type is a nominal that can derive its conformance to
Equatable. If so, do so, and then add that == to the overload set.
(It may already be there, but that's okay -- it will get uniqued later.)

This isn't perfect because it relies on one of the parameters to == having
a concrete type /before/ constraint solving. There are plenty of reasons
why that wouldn't happen. But this at least fixes the common case, and
breaking the expression up into multiple lines is a less distasteful
workaround than replacing (x == .Value) with !(x != .Value). I've added a
test case that should work but doesn't that we can revisit later.

rdar://problem/18073705

Swift SVN r21557
"
6871a769651977d75690241609f0c92368aae189,jopamer/swift,"[ClangImporter] Preparations for removal of getName on ValueDecl

With the introduction of special decl names, `Identifier getName()` on
`ValueDecl` will be removed and pushed down to nominal declarations
whose name is guaranteed not to be special. Prepare for this by calling
to `DeclBaseName getBaseName()` instead where appropriate.
"
a4230ab2ad37e37edc9ed86cd1510b7c016a769d,jopamer/swift,"[stdlib] Update stdlib to 4.0 and reorganize compatibility shims (#17580)

* Update stdlib to 4.0 and move all compatibility shims into a dedicated source file
"
13134ec25cba969419a6793926e8b1b1435407d7,jopamer/swift,"IRGen: remove the now unused LinkEntity Kind TypeMangling
"
f2173e9b24d33050798759704cca3ff5f0431987,jopamer/swift,"AST: Remove ModuleDecl parameter from GenericEnvironment::getSubstitutionMap()

This method maps interface types to archetypes, which in general
requires a module for performing conformance lookups, if mapping
a member type of a generic parameter which has been made concrete.

However, in practice the types we are mapping here are all canonical
with respect to the generic signature, because they came from
GenericSignature::getAllDependentTypes(), so we actually don't need
to do conformance lookups.

This allows some code to be simplified.
"
8104a142195bbc5056ebc0208d703ae793c146ad,jopamer/swift,"Merge pull request #12427 from swiftix/sil-serialization-before-optimizations5

Add support for the early serialization of SIL modules using ""high-level"" SIL and make it the default"
3f993ef58037c6aaa1a4bcc14729f90ea0e1b351,jopamer/swift,"Merge pull request #11203 from moiseev/integers-revised

[stdlib] Implement updates to SE-0104"
381eb52207d39411990a04bafe0d7e454cab6925,jopamer/swift,"Revert ""Further consolidate mutation code, this time for DeclRefExprs.  With that""

Backing out to fix th build.

Swift SVN r28958
"
7f4c0b981cd00aa1ded3209b4cf571897ada7c32,jopamer/swift,"rename the StoredObjC storage class to StoredWithTrivialAccessors since
we'll be using it for more general things soon.  NFC.


Swift SVN r14329
"
8e179d646ead9eebf9ff83cf93ee094369bd5aaa,jopamer/swift,"IRGen: get unchecked_ref_cast working with class existential operand

There was some duplicated code and we weren't doing a claimAll() on the
input explosion in one of the duplicates.

This partially reverts r28686, but keeping the test and updating it.

Fixes <rdar://problem/21005110>.

Swift SVN r28840
"
1907ad9c918bac86ed1c61d1f86494a67f25c516,jopamer/swift,"Move 'mutating' and 'nonmutating' onto the new attribute processing machinery.
Also:
 - merge the test/decl/func/functions_new.swift testcase into test/Sema/immutability.swift,
   where the bulk of similar tests are.
 - Move the type checking logic for 'dynamic' out of ValidateAttrs into TypeCheckAttrs
 - Change the encoding for 'override' to 49 so that stuff vbr's so much more densely :-)




Swift SVN r20006
"
f99904ac667ee98df52b57a78b07494cba0e7135,jopamer/swift,"Eliminate the useless flag -enable-experimental-collection-casts.

This eliminates a pile of now-dead code in:
  * The type checker, where we no longer have special cases for bridging conversions
  * The expression ASTs, where we no longer need to distinguish bridging collection up/down casts
  * SILGen, which no longer uses

Still to come is the removal of the
_(set|dictionary)Bridge(From|To)ObjectiveC(Conditional)? entrypoints
from the standard library. They're still used by some tests.
"
99daad0f303ffe5ff7ebeeaecc3c954fc57d18e4,jopamer/swift,"Rework witness matching for generic requirements.

Reimplement the witness matching logic used for generic requirements
so that it properly models the expectations required of the witness,
then captures the results in the AST. The new approach has a number of
advantages over the existing hacks:

* The constraint solver no longer requires hacks to try to tangle
  together the innermost archetypes from the requirement with the
  outer archetypes of the context of the protocol
  conformance. Instead, we create a synthetic set of archetypes that
  describes the requirement as it should be matched against
  witnesses. This eliminates the infamous 'SelfTypeVar' hack.
* The type checker no longer records substitutions involving a weird
  mix of archetypes from different contexts (see above), so it's
  actually plausible to reason about the substitutions of a witness. A
  new `Witness` class contains the declaration, substitutions, and all
  other information required to interpret the witness.
* SILGen now uses the substitution information for witnesses when
  building witness thunks, rather than computing all of it from
  scratch. ``substSelfTypeIntoProtocolRequirementType()` is now gone
  (absorbed into the type checker, and improved from there), and the
  witness-thunk emission code is simpler. A few other bits of SILGen
  got simpler because the substitutions can now be trusted.
* Witness matching and thunk generation involving generic requirements
  and nested generics now works, based on some work @slavapestov was
  already doing in this area.
* The AST verifier can now verify the archetypes that occur in witness substitutions.
* Although it's not in this commit, the `Witness` structure is
  suitable for complete (de-)serialization, unlike the weird mix of
  archetypes previously present.

Fixes rdar://problem/24079818 and cleans up an area that's been messy
and poorly understood for a very, very long time.
"
56785e81a6df5aa7baa480e5a0dee80251fc70dc,jopamer/swift,"Merge pull request #1477 from PatrickPijnappel/patch-3

[stdlib] Rewrite UTF8._isValidUTF8()"
249fa47e062ce0c8e0a6f2796a20a57be9836913,jopamer/swift,"Merge pull request #16783 from gottesmm/pr-558d4c10f58352087238f62324c68b56ca4abad2

[definite-init] Split raw SIL instruction lowering out of DI into its…"
d5073d9e4fcbbf3124f8b5a93c093e3c52b3cc4c,jopamer/swift,"rework StmtCondition to be based on patterns initializers and boolean
conditions instead of being wrapped around PatternBindingDecl.  When
let/else goes away, PatternBindingDecl will become a lot simpler.


Swift SVN r28055
"
c6a88262cfaace097c564de27a425ae895071e90,jopamer/swift,"[stdlib] Scrap bit-rotted FastEntryPoints.s. Rewrite refcounts using __atomic.

Generated code on x86_64 for swift_retain and swift_release and 
swift_allocObject are unchanged. arm64 is improved by using weaker 
memory barriers, fixing rdar://17423624.


Swift SVN r22887
"
ff70528d8c38928c68b5717717498ac8e74a41c1,jopamer/swift,"Merge pull request #18253 from rjmccall/reorganize-type-descriptor-flags

Reorganize TypeContextDescriptorFlags to be a bit more semantic"
70c5755adb22a1605e78dceff5160a9b5b96b087,jopamer/swift,"[SR-381]: runtime resolution of type metadata from a name

replace ProtocolConformanceTypeKind with TypeMetadataRecordKind

metadata reference does not need to be indirectable

more efficient check for protocol conformances

remove swift_getMangledTypeName(), not needed yet

kill off Remangle.cpp for non-ObjC builds

cleanup

cleanup

cleanup comments
"
48dd1e837b564514917f1150f5185c556135ee99,jopamer/swift,"[ConstraintGraph] Add filtering to `gatherConstraints` per type variable

Most of the use-cases of `gatherConstraints` require filtering
at least based on the constraint kind that caller is interested in,
so instead of returning unrelated results and asking caller to
filter separately, let's add that functionality directly to
`gatherConstraints`.
"
2177f770cca86417b6198a54249ac10b4b3cf65e,jopamer/swift,"Merge pull request #6222 from gottesmm/pp-1

[sil-bug-reducer] Separate construction of pass pipelines into separate functions."
982e3d09f89aadadcec63ae8637188dcd1d12740,jopamer/swift,"[stdlib] Revise documentation for new indexing model

This revises and expands on documentation for the new collection methods
for working with indices and the revised Swift 3 set APIs. In addition,
it includes documentation for the new range types.
"
a05467558977f58e37e50e0d69312925d160a938,jopamer/swift,"Remove unreachable code in SimplifyCFG.

Add a simple pass to remove blocks that are not reachable from the entry
of the function. Run it once before simplifying blocks, and then if any
blocks are simplified run it again in case those simplifications
resulted in an unreachable loop.

Swift SVN r16364
"
d30b364e242bf9dafb7e1474638fd9bce49dc22b,jopamer/swift,"[PlaygroundTransform] Don't log the results of functions that return ().

The fix for missing logging for += accidentally made us log ALL functions that
return (), not just the ones that happen to touch inout parameters.  That's not
really desirable, and resulted from a missing testcase.

This fixes the problem and adds a testcase.

<rdar://problem/27995558>
"
bca08025a0a8b28e3e081fd8c2c4df7a3d5d4369,jopamer/swift,"[build-script] Rename source-tree-includes-tests to swift-include-tests.

This matches cmake more closely and also matches the build-script-impl argument
for including llvm tests (""llvm-include-tests"").
"
b46f7523e44b700ef66b2ccf66c4e20a32bb5bc5,jopamer/swift,"SIL: Make SILFunctionTypeSubstituter use interface types.

Fairly straightforward, with the caveat that we always have to re-lower the substituted type if the original type is dependent.

Swift SVN r13700
"
89834f8d5fcce652401ecaeec4addace48cb2fae,jopamer/swift,"[ObjC IRGen] Clean up emission of Objective-C selectors.

Make sure to set the linkage correctly, treat the selector data as
non-constant, note that it is externally-initialized, and add it to
llvm.compiler.used rather than llvm.used.
"
1a991da16d1a76dc0b465aa24da26db0ae70481a,jopamer/swift,"AST: Assign interface types to ParamDecls

First, ensure all ParamDecls that are synthesized from scratch are given
both a contextual type and an interface type.

For ParamDecls written in source, add a new recordParamType() method to
GenericTypeResolver. This calls setType() or setInterfaceType() as
appropriate.

Interestingly enough a handful of diagnostics in the test suite have
improved. I'm not sure why, but I'll take it.

The ParamDecl::createUnboundSelf() method is now only used in the parser,
and no longer sets the type of the self parameter to the unbound generic
type. This was wrong anyway, since the type was always being overwritten.
This allows us to remove DeclContext::getSelfTypeOfContext().

Also, ensure that FuncDecl::getBodyResultTypeLoc() always has an interface
type for synthesized declarations, eliminating a mapTypeOutOfContext()
call when computing the function interface type in configureInterfaceType().

Finally, clean up the logic for resolving the DynamicSelfType. We now
get the interface or contextual type of 'Self' via the resolver, instead
of always getting the contextual type and patching it up inside
configureInterfaceType().
"
5faf530cf2ca3564217d61c9e82b16ed1e93ce25,jopamer/swift,"implement restructuring assignment of let decls, repurposing the existing
implosion logic.  This resolves rdar://15716277


Swift SVN r11679
"
f3f9c3edb40267db6d15ed63578a8a98cd8170e6,jopamer/swift,"SILGen: Relax assertion that there are no active cleanups between the current scope and the return scope.

The cleanup stack pointer is not reset when there are only dead cleanups in a scope, so relax this assertion to check that there are no live cleanups instead of that the cleanup handles are at the same height. Fixes <rdar://problem/16203107>.

Swift SVN r14674
"
6c4b37fd300f5325689bdace4dd98a2bb98ac6ef,jopamer/swift,"make class_method and protocol_method print the type of the object value being referenced,
a step towards parsability.


Swift SVN r5925
"
59df50960e514edce93c7eab35a14d7fe019f977,jopamer/swift,"[Sema] Improve diagnostics for #selector() expressions

When the `#selector()` expression refers to a parameter or variable, we
don't want to call it a property.

Fixes the rest of SR-880.
"
6de9d84b1ff04880e6bdeccb76eab998838b7f8b,jopamer/swift,"SILGen: Handle initializers in protocol extensions.

For the most part, this just involves spot fixes to make sure protocol inits follow the same paths as value type initializers would, with the extra wrinkle that we have to ensure we forward the correct metatype from the delegating initializer to the delegatee, in case the initializer is invoked with a different dynamic type from the static Self type. This should handle non-@objc delegations; @objc will need some additional work.

Swift SVN r27900
"
d89a21460e5065cd3c6a438b8fac541a935c3a56,jopamer/swift,"Add builtins to generate instructions for tail-allocated arrays in SIL.

Those builtins are: allocWithTailElems_<n>, getTailAddr and projectTailElems
Also rename the ""gep"" builtin, which indexes raw bytes, to ""gepRaw"" and add a new ""gep"" builtin to index in a typed array.
"
c5950f6ad141d995d39c105f20cba83cfe58ff0e,jopamer/swift,"Merge pull request #98 from apple/clang-import-name-refactoring

[Clang importer] Refactor and centralize name mapping"
f168e7270c1d21cee84b6681e794bce35f9860d6,jopamer/swift,"[Type checker] Use DependentMemberType instead of type variables for nested types.

In the constraint solver, we've traditionally modeled nested type via
a ""type member"" constraint of the form

  $T1 = $T0.NameOfTypeMember

and treated $T1 as a type variable. While the solver did generally try
to avoid attempting bindings for $T1 (it would wait until $T0 was
bound, which solves the constraint), on occasion we would get weird
behavior because the solver did try to bind the type
variable.

With this commit, model nested types via DependentMemberType, the same
way we handle (e.g.) the nested type of a generic type parameter. This
solution maintains more information (e.g., we know specifically which
associated type we're referring to), fits in better with the type
system (we know how to deal with dependent members throughout the type
checker, AST, and so on), and is easier to reason able.

This change is a performance optimization for the type checker for a
few reasons. First, it reduces the number of type variables we need to
deal with significantly (we create half as many type variables while
type checking the standard library), and the solver scales poorly with
the number of type variables because it visits all of the
as-yet-unbound type variables at each solving step. Second, it
eliminates a number of redundant by-name lookups in cases where we
already know which associated type we want.

Overall, this change provides a 25% speedup when type-checking the
standard library.
"
321af9f0908e107edf5db6dd2b59432e671ebea2,jopamer/swift,"Some frontend cleanup.

Package up some useful REPL context into a header-able REPLContext class. Move the response metavar index there instead of having it as a gross mutable static variable.

Swift SVN r4203
"
2e580e1eb7af689f32d0cfffcdb95256d8330a8e,jopamer/swift,"@objc inference: correctly check @objc on deserialized decls using ->isObjC(),
instead of looking for an attribute, which we don't deserialize.

This was preventing using AnyObject? in @objc decls.

rdar://16339290


Swift SVN r15236
"
97eb75294d457ff8c58db5954d6632829a8fc940,jopamer/swift,"IRGen: Make getFixedPacking a public interface of TypeInfo.

This is useful for LLDB to determine, given a known fixed-size type, whether values of that type pack inline into fixed-size buffers without having to grovel the VWT in the process memory.

Swift SVN r9632
"
8aca63b2fcc0f3039f50c508a4da1d8257ae4cdf,jopamer/swift,"Don't delete debug_value/debug_value_addr in dead code elimination unless their definitions are dead.

And also adapt a whole set of SIL passes so that they can deal with (the not deleted) debug_value instructions.
This was required to prevent perforamnce and code size regressions.
Now the generated code is (almost) the same as before.

The effect of this change is that we keep debug_value/debug_value_addr also in optimized code (more or less).
Fixes rdar://problem/18709125.




Swift SVN r28872
"
778e76e1583adf1b71c0b9ae44a359043746c50b,jopamer/swift,"[SE-0091 Follow-up] Move more operators into types, now for generic operators.
"
d97ac3e64cc45949ccb53f5c1748e698f1ca7418,jopamer/swift,"stdlib: rename RangeReplaceableCollectionType.extend() to appendContentsOf()

rdar://21972324

Swift SVN r30607
"
8917eb0e5ac50e424800bac8a57266a1cd945ab1,jopamer/swift,"Revert ""[Runtime][StdLib] Migrate mirrors to use CustomReflectable API, rewrite dump()""

This reverts commit 9798dfd4aa688486a9d4e2243fd510d34c2bf4c8 because it
broke the stdlib build.
"
bab9b62c87b3d08d6a8cd146d9706b9128dbe4fa,jopamer/swift,"reimplement the ""function produces expected type 'XYZ'; did you mean to call it with '()'?""
fixit hint in CSDiags instead of being a FixKind.  This resolves a number of issues with
it, particularly that it didn't actually check to see if the function in question takes
a () argument or not.  

This fixes:
<rdar://problem/21692808> QoI: Incorrect 'add ()' fixit with trailing closure

among other issues.



Swift SVN r31728
"
63784ca41c4298eb3dea30b0151e4892d072008b,jopamer/swift,"remove the ManagedValue::Unmanaged marker, lets just use ManagedValue::forUnmanaged()
instead, which is shorter.  It is better to have one way to do things than two.


Swift SVN r12710
"
4d2e0ec427c8737287bec16e7394b3ca90bc391f,jopamer/swift,"Merge pull request #5244 from xedin/SR-2193

SR-2193: Improve diagnostic when member exists but it's not a type"
29b4a21b78f1960ed345681bee5316bc2e9cd317,jopamer/swift,"Rename TypeChecker::convertToType() to TypeChecker::coerceToType(), so
that we're slightly-more-consistently using the term 'coerce' to refer
to this process.


Swift SVN r1311
"
913f09838aeca18a66ca6c28b0fa92353f72a505,jopamer/swift,"[stdlib] Add a default generate() for generators...

...that are also sequences, and rip out all redundant implementations of
generate() that match a default.

Swift SVN r30035
"
f2c4aeac31c9cf9d81f4aa4e6f0af58c572afc12,jopamer/swift,"[sil] Refactor isLoweringOf from the verifier onto SILType.

I am going to use this to put an assertion in SILBuilder on ValueMetatype so
that the assertion fires right when the ValueMetatype is created instead of
later once we are verifying. It is still only being used in assertions/etc.

rdar://problem/31880847
"
e6b0e3c7fb2efd9ff200bae1ef5f5568261e55d5,jopamer/swift,"[stdlib] Removing the deprecated flatMap overload

The following code behaves incorrectly due to the presence of this
overload.

let a: Int = 1
let b: Int? = 2
let c: Int? = nil
let result: [Any] = [a, b, c].flatMap { $0 }

Fixes: <rdar://problem/31910642>
"
0367afe4590e0a3fa70c06fef42c2543503563e0,jopamer/swift,"Merge pull request #1361 from apple/replace-file-line

stdlib tests: replace '__FILE__' and '__LINE__' with '#file' and '#line'"
434324ec0a96c8e0fd24ceac5fbeca75c4c52337,jopamer/swift,"Move the ""is there a call to super.init?"" check into a ConstructorDecl predicate.


Swift SVN r11960
"
5de654067009a03458b7105b0d9f91beb68a8fdb,jopamer/swift,"Revert ""Dramatically improve DI diagnostics in initializers fixing rdar://18414728.""

This reverts commit r22223.

Swift SVN r22233
"
876cea81aeac494a2bb211d2c4d489116a5a6be6,jopamer/swift,"SIL: Add an allowed access kind to the opened value of an open_existential_addr instruction

Once we move to a copy-on-write implementation of existential value buffers we
can no longer consume or destroy values of an opened existential unless the
buffer is uniquely owned.

Therefore we need to track the allowed operation on opened values.

Add qualifiers ""mutable_access"" and ""immutable_access"" to open_existential_addr
instructions to indicate the allowed access to the opened value.

Once we move to a copy-on-write implementation, an ""open_existential_addr
mutable_access"" instruction will ensure unique ownership of the value buffer.
"
96947b2606158056c13a32a0d7931953c9ac4428,jopamer/swift,"Change silgen to lower string literal lengths to an explicit value, instead of using
the result of the string_literal instruction.

This fixes:
<rdar://problem/15883849> Diagnostic CCP should be able to fold operations on string_literal lengths

I will follow up with cleanups this enables.




Swift SVN r13361
"
050b324593b19d3543c54d78249bf09e9934d47f,jopamer/swift,"[Omit needless words] Split before last preposition in most cases.

Splitting *before* the last preposition tends to keep the
prepositional phrase together. Only leave the preposition on the base
name in rare cases where we would end up with weird argument labels
(e.g., prefer ""moveTo(x:y:)"" to ""move(toX:y:)"").

Also, refine our heuristics for when we can remove the preposition
entirely.
"
888a32be6059743115b04465d32d9fd8d67b223f,jopamer/swift,"Merge pull request #4758 from slavapestov/small-generics-cleanups

Small generics cleanups"
3871cda2054c034e065b887008c42e6d299daf94,jopamer/swift,"Push SILBoxType::getFieldType into SIL and make it take a SILModule.

Applying nontrivial generic arguments to a nontrivial SIL layout requires lowered SILType substitution, which requires a SILModule. NFC yet, just an API change.
"
5b4c73ed3b49b330eb29f9b6379852989abfec04,jopamer/swift,"Revert ""GenericSpecializer: When specializing a generic function, convert indirect parameters/result to direct parameters/result.""

This reverts commit 4187959e664bc2968637afd84a6f1138075e0292.

There is a crash in StdlibUnittests on i386 (Release-Assert build)
"
10ddb046133a755d878047e77ac377c2d8bd1fc9,jopamer/swift,"[ConstraintSystem] Add SuppressDiagnostics/AllowUnresolvedTypeVariables flags

Instead of mixing flags between type-checker and constraint solver, let's
move the ones which are useful in constraint system there. Doing
so allows for `solveForExpression` to be moved from `TypeChecker` to
`ConstraintSystem` which consolidates solver logic.

It also allows to set these flags as part of constraint generation/solving,
which is sometimes important.
"
6b51806b54d0bba32298cd945b04eab737d3bef0,jopamer/swift,"[SE-0157] Make *Collection.SubSequence conform to corresponding *Collection.

Introduce (recursive) constraints that make the *Collection constraint
of SubSequence match that of its enclosing *Collection, e.g.,
MutableCollection.SubSequence conforms to MutableCollection.

Fixes rdar://problem/20715031 and more of SR-3453.
"
40cf8d1bbcfdff90fa69d69894ddfa512076048c,jopamer/swift,"Remove ASTMutationListener::addedExternalType(). It's useless now.


Swift SVN r8491
"
0a1583fb8791844035383e0e48799b43aa126476,jopamer/swift,"[GSB] Tighten up interfaces for computing a generic signature.

Funnel all places where we create a generic signature builder to compute
the generic signature through a single entry point in the GSB
(`computeGenericSignature()`), and make `finalize` and `getGenericSignature`
private so no new uses crop up.

Tighten up the signature of `computeGenericSignature()` so it only works on
GSB rvalues, and ensure that all clients consider the GSB dead after that
point by clearing out the internal representation of the GSB."
48faba29f30fbcaed08a3a4a407a2cd0777ae4cb,jopamer/swift,"Simplify parser constructors

Constructor delegation in parser was useless, because the code was split
between the constructors arbitrarily.

There was no need to pass down IsMainModule because the parser could figure
that out on its own.  Also rename it to allowTopLevelCode() to better describe
what it actually affects.


Swift SVN r7098
"
50b2d0e73db9864ffd10964d047a091071790ca4,jopamer/swift,"Rename early binding -> inline caches.



Swift SVN r19063
"
dc052e636481cc11ef8c4d6c3b9a30b05c8b47e5,jopamer/swift,"Resolve metadata cycles through non-generic value types with resilient layout.

The central thrust of this patch is to get these metadata initializations
off of `swift_once` and onto the metadata-request system where we can
properly detect and resolve dependencies.  We do this by first introducing
runtime support for resolving metadata requests for ""in-place""
initializations (committed previously) and then teaching IRGen to actually
generate code to use them (this patch).

A non-trivial amount of this patch is just renaming and refactoring some of
existing infrastructure that was being used for in-place initializations to
try to avoid unnecessary confusion.

The remaining cases that are still using `swift_once` resolution of
metadata initialization are:

- non-generic classes that can't statically fill their superclass or
  have resilient internal layout

- foreign type metadata

Classes require more work because I'd like to switch at least the
resilient-superclass case over to using a pattern much more like what
we do with generic class instantiation.  That is, I'd like in-place
initialization to be reserved for classes that actually don't need
relocation.

Foreign metadata should also be updated to the request/dependency scheme
before we declare ABI stability.  I'm not sure why foreign metadata
would ever require a type to be resolved, but let's assume it's possible.

Fixes part of SR-7876.
"
31f97cf93c6d3b2de07c7f5b87d419c02e633001,jopamer/swift,"Use AnyObject instead of Builtin.UnknownObject

...for addressors and for dynamic self.
"
2a10d8692b40be37ef468808dfb558e8f4529017,jopamer/swift,"Clean-up the code that stored and passes the SILSerializeAll flag around.

- SILSerializeAll flag is now stored in the SILOptions and passed around as part of it
- Explicit SILSerializeAll/wholeModuleSerialized/makeModuleFragile API parameters are removed in many places
"
67710606e66677a86cef872a5c8e070d9f71f35e,jopamer/swift,"[Parse] Move tok::amp_prefix closer to parameter list logic

The amp_prefix token is currently tolerated in any unary expression
context and then diagnosed later by Sema. This patch changes parsing to
only accept tok::amp_prefix in its allowed position: parameter lists.

This also fixes two ""compiler crasher"" tests.
"
92dc4ee23798aade20b1bea9bfaed77b574a0056,jopamer/swift,"Don't increment refcounts of inlined SILFunctions for the purpose of debug info generation.

This prevented dead function removal of inlined dead functions. Beside the stdlib it's mostly
an issue of SIL size (and therefore compiletime), because llvm did remove such functions anyway.



Swift SVN r22301
"
35471ab3456fcc8566658c035a85be5a9377affd,jopamer/swift,"Merge pull request #2310 from trentxintong/SFSO

Simplify function signature optimzation and fix a memory leak in function signature."
68f942117a899c64fab4aad4f37695442a4b64e4,jopamer/swift,"SIL: Squash 'ref_to_native_object' and 'native_object_to_ref' into one 'unchecked_ref_cast' insn.

An unsafe cast from a base to a derived class isn't really all that different from one from Builtin.NativeObject to an arbitrary class, so relax this pair of instructions to allow an arbitrary bitcast. This only combines the instructions; it doesn't attempt to simplify any codegen that was emitting round-trip casts before yet.

Swift SVN r16736
"
b861853f53089d4bc6b6af8e52008f615c4267bb,jopamer/swift,"Merge pull request #6912 from eeckstein/dead-conf-elim

Remove dead witness tables, including dead witness functions."
7a7af62012c14a85edb57d24597f6b51aea09f56,jopamer/swift,"ArchetypeBuilder: use enumerateRequirements() in getGenericSignature()

Instead of walking over PotentialArchetypes representatives directly
and using a separate list to record same-type constraints, just use
enumerateRequirements() and check the RequirementSource to drop
redundant requirements.

This means getGenericSignature() and getCanonicalManglingSignature()
can share the same logic for collecting requirements; the only
differences are the following:

- both drop requirements from Redundant sources, but mangling
  signatures also drop requirements from Protocol sources

- mangling signatures also canonicalize the types appearing in the
  final requirement
"
2711ad03c941dd9d3611d6cdecb90f1cdfb2797e,jopamer/swift,"now that WalkOrder is in a common header, move the WalkStmt to be a
Stmt method, rename it to just 'walk' to follow the naming convention,
and give it an accurate doc comment for good measure.


Swift SVN r622
"
7bfaeb57f1a39c2409799170d86c0d487b725fec,jopamer/swift,"[SE-0081] Warn on deprecated where clause inside angle brackets

and provide a fix-it to move it to the new location as referenced
in SE-0081.

Fix up a few stray places in the standard library that is still using
the old syntax.

Update any ./test files that aren't expecting the new warning/fix-it
in -verify mode.

While investigating what I thought was a new crash due to this new
diagnostic, I discovered two sources of quite a few compiler crashers
related to unterminated generic parameter lists, where the right
angle bracket source location was getting unconditionally set to
the current token, even though it wasn't actually a '>'.
"
6786969209dbcdc4ea2acb917cc1497917f50da2,jopamer/swift,"[stdlib] Introduce _SwiftDeferredNSArray

This is mostly just a renaming of _SwiftNativeNSArray, except that we
want to add another NSArray subclass for verbatim-bridged elements, so
we want a common base class.  _SwiftNativeNSArray is the name of that
new base class, to parallel the other _SwiftNativeNSXXX classes.

Swift SVN r22913
"
40823552444eff7ebed7918385ae2c6390235d83,jopamer/swift,"Split KnownProtocolKind enum case from protocol name

This avoids us using reserved identifiers as the enum case names of all
our underscored protocols like _ObjectiveCBridgeable. I used the
convention PROTOCOL_WITH_NAME to mirror how the known identifiers work.

Swift SVN r32924
"
3b6a4d8231b6fde183bfd9fe8e9a7a5e79749f1a,jopamer/swift,"Handle array.get_element semantics calls with direct results in SIL optimizations.

Currently the array.get_element calls return the element as indirect result.
The generic specializer will change so that the element can be returned as direct result.
"
a4e8ee04e02bc34d455c2f0f1198c4497510026a,jopamer/swift,"[StdLib] Refactor DictionaryKeyValueTypes test input data

Split the input file into a pure Swift and Objective-C interop files in
anticipation of refactoring tests to remove XFAILs on Linux.
"
81b0aa7339bbb2dc9367136c23e7a035892c051a,jopamer/swift,"[Cleanup] Drop needless TupleTypeElt constructor calls

Now that TupleTypeElts are simpler in Swift 3 (though they're about to
become more complicated for other reasons), most of the cases where we
are explicitly constructing ones are really just plain copies or can
otherwise use existing helper functions.

NFC
"
29a13e9ae01c482f57cd4c4504dd14c576bd37b5,jopamer/swift,"Move the NameLookup class into the AST library.



Swift SVN r2101
"
77b7180f1ade1b1a6b86e12fc768d8711337b99c,jopamer/swift,"Rename CodeCompletionTypeChecking.h to IDETypeChecking.h since it's used by more clients now. NFC
"
492388736c82ef3037c8f964db324813043b04ef,jopamer/swift,"Separate the archetypes of extensions from those of their nominal types.

Start allowing extensions to redeclare type parameters, which will get
different archetypes from the original nominal type. When an extension
does not redeclare type parameters, silently clone the nominal type's
generic type parameters so we still get distinct type parameters.

When deserializing an extension, wire up its generic parameter list so
we get the right archetypes for its members. This doesn't change the
module format (that happened earlier).

When determining the substitutions for an associated type that comes
from a different declaration context from the conformance that will
own the witness, be sure to map into the conformance's
DeclContext. Otherwise, we'll end up with tangled archetypes.

Fixes rdar://problem/16519588.

Swift SVN r26483
"
4e70269c5356cd11837a1ffb7a480b0f80fffa88,jopamer/swift,"More renaming 'unchecked optional' to 'implicitly unwrapped optional'.

Swift SVN r17236
"
e85a6d673ea1206a8d7224c9a9019f010f09f89d,jopamer/swift,"move SubscriptDecl code up to be next to VarDecl code.  Other than
rearranging, this doesn't change anything.


Swift SVN r12534
"
90f021485de7048d2eee33e6b80bdb496a1f6dc9,jopamer/swift,"[Serialization] Serialize archetypes as generic environment + interface type.

Rather than serializing the complete structure of all archetypes
(which is completely redundant), serialize a reference to their owning
generic environment as well as their interface type. The archetype
itself will be reconsituted by mapping the interface type into that
generic environment.
"
508e825ff2fc988da9e3ab433a5187779baa0490,jopamer/swift,"Split 'fileprivate' and 'private', but give them the same behavior.

'fileprivate' is considered a broader level of access than 'private',
but for now both of them are still available to the entire file. This
is intended as a migration aid.

One interesting fallout of the ""access scope"" model described in
758cf64 is that something declared 'private' at file scope is actually
treated as 'fileprivate' for diagnostic purposes. This is something
we can fix later, once the full model is in place. (It's not really
/wrong/ in that they have identical behavior, but diagnostics still
shouldn't refer to a type explicitly declared 'private' as
'fileprivate'.)

As a note, ValueDecl::getEffectiveAccess will always return 'FilePrivate'
rather than 'Private'; for purposes of optimization and code generation,
we should never try to distinguish these two cases.

This should have essentially no effect on code that's /not/ using
'fileprivate' other than altered diagnostics.

Progress on SE-0025 ('fileprivate' and 'private')
"
27a1a63134a34e58932f55a78f1a435759375073,jopamer/swift,"Remove unneeded empty virtual destructors.



Swift SVN r13599
"
2fd563616e36eaead6b53f77407c118c485b3dca,jopamer/swift,"improve SILGen of RebindSelfInConstructorExpr in several ways:
 - In the normal optional-to-optional init case, use
   ""emitUncheckedGetOptionalValueFrom"" instead of
   ""emitCheckedGetOptionalValueFrom"" since we have already
   checked to see if the optional is present.  This avoids a
   function call (that is mandatory inlined away) along with a ton
   of SIL that gets mandatory inlined in that shows an assertion 
   failure that can never fail.

 - Teach SGF::emitDoesOptionalHaveValue and
   SILGenFunction::emitUncheckedGetOptionalValueFrom to work with
   optionals in memory and optional values.

 - Based on this, stop dropping the optional self into a materialized
   temporary all the time.  Just use whatever we have (a value or the
   address of an address-only thing) and operate on it directly.

 - Use Cleanups.emitBlockForCleanups instead of emitting a block and
   using emitBranchAndCleanups.  This leads to cleaner code in SILGen
   and avoids emitting a dead block in the common case where there are
   no cleanups to perform.

Overall, these changes lead to better super.init calls in failable
inits, and more importantly enable understanding the output of -emit-sil 
on them :-)



Swift SVN r27477
"
1afc987739e4053687fc9dcb24529b0649582625,jopamer/swift,"Refactor the SILArgument API on SILBasicBlock so we can insert bb arguments anywhere in the argument list. Also clean up the API names so that they all match.

Swift SVN r23543
"
ad1dbac694e5968b0f9317d300af54c739345c42,jopamer/swift,"IUO: Create disjunctions for optional choices.

When binding an optional value, or function that returns an optional
value, if that value was produced from a decl that was declared an
IUO, create a disjunction.

After solving, make use of the disjunction choices in rewriting
expressions to force optionals where needed.

This is disabled for now, as it results in a source compatibility
issue without associated changes that actually start generating
Optional<T> in place of ImplicitlyUnwrappedOptional<T>. It's
complicated, but basically having two '??' (one returning T, one
returning T?) and creating a disjunction where the first (favored)
choice is ImplicitlyUnwrappedOptional<T> and second is T results in
our selecting the wrong '??' in some cases.
"
de51b01195b4801c8d9340551c515d60cbbede09,jopamer/swift,"[Type checker] Introduce directional path consistency algorithm

DPC algoritm tries to solve individual sub-expressions and combine
resolved types as a way to reduce pre-existing OSR domains. Solving
is done bottom-up so each consecutive sub-expression tightens
possible solution domain even further.
"
bac547088105cc45364d67b2384dca703c90d2f6,jopamer/swift,"Collate the OneOfType*/ClassType*/StructType*/ProtocolType* members of
the various NominalDecl subclasses into a single NominalType* member
in NominalDecl. Use it to make TypeDecl::getDeclaredType() more
efficient/simpler, and simplify the ProtocolDecl/ProtocolType
interaction along the way.

No functionality change.


Swift SVN r2298
"
0d1b03086d7477a099d70fb8675240d3ed3940f3,jopamer/swift,"Add slicing extensions to SequenceType and CollectionType.

rdar://problem/21663830

Add the following new requirements to SequenceType with default implementations:

- dropFirst(n)
- dropLast(n)
- prefix(n)
- suffix(n)
- split(n)

In addition, provide specialized default implementations of these for CollectionTypes with forward, bidirectional, and random-access Index types where possible.

Add the following new requirements to CollectionType with default implementations:

- prefixThrough(n)
- prefixUpTo(n)
- suffixFrom(n)
- split() // isSeparator closure

Add the following convenience APIs:

- dropFirst() -> calls dropFirst(1)
- dropLast() -> calls dropLast(1)

Add a tentative underscored API:

- split() // takes Equatable separator.

Some APIs have undefined behavior when creating slices where the endpoints go beyond the bounds of the underlying collection. This will be fixed later by trapping creation of slices with invalid indices (rdar://problem/21822657).

Swift SVN r30371
"
ef542ffd8a0b29d7074cf7c53769e33d3f1fff1b,jopamer/swift,"[GSB] Eliminate the stored LookupConformanceFn to the GSB.

Implement a module-agnostic conformance lookup operation within the GSB
itself, so it does not need to be supplied by the code constructing the
generic signature builder. This makes the generic signature builder
(closer to) being module-agnostic.
"
ace9e8e406f8bc1c6899508eb63022e034a8cdb8,jopamer/swift,"Allow cleanups to declare that they should not be
completely destroyed when forwarded.

Also, make forwarding a cleanup a first-class operation
on cleanups, rather than setting the cleanup state directly.

Swift SVN r19332
"
01ee1eee6159993faf44f95809e7f95b515186d2,jopamer/swift,"[Clang Importer] Shave space off EffectiveClangContext/ImportedName

Shave off a pointer from the EffectiveClangContext, by re-arranging
some of its data. Down to 2 pointers from 3.

Inside of ImportName, factor out the does-it-have-a-value from
multiple stored Optionals so as to shave off a couple of
pointers. Present the same programming interface as before. Down to 8
pointers in size from 10, and still much further to go.
"
917d2a1d9c56f274795f73f930a88cd440983f0c,jopamer/swift,"remove the dead 'TypeConverter::getMethodSelfType' method, which
is also incorrect.


Swift SVN r11807
"
86a434ab4d1d2c8d672af62da9485288e4056758,jopamer/swift,"Use dominance to remove redundant conditional branching.

This updates the CFG optimization pass to use the dominator tree to
eliminate redundant switch_enum instructions. It can be enhanced at a
later time to handle other conditional branching instructions.

Because jump threading can expose opportunitites for this, we run a pass
of CFG simplifications prior to running this, and since this exposes
more opportunities for those CFG simplifications, we run them again
after. Despite this, there is no measurable compile-time impact building
the stdlib with a release build of the compiler.

This in concert with the two commits that precede it reduce the runtime
of the string sort benchmark by 9%, RC4 by around 2-3%, and now the
generated SIL for optionals look slightly more sane.

Swift SVN r16510
"
d9035426ed2004f0550b52f5781a85f6a1032191,jopamer/swift,"Rename RebindThisInConstructorExpr -> RebindSelfInConstructorExpr


Swift SVN r7658
"
d8f08d44a30e94d951304445904b380846150164,jopamer/swift,"Merge pull request #6161 from slavapestov/accessor-cleanup

Synthesized accessor cleanup"
292161471364c12f7c6852352e9ad92d102e337f,jopamer/swift,"Omit needless words: use hanging ""With"" as a reason to name the first argument.

When omitting words from the end of the base name because it is
redundant with the type of the first parameter leaves a hanging ""With""
in the base name, drop that ""with"" and instead use the tail of the
base name as the label for the first parameter. The poster child for
this is -copyWithZone, which now turns into ""copy(zone:)"":

-  func copyWith(_: NSZone) -> AnyObject
+  func copy(zone: NSZone) -> AnyObject

The intuition behind this change is that the ""With"" is stating that
the method isn't directly acting on its argument; rather, the argument
is something additional, and argument labels are a fine way to model this.

Swift SVN r31836
"
87de4ead29348a6b0b4a125fdc13fcd95b3e6e9b,jopamer/swift,"Merge pull request #2302 from natecook1000/nc-doc-revisions

[stdlib] Revise documentation for Array- and Set-related types."
ecd6455b889f82d248aeaf124750aa20438dc43a,jopamer/swift,"Merge pull request #5815 from DougGregor/superclass-conformances

[Archetype builder] Drop archetype conformances made redundant by superclass constraints"
4c9b8ecf11c9a5d6401d8c9126284b1b09d883ce,jopamer/swift,"add ast and sema support for unary operators.  We need some serious AST refactoring
to unify our representation of calls, which I'll do later.


Swift SVN r570
"
b4d0cb4ffea12e5a59379db766bced7b17765014,jopamer/swift,"ModulePrinting: Avoid printing duplicated members in synthesized extensions.
"
ca5876a86698e68d9051dc7e9b81cef22bca5743,jopamer/swift,"swiftMarkup Library

Replace ReST-flavored documentation comments with Markdown.

rdar://problem/20180412

In addition to full Markdown support, the following extensions are
supported. These appear as lists at the top level of the comment's
""document"". All of these extensions are matched without regard to
case.

Parameter Outlines
------------------

- Parameters:
  - x: ...
  - y: ...

Separate Parameters
-------------------

- parameter x: ...
- parameter y: ...

- Note:
Parameter documentation may be broken up across the entire comment,
with a mix of parameter documentation kinds - they'll be consolidated
in the end.

Returns
-------

- returns: ...

The following extensions are also list items at the top level, which
will also appear in Xcode QuickHelp as first-class citizens:

- Attention: ...
- Author: ...
- Authors: ...
- Bug: ...
- Complexity: ...
- Copyright: ...
- Date: ...
- Experiment: ...
- Important: ...
- Invariant: ...
- Note: ...
- Postcondition: ...
- Precondition: ...
- Remark: ...
- Remarks: ...
- See: ...
- Since: ...
- Todo: ...
- Version: ...
- Warning: ...

These match most of the extra fields in Doxygen, plus a few more per request.

Other changes
-------------
- Remove use of rawHTML for all markup AST nodes except for those
not representable by the Xcode QuickHelp XSLT - <h>, <hr/>, and of
course inline/block HTML itself.

- Update the doc comment RNG schema to more accurately reflect Xcode
QuickHelp.

- Clean up cmark CMake configuration.

- Rename ""FullComment"" to ""DocComment""

- Update the Swift Standard Documentation (in a follow-up commit)

- Update SourceKit for minor changes and link against cmark
  (in a follow-up commit).

Swift SVN r27727
"
9271a24a924d10a9a6b6c1fada90f6cbcad5854a,jopamer/swift,"Introduce a protocol conformance registry for nominal types.

(Note that this registry isn't fully enabled yet; it's built so that
we can test it, but has not yet taken over the primary task of
managing conformances from the existing system).

The conformance registry tracks all of the protocols to which a
particular nominal type conforms, including those for which
conformance was explicitly specified, implied by other explicit
conformances, inherited from a superclass, or synthesized by the
implementation.

The conformance registry is a lazily-built data structure designed for
multi-file support (which has been a problematic area for protocol
conformances). It allows one to query for the conformances of a type
to a particular protocol, enumerate all protocols to which a type
conforms, and enumerate all of the conformances that are associated
with a particular declaration context (important to eliminate
duplicated witness tables).

The conformance registry diagnoses conflicts and ambiguities among
different conformances of the same type to the same protocol. There
are three common cases where we'll see a diagnostic:

1) Redundant explicit conformance of a type to a protocol:

    protocol P { }
    struct X : P {  }
    extension X : P { } // error: redundant explicit conformance

2) Explicit conformance to a protocol that collides with an inherited
  conformance:

    protocol P { }
    class Super : P { }
    class Sub : Super, P { } // error: redundant explicit conformance

3) Ambiguous placement of an implied conformance:

    protocol P1 { }
    protocol P2 : P1 { }
    protocol P3 : P1 { }

    struct Y { }
    extension Y : P2 { }
    extension Y : P3 { } // error: ambiguous implied conformance to 'P1'

  This happens when two different explicit conformances (here, P2 and
  P3) placed on different declarations (e.g., two extensions, or the
  original definition and other extension) both imply the same
  conformance (P1), and neither of the explicit conformances imply
  each other. We require the user to explicitly specify the ambiguous
  conformance to break the ambiguity and associate the witness table
  with a specific context.

Swift SVN r26067
"
df97e44eb90a434f83472e41daf5df77c05dc63b,jopamer/swift,"[AST] Replace SubstitutionList in NameAliasType with a SubstitutionMap.

Convert NameAliasType’s internal representation from tail-allocating an
array of Substitutions (to be treated as a SubstitutionList) to store a
single SubstitutionMap. Serialize using that SubstitutionMap."
6d84785e52b3e7879c69fa25463cf7430e5c421e,jopamer/swift,"Substantially rework how weak pointers are represented in the AST and
at the SIL level.  Now, the referent type of a WeakStorageType is always
an optional type, instead of always being the underlying reference.  This
allows us to represent both optional types.  Before, both of these had the
same AST representation of WeakStorageType(T):

  weak var x : T?
  weak var x : T!

which doesn't work.  Now we represent the optional type explicitly in the
AST and at SIL level.  This also significantly simplifies a bunch of code
that was ripping off the optional type and resynthesizing it in other places,
and makes SILGen of weak pointers much more straight-forward by eliminating
the need for emitRefToOptional and emitOptionalToRef entirely (see the diffs
in test/SILGen/weak).

Weak pointers still have problems, but this is a big step forward.


Swift SVN r18312
"
37f5452d152521fa3dae93db3a4f5f20e6214c4d,jopamer/swift,"require -> guard.



Swift SVN r28223
"
84d9238315e14bf04d4a3901e766884d41956b1e,jopamer/swift,"Emit llvm.dbg.declare intrisics immediately after the described alloca.

This cleanup change doesn't change the semantics, but it makes the
resulting IR much easier to read and debug.
"
0f287562de73fa818c9551048fb8bbb235b19e3d,jopamer/swift,"There are more than a few methods in SIL.cpp for SILValue. Refactor SILValue's implementations into its own file SILValue.cpp.

Swift SVN r13445
"
42acc58182959fd891b5f4263d900c088de24c13,kfowler/emacs,"2008-11-16  Michael Kifer  <kifer@cs.stonybrook.edu>

	* viper-init.el (viper-ESC-keyseq-timeout): Make it into a function
	instead of a variable.

	* viper-util.el (viper-fast-keysequence-p): Changed to use
	viper-ESC-keyseq-timeout as a function.
	(viper-get-saved-cursor-color-in-replace-mode): Use defun instead of
	defsubst.

	* viper-cmd.el: Let line-move-visual to nil when using next-line or
	previous-line.
	(viper-R-state-post-command-sentinel): Use defun instead of defsubst.

	* viper-keym.el (viper-ESC-key): Use (kbd ""ESC"").

	* ediff-util.el (ediff-toggle-multiframe): Check if control window is
	live.
	(ediff-save-buffer): Let window-min-height to 2.

	* ediff-wind.el (ediff-setup-windows-plain-compare): Avoid selecting
	the minibuffer.
"
7a6136fd76b7eae4770bfd1cbb8812f6508d6a7f,kfowler/emacs,"* gtkutil.h: Tiny cleanups.
(use_old_gtk_file_dialog): Remove useless declaration.
(xg_uses_old_file_dialog): Add suggested const attribute.
"
a97af989ec26b8ad6b47c57fb2b11317675a6b1a,kfowler/emacs,"* progmodes/ada-mode.el (ada-mode): Simplify doc string.
  (ada-get-indent-paramlist): Use ada-broken-indent instead of
  hard-coded 0.
  (ada-get-indent-loop): Fix list access bug.
"
fa5c69c0a311b1e78f09676f3b877e0ebd6e0a73,kfowler/emacs,"; * etc/NEWS: Remove unneeded text.

[This reapplies commit 2bc07f7a2a4fb96b470576567a18240f363b4a3b,
which was inadvertently lost by merge commit
7823745acbe9b87eea2db4ef434e379fc903ec35.]
"
9078ead6ce0237eb566a2779016560c85fff5768,kfowler/emacs,"Support building on MS-Windows with libxml2.

 src/makefile.w32-in (OBJ2): Add xml.$(O).
 (GLOBAL_SOURCES): Add xml.c.
 ($(BLD)/xml.$(O)): New dependency list.
 src/xml.c (DEF_XML2_FN, LOAD_XML2_FN) [WINDOWSNT]: New macros.
 (fn_htmlReadMemory, fn_xmlReadMemory, fn_xmlDocGetRootElement)
 (fn_xmlFreeDoc, fn_xmlCleanupParser, fn_xmlCheckVersion)
 [!WINDOWSNT]: New macros.
 (init_libxml2_functions, libxml2_loaded_p): New functions.
 (parse_region): Call fn_xmlCheckVersion instead of using the macro
 LIBXML_TEST_VERSION.  Call libxml2 functions via the fn_* macros.
 (xml_cleanup_parser): New function, export for fn_xmlCleanupParser.
 Calls xmlCleanupParser only if libxml2 was loaded (or statically
 linked in).
 (Flibxml_parse_html_region, Flibxml_parse_xml_region): Call
 init_libxml2_functions before calling libxml2 functions.
 (syms_of_xml) <Qlibxml2_dll>: DEFSYM it.
 src/emacs.c: Don't include libxml/parser.h.
 (shut_down_emacs): Call xml_cleanup_parser, instead of calling
 xmlCleanupParser directly.
 src/ lisp.h [HAVE_LIBXML2]: Add prototype for xml_cleanup_parser.

 nt/configure.bat: Support building with libxml2.
 nt/INSTALL:
 nt/README.W32: Add information about libxml2.

 lisp/term/w32-win.el (dynamic-library-alist): Add libxml2 DLLs.

 lib-src/makefile.w32-in (obj): Add xml.o.
"
c4c8444a78a7a292331ee9eb6dc1f535f05e6c15,kfowler/emacs,"* lisp/emacs-lisp/byte-opt.el (featurep): Move compiler-macro...
* lisp/emacs-lisp/bytecomp.el (featurep): ...here.

Fixes: debbugs:11692
"
a5f2b6ec3b678103c81e14375dd1a8d4bda268d8,kfowler/emacs,"Remove several obsolete vars and functions unlikely to be still in use.

* lisp/vc/log-edit.el (cvs-changelog-full-paragraphs)
(cvs-commit-buffer-require-final-newline): Obsolete variables
removed.

* lisp/font-lock.el (font-lock-reference-face): Use
define-obsolete-variable-alias.

* lisp/international/mule.el (set-char-table-default): Remove.
(set-coding-priority, make-coding-system, generic-char-p)
(charset-list, charset-bytes, charset-id): Use declare to mark
obsolete.

* lisp/mail/supercite.el (sc-version): Remove obsolete function.
(sc-describe): Don't mark as obsolete, since it is bound.
(sc-submit-bug-report): Remove.

* lisp/progmodes/compile.el (compile-internal): Remove obsolete
function.
(compilation-parse-errors-function): Fix typo.

* lisp/vc/emerge.el (emerge-mode): Make it an obsolete alias.
(emerge-version): Remove.

* lisp/vc/pcvs-defs.el (cvs-buffer-name-alist)
(cvs-invert-ignore-marks): Remove references to obsolete vars.
* lisp/vc/vc-hooks.el (vc-default-registered): Don't use
vc-master-templates.

* lisp/vc/pcvs-defs.el (cvs-diff-buffer-name, cvs-diff-ignore-marks)
* lisp/vc/vc-hooks.el (vc-ignore-vc-files, vc-master-templates)
* lisp/vc/vc.el (vc-checkout-carefully): Likewise.

* src/chartab.c (Fset_char_table_default): Obsolete function removed.
"
97976f9f3fcf588535bf4afad71de92860bb2f8e,kfowler/emacs,"Fix permissions bugs with setgid directories etc.

* configure.ac (BSD4_2): Remove; no longer needed.
* admin/CPP-DEFINES (BSD4_2): Remove.
* doc/lispintro/emacs-lisp-intro.texi (Files List):
directory-files-and-attributes now outputs t for attribute that's
now a placeholder.
* doc/lispref/files.texi (Testing Accessibility): Document GROUP arg
of file-ownership-preserved-p.
(File Attributes): Document that 9th element is now
just a placeholder.
* doc/lispref/os.texi (User Identification): Document new functions group-gid,
group-real-gid.
* etc/NEWS: Document changes to file-attributes,
file-ownership-preserved-p.
Mention new functions group-gid, group-real-gid.
* lisp/files.el (backup-buffer): Don't rely on 9th output of
file-attributes, as it's now a placeholder.  Instead, use the new
optional arg of file-ownership-preserved-p.
(file-ownership-preserved-p): New optional arg GROUP.
Fix mishandling of setuid directories that would cause this
function to return t when it should have returned nil.
Document what happens if the file does not exist, and when
it's not known whether the ownership will be preserved.
* lisp/net/tramp-sh.el (tramp-sh-handle-file-ownership-preserved-p):
Likewise.
(tramp-get-local-gid): Use group-gid for integer, as that's
faster and more reliable.
* src/dired.c (Ffile_attributes): Return t as the 9th attribute,
to mark it as a placeholder.  The old value was often wrong.
The only user of this attribute has been changed to use
file-ownership-preserved-p instead, with its new group arg.
* src/editfns.c (Fgroup_gid, Fgroup_real_gid): New functions.

Fixes: debbugs:13125
"
5338dc0b10ddf1525d0c758657ed510eef79ac12,kfowler/emacs,"* errors.texi (Standard Errors): Remove unnecessary markup (Bug#6461).
"
73f838adaf4d7fa14af503a4786076aea7329bb1,kfowler/emacs,"* w32term.c: Remove unused include ""gnu.h"".
* makefile.w32-in (w32term.o): Don't depend on gnu.h

* gnu.h: Rename to ...
* emacs-icon.h: ... this.
* xterm.c: Use emacs-icon.h instead of gnu.h.
* Makefile (xterm.o): Depend on emacs-icon.h, not gnu.h.
"
a41c2e6d330243fa7b5d1537d5efb211f1c0d30c,kfowler/emacs,"Merge changes made in Gnus trunk.

shr.el: Rename the tag functions a bit, and add some new ones.
gnus-sum.el (gnus-summary-select-article-buffer): If the article buffer isn't shown, then select the current article first instead of bugging out.
gnus-sum.el (gnus-summary-select-article-buffer): Show both the article and summary buffers again.
shr.el (shr-tag-blockquote): Convert name.
shr.el (shr-rescale-image): Use the right image-size variant.
shr.el (shr-tag-p): Don't insert newlines at the start of the buffer.
shr.el: Implement indentation in blockquotes.
gnus-sum.el (gnus-summary-select-article-buffer): Really select the article buffer again.
shr.el (shr-ensure-paragraph): Don't insert newlines on empty tags at the beginning of the buffer.
gnus-ems.el, gnus-util.el, mm-decode.el, mm-view.el: Add resize for large images in mm.
gnus-html.el (gnus-html-put-image): Use gnus-rescale-image.
shr.el (shr-tag-p): Don't insert newlines on empty tags at the beginning of the buffer.
gnus-ems.el, gnus-html.el, gnus-util.el, mm-decode.el, mm-view.el: Support image resizing.
shr.el: Add headings.
shr.el (shr-ensure-paragraph): Actually work.
shr.el (shr-tag-li): Make <ul> prettier.
shr.el (shr-insert): Get white space at the beginning/end of elements right.
shr.el (shr-tag-li): Tweak <li> rendering.
shr.el (shr-tag-p): Collapse subsequent <p>s.
shr.el (shr-ensure-paragraph): Don't insert double line feeds after blank lines.
shr.el (shr-tag-h6): Add.
shr.el (shr-insert): \t is also space.
"
f5bdcb3221ba28326b47210773d84c49cc9b4a1e,kfowler/emacs,"Improve file notifications, especially for Tramp

* doc/lispref/files.texi (Magic File Names):
Mention `file-notify-valid-p'.

* doc/lispref/os.texi (File Notifications):
Describe `file-notify-valid-p'.

* etc/NEWS: Add `file-notify-valid-p'.

* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-file-notify-add-watch):
Improve implementation.
(tramp-gvfs-monitor-file-process-filter): Rename from
`tramp-gvfs-file-gvfs-monitor-file-process-filter'.  Delete
process if appropriate.

* lisp/net/tramp-sh.el (tramp-sh-handle-file-notify-add-watch):
Improve implementation.
(tramp-sh-gvfs-monitor-dir-process-filter): Rename from
`tramp-sh-file-gvfs-monitor-dir-process-filter'.  Delete process
if appropriate.
(tramp-sh-inotifywait-process-filter): Rename from
`tramp-sh-file-inotifywait-process-filter'.  Delete process if
appropriate.

* lisp/net/tramp.el (tramp-handle-file-notify-rm-watch):
Use `delete-process'
(tramp-handle-file-notify-valid-p): Check also, that file or
directory to be watched still exists.

* test/automated/file-notify-tests.el (file-notify--test-timeout):
New defun.  Use it at all places a timeout is needed.
(file-notify--test-cleanup): Delete directories recursively.
Cleanup also Tramp connections.
(file-notify-test02-events): Add tests for `attribute-change'.
(file-notify-test04-file-validity, file-notify-test05-dir-validity):
Add tests for `file-notify-rm-watch'.
"
f15c8583198c3d6c26ca0c0a5b6fb019f98d6c3c,kfowler/emacs,"Merge from origin/emacs-24

ec26c23 authors.el: Add missing ignored and renamed files
e589765 A more thorough fix for bug#19307
4e8d586 Fix last commit
d6fee01 Tramp: Don't use a tempfile for ControlPath.
27e11c0 Fix display of overlay strings with faces after ellipsis  (Bug#19307)
e9a7e10 Fix redrawing of mode lines when exposed  (Bug#19721)
50f3811 net/tramp.el (tramp-ssh-controlmaster-options): Use ""%C""

Conflicts:
	lisp/ChangeLog
	src/ChangeLog
	src/xdisp.c
"
83087df9492f4a16c835664aa39d0b8a7756d4bb,kfowler/emacs,"Improve output of occur-tests in case of failure

* test/automated/occur-tests.el (occur-test-case, occur-test-create):
In case of failure, show the actual string, rather than just nil.
"
9997ec56be8bf3fb32ac246e5b654ed735ee2c52,kfowler/emacs,"Minor cleanup for redisplay interface and few related functions.
* frame.h (enum text_cursor_kinds): Move from here...
* dispextern.h (enum text_cursor_kinds): ...to here.
(toplevel): Drop unnecessary declarations.
(struct redisplay_interface): Use bool and enum text_cursor_kinds
in update_window_end_hook and draw_window_cursor functions.
(display_and_set_cursor, x_update_cursor): Adjust prototypes.
* nsterm.m (ns_update_window_end, ns_draw_window_cursor):
* w32term.c (x_update_window_end,w32_draw_window_cursor):
* xterm.c (x_update_window_end, x_draw_window_cursor):
* xdisp.c (display_and_set_cursor, update_window_cursor)
(update_cursor_in_window_tree, x_update_cursor): Use bool and
enum text_cursor_kinds where appropriate.
"
f8ea0098d95f535fc3d8049b7cae524d6ea33aa8,kfowler/emacs,"Fix duplicate entries in cedet's loaddefs.el files.
* emacs-lisp/autoload.el (autoload-file-load-name): Be more clever.
Should make most file-local generated-autoload-file unnecessary.
(print-readably): Silence warnings.
(autoload-find-destination): Take load-name as an arg to make sure
it's the same as the one that will be in the file.
(autoload-generate-file-autoloads): Adjust to above changes.
Try to make the dataflow a bit simpler.
"
a11af7f84505c8731f23d98355158da411882d22,kfowler/emacs,"* ecrt0.c (NODOT_GLOBAL_START): Remove code, unused.
(DOT_GLOBAL_START): Remove conditional, redundant for CRT0_DUMMIES.
* m/intel386.h (DOT_GLOBAL_START):
* m/vax.h (DOT_GLOBAL_START): Remove, redundant with CRT0_DUMMIES.
(USG): Remove, file not used on USG platforms.
"
404dbd373a91c0b994005e88fe703d9144873b27,kfowler/emacs,"Auto-generate EXFUN using make-docfile

src
	* window.c (Fset_window_margins, Fset_window_fringes)
	(Fset_window_scroll_bars, Fset_window_vscroll): No longer static.
	* textprop.c (Fprevious_property_change): No longer static.
	* syntax.c (Fsyntax_table_p): No longer static.
	* process.c (Fget_process, Fprocess_datagram_address): No longer
	static.
	* keymap.c (Flookup_key, Fcopy_keymap): No longer static.
	* keyboard.c (Fcommand_execute): No longer static.
	Remove EXFUN.
	* insdel.c (Fcombine_after_change_execute): No longer static.
	* image.c (Finit_image_library): No longer static.
	* fileio.c (Fmake_symbolic_link): No longer static.
	* eval.c (Ffetch_bytecode): No longer static.
	* editfns.c (Fuser_full_name): No longer static.
	* doc.c: (Fdocumentation_property, Fsnarf_documentation): No
	longer static.
	* buffer.c (Fset_buffer_major_mode, Fdelete_overlay): No longer
	static.
	* dired.c (Ffile_attributes): No longer static.
	* composite.c (Fcomposition_get_gstring): No longer static.
	* callproc.c (Fgetenv_internal): No longer static.

	* ccl.h: Remove EXFUNs.
	* buffer.h: Remove EXFUNs.
	* dispextern.h: Remove EXFUNs.
	* intervals.h: Remove EXFUNs.
	* fontset.h: Remove EXFUN.
	* font.h: Remove EXFUNs.
	* dosfns.c (system_process_attributes): Remove EXFUN.
	* keymap.h: Remove EXFUNs.
	* lisp.h: Remove EXFUNs.
	* w32term.h: Remove EXFUNs.
	* window.h: Remove EXFUNs.
	* xsettings.h: Remove EXFUN.
	* xterm.h: Remove EXFUN.

lib-src
	* make-docfile.c (enum global_type) <FUNCTION>: New constant.
	(struct global) <value>: New field.
	(add_global): Add 'value' argument.
	(compare_globals): Sort functions at the end.
	(close_emacs_globals): New function.
	(write_globals): Handle functions.
	(scan_c_file): Call add_global for DEFUN.
"
9232a6d9a7ca8ef3e725899552cfd568463ddcfe,kfowler/emacs,"Remove unused HAVE_* symbols for functions.

* configure.in (AC_CHECK_FUNCS): Remove XSetWMProtocols,
getdomainname, mblen (twice), mbrlen (twice), mbsinit, ualarm,
getsockopt, setsockopt, mremap, mempcpy.
* admin/CPP-DEFINES (HAVE_GETDOMAINNAME): Remove.
* msdos/sed2v2.inp (HAVE_MBLEN): Remove.
* msdos/sed2x.inp (HAVE_XSETWMPROTOCOLS): Remove.
* nt/config.nt (HAVE_GETDOMAINNAME, HAVE_XSETWMPROTOCOLS)
(HAVE_GETSOCKOPT, HAVE_SETSOCKOPT): Remove; not needed.
* src/s/ms-w32.h (HAVE_GETDOMAINNAME): Remove; not needed.
"
84c9dba4cee052b68b194c3a2e5c297a94d8c8af,kfowler/emacs,"Autoload tramp-archive

* doc/misc/tramp.texi (Archive file names): Do not require to
load Tramp explicitly, this is autoloaded now also for file archives.

* lisp/net/tramp-archive.el (tramp-archive-suffixes)
(tramp-archive-compression-suffixes): Autoload them.
(tramp-archive-autoload-file-name-regexp): New defmacro.
(tramp-archive-file-name-regexp): Use it.
(tramp-register-archive-file-name-handler): New defun.  Call
it in `after-init-hook'.

* test/lisp/net/tramp-archive-tests.el
(tramp-archive-test40-file-system-info): Rename from
`tramp-archive-test40-archive-file-system-info.
(tramp-archive-test42-auto-load)
(tramp-archive-test42-delay-load): New tests.
"
fc54bdd59909d87c56686a42aba3b92785617a51,kfowler/emacs,"Do not allow font caches to grow too large.
* alloc.c (compact_font_cache_entry, compact_font_caches):
New functions or stub if not HAVE_WINDOW_SYSTEM.
(compact_undo_list): Factor out from Fgarbage_collect.
Add comment.
(mark_face_cache): Mark face font.  Move down to avoid
extra prototypes.
(mark_terminals): Do not mark font cache here.
(Fgarbage_collect): Call compaction functions described
above.  Adjust comment.
"
a72a9fbbbc9cd5f5933719b11489c2578eb0aa59,kfowler/emacs,"Rename `recenter-group' to `recenter-window-group'

* doc/lispref/windows.texi (Textual Scrolling)
* lisp/window.el (top level, recenter-group)
* lisp/follow.el (follow-mode)
* lisp/isearch.el (isearch-back-into-window): Rename `recenter-group' to
`recenter-window-group' and `recenter-group-function' to
`recenter-window-group-function'.
"
a1edea0c88ac69acc1b386a67859a674dd5af5aa,kfowler/emacs,"* frame.h (struct frame) [USE_X_TOOLKIT]: New member shell_position.
* xfns.c (x_window): Use it to allow xfree later.
(x_encode_text): Drop 3rd arg; unused.  Tweak comment and adjust users
where appropriate.  Use bool for booleans and remove redundant checks.
(Fx_backspace_delete_keys_p): Use XkbFreeKeyboard; explain why.
* xterm.c (x_free_frame_resources): Free shell_position.
"
17a2cbbd76385d0be8a4b28974e64f4debf459c1,kfowler/emacs,"Refactor window-system configuration

This change streamlines the window system selection code in
configure.in and moves many common function declarations from
window-specific headers to frame.h.  It introduces a new TERM_HEADER
macro in config.h: we set this macro to the right header to use for
the window system for which we're compiling Emacs and have source
files include it indirectly.  This way, we don't have to teach every
file about every window system.
"
d08536296ce1c7c8145aa8aee554cbbf4d11d213,kfowler/emacs,"* net/tramp-compat.el (tramp-compat-call-process): Move function ...
* net/tramp.el (tramp-call-process): ... here
(tramp-set-completion-function, tramp-parse-putty):
* net/tramp-adb.el (tramp-adb-execute-adb-command):
* net/tramp-gvfs.el (tramp-gvfs-send-command):
* net/tramp-sh.el (tramp-sh-handle-set-file-times)
(tramp-set-file-uid-gid, tramp-sh-handle-write-region)
(tramp-call-local-coding-command): Use `tramp-call-process'
instead of `tramp-compat-call-process'.

* net/tramp-sh.el (tramp-perl-pack, tramp-perl-unpack): New defconst.
(tramp-local-coding-commands, tramp-remote-coding-commands): Use them.
(tramp-sh-handle-file-local-copy, tramp-sh-handle-write-region):
(tramp-find-inline-compress):Improve traces.
(tramp-maybe-send-script): Check for Perl binary.
(tramp-get-inline-coding): Do not redirect STDOUT for local decoding.
"
694b6c97ebb8310bc18dd305c2f277bcc11cebca,kfowler/emacs,"Utility function to make a list from specified amount of objects.
* lisp.h (enum constype): New datatype.
(listn): New prototype.
* alloc.c (listn): New function.
(Fmemory_use_count, syms_of_alloc): Use it.
* buffer.c (syms_of_buffer): Likewise.
* callint.c (syms_of_callint): Likewise.
* charset.c (define_charset_internal): Likewise.
* coding.c (syms_of_coding): Likewise.
* keymap.c (syms_of_keymap): Likewise.
* search.c (syms_of_search): Likewise.
* syntax.c (syms_of_syntax): Likewise.
* w32.c (init_environment): Likewise.
* w32fns.c (Fw32_battery_status, syms_of_w32fns): Likewise.
* xdisp.c (syms_of_xdisp): Likewise.
* xfns.c (syms_of_xfns): Likewise.
"
10a44998028756566a173999178603f33dcb11a1,kfowler/emacs,"Fix the MS-DOS build (fallout from 2010-07-12T14:16:38Z!schwab@linux-m68k.org, 2010-07-12T17:04:38Z!dann@ics.uci.edu, 2010-07-12T17:21:11Z!dann@ics.uci.edu).

 src/process.c (setup_process_coding_systems): Move to the part
 shared by non-subprocesses systems, and make its body empty when
 subprocesses is not defined.
 (close_process_descs): Move to the part shared by non-subprocesses
 systems.
 msdos/sed1v2.inp (C_WARNINGS_SWITCH, PROFILING_CFLAGS, PROFILING_LDFLAGS):
 Edit to empty.
 msdos/sed3v2.inp(C_WARNINGS_SWITCH, PROFILING_CFLAGS, PROFILING_LDFLAGS):
 Edit to empty.
"
ac4c50ad333ca1ba1478b4766c866efeea59eb30,kfowler/emacs,"Rename INSTALL.BZR to UNSTALL.REPOm and carry that through in other files.
"
8674173394ab9450429e7af6fc29a7e86cd9e2bc,kfowler/emacs,"gnus-group.el (gnus-group-make-tool-bar): Check for display graphic capability before doing anything.
gnus-group.el (gnus-group-insert-group-line): Remove useless gnus-group-remove-excess-properties.
"
e61845c1db42405938b9dca7dfff73b4ab6aa52a,kfowler/emacs,"* lisp/emacs-lisp/smie.el (smie-rule-parent): Always call
smie-indent-virtual rather than only for hanging tokens.
(smie--next-indent-change): New helper command.
* lisp/progmodes/ruby-mode.el (ruby-smie--rule-parent-skip-assign): Remove.
(ruby-smie-rules): Use smie-rule-parent instead.
"
8ca4f1e02e22f74dc269b01bc4a32e01dd226dae,kfowler/emacs,"Cleanup some of EIEIO's namespace.
* lisp/emacs-lisp/eieio.el (eieio--define-field-accessors): New macro.
Use it to define all the class-* and object-* field accessors (renamed
to eieio--class-* and eieio--object-*).  Update all uses.
(eieio--class-num-slots, eieio--object-num-slots): Rename from
class-num-slots and object-num-slots.
(eieio--check-type): New macro.
(eieio-defclass, eieio-oref, eieio-oref-default, same-class-p)
(object-of-class-p, child-of-class-p, object-slots, class-slot-initarg)
(eieio-oset, eieio-oset-default, object-assoc, object-assoc-list)
(object-assoc-list-safe): Use it.
(eieio-defclass): Tighten regexp.
(eieio--defmethod): Use `memq'.  Signal an error for unknown method kind.
Remove unreachable code.
(object-class-fast): Declare obsolete.
(eieio-class-name, eieio-object-name, eieio-object-set-name-string)
(eieio-object-class, eieio-object-class-name, eieio-class-parents)
(eieio-class-children, eieio-class-precedence-list, eieio-class-parent):
Rename from class-name, object-name, object-set-name-string,
object-class, object-class-name, class-parents, class-children,
class-precedence-list, class-parent; with obsolete alias.
(class-of, class-direct-superclasses, class-direct-subclasses):
Declare obsolete.
(eieio-defmethod): Use `memq'; remove unreachable code.
* lisp/emacs-lisp/eieio-base.el (eieio-persistent-read):
* lisp/emacs-lisp/eieio-opt.el (eieio-class-button, eieio-describe-generic)
(eieio-browse-tree, eieio-browse): Use eieio--check-type.
"
b532497da492ad9fef912bdf41d7f57c6f5bd833,kfowler/emacs,"* xterm.c: Make symbols static if they're not exported.

(x_raise_frame, x_lower_frame, x_wm_set_window_state):
(x_wm_set_icon_pixmap, x_initialize, XTread_socket_fake_io_error):
(x_destroy_window, x_delete_display):
Now static.
(x_dispatch_event): Now static if ! (USE_MOTIF || USE_X_TOOLKIT).
(x_mouse_leave): Remove; unused.
* xterm.h (x_display_info_for_name, x_raise_frame, x_lower_frame):
(x_destroy_window, x_wm_set_window_state, x_wm_set_icon_pixmap):
(x_delete_display, x_initialize, x_set_border_pixel, x_screen_planes):
Remove decls.
(x_mouse_leave): Declare only if WINDOWSNT.
(x_dispatch_event): Declare only if USE_MOTIF or USE_X_TOOLKIT.
(xic_create_fontsetname): Declare only if HAVE_X_WINDOWS &&
USE_X_TOOLKIT.
"
c5683ceb2cf80b5b7475f92236271eaeba662798,kfowler/emacs,"Introduce a new comment style ""c"" flag.
* src/syntax.c (SYNTAX_FLAGS_COMMENT_STYLEB)
(SYNTAX_FLAGS_COMMENT_STYLEC): New macros.
(SYNTAX_FLAGS_COMMENT_STYLE): Use them, add an argument.
(syntax_prefix_flag_p): New function.
(Fstring_to_syntax): Understand new ""c"" flag.
(Finternal_describe_syntax_value): Recognize new flag; use the
SYNTAX_FLAGS_* macros.
(scan_sexps_forward, Fparse_partial_sexp): Change representation of
comment style to accomodate the new styles.
(back_comment, forw_comment, Fforward_comment, scan_lists)
(scan_sexps_forward): Update code to obey the new comment style flag.
* src/syntax.h: Move SYNTAX_FLAGS_FOO() macros to syntax.c.
* src/casefiddle.c (casify_region): Use the new syntax_prefix_flag_p.
* lisp/progmodes/octave-mod.el (octave-mode-syntax-table): Use the new ""c""
comment style.
* lisp/progmodes/scheme.el (scheme-mode-syntax-table):
* lisp/emacs-lisp/lisp-mode.el (lisp-mode-syntax-table): Remove spurious
""b"" flag in ""14b"" syntax.

Fixes: debbugs:6834
"
365f8d856c11b0684817aec977905b8831d4d973,kfowler/emacs,"Minor cleanups.
* org-table.el (orgtbl-setup):
* org-agenda.el (org-agenda-entry-text-mode): Simplify.
* subr.el (add-minor-mode): Use push.
* mail/supercite.el (sc-electric-mode): Use more descriptive arg name.
* emulation/edt.el (edt-select-mode): Simplify.
"
8496d8d7063d93031b65636e8be4c6f1b4208e74,kfowler/emacs,"Add build, install, uninstall rules for all dvi, html, pdf, ps manuals

* configure.ac (etcdocdir): Rename from docdir, to avoid confusion
with configure's standard --docdir argument.  All uses updated.

* Makefile.in (etcdocdir): Rename from docdir.  All uses updated.
(install-etcdoc): Rename from install-doc.  All uses updated.
(uninstall): Run uninstall-doc.
(PSS): Add misc-ps.
(INSTALL_DVI, INSTALL_HTML, INSTALL_PDF, INSTALL_PS)
(INSTALL_DOC, UNINSTALL_DVI, UNINSTALL_HTML, UNINSTALL_PDF)
(UNINSTALL_PS, UNINSTALL_DOC): New variables.
($(INSTALL_DOC), install-doc, install-dvi, install-html, install-pdf)
(install-ps, $(UNINSTALL_DOC), uninstall-doc, uninstall-dvi)
(uninstall-html, uninstall-pdf, uninstall-ps): New .PHONY rules.

* doc/emacs/Makefile.in (prefix, datarootdir, datadir, PACKAGE_TARNAME)
(docdir, dvidir, htmldir, pdfdir, psdir, GZIP_PROG, INSTALL)
(INSTALL_DATA): New, set by configure.
(HTML_OPTS, DVI_TARGETS, HTML_TARGETS, PDF_TARGETS, PS_TARGETS):
New variables.
(.SUFFIXES): Add .ps and .dvi.
(.dvi.ps): New suffix rule.
(dvi, html, pdf, ps): Use *_TARGETS variables.
(emacs.ps, emacs-xtra.ps): Remove explicit rules.
(emacs.html): Use HTML_OPTS.
(clean): Use DVI_TARGETS, HTML_TARGETS, PDF_TARGETS, PS_TARGETS.
(.PHONY): install-dvi, install-html, install-pdf, install-ps
,install-doc, uninstall-dvi, uninstall-html, uninstall-pdf,
uninstall-ps, and uninstall-doc.
(install-dvi, install-html, install-pdf, install-ps, install-doc)
(uninstall-dvi, uninstall-html, uninstall-ps, uninstall-pdf)
(uninstall-doc): New rules.

* doc/lispintro/Makefile.in (prefix, datarootdir, datadir, PACKAGE_TARNAME)
(docdir, dvidir, htmldir, pdfdir, psdir, GZIP_PROG, INSTALL)
(INSTALL_DATA): New, set by configure.
(HTML_OPTS, DVI_TARGETS, HTML_TARGETS, PDF_TARGETS, PS_TARGETS):
New variables.
(.SUFFIXES): Add .ps and .dvi.
(.dvi.ps): New suffix rule.
(dvi, html, pdf, ps): Use *_TARGETS variables.
(emacs-lisp-intro.ps): Remove explicit rule.
(emacs-lisp-intro.html): Use HTML_OPTS.
(clean): Use DVI_TARGETS, HTML_TARGETS, PDF_TARGETS, PS_TARGETS.
(.PHONY): install-dvi, install-html, install-pdf, install-ps
,install-doc, uninstall-dvi, uninstall-html, uninstall-pdf,
uninstall-ps, and uninstall-doc.
(install-dvi, install-html, install-pdf, install-ps, install-doc)
(uninstall-dvi, uninstall-html, uninstall-ps, uninstall-pdf)
(uninstall-doc): New rules.

* doc/lispref/Makefile.in (prefix, datarootdir, datadir, PACKAGE_TARNAME)
(docdir, dvidir, htmldir, pdfdir, psdir, GZIP_PROG, INSTALL)
(INSTALL_DATA): New, set by configure.
(HTML_OPTS, DVI_TARGETS, HTML_TARGETS, PDF_TARGETS, PS_TARGETS):
New variables.
(.SUFFIXES): Add .ps and .dvi.
(.dvi.ps): New suffix rule.
(dvi, html, pdf, ps): Use *_TARGETS variables.
(elisp.html): Use HTML_OPTS.
(elisp.ps): Remove explicit rule.
(.PHONY): install-dvi, install-html, install-pdf, install-ps
,install-doc, uninstall-dvi, uninstall-html, uninstall-pdf,
uninstall-ps, and uninstall-doc.
(install-dvi, install-html, install-pdf, install-ps, install-doc)
(uninstall-dvi, uninstall-html, uninstall-ps, uninstall-pdf)
(uninstall-doc): New rules.
(clean): Use DVI_TARGETS, HTML_TARGETS, PDF_TARGETS, PS_TARGETS.

* doc/misc/Makefile.in (prefix, datarootdir, datadir, PACKAGE_TARNAME)
(docdir, dvidir, htmldir, pdfdir, psdir, GZIP_PROG, INSTALL)
(INSTALL_DATA): New, set by configure.
(HTML_OPTS, HTML_TARGETS, PS_TARGETS, DVIPS): New variables.
(.PHONY): Add html, ps, install-dvi, install-html, install-pdf,
install-ps ,install-doc, uninstall-dvi, uninstall-html, uninstall-pdf,
uninstall-ps, and uninstall-doc.
(.SUFFIXES): Add .ps and .dvi.
(.dvi.ps): New suffix rule.
(html, ps, ada-mode.html, auth.html, autotype.html, bovine.html)
(calc.html, cc-mode.html, cl.html, dbus.html, dired-x.html)
(ebrowse.html, ede.html, ediff.html, edt.html, eieio.html)
(emacs-gnutls.html, emacs-mime.html, epa.html, erc.html)
(ert.html, eshell.html, eudc.html, faq.html, flymake.html)
(forms.html, gnus.html, htmlfontify.html, idlwave.html)
(ido.html, mairix-el.html, message.html, mh-e.html)
(newsticker.html, nxml-mode.html, org.html, pgg.html)
(rcirc.html, reftex.html, remember.html, sasl.html, sc.html)
(semantic.html, sieve.html, smtpmail.html, speedbar.html)
(srecode.html, todo-mode.html, tramp.html, url.html, vip.html)
(viper.html, widget.html, wisent.html, woman.html, install-dvi)
(install-html, install-pdf, install-ps, install-doc, uninstall-dvi)
(uninstall-html, uninstall-ps, uninstall-pdf, uninstall-doc):
New rules.
(clean): Remove HTML_TARGETS and PS_TARGETS.
"
fee31f82d5279a6faeb2d4cef808e9d7fce2f210,kfowler/emacs,"* term.c: Integer and memory overflow issues.

(max_frame_lines): Remove; unused.
(encode_terminal_src_size, encode_terminal_dst_size): Now ptrdiff_t,
not int.
(encode_terminal_code, calculate_costs): Check for size
calculation overflow.
(encode_terminal_code): Use ptrdiff_t, not int, to record glyph
table lengths and related sizes.  Don't update size until alloc
done.  Redo calculations to avoid overflow.
(calculate_costs): Don't bother calling xmalloc when xrealloc will do.
"
34d4720f833bb382b28d9faecf82d34db1eb4494,kfowler/emacs,"Electric quotes: Improve support for Markdown mode (Bug#24709)

Introduce a new user option 'electric-quote-context-sensitive'.  If
non-nil, have ' insert an opening quote if sensible.

Also introduce a new variable 'electric-quote-code-faces'.  Major
modes such as 'markdown-mode' can add faces to this list to treat text
as inline code and disable electric quoting.

* lisp/electric.el (electric-quote-context-sensitive): New user
option.
(electric-quote-code-faces): New variable.
(electric-quote-post-self-insert-function): Treat ' as ` if
desired and applicable; disable electric quoting for given faces.

* test/lisp/electric-tests.el (electric-quote-opening-single)
(electric-quote-closing-single, electric-quote-opening-double)
(electric-quote-closing-double)
(electric-quote-context-sensitive-backtick)
(electric-quote-context-sensitive-bob-single)
(electric-quote-context-sensitive-bob-double)
(electric-quote-context-sensitive-bol-single)
(electric-quote-context-sensitive-bol-double)
(electric-quote-context-sensitive-after-space-single)
(electric-quote-context-sensitive-after-space-double)
(electric-quote-context-sensitive-after-letter-single)
(electric-quote-context-sensitive-after-letter-double)
(electric-quote-context-sensitive-after-paren-single)
(electric-quote-context-sensitive-after-paren-double)
(electric-quote-markdown-in-text)
(electric-quote-markdown-in-code): New unit tests.
"
21238f117336d2a3f1e7970832ba05da14d44a03,kfowler/emacs,"Separate read and write access to Lisp_Object slots of Lisp_Process.
* process.h (PGET, PSET): New macros similar to AREF and ASET.
* gnutls.c, print.c, process.c, sysdep.c, w32.c, xdisp.c: Adjust users.
"
1baa1e49d84061e964802eba34713052804185f8,kfowler/emacs,"* automated/file-notify-tests.el
(file-notify-test-remote-temporary-file-directory):
Check $REMOTE_TEMPORARY_FILE_DIRECTORY.
(tramp-read-passwd): Check $REMOTE_ALLOW_PASSWORD.
(file-notify--deftest-remote): Cleanup connection initially.
(file-notify-test03-autorevert): Run also in batch mode.  Use a
larger timeout for remote files.  `sit-for' 1 second; 0.1 second
does not work on MS Windows.  Call `accept-process-output' for
remote files.  Apply `string-match' instead of `string-equal', the
messages are different on MS Windows.

* automated/tramp-tests.el (tramp-test-temporary-file-directory):
Use $REMOTE_TEMPORARY_FILE_DIRECTORY.
(tramp-read-passwd): Check $REMOTE_ALLOW_PASSWORD.
"
dba6549815e211c820a249cbfe857a92c7418896,kfowler/emacs,"* xdisp.c (display_line): Mark variables that gcc -Wuninitialized cannot

deduce are never used uninitialized.
* lisp.h (IF_LINT): New macro, copied from ../lib-src/emacsclient.c
which in turn is copied from coreutils.
"
14bd267de01f53607514a8e5b8cf4a7e8d351d9b,kfowler/emacs,"(artist-mouse-choose-operation): Call `tmm-prompt' instead of `x-popup-menu'
if we cannot popup menus.
(artist-compute-up-event-key): New function.
(artist-mouse-choose-operation, artist-down-mouse-1): Call it.
"
2b3d968a02be2b8859cc2078904a184337654898,kfowler/emacs,"Follow-up to renaming v24.5 to 25.1.

 README: Bump version to 25.0.50.
 configure.ac (AC_INIT): Bump version to 25.0.50.

 nt/makefile.w32-in (VERSION): Bump version to 25.0.50.
 nt/emacsclient.rc: Bump version to 25.0.50.
 nt/emacs.rc: Bump version to 25.0.50.
 nt/config.nt (VERSION): Bump version to 25.0.50.

 msdos/sed2v2.inp: Bump version to 25.0.50.

 etc/refcards/ru-refcard.tex: Bump version to 25.0.50.
 etc/refcards/emacsver.tex: Bump version to 25.0.50.

 src/msdos.c (internal_terminal_init): Bump version to 25.

 doc/man/emacs.1: Bump version to 25.0.50.

 doc/emacs/emacsver.texi (EMACSVER): Bump to 20.0.50.
"
0e843971e13ae9d8533859ad8286d3f6d257af4a,kfowler/emacs,"emacs.c cleanups.
* src/emacs.c (emacs_copyright, emacs_version): Make static.
(Vinitial_window_system, Vauto_save_list_file_name)
(Vinhibit_redisplay): Remove declarations.
(main): Remove HAVE_SHM code, unused.  Remove _I386 conditional
for AIX.
"
d6453ce49724b0a3bd24922ff0ad02f391d6e517,kfowler/emacs,"Fix some stat-related races.

* fileio.c (Fwrite_region): Avoid race condition if a file is
removed or renamed by some other process immediately after Emacs
writes it but before Emacs stats it.  Do not assume that stat (or
fstat) succeeds.
* image.c (slurp_file): Resolve the file name with fopen + fstat
rather than stat + fopen.
(pbm_read_file) [0]: Remove unused code with stat race.
* process.c (allocate_pty) [HAVE_PTYS && !PTY_ITERATION && !PTY_OPEN]:
Remove ineffective code with stat race.
"
e34f7f79833a23586d32fe522b547a0d9a696c13,kfowler/emacs,"Generalize INTERNAL_FIELD between buffers, keyboards and frames.
* src/lisp.h (INTERNAL_FIELD): New macro.
* src/buffer.h (BUFFER_INTERNAL_FIELD): Removed.
(BVAR): Change to use INTERNAL_FIELD.
* src/keyboard.h (KBOARD_INTERNAL_FIELD): Likewise.
(KVAR): Change to use INTERNAL_FIELD.
* src/frame.h (FVAR): New macro.
(struct frame): Use INTERNAL_FIELD for all Lisp_Object fields.
* src/alloc.c, src/buffer.c, src/data.c, src/dispnew.c, src/dosfns.c
* src/eval.c, src/frame.c, src/fringe.c, src/gtkutil.c, src/minibuf.c
* src/nsfns.m, src/nsterm.m, src/print.c, src/term.c, src/w32fns.c
* src/w32menu.c, src/w32term.c, src/window.c, src/window.h, src/xdisp.c
* src/xfaces.c, src/xfns.c, src/xmenu.c, src/xterm.c: Users changed.
* admin/coccinelle/frame.cocci: Semantic patch to replace direct
access to Lisp_Object members of struct frame to FVAR.
"
9d2818d67690523a462696ccef3e1376a57dbf43,kfowler/emacs,"* configure.in: Remove references to obsolete variables and
systems.
* configure: Regenerate.

* Makefile.in (NO_SHORTNAMES):
* emacsclient.c (NO_SHORTNAMES):
* fakemail.c (NO_SHORTNAMES):
* make-docfile.c (NO_SHORTNAMES):
* movemail.c (NO_SHORTNAMES):
* pop.c (NO_SHORTNAMES): Remove references to obsolete variable.

* config.nt (SHORTNAMES): Remove reference to obsolete variable.

* s/vms4-0.h:
* s/vms4-2.h:
* s/vms4-4.h:
* s/vms5-5.h: Remove, unused.

* s/irix5-2.h:
* s/irix6-0.h:
* s/riscos5.h:
* s/mach-bsd4-3.h:
* m/mips4.h: Remove files for obsolete systems

* Makefile.in:
* filelock.c:
* unexmips.c:
* m/hp9000s300.h:
* m/iris4d.h:
* s/aix3-1.h:
* s/hpux.h:
* s/msdos.h:
* s/usg5-0.h:
* s/usg5-2-2.h:
* s/usg5-2.h:
* s/usg5-3.h: Remove references to obsolete variables.

* s/irix5-0.h: Remove, move all the contents ...
* s/irix6-5.h: ... here.  Simplify.
* config.in: Regenerate.
"
b99a34bcb030d59e0e272b3379d1725a6eb01d95,kfowler/emacs,"Document 'directory-files-recursively'

* lisp/files.el (directory-files-recursively): Doc fix.  Rename
the argument MATCH to REGEXP, to be more explicit about its form.

* doc/lispref/files.texi (Contents of Directories): Improve the
documentation of 'directory-files-recursively'.  Add
cross-references.

* etc/NEWS: Move the entry for 'directory-files-recursively' to
its place and mark it documented.
"
fb77d37e482531da9da27bec77c87a56c6f5ce40,kfowler/emacs,"Use full name for m4/gnulib-comp.m4.  (Bug#11529)

Previously the file was named m4/gl-comp.m4 due to DOS 8+3 restrictions,
even though the file's name in gnulib is m4/gnulib-comp.m4.
This had a problem when merging from gnulib, as the code temporarily
renamed it to the full name, causing problems when interrupted.
Now the file has its full name, with the idea that we will find
a solution for MS-DOS that does not affect the rest of Emacs.
* m4/gnulib-comp.m4: Rename from m4/gl-comp.m4.
* admin/merge-gnulib: Leave m4/gnulib-comp.m4's name alone.
"
ef6a29070d822e6b35d6b978d2f070f8a5854b30,kfowler/emacs,"shr.el (shr-tag-color-check): Convert colors to hexadecimal with shr-color->hexadecimal.
shr-color.el (shr-color->hexadecimal): Add converting functions for RGB() or HSL() color representation.
shr.el (shr-tag-font): Add.
 (shr-tag-color-check): New function to get better colors.
 (shr-tag-insert-color-overlay): Factorize code between tag-font and tag-span.
shr-color.el: New file.
color-lab.el: New file.
"
39e378da07fe365c6442dc95b937539eb31fe8ef,kfowler/emacs,"* bidi.c: Integer size and overflow fixes.

(bidi_cache_size, bidi_cache_idx, bidi_cache_last_idx)
(bidi_cache_start, bidi_cache_fetch_state, bidi_cache_search)
(bidi_cache_find_level_change, bidi_cache_ensure_space)
(bidi_cache_iterator_state, bidi_cache_find, bidi_cache_start_stack)
(bidi_find_other_level_edge):
Use ptrdiff_t instead of EMACS_INT where either will do.
This works better on 32-bit hosts configured --with-wide-int.
(bidi_cache_ensure_space): Check for size-calculation overflow.
Use % rather than repeated addition, for better worst-case speed.
Don't set bidi_cache_size until after xrealloc returns, because it
might not return.
(bidi_dump_cached_states): Use ptrdiff_t, not int, to avoid overflow.
"
f5462bae4eed999b82c24bbaf17373ddedbf06fd,kfowler/emacs,"color.el: Rename various rgb functions to srgb.
"
34348bd4e5c89fa0e440e37efa20be2a00c8fd9c,kfowler/emacs,"* coding.c (Fdefine_coding_system_internal): Use XCAR/XCDR instead
of Fcar/Fcdr if possible.
* font.c (check_otf_features): Likewise.
* fontset.c (Fnew_fontset): Likewise.
* gnutls.c (Fgnutls_boot): Likewise.
* minibuf.c (read_minibuf): Likewise.
* msdos.c (IT_set_frame_parameters): Likewise.
* xmenu.c (Fx_popup_dialog): Likewise.
* w32menu.c (Fx_popup_dialog): Likewise.
"
40c178792eb1464abede4fd86d3bb394f49e3131,kfowler/emacs,"Move TERMINFO, LIBS_TERMCAP from cpp to configure.

* configure.in (HAVE_LIBNCURSES): New local variable.
(TERMINFO, LIBS_TERMCAP, TERMCAP_OBJ): New output variables,
replacing cpp in src/s/*.h and src/Makefile.in.

* src/Makefile.in (LIBS_TERMCAP): Set with configure, not cpp.
(TERMCAP_OBJ): New, set by configure, replacing termcapobj.
(termcapobj): Replace with TERMCAP_OBJ.
(otherobj): Use $TERMCAP_OBJ instead of $termcapobj.
(LIBES): Use LIBS_TERMCAP as a variable.

* src/s/freebsd.h (osreldate.h): No longer include, since this file
does not use __FreeBSD_version any more.

* srs/s/aix4-2.h (TERMINFO):
* srs/s/cygwin.h (TERMINFO):
* srs/s/darwin.h (TERMINFO, LIBS_TERMCAP) [HAVE_LIBNCURSES]:
* srs/s/freebsd.h (TERMINFO, LIBS_TERMCAP):
* srs/s/gnu-linux.h (TERMINFO, LIBS_TERMCAP) [HAVE_LIBNCURSES]:
* srs/s/gnu.h (TERMINFO, LIBS_TERMCAP) [HAVE_LIBNCURSES]:
* srs/s/hpux10-20.h (TERMINFO, LIBS_TERMCAP):
* srs/s/irix6-5.h (TERMINFO):
* srs/s/netbsd.h (LIBS_TERMCAP):
* srs/s/openbsd.h (TERMINFO, LIBS_TERMCAP):
* srs/s/sol2-6.h (LIBS_TERMCAP) [!TERMINFO]:
* srs/s/usg5-4.h (TERMINFO):
Move to configure.

* msdos/sed1v2.inp (LIBS_TERMCAP): Edit to empty.
(TERMCAP_OBJ): Edit to tparam.o.

* admin/CPP-DEFINES (LIBS_TERMCAP, TERMINFO): Remove.
"
a9b0e28e232e4043267f3ee3d739e12c04c7a170,kfowler/emacs,"* todos.el: Clean up code.  Uncapitalize file name in first line.
Require cl-lib instead of cl.  Add section title separators.
Reindent some code and comments.  Comment out Todos mode menu
definition.
(todos-basic-insert-item): Rename from todos-insert-item-1 and
adjust uses.
(todos-basic-edit-item-header): Rename from
todos-edit-item-header-1 and adjust uses.
(todos-display-categories): Rename from todos-display-categories-1
and adjust uses.
(todos-show, todos-basic-insert-item)
(todos-basic-edit-item-header, todos-set-item-priority)
(todos-item-undone, todos-convert-legacy-files)
(todos-check-format, todos-filter-items-1):
Use user-error instead of error.
(todos-add-file, todos-basic-insert-item, todos-mark)
(todos-button, todos-sorted-column, todos-archived-only)
(todos-search, todos-category-string)
(todos-top-priorities-overrides)
(todos-insertion-commands-args-genlist, todos-filter-items)
(todos-filter-items-1, todos-filtered-items-mode-map):
Correct or improve document string.
(todos-edit-file)
(todos-sort-categories-alphabetically-or-by-priority)
(todos-sort-categories-by-todo, todos-sort-categories-by-diary)
(todos-sort-categories-by-done)
(todos-sort-categories-by-archived, todos-next-button)
(todos-previous-button, todos-gen-arglists)
(todos-define-insertion-command)
(todos-insertion-commands-arg-key-list)
(todos-insertion-key-bindings, todos-update-categories-display):
Add document string.
(todos-powerset-recursive): Rename from powerset-recursive and
reformulate slightly.
(todos-powerset-iterative): Rename from powerset-bitwise and
reformulate.
(todos-insertion-commands-args): Use cl-remove-duplicates instead
of remove-duplicates.
(todos-define-insertion-command): Improve doc string of generated defun.
(todos-adjusted-category-label-length)
(todos-insert-category-line, todos-update-categories-display):
Call cl-oddp instead of inlining its definition.
(todos-key-bindings): Remove, replacing by the following.
(todos-key-bindings-t, todos-key-bindings-t+a+f)
(todos-key-bindings-t+a, todos-key-bindings-t+f): New variables.
(todos-mode-map): Use new key-binding variables.
(todos-archive-mode-map, todos-filtered-items-mode-map): Use new
key-binding variables.  Don't suppress digit keys.
(todos-categories-mode-map): Don't suppress digit keys.
(todos-modes-set-1, todos-modes-set-2, todos-modes-set-3)
(todos-mode, todos-archive-mode, todos-mode-external-set):
Use setq-local instead of make-local-variable.
"
ab7af0222e427081b5b5269223746b87ac6a6cfc,kfowler/emacs,"Drop support for deprecated (since 23.1) forms of diary-display-function

* lisp/calendar/diary-lib.el (diary-display-function):
Drop support for deprecated nil and list forms.
(diary-list-entries): Update for the above.

* lisp/calendar/cal-x.el (calendar-dedicate-diary): Simplify accordingly.
"
1c6fefc9557ac174cea6b2d41f0eb3bdb1cced3a,kfowler/emacs,"Consolidate XChar2b macros for the X, W32, and NS

Suggested by Jan Djärv in:
https://lists.gnu.org/archive/html/emacs-devel/2014-07/msg00203.html
* w32gui.h (XChar2b, STORE_XCHAR2B, XCHAR2B_BYTE1, XCHAR2B_BYTE2):
Move the fallback definitions to dispextern.h.
* nsgui.h (XChar2b, STORE_XCHAR2B, XCHAR2B_BYTE1, XCHAR2B_BYTE2):
Likewise.  Share the same definition with W32.
* xterm.h (STORE_XCHAR2B, XCHAR2B_BYTE1, XCHAR2B_BYTE2): Move to ...
* dispextern.h (STORE_XCHAR2B, XCHAR2B_BYTE1, XCHAR2B_BYTE2):
... here for the consistency with W32 and NS.
"
f440830d606632693e41c26890ba54f31c57b22a,kfowler/emacs,"Silence some compiler warnings

* calculator.el (electric, ehelp): No need to load when compiling.
(Electric-command-loop, electric-describe-mode): Declare.

* doc-view.el (doc-view-current-converter-processes): Move before use.

* files.el (dired-unmark):
* progmodes/gud.el (gdb-input): Update declarations.

* emacs-lisp/easy-mmode.el (define-globalized-minor-mode):
Move MODE-set-explicitly definition before use.

* erc/erc-log.el (erc-network-name): Declare.

* erc/erc-notify.el (pcomplete--here): Declare.
(pcomplete/erc-mode/NOTIFY): Require pcomplete.

* international/mule-diag.el (mule-diag):
Don't use obsolete window-system-version.

* mail/feedmail.el (smtpmail): No need to load when compiling.
(smtpmail-via-smtp, smtpmail-smtp-server): Declare.

* mail/mail-utils.el (rfc822): No need to load when compiling.
(rfc822-addresses): Autoload it.
(mail-strip-quoted-names): Trivial simplification.

* mail/rmail.el (rmail-mime-message-p, rmail-mime-toggle-raw): Declare.
(rmail-retry-failure): Don't assume that rmail-mime-feature == rmailmm.

* net/snmp-mode.el (tempo): Don't duplicate requires.

* progmodes/prolog.el (info): No need to load when compiling.
(comint): Require before shell requires it.
(Info-goto-node): Autoload it.
(Info-follow-nearest-node): Declare.
(prolog-help-info, prolog-goto-predicate-info): No need to require info.

* textmodes/artist.el (picture-mode-exit): Declare.

* textmodes/reftex-parse.el (reftex-parse-from-file):
Trivial rewrite so the compiler can parse it better.

* url/url-dav.el (url-http): Require it.
(url-http-head-file-attributes): Don't autoload it.

* url/url-proxy.el (url-http): Autoload it.
"
5d3311e5bb8fba7a8151cc79d6651488946ac19d,kfowler/emacs,"* dispextern.h (struct face): Use bitfields for 'underline_type'
and 'box' members.  Remove set-but-unused members 'pixmap_w' and
'pixmap_h'.  If not HAVE_WINDOW_SYSTEM, also remove dummy
'stipple' member.  Move 'lface' member up to help...
* xfaces.c (make_realized_face): ...this function to find and
clear just the members that need clearing.
(load_face_colors, realize_x_face):
* xdisp.c (extend_face_to_end_of_line): Adjust user.
"
d311d28c3f8a3c43e6ef33d68b852c5ea7f13239,kfowler/emacs,"* alloc.c (pure_bytes_used_lisp, pure_bytes_used_non_lisp):

(allocate_vectorlike, buffer_memory_full, struct sdata, SDATA_SIZE)
(string_bytes, check_sblock, allocate_string_data):
(compact_small_strings, Fmake_bool_vector, make_string)
(make_unibyte_string, make_multibyte_string)
(make_string_from_bytes, make_specified_string)
(allocate_vectorlike, Fmake_vector, find_string_data_in_pure)
(make_pure_string, make_pure_c_string, make_pure_vector, Fpurecopy)
(mark_vectorlike):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(allocate_pseudovector):
Use int, not EMACS_INT, where int is wide enough.
(inhibit_garbage_collection, Fgarbage_collect):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* bidi.c (bidi_mirror_char): Use EMACS_INT, not int, where
int might not be wide enough.
(bidi_cache_search, bidi_cache_find, bidi_init_it)
(bidi_count_bytes, bidi_char_at_pos, bidi_fetch_char)
(bidi_at_paragraph_end, bidi_find_paragraph_start)
(bidi_paragraph_init, bidi_resolve_explicit, bidi_resolve_weak)
(bidi_level_of_next_char, bidi_move_to_visually_next):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* buffer.c (copy_overlays, Fgenerate_new_buffer_name)
(Fkill_buffer, Fset_buffer_major_mode)
(advance_to_char_boundary, Fbuffer_swap_text)
(Fset_buffer_multibyte, overlays_at, overlays_in)
(overlay_touches_p, struct sortvec, record_overlay_string)
(overlay_strings, recenter_overlay_lists)
(adjust_overlays_for_insert, adjust_overlays_for_delete)
(fix_start_end_in_overlays, fix_overlays_before, modify_overlay)
(Fmove_overlay, Fnext_overlay_change, Fprevious_overlay_change)
(Foverlay_recenter, last_overlay_modification_hooks_used)
(report_overlay_modification, evaporate_overlays, enlarge_buffer_text):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(validate_region): Omit unnecessary test for b <= e, since
that's guaranteed by the previous test.
(adjust_overlays_for_delete): Avoid pos + length overflow.
(Fmove_overlay, Fdelete_overlay, add_overlay_mod_hooklist)
(report_overlay_modification):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Foverlays_at, Fnext_overlay_change, Fprevious_overlay_change):
Omit pointer cast, which isn't needed anyway, and doesn't work
after the EMACS_INT -> ptrdiff_t change.
* buffer.h: Adjust decls to match defn changes elsewhere.
(struct buffer_text, struct buffer):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
Use EMACS_INT, not int, where int might not be wide enough.
* bytecode.c (exec_byte_code): Use ptrdiff_t, not int, to avoid
needless 32-bit limit on 64-bit hosts.  Remove unnecessary
memory-full test.  Use EMACS_INT, not ptrdiff_t or int, where
ptrdiff_t or int might not be wide enough.
* callint.c (Fcall_interactively):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* callproc.c (call_process_kill, Fcall_process):
Don't assume pid_t fits into an Emacs fixnum.
(call_process_cleanup, Fcall_process, child_setup):
Don't assume pid_t fits into int.
(call_process_cleanup, Fcall_process, delete_temp_file)
(Fcall_process_region):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Fcall_process): Simplify handling of volatile integers.
Use int, not EMACS_INT, where int will do.
* casefiddle.c (casify_object, casify_region, operate_on_word)
(Fupcase_word, Fdowncase_word, Fcapitalize_word):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(casify_object): Avoid integer overflow when overallocating buffer.
* casetab.c (set_identity, shuffle): Prefer int to unsigned when
either works.
* category.c (Fchar_category_set): Don't assume fixnum fits in int.
* category.h (CATEGORYP): Don't assume arg is nonnegative.
* ccl.c (GET_CCL_INT): Remove; no longer needed, since the
integers are now checked earlier.  All uses replaced with XINT.
(ccl_driver):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
For CCL_MapSingle, check that content and value are in int range.
(resolve_symbol_ccl_program): Check that vector header is in range.
Always copy the vector, so that we can check its contents reliably
now rather than having to recheck each instruction as it's being
executed.  Check that vector words fit in 'int'.
(ccl_get_compiled_code, Fregister_ccl_program)
(Fregister_code_conversion_map): Use ptrdiff_t, not int, for
program indexes, to avoid needless 32-bit limit on 64-bit hosts.
(Fccl_execute, Fccl_execute_on_string): Check that initial reg
contents are in range.
(Fccl_execute_on_string): Check that status is in range.
* ccl.h (struct ccl_program.idx): Now ptrdiff_t, not int.
* character.c (char_resolve_modifier_mask, Fchar_resolve_modifiers):
Accept and return EMACS_INT, not int, because callers can pass values
out of 'int' range.
(c_string_width, strwidth, lisp_string_width, chars_in_text)
(multibyte_chars_in_text, parse_str_as_multibyte)
(str_as_multibyte, count_size_as_multibyte, str_to_multibyte)
(str_as_unibyte, str_to_unibyte, string_count_byte8)
(string_escape_byte8, Fget_byte):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Funibyte_string): Use CHECK_CHARACTER, not CHECK_NATNUM, to
avoid mishandling large integers.
* character.h: Adjust decls to match defn changes elsewhere.
* charset.c (load_charset_map_from_file, find_charsets_in_text)
(Ffind_charset_region):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(load_charset_map_from_file): Redo idx calculation to avoid overflow.
(load_charset_map_from_vector, Fdefine_charset_internal):
Don't assume fixnum fits in int or unsigned int.
(load_charset_map_from_vector, Fmap_charset_chars):
Remove now-unnecessary CHECK_NATNUMs.
(Fdefine_charset_internal): Check ranges here, more carefully.
* chartab.c (Fmake_char_table, Fset_char_table_range)
(uniprop_get_decoder, uniprop_get_encoder):
Don't assume fixnum fits in int.
* cmds.c (move_point): New function, that does the gist of
Fforward_char and Fbackward_char, but does so while checking
for integer overflow more accurately.
(Fforward_char, Fbackward_char, internal_self_insert): Use it.
(Fforward_line, Fend_of_line, internal_self_insert)
(internal_self_insert):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
Fix a FIXME, by checking for integer overflow when calculating
target_clm and actual_clm.
* coding.c (detect_coding_XXX, encode_coding_XXX, CODING_DECODE_CHAR)
(ASSURE_DESTINATION, coding_alloc_by_realloc)
(coding_alloc_by_making_gap, alloc_destination)
(detect_coding_utf_8, encode_coding_utf_8, decode_coding_utf_16)
(encode_coding_utf_16, detect_coding_emacs_mule)
(decode_coding_emacs_mule, encode_coding_emacs_mule)
(detect_coding_iso_2022, decode_coding_iso_2022)
(encode_invocation_designation, encode_designation_at_bol)
(encode_coding_iso_2022, detect_coding_sjis, detect_coding_big5)
(decode_coding_sjis, decode_coding_big5, encode_coding_sjis)
(encode_coding_big5, detect_coding_ccl, decode_coding_ccl)
(encode_coding_ccl, encode_coding_raw_text)
(detect_coding_charset, decode_coding_charset)
(encode_coding_charset, detect_eol, decode_eol, produce_chars)
(produce_composition, produce_charset, produce_annotation)
(decode_coding, handle_composition_annotation)
(handle_charset_annotation, consume_chars, decode_coding_gap)
(decode_coding_object, encode_coding_object, detect_coding_system)
(Ffind_coding_systems_region_internal, Fcheck_coding_systems_region)
(code_convert_region, code_convert_string)
(Fdefine_coding_system_internal):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(setup_iso_safe_charsets, consume_chars, Funencodable_char_position)
(Fdefine_coding_system_internal):
Don't assume fixnums fit in int.
(decode_coding_gap, decode_coding_object, encode_coding_object)
(Fread_coding_system, Fdetect_coding_region, Funencodable_char_position)
(Fcheck_coding_systems_region):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Ffind_operation_coding_system): NATNUMP can eval its arg twice.
(Fdefine_coding_system_internal): Check for charset-id overflow.
* coding.h: Adjust decls to match defn changes elsewhere.
(struct coding_system):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* composite.c (get_composition_id, find_composition)
(run_composition_function, update_compositions)
(compose_text, composition_gstring_put_cache)
(composition_gstring_p, composition_gstring_width)
(fill_gstring_header, fill_gstring_body, autocmp_chars)
(composition_compute_stop_pos, composition_reseat_it)
(composition_update_it, struct position_record)
(find_automatic_composition, composition_adjust_point)
(Fcomposition_get_gstring, Ffind_composition_internal):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(update_compositions):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* composite.h: Adjust decls to match defn changes elsewhere.
(struct composition):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* data.c (let_shadows_buffer_binding_p, let_shadows_global_binding_p):
Do not attempt to compute the address of the object just before a
buffer; this is not portable.
(Faref, Faset):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Faset): Use int, not EMACS_INT, where int is wide enough.
(Fstring_to_number): Don't assume fixnums fit in int.
(Frem): Don't assume arg is nonnegative.
* dbusbind.c (xd_append_arg): Check for integers out of range.
(Fdbus_call_method): Don't overflow the timeout int.
* dired.c (directory_files_internal, file_name_completion, scmp)
(file_name_completion_stat):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(file_name_completion): Don't overflow matchcount.
(file_name_completion_stat): Use SAFE_ALLOCA, not alloca.
* dispextern.h: Adjust decls to match defn changes elsewhere.
(struct text_pos, struct glyph, struct bidi_saved_info)
(struct bidi_string_data, struct bidi_it, struct composition_it)
(struct it):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(struct display_pos, struct composition_it, struct it):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* dispnew.c (increment_matrix_positions)
(increment_row_positions, mode_line_string)
(marginal_area_string):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(change_frame_size_1, Fredisplay):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(duration_to_sec_usec): New function, to check for overflow better.
(Fsleep_for, sit_for): Use it.
* doc.c (get_doc_string, store_function_docstring):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(get_doc_string, Fsnarf_documentation):
Use int, not EMACS_INT, where int is wide enough.
(get_doc_string):
Use SAFE_ALLOCA, not alloca.
Check for overflow when converting EMACS_INT to off_t.
* doprnt.c (doprnt):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* editfns.c (init_editfns, Fuser_uid, Fuser_real_uid):
Don't assume uid_t fits into fixnum.
(buildmark, Fgoto_char, overlays_around, find_field, Fdelete_field)
(Ffield_string, Ffield_string_no_properties, Ffield_beginning)
(Ffield_end, Fconstrain_to_field, Fline_beginning_position)
(Fline_end_position, Fprevious_char, Fchar_after, Fchar_before)
(general_insert_function)
(Finsert_char, make_buffer_string, make_buffer_string_both)
(update_buffer_properties, Fbuffer_substring)
(Fbuffer_substring_no_properties, Fcompare_buffer_substrings)
(Fsubst_char_in_region, check_translation)
(Ftranslate_region_internal, save_restriction_restore, Fformat)
(transpose_markers, Ftranspose_regions):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(clip_to_bounds): Move to lisp.h as an inline function).
(Fconstrain_to_field): Don't assume integers are nonnegative.
(Fline_beginning_position, Fsave_excursion, Fsave_current_buffer):
(Fsubst_char_in_region, Fsave_restriction):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Femacs_pid): Don't assume pid_t fits into fixnum.
(lo_time): Use int, not EMACS_INT, when int suffices.
(lisp_time_argument): Check for usec out of range.
(Fencode_time): Don't assume fixnum fits in int.
* emacs.c (gdb_valbits, gdb_gctypebits): Now int, not EMACS_INT.
(gdb_data_seg_bits): Now uintptr_t, not EMACS_INT.
(PVEC_FLAG, gdb_array_mark_flag): Now ptrdiff_t, not EMACS_INT.
(init_cmdargs, Fdump_emacs):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Fkill_emacs): Don't assume fixnum fits in int; instead, take just
the bottom (typically) 32 bits of the fixnum.
* eval.c (specpdl_size, call_debugger):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(when_entered_debugger, Fbacktrace_debug):
Don't assume fixnum can fit in int.
(Fdefvaralias, Fdefvar): Do not attempt to compute the address of
the object just before a buffer; this is not portable.
(FletX, Flet, Funwind_protect, do_autoload, Feval, funcall_lambda)
(grow_specpdl, unbind_to):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Fapply, apply_lambda): Don't assume ptrdiff_t can hold fixnum.
(grow_specpdl): Simplify allocation by using xpalloc.
* fileio.c (Ffind_file_name_handler, Fcopy_file, Frename_file)
(Finsert_file_contents, Fwrite_region, Fdo_auto_save):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Ffind_file_name_handler, non_regular_inserted, Finsert_file_contents)
(a_write, e_write):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Fcopy_file, non_regular_nbytes, read_non_regular)
(Finsert_file_contents):
Use int, not EMACS_INT, where int is wide enough.
(READ_BUF_SIZE): Verify that it fits in int.
(Finsert_file_contents): Check that counts are in proper range,
rather than assuming fixnums fit into ptrdiff_t etc.
Don't assume fixnums fit into int.
(Fdo_auto_save, Fset_buffer_auto_saved)
(Fclear_buffer_auto_save_failure):
Don't assume time_t is signed, or that it fits in int.
* fns.c (Fcompare_strings, Fstring_lessp, struct textprop_rec)
(concat, string_char_byte_cache_charpos, string_char_byte_cache_bytepos)
(string_char_to_byte, string_byte_to_char)
(string_make_multibyte, string_to_multibyte)
(string_make_unibyte, Fstring_as_unibyte, Fstring_as_multibyte)
(Fstring_to_unibyte, Fsubstring, Fsubstring_no_properties)
(substring_both, Fdelete, internal_equal, Ffillarray)
(Fclear_string, mapcar1)
(Fbase64_encode_region, Fbase64_encode_string, base64_encode_1)
(Fbase64_decode_region, Fbase64_decode_string, base64_decode_1)
(larger_vector, make_hash_table, maybe_resize_hash_table)
(hash_lookup, hash_remove_from_table, hash_clear, sweep_weak_table)
(Fmaphash, secure_hash):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(concat): Check for string index and length overflow.
(Fmapconcat): Don't assume fixnums fit into ptrdiff_t.
(Frequire):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(larger_vector): New API (vec, incr_min, size_max) replaces old
one (vec, new_size, init).  This catches size overflow.
INIT was removed because it was always Qnil.
All callers changed.
(INDEX_SIZE_BOUND): New macro, which calculates more precisely
the upper bound on a hash table index size.
(make_hash_table, maybe_resize_hash_table): Use it.
(secure_hash): Computer start_byte and end_byte only after
they're known to be in ptrdiff_t range.
* font.c (font_intern_prop, font_at, font_range, Ffont_shape_gstring)
(Ffont_get_glyphs, Ffont_at):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(font_style_to_value, font_prop_validate_style, font_expand_wildcards)
(Flist_fonts, Fopen_font):
Don't assume fixnum can fit in int.
(check_gstring): Don't assume index can fit in int.
(font_match_p): Check that fixnum is a character, not a nonnegative
fixnum, since the later code needs to stuff it into an int.
(font_find_for_lface): Use SAFE_ALLOCA_LISP, not alloca.
(font_fill_lglyph_metrics): Use unsigned, not EMACS_INT, to avoid
conversion overflow issues.
(Fopen_font): Check for integer out of  range.
(Ffont_get_glyphs): Don't assume index can fit in int.
* font.h: Adjust decls to match defn changes elsewhere.
* fontset.c (reorder_font_vector): Redo score calculation to avoid
integer overflow.
(num_auto_fontsets, fontset_from_font): Use ptrdiff_t, not
printmax_t, where ptrdiff_t is wide enough.
(Finternal_char_font):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* frame.c (Fset_mouse_position, Fset_mouse_pixel_position)
(Fset_frame_height, Fset_frame_width, Fset_frame_size)
(Fset_frame_position, x_set_frame_parameters)
(x_set_line_spacing, x_set_border_width)
(x_set_internal_border_width, x_set_alpha, x_figure_window_size):
Check that fixnums are in proper range for system types.
(frame_name_fnn_p, Fframe_parameter, Fmodify_frame_parameters):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Fmodify_frame_parameters): Don't assume fixnum fits in int.
Use SAFE_ALLOCA_LISP, not alloca.
* frame.h (struct frame): Use intptr_t, not EMACS_INT, where
intptr_t is wide enough.
* fringe.c (lookup_fringe_bitmap, get_logical_fringe_bitmap)
(Fdefine_fringe_bitmap): Don't assume fixnum fits in int.
(Ffringe_bitmaps_at_pos): Don't assume index fits in int.
Check for fixnum out of range.
* ftfont.c (ftfont_list): Don't assume index fits in int.
Check that fixnums are in proper range for system types.
(ftfont_shape_by_flt):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
Remove no-longer-needed lint_assume.
* gnutls.c (emacs_gnutls_write, emacs_gnutls_read):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Fgnutls_error_fatalp, Fgnutls_error_string, Fgnutls_boot):
Check that fixnums are in proper range for system types.
* gnutls.h: Adjust decls to match defn changes elsewhere.
* gtkutil.c (xg_dialog_run):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(update_frame_tool_bar):
Check that fixnums are in proper range for system types.
* image.c (parse_image_spec): Redo count calculation to avoid overflow.
(lookup_image): Check that fixnums are in proper range for system types.
* indent.c (last_known_column, last_known_column_point):
(current_column_bol_cache):
(skip_invisible, current_column, check_display_width):
(check_display_width, scan_for_column, current_column_1)
(Findent_to, Fcurrent_indentation, position_indentation)
(indented_beyond_p, Fmove_to_column, compute_motion):
(Fcompute_motion, Fvertical_motion):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(last_known_column_modified): Use EMACS_INT, not int.
(check_display_width):
(Fcompute_motion):
Check that fixnums and floats are in proper range for system types.
(compute_motion): Don't assume index or fixnum fits in int.
(compute_motion, Fcompute_motion):
Use int, not EMACS_INT, when it is wide enough.
(vmotion): Omit local var start_hpos that is always 0; that way
we don't need to worry about overflow in expressions involving it.
* indent.h: Adjust decls to match defn changes elsewhere.
(struct position):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
Use int, not EMACS_INT, where int is wide enough.
Remove unused members ovstring_chars_done and tab_offset;
all uses removed.
* insdel.c (move_gap, move_gap_both, gap_left, gap_right)
(adjust_markers_for_delete, adjust_markers_for_insert, adjust_point)
(adjust_markers_for_replace, make_gap_larger, make_gap_smaller)
(make_gap, copy_text, insert, insert_and_inherit)
(insert_before_markers, insert_before_markers_and_inherit)
(insert_1, count_combining_before, count_combining_after)
(insert_1_both, insert_from_string)
(insert_from_string_before_markers, insert_from_string_1)
(insert_from_gap, insert_from_buffer, insert_from_buffer_1)
(adjust_after_replace, adjust_after_insert, replace_range)
(replace_range_2, del_range, del_range_1, del_range_byte)
(del_range_both, del_range_2, modify_region)
(prepare_to_modify_buffer, signal_before_change)
(signal_after_change, Fcombine_after_change_execute):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* intervals.c (traverse_intervals, rotate_right, rotate_left)
(balance_an_interval, split_interval_right, split_interval_left)
(find_interval, next_interval, update_interval)
(adjust_intervals_for_insertion, delete_node, delete_interval)
(interval_deletion_adjustment, adjust_intervals_for_deletion)
(static_offset_intervals, offset_intervals)
(merge_interval_right, merge_interval_left, make_new_interval)
(graft_intervals_into_buffer, temp_set_point_both)
(temp_set_point, set_point, adjust_for_invis_intang)
(set_point_both, move_if_not_intangible, get_property_and_range)
(get_local_map, copy_intervals, copy_intervals_to_string)
(compare_string_intervals, set_intervals_multibyte_1):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* intervals.h: Adjust decls to match defn changes elsewhere.
(struct interval):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* keyboard.c (this_command_key_count, this_single_command_key_start)
(before_command_key_count, before_command_echo_length, echo_now)
(echo_length, recursive_edit_1, Frecursive_edit, Ftrack_mouse)
(command_loop_1, safe_run_hooks, read_char, timer_check_2)
(menu_item_eval_property, read_key_sequence, Fread_key_sequence)
(Fread_key_sequence_vector, Fexecute_extended_command, Fsuspend_emacs):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(last_non_minibuf_size, last_point_position, echo_truncate)
(command_loop_1, adjust_point_for_property, read_char, gen_help_event)
(make_lispy_position, make_lispy_event, parse_modifiers_uncached)
(parse_modifiers, modify_event_symbol, Fexecute_extended_command)
(stuff_buffered_input):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(last_auto_save, command_loop_1, read_char):
Use EMACS_INT, not int, to avoid integer overflow.
(record_char): Avoid overflow in total_keys computation.
(parse_modifiers_uncached): Redo index calculation to avoid overflow.
* keyboard.h: Adjust decls to match defn changes elsewhere.
* keymap.c (Fdefine_key, Fcurrent_active_maps, accessible_keymaps_1)
(Fkey_description, Fdescribe_vector, Flookup_key):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(click_position): New function, to check that positions are in range.
(Fcurrent_active_maps):
(describe_command):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Faccessible_keymaps, Fkey_description):
(preferred_sequence_p):
Don't assume fixnum can fit into int.
(Fkey_description): Use SAFE_ALLOCA_LISP, not alloca.
Check for integer overflow in size calculations.
(Ftext_char_description): Use CHECK_CHARACTER, not CHECK_NUMBER, to
avoid mishandling large integers.
* lisp.h: Adjust decls to match defn changes elsewhere.
(ARRAY_MARK_FLAG, PSEUDOVECTOR_FLAG, struct Lisp_String)
(struct vectorlike_header, struct Lisp_Subr, struct Lisp_Hash_Table)
(struct Lisp_Marker):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(clip_to_bounds): Now an inline function, moved here from editfns.c.
(XSETSUBR): Use size of 0 since the actual size doesn't matter,
and using 0 avoids overflow.
(GLYPH_CODE_P): Check for overflow in system types, subsuming the
need for GLYPH_CODE_CHAR_VALID_P and doing proper checking ourselves.
All callers changed.
(GLYPH_CODE_CHAR, GLYPH_CODE_FACE):
Assume the arg has valid form, since it always does.
(TYPE_RANGED_INTEGERP): Avoid bug when checking against a wide
unsigned integer system type.
(CHECK_RANGED_INTEGER, CHECK_TYPE_RANGED_INTEGER): New macros.
(struct catchtag, specpdl_size, SPECPDL_INDEX, USE_SAFE_ALLOCA):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(struct catchtag): Use EMACS_INT, not int, since it may be a fixnum.
(duration_to_sec_usec): New decl.
* lread.c (read_from_string_index, read_from_string_index_byte)
(read_from_string_limit, readchar, unreadchar, openp)
(read_internal_start, read1, oblookup):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Fload, readevalloop, Feval_buffer, Feval_region):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(openp): Check for out-of-range argument to 'access'.
(read1): Use int, not EMACS_INT, where int is wide enough.
Don't assume fixnum fits into int.
* macros.c (Fstart_kbd_macro): Use xpalloc to check for overflow
in size calculation.
(Fexecute_kbd_macro):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* marker.c (cached_charpos, cached_bytepos, CONSIDER)
(byte_char_debug_check, buf_charpos_to_bytepos, verify_bytepos)
(buf_bytepos_to_charpos, Fset_marker, set_marker_restricted)
(set_marker_both, set_marker_restricted_both, marker_position)
(marker_byte_position, Fbuffer_has_markers_at):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Fset_marker, set_marker_restricted): Don't assume fixnum fits in int.
* menu.c (ensure_menu_items): Renamed from grow_menu_items.
It now merely ensures that the menu is large enough, without
necessarily growing it, as this avoids some integer overflow issues.
All callers changed.
(keymap_panes, parse_single_submenu, Fx_popup_menu):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(parse_single_submenu, Fx_popup_menu): Don't assume fixnum fits in int.
Use SAFE_ALLOCA_LISP, not alloca.
(find_and_return_menu_selection): Avoid unnecessary casts of pointers
to EMACS_INT.  Check that fixnums are in proper range for system types.
* minibuf.c (minibuf_prompt_width, string_to_object)
(Fminibuffer_contents, Fminibuffer_contents_no_properties)
(Fminibuffer_completion_contents, Ftry_completion, Fall_completions):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(get_minibuffer, read_minibuf_unwind):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(read_minibuf): Omit unnecessary arg BACKUP_N, which is always nil;
this simplifies overflow checking.  All callers changed.
(read_minibuf, Fread_buffer, Ftry_completion, Fall_completions)
(Ftest_completion):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* nsfns.m (check_ns_display_info): Don't assume fixnum fits in long.
(x_set_menu_bar_lines, x_set_tool_bar_lines, Fx_create_frame):
Check that fixnums are in proper range for system types.
(Fx_create_frame, Fx_show_tip):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* nsfont.m (ns_findfonts, nsfont_list_family):
Don't assume fixnum fits in long.
* nsmenu.m (ns_update_menubar, ns_menu_show, ns_popup_dialog):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(ns_update_menubar): Use intptr_t, not EMACS_INT, when intptr_t is
wide enough.
* nsselect.m (ns_get_local_selection):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* print.c (print_buffer_size, print_buffer_pos, print_buffer_pos_byte)
(PRINTDECLARE, PRINTPREPARE):
(strout, print_string):
(print, print_preprocess, print_check_string_charset_prop)
(print_object):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(PRINTDECLARE):
(temp_output_buffer_setup, Fprin1_to_string, print_object):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(PRINTPREPARE): Use int, not ptrdiff_t, where int is wide enough.
(PRINTFINISH): Use SAFE_ALLOCA, not alloca.
(printchar, strout): Use xpalloc to catch size calculation overflow.
(Fexternal_debugging_output): Use CHECK_CHARACTER, not CHECK_NUMBER,
to avoid mishandling large integers.
(print_error_message): Use SAFE_ALLOCA, not alloca.
(print_object): Use int, not EMACS_INT, where int is wide enough.
* process.c (Fdelete_process): Don't assume pid fits into EMACS_INT.
(Fset_process_window_size, Fformat_network_address)
(get_lisp_to_sockaddr_size, set_socket_option, Fmake_network_process)
(Fsignal_process, sigchld_handler):
Check that fixnums are in proper range for system types.
(Fformat_network_address, read_process_output, send_process)
(Fprocess_send_region, status_notify):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Fformat_network_address, Fmake_serial_process, Fmake_network_process)
(wait_reading_process_output, read_process_output, exec_sentinel):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(conv_lisp_to_sockaddr): Don't assume fixnums fit into int.
(Faccept_process_output): Use duration_to_sec_usec to do proper
overflow checking on durations.
* scroll.c (calculate_scrolling, calculate_direct_scrolling)
(line_ins_del): Use int, not EMACS_INT, where int is wide enough.
* search.c (looking_at_1, string_match_1):
(fast_string_match, fast_c_string_match_ignore_case)
(fast_string_match_ignore_case, fast_looking_at, scan_buffer)
(scan_newline, find_before_next_newline, search_command)
(trivial_regexp_p, search_buffer, simple_search, boyer_moore)
(set_search_regs, wordify):
(Freplace_match):
(Fmatch_data):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(string_match_1, search_buffer, set_search_regs):
(Fmatch_data):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(wordify): Check for overflow in size calculation.
(Freplace_match): Avoid potential buffer overflow in search_regs.start.
(Fset_match_data): Don't assume fixnum fits in ptrdiff_t.
Check that fixnums are in proper range for system types.
* sound.c (struct sound_device)
(wav_play, au_play, vox_write, alsa_period_size, alsa_write):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Fplay_sound_internal):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* syntax.c (ST_COMMENT_STYLE, ST_STRING_STYLE):
In definitions, make it clearer that these values must be out of range
for the respective integer ranges.  This fixes a bug with ST_STRING_STYLE
and non-ASCII characters.
(struct lisp_parse_state, find_start_modiff)
(Finternal_describe_syntax_value, scan_lists, scan_sexps_forward):
(Fparse_partial_sexp):
Don't assume fixnums can fit in int.
(struct lisp_parse_state, find_start_pos, find_start_value)
(find_start_value_byte, find_start_begv)
(update_syntax_table, char_quoted, dec_bytepos)
(find_defun_start, prev_char_comend_first, back_comment):
(scan_words, skip_chars, skip_syntaxes, forw_comment, Fforward_comment)
(scan_lists, Fbackward_prefix_chars, scan_sexps_forward):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Finternal_describe_syntax_value): Check that match_lisp is a
character, not an integer, since the code stuffs it into int.
(scan_words, scan_sexps_forward):
Check that fixnums are in proper range for system types.
(Fforward_word):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(scan_sexps_forward):
Use CHARACTERP, not INTEGERP, since the value must fit into int.
(Fparse_partial_sexp): Fix doc; element 8 is not ignored.
* syntax.h: Adjust decls to match defn changes elsewhere.
(struct gl_state_s):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* sysdep.c (wait_for_termination_1, wait_for_termination)
(interruptible_wait_for_termination, mkdir):
Don't assume pid_t fits in int; on 64-bit AIX pid_t is 64-bit.
(emacs_read, emacs_write):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(system_process_attributes): Don't assume uid_t, gid_t, and
double all fit in int or even EMACS_INT.
* term.c (set_tty_color_mode):
Check that fixnums are in proper range for system types.
* termhooks.h (struct input_event):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* textprop.c (validate_interval_range, interval_of)
(Fadd_text_properties, set_text_properties_1)
(Fremove_text_properties, Fremove_list_of_text_properties)
(Ftext_property_any, Ftext_property_not_all)
(copy_text_properties, text_property_list, extend_property_ranges)
(verify_interval_modification):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Fnext_single_char_property_change)
(Fprevious_single_char_property_change):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(copy_text_properties): Check for integer overflow in index calculation.
* undo.c (last_boundary_position, record_point, record_insert)
(record_delete, record_marker_adjustment, record_change)
(record_property_change):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(truncate_undo_list, Fprimitive_undo): Don't assume fixnum fits in int.
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* w32fns.c (Fx_create_frame, x_create_tip_frame, Fx_show_tip)
(Fx_hide_tip, Fx_file_dialog):
* w32menu.c (set_frame_menubar):
Use ptrdiff_t, not int, for consistency with rest of code.
* window.c (window_scroll_preserve_hpos, window_scroll_preserve_vpos)
(select_window, Fdelete_other_windows_internal)
(window_scroll_pixel_based, window_scroll_line_based)
(Frecenter, Fset_window_configuration):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(Fset_window_hscroll, run_window_configuration_change_hook)
(set_window_buffer, temp_output_buffer_show, scroll_command)
(Fscroll_other_window):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Fwindow_line_height, window_scroll, Fscroll_left, Fscroll_right):
Don't assume fixnum fits in int.
(Fset_window_scroll_bars):
Check that fixnums are in proper range for system types.
* xdisp.c (help_echo_pos, pos_visible_p, string_pos_nchars_ahead)
(string_pos, c_string_pos, number_of_chars, init_iterator)
(in_ellipses_for_invisible_text_p, init_from_display_pos)
(compute_stop_pos, next_overlay_change, compute_display_string_pos)
(compute_display_string_end, handle_face_prop)
(face_before_or_after_it_pos, handle_invisible_prop, handle_display_prop)
(handle_display_spec, handle_single_display_spec)
(display_prop_intangible_p, string_buffer_position_lim)
(string_buffer_position, handle_composition_prop, load_overlay_strings)
(get_overlay_strings_1, get_overlay_strings)
(iterate_out_of_display_property, forward_to_next_line_start)
(back_to_previous_visible_line_start, reseat, reseat_to_string)
(get_next_display_element, set_iterator_to_next)
(get_visually_first_element, compute_stop_pos_backwards)
(handle_stop_backwards, next_element_from_buffer)
(move_it_in_display_line_to, move_it_in_display_line)
(move_it_to, move_it_vertically_backward, move_it_by_lines)
(add_to_log, message_dolog, message_log_check_duplicate)
(message2, message2_nolog, message3, message3_nolog
(with_echo_area_buffer, display_echo_area_1, resize_mini_window_1)
(current_message_1, truncate_echo_area, truncate_message_1)
(set_message, set_message_1, store_mode_line_noprop)
(hscroll_window_tree, debug_delta, debug_delta_bytes, debug_end_vpos)
(text_outside_line_unchanged_p, check_point_in_composition)
(reconsider_clip_changes)
(redisplay_internal, set_cursor_from_row, try_scrolling)
(try_cursor_movement, set_vertical_scroll_bar, redisplay_window)
(redisplay_window, find_last_unchanged_at_beg_row)
(find_first_unchanged_at_end_row, row_containing_pos, try_window_id)
(trailing_whitespace_p, find_row_edges, display_line)
(RECORD_MAX_MIN_POS, Fcurrent_bidi_paragraph_direction)
(display_mode_element, store_mode_line_string)
(pint2str, pint2hrstr, decode_mode_spec)
(display_count_lines, display_string, draw_glyphs)
(x_produce_glyphs, x_insert_glyphs)
(rows_from_pos_range, mouse_face_from_buffer_pos)
(fast_find_string_pos, mouse_face_from_string_pos)
(note_mode_line_or_margin_highlight, note_mouse_highlight):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(safe_call, init_from_display_pos, handle_fontified_prop)
(handle_single_display_spec, load_overlay_strings)
(with_echo_area_buffer, setup_echo_area_for_printing)
(display_echo_area, echo_area_display)
(x_consider_frame_title, prepare_menu_bars, update_menu_bar)
(update_tool_bar, hscroll_window_tree, redisplay_internal)
(redisplay_window, dump_glyph_row, display_mode_line, Fformat_mode_line)
(decode_mode_spec, on_hot_spot_p):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(handle_single_display_spec, build_desired_tool_bar_string)
(redisplay_tool_bar, scroll_window_tree, Fdump_glyph_matrix)
(get_specified_cursor_type):
Check that fixnums are in proper range for system types.
(struct overlay_entry, resize_mini_window, Fdump_glyph_row)
(Flookup_image_map):
Don't assume fixnums fit in int.
(compare_overlay_entries):
Avoid mishandling comparisons due to subtraction overflow.
(load_overlay_strings): Use SAFE_NALLOCA, not alloca.
(last_escape_glyph_face_id, last_glyphless_glyph_face_id):
(handle_tool_bar_click):
Use int, not unsigned, since we prefer signed and the signedness
doesn't matter here.
(get_next_display_element, next_element_from_display_vector):
Use int, not EMACS_INT, when int is wide enough.
(start_hourglass): Use duration_to_sec_usec to do proper
overflow checking on durations.
* xfaces.c (Fbitmap_spec_p):
Check that fixnums are in proper range for system types.
(compare_fonts_by_sort_order):
Avoid mishandling comparisons due to subtraction overflow.
(Fx_family_fonts, realize_basic_faces):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Fx_family_fonts):
Don't assume fixnum fits in int.
Use SAFE_ALLOCA_LISP, not alloca.
(merge_face_heights): Remove unnecessary cast to EMACS_INT.
(Finternal_make_lisp_face): Don't allocate more than MAX_FACE_ID.
(face_at_buffer_position, face_for_overlay_string)
(face_at_string_position):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
(merge_faces): Use int, not EMACS_INT, where int is wide enough.
* xfns.c (x_set_menu_bar_lines, x_set_tool_bar_lines, x_icon_verify)
(Fx_show_tip):
Check that fixnums are in proper range for system types.
(Fx_create_frame, x_create_tip_frame, Fx_show_tip)
(Fx_hide_tip, Fx_file_dialog, Fx_select_font):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(Fx_change_window_property): Don't assume fixnums fit in int.
* xfont.c (xfont_chars_supported):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* xmenu.c (Fx_popup_dialog, set_frame_menubar)
(create_and_show_popup_menu, create_and_show_dialog, xmenu_show):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* xml.c (parse_region):
* xrdb.c (magic_file_p):
Use ptrdiff_t, not EMACS_INT, where ptrdiff_t is wide enough.
* xselect.c (TRACE1): Don't assume pid_t promotes to int.
(x_get_local_selection, x_reply_selection_request)
(x_handle_selection_request, wait_for_property_change):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
(selection_data_to_lisp_data): Use short, not EMACS_INT, where
short is wide enough.
(x_send_client_event): Don't assume fixnum fits in int.
* xterm.c (x_x_to_emacs_modifiers):
Don't assume EMACS_INT overflows nicely into int.
(x_emacs_to_x_modifiers): Use EMACS_INT, not int, because values
may come from Lisp.
(handle_one_xevent): NATNUMP can eval its arg twice.
(x_connection_closed):
Use ptrdiff_t, not int, to avoid needless 32-bit limit on 64-bit hosts.
* xterm.h: Adjust decls to match defn changes elsewhere.
(struct scroll_bar): Use struct vectorlike_header
rather than rolling our own approximation.
(SCROLL_BAR_VEC_SIZE): Remove; not used.
"
fd042993b7e4017c9fd26fe0cfac3a50a9dcdaa0,kfowler/emacs,"shr.el (shr-insert): Fix the way to fold lines.
shr-color.el (shr-color->hexadecimal): Use color-rgb->hex
color.el: Rename from color-lab.el
 (color-rgb->hex): Add.
 (color-complement): Add.
 (color-complement-hex): Add.
"
07525f7737602af36afe40f85f229fee9887f232,kfowler/emacs,"Fix vertical cursor motion when there's a display string with newline at EOL.

 src/xdisp.c (row_for_charpos_p): New function, with code of
 cursor_row_p, but accepts an additional argument CHARPOS instead
 of using a hardcoded PT.
 (cursor_row_p): Call row_for_charpos_p with 2nd argument PT.
 (row_containing_pos): Call row_for_charpos_p instead of partially
 doing the same.  Fixes cursor positioning under longlines-mode
 when longlines-show-effect includes more than one newline, when
 moving the cursor vertically up.
"
7605d081badfac6890d5f34966967bffdc18d715,kfowler/emacs,"Update nt installation instructions to point to supported method

* nt/INSTALL: Rename from INSTALL.MSYS.

* nt/INSTALL.OLD: Rename from INSTALL.

* nt/configure.bat: Update for INSTALL name changes.

* make-dist: Update for nt/INSTALL* changes.
"
fff62aa9aea4f6c2aadcef4cdc203cdf60ba224c,kfowler/emacs,"Cleanup basic allocation variables and functions.
* alloc.c (ignore_warnings, init_intervals, init_float)
(init_cons, init_symbol, init_marker): Remove.
(interval_block_index): Initialize to INTERVAL_BLOCK_SIZE.
(float_block_index): Initialize to FLOAT_BLOCK_SIZE.
(cons_block_index): Initialize to CONS_BLOCK_SIZE.
(symbol_block_size): Initialize to SYMBOL_BLOCK_SIZE.
(marker_block_index): Initialize to MARKER_BLOCK_SIZE.
(staticidx, init_alloc_once, init_strings, free_ablock):
Remove redundant initialization.
* fns.c (init_weak_hash_tables): Remove.
* lisp.h (init_weak_hash_tables): Remove prototype.
"
fbb5531fa11d13854b274d28ccd329c9b6652cfc,kfowler/emacs,"More-conservative ‘format’ quote restyling

Instead of restyling curved quotes for every call to ‘format’,
create a new function ‘format-message’ that does the restyling,
and using the new function instead of ‘format’ only in contexts
where this seems appropriate.
Problem reported by Dmitry Gutov and Andreas Schwab in:
http://lists.gnu.org/archive/html/emacs-devel/2015-08/msg00826.html
http://lists.gnu.org/archive/html/emacs-devel/2015-08/msg00827.html
* doc/lispref/commands.texi (Using Interactive):
* doc/lispref/control.texi (Signaling Errors, Signaling Errors):
* doc/lispref/display.texi (Displaying Messages, Progress):
* doc/lispref/elisp.texi:
* doc/lispref/help.texi (Keys in Documentation):
* doc/lispref/minibuf.texi (Minibuffer Misc):
* doc/lispref/strings.texi (Formatting Strings):
* etc/NEWS:
Document the changes.
* lisp/abbrev.el (expand-region-abbrevs):
* lisp/apropos.el (apropos-library):
* lisp/calc/calc-ext.el (calc-record-message)
(calc-user-function-list):
* lisp/calc/calc-help.el (calc-describe-key, calc-full-help):
* lisp/calc/calc-lang.el (math-read-big-balance):
* lisp/calc/calc-store.el (calc-edit-variable):
* lisp/calc/calc-units.el (math-build-units-table-buffer):
* lisp/calc/calc-yank.el (calc-edit-mode):
* lisp/calendar/icalendar.el (icalendar-export-region)
(icalendar--add-diary-entry):
* lisp/cedet/mode-local.el (mode-local-print-binding)
(mode-local-describe-bindings-2):
* lisp/cedet/semantic/complete.el (semantic-completion-message):
* lisp/cedet/semantic/edit.el (semantic-parse-changes-failed):
* lisp/cedet/semantic/wisent/comp.el (wisent-log):
* lisp/cedet/srecode/insert.el (srecode-insert-show-error-report):
* lisp/descr-text.el (describe-text-properties-1, describe-char):
* lisp/dframe.el (dframe-message):
* lisp/dired-aux.el (dired-query):
* lisp/emacs-lisp/byte-opt.el (byte-compile-log-lap-1):
* lisp/emacs-lisp/bytecomp.el (byte-compile-log)
(byte-compile-log-file, byte-compile-warn, byte-compile-form):
* lisp/emacs-lisp/cconv.el (cconv-convert, cconv--analyze-use)
(cconv-analyze-form):
* lisp/emacs-lisp/check-declare.el (check-declare-warn):
* lisp/emacs-lisp/checkdoc.el (checkdoc-this-string-valid-engine):
* lisp/emacs-lisp/cl-macs.el (cl-symbol-macrolet):
* lisp/emacs-lisp/edebug.el (edebug-format):
* lisp/emacs-lisp/eieio-core.el (eieio-oref):
* lisp/emacs-lisp/eldoc.el (eldoc-minibuffer-message)
(eldoc-message):
* lisp/emacs-lisp/elint.el (elint-file, elint-log):
* lisp/emacs-lisp/find-func.el (find-function-library):
* lisp/emacs-lisp/macroexp.el (macroexp--obsolete-warning):
* lisp/emacs-lisp/map-ynp.el (map-y-or-n-p):
* lisp/emacs-lisp/nadvice.el (advice--make-docstring):
* lisp/emacs-lisp/package.el (package-compute-transaction)
(package-install-button-action, package-delete-button-action)
(package-menu--list-to-prompt):
* lisp/emacs-lisp/timer.el (timer-event-handler):
* lisp/emacs-lisp/warnings.el (lwarn, warn):
* lisp/emulation/viper-cmd.el:
(viper-toggle-parse-sexp-ignore-comments)
(viper-kill-buffer, viper-brac-function):
* lisp/emulation/viper-macs.el (viper-record-kbd-macro):
* lisp/facemenu.el (facemenu-add-new-face):
* lisp/faces.el (face-documentation, read-face-name)
(face-read-string, read-face-font, describe-face):
* lisp/files.el (find-alternate-file, hack-local-variables)
(hack-one-local-variable--obsolete, write-file)
(basic-save-buffer, delete-directory):
* lisp/format.el (format-write-file, format-find-file)
(format-insert-file):
* lisp/help-fns.el (help-fns--key-bindings)
(help-fns--compiler-macro, help-fns--obsolete)
(help-fns--interactive-only, describe-function-1)
(describe-variable):
* lisp/help.el (describe-mode):
* lisp/info-xref.el (info-xref-output):
* lisp/info.el (Info-virtual-index-find-node)
(Info-virtual-index, info-apropos):
* lisp/international/kkc.el (kkc-error):
* lisp/international/mule-cmds.el:
(select-safe-coding-system-interactively)
(select-safe-coding-system, describe-input-method):
* lisp/international/mule-conf.el (code-offset):
* lisp/international/mule-diag.el (describe-character-set)
(list-input-methods-1):
* lisp/international/quail.el (quail-error):
* lisp/minibuffer.el (minibuffer-message):
* lisp/mpc.el (mpc--debug):
* lisp/msb.el (msb--choose-menu):
* lisp/net/ange-ftp.el (ange-ftp-message):
* lisp/net/gnutls.el (gnutls-message-maybe):
* lisp/net/newst-backend.el (newsticker--sentinel-work):
* lisp/net/newst-treeview.el (newsticker--treeview-load):
* lisp/net/nsm.el (nsm-query-user):
* lisp/net/rlogin.el (rlogin):
* lisp/net/soap-client.el (soap-warning):
* lisp/net/tramp.el (tramp-debug-message):
* lisp/nxml/nxml-outln.el (nxml-report-outline-error):
* lisp/nxml/nxml-parse.el (nxml-parse-error):
* lisp/nxml/rng-cmpct.el (rng-c-error):
* lisp/nxml/rng-match.el (rng-compile-error):
* lisp/nxml/rng-uri.el (rng-uri-error):
* lisp/obsolete/iswitchb.el (iswitchb-possible-new-buffer):
* lisp/org/org-ctags.el:
(org-ctags-ask-rebuild-tags-file-then-find-tag):
* lisp/proced.el (proced-log):
* lisp/progmodes/ebnf2ps.el (ebnf-log):
* lisp/progmodes/flymake.el (flymake-log):
* lisp/progmodes/vhdl-mode.el (vhdl-warning-when-idle):
* lisp/replace.el (occur-1):
* lisp/simple.el (execute-extended-command)
(undo-outer-limit-truncate, define-alternatives):
* lisp/startup.el (command-line):
* lisp/subr.el (error, user-error, add-to-list):
* lisp/tutorial.el (tutorial--describe-nonstandard-key)
(tutorial--find-changed-keys):
* src/callint.c (Fcall_interactively):
* src/editfns.c (Fmessage, Fmessage_box):
Restyle the quotes of format strings intended for use as a
diagnostic, when restyling seems appropriate.
* lisp/subr.el (format-message): New function.
* src/doc.c (Finternal__text_restyle): New function.
(syms_of_doc): Define it.
"
9045c438b7ef6945f591008d2188a1837743cc94,kfowler/emacs,"Use int instead of unsigned int for width and height args.

* xterm.c (x_cr_draw_image, x_fill_rectangle, x_draw_rectangle)
(x_fill_trapezoid_for_relief): Use int instead of unsigned int for
width and height args.
"
644c6b414f39222890246d7fe155a369b1983246,kfowler/emacs,"* lisp/font-lock.el (font-lock-beginning-of-syntax-function): Remove

(font-lock-fontify-block): Don't let-bind it.
(font-lock-compile-keywords): Don't use it.
(font-lock-set-defaults): Don't set it.  Allow the variable alist to
start one slot earlier, instead.

* lisp/emacs-lisp/syntax.el (font-lock-beginning-of-syntax-function):
Don't declare.
(syntax-ppss): Don't use it either.

* lisp/font-core.el (font-lock-defaults): Remove SYNTAX-BEGIN
from docstring.

* doc/emacs/display.texi (Font Lock): Don't mention
font-lock-beginning-of-syntax-function.

* doc/lispref/modes.texi (Font Lock Basics): Update description of
font-lock-defaults.
(Syntactic Font Lock): Remove font-lock-beginning-of-syntax-function.

* lisp/loadhist.el (unload-feature-special-hooks):
Remove font-lock-beginning-of-syntax-function.

* lisp/obsolete/lazy-lock.el (lazy-lock-fontify-region):
* lisp/emacs-lisp/lisp.el (beginning-of-defun-raw): Don't let-bind
font-lock-beginning-of-syntax-function.
"
0d1c2cc8c871005071a3929618616245623376db,kfowler/emacs,"Merge changes made in Gnus trunk.

gnus-util.el: change default value of gnus-user-date-format-alist.
gnus-art.el (gnus-article-jump-to-part): Remove useless sit-for.
gnus-art.el: remove old FIXME.
gnus.el (gnus-summary-line-format): Add missing semi-colon for user-date in docstring.
message.el (message-setup-1): Always generate References first.
 (message-mail): Return the return value of message-setup, not always t.
gnus-start.el (gnus-read-active-for-groups): This function is never called with a nil `infos', so clean that up.
 (gnus-get-unread-articles): Request active files from primary/secondary methods that have no groups (yet).
 (message-setup-1): Insert mail-header-separator with read-only and intangible properties set.
gnus-draft.el: Remove progn around gnus-draft-setup.
gnus-start.el (gnus-get-unread-articles): Fix the call to methods that have no groups.
nnimap.el (nnimap-request-accept-article): Give an error message if the APPEND wasn't successful.
"
5a2d7ab6bfca5ded38c0d5c70e92c3b4f19660d9,kfowler/emacs,"by renaming, get rid of need for hash_remove() redefinitions for NS platform; also, adjust nsgui dependencies in Makefile
"
1ea1c2fa5ffe544ddd96565e0958f12e8698136b,kfowler/emacs,"message.el (message-pop-to-buffer): Use pop-to-buffer instead of pop-to-buffer-same-window for old Emacsen.
"
db4e950db70e655d72d8d45d91e90674b25b47e4,kfowler/emacs,"* lisp/simple.el (delete-trailing-whitespace): Document last change; simplify.
"
5fb59edbdd2a47471ff66a8b5cc326ae1bda25ba,kfowler/emacs,"* src/Makefile.in (SOME_MACHINE_LISP): Add w32-vars.
Remove ccl and duplicate mouse.
"
39eb03f1b023ae3d94e311f6f5d9f913f75c42c4,kfowler/emacs,"* buffer.h (BSET): Remove.

Replace all uses with calls to new setter functions.
(bset_bidi_paragraph_direction, bset_case_canon_table)
(bset_case_eqv_table, bset_directory, bset_display_count)
(bset_display_time, bset_downcase_table)
(bset_enable_multibyte_characters, bset_filename, bset_keymap)
(bset_last_selected_window, bset_local_var_alist)
(bset_mark_active, bset_point_before_scroll, bset_read_only)
(bset_truncate_lines, bset_undo_list, bset_upcase_table)
(bset_width_table):
* buffer.c (bset_abbrev_mode, bset_abbrev_table)
(bset_auto_fill_function, bset_auto_save_file_format)
(bset_auto_save_file_name, bset_backed_up, bset_begv_marker)
(bset_bidi_display_reordering, bset_buffer_file_coding_system)
(bset_cache_long_line_scans, bset_case_fold_search)
(bset_ctl_arrow, bset_cursor_in_non_selected_windows)
(bset_cursor_type, bset_display_table, bset_extra_line_spacing)
(bset_file_format, bset_file_truename, bset_fringe_cursor_alist)
(bset_fringe_indicator_alist, bset_fringes_outside_margins)
(bset_header_line_format, bset_indicate_buffer_boundaries)
(bset_indicate_empty_lines, bset_invisibility_spec)
(bset_left_fringe_width, bset_major_mode, bset_mark)
(bset_minor_modes, bset_mode_line_format, bset_mode_name)
(bset_name, bset_overwrite_mode, bset_pt_marker)
(bset_right_fringe_width, bset_save_length)
(bset_scroll_bar_width, bset_scroll_down_aggressively)
(bset_scroll_up_aggressively, bset_selective_display)
(bset_selective_display_ellipses, bset_vertical_scroll_bar_type)
(bset_word_wrap, bset_zv_marker):
* category.c (bset_category_table):
* syntax.c (bset_syntax_table):
New setter functions.

Fixes: debbugs:12215
"
24aedbcaed8346fd956a84ab79570891ca03a1b8,kfowler/emacs,"* subr.el (baud-rate): Remove long-obsolete function (Bug#4372).
"
59ba9d59dcd8d086b51926d7ce652ad4fc6c22fe,kfowler/emacs,"Simplifications for lisp/term/common-win.el

* lisp/term/common-win.el (x-handle-switch): Simplify with pop.
Optionally handle numeric switches.
(x-handle-numeric-switch): Just call x-handle-switch.
(x-handle-initial-switch, x-handle-xrm-switch, x-handle-geometry)
(x-handle-name-switch, x-handle-display, x-handle-args):
Simplify with pop.
"
43aac990c339c0fc3304aa476ebc8ea8467f107e,kfowler/emacs,"Simplify EMACS_TIME-related code.

This portability layer is no longer needed, since Emacs has been
using struct timespec as a portability layer for some time.
Merge from gnulib, incorporating:
2013-08-27 timespec: new convenience constants and function
* src/atimer.h, src/buffer.h, src/dispextern.h, src/xgselect.h:
Include <time.h> rather than ""systime.h""; that's all that's needed now.
* src/dispnew.c: Include <timespec.h> rather than ""systime.h"";
that's all that's needed now.
* src/systime.h (EMACS_TIME): Remove.  All uses changed to struct timespec.
(EMACS_TIME_RESOLUTION): Remove.  All uses changed to
TIMESPEC_RESOLUTION.
(LOG10_EMACS_TIME_RESOLUTION): Remove.  All uses changed to
LOG10_TIMESPEC_RESOLUTION.
(EMACS_SECS, emacs_secs_addr): Remove.  All uses changed to tv_sec.
(EMACS_NSECS): Remove.  All uses changed to tv_nsec.
(make_emacs_time): Remove.  All used changed to make_timespec.
(invalid_timespec): Rename from invalid_emacs_time.  All uses changed.
(current_timespec): Rename from current_emacs_time.  All uses changed.
(add_emacs_time): Remove.  All uses changed to timespec_add.
(sub_emacs_time): Remove.  All uses change dot timespec_sub.
(EMACS_TIME_SIGN): Remove.  All uses changed to timespec_sign.
(timespec_valid_p): Rename from EMACS_TIME_VALID_P.  All uses changed.
(EMACS_TIME_FROM_DOUBLE): Remove.  All uses changed to dtotimespec.
(EMACS_TIME_TO_DOUBLE): Remove.  All uses changed to timespectod.
(current_timespec): Rename from current_emacs_time.  All uses changed.
(EMACS_TIME_EQ, EMACS_TIME_LT, EMACS_TIME_LE): Remove.  All uses
changed to timespec_cmp.
* src/xgselect.c: Include <timespec.h>, since our .h files don't.
"
2c3160c54e5e58ebd9cf3b2c499a55d43b0271cc,kfowler/emacs,"Initial support for unified DVCS pull and merge.

* lisp/vc/vc-bzr.el (vc-bzr-admin-branchconf, vc-bzr-history): New vars.
(vc-bzr--branch-conf, vc-bzr-async-command, vc-bzr-pull)
(vc-bzr-merge-branch): New functions, implementing merge-branch
and pull operations.

* lisp/vc/vc.el (vc-merge): Use vc-BACKEND-merge-branch if available.
Accept optional prefix arg meaning to prompt for a command.
(vc-update): Use vc-BACKEND-pull if available.  Accept optional
prefix arg meaning to prompt for a command.
(vc-pull): Alias for vc-update.
"
6abdaa4a9fff89473f0c577057680198613993b8,kfowler/emacs,"* xselect.c (x_get_local_selection, x_handle_property_notify):

Remove vars that are set but not used.

(make_invisible_cursor): Initialize a possibly-uninitialized variable.
"
b1ae92bae4c387155db45c297b7f78e4467d8ac4,kfowler/emacs,"Merge changes made in Gnus trunk.

nnimap.el (nnimap-update-info): When UIDNEXT is present, use that for the active.
Split -request-update-info into -request-marks and -update-info.
nnimap.el (nnimap-transform-headers): Don't bug out on invalid BODYSTRUCTUREs.
nnimap.el (nnimap-transform-headers): Unfold quoted {42} headers.
nnir.el (nnir-run-imap): Fix up nnir to work with the new nnimap.
nnimap.el (nnimap-stream): Add starttls support.
gnus-int.el (gnus-request-update-info): Protect against backends not having the function.
gnus-html.el (gnus-html-rescale-image): Revert change that uses window-inside-pixel-edges.
gnus-start.el (gnus-fixup-nnimap-unread-after-getting-new-news): Remove.
nnimap.el (nnimap-retrieve-headers): Return 'headers.
gnus-sum.el (gnus-summary-local-variables): Prepare for list/range makeover.
gnus-start.el: Add new variable gnus-use-backend-marks, and start reading marks again.
"
105216ed03e65f32a7477ba3d27ab05c94bd3449,kfowler/emacs,"Move low-level window width/height functions to C, and high-level functions to Lisp.

* lisp/window.el (window-total-height, window-total-width): Doc fix.
(window-body-size): Move from C.
(window-body-height, window-body-width): Move to C.

* src/window.c (Fwindow_left_column, Fwindow_top_line): Doc fix.
(Fwindow_body_height, Fwindow_body_width): Move from Lisp.  Signal
an error if not a live window.
(Fwindow_total_width, Fwindow_total_height): Move from Lisp.
(Fwindow_total_size, Fwindow_body_size): Move to Lisp.
"
f9b697ddaa60742d4a60b1fa4ab37efc2c3cb1e1,kfowler/emacs,"Stop keeping (all but one) generated cedet grammar files in the repository

* configure.ac (SUBDIR_MAKEFILES, AC_CONFIG_FILES):
Add admin/grammars Makefile.

* Makefile.in (distclean, bootstrap-clean, maintainer-clean):
Also clean admin/grammars, if present.

* admin/grammars/README: Remove.

* admin/grammars/Makefile.in: New file.

* admin/grammars/c.by, admin/grammars/java-tags.wy, admin/grammars/js.wy:
* admin/grammars/python.wy: Update declarations to match generated outputs.

* lisp/Makefile.in (semantic): New.
(compile-main): Depend on semantic.

* lisp/cedet/semantic/bovine/grammar.el (bovine--make-parser-1):
New function, split from bovine-make-parsers.
(bovine-make-parsers): Use bovine--make-parser-1.
(bovine-batch-make-parser): New function.

* lisp/cedet/semantic/wisent/grammar.el (wisent--make-parser-1):
New function, split from wisent-make-parsers.
(wisent-make-parsers): Use wisent--make-parser-1.
(wisent-batch-make-parser): New function.

* lisp/cedet/semantic/db.el (semanticdb-save-all-db):
Avoid prompting in batch mode.

* lisp/cedet/semantic/grammar.el (semantic-grammar-footer-template):
Disable version-control and autoloads in the output.
(semantic-grammar-create-package):
Add option to return nil if output is up-to-date.

* lisp/cedet/semantic/bovine/c-by.el, lisp/cedet/semantic/bovine/make-by.el:
* lisp/cedet/semantic/bovine/scm-by.el, lisp/cedet/semantic/wisent/javat-wy.el:
* lisp/cedet/semantic/wisent/js-wy.el, lisp/cedet/semantic/wisent/python-wy.el:
* lisp/cedet/srecode/srt-wy.el: Remove generated files from repository.

* .bzrignore: Update for this.
"
0aa4f295f59c1e4cb3dae225a1ae82759f8953fa,kfowler/emacs,"(vc-hg-outgoing, vc-hg-incoming): Bind `vc-short-log' for the sake of `vc-hg-log-view-mode'.
"
6995e5d0e54a41851bc6ce04d1c50749f531b077,kfowler/emacs,"Doc for subword, superword modes

* doc/emacs/programs.texi (MixedCase Words): Rename node from ""Glasses"".
Move Subword mode here from ""Other C Commands"" node.
(Misc for Programs): Mention Superword mode.

* doc/emacs/emacs.texi: Update menu.

* etc/NEWS: Related markup.
"
89f01d7dbe35747b5de1f9f45dfb49353be14ac0,kfowler/emacs,"* make-dist: Distribute new build-aux files.
"
62c2e5ed3a9c991cef2594b44afc74893f6ce26b,kfowler/emacs,"* alloc.c (free_save_value): New function.
(safe_alloca_unwind): Use it.
* lisp.h (free_save_value): New prototype.
* editfns.c (save_excursion_save): Use Lisp_Misc_Save_Value.
Add comment.
(save_excursion_restore): Adjust to match saved data structure.
Use free_save_value to offload some work from GC.  Drop obsolete
#if 0 code.
"
9e059e3fde0f95b0b06ebce10f2985201e54c11c,kfowler/emacs,"Stop ns builds setting the EMACSLOADPATH environment variable
Ref bugs 4309, 6401, etc.
This is the last environment variable (ab)used by the ns port in this way.

* src/nsterm.m (ns_load_path): Rename from ns_init_paths.
Now it does not set EMACSLOADPATH, just returns the load-path string.
* src/nsterm.h: Update accordingly.

* src/lread.c [HAVE_NS]: Include nsterm.h.
(init_lread) [HAVE_NS]: Use ns_load_path.

* src/emacs.c (main) [HAVE_NS]: No longer call ns_init_paths.
"
26d4541d4c0c9a71453143c17d392291c41856ff,kfowler/emacs,"Fix minor problems found by static checking.

* buffer.c (Fdelete_all_overlays): Return nil.
* doc.c (Fsubstitute_command_keys):
* regex.c (WEAK_ALIAS):
* xdisp.c (redisplay_internal):
Move initialization down, to pacify GCC 4.7.1 -Wjump-misses-init.
"
c622b48f7894fc904cdc95edff47f2173240f0cf,kfowler/emacs,"Improve sys_siglist detection.

* configure.ac (sys_siglist): Look for its decl in <signal.h>.
Otherwise, it's not found in either Fedora 17 or Solaris 11.
* src/sysdep.c (sys_siglist, init_signals): Use _sys_siglist if it's
defined as a macro, as is done in Solaris.
(sys_siglist_entries): New macro.
(save_strsignal): Use it.
* src/syssignal.h (safe_strsignal): Now ATTRIBUTE_CONST, to pacify
GCC 4.7.2 on Fedora 17 with the fixed sys_siglist detection.
"
c0458e0b21bf507b6a9273189c58a6b97efa2db2,kfowler/emacs,"* lisp/subr.el (pop): Use `car-safe'.
* lisp/emacs-lisp/byte-opt.el (byte-optimize-form-code-walker): Remove hack
to detect unused `pop' return value.

* lisp/emacs-lisp/advice.el (defadvice): Add indent rule.

* lisp/international/mule-cmds.el: Require CL.
(find-coding-systems-for-charsets): Avoid add-to-list.
(sanitize-coding-system-list): New function, extracted from
select-safe-coding-system-interactively.
(select-safe-coding-system-interactively): Use it.
(read-input-method-name): Accept symbols for `default'.

* lisp/progmodes/python.el (python-nav-beginning-of-block): Remove unused
var `block-regexp'.
(python-nav--forward-sexp): Remove unused var `re-search-fn'.
(python-fill-string): Remove unused var `marker'.
(python-skeleton-add-menu-items): Remove unused var `items'.
"
c851e57cc2cff7ffb61ed2bf3e5ddcbefb9a7ddd,loomio/loomio,"Merge pull request #2319 from loomio/tweak/optimize-navbar-spacing-for-mobile

Tweak/optimize navbar spacing for mobile"
aadc561ba2192a2e47cb2900805792ddd9d8bee6,loomio/loomio,"Cleaning up whitespaces.
"
775ddea27586a0f4526791c881636a3a9bd0a6ec,loomio/loomio,"rename secret to hidden
"
231a1d4e015f9477c2fe0ef6b576440a086abeb6,loomio/loomio,"adds the missing sizes of (optimized) icons and set theme color to the manifest.json (#4379)

* adds the missing sizes of (optimized) icons and set theme color

* uses AppConfig.theme expanded references for theme icons and color

* optimizes email images, saving space on all mail servers while we‘re at it
"
736fdcbcc45f0f169b84374c6c1b34508699c68a,loomio/loomio,"Improve members list and memberships index
"
7ec72d6402f16fec3094cabdd34336f5ee97a5dd,loomio/loomio,"Add to group (#4099)

* Jiggering share form; add help bubbles

* Maybe call em guests?

* WIP

* group_id= refactor

* Fix failing spec

* wark

* Add class to fix protractor

* Move group select to edit form

* Fix group id syncing

* Fix failing spec
"
14f9e0515e6f3f56ce691df7e12626af7b040f48,loomio/loomio,"Merge pull request #618 from loomio/improve-performance

Improve performance"
21daf3ec70c7c68c3607b6916340dbea467f1dad,loomio/loomio,"Squashed commit of the following:

commit 11a7501876f9676c2f78270b02ad780a2e9aa104
Author: Robert Guthrie <rob@guthr.ie>
Date:   Wed Feb 25 13:23:24 2015 +1300

    add salient items count

commit 08d8b133e7b93d3226dd9c91c286b86326181875
Author: Robert Guthrie <rob@guthr.ie>
Date:   Wed Feb 25 09:15:05 2015 +1300

    Squashed commit of the following:

    commit 3f36ffc48dfeadb746de929c1a42ba1e6eea0be7
    Author: Robert Guthrie <rob@guthr.ie>
    Date:   Wed Feb 25 08:41:07 2015 +1300

        fix specs

    commit eaf96af782ecf5cf226f5507c84e648cc3ef3679
    Author: Robert Guthrie <rob@guthr.ie>
    Date:   Tue Feb 24 20:21:46 2015 +1300

        small change of course.. consider some items 'salient', these will affect the last_activity_at value

    commit 82d5da2a3b001488cfe0b88711879ccd861d9fd1
    Author: Robert Guthrie <rob@guthr.ie>
    Date:   Tue Feb 24 16:12:25 2015 +1300

        Squashed commit of the following:

        commit f4dac34443ca5739f871653fb8701826c6c7c524
        Author: Robert Guthrie <rob@guthr.ie>
        Date:   Tue Feb 24 16:08:46 2015 +1300

            ok\?

        commit 09164695ad7891c1542bd8928566bc4b0d3f2fec
        Author: Robert Guthrie <rob@guthr.ie>
        Date:   Tue Feb 24 12:34:46 2015 +1300

             remove unused spec

        commit 0119a98db55d9f86a67e1da6c5569957020cddce
        Merge: 3eef4af 3b1d8cf
        Author: Robert Guthrie <rob@guthr.ie>
        Date:   Tue Feb 24 11:47:24 2015 +1300

            Merge branch 'master' into item-indicator

            Conflicts:
            	app/controllers/api/discussions_controller.rb

        commit 3eef4af1a930afe7df8fc3f4ee9843b088cd3335
        Author: Robert Guthrie <rob@guthr.ie>
        Date:   Tue Feb 24 11:41:11 2015 +1300

            Squashed commit of the following:

            commit 17b74d154c12840eb682ef97c55057b8253db08a
            Author: Robert Guthrie <rob@guthr.ie>
            Date:   Tue Feb 24 11:33:29 2015 +1300

                paired with james to get a goooood result

            commit bd5c4ca6122f57452adf62c7567f1f6f218446b0
            Author: Robert Guthrie <rob@guthr.ie>
            Date:   Tue Feb 24 08:54:09 2015 +1300

                return soon

            commit 1862335562b9f9a0bc797efeb9483a37a5dbc28a
            Merge: a8f2284 9cc7bae
            Author: Robert Guthrie <rob@guthr.ie>
            Date:   Mon Feb 23 22:30:45 2015 +1300

                yeh whatever

            commit a8f22840325228545d3a9ccb55ee6afe8b62deb3
            Author: Robert Guthrie <rob@guthr.ie>
            Date:   Fri Feb 20 12:06:14 2015 +1300

                return of the blabla

            commit e3d467925bd06cf753a2c3aa69ee1815415e5f10
            Author: Robert Guthrie <rob@guthr.ie>
            Date:   Fri Feb 20 07:52:33 2015 +1300

                nicer

            commit 14c2f3cee61b6ea5822fecc9fa5a022eb5a68d96
            Merge: 45963b5 2456d1f
            Author: Robert Guthrie <rob@guthr.ie>
            Date:   Thu Feb 19 15:23:26 2015 +1300

                Merge branch 'master' into item-indicator

            commit 45963b53c8027b8754c4f95ac029c635f5b51560
            Author: Robert Guthrie <rob@guthr.ie>
            Date:   Wed Feb 18 17:56:27 2015 +1300

                nice improvements after gdpelican reviewed the code

            commit b8c7390b057008b8dfb6ebff3f94c7252f258aa4
            Author: Robert Guthrie <rob@guthr.ie>
            Date:   Wed Feb 18 11:50:49 2015 +1300

                fix scope for admin analytics

            commit 8a4d9343cc7c1a09fea3df104ca4b1b1c90a64d5
            Author: Robert Guthrie <rob@guthr.ie>
            Date:   Tue Feb 17 17:42:32 2015 +1300

                cherry pickin
"
0fee0e3214b6db70bec6da52690308f6af668792,loomio/loomio,"rename stuff in development controllers
"
d86cc09fc74d49d94278e418a4e56c6bc7598518,loomio/loomio,"Group handle (#4523)

* support host/group_handle urls

* missing schema

* fix bug where wrong groups get loaded

* minor fix

* rename subdomain to handle

* huh

* fix thing

* update selenium
"
a1592f0a3b3967a91ffc7cae56109ce397642576,loomio/loomio,"Improve invitations and implement group wizard
"
ade5bdc5ad0cd8f262c20781b50074969490c8ee,loomio/loomio,"refactor icons into main.css
"
7d27e5344f887df349a563d3e7b3599d8e6073e0,loomio/loomio,"Merge branch 'feature/delete-for-admin' of https://github.com/tixpaul/loomio into tixpaul-feature/delete-for-admin

* 'feature/delete-for-admin' of https://github.com/tixpaul/loomio:
  Removed stubs from groups_controller_spec
  Rewrite archive specs.
  Strip whitespace.
  Basic archive functionality, RSpec tests failing
"
ac90b87ee7236e80e5585d386a5e6f8cb1055cd2,loomio/loomio,"Merge pull request #227 from enspiral/refactor/permissions

Refactor/permissions"
e8bb8b79b749f3ce6e122e4ebb1b9eef84637683,luspi/photoqt,"[Clipboard] Remove separate file/folder, include in getanddostuff > external
"
4e118e8231a46070cf21a4e623cbaf5dff109ad7,moio/sumaform,"Rename -stable versions to -released for clarity
"
8f6224802db26744bce3a2b3ad95403919d6f9ef,moio/sumaform,"Bugfix: make sure SUMa tools repos are always refreshed
"
a9b528a86c3042918d34c13b1f8aebf1cde6dc74,moio/sumaform,"client: split auto_register off for_development_only
"
a466c7226276c4822ef34f27d449cbcf17387c3e,mopsalarm/Pr0,"Refactored PostFragment and added a activeState observable. Also fixed first two Bubbles
"
d160fb2c6d84b0e3128335b839e727d51e8e1c6b,mopsalarm/Pr0,"Simplified layouting for views and previews.
"
36271e74466cd307ebe13ef30fdb275c395d7012,napatech/dpdk,"net/mlx5: update prerequisites for upcoming enhancements

The latest version of Mellanox OFED exposes hardware definitions necessary
to implement data path operation bypassing Verbs. Update the minimum
version requirement to MLNX_OFED >= 3.3 and clean up compatibility checks
for previous releases.

Signed-off-by: Nelio Laranjeiro <2f8dd9032d5b85ca4b53dec8ce664eb6998836be@6wind.com>
Signed-off-by: Adrien Mazarguil <9d39ea493ca46c560334f650ac5d4b5ffbcb5cf0@6wind.com>
"
e82ca1a75edaf4bc5836f61f9c03af14b95a5194,napatech/dpdk,"mem: improve preallocation on 32-bit

Previously, if we couldn't preallocate VA space on 32-bit for
one page size, we simply bailed out, even though we could've
tried allocating VA space with other page sizes.

For example, if user had both 1G and 2M pages enabled, and
has asked DPDK to allocate memory on both sockets, DPDK
would've tried to allocate VA space for 1x1G page on both
sockets, failed and never tried again, even though it
could've allocated the same 1G of VA space for 512x2M pages.

Fix this by retrying with different page sizes if VA space
reservation failed.

Signed-off-by: Anatoly Burakov <814e00d8f6e4e81b7ccc7e3e5a0bfec0078f0203@intel.com>
Tested-by: Jananee Parthasarathy <aaf28a6786ad347b0bfa1431c523d5b277ca91dd@intel.com>
"
dd2c630a5f8e61b9cf654a253ba30cc2cd80b5ff,napatech/dpdk,"drivers/net: remove unnecessary macro for unused variables

remove __rte_unused instances that are not required.

Signed-off-by: Ferruh Yigit <ba8734c3c506d2e3557bd4ac8fdaccd25bdb9aa7@intel.com>
Acked-by: Allain Legacy <cf9f8e06ab4540486643794deada051d3a16b292@windriver.com>
Acked-by: Wenzhuo Lu <58cb9036bdff9a5412edc3b9f70e105ccf59954f@intel.com>
"
7a881bc7e6fe7c153b6fe00770b8b00f671ff19a,napatech/dpdk,"app/testpmd: remove duplicate includes

Signed-off-by: Stephen Hemminger <06fa905d7f2aaced6dc72e9511c71a2a51e8aead@networkplumber.org>
"
491770fafcfb1e87112214882f5fd91f1e9c7448,napatech/dpdk,"net/mlx5: split memory registration function

Except for the first time when memory registration occurs, the lkey is
always cached. Since memory registration is slow and performs system calls,
performance can be improved by moving that code to its own function outside
of the data path so only the lookup code is left in the original inlined
function.

Signed-off-by: Nelio Laranjeiro <2f8dd9032d5b85ca4b53dec8ce664eb6998836be@6wind.com>
Signed-off-by: Adrien Mazarguil <9d39ea493ca46c560334f650ac5d4b5ffbcb5cf0@6wind.com>
"
dcfb42b9302d70db68f278ad17a2560e70af6442,ndlib/usurper,"Merge pull request #93 from ndlib/layout-updates

Bookmark icons and menu display cleanup. Also fixed some search appli…"
6300c0fc9efd7cee6c7d1a61028f180e30160506,ndlib/usurper,"Layout cleanup and error pages.
"
8249605e1a76066e0e480edbaa22756e3821cf2c,ndlib/usurper,"Merge pull request #40 from ndlib/test-moving-hours-to-action

Hours Tests"
9a56e9b7d2b49b5083588dad6274bf7e118a527c,openfl/openfl,"Cleanup
"
a720c0e929901bcb16f1b50d6b1edfdfa7cd43dc,opesci/devito,"Inc(lhs, lhs + rhs) -> Inc(lhs, rhs)
"
f19fbf0e6a8decd66164e461e0ad1029864df256,opesci/devito,"Merge pull request #253 from opesci/consolidation

Refactoring"
9ddeb485ad1b83143a97d8311814e556edcbe670,opesci/devito,"Function: separate dynamic derivative initialization for readability
"
1ba4a3d4b09ede6599cb1972b36ae859d4854e60,opnsense/core,"cleanup configd commands (interfaces)
"
21be9faf45033fbe58604a922c1ed805c924dada,opnsense/core,"replace csrf with phalcon's implementation

PR: https://github.com/opnsense/core/issues/918
"
a35b40a4a76d7e149b35c389138ec1194e16195f,opnsense/core,"src: remove unused $only_opt
"
fdeff9d2661635437873d3d0a8409c65e0b2efaf,opnsense/core,"inc: replace more legacy PHP module foo
"
45f15fbb5c48b08ef81df6c6b4755759251d77c7,opnsense/core,"src: scrub spurious prefix from copyright header

We do not embed file names into the header, because files get
deleted and renamed every now and then.  git-log is a good way
to read the full history.
"
bc13908bae876c2f87e8f32c93213c2e35832208,phoenixz/base,"Fixed crash on obsolete functions str_encrypt() and str_decrypt(), Fixed PHP in tr() issue in blogs_validate_post(), deploy now takes multiple languages in mind with excluding paths, base.js now uses cdnprefix, user_get_key() now added SEED into hash as well, fixed error_messages issue in ()
"
fdd16d75723b6d325e6eafc357cec00795d61b3b,phoenixz/base,"Redid user management, now using roles to quickly and easily assing rights, cleaned database structure, replaced ""added"" columns with ""created"", removed user_insert() since it does just user_signup(), simplified user_signup() which now only takes the most essential columns, the rest can be done by a user implemented SQL update keeping the users table flexible. Added translation markers for various exception messages, Fixed redirect() missing HTTP codes, now defaults to 301. The redirect URL for user_or_redirect() and rights_or_redirect() can now be configured. replaced has_right() and right_or_redirect() for has_rights() and rights_or_redirect() which both can validate multiple rights. Added html_form() which adds a hidden ""dosubmit"" which can always be used to check if a submit has taken place or not. Added html_hidden() which adds a hidden input tag with the specied key from the specified source array, defaults to id. Moved current_domain() to http library. Fixed command line signin. $_CONFIG[cookie][domain] check is now only done at the beginning of each session, improving startup speed a little. Applied some more bug fixes
"
1b2001af6fe6a085265757567a7dd6b27f04df0d,primer/primer,"Renaming ava script to test-docs
"
737c1cca10368347edd1a5605a6e7869ab308e12,pubpub/pubpub,"Removing lots of unused components. About to implement atom/links model on the backend
"
8f72452ec70e22fc5ac163ec61bb1754af591c5d,pubpub/pubpub,"Making p-tags into divs with a classname. Some other plugin and markdown cleanup
"
6cc4931dba711c3eba4a79be6085e823ecdcd85a,pubpub/pubpub,"Update editor. Improve discussionInput behavior
"
d2d17596012122171c826cc6d8c91414fd2f54fa,pyfa-org/Pyfa,"Reworked config.py (better variable names autodetection)
"
d6199a58c2bf9982a839746f5aee82485a8e7728,pyfa-org/Pyfa,"Separate projected fits from list of affectors. Also, show when affected module is projected. Still need to clean up affector tree stuff
"
e41749fa137178a67e24670ff696aea437c3a4bd,pyfa-org/Pyfa,"Renamed SBItem class to SFBrowserItem; moved SFBrowserItem + support classes to sfBrowserItem.py, this class will also be used in fleet browser
"
02cced877def47f65fa52c4d3d8eca33e824f694,rakudo/rakudo,"rename $*ST to $*W. No functional changes
"
5e11b9d71b01aaf4784d62c428d393a04b646d0d,rakudo/rakudo,"Use .contents instead of .content for Pod stuff

In conformance with S26
"
34626e3e6d8476305d305fc602ff6494e6e35817,rakudo/rakudo,"Remove | from (|) sig in protos where possible

If all candidates take no parameters, there is no point in the proto
accommodating any parameters.  This appears to make each of these
methods about 4% faster.
"
bda5999657aa7205aff741c16b259e7fb5011130,rakudo/rakudo,"use new node bitflags instead of bool annotations
"
aa23a91fb2c2ace4c8a52e3f569534d120426108,rakudo/rakudo,"Optimize a bit for empty (Set|Bag|Mix)Hashes
"
b6a236b92d7816ea3fbf53654b3a186c3f05bac3,rakudo/rakudo,"Optimize more cases of private method calls

This resolves some more private methods at compile time, meaning that
they do not need to be looked up and go through dispatch:<!> at run
time.
"
e606bece6801771dccf87e9f6cd045f0f41c7c75,rakudo/rakudo,"Toss dead code.
"
fd29b24939bcb565a88292a5456483c3393d7cea,rakudo/rakudo,"Make grep a frontend of where

Inspired by https://gist.github.com/0racle/ea0523759e2da15758d4 .

Remembering my first exposure to Perl and Unix, I never understood
what ""grep"" meant: ""find"" was always more natural to me, but of course
that meant something else in the Unix world already.

Since we already use ""where"" and not ""grep"" for subtypes, it only
seems natural to use ""where"" instead of ""grep"".

This patch basically renames all ""grep"" to ""where"", and creates proto
frontends for ""grep"" that pass on directly to ""where"".  So, rather
than making ""where"" a synonym for ""grep"", it is actually now the
other way around.  On towards a less Unix-centric future!  :-)
"
ca65997219c535c5853c781ea66332d82319c16c,rakudo/rakudo,"Re-arrange things to try and fix/simplify build. Also should get some very, very minor performance win.
"
c3c849ed959a0ba7dd47052f298af07e0c2c5302,rakudo/rakudo,"Use a(--> Foo) {} instead of a() { Foo } where possible

Because it is about 20% faster.  No sure whether this will cause
any noticeable speedups, but every little bit helps.  And I think
it actually reads better.  And should provide some better optimization
options.
"
2aa95b9fd6e7246607f8b92a96409e5021cb5ecf,rakudo/rakudo,"Refactor <dotty> into <postfixish> instead of <postfix>.
"
e9b55e5d83b1c16d1aaabdeadb1de96e4668db00,rakudo/rakudo,"Merge pull request #1018 from MasterDuke17/make_Parameters_named_names_and_type_captures_native_str_lists

Make Parameter.[named_names, type_captures] list_s"
dacf5f8c0e871e994a29c087f9b17ed1235a8957,rakudo/rakudo,"Implement trailing docs

It's pretty rudimentary at the moment, but it's a start:

  - Uses strings instead of objects
  - Only deals with package declarations
  - Doesn't deal with trailing blocks
"
c80f75d671833e6fddc80a5d2a3185985edd015f,rakudo/rakudo,"Cleanup of `is rw` usage on subs/methods.

Most of them wanted to be ""is raw"".
Some didn't want anything at all.
In some places ""rw"" stayed.
Commit poem! Oh, LOL! Well played.
"
d075c837393adf1ae09e1a143535d4c6d27ffa4e,rakudo/rakudo,"Simplify Reifier.is-lazy
"
e1b8b1292eb5345c053599bd80bac52c8db7a5d4,rakudo/rakudo,"smally cleanups for ""lazy""

* do not evaluate the thunk when LazyScalar is being assigned to
* update ChangeLog
* run tests
"
f59b9107d6acd55a2f7ac09207622a53bfe4eacc,rakudo/rakudo,"Bring back optimization of for $range loops

Only optimize for Range to while when looping in sink context.
Only optimize unlabled for loops. Otherwise we miss the control exception
handlers.
"
8be9e95d20db5c4c7fac31a726b13de0d4715268,restic/restic,"Rename package 'server' to 'repo'
"
36a62cf77d5a0231c5db3d2e0e89d63e0031b53f,restic/restic,"Extract chunker
"
6732938e7ef91a4c10524a87730c2f74e29ba503,restic/restic,"Merge branch 'refactor-repository'
"
b64b095827d9ac34f25ba983c76d65e822bd1549,rivine/rivine,"consensus set database cleanup
"
2285c8032adbe8ab3129dc0148e28a29edb4deea,rivine/rivine,"Merge pull request #699 from NebulousLabs/filecontractsDB

Move File Contracts map to disk"
15ddb6ad21e3eb873691c89364dfbb549ce85841,rivine/rivine,"Merge pull request #90 from NebulousLabs/hosting

Hosting + Cleanup"
deaa18f20119fc8d5b9e962094bb4de42e98dcbe,rivine/rivine,"rename revertToNode to revertToBlock
"
1b4673dd01791900d36147098a221d4877e1b414,rivine/rivine,"minor reorganization
"
48eca2f4281863b3fa8bb8582c9c3120e9c709e5,sapcc/elektra,"Merge pull request #279 from monsoon/swift/delete-operations

add ""Delete"" action for objects/folders and optimize container emptying"
142278cff12e6e996ce13353e0a0a91333ae182b,sapcc/elektra,"create own service user instead of using the own from auth gem
"
b1e4c9e423e04ddafd0ea1b2e63ff6422e582a6a,sapcc/elektra,"rework prefilter
"
aa2187611ea7cdec4ea89b78b35299ce213a90a8,sapcc/elektra,"cleanup
"
2732fe449fa87e9695b7fdf5e355e99a12571648,sapcc/elektra,"rename sync_projects to sync_domain
"
1e5149a7a3d94c0b65f387099003efe7b7d7b163,sapcc/elektra,"Merge pull request #26 from monsoon/rename_authenticated_user

Rename authenticated user"
b7fa1a1b08e52a857ca2648a800c430e1b72ed5f,sendgrid/docs,"Move dev callout into component. Rename to footer callout.
"
ee89436e23da534c3797b30dc8459e37f4584cb8,sendgrid/docs,"Merge pull request #3776 from Whatthefoxsays/jar-jar-binks

Cleaning up links and markdown"
a5f9f3d0d7aa7cca1de5143b379c63c046e20ff0,sendgrid/docs,"extract build
"
c8ba303eecdfaa5e5bc54ad4b255a183cacbc610,sendgrid/docs,"Merge pull request #4041 from sendgrid/develop

Merging Develop into Master - 10.5.2018 Hacktoberfest!, Easter egg, cleanup from switching to Develop"
74ec283f07e8d17b9563a3f94560a13ddd96b468,sendgrid/docs,"add cleaned up customer subuser and reseller api pages
"
3044d9cc77a9a266b73e7b36542e89b4bb39deb0,sendgrid/docs,"Merge pull request #1163 from sendgrid/develop

Cleanup 👏🏽"
186eb4de473549fd22e206c2bb1295145c09c9ec,strapi/strapi,"Parse environment variables on build configuration

Move existing code to a shared library and invoke it on the build
process to parse environment variables on configuration files.

Looking for a consistent behavior.

close #1590
"
489aefba06458184563b2b93e6153e6da63c3a0f,strapi/strapi,"Rename role registered to authenticated
"
34eb67afca6b28791195de90b083a2e561a18c65,strapi/strapi,"Improve UX and fix design
"
232a0e31eeb2fec1430d95cd9c37b5ab194f5f01,tripal/tripal,"Fixed bugs form major rewrite of TripalField Class
"
3d561c0a46b5e51f7657cf65bbea15cf1a7c0d7c,tripal/tripal,"Removed old views handlers that are no longer needed thanks to the new system where all chado tables are integrated
"
ab5028f6a97fd591ab4101ff8fa2f81533d1bab7,Antergos/Cnchi,"Moved ufw code outside process.py into a new file.
"
f812229b7bc3292a0ab43bfc3afd2f347696aed6,Antergos/Cnchi,"Remove unused code. Alongside needs our attention...
"
4071fafd63e037fd07474461659341f88419e5f4,Antergos/Cnchi,"Split mkinitcpio code in several functions
"
880ef7d317b160ab6a6d6620dd456a83615f7ec4,Antergos/Cnchi,"Delete unused files
"
71f6f5db69375b9727bebf1d9cccfd8f670089b0,CESNET/libyang,"xpath NEW predicate eval

New set type empty, some refactoring
and bugfixes.
"
3b85572398b0d6504f9673b01ec3301eecfa35b5,CESNET/libyang,"xml CHANGE make getutf8() internally public
"
6ff885dcbc3c370ee1fa08072ee2018817f3d05c,CESNET/libyang,"schema CHANGE remove internal support of the NACM

by adding generic support for extensions, NACM will be supported as
a generic extension instead of a kind of special, internally implemented
extension.

This change should clear the code and mainly unify the approach to handle
YANg extensions.
"
24d982f80bb4861eaf829caaf7e417b969da74ae,CESNET/libyang,"parser MAINTENANCE code refactoring
"
def5002fbb53f4473206959a19aa71be9c3c4e7a,CESNET/libyang,"doc CHANGE add the missing documentation

- add mainpage
- add various how to pages
- simplify function distribution into groups
"
4814fb09575268aa975b46b4e28d52b66159e18f,CESNET/libyang,"libyang CHANGE use compiler thread-local variables

Instead of pthread thread-local mechanism. It should
be more effective and thread-safe, but perhaps some
portability problems may appear, hope not.
"
a1c33bf6fb7d4d1253c1269ad9ee12b1c1982dbd,CESNET/libyang,"data tree CHANGE improve lyd_insert(), lyd_insert_after() and lyd_insert_before()

Make the functions more smarter to be able to replace the implicit default
nodes instead of just adding the new nodes next to the previously automaticaly
created implicit default nodes.

lyd_insert() also supports smart inserting of a key into a list - it is able to
put the key into a correct position.
"
f396653970f26ad10c40cbd1c25d85311de5a5a5,CESNET/libyang,"tree printer CHANGE space as a list's keys separator

be compatible with pyang and use spaces instead of commas to separate
keys of a list
"
61cd556adcfda4e1ab9f414198cf9178498aed56,CESNET/libyang,"tests CHANGE make tests enabled only in Debug build mode

tests requires additional dependency (cmocka) so disable them
in the Release build mode to simplify building package in this case.
Debug build mode has tests enabled so it requires cmocka to be installed.
"
51799af5f72bf1fb43ea789a007b50b9e52bc6fa,Chatie/wechaty,"Use NPM Module `wechaty-puppet` instead of local files (#1370)
"
34e039749e50b411ab692dd21030bea45f1d6b75,Chatie/wechaty,"helper function: waitData to retry a promise until get right
"
888a267b956b3799ae67dfa8d36a315915558260,ISO-tech/sw-d8,"[SW #1084]: Using real purchased webfonts instead of myfonts.com trial script.
"
3a882b602070ee1d17214b67f25fa1fc101f59ff,IntelLabs/hpat,"refactor nunique to use ShuffleMeta
"
56c221f57a3475a45726f75e42ceba381f7fdd46,IntelLabs/hpat,"refactor reduce to use in dot()
"
5c4c6236eaf2fdde4c1e18f2fcc48c04f4d8dfac,IntelLabs/hpat,"CSV Support (#41)

* first draft of C++ code for reading CSV

* prepend row number in test output

* gen simple csv data file

* first csv test

* handle pd.read_csv in hiframes

* CsvReader IR node

* more CSV reader node handling

* fix csv output array type

* csv reader lowering handling

* using carray of MemInfo*

* using meminfo, first sketch for lowering

* add numpy include dir

* fix _csv_read intrinsic (return codegen)

* fix return type of _csv_read

* fix csv node file_name

* fix const tuple to str cast

* update numba to c type map in CSV

* fix input types of _csv_read intrinsic signature (const not allowed)

* fix _csv_read codegen syntax errors

* fix csv reader llvm types

* fix type of csv dtypes

* create tuple of arrays to return in _csv_read codegen

* use hpat CTypes in csv read

* some experiments in comments, experimental breakpoint

* Revert ""some experiments in comments, experimental breakpoint""

This reverts commit 7823e9106b63040e84835b70897490042b617da0.

* using HPAT types, printing table after read

* removing dead/unneeded code

* proper checks in importing meminfo func

* fixes in meminfo func calls (needs Numba #3272)

* fixing distributed reading and compiler warnings

* fix single column case in CSV reader backend

* fixing skipping incomplete lines

* lower level stuff for datetime support

* parse CSV date test

* refactor read_csv dtype arg parsing, support str

* read_csv frontend support parse_dates

* starting with going through pandas, removed warnings

* moved extern decl to header

* fixing decls

* trying to convert df to tuple, incomplete

* fix df unbox signature

* chunking and lazy file-IO for file-like IO object

* streamlining chunk boundary exchange

* provide wrappers for getting chunk reader from file/string; removing old csv_read functionality from C

* reducing warnings with GNU compilers

* using HPAT's formmula for 1D_Blocking for csv chunking

* updated comments/doc

* WIP: try generating objmode function, hits globals bug

* fix csv reader pandas wrapper generation

* support datetime64 parsing in csv reader pandas wrapper

* support strings in csv reader pandas wrapper

* avoid conflicts: remove datetime in utils, add regex back in setup

* fix CSV reduce op

* _csv.cpp pass pointer to allreduce

* CSV reader: use is_parallel flag

* csv dist analysis fix

* csv parallel test

* csv reader fix dist array size/start/counts

* fixing csv chunking

* set read_csv output type to series instead of array

* csv remove dead support

* fix for CSV parallel crash

* fixing chunking of streams

* move csv stuff to _csv.cpp

* cleanup leftover print, etc

* fix csv dt64 type to series
"
53cc67c0b288a3f656395816ffc5b33158847915,MesserLab/SLiM,"Optimize for loops, increment/decrement, symboltable, ranges
"
b01bdc086ac6040db0d168fe114a9b1f8371671b,MesserLab/SLiM,"Improve numerical accuracy for overall recombination rate
"
be0a3fe22fe7998b6d717e3f8b87353046397161,Microsoft/PTVS,"Deprecates SourceLocation.Index property in most cases (still used for token locations)
Fixes evaluation of import names.
"
d59f8c8fb043ca73d6c8c0bf5454bebafbd0d0f8,Microsoft/PTVS,"Merge pull request #3530 from zooba/analysis-refactor-3

Analysis refactor part 3"
9f76a3c6682c301c42305cc17988739bae4dfa87,Microsoft/PTVS,"fix #597, extract method does not appear on the editor context menu
"
7b5270c61c2768bed60a4ff15adc152dd2a4399d,Microsoft/PTVS,"- Fix #3761: Parser with Verbatim=false throws assert for function definition
- Cache field value in Tokenizer.Peek
- Optimize IsIdentifierChar for Latin1 case
"
e1ebcf228be80bd384f33e2c1c73ae36b07b28f1,Microsoft/PTVS,"Restructure code
"
9b9997a29bf5acfbde191b7d7584b38a71d01980,Microsoft/PTVS,"Fixes #1544 VS 15 Preview 4 test adapter not discovering tests
Splits the test executor and discoverer into a separate assembly with fewer dependencies. This should allow it to load without any assemblies from VS.
"
7bbbbe5e07637d141dc0ebf4f4a2791711e8a8bf,Microsoft/PTVS,"Merge pull request #3138 from zooba/ast-imports

Improves module scraping"
1f01054b4dcad1a112cfc7cfe3581ee068c4b93f,StackStorm/st2,"Merge pull request #1599 from StackStorm/pass_common_st2_env_variables_to_actions

Make common st2 environment variables available to the actions"
06915928557cb34512a1c48b0e2146e0b6e57efe,StackStorm/st2,"Simplified timer sensor
"
1be1885809529b057346be1e30d4ea988fdb7706,StackStorm/st2,"Reimplement Action and Execution endpoints
"
f5946e34c9c023c81e8733e06c69ed872f832989,StackStorm/st2,"Tweak the match_and_execute endpoint to match multiple times

Reimplements hubot-stackstorm PR #148 in StackStorm itself.

For more information see:

https://github.com/StackStorm/hubot-stackstorm/pull/148
"
0f379a232384df97a19330e0683dca6ea11b253a,StackStorm/st2,"Update oslo.config imports, get rid of the namespaces import and use oslo_config
instead.
"
318e7b9108492c343ccd57ef93f02c670a356a13,StackStorm/st2,"Reduce code duplication and copy and paste by moving common setup and teardown
code in a common ""service_setup"" module and update affected code.
"
8332e69209cfa337567999c2aab23823e7b44822,StackStorm/st2,"Move action db models to individual files
"
a1bebfedcb9a447704c8b3643675589ebaa66540,Tendrl/commons,"Merge pull request #822 from GowthamShanmugam/replace_cluster_id

Renamed cluster_id attribute from message object to integration_id"
6ebaa903e4bdd33320ceae897d1bf1fb06b27e62,TieDyedDevil/K,"Cleanup.
"
cfd1b7b813ccdac76c623243a03633b2059d9a0e,Ultimaker/Cura,"Fix AutoSave conflicts with BackupManager

 - Move AutoSave out of the plugins. It's a built-in module now.
 - Add enable/disable saving data on CuraApplication.
 - Avoid saving data in backup restore
"
f8672ecbc63f30905a642933bfb8ec8f5308c2d8,Ultimaker/Cura,"CURA-5035 Improved details pages
"
43dff1296cfa332bba699f5adcc1ae8ae3e6934c,Ultimaker/Cura,"Move retraction distance to material settings

I've discussed this with Tom, Kristel, Diana, Marvin and Oscar. This setting should really be dependent on material since the material influences the speed it can handle the most.

Contributes to issue CURA-346.
"
f659d01da185380268ff18fd5f0e2bf0dea7307d,Ultimaker/Cura,"Make the labels in the quality menus match those from the selected extruder.

CURA-2271 Warn for unsupported material/printcore combinations
"
fffe9b3a943afa39621f803c21273f5c6c57b101,Ultimaker/Cura,"Better naming for extruder slot

The name of the extruder stack is now the same as the name for the extruder definition. The IDs are different though!

Contributes to issues CURA-1278 and CURA-340.
"
322fe7d61f6210cd3ca2e5b4abc848c0620b46ba,Ultimaker/Cura,"CURA-5137 Rename Plugin Browser into Toolbox
"
c432d4ffbbb8cbcbf38e040a3161e6c21106ae8d,Ultimaker/Cura,"WIP: Simplify global stack and extruder stack activation and fixes
"
e38228ac246bea8b8b5e0e87f30eccac2a1a6e3c,Ultimaker/Cura,"Remove unused target_container parameter

It's not compatible with ContainerInterface anyway.

Contributes to issue CURA-5330.
"
495fc8bbd705f5145fe8312207b3f048a7dcc106,Ultimaker/Cura,"WIP: Refactor BuildPlateModel and split MultiBuildPlateModel
"
d8555fe57d32aed38e5113a9d061350b62eceff8,Ultimaker/Cura,"Merge branch 'master' of github.com:ultimaker/Cura into feature_material_editing

* 'master' of github.com:ultimaker/Cura: (38 commits)
  Fixed profile file case-sensitivity.
  Fix UMO Checkup button size
  Remove debug statement and commented-out code CURA-1385
  Show ""ready"" state when a printer is connected but jobstate is not yet set
  Added deepcopy function
  Made exception handling of slice info plugin way more robust
  Restart timer after slicing is performed when not enabled.
  Update GUID for PLA to match the GUID in the official repository
  Set default extruder index to -1 (so global is default)
  Ensure that the display matches with the backend active extruder data
  Update UM2 Extended build volume height to value published in marketing materials
  Fixed firmware upgrade for um2+
  Capitalise setting label
  CHeckup action now correctly resets every time you start it
  Remove unused name/id when importing a profile from a gcode file
  Just a little typo
  BQ Hephestos2: Heat up nozzle while leveling
  Saving g-code no longer crashes
  Removed update firmware from extensions; This is now handled by machine actions
  Changing active extruder no longer trigger re-slice
  ...
"
57b2ce4f3e382953c114966717c6585359f62680,Ultimaker/Cura,"Merge branch 'master' of github.com:ultimaker/Cura into per_object_settings

* 'master' of github.com:ultimaker/Cura: (49 commits)
  15.10 restyling of the sidebar header
  15.10 restyling of the sidebar header
  15.10 restyling of the sidebar
  split magic_mesh)surface_mode into Normal, Surface, Both
  Added preference to disable automatic scale
  Removed unused import
  Added changeLog plugin
  Added missing )
  Merging of mine and Jaimes work
  Removed font from rectangle
  JSON: git diff! removed triangles and grid top/bottom skin options (though they are available)
  Code style & switch to translation catalog
  15.10 re-alignment of the toolbar
  15.10 New Icons
  15.10 restyling of the savebutton Area
  Added message asking about sending data to server
  Added exception handling for checking overlap.
  Fixed default button for general and view page
  Fixed double ID in qml
  Removed unused import
  ...
"
f2c258c614bc1d72f89bd61e50d561f28f9fde05,WSULib/combine,"cleanup for jobs table
"
99e2deb86ff2285e22800e55259033a791d4612d,apurtell/hbase,"HBASE-15778 replace master.am and master.sm direct access with getter calls
"
fe2e720318bd02a6feaa0cd52079f6f6c50f0da9,apurtell/hbase,"HBASE-3298 Regionserver can close during a split causing double assignment

git-svn-id: 949c06ec81f1cb709fd2be51dd530a930344d7b3@1042043 13f79535-47bb-0310-9956-ffa450edef68
"
8c9087e6c55882b3408a2f2ca7d4627f95456a84,apurtell/hbase,"HBASE-18698 MapreduceDependencyClasspathTool does not include hbase-server as a dependency

Move Driver to be the main-class in hbase-mapreduce jar rather than
in the hbase-server jar.

Reference the hbase-server and shaded protobuf so they get bundled
when you do 'hbase mapredcp'.
"
3babad30e6d1953115f432532f85a143eaf431ad,apurtell/hbase,"HBASE-13030 [1.0.0 polish] Make ScanMetrics public again and align Put 'add' with Get, Delete, etc., addColumn
"
e6b4300756b7f09a31ba35cb3baf41d294ed6e14,apurtell/hbase,"HBASE-12404 Task 5 from parent: Replace internal HTable constructor use with
HConnection#getTable (0.98, 0.99)

Replaced HTable under hbase-*/src/main/java. Skipped tests. Would take
till end of time to do all and some cases are cryptic. Also skipped
some mapreduce where HTable comes through in API. Can do both of
these stragglers in another issue.
Generally, if a utility class or standalone class, tried to pass in a
Connection rather than have the utility or standalone create its own
connection on each invocation; e.g. the Quota stuff. Where not possible,
noted where invocation comes from... if test or hbck, didn't worry about
it.
Some classes are just standalone and nothing to be done to avoid
a Connection setup per invocation (this is probably how it worked
in the new HTable...days anyways). Some classes are not used:
AggregationClient, FavoredNodes... we should just purge this stuff.
Doc on what short circuit connection does (I can just use it...
I thought it was just for short circuit but no, it switches dependent
on where you are connecting).
Changed HConnection to super Interface ClusterConnection where safe (
internal usage by private classes only).
Doc cleanup in example usage so we do new mode rather than the old
fashion.
Used java7 idiom that allows you avoid writing out finally to call close
on implementations of Closeable.
Added a RegistryFactory.. moved it out from being inner class.
Added a utility createGetClosestRowOrBeforeReverseScan method to Scan
to create a Scan that can ...
Renamed getShortCircuitConnection as getConnection – users don't need
to know what implementation does (that it can short-circuit RPC).
The old name gave pause. I was frightened to use it thinking it only
for short-circuit reading – that it would not do remote too.
Squashed commit of the following:
"
961455cd9d5a09f99612eb6a0edb575b9c308b82,apurtell/hbase,"[jira] [HBASE-5074] Support checksums in HBase block cache

Author: Dhruba

Summary:
HFile is enhanced to store a checksum for each block. HDFS checksum verification
is avoided while reading data into the block cache. On a checksum verification
failure, we retry the file system read request with hdfs checksums switched on
(thanks Todd).

I have a benchmark that shows that it reduces iops on the disk by about 40%. In
this experiment, the entire memory on the regionserver is allocated to the
regionserver's jvm and the OS buffer cache size is negligible. I also measured
negligible (<5%) additional cpu usage while using hbase-level checksums.

The salient points of this patch:

1. Each hfile's trailer used to have a 4 byte version number. I enhanced this so
that these 4 bytes can be interpreted as a (major version number, minor
version). Pre-existing hfiles have a minor version of 0. The new hfile format
has a minor version of 1 (thanks Mikhail). The hfile major version remains
unchanged at 2. The reason I did not introduce a new major version number is
because the code changes needed to store/read checksums do not differ much from
existing V2 writers/readers.

2. Introduced a HFileSystem object which is a encapsulates the FileSystem
objects needed to access data from hfiles and hlogs.  HDFS FileSystem objects
already had the ability to switch off checksum verifications for reads.

3. The majority of the code changes are located in hbase.io.hfie package. The
retry of a read on an initial checksum failure occurs inside the hbase.io.hfile
package itself.  The code changes to hbase.regionserver package are minor.

4. The format of a hfileblock is the header followed by the data followed by the
checksum(s). Each 16 K (configurable) size of data has a 4 byte checksum.  The
hfileblock header has two additional fields: a 4 byte value to store the
bytesPerChecksum and a 4 byte value to store the size of the user data
(excluding the checksum data). This is well explained in the associated
javadocs.

5. I added a test to test backward compatibility. I will be writing more unit
tests that triggers checksum verification failures aggressively. I have left a
few redundant log messages in the code (just for easier debugging) and will
remove them in later stage of this patch. I will also be adding metrics on
number of checksum verification failures/success in a later version of this
diff.

6. By default, hbase-level checksums are switched on and hdfs level checksums
are switched off for hfile-reads. No changes to Hlog code path here.

Test Plan: The default setting is to switch on hbase checksums for hfile-reads,
thus all existing tests actually validate the new code pieces. I will be writing
more unit tests for triggering checksum verification failures.

Reviewers: mbautin

Reviewed By: mbautin

CC: JIRA, tedyu, mbautin, dhruba, todd, stack

Differential Revision: https://reviews.facebook.net/D1521

git-svn-id: 949c06ec81f1cb709fd2be51dd530a930344d7b3@1298641 13f79535-47bb-0310-9956-ffa450edef68
"
3339e94e8d79fc55c861a1686ce1de0adb9790a8,apurtell/hbase,"HBASE-2036 Use Configuration instead of HBaseConfiguration

git-svn-id: 25ca64b629f24bdef6d1cceac138f74b13f55e41@894934 13f79535-47bb-0310-9956-ffa450edef68
"
28c2b18d30de4ce9564e328e5fdf42188e83fb63,apurtell/hbase,"HBASE-15027 Refactor the way the CompactedHFileDischarger threads are
created (Ram)
"
2452d3861fb56c9ce7d748c32230b2df7798efc0,apurtell/hbase,"HBASE-12802 Remove unnecessary Table.flushCommits() (Solomon Duskis)
"
94ef6463b5b152ed6e334f1b774fe922b53abab3,bazurbat/jagen,"Improve generated patch stage handling
"
6e1b7aed2586d4f960d1f8b88ca0dc63153b6e04,bazurbat/jagen,"Moved around and renamed few global variables for consistency
"
074d6eb19699f167f75dc34b7616879db5239121,bazurbat/jagen,"Rename the rest p_ functions to pkg_
"
1402ac7fba9381e63b7350f6b00d8d49c34cebef,bazurbat/jagen,"Implement package-specific toolchains support

Remove target overlays, replace global jagen_target_* environment variables with pkg_build_*, cleanups. This commit is likely to break a lot of things - fixes will follow.
"
38bfec1d21a626d40a762795a6a1856594e7dbda,btccom/btcpool,"sserver: fix wrong share size; rename struct Share to ShareBase to avoiding possible issues.
"
df504d81fa7f406b1bea44ed7cd859736d777ce8,cloudmesh/book,"improve latex and chameleon sections
"
88de72d6811589b65edd7cffa3914b2659925b43,conan-io/conan,"Add flag to avoid overwriting uploaded packages (#2672)

* Added flag

* Added choices to command

* no_overwrite param with partial tests

* fix package_ref and completed tests

* removed packages option and simplified tests

* removed packages option and simplified tests

* removed package already uploaded

* removed some param restrictions

* Moved no_overwrite check to restclient

* Improved tests

* fix test

* review

* --no-overwrite without arguments defaults to all

* updated test
"
20953f9d7939dde617199f76159bfd860c25bd13,conan-io/conan,"Feature/fix py requires alias (#7)

* fix python_requires recursive alias

* context to make it cleaner

* fix tests

* unify load_class/module

* remove imports

* improved parse_conanfile
"
56e2d26d984eaf3dcaaddba79613246ddf1e10b8,conan-io/conan,"refactoring authenticate (#2652)

* refactoring authenticate

* fixed user cmd without specifying user

* updated docstring

* ongoing work

* test fails because of traces

* tests should pass

* fixed NTFS check

* str for py3

* fixed test
"
2339378c4fde4d4845ce38c657e4df778ecd4bd8,conan-io/conan,"Rename Plugins as Hooks (#3867)

* Rename Plugins as Hooks

* Migration from plugins to hooks
"
14dcc1f83cf2dfd1033a3f32305380ab2124522f,conan-io/conan,"Feature/fix cl2 (#561)

* Develop version

* more or less work with saving bat file

* fixing broken tests

* fixed ENV tests in linux

* adding defines to ENV and minor refactor

* added clang in test for OSX

* removed temp conan_env.bat file & fixed test creating it

* incremented times for DiamondTest failing with new ENV
"
a8600d95f447a95067d28b98cf111e67e7d36648,conan-io/conan,"conan alias  (#1507)

* proposal for conan-proxy-links

* conan alias command

* renamed to alias

* creating sources empty folder

* integration tests
"
a31658a9b89a466e04c691b22cfebb24ca691788,facebook/infer,"[clang] treat constexpr as const too

Summary: The frontend replaces global variables that are constant with their values as a quick hack to improve the precision of the analysis. This should apply to `constexpr` too.

Reviewed By: dulmarod

Differential Revision: D4058097

fbshipit-source-id: be4fea6
"
3e8b681135751503d6ce914db563700871f4f748,facebook/infer,"big refactoring to improve API for subtyping related operations

Reviewed By: jeremydubreil

Differential Revision: D3187979

fb-gh-sync-id: 31d19b9
fbshipit-source-id: 31d19b9
"
e90eaeab4983eabe5e703c3bbe38e98d7d2a1e48,facebook/infer,"[reporting] add logging of call stats to backend

Summary:
- During the symbolic execution stage of the backend, Infer will log detailed stats about procedure calls
- Logging is accomplished directly within symExec/Tabulation
- call_result type is moved to tabulation.ml

CallStats was a broken module that allocated a lot of useless memory. Now, Specs.CallStats and InferPrint.CallsCsv as well as the Calls report kind in InferPrint no longer exist.

Reviewed By: dulmarod

Differential Revision: D7016439

fbshipit-source-id: 40911ee
"
3ee96263a7f881c1b658ce51bda84f6b953597d6,facebook/infer,"[inferbo] Simplify and improve Itv.prune_comp

Reviewed By: skcho

Differential Revision: D10386789

fbshipit-source-id: f9c7e33ef
"
c147ab419712f8df7aaf0ff55d5211a970b5e39d,facebook/infer,"Refactor Sil.attribute and associates to PredSymb

Summary:
Move the Sil.attribute type and associated types and operations to a new
PredSymb module.

Reviewed By: cristianoc

Differential Revision: D3683834

fbshipit-source-id: d3606a8
"
42947ea9d97b6c5782c2084fe929e88b914c9093,facebook/infer,"[IR] Make template info part of Typename.t, rename Typename to Typ.Name

Reviewed By: jberdine

Differential Revision: D4722070

fbshipit-source-id: 0bf8996
"
01a83e694b2c55e240753cf1dfa5237faf4472f8,facebook/infer,"[inferbo] Improve semantics of binary and

Reviewed By: mbouaziz

Differential Revision: D12921726

fbshipit-source-id: ed6777e69
"
7e59032a427769e8003d8bf3c34d207b81f47d3d,facebook/infer,"Move analyzer type and ops from Utils to Config

Summary:
Move analyzer type and ops from Utils to Config, and simplify by
reducing interface.  There are very few uses so no need to pollute
global namespace.

Reviewed By: sblackshear

Differential Revision: D3541047

fbshipit-source-id: 2be56af
"
50c73e517b39763f101aa9db685b598cac13fcc4,facebook/infer,"[cleanup] adding Annotations.pname_has_return_annot function

Reviewed By: jberdine

Differential Revision: D4475437

fbshipit-source-id: b20979c
"
16604a9e75715060682111688796fa91be92edcb,facebook/infer,"Update fcp which exports less redundant information

Summary: @​public
We no longer rely on existence of qt_raw field.
Update facebook-clang-plugins so that this field
is not even exported. This should give us some perf wins
since qual_type is written in a lot of places

Reviewed By: @dulmarod

Differential Revision: D2489308
"
81a59515e4d72f87fc3b940efbd43d27bd0d51b4,facebook/infer,"Simplify the code to collect the list of @SuppressWarnings annotations

Summary:public
Simplifies the code to collect the `SuppressWarnings` annotations and makes the code more robust in the sense that not finding the output of the annotation processor will result in an error directly at the top-level instead of later on when trying to load the output file in the Java frontend.

Reviewed By: sblackshear

Differential Revision: D3034690

fb-gh-sync-id: 60caa0c
shipit-source-id: 60caa0c
"
0fd99e75365425aecb7e6803c3830c69a2cc98af,frappe/erpnext,"removed unnecessary imports
"
87d270a5b55056009cfa86a58e33ec56111fb311,frappe/erpnext,"refactored code for reserved qty with testcases
"
7c932003ed92ad095e2fd7a9abb794d2d8c6bb20,frappe/erpnext,"rename Profile to User frappe/frappe#470
"
c0bb453b8858c45450931a5127d74d8a295a8aef,frappe/erpnext,"[refactor] [frappe 5.0]
"
0b9954059cad96be4a06cf2b2abd999bdd1b58af,frappe/erpnext,"[cleanup] [minor] price list field rename (wip), set default supplier from item, make demo - purchase cycle (wip)
"
a7f757a3f45b0e1b530ae274cb8df83f2c789429,frappe/erpnext,"Rename fields: initial commit
"
c20c536f289fbd82f33aa26d9b3465a9e1c7d3b9,frappe/erpnext,"[fix] [wip] cleanup for collaborative pm
"
1e2f20a3da9c82ecd8b845c4a6bbb0f86d8813b4,frappe/erpnext,"[cleanup] code commonified of making sl entry
"
ef5845589d7c8b75664fc2ad5d5f6446d13a09b0,frappe/erpnext,"[cleanup] [minor] finishing styles, labels, descriptions
"
d8de921c400265d4cfef195d1e8379ba2a6e857d,frappe/erpnext,"fixed erpnext/frappe#1441 and other pos related cleanups
"
85eb840ab43d861fcd755a5da82351c55a51d96a,frappe/erpnext,"fix in rename dt patch
"
6e343e23d912617a9c30c370328808f695a94efd,frappe/erpnext,"Renamed project_name to project
"
edab76b274e6a1c9844ec2ad097f7a077fdf8ab8,frappe/erpnext,"knowledge base cleanup
"
574c7e7c6336f2ce100824d65900809a01345d12,frappe/erpnext,"item related cleanup
"
ab64e323cd941f4e27728837e85e5dc0198f6d77,frappe/erpnext,"Merge pull request #10747 from mbauskar/pos

rename Is Online field to Use POS in Offline Mode in pos settings"
c8abe5b2adc535ef770f5d7b185cb3e89a8d30cb,frappe/erpnext,"style cleanups and new builds
"
322d39f3a61a1f817b67cf4f3b13fc2d96703a0c,frappe/erpnext,"Merge branch 'model-cleanup' of github.com:frappe/erpnext into model-cleanup
"
b400fde23514ced5dcb083976eaf8bb6fde03a4c,goby-lang/goby,"Improve parser's error report mechanism.
"
b364892437ef85c9bdd1843f4982d140dc95ca4e,ioam/holoviews,"Renamed MatrixGridPlot to RasterGridPlot
"
3eb6db03da8aef11ce7e2810926176754ca79060,ioam/holoviews,"Refactored bokeh batched plot implementations
"
f22237ef78b180a815920fcb420a9c38f76218b8,ioam/holoviews,"Renamed Dimension.formatter to Dimension.value_format
"
68fcfd472a4443103c70a7ce77c5515abfc5b1be,ioam/holoviews,"Refactored projection finding code
"
0e77366edcd9fc2907845ec7cf9c26f23d87b0aa,ioam/holoviews,"Merge pull request #2 from philippjfr/master

Dimensional Objects, sampling, splitting and collapsing

Merging now as the PR is supposed to be 100% up-to-date  - we will have a few things to tidy up to get the tests working shortly."
2f0dec851e8291afbc0a5a569a77ae274989a30a,ioam/holoviews,"Refactored interface module after Dimensioned changes
"
f04b1616889518f3f848ebcbd3e800f816d84e2d,ioam/holoviews,"Improved linking of axis ranges (#3240)

"
d1df0d6c3fe8a241b5b14e247b2a12cb5cdba2f3,kadena-io/pact,"build fixed, RequestId -> nonce
"
242410f98c0be90cb8c8eb13e6615349bcd9c9d0,kadena-io/pact,"Cabal cleanup
"
2e39c2cbf0295d21eda76b6ea61a0169bfcbabf7,keybase/client,"libkb: updated Resolve machinery, for use with Resolve RPC

- clean up the resolve cache machinery
  - enable failure caching for ~20 seconds
  - enable twitter/github caching for ~20 minutes
- make caching optional
- fully contextify the resolver
- stubs for the identify.Resolve RPC
- better error objects
- wire the RPC up to the service interface
- testing our resolve
"
10335932a573b907134d3754839148ff10034584,keybase/client,"Exploding messages: handle 'explode now' (#12072)

* change semantics of action and get explodedBy from delete message

* WIP

* better exploding meta

* WIP

* check if deleted messages are exploding before dispatching action

* enable explode now for everyone in adhoc, make boom icon thinner on native, and add exploded/by annotations on native

* heightretainer -> explodingheightretainer & cleanup 1

* short circuit message find call

* Exploding messages: misc 1 (#12115)

* ExplodingMeta onClick -> message popup

* make up-arrow editing skip exploded messages

* calibrate timestamp and timing to the midpoint of interval rather than edge

* have bomb overhang on desktop & remove header padding & hide popup when time runs out

* WIP

* WIP new tag

* connect set explode time popup and make username semibold in EXPLODED BY

* remote setSelected from platform input

* handle receiving end of is exploding new flags

* theoretically works

* hook it all up

* add comment

* storyshots

* add explode info to pending message and pending mode to exploding meta

* add some times

* sort correctly

* add options to storyshots

* use some instead of for

* handle seeing onOpen instead of onHidden
"
6f37fac500c953ae76f165319f76969e46d45771,keybase/client,"[KBFS-1190] Handle block get errors gracefully in file/dir removal (#113)

When removing a file, we need to retrieve its top block
in order to account for any other indirect blocks. Also,
when removing a dir, we need to retrieve it in order to
make sure it is empty. In either case, if the block doesn't
exist, go ahead with the removal.

We should still figure out what's causing these bad
pointers, but we shouldn't prevent people from removing
those bad files/dirs.

Also clean up file/dir removal tests a bit."
0d9597afa14d1f9e9231d2c02be94c3ddf3e8437,keybase/client,"Cleanup
"
80acb8d3cbc8b24c5fb3cb9ab1d8b8da50b3b297,keybase/client,"Rename PaymentLocal.Status -> PaymentLocal.StatusSimplified (#12168)

"
5b7284dcc81ea89152c0d3c3ec77247b6d16f5f5,keybase/client,"Make ""To Stellar address"" field expand with error message (#14587)

* make to stellar address field expand with error message

* storyshots
"
54bd7b522ef20aa6c32ebc82b9f931e5388a1050,keybase/client,"Merge pull request #1502 from keybase/refactor-remote-pinentry

Refactor remote pinentry"
cc3bad36a0f3baa19f907f59d7105501f988916c,keybase/client,"Move updater into separate package
"
77a2243dc8821900311f2f3d17e681237fd5c92f,keybase/client,"login_provision ported off of LoginState (#11863)

* login_provision ported off of LoginState

- store passphrase stream cache and paperkey in the active device
- remove engine.keyring in favor of libkb.DeviceWithKeys

* port engine#Unlock off of LoginState (#11879)

* port engine#Unlock off of LoginState

* migrate engine#AccountDelete off of LoginState (#11881)

* migrate engine#AccountDelete off of LoginState

- need to add a few more features into ProvisionalLoginContext.

* port login oneshot off of LoginState (#11889)

* port login oneshot off of LoginState

- fix a few bugs with follow not working on a one-shot device
- test that it works

* port over login_offline and secretkeys

* port device_add and kex2_provisioner off of LoginState (#11897)

* port device_add and kex2_provisioner off of LoginState

- move GetPassphraseStreamStored out of LoginState
- introduce a new MetaContext#Dump feature, which is quite nice for debugging
- finish up device engines, like DeviceHistory and DeviceList

* migrate PaperKeyGen off of LoginState (#11901)

* comments from review

* you can hit a secret store error in Login if you login with email address

- it's fine not to store the secret then, it's too early, but store it later
- so CWarningf -> CDebugf

* better debugging on the linux build

* fix linux ephemeral CI fail by making parent dirs for key files
"
ed8013f2ec7647e44a778eb39190598c614d0972,keybase/client,"cleaned up all uses of G in engine to use contextified g
"
766c6c9d4e916d523a5030e9afd14a7cab763725,keybase/client,"some refactoring: UIDWrapper, UIDArg helpers
"
9e42bac95bb5a4f3ca1ffb0d4a1985ae3a05b257,keybase/client,"Retire ResolveConversationLocal and refactor chat service (#4490)

"
5b0690be140bcc68dce4bf928bcc7caa61c07ee7,keybase/client,"Split off KeybaseDaemon from KBPKI

This will make it easier to implement caching properly (#368).

Implement local versions of KeybaseDaemon by providing
implementations of the RPC interfaces.

This closes #375.
"
8f3d70ffd5ba8cea2526334b794fc38a6264b1d9,keybase/client,"rewrite the session system

rewrite identifying so that you have to call it explicitly, and from client land
(doesn't really make sense in the library)

introduce some new errors to enable the above features

more robust uid-finding for self
"
71312ddd7cf3e6f5588ba6dccea703db98e8f875,keybase/client,"logging cleanup
"
c7dff256d6b21360a1c36ff40e86e655879d3acf,keybase/client,"disk_block_cache: Rename Delete to DeleteByTLF
"
966512e25b90232d930685c1eb797e11237bd6ae,keybase/client,"Merge pull request #531 from keybase/strib/KBFS-35-more-refactor-into-file-data

file_data: use for block changes, and supporting multiple levels of indirection in reads"
80e2c052e60df8366157012ee5daeca1ec593257,keybase/client,"Chat pager sets Last for retention/delh (#10759)

* chat pager sets Last for retention/delh

* move patchPaginationLast into postProcessThread

* use GetUnverifiedConv

* use MessageID.Min

* return xlate

* unify {types.u,U}nboxConversationInfo
"
1a591e19051716cf01a11ac442d12553c4c6bf89,keybase/client,"writers -> users
"
a0cb82ae882e222c51a44ff65f68e81b2ce5d93a,keybase/client,"Move around delegation-related responsibilities

- Instead of using flags to control what kind of link a Delegator makes,
  you now pass it a DelegationType. It's an error to run a Delegator
  without a DelegationType

- KeyProof no longer tries to turn {Sib,Sub}key links into eldest links,
  it trusts the Delegator, which already deals with this in CheckArgs

- Ditched Delegator's private isEldest and signingKey members, they can
  be inferred from other members.
"
0e0f15c3506cbdf4281f65dd7ba5a1d9d0a14ce3,keybase/client,"Add protocol for GetAccountAssetsLocal (#11919)

* Add protocol for GetAccountAssetsLocal

* Fix spacing

* WIP

* Vendor for AvailableBalance

* GetAccountAssetsLocal passes with positive balance

* Handle empty details.Balances

* Fix after rebase

* More rebase cleanup

* Vendor text/message, text/language

* More vendoring

* More x/text vendoring

* More ugh

* Remove old code

* Only show native assets

* Don't abort on currency conv errors

* Use rationals, insert comma delimiters

* Unvendor

* Vendor these, windows installer uses them

* Revert ""Vendor these, windows installer uses them""

This reverts commit a4d8b60b5d4cc095517639eb9943b8b6bcdfbbe7.

* Revert ""Unvendor""

This reverts commit fe3fe50883509a1a18d67ec39534c82b48cec612.

* Revert ""More ugh""

This reverts commit b0367c798c1d7f71e12ca1f8f1a416b27232c808.

* Revert ""More x/text vendoring""

This reverts commit 2b6e677851fdbe72f4bdafcf1e2e481ff523dae8.

* Revert ""More vendoring""

This reverts commit 29964b7551c084f329cfde37dcfbdacc543222ac.

* Revert ""Vendor text/message, text/language""

This reverts commit 66393921c0347f675fee1c4935e81a5c63585c91.

* Don't use strings.Builder due to CI

* Don't abort on exchange rate error
"
a57d427e06c77af7b3513e687c68c937d985b28f,keybase/client,"cleaned up some long if/else chains
"
1fcdfe83abc01e1e6d5c908a4f32718fa274c12b,keybase/client,"connect to SimpleFSList (#10483)

* connect to SimpleFSList

* lint

* fix flow

* use path.posix instead of path so it works on Windows and more lint fix

* (most of) revew feedback from chrisnojima

* copy what we need from node.js path to constants so it works in react-native

* oops

* add ugly dumb rows for pending folders

* review feedback from chrisnojima
"
287ebd4d34448b9a057c29ffd5eb21f2411498e9,keybase/client,"more backup -> paper renaming
"
26dc8b4992cdf4c7b322f65a9060d5ba3a67e712,keybase/client,"Merge pull request #1781 from keybase/updaterwincleanup

Updater platform cleanup"
86ca67973f78100835c3dec7eff9d09ae90da620,keybase/client,"getBackupPassphrase -> getPaperKeyPassphrase
"
1814bcd0e67bd2451d651d1d8f3fda19a8d087eb,keybase/client,"get rid of FOKIDs!

The ""fingerprint or key ID"" abstraction was invented back when PGP keys
didn't have KIDs. Now that they do, it causes way more problems than it
solves. Lots of code implicitly assumes that one or the other will be
present in a FOKID (especially checking for equality), which isn't
enforced at all by the type, so things tend to break in confusing ways.

With this diff, we now use KIDs everywhere. In the places where
fingerprints are still needed, they're either passed explicitly or
retrieved from the KeyFamily's kid2pgp map. I also went ahead and
renamed ""GetKid"" to ""GetKID"" in several places, in keeping with Go's
convention for acronyms.

Closes https://github.com/keybase/client/issues/418.
"
6b51c40ee35ddfed545503a7fd3f2325732bbfee,keybase/client,"Merge pull request #7761 from keybase/miles/CORE-5180-rename-subteam

Add team rename post and parse"
5c5b349bc0502e13fef991ac0e6c551ba4c579ff,keybase/client,"Remove unused, unset Image record.
"
5cd754266e175670cd27c090e779f79d1529ed46,keybase/client,"Add client support for DeleteHistory (#9937)

* support boxing deletehistory

* add dev-only cli: chat delete-history --upto

* support DeleteHistory messages in convsource

* add convsource test

* fix storage test

* add storage test for delete history

* cleanup

* protcol

* add PostDeleteHistory

* move CLI commands

* delete across gaps

* ask for confirmation from cli

* gregor1.Seconds -> gregor1.DurationSec

* split PostDeleteHistoryBy{ID,Age}, other feedback

* address comments

* important fix

* PostDeleteHistoryByID -> PostDeleteHistoryUpto
"
1ff71e786dfc6527cd3df697f2f8a6cce6cb6f79,keybase/client,"rework attachment send flow to run through Deliverer CORE-7900 (#12869)

"
05ebde447b4be1166e3e18581e0a1c30e075b9fa,keybase/client,"cr: ignore renames if the whole chain has been deleted

Also fix a bookkeeping issue exposed by this -- if a block has been
overwritten already on the merged branch, it shouldn't be unreferenced
again in the resolution.

Issue: KBFS-1603
"
618e94a06c7fcbf033eb40e8a74b3d47a3eb76f7,keybase/client,"Fix for revoke flow and cleanup (#7370)

* fix put vs call on device nativation on revoke

* better layout for login/intro screen

* move files around and rename and split helpers for connect

* lint fix

* merge master

* WIP
"
8298ef5ab5e5e15469199dcc2bce1747790a7d29,keybase/client,"more factor out of login code
"
15bef0bb56593973f1c5f507a7d2c3173baa45dc,keybase/client,"Merge pull request #7768 from keybase/miles/CORE-5180-rename-cli

Add 'team rename' cli command"
ab5637711d0b06bd462b4c53dad52b7e434b531a,keybase/client,"implement popup menu (#10845)

* wip

* popup works on desktop!

* cleanup

* mobile!

* fix timestamp formatting

* review feedback from chrisnojima, some of

* cleanup
"
9613c18a266088c2e3af95f7529090ab71d4c432,keybase/client,"Make entire teams page scrollable (#10680)

* initial refactor

* WIP

* WIP

* factor out team header

* clean up teams page

* WIP

* WIP

* subteams work

* initial item size estimator

* gather subteam and member row types

* initial sectionList on mobile

* fix key problems

* minor cleanup

* requests and invites work

* settings works on mobile

* styling on desktop & mobile

* type

* WIP chat button

* bail on chat button

* better type

* row key

* bugfix

* reenable chat button

* better popup menu

* disable chat button for upcoming release

* chat button works
"
1d07b653b377724d6e8a136b8d9721c9ad2d1031,keybase/client,"Rename SidePanel -> InfoPanel
"
975acafd195f8c1527bd9925e2405f7594f6fde3,keybase/client,"Merge pull request #4050 from keybase/cjb/DESKTOP-1590-cleanup-search

Cleanup search feature flags now it's live for everyone"
f1f843ea946a838d8bfa6aca101cbf2791b549ab,keybase/client,"RPC for KBFS to decrypt data using per team key (#11856)

* work in progress

* Refactor oracle

* Add test for repolling in oracle

* Style changes
"
6d467e630111b1cacf21480775279ba412acebc6,keybase/client,"Rename xlogin* to login*
"
2193b72aa472828f12e5905fa9bb518feee8c6f3,keybase/client,"disk_block_cache: PR feedback to rename block state in the disk cache metadata.
"
e7ca9bd5770e09ff773f464ced933cb7d8d5dc0d,keybase/client,"Use keybase/go-codec/codec instead of ugorji/go/codec

Update vendored saltpack and go-framed-msgpack-rpc,
so that they use keybase/go-codec/codec, too.

Also vendor github.com/cenkalti/backoff, which is now
a dependency of go-framed-msgpack-rpc.

Also make govendor ignore the solaris build tag because
of go-isatty.

This closes #2442.
"
ebcc592723365b5596ca1c93deb038624e8bbc90,leancloud/docs,"Use linker flag instead of dylib and tbz
"
65f7e9e18739bdee3e777a158b8d21d81b9dcfb9,mapcentia/vidi,"Clean up. Added Bower.
"
1c47b0210cee69b18ac53120a5734339d7e81b85,marekjm/viuavm,"Fix: make function heads a distinct fragment type from closure heads
"
4f303776b51f0bd5409296526a702a93247a5bfa,marekjm/viuavm,"Rename ""enclose"" instructions as ""capture""
"
9686f6652c98a5353cf8615a972e409804ed2557,mozilla/pdf.js,"Merge pull request #9089 from yurydelendik/rm-chunks

Extracts OperatorList class and prepares for streaming"
15e1ae4e3f70e90e9f9df12a5dff2d9d386cd0f6,mozilla/pdf.js,"Merge pull request #7639 from Snuffleupagus/bug-1252420

Replace empty CharStrings with '.notdef' in `Type1Font_wrap` to prevent OTS from rejecting the font (bug 1252420)"
19af5952c0e231fd9db7654a54be0d13aa468685,mozilla/pdf.js,"Merge pull request #8339 from Snuffleupagus/es6-ViewHistory

Convert the `ViewHistory` to an ES6 class, and re-factor it to make it properly asynchronous "
0cd4874df6f0a465a0d6062bcceca4c6a27a8546,mozilla/pdf.js,"Merge pull request #3757 from Snuffleupagus/move-Settings

Move Settings from viewer.js to its own file"
6a7012aaca42fcca32550cd7c04817bda76f70b3,mozilla/pdf.js,"Remove unused variables

These have been found using `gulp lint` in combination with the `unused:
true` parameter for JSHint. Unfortunately there are too many false
positives to enable this feature, but now that most globals have been
removed because of the conversion to UMD the results are much more
useful than before.
"
1c9af00bee5070c43a4cf06ecd9a33307790aac7,mozilla/pdf.js,"Merge pull request #8775 from Snuffleupagus/rewrite-PDFHistory-2

Re-write `PDFHistory` from scratch"
eb8924a79f9a6adb3d60896f60e7700c1916fe23,mozilla/pdf.js,"Merge pull request #4613 from yurydelendik/buildImagePromise

Refactors buildImage to use Promise; don't draw bad images"
09772e1e1543445ceb9ba68bc3ae346ebcfc7e82,mozilla/pdf.js,"Creates PDFWorker, separates fetchDocument from transport.
"
828367a1b45e47643a763ff996c138f8bf8c729b,mozilla/pdf.js,"Make the Type1 to OTF code active, even if the sanitizer prevent fonts to load at the moment
"
af53b9178e92021025d6cca2a030321c76805072,mpcsh/dotfiles,"i3 -> bspwm
"
02ad5b2d90beef35ae5d572757ec7c65322425c8,ndrmc/cats-web,"add a unit conversion helper and a mini profiler to see response time of views
"
1015e2f16285c24fb510c9b937bcef593c940ae8,opnfv/functest,"Merge ""Leverage logging config and refactor the logger"""
5560a30f425dc2b1fb2d8bb5b4f758326e9e591d,opnfv/functest,"Add clean_flag to test cases

Some test cases such as tempest or those using SNAPS
have a built-in cleaup or teardown mechanism.
This patch helps to save some time by bypassing the
openstack snapshot and cleanup when running those
kind of tests cases.

Change-Id: I50e7a17937a813532b3756474158416d3e85b922
Signed-off-by: jose.lausuch <a4ed9890ad7f6494ac84a749f29a4dc3449a1186@ericsson.com>
"
5fdcba8e0e13d79a7ed71f1dfd27a09961ee4dfc,riganti/dotvvm,"DotVVM javascript split into multiple files
"
016744ef4d2692c800d613e40fbf5d6267fab2e9,swaywm/wlroots,"Refactor wlr_list inside wlroots
"
9a3c94b608663a4465ff528709d732699ac7af80,swaywm/wlroots,"Merge pull request #331 from acrisci/feature/xwm-rewrite

xwayland window manager fixes"
5c82d2f5c361d9ad6ed3a120cb3f5e1005c4a9e7,swaywm/wlroots,"libinput backend: massive renaming

- 'libinput' (backend's) to libinput_context
- 'device' (libinput_device) to libinput_dev
- 'dev' (wlr_device) to wlr_dev
- 'devices' lists tangling of libinput devices to wlr_devices
- 'devices' list of wlr_devices in backend state to wlr_device_lists
"
dafdbbf5527739dc07267f0667f31e40a4e18661,syuilo/Misskey,New translations ja.yml (Chinese Simplified)
0e95b33b6a6dab12c2080848cfddc7b20e4b2218,syuilo/Misskey,"Improve theme
"
eff2ce272425875666e13cb2966053842d06c579,texta-tk/texta,"serverside expand search, buggy, need to fix alot of things and refactor
"
a9ed82eb513569d5f4852a1e4a70b8e56b775990,tulios/kafkajs,"Add protocol test helper for unsupported version response with timeout part
"
d494814a400bc552b4f0824adf8e49a90c491f58,tutao/tutanota,"squash commit

added mailto handling to desktop client. closes #670
proper handling of logout event, closes #682
made winsigner optional, made client version available from devTools, fixed #678
made F5 refresh not break the app. closes #673
fixed #674
reenabled HTML5 notifications. fixes #672 once tutanota starts showing notifications for new mail.
fixed #691 & fixed #716
integration of IPC into WorkerProtocol, closes #669
public key for code signing
code signing for the linux client
fixed Jenkinsfile to correctly link snapshot
upgrade to electron 4.0.0-beta.7 #718
made the add 2FA dialog not reload the page #718
added support for Ctrl + Scroll zooming. #755
added F11 maximize/unmaximize support, #755
added Ctrl + P printing support, #755
fixed make script for desktop client
A search bar for the Desktop Client, #755
added async imports for nativewrappercommands
fixed focus loss for desktop ctrl+f search bar
Context menu for the Desktop client, #763
Code signing for mac & windows
linking of mac & windows snapshots
targetURL for mac snapshot
Settings View for the Desktop Client
better icons
prevented handleMailto from being called before app is ready
made showRequestPasswordDialog focus the input element
implementation of link tooltips for desktop
restricted mouse hover URL reveal for desktop to anchor elements inside the mail viewer
rich text toolbar overhaul, #873
upgrade to electron 4.0.0-beta.9
"
1a01c9b4a892da70ad0fdceb383dad682a7f6462,tutao/tutanota,"sto426: Improve spam detection
"
e835c48cc884d290736b49fd27b9fad75f7b1ee9,ARMmbed/mbed-os,"Rename ignore_ptrs to ignore_patterns
Add comments to code
"
3094327e12c286c98bb5c6ff36e9b9ae61965e1d,ARMmbed/mbed-os,"Lora: Remove obsolete FEATURE_COMMON_PAL flags

mbed-trace no longer requires COMMON_PAL to be enabled.
"
488cf03d1e733a4ecf98aff8dd767becd8a68dcb,ARMmbed/mbed-os,"LoRA: Code cleanup + doxygen updates

- Internal changes only
- reset function is created to LoRaPHY to reset LoRaMAC parameters with default values
- Doxygen updates for newly created functions
"
ae8d818927145cc94f90722e94d88185d3a8c5cd,ARMmbed/mbed-os,"Rename mDot to mDot F405RG to allow for variation in processor
"
f7a731544cfbe2eab6660e392c486d1b05fcd982,ARMmbed/mbed-os,"Merge pull request #7816 from kivaisan/option_to_disabled_join_duty_cycle

Lora: Refactor duty-cycle configuration and introduce config for JOIN request"
5eb4894e7145a9ea49016a587eb70e1bac10671c,ARMmbed/mbed-os,"Added skipped mbed library build reporting and removed unnecessary print
"
fbd920777b2a4abdf2123c9076be36800c19a95d,ARMmbed/mbed-os,"Add extra labels for Freescale & STM EMAC drivers

Just checking ""does the chip have an EMAC"" doesn't work - there are
targets using those chips which do not have an Ethernet connector and
don't provide the necessary surrounding infrastructure (eg DISCO_F429ZI,
not providing the board emac config call, and HEXIWEAR not providing PHY
info).

Make the targets that actually do want EMAC define their own local
Freescale_EMAC and STM_EMAC labels, and move the drivers into
the corresponding TARGET_ directories, removing the #ifdefs.
"
c9c6428598d8d2cc8322d72a81e67c7b5b37fe1d,ARMmbed/mbed-os,"Merge pull request #3122 from SiliconLabs/SiliconLabs-cleanup-rebase

[Silicon Labs] Update of Silicon Labs HAL"
e186985b260107129eafcc7695853f0e58319935,ARMmbed/mbed-os,"addressing PR review: added documentation, moved code and renamed vars
"
1f4088f486e7b49cd86ec03dfbb06089a7ddf81a,CA-IRIS/mn-iris,"KAdaptiveAlgorithm: improved clarity of metering phase transition code.
"
688b55794c659ff8f2568c8970e2f856c02344ab,CA-IRIS/mn-iris,"Cleaned up DMS status attributes.
"
ccf9dd79fcf1dfb68fa5b2728124da9eb225c173,CA-IRIS/mn-iris,"Renamed sys attr: cameraviewer_onscrn_ptzctrls -> camera_ptz_panel_enabled
"
3efcb87db2b64760e219996b873a05079aaa2b10,CA-IRIS/mn-iris,"Reworked privileges to have separate type, object and attr fields (sonar 6.0)
"
943deefc0fa47527533090ca71e18f3e1f8a7188,CA-IRIS/mn-iris,"Cleaned up parsing of fonts.
"
257f085ee940d7cfa1b8e339dce742e22ada02b3,CA-IRIS/mn-iris,"Improved roles in tms-template.sql
"
a1d50641c398717bf1fc9f99ed4c239c3ab1ccdd,CanalTP/navitia,"Transverse : grand nettoyage

– passage de Type_e en enum class
– suppression de dépendances croisées
– forward declare
– suppression de warnings
– simplification de la reflexion type/pt_ref (plus besoin de mpl !)
– début de remplacement des BOOST_FOREACH par des for c++11
"
54caccc16bbb14ea8f92eb1d74544e32ce9c733f,CanalTP/navitia,"Type: move validity pattern to another file

because timezone_handler needs it
"
3385714bfa4dac9dc5e3b014690b27a4a6338ee3,CanalTP/navitia,"kraken : code lint

small refactoring to ease reading of make_pathes

+ small code lint
"
2a78245238bab600d9b1513982bc7417700186b0,CanalTP/navitia,"Merge pull request #1412 from kadhikari/rename_frame_to_dataset

jormungandr: api frames renamed to datasets"
f3decc97176eb07096dcb5b5732e46961fa6a030,CanalTP/navitia,"[TYR]: TyrUserEvent implemented (and refactoring)
"
ba0684f9642fe2c8783bf5d8f272e0770b984136,CanalTP/navitia,"refactor orig/dest order when calling external service 1-n
"
6b01c3432d9e9d95ed11448a14e6eec90ac778fa,DGA-MI-SSI/YaCo,"hooks: rework item handling
"
00d493ae88afab1d9f2e7c0e3e7a106bfbbc1fed,DeDiS/cothority,"reworked monitor + test working
"
3d3e12045b74eea54b88be57bff570ecae7c8b74,DeDiS/cothority,"Merge pull request #567 from dedis/refactor_mocking_address

[1/7] Network refactoring - Address"
20b82f01ffa00a414fa77c5b2db1de6ee742da87,DeDiS/cothority,"Improve godoc; add synopsis
"
8fba8ef744a371db42c7829f4b5617a186dda30f,DeDiS/cothority,"Eliminate the key argument

The client and the service can already agree on what the key will be
by using the DeriveID function.

Also: some other clean up stuff.
"
84a7c66d797b9a8871b1591dc3e4faaf1b13af19,DeDiS/cothority,"Configuration class and Config struct should match

The OmniLedger Configuration class in go is different from the Config
struct in go. This makes it difficult to parse the Config struct when
querying OL. We rename Configuration to Config and have it match the
Config struct in OL. Also add tests to check that we are reading the
configuration correctly.
"
8310b71691d8de325b4149924ec902d5c6485c42,DeDiS/cothority,"Merge pull request #513 from dedis/cleanup_512

Cleaning up #512"
30718f900e77d03a64c7328b746ba8a698f43656,DeDiS/cothority,"renamed CreateProtocol to CreateProtocol{Service,SDA}
"
2ff8402869038ace52886895ec5980e797e0a1b7,GetStream/Winds,"Code cleanup
"
9cfc3ac2b19fd006101cae3a7c2b660ddb276ab7,GetStream/Winds,"refactored import paths to work
"
15faad89f26cb9dc744f40b1f80285902f847b81,GetStream/Winds,"Merge branch 'design-rework' of github.com:GetStream/winds into design-rework
"
a5beb4f35840efb7e2a098c598279b9eb8a99c79,GetStream/Winds,"refactoring collections and analytics
"
fc6330b28f02ac924c5f4a69eab09b9f1561e4e0,Grumbel/dirtool,"Cleaned up application shutdown somewhat

Still a few mysteries around QThread to solve.
"
0ef19d7a8abf500786b81e7e3553148851dd93cf,JavaEden/Orchid,"Improves design of BsDoc theme, updates front page of main Orchid site with new logo

"
4fd2e97c79af0f6de137521d5523f18fa81169cc,JavaEden/Orchid,"Begins to refactor javadoc parsing, adds options to disable specific generators, applies config.yml to base options object
"
95b9e67a662cd01abf272712c55510f6de7dba82,JavaEden/Orchid,"Starts to make OrchidCollections generic to better allow Generators to index collections of anything, not just Pages

"
9178b623c4b6c9e403c053f41e05f4746df41b98,JavaEden/Orchid,"Removes dependency on jTwig, replacing functions with custom TemplateFunction interface. Breaks Flexmark into individual artifacts so we're not downloading dependencies we don't need

"
e4a189c955246223f3bf49ba46f03917b9c011ba,Jeffail/benthos,"Merge pull request #33 from Jeffail/feature/refactor-metrics

Feature/refactor metrics"
32b47b115e64e25076a6135766c554837a6b0cbc,Jeffail/benthos,"Refactor more metrics
"
a7fedb22e22c1b8015db7852f4d8da31d032e803,Jeffail/benthos,"Improve sanitised config outputs
"
11a734cf064e4bb978c456b381c7648077aa4c26,NCI-Agency/anet,"NCI-Agency/anet#195: Extract constants for position type
"
ad66e3c008f7356a4d348897938299cbf7d6f668,NCI-Agency/anet,"Merge pull request #523 from NCI-Agency/GH-475-rename-parenttask

NCI-Agency/anet#475: Rename and make customizable parentTask"
91ef048801a82147cc467bedcd0c3ae4e8994fea,NCI-Agency/anet,"Merge remote-tracking branch 'nci/candidate' into develop-rebase

Updated existing postgresql-related changes to replace references to ""poam""
with ""task"", but did not make new changes to migrations or to the new DAO
for Task objects.  Code compiles and runs, but tests that involve database
queries fail spectacularly.
"
78532c97d44fe89e38ccff4dac41fefe19d030f4,NCI-Agency/anet,"NCI-Agency/anet#323 Refactor reports pages to use Task

Refactor Poam to Task objects in the report pages
"
9a25d43cb20a3fa228a249f3eee8d8e3f79681f3,NCI-Agency/anet,"NCI-Agency/anet#160: Rename titlePrefix to titleSuffix
"
6598088bbf787315aa0f336fc9e8afe5a7be1bad,NCI-Agency/anet,"NCI-Agency/anet#917: Indent, and remove unused variable
"
21ccd732000cb452b112d39a5395bad35bf53ad4,PayBreak/basket,"removed unnecessary object checks and added necessary ones
"
ec0ce9558b2c5996a196050761d49da0a3761561,SpinVR/three.js,"Fix the renderList sort function to be truly stable

Multiple objects can have the same id. Using that id to compare the render
objects makes the sort function unstable. Use the webgl object's index in the
render list instead. That number is guaranteed to be unique.

This fixes #2966.
"
1b525e38c5d0ed698b64a407bc60f8a082a3c6c1,SpinVR/three.js,Improved CubeGeometryand PlaneGeometry
a1e574b5b5dbc69e4eab9437dcb8529967bb5453,SpinVR/three.js,"Merge pull request #11961 from donmccurdy/feat-gltf2-merge

GLTF2Loader: Rename to GLTFLoader."
f849f34b1e0137e107a9f729f11da1708acb8b2a,SpinVR/three.js,"Redid `CylinderGeometry`.
Simplified `Trident`.
Added `setX`, `setY`, `setZ` methods to `Vector3`. They're handy for oneliners (see `CylinderGeometry`)."
90dd7cc0d34fea4bf256f5a79d8cd7333c79d766,SpinVR/three.js,"#5791 Use unified Log,Warn & Error handlers, rather than directly using console.error/warn/log
"
2ecbe2dec2b80e98db0af2d9b7a60def69ba943c,SpinVR/three.js,"A lot of bugfixing and refactoring.

- getters/setters are no more in Vector3
  - object hierarchies thus don't use ""isDirty""
  - this was completely killing performance for anything that was touching a lot of Vector3 like creation of meshes and dynamic buffers
  - even without this, performance of hierarchies went up (a lot)

- objects do not get passed renderer anymore
  - camera was almost also removed, but this is useful for LOD (though there may be some cleaner way to do this?)

- material ids are now unified, this makes ""geometry.sortFacesByMaterial"" faster (thus scene init / GUI blocking is shorter)

- all WebGL examples should work now (render-to-texture has weird lights and in some camera control feels different)

- CanvasRender still broken, despite many efforts :(
   - currently only points and lines work, faces don't show up. I think this may need assistance from mrdoob.
"
90f54e25076b404e4c4004dd8e99952f257479d7,SpinVR/three.js,"- CanvasRenderer expands screen space points (workaround for antialias gaps).
- CanvasRenderer supports TextureUVMappingMaterial.
- Moved UVs to Geometry.
- Minor clean up"
cf2e8c1bbf87f2247f72c88ff4383f62fb5d7a53,SpinVR/three.js,"Refactored everything to use CamelCase naming for properties. Plus some smaller fixes here and there.

Went through all examples, all should work.

JSON files exported from Blender / converted from OBJ files still use underscored property names internally. I don't know, should these also be changed?
"
0033a9754235d5c1fad4d3057b97708736f8fa28,SpinVR/three.js,"Fixed bug preventing re-adding of objects removed from the scene.

Problem was that objects could be added to WebGLRenderer's internal render list only once (because of `webglInit` flag).

Now there are two separate internal states (`webglInit` and `webglActive`) so that object can be initialized just once (expensive operation) but added / removed from the scene many times (cheap operation).
"
e6cb9ac8b6ed2e2d92538e3d7aea239a86e70a6d,SpinVR/three.js,"Loaders: Improve code quality
"
c0d371be7caf0484b26c20bfc9db8729c743d807,SpinVR/three.js,"Merged with zz85's shape / path / extrude / bevel / text updates.

- moved 3d-only text parameters from TextPath into TextGeometry
- added safeguard for bevelSize and bevelThickness not affecting shape size if bevel is disabled
- updated text examples as now TextGeometry is not anymore centered
"
7f70aedfa617d8391a7f9e031c32fc133f48a777,SpinVR/three.js,"WebGLRenderer: Renamed getViewport to getCurrentViewport. See #13081
"
a05727b668f5e90387bf45e4d55c5ba6e7265fb8,SpinVR/three.js,"Moved wip classes out of src.
"
8bbd61b149fec3b1b9f7f301984262b462082746,SpinVR/three.js,Using xhr.addEventListener instead of xhr.onreadystatechange. Changed 'complete' event to 'load' as native JavaScript.
fe2e9759b69f25e9e05a8eeb026cc5565c0c00a6,SpinVR/three.js,"Refactored WebGLRenderer to be able to handle MeshShaderMaterial also for Lines and ParticleSystems.

It is now object type that determines which type of primitives is going to be used (triangles / lines / line strips / points).
"
905d4787b7cff70b34beb0b91fc10de00f6e534b,Taskana/taskana,"TSK-109: Separate monitor and task operations

- Add TaskMonitorService and move the needed methods from TaskService
- Update TaskanaEngine with TaskMonitorService
- Update MonitorController and RestApplication
- Add TaskMonitorMapper
"
c2faf9c0541759ba6073e4532f082d947aa35b3e,Wandalen/wFiles,"filesIsUpToDate : replace logUp by log
"
05f07e40b5e989b5ec4755f19e7ab60a77191108,Wandalen/wFiles,"Extract : replace_descriptorResolvePath with pathResolveLink
"
84dd0bb4efd8d6a5f0b346e4debd60a804fcd012,Wandalen/wFiles,"rename econdings
"
fe90ac33d2463ce3d93c5e5bf54143747196144e,bstarynk/bismon,",insert is now working. Improved compilation of jsmodule
"
11df0d00877e864b15f76cc4ac664af06da95a25,cloudera/Impala,"IMPALA-3745: parquet invalid data handling

Added checks/error handling:
* Negative string lengths while decoding dictionary or data page.
* Buffer overruns while decoding dictionary or data page.
* Some metadata FILECHECKs were converted to statuses.

Testing:
Unit tests for:
* decoding of strings with negative lengths
* truncation of all parquet types
* dictionary creation correctly handling error returns from Decode().

End-to-end tests for handling of negative string lengths in
dictionary- and plain-encoded data in corrupt files, and for
handling of buffer overruns for string data. The corrupted
parquet files were generated by hacking Impala's parquet
writer to write invalid lengths, and by hacking it to
write plain-encoded data instead of dictionary-encoded
data by default.

Performance:
set num_nodes=1;
set num_scanner_threads=1;
select * from biglineitem where l_orderkey = -1;

I inspected MaterializeTupleTime. Before the average was 8.24s and after
was 8.36s (a 1.4% slowdown, within the standard deviation of 1.8%).

Change-Id: Id565a2ccb7b82f9f92cc3b07f05642a3a835bece
Reviewed-on: http://gerrit.cloudera.org:8080/3387
Reviewed-by: Tim Armstrong <2f8e34250f03a653da3dc27f7ec203eafdde80fc@cloudera.com>
Tested-by: Internal Jenkins
"
b89b7b19699f517c1235324ea35c396015af2ee1,cloudera/Impala,"Rename ANTI JOIN to LEFT ANTI JOIN for consistency with LEFT SEMI JOIN.

Change-Id: I8171b2d44b45529fdbd040d5709aaeb9f13facfa
Reviewed-on: http://gerrit.sjc.cloudera.com:8080/3873
Reviewed-by: Alex Behm <fe1626037acfc2dc542d2aa723a6d14f2464a20c@cloudera.com>
Tested-by: jenkins
"
b3c816bf77956bc7c78ca51137e4686b301b7c9b,cloudera/Impala,"Change FE to use ColumnType instead of PrimitiveType.

PrimitiveType is an enum and cannot be used for more complex types. The change
touches a lot of files but very mechanically.

A similar change needs to be done in the BE which will be a subsequent patch.

The version as I have it breaks rolling upgrade due to the thrift changes. If
this is not okay, we can work around that but it will be annoying.

Change-Id: If3838bb27377bfc436afd6d90a327de2ead0af54
Reviewed-on: http://gerrit.ent.cloudera.com:8080/1287
Reviewed-by: Nong Li <99a5e5f8f5911755b88e0b536d46aafa102bed41@cloudera.com>
Tested-by: jenkins
Reviewed-on: http://gerrit.ent.cloudera.com:8080/1304
Reviewed-by: Henry Robinson <3eca10f30041813f045165784e24b5a950a6cc7e@cloudera.com>
Tested-by: Henry Robinson <3eca10f30041813f045165784e24b5a950a6cc7e@cloudera.com>
"
828f1828c365f74d4f7211aabda7419dd0fc78ff,codebar/planner,"(feature) improve job listing views for member + visitors to the website

- render better messages
- use table to render job list
- extract text to locale
"
daae1ba50f96fed15ec201851f0dc9ed2c5352aa,craws/OpenAtlas,"Cleanup
"
f57b2097d64b5e7b22152ea3b68a58f7519e39c1,crowdAI/crowdai,"cleanup
"
4f4a2391e0a4c179bd5a5386c517ead7a6b06501,danmar/cppcheck,"Refactoring: Removed _settings member from the Tokenizer

"
c64e74492b1b2f10799ce9e4a451d8000c1522a5,danmar/cppcheck,"Improved testing of std.cfg regarding uninitialized variables.
"
3851c0f0195153be5efd88a256c77816fad499d3,danmar/cppcheck,"Refactoring: Renamed all files to lower case. Also added testfilelister.cpp which was forgotted from previous commit. 

"
1ec3c9f634803fe0d2b011c08ff874eaed90f7b2,danmar/cppcheck,"Fixed hang in libreoffice code (simplification of K&R style function declaration tried to simplify a function with parameters without name whose implementation contained ""; {"".
Test cases of this simplification only need basic simplifications done in Tokenizer::tokenize
"
8e711b79258131c2612a5e11ce8a88526def1669,danmar/cppcheck,"Refactoring: there was almost duplicate functions 'isOp'. Created a new Token::isOp function instead.
"
4740bf116f23693d07aec751741ee8c5827efaae,danmar/cppcheck,"Remove unused variable
"
7055526f4accbaba364f273d2a3f8b6173871171,danmar/cppcheck,"Fixed #3672: bitwise and operator in if/while does no longer confuse setVarId code
Improvements to CheckUnusedVar:
- Improved handling of arrays of struct/class instances
- Differ between addressof and bitwise-and operator
- Made some members private to improve encapsulation
- Replaced some simple patterns by direct function calls
- Removed an unnecessary condition
"
e5ebb4931286942ff8274b9fd3f5f5379526b118,danmar/cppcheck,"Added support for sizeof(wchar_t). Improved <Windows.h> type testing for Win64 platform.
"
c116caa7eba17b73679ba2362e57394f8cfa471e,danmar/cppcheck,"Merge branch 'xml2-refactoring'
"
a274cb1015fbfd6c8c3d30ad4152dda273aa1881,danmar/cppcheck,"cleanup headers
"
8b0e481d46c2db0d24a1a34b5f954a5a82171e0d,danmar/cppcheck,"Refactoring: Rename member functions to follow naming guidelines.
"
e017d5a07928fba2836dbcfa96d7ca42b3a4634c,danmar/cppcheck,"refactoring - added 'getErrorMessages' to all check classes
"
fa77f98b1c4dc170430ee51f72f34d66aaf60927,danmar/cppcheck,"Tokenizer: it's possible to set null lower bound for eraseDeadCode when used inside simplifyFlowControl.
Remove now unused 'beginindent' and moved 'goto' simplification together with 'return' group.
"
670c4de8a929f4f035771e05358f507075d40f6d,danmar/cppcheck,"Changed behaviour of Token::is*Op() functions:
- Rename Token::isOp() to Token::isConstOp() (indicating that the operator does _not_ modify the input variables)
- Create new Token::isOp(), returning true also for ++, -- and assignment operators
- Make Token::isExtendedOp() returning also true for all assignment and ++/-- operators
"
4e38627a3d2993e18b01840a06904a6d306dcad6,danmar/cppcheck,"windows.cfg: Improved support for Windows types (ref. https://msdn.microsoft.com/en-us/library/windows/desktop/aa383751(v=vs.85).aspx ).
"
29a1468523bf082ce434d950dd2bceaeecfff277,danmar/cppcheck,"Refactoring: Renamed some member variables: variable -> _variable

"
567c9ae98258f6567990737e810c445940934a35,demisto/content,"make the script system again
"
2c7110b5d844bf3bc7b4e076b3463588b2f52f8d,elabftw/elabftw,"improve responsiveness of dropdown menu on show mode
"
1c530268d130b69ca87fc71c81763f78db73dff1,elnormous/ouzel,"Rename execute to executeOnMainThread
"
e5edb93b4ce90230908c747a05f4fa360c5422cb,elnormous/ouzel,"Get rid of the SoundResource file
"
8b9baab1bede22efe8c13c7f7ef61ead5b27ac9f,elnormous/ouzel,"Rename update thread execute queue and mutex to avoid conflicts with subclasses
"
18f3eaa75d6714f08b9e89fec3069c51d08dcf6a,elnormous/ouzel,"Make constructors explicit
Rename event handlers of samples' scenes
"
43727c6a90baffbdf296073c16f431e25ba0b9fd,elnormous/ouzel,"Rename Vertex to VertexPCT and add VertexPC class
"
34a60fa96f40e5a781e2e4e3cd569a36d1c50769,eranif/codelite,"- Further improvements for to functions without arguments name (e.g. send(int, int, int))
- Closing workspace will automatically display the Welcome page


git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@1996 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
670c4664de3d61aecb9e04267c17f31a54e3078e,eranif/codelite,"use event.GetModifiers instead of event.GetKeyCode to test if a modifier is pressed
"
72b6f99fbc1790aaeb197da4800044b57538389a,eranif/codelite,"When creating new project of type 'wxCrafter' prompt the user if the plugin is not installed
Added patch to wxPG editors.cpp file
Make sure that plugins menu is sorted by the plugin name

git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@5985 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
dc3bfb4f1c46bd3782215c3f36275e6428319989,eranif/codelite,"Merge branch 'master' of ssh://git.code.sf.net/p/codelite/codelitegit

# By Eran
# Via Eran
* 'master' of ssh://git.code.sf.net/p/codelite/codelitegit:
  Changed the title of the 'rename symbol' scope dialog
"
f47f709c8b8906e7fa87450c73ff2a25caf76d5d,eranif/codelite,"SymbolView refactoring
SymbolView: Added support renaming symbol from the context menu

git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@5669 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
8cda304fd83f3c2ac70472943d530f4fc76d2cf3,eranif/codelite,"- Refactor FindResultsTab to respond to Search events directly
- Remove unneeded files findresultscontainer.cpp/.h
- Minor tweak to LexFIF to prepare for using it for other tabs (Replace, Errors)
- Prevent leading spaces from being included in filename hyperlink of Build and Error tabs
- Remove dependency on fixed-size line buffer in LexFIF and LexGCC

git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@2536 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
828b94c786baa07c537fc255a4a2b605a508b500,eranif/codelite,"Improved find-in-files results tab to match the current editor colours
"
d75c13d5f7712cf90641e5cb846400789d779399,eranif/codelite,"Minor performance improvement on Linux
"
d82b2797a3bfb5ae4382d806938ee40f0d68feea,eranif/codelite,"A minor performance improvement for codelite workspace loading time
"
776427ab74d3a5f61a18b02c2b45f21e08793525,eranif/codelite,"moving code-completion branch to trunk

git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@3202 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
20f244344c7108b2bbffa4cf10db0a541bfd185e,eranif/codelite,"- Debugger: added new option to the 'Watches' context menu to allow users to the change the display format per item in the tree
- Debugger: reduced the number of calls made to the debugger to optimize performance
- Debugger: removed the 'Display Format' option from the debugger tip. This functionality is now duplicated (and improved) in the 'Watches' view
- Debugger: added new API to query the debugger about the current frame info (addr, func, line level and file)


git-svn-id: 07d1ce18f737362072a5a2d412d3c7d02fd84b3b@4501 9da81c78-c036-0410-9e1f-a2b0375e4b5a
"
4f81f90d7098e6de5776511aa9cf7ef1cf312d9e,eranif/codelite,"Removed some obsolete code
Ctags code completion: use the search path in the project settings to build the search path for the code completion parser
Workspace: added 2 new API calls: GetActiveProject() and GetProject( name ) both returning ProjectPtr object
"
de0bb0fcd310969c89796d09f0d3e4387f2e3284,forkcms/forkcms,"remove unnecessary ajax-parameters; re-minify CSS/JS
"
0e8e1d715bbabadcbe570c09b4fd3ebc3f86db97,forkcms/forkcms,"improve defaults
"
2052c7bf120172fb6a18e2ca90953592a6810aab,freeciv/freeciv,"Fix the get_defender() error messages:
* remove the assertion at the end of get_defender();
* remove COULD_OCCUPY() macro, replaced by unit_can_take_over();
* move the take over test into test_unit_move_to_tile() and the definition of
'enum unit_move_result';
* miscellaneous cleanup in the AI code, linked with the addition of the 
'unreachableprotects' server setting.

Patch by me with the help of Matthias Pfafferodt (syntron) and Jason Dorje
Short (jdorje).

See gna bug #16775.

[[originally from svn r18226]]
"
0e391a218c42a28c7fe144ba7bdb9e2675108495,freeciv/freeciv,"send_unit_info() cleanup:
* send_unit_info() takes a connection list as first argument;
* the function has no more recursive calls;
* simplification of the tests;
* general review of the calls (notably adding some packets for global observers).

See gna bug #22764

[[originally from svn r26735]]
"
4a1c6ab5447b267d84a1ebe9f25d64ecf76bd72f,freeciv/freeciv,"Remove non do action unit_do_action use.

Asking to be reminded to ask what actions the unit can do to a tile doesn't
change the game world. Stop sending it in the unit_do_action packet.

Asking about actions is done by the client. A unit's action decision state
therefore belongs to it even if it is stored at the server side too. The
same is true for a unit's battle group number. It is also handled client
side.

Client owned unit state is stored in the server so it can be sent to
reconnecting clients, stored in save games and, in cases like action
decision state, written to by the server.

Expand the unit_battlegroup packet to also cover action decision state. It
is therefore used to set more than one kind of unit server side client
owned state. Rename it to unit_sscs_set.

See patch #6819

[[originally from svn r31488]]
"
4f88569016c17aaf7677d1504fd02207cfe8c612,freeciv/freeciv,"Make utype conversion action enabler controlled.

Control the unit type conversion activity with the new action enabler
""Convert Unit"".

Requested by Marko Lindqvist (see gna patch #5605) and by Caedo (see
gna patch #5953)

See hrm Feature #747765
"
cfb0365140805c0d0d0f16b0a05581f853d8d4ac,freeciv/freeciv,"Make airlift action enabler controlled.

Requested by Emmet Hikory <persia>

See patch #7008

[[originally from svn r32103]]
"
a308cf32d74dbcf8d5b029c946978df1d1643149,freeciv/freeciv,"Moved movement code required by autosettlers from ai/aicity.[ch]
to a new file server/advisors/advgoto.[ch]

See gna patch #1804

[[originally from svn r17677]]
"
2c5b31356b65441c568c4d69a6e29eb3edc5bd74,freeciv/freeciv,"Made unit convert times ruleset configurable.

See gna patch #3124

[[originally from svn r20913]]
"
6b119d7c450539e2ab8c0768cf9e85dc5d85f06d,freeciv/freeciv,"Split Papuan and Papua New Guinean nations. See Gna patch #2658

[[originally from svn r19636]]
"
06b0f5ec5233591ca6839b417f7ddcc50a8c034b,freeciv/freeciv,"Copied gtk3-client theme as separate gtk3x-client theme.

See patch #7197

[[originally from svn r32625]]
"
3323ade34df674c12f5e1d7b70a6d418242d3d2c,fthomas/refined,"Support a richer encoding of validation results

This commit is an important step towards fixing #14:

- Change all predicates so they can be represented as data. That means
  `trait`s are now `case class`es that can hold values of their type
  parameters.

- Add a `Result[A]` ADT (with cases `Passed` and `Failed`) that
  represents the result of a validation against a type-level predicate.
  A `Result` contains some detail about the validation of type `A`
  which allows arbitrary nested results.

- Replace the `Predicate` type class with `api.Validate`. `Validate`'s
  main function is `validate` which has type `T => Result[R]` where `T`
  is the type of the value that is validated and `R` (which is an
  abstract type member of `Validate`) represents the detail of the
  validation result. For simple (non-nested) predicates `R` equals the
  type of the predicate `P`.

It also contains some cleanup:

- Move `InferenceRule`, `Refined`, and `RefTyp` into the new `api`
  package.

- Rename `InferenceRule` to `Inference`.

- Add a `internal.Resources` object that contains all user-visible
  strings.
"
9e326d9074a260d8b51cd8ca8897a767e09d18e1,gatling/gatling,"Merge pull request #985 from excilys/check-refacto

Refactor Checks with Validation"
f2b6611c5e4a4748ceb18e24b6e6e24dddd773e8,gatling/gatling,"Rename Verification into Matcher
"
b6c2bb704a3e7b4df98401ea21d2a517f8af6fc1,gatling/gatling,"minor clean up
"
8477246bdcd17e8cc80b9cd855733e6b695e7a42,gatling/gatling,"Remove useless abstractions
"
ea87d051eb4cd927eecdd93a2489cf9c656c5edf,gatling/gatling,"Minor clean up after #575
"
1eea47da9c6f59617c1613d5389d233366da6918,gatsbyjs/gatsby,"[v2] Upgrade Babel from 7.0.0-beta.52 to 7.0.0 stable (fixing Windows tests) (#7655)

* Upgrade to Babel 7.0.0-rc.3

* Update config options and snapshots

* Fix tests on Windows

* Fix React Babel preset and update snapshots

* Upgrade Babel to 7.0.0 (stable)

* Allow decorators before export

* Remove unnecessary polyfill

* Use caret ranges for Babel deps

* Remove unneeded dependency
"
a74dc0e9c8b11c36f191486ec6f9a179f74c2aa1,gatsbyjs/gatsby,"Move creating history in dev to separate module so doesn't get redone on HMR fixes #1966 (#2110)

* Move creating history in dev to separate module so doesn't get redone on HMR fixes #1966 #2011

* Fix format script so formats cache-dir
"
dded86eb8d61ff4e58d2c79101eb4999694ba8b0,graknlabs/grakn,"Various cleanups as a result of trying to remove a concurrency issue. (#288)

* fixed a bug in graql compute query and implemented syntax for statistics

* code analysis and pull request issues

* hotfix for compile failure

* fixed the scaling test

* first concurrency test done

* simplified degree and persist

* fixed test

* put ignore back

* hotfix

* hotfix to compile tests

* another hotfix

* another hotfix
"
e5aee38c70606ffddbc5b3a4a4127733c816a89a,graknlabs/grakn,"Deep clone cache to avoid transactions from affecting central cache. (#1152)

* Create test showing the need for a deep clone mechanisim

* WIP

* Deep cloning mechanisim to avoid transactions from breaking main concept cache

* Minor cleanup

* Correct test

* Getting rid of commented code
"
6c2f73c5d118b54ac9eebe1677f13adbb8655531,graknlabs/grakn,"[Stable] Equivalence overhaul and update (#2890)

* WIP

* add atomic equivalence class

* simplify resource atom equivalence checks

* define equivalence on predicates

* slight cleanup
"
6375db19c5b68446216d06647c4f54104070b332,graknlabs/grakn,"Issues in tests, renaming
"
44f312083236b8349d76e8e29d015c6bf6327149,graknlabs/grakn,"A little bit more test cleanup.  (#2350)

* Get rid of GraknTestSetup

* Cleanup EmbeddedCassandra

* Test rules now all called Context for consitency

* Move all test contexts into own package
"
c9f20089315767954bd9b8de00023a85e6d0ee22,graknlabs/grakn,"Temporarily merged //grakn-graql with //server (#4594)

# Why is this PR needed?

We're in the process of rearchitecting Grakn's Engine (aka. Server) and Graql. In order to flexibly shape the internal architecture, we need to merge all the Server + Graql code base into one package, temporarily. From there, we extract one submodule at a time.

# What does the PR do?

1. Moved all back-end code into either `grakn.core.sever` or `grakn.core.graql` sub-package.
2. Merged `grakn.core.server` and `grakn.core.graql` into one package/module `server`
3. Restructured `test-integration` sub-packages to be neater and matches the sub-packages of `grakn.core.server` and `grakn.core.graql`.
4. Improved up CircleCI workflow:
    - removed `install_yarn` from all jobs
    - removed `install_node` from all jobs except for `workbase` tests
    - removed `prepare_apt_repositories` from most jobs (should be all; will follow up)
    - split out`test-integration-reasoner` into its own parallel job."
e5d1fa6ad827c39d40bff06b7cefe5d60a65054e,graknlabs/grakn,"Move System Keyspace (#1795)

* Remove unused class

* Moved system keyspace into engine

* finish moving system keyspace to engine

* Fix compilation errors

* Move SystemKeyspace into EngineGraknGraphFactory

* Use correct URI in EngineGraknGraphFactory

* Reenable disabled system keyspace test

* Added exception, system controller test

* Reset version at end of SystemGraphTest

* Fix broken SystemKeyspaceTest

* Remove unused imports

* Remove unneeded overriding method

* Remove unused imports

* Use correct TaskManager constructor in test

* Fix Graql Controller GET tests

* Commiting after deleting keyspaces

* Remove no longer relevant commit log controller test

* Remove extra TODO
"
f304d20496273044387d74697f6850a61ed827b8,graknlabs/grakn,"Remove property mapper and merge with properties (#944)

* WIP

* removed property mapper

* rename query

* cleanup

* cleanup up constructors
"
a7775dd452a400bc28e56febdb32c98665cddf24,graknlabs/grakn,"HAL refactoring - remove GET endpoint (#2304)

* Update grakn-dashboard to latest verison

* Fixed HAL parser

* Started changing HALPrinter.java to detect inferred concepts - to be finished

* Removing GET deprecated endpoint - recognising inferred relationships

* Fixing  HALPrinter

* Fixing explanation endpoint and finally deleting old hacky code

* Working on explanation in HALBuilder

* Made explanation work one level at the time

* Removed settings to make engine run from IntelliJ

* atom rewrite cleanup

* cleaning code

* minor changes to explain thing

* fixing tests

* Don't automatically return vars with labels

* Add TODO (we love TODOs)

* finished adding tests

* Removed generated-relation in dashboard and fixed tests

* Updated endpoint calls in dashboard

* Removed reduntant setting in grakn properties

* Fixed queryparser test

* Fixed dashboardcontroller tests

* merging conflicts

* Fixed commit error
"
0473403848777e4565c2e4512772bc8dbbf75c3d,graknlabs/grakn,"Reduce number of db lookups (#1068)

* less db lookups when doing materialisation, optimised joins

* cleanup
"
740abfe737c5b8e2fb8499df72ef9b37b1d46c7d,graknlabs/grakn,"[Stable] Correct atom decomposition for conjunctions (#2899)

* add rewrite for rule conj

* cleanup atom decomposition

* fix retrieval of potential rules on ontological atoms
"
d9ac06a537f20abb7dfe6601d6fcd754f43146c5,graknlabs/grakn,"Faster joins with Inverse answer lookup (#1187)

* small fix for differential join

*  cleanup

* inverse answer retrieval

* cleanup

* cleanup

* cleanup

* updated cache
"
ef3ed9b3648846b48d37762bc19434bbd4ecdd86,graknlabs/grakn,"Add findbugs maven plugin (#973)

* Add basic findbugs configuration

* Refactor code to pass findbugs

* Replace `Cloneable` interface with `copy` method

* Fix bug with using static date format

* Use `StringBuilder` instead of concatenating `String`

* Replace `keySet` iteration with `entrySet`

* Remove redundant guava dependencies

* Fix findbugs issue with unused return value

* Fix mistake with `AtomicQuery#equals`

* Add implementation of abstract method

* Use `Instant` instead of `Date` in tasks

* Use `%n` instead of `\n` in format string

* Make sure `FileInputStream` instances are always closed

* Make sure a lock is released

* Don't do unnecessary unboxing

* Add default switch case

* Use string builder for string concatenation in a loop

* stop `TaskState` being `Serializable`

* Add `removeInstance` static methods

* Handle null cases

* Add default case to switch statement

* Convert `Json` to `String` correctly

* Fixes after rebase

* Fix minor issue in graql components

* Add hashcode method to ReasonerAtomicQuery. Get Kasper to double check this definition

* Resolve bad locking in fctory

* Specify default encoding in SystemKeyspace

* Specify default encoding in EngineCommunicator

* Add specific encoding to engine

* Remove synchronisatin from GraknStateSTorage

* Sort our encoding in graql shell

* Make `COMMAND` immutable

* Add default to switch case

* Remove Ctrl-C handling code

This used internal sun classes to operate and didn't work very well.

* Specify default encoding for stdout

* Refactor history file creation

* Change message handling in graql shell to occur synchronously

* Add explicit encodings to migration

* Fix bug with mix-up of seconds and milliseconds

* Fix bug with incorrect arguments to `Duration.between`
"
66c5ef6396e0afc1c0a1bf3dcf5cd7a3cb989f61,graknlabs/grakn,"Cleaning up exceptions a little.  (#1911)

* Cleanup some error messages

* Cleanup even more tests messages

* Get rid of a bunch of unused error messages
"
25ffe2343393198d163892f45f11b2cb53b7727e,hande-qmc/hande,"Merge branch 'refactor/fciqmc_ccmc'
"
dec3b88fe9b93dc335c1fb4ca4e3f49221ba3c2a,hande-qmc/hande,"Use D0_population rather than D0_population_cycle in select_ref_det

D0_population is averaged over the report loop (as claimed in the output
message) whilst D0_population_cycle is not.  Further, D0_population is
available on all processors (as it's reduced in update_energy_estimators)
whereas D0_population_cycle is only stored on the processor containing
the reference.

Apart from a consistency issue, this made some processors think the
reference should be updated and others not, leading to a deadlock...
"
4427e41f7d1594eabaafd154e7daa522a04ceab9,hande-qmc/hande,"Refactored pg_sym, momentum_sym_read_in and momentum_symmetry.
"
b997bb6484f879419723e3e1b740ef071b026366,hande-qmc/hande,"in the midst of compiling, made small updates to the other files to keep it consistent with my code
"
8e2ee3262540b116b5f5ffa7bc9c3a8314d65423,hande-qmc/hande,"Split update_dmqmc_estimates into separate routines performing communication and updating shift, and other minor changes.
"
041e144831adad9b9d775845b09449491e38c61f,hande-qmc/hande,"Cleaned up code and changed excit_gen_cauchy_schwarz_occ_ref option to excit_gen_cauchy_schwarz.
"
d5d719e5a065d0bf2560a0115eff6d4b7d387052,hashicorp/nomad,"Merge pull request #3812 from hashicorp/autopilot-config-change

Refactor redundancy_zone/upgrade_version out of client meta"
96753dcbcb54e8d9bfd703b24360b9e759b6163a,hashicorp/nomad,"Improve PortMap handling and simplify Builder creation
"
3e713c61ac6f284f37b17c442f18e5bebe8524c5,hashicorp/vault,"Push a lot of logic into Router to make a bunch of it nicer and enable a
lot of cleanup. Plumb config and calls to framework.Backend.Setup() into
logical_system and elsewhere, including tests.
"
87963f9db241e00215df24fcaa522b0685a2b53b,hashicorp/vault,"vault: minor rekey cleanups
"
dca0d703aa103017a4aa829edd2343d2c63ed8b9,hashicorp/vault,"Added logger to token store and logs to tidy function
"
cdb9f1fbaec06418332e2e2b87dad75855a19abb,kbase/narrative,"fix data object display in narrative
the method of inserting python code for data objects conflicted with app
cell outputs. The code was unified, and data object display moved into
it's own cell extension (nbextensions/dataCell). This simplifies the
implementation of data cells, while still retaining the common object
vis widget invoker.
Along the way some python interop improvements
"
b579edd9e0a10a1326b623a57abdad21eb102e22,kbase/narrative,"Merge pull request #662 from briehl/vis-cell-refactor

[WIP] Prepping for merge upstream..."
904cb93409bca2f12c1d1e4c40115b8394674028,kbase/narrative,"Added default output, some cleanup.
"
6195418422bb6fc6b87ff117f858380bb2c54cdc,kbase/narrative,"Merge remote-tracking branch 'kbase/vis-cell-refactor' into vis-cell-slashes
"
9aaa23097c00ced8ef520d80f2621ec25d61d5fd,kiwiirc/kiwiirc,"Improved highlight handling and custom highlight words
"
51e3c70159a3743ed5d1970fa863ddf73efcaf88,libMesh/libmesh,"Clean up gcov outputs during ""make clean""
"
6a095d08512720c3935629878bee74bd228eec58,libvirt/libvirt,"Rename json.{c,h} to virjson.{c,h}
"
f4c3acdf35cb473197e788c9d0c5302cadd54acd,libvirt/libvirt,"Make QEMU cgroups use configurable

 * qemud/libvirtd_qemu.aug, qemud/test_libvirtd_qemu.aug,
   src/qemu.conf: Add 'cgroups_controllers' and 'cgroups_device_acl'
   parameters
 * src/qemu_conf.h, src/qemu_conf.c: Load & parse configuration params
   for cgroups
 * src/qemu_driver.c: Only use cgroups controllers that are activated,
   and use configured device whitelist instead of default, if set.
"
f95f1ba4c0f4a06c66b2d9af0d4816ecb25ffb97,libvirt/libvirt,"virsh: split out virsh-volume.c

Last of the file splits.

* tools/virsh-volume.h: New file.
* tools/Makefile.am (virsh_SOURCES): Build it.
* tools/virsh.c: Use new header.
* tools/virsh-volume.c: Likewise.
(vshCommandOptVolBy): Fix flag usage.
"
4857b9c3a9fbc366e4dc48d4cdf164866da54e76,libvirt/libvirt,"Rename event.{c,h} to virevent.{c,h}

Since the event APIs are now in the public header, no internal
code should include virevent.h
"
b38da58423f44035e259e18a35853c16267ec83a,libvirt/libvirt,"Make tests independant of system page size

Some code paths have special logic depending on the page size
reported by sysconf, which in turn affects the test results.
We must mock this so tests always have a consistent page size.
"
156133597dee6e79768c267b2fb4b5ebff5998f0,libvirt/libvirt,"tests: teach syntax-check that virDomainDefFree has free-like semantics

* cfg.mk (useless_free_options): Add virDomainDefFree to the list
of free-like functions.
* src/test/test_driver.c (testDomainCreateXML): Remove useless-if-
before-virDomainDefFree.
* src/conf/domain_conf.c (virDomainAssignDef): Likewise
"
4f3db09bd5f1fdd3374f1bd73d5e648223de6b97,libvirt/libvirt,"qemu: iothread: Reuse qemuProcessSetupIOThread in iothread hotplug

Since majority of the steps is shared, the function can be reused to
simplify code.

Similarly to previous path doing this same for vCPUs this also fixes the
a similar bug (which is not tracked).
"
421a2009873c82a76775919395dbd077e12c9fdd,libvirt/libvirt,"virsh: Add domdisplay cmd for VNC, SPICE and RDP

v2:
- Refactored to use virBuffer
- Refactored to use virXPath wrappers
- Added support for tls-port and password for SPICE
- Added optional flag to disable SPICE password to the URI
- Added support for RDP
- Fixed code reviews

Add a new 'domdisplay' command that provides a URI for VNC, SPICE and
RDP connections. Presently the 'vncdisplay' command provides you with
the port info that QEMU is listening on but there is no counterpart for
SPICE and RDP. Additionally this provides you with the bind address as
specified in the XML, which the existing 'vncdisplay' lacks. For SPICE
connections it supports secure and unsecure channels and optionally
providing the password for the SPICE channel.

Signed-off-by: Doug Goldstein <8172f793ca553050868d487fd13b508d19cae503@cardoe.com>
"
766de43533b7ae2406804e92e83e3ad67df6495d,libvirt/libvirt,"Move all the QEMU migration code to a new file

The introduction of the v3 migration protocol, along with
support for migration cookies, will significantly expand
the size of the migration code. Move it all to a separate
file to make it more manageable

The functions are not moved 100%. The API entry points
remain in the main QEMU driver, but once the public
virDomainPtr is resolved to the internal virDomainObjPtr,
all following code is moved.

This will allow the new v3 API entry points to call into the
same shared internal migration functions

* src/qemu/qemu_domain.c, src/qemu/qemu_domain.h: Add
  qemuDomainFormatXML helper method
* src/qemu/qemu_driver.c: Remove all migration code
* src/qemu/qemu_migration.c, src/qemu/qemu_migration.h: Add
  all migration code.
"
9cdd9ea20e89c8a7b5a67b52d22cc45b08072f65,libvirt/libvirt,"Refactor virDomainHostdevFind method

Move the code for matching hostdev instances out of virDomainHostdevFind
and into virDomainHostdevMatch method, which in turn calls out to other
helper methods depending on the type of hostdev.

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
7cc1491d1075eb8abc9e3b6cef58d3a769505009,libvirt/libvirt,"Various monitor improvements for migration.

The upcoming tunnelled migration needs to be able to set
a migration in progress in the background, as well as
be able to cancel a migration when a problem has happened.
This patch allows for both of these to properly work.

Signed-off-by: Chris Lalancette <60b62644009db6b194cc0445b64e9b27bb26433a@redhat.com>
"
5ed5783bc7aed3674d2bf092de3cb4d2ff037bbe,libvirt/libvirt,"Convert Xen domain lookup driver methods to use virDomainDefPtr

Introduce use of a virDomainDefPtr in the domain lookup
APIs to simplify introduction of ACL security checks.
The virDomainPtr cannot be safely used, since the app
may have supplied mis-matching name/uuid/id fields. eg
the name points to domain X, while the uuid points to
domain Y. Resolving the virDomainPtr to a virDomainDefPtr
ensures a consistent name/uuid/id set.

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
3d0130cbcc7a70e3119dd7f4a1d4a5b484dc2823,libvirt/libvirt,"cpumap: optimize for clients that don't need online count

It turns out that calling virNodeGetCPUMap(conn, NULL, NULL, 0)
is both useful, and with Viktor's patches, common enough to
optimize.  Since this interface hasn't been released yet, we
can change the RPC call.

A bit more background on the optimization - learning the cpu count
is a single file read (/sys/devices/system/cpu/possible), but
learning the number of online cpus can possibly trigger a file
read per cpu, depending on the age of the kernel, and all wasted
if the caller passed NULL for both arguments.

* src/nodeinfo.c (nodeGetCPUMap): Avoid bitmap when not needed.
* src/remote/remote_protocol.x (remote_node_get_cpu_map_args):
Supply two separate flags for needed arguments.
* src/remote/remote_driver.c (remoteNodeGetCPUMap): Update
caller.
* daemon/remote.c (remoteDispatchNodeGetCPUMap): Likewise.
* src/remote_protocol-structs: Regenerate.
"
82ef8c49ae990e84886f1239e72ff1759d6007a1,libvirt/libvirt,"make: split PHyp driver build rules into phyp/Makefile.inc.am

Signed-off-by: Daniel P. Berrangé <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
014afe6501d12cc8bc90ccf4623d937174ff0f08,libvirt/libvirt,"Rename lxc_protocol.x to lxc_monitor_protocol.x

To avoid confusion between the LXC driver <-> controller
monitor RPC protocol and the libvirt-lxc.so <-> libvirtd public
RPC protocol, rename the former to lxc_monitor_protocol.x

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
958499b0c12072e36d20effeddf4a400d9919bb8,libvirt/libvirt,"Turn virNetServer* into virObject instances

Make all the virNetServer* objects use the virObject APIs
for reference counting

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
5a1ccaeb00d3cba7727b7022587f77b4fd2edd2b,libvirt/libvirt,"tests: qemu: More aarch64 virtio and pci tests

Clarify the point of some of the test cases by renaming them. Add more
xml2xml tests.
"
74430fe36456db5993e43a65558c80ef8b0c590b,libvirt/libvirt,"conf: drop redundant parameter to chain lookup

The original chain lookup code had to pass in the starting name,
because it was not available in the chain.  But now that we have
added fields to the struct, this parameter is redundant.

* src/util/virstoragefile.h (virStorageFileChainLookup): Alter
signature.
* src/util/virstoragefile.c (virStorageFileChainLookup): Adjust
handling of top of chain.
* src/qemu/qemu_driver.c (qemuDomainBlockCommit): Adjust caller.
* tests/virstoragetest.c (testStorageLookup, mymain): Likewise.

Signed-off-by: Eric Blake <a9da18479c871fe903d9590822cfe2629c6a4d11@redhat.com>
"
6889f33e8b6786d58faea75d87ae56937580cdd5,libvirt/libvirt,"qemu: simplify use of HAVE_YAJL

Rather than making all clients of monitor commands that are JSON-only
check whether yajl support was compiled in, it is simpler to just
avoid setting the capability bit up front if we can't use the capability.

* src/qemu/qemu_capabilities.c (qemuCapsComputeCmdFlags): Only set
capability bit if we also have yajl library to use it.
* src/qemu/qemu_driver.c (qemuDomainReboot): Drop #ifdefs.
* src/qemu/qemu_process.c (qemuProcessStart): Likewise.
* tests/qemuhelptest.c (testHelpStrParsing): Pass test even
without yajl.
* tests/qemuxml2argvtest.c (mymain): Simplify use of json flag.
* tests/qemuxml2argvdata/qemuxml2argv-disk-drive-error-*.args:
Update expected results to match.
"
58355a5bfbc3ff76eeab3fdfc4d60b70439ef286,libvirt/libvirt,"Move QEMU driver to src/qemu/

* src/qemu_conf.c, src/qemu_conf.h, src/qemu_driver.c,
  src/qemu_driver.h: Move to src/qemu/
* daemon/qemud.c, src/Makefile.am, tests/qemuargv2xmltest.c,
  tests/qemuhelptest.c, tests/qemuxml2argvtest.c,
  tests/qemuxml2xmltest.c: Adapt for changed paths
"
d7f53c7b97475ac9db8cb45aa5c314931f20d001,libvirt/libvirt,"maint: use LGPL correctly

Several files called out COPYING or COPYING.LIB instead of using
the normal boilerplate.  It's especially important that we don't
call out COPYING from an LGPL file, since COPYING is traditionally
used for the GPL.  A few files were lacking copyright altogether.

* src/rpc/gendispatch.pl: Add missing copyright.
* Makefile.nonreentrant: Likewise.
* src/check-symfile.pl: Likewise.
* src/check-symsorting.pl: Likewise.
* src/driver.h: Likewise.
* src/internal.h: Likewise.
* tools/libvirt-guests.sh.in: Likewise.
* tools/virt-pki-validate.in: Mention copyright in comment, not just code.
* tools/virt-sanlock-cleanup.in: Likewise.
* src/rpc/genprotocol.pl: Spell out license terms.
* src/xen/xend_internal.h: Likewise.
* src/xen/xend_internal.c: Likewise.
* Makefile.am: Likewise.
* daemon/Makefile.am: Likewise.
* docs/Makefile.am: Likewise.
* docs/schemas/Makefile.am: Likewise.
* examples/apparmor/Makefile.am: Likewise.
* examples/domain-events/events-c/Makefile.am: Likewise.
* examples/dominfo/Makefile.am: Likewise.
* examples/domsuspend/Makefile.am: Likewise.
* examples/hellolibvirt/Makefile.am: Likewise.
* examples/openauth/Makefile.am: Likewise.
* examples/python/Makefile.am: Likewise.
* examples/systemtap/Makefile.am: Likewise.
* examples/xml/nwfilter/Makefile.am: Likewise.
* gnulib/lib/Makefile.am: Likewise.
* gnulib/tests/Makefile.am: Likewise.
* include/Makefile.am: Likewise.
* include/libvirt/Makefile.am: Likewise.
* python/Makefile.am: Likewise.
* python/tests/Makefile.am: Likewise.
* src/Makefile.am: Likewise.
* tests/Makefile.am: Likewise.
* tools/Makefile.am: Likewise.
* configure.ac: Likewise.

Signed-off-by: Eric Blake <a9da18479c871fe903d9590822cfe2629c6a4d11@redhat.com>
"
282fe1f08c89189e36142fc2d12bae0175038bdd,libvirt/libvirt,"snapshot: prevent stranding snapshot data on domain destruction

Just as leaving managed save metadata behind can cause problems
when creating a new domain that happens to collide with the name
of the just-deleted domain, the same is true of leaving any
snapshot metadata behind.  For safety sake, extend the semantic
change of commit b26a9fa9 to also cover snapshot metadata as a
reason to reject undefining an inactive domain.  A future patch
will make sure that shutdown of a transient domain automatically
deletes snapshot metadata (whether by destroy, shutdown, or
guest-initiated action).  Management apps of transient domains
should take care to capture xml of snapshots, if it is necessary
to recreate the snapshot metadata on a later transient domain
with the same name and uuid.

This also documents a new flag that hypervisors can choose to
support as a shortcut for taking care of the metadata as part of
the undefine process; however, nontrivial driver support for these
flags will be deferred to future patches.

Note that ESX and VBox can never be transient; therefore, they
do not have to worry about automatic cleanup after shutdown
(the persistent domain still remains); likewise they never
store snapshot metadata, so the undefine flag is trivial.
The nontrivial work remaining is thus in the qemu driver.

* include/libvirt/libvirt.h.in
(VIR_DOMAIN_UNDEFINE_SNAPSHOTS_METADATA): New flag.
* src/libvirt.c (virDomainUndefine, virDomainUndefineFlags):
Document new limitations and flag.
* src/esx/esx_driver.c (esxDomainUndefineFlags): Trivial
implementation.
* src/vbox/vbox_tmpl.c (vboxDomainUndefineFlags): Likewise.
* src/qemu/qemu_driver.c (qemuDomainUndefineFlags): Enforce
the limitations.
"
9684bb11fd3832582308d0bcdb649041fd6584e2,libvirt/libvirt,"qemu: Fix crash in migration of graphics-less guests.

Commit 7f15ebc7a2b599ab10dbc15bca6f823591213e67 introduced a bug
happening when guests without a <graphics> element are migrated.
The initialization of listenAddress happens unconditionally
from the cookie even if the cookie->graphics pointer was NULL.
Moved the initialization to where it is safe.

Signed-off-by: Viktor Mihajlovski <a96a137ca8976b5ff3114c85be7aeb3b6464dad7@linux.vnet.ibm.com>
"
a7f84cb1ee037c2ea6c803450eb692d8030b4227,libvirt/libvirt,"qemu: Alter error path cleanup for qemuDomainAttachVirtioDiskDevice

Based on recent review comment - rather than have a spate of goto failxxxx,
change to a boolean based model. Ensures that the original error can be
preserved and cleanup is a bit more orderly if more objects are added.
"
4d7eb903119ef61b58ced29432f4933b372e00ab,libvirt/libvirt,"qemu: chardev: Extract more information about character devices

Improve the monitor function to also retrieve the guest state of
character device (if provided) so that we can refresh the state of
virtio-serial channels and perhaps react to changes in the state in
future patches.

This patch changes the returned data from qemuMonitorGetChardevInfo to
return a structure containing the pty path and the state for all the
character devices.

The change to the testsuite makes sure that the data is parsed
correctly.
"
5745dc123a4798db36dd0c78c764cc29a9cf71ce,libvirt/libvirt,"qemu/rbd: improve rbd device specification

This improves the support for qemu rbd devices by adding support for a few
key features (e.g., authentication) and cleaning up the way in which
rbd configuration options are passed to qemu.

An <auth> member of the disk source xml specifies how librbd should
authenticate. The username attribute is the Ceph/RBD user to authenticate as.
The usage or uuid attributes specify which secret to use. Usage is an
arbitrary identifier local to libvirt.

The old RBD support relied on setting an environment variable to
communicate information to qemu/librbd.  Instead, pass those options
explicitly to qemu.  Update the qemu argument parsing and tests
accordingly.

Signed-off-by: Sage Weil <6dd34506bbd5e58221bbb3e4732d97c91f02277b@newdream.net>
Signed-off-by: Josh Durgin <51652c783f70f5b272ebd02f1fd20d3af7a2449f@dreamhost.com>
"
043d702f02ba37e7027918ec9e50b0330858ea12,libvirt/libvirt,"use virAsprintf instead of asprintf
"
04d9510f509fbdb0f0b7264b3224a8cd1d643f66,libvirt/libvirt,"Rename command.{c,h} to vircommand.{c,h}
"
5da9c98067846538bc1216179ea57c07f8282ef7,libvirt/libvirt,"Introduce device aliases

This patch introduces the support for giving all devices a short,
unique name, henceforth known as a 'device alias'.  These aliases
are not set by the end user, instead being assigned by the hypervisor
if it decides it want to support this concept.

The QEMU driver sets them whenever using the -device arg syntax
and uses them for improved hotplug/hotunplug. it is the intent
that other APIs (block / interface stats & device hotplug) be
able to accept device alias names in the future.

The XML syntax is

   <alias name=""video0""/>

This may appear in any type of device that supports device info.

* src/conf/domain_conf.c, src/conf/domain_conf.h: Add a 'alias'
  field to virDomainDeviceInfo struct & parse/format it in XML
* src/libvirt_private.syms: Export virDomainDefClearDeviceAliases
* src/qemu/qemu_conf.c: Replace use of ""nic_name"" field with the
  standard device alias
* src/qemu/qemu_driver.c: Clear device aliases at shutdown
"
575914cf3dd920cc1532693936981c8e46f7d26f,libvirt/libvirt,"qemu: avoid adding """" in smbios arguments

The log lists things like -smbios type=1,vendor=""Red Hat"", which
is great for shell parsing, but not so great when you realize that
execve() then passes those literal """" on as part of the command
line argument, such that qemu sets SMBIOS with extra literal quotes.

The eventual addition of virCommand is needed before we have the API
to shell-quote a string representation of a command line, so that the
log can still be pasted into a shell, but without inserting extra
bytes into the execve() arguments.

* src/qemu/qemu_conf.c (qemuBuildSmbiosBiosStr)
(qemuBuildSmbiosSystemStr): Qemu doesn't like quotes around uuid
arguments, and the remaining quotes are passed literally to
smbios, making <smbios mode='host'/> inaccurate.  Removing the
quotes makes the log harder to parse, but that can be fixed later
with virCommand improvements.
* tests/qemuxml2argvdata/qemuxml2argv-smbios.args: 'Fix' test; it
will need fixing again once virCommand learns how to shell-quote a
potential command line.
"
e9364d9f2a3079f483fdff7026bbd752081cb526,libvirt/libvirt,"Storage pool duplicate UUID/name checking

The storage pool driver is not doing correct checking for
duplicate UUID/name values. This introduces a new method
virStoragePoolObjIsDuplicate, based on the previously
written virDomainObjIsDuplicate.

* src/conf/storage_conf.c, src/conf/storage_conf.c,
  src/libvirt_private.syms: Add virStoragePoolObjIsDuplicate,
* src/storage/storage_driver.c: Call virStoragePoolObjIsDuplicate
  for checking uniqueness of uuid/names
"
1074fc5061ad7ca41fb9a89f63bdc2bcef88d0e1,libvirt/libvirt,"qemu: refactor qemuBuildControllerDevStr to eliminate future duplicate code

The PCI case of the switch statement in this function contains another
switch statement with a case for each model. Currently every model
except pci-root and pcie-root has a check for index > 0 (since only
those two can have index==0), and the function should never be called
for those two anyway. If we move the check for !pci[e]-root to the top
of the pci case, then we can move the check for index > 0 out of the
individual model cases. This will save repeating that check for the
three new controller models about to be added.
"
6e76738e54060c4d5df4274e26a92a077fc2a3f2,libvirt/libvirt,"build: fix build on RHEL-6

GCC in RHEL-6 complains about listen:

../../src/conf/domain_conf.c:23718: error: declaration of 'listen' shadows a global declaration [-Wshadow]
/usr/include/sys/socket.h:204: error: shadowed declaration is here [-Wshadow]

This renames all the listen to gListen.

Signed-off-by: Pavel Hrdina <d4772d05997b8abf035041e3b4f4996380ea7e7a@redhat.com>
"
4f6ed6c33ae7dd5d166cffd67e360773e7fa3c28,libvirt/libvirt,"Rename all domain list APIs to have virDomainObjList prefix

The APIs names for accessing the domain list object are
very inconsistent. Rename them all to have a standard
virDomainObjList prefix.
"
acff2d11ac4fe1fe97d06aa9d21e77408e0ba688,libvirt/libvirt,"Given code like if (foo) free (foo); remove the useless ""if (foo) "" part.

Likewise, given if (foo != NULL) free (foo); remove the useless ""if"" test.

* proxy/libvirt_proxy.c: Remove unnecessary ""if"" test before free.
* python/generator.py: Likewise.
* qemud/qemud.c: Likewise.
* src/buf.c: Likewise.
* src/conf.c: Likewise.
* src/hash.c: Likewise.
* src/iptables.c: Likewise.
* src/libvirt.c: Likewise.
* src/openvz_conf.c: Likewise.
* src/qemu_conf.c: Likewise.
* src/qemu_driver.c: Likewise.
* src/remote_internal.c: Likewise.
* src/test.c: Likewise.
* src/virsh.c: Likewise.
* src/virterror.c: Likewise.
* src/xen_internal.c: Likewise.
* src/xen_unified.c: Likewise.
* src/xend_internal.c: Likewise.
* src/xm_internal.c: Likewise.
* src/xml.c: Likewise.
* src/xmlrpc.c: Likewise.
* src/xs_internal.c: Likewise.
* tests/testutils.c: Likewise.
* tests/xencapstest.c: Likewise.
* tests/xmconfigtest.c: Likewise.
"
29293930a9842d76b04a9a62daae119587246e74,libvirt/libvirt,"conf: make hostdev info a separate object

In order to allow for a virDomainHostdevDef that uses the
virDomainDeviceInfo of a ""higher level"" device (such as a
virDomainNetDef), this patch changes the virDomainDeviceInfo in the
HostdevDef into a virDomainDeviceInfoPtr. Rather than adding checks
all over the code to check for a null info, we just guarantee that it
is always valid. The new function virDomainHostdevDefAlloc() allocates
a virDomainDeviceInfo and plugs it in, and virDomainHostdevDefFree()
makes sure it is freed.

There were 4 places allocating virDomainHostdevDefs, all of them
parsers of one sort or another, and those have all had their
VIR_ALLOC(hostdev) changed to virDomainHostdevDefAlloc(). Other than
that, and the new functions, all the rest of the changes are just
mechanical removals of ""&"" or changing ""."" to ""->"".
"
023ea2a86938a6ecb5323a561f422c4951c8bf39,libvirt/libvirt,"conf: rename <vsock><source> to <vsock><cid>

To avoid the <source> vs. <target> confusion,
change <source auto='no' cid='3'/> to:
<cid auto='no' address='3'/>

Signed-off-by: Ján Tomko <4cab11cfb98d3c937327354a78eb07dbb6ee2bc6@redhat.com>
Suggested-by: Daniel P. Berrangé <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
Acked-by: Peter Krempa <2cf5c04c61aa466e4a47bfedc747d17279c72ffc@redhat.com>
Reviewed-by: Daniel P. Berrangé <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
0778c0be8deec25c8f040d4bdeddee50cbb26234,libvirt/libvirt,"Rename tunable event constants

For the new VIR_DOMAIN_EVENT_ID_TUNABLE event we have a bunch of
constants added

   VIR_DOMAIN_EVENT_CPUTUNE_<blah>
   VIR_DOMAIN_EVENT_BLKDEVIOTUNE_<blah>

This naming convention is bad for two reasons

  - There is no common prefix unique for the events to both
    relate them, and distinguish them from other event
    constants

  - The values associated with the constants were chosen
    to match the names used with virConnectGetAllDomainStats
    so having EVENT in the constant name is not applicable in
    that respect

This patch proposes renaming the constants to

    VIR_DOMAIN_TUNABLE_CPU_<blah>
    VIR_DOMAIN_TUNABLE_BLKDEV_<blah>

ie, given them a common VIR_DOMAIN_TUNABLE prefix.

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
ee3da892f2817796a8886e2927f657f3fc6e9203,libvirt/libvirt,"conf: Refactor emulatorpin handling

Store the emulator pinning cpu mask as a pure virBitmap rather than the
virDomainPinDef since it stores only the bitmap and refactor
qemuDomainPinEmulator to do the same operations in a much saner way.

As a side effect virDomainEmulatorPinAdd and virDomainEmulatorPinDel can
be removed since they don't add any value.
"
7ba6a6f973624e41deda544dd73bfd467e74a06e,libvirt/libvirt,"storage: Store relative path only for relatively backed storage

Due to various refactors and compatibility with the virstoragetest the
relPath field of the virStorageSource structure was always filled either
with the relative name or the full path in case of absolutely backed
storage. Return its original purpose to store only the relative name of
the disk if it is backed relatively and tweak the tests.
"
e84b19316a72aa969286f9c41bc0e0b7d005f754,libvirt/libvirt,"maint: Rename xmlconf to xmlopt and virDomainXMLConfig to virDomainXMLOption

This patch is the result of running:

for i in $(git ls-files | grep -v html | grep -v \.po$ ); do
  sed -i -e ""s/virDomainXMLConf/virDomainXMLOption/g"" -e ""s/xmlconf/xmlopt/g"" $i
done

and a few manual tweaks.
"
3f029fb5319b9dc9cc2fbf8d1ba4505ee9e4b1e3,libvirt/libvirt,"LXC: Fix handling of RAM filesystem size units

Since 76b644c when the support for RAM filesystems was introduced,
libvirt accepted the following XML:
<source usage='1024' unit='KiB'/>

This was parsed correctly and internally stored in bytes, but it
was formatted as (with an extra 's'):
<source usage='1024' units='KiB'/>
When read again, this was treated as if the units were missing,
meaning libvirt was unable to parse its own XML correctly.

The usage attribute was documented as being in KiB, but it was not
scaled if the unit was missing. Transient domains still worked,
because this was balanced by an extra 'k' in the mount options.

This patch:
Changes the parser to use 'units' instead of 'unit', as the latter
was never documented (fixing persistent domains) and some programs
(libvirt-glib, libvirt-sandbox) already parse the 'units' attribute.

Removes the extra 'k' from the tmpfs mount options, which is needed
because now we parse our own XML correctly.

Changes the default input unit to KiB to match documentation, fixing:
https://bugzilla.redhat.com/show_bug.cgi?id=1015689
"
e56c6a83b4aaf2c752cf3ada2aee3079bfe62acc,libvirt/libvirt,"Move security drivers to src/security/

* src/Makefile.am, src/qemu/qemu_conf.h, src/qemu/qemu_driver.c,
  tests/seclabeltest.c: Adapt for changed paths
* src/security.c: Rename to src/security/security_driver.c
* src/security.h: Rename to src/security/security_driver.h
* src/security_selinux.c, src/security_selinux.h: Move to src/security/
"
6451b55ec3d801bb03e912b0811408cf82cfc880,libvirt/libvirt,"qemuDomainGetPreservedMounts: Fix suffixes for corner cases

https://bugzilla.redhat.com/show_bug.cgi?id=1431112

Imagine a FS mounted on /dev/blah/blah2. Our process of creating
suffix for temporary location where all the mounted filesystems
are moved is very simplistic. We want:

/var/run/libvirt/qemu/$domName.$suffix\

were $suffix is just the mount point path stripped of the ""/dev/""
prefix. For instance:

/var/run/libvirt/qemu/fedora.mqueue  for /dev/mqueue
/var/run/libvirt/qemu/fedora.pts     for /dev/pts

and so on. Now if we plug /dev/blah/blah2 into the example we see
some misbehaviour:

/var/run/libvirt/qemu/fedora.blah/blah2

Well, misbehaviour if /dev/blah/blah2 is a file, because in that
case we call virFileTouch() instead of virFileMakePath().
The solution is to replace all the slashes in the suffix with say
dots. That way we don't have to care about nested directories.
IOW, the result we want for given example is:

/var/run/libvirt/qemu/fedora.blah.blah2

Signed-off-by: Michal Privoznik <83d82aaba2eed257f4814b0c239c260c4caaadf0@redhat.com>
Reviewed-by: John Ferlan <87558058f6f829e5ec976c8ef960720af4ff9c7d@redhat.com>
"
b4ddf5ae62ee3a50c7ead1e00914a141e5798096,libvirt/libvirt,"util: introduce cgroup v2 files

Place cgroup v2 backend type before cgroup v1 to make it obvious
that cgroup v2 is preferred implementation.

Following patches will introduce support for hybrid configuration
which will allow us to use both at the same time, but we should
prefer cgroup v2 regardless.

Signed-off-by: Pavel Hrdina <d4772d05997b8abf035041e3b4f4996380ea7e7a@redhat.com>
"
cf521fc8bae5aa8bfb28806ced8ac3a9f58b0627,libvirt/libvirt,"memtune: change the way how we store unlimited value

There was a mess in the way how we store unlimited value for memory
limits and how we handled values provided by user.  Internally there
were two possible ways how to store unlimited value: as 0 value or as
VIR_DOMAIN_MEMORY_PARAM_UNLIMITED.  Because we chose to store memory
limits as unsigned long long, we cannot use -1 to represent unlimited.
It's much easier for us to say that everything greater than
VIR_DOMAIN_MEMORY_PARAM_UNLIMITED means unlimited and leave 0 as valid
value despite that it makes no sense to set limit to 0.

Remove unnecessary function virCompareLimitUlong.  The update of test
is to prevent the 0 to be miss-used as unlimited in future.

Resolves: https://bugzilla.redhat.com/show_bug.cgi?id=1146539

Signed-off-by: Pavel Hrdina <d4772d05997b8abf035041e3b4f4996380ea7e7a@redhat.com>
"
80cafba31012932e9fe3817d3fd40fa9333c3f6c,libvirt/libvirt,"Fix now dead cleanup of VMs on libvirtd restart

When libvirtd restarts it will attempt to reconnect to existing
LXC containers. If it loads a XML state file for the container
the container will appear running. If we fail to read the PID
file, or fail to connect to the LXC monitor, we should be killing
off the guest, but if the VMs cgroup does not exist any more,
cleanup will get skipped. Reading the PID file is also pointless
since the PID is in the XML statefile

In lxcReconnectVM we do not need to read the PID file. If part
of the reconnect process fails we need to run the VM terminate
code as a safety net.

In lxcVMTerminate, if we can't obtain the VM cgroup, we know
the process has died, but we must still run lxcVMCleanup to
clear out the virDomainObjPtr live state

* src/lxc/lxc_driver.c: Fix cleanup of dead VMs on restart
"
3eede43aab8e6e0817e23e3bf4c2d8a03cc928c3,libvirt/libvirt,"vz: remove unnecessary labels in simple API calls

Signed-off-by: Nikolay Shirokovskiy <7fa0e2698a05be944b362bdf5d7736c0162e16c9@virtuozzo.com>
"
1e0bb184a72f3af79cba2d3ece3b10dc8406c987,libvirt/libvirt,"Convert all files in src/conf/ to use virReportError()

This removes all the per-file error reporting macros
from the code in src/conf/

Signed-off-by: Daniel P. Berrange <bb938cf255e055ff3507f2627d214e8e62118fcf@redhat.com>
"
8b7d1874179cbe62ed0d6111f455b06a0c335c23,libvirt/libvirt,"conf: rename network dns host/srv/txt arrays

This shortens the name of the structs for srv and txt, and their
instances in virNetworkDNSDef, to be more compact and uniform with the
naming of the dns host array. It also changes the type of ntxts, etc
from unsigned int to size_t, so that they can be used directly as args
to VIR_*_ELEMENT.
"
1be8477ac40cb89da749ea94127ad9d0d36d7670,mrdoob/three.js,"Merge remote-tracking branch 'upstream/dev' into webglrendertarget-refactor

Conflicts:
	src/renderers/WebGLRenderTarget.js
"
15db34ad9a81744f06bd00e542fd16e61dad799f,mrdoob/three.js,"Refactored custom attributes for particles.

More moving ifs out of inner loops.
"
ca9f11af2549e6042a55e826bb9a53d8834fece9,mrdoob/three.js,"Merge pull request #12156 from Mugen87/lint

Clean up linter warnings"
fd46b300c49cadf6c37ab42aa7887f3006d1bbcf,mrdoob/three.js,"Renamed doc page and updated RGBELoader
"
bcbeb2f4f66c9846207d207aae95cde3c0c8960d,mrdoob/three.js,"rename all .coord to .uv
"
890a7571fd40b2c2f1fe79486621fa925d796245,mrdoob/three.js,Refactored helpers.
6f5223951d1e08f9da08d81c6c5d56d0b2a4b8ea,mrdoob/three.js,"Deprecated MultiMaterial.
"
59e5d7ada4f8998f0cc8be8212c3491dcad66084,mrdoob/three.js,"Small optimizations in attributes setting and some whitespace cleanup.
"
019a0f59ef9239705fba4ace6510e10977042c03,mrdoob/three.js,"Some more GLSL precision cleanup.
"
5964cb9b00f80a71d359bf9898422bbe626d68dd,mrdoob/three.js,"Updated point-light shadow mapping code to be more efficient with uniforms and varyings.
"
ec00f298beb7f30d814a649d63f2332d32d33182,mrdoob/three.js,"CanvasRenderer and SVGRenderer using single-material system.
Also moved `.overdraw` to Material.
Code is much simpler now :)
"
006e4b87f3aee46daa3108ecdb1e608129dbf37d,mrdoob/three.js,Editor: Refactored Sidebar files.
88a9ad2da7ba88e29662c3780148ba568dcf85ba,mrdoob/three.js,"Mergable: WebGLRenderer.js: changed so camera.matrixWorldInverse is used instead of camera.matrixWorld.
"
f50f42dde1617d182aff626607eeaf7b980e8f68,mrdoob/three.js,"Commented out `Mesh::normalizeUVs`. Needs to be handled in the CanvasRenderer directly.
Added a check in `Scene` to make sure the avoid duplicate objects.
WebGLRenderer2: In the process of handling > 65535

"
f9ea7b6e65bd007681a45c72b048f870eda95c41,mrdoob/three.js,"Merge pull request #13491 from Mugen87/dev7

Renderers: Clean up"
0d2a0fe7771511246bb5f41dece575a702f44582,mrdoob/three.js,"Clean up.
"
3dea25939c347424b143afc4fef49570525e60dd,mrdoob/three.js,"Refactored shadow test to work on some ATI cards with OpenGL.

Using boolean vector instead of ""if ( expression && expression )"".

This helps for hard shadows code path. There are still some problems with soft shadows code path, which still don't want to compile.
"
a0b8f50fb0a3ce028c6f350dc623c9e594ec9bfb,mrdoob/three.js,Renamed scene.center to scene.origin as per @pyrotechnick suggestion.
9a62d1173acab5426b3f19aa9a37df0aa6873f1f,mrdoob/three.js,"Refactored `ClickResolver to `Ray` and `Projector.unprojectVector` working.
Unimpressive example added `interactive_spheres.html`"
40fcb10460cf8fcd106f4bc9581acf5304bfc0de,mrdoob/three.js,"Clean up mesh creation steps.
"
52f78940ac5ce3f84a96f3a975b5de9e16f55824,mrdoob/three.js,Animation system clean up. Fixes #4377.
191bb16cd4db71dc94dd495cce16377552c555bf,mrdoob/three.js,"Renamed THREE.SegmentsLine to THREE.LineSegments. See 9b63a1d906e0e5f33cadc145664c6bf44aa68fed
"
dfa6d6da5129ab6f38be7807a3198712ae2b5cf8,nabeelio/phpvms,"Split rank pay rate into separate rates for acars and manual flights
"
c424499d342ca01a0e203c5ce1c5b13ece646a23,ngageoint/scale,"Increased max length for task_update fields in the database
"
3f3239c967fd8241f065b8c76d458119fa46d21d,ngageoint/scale,"issue #181: renaming job type version column to ""version"" for queue grid
"
dc90d7d77a4b5f72c5ff28e3d387f34748f418cf,onap-sdc/sdc-ui,"Removed drop-down group and added a more flexible option interface
"
e8d66766f0c3c06003220df8c436af191210a7dd,openstack/kolla,"Fix gate for docker 1.10

Docker 1.10 has broken the gate and this patch will correct that
breakage.

The issue comes with rsyslog. Due to a commit in Docker 1.10 [1] we
must change the way we get the log socket for rsyslog. The /dev/
folder will no longer populate as we used it. So instead we simply
make a new socket in a path we control and share that to the correct
location in the containers.

Additionally, adjust the gate for new Docker daemon.

[1] https://github.com/docker/docker/pull/16639
Partially-Implements: blueprint kolla-upgrade
Change-Id: I881a2ecdf6d7b35991e1d38a3f3e60d022d6577f
"
d255743601e20b69e9dd89606963ba8e429adcda,openstack/kolla,"Move to transport_url for rabbitmq configuration

rabbit_hosts, rabbit_userid and rabbit_password are deprecated for
removal.[0]

rpc_backend is deprecated for removal.[1]

rabbit_ha_queues is deprecated. it is useless when using RabbitMQ >= 3.0
[2]

[0] https://github.com/openstack/oslo.messaging/blob/master/oslo_messaging/_drivers/impl_rabbit.py#L112,#L134
[1] https://github.com/openstack/oslo.messaging/blob/master/oslo_messaging/transport.py#L46
[2] https://github.com/openstack/oslo.messaging/blob/master/oslo_messaging/_drivers/impl_rabbit.py#L163,L174

Closes-Bug: #1614082
Change-Id: I05d318ba6c11c5dbfa9fbf67d088a43ab465be30
"
06b16d577d502d95587e69c970c099850ad3f0ae,openstack/kolla,"Merge ""Convert gate to file backend rather than partition"""
c4ac02ffca4e8b9ffe8c702abf4de4063d3097e6,openwrt/openwrt,"treewide: remove obsolete sysupgrade watchdog kill

The watchdog kill command was meant for busybox watchdog. Busybox watchdog
was replaced by the procd watchdog mid 2013 with commit df7ce9301a25
(""busybox: disable the watchdog utility by default""), which makes the kill
command obsolete since quite some time.

Signed-off-by: Mathias Kresin <34c6fceca75e456f25e7e99531e2425c6c1de443@kresin.me>
"
896d3e3e135e58636fcabcebf48f2eebf77623e4,openwrt/openwrt,"ar71xx: Add WeIO Board Support

Add support for WeIO board (http://we-io.net).
This board is based on Carambola2 board form 8Devices.

Signed-off-by: Drasko DRASKOVIC <drasko.draskovic@gmail.com>
Signed-off-by: Felix Fietkau <nbd@openwrt.org> [some cleanups]

SVN-Revision: 47036
"
8ff9b93dfa4f658866cf53947438980b972c2700,openwrt/openwrt,"kernel: remove obsolete CompareKernelPatchVer calls

SVN-Revision: 31775
"
a1d42dd3220a025e232769b75c04e767c2948aa0,percy/percy-web,"Lazy render snapshot viewer when there are many on the screen. (#568)

* lazy-render snapshots in snapshot-list

* clean up tests, rename deferImageLoading to shouldDeferRendering

* remove redundant data-test attributes
"
8534ce4741bd44166fa9c5a254aae2152558b42e,prestodb/presto,"Rename FLOAT type to REAL

In order to better follow the SQL standard and other database implementations, we rename the 32-bit floating point type from FLOAT to REAL.
The SQL standard defines FLOAT to be a parametrized approximate numeric type, with the precision optional (see section 6.1. of ISO/IES 9075-2:2011). At the same time, it is not defined what precision should be used for FLOAT while no precision is given. The only constraints for precision provided for REAL, FLOAT and DOUBLE types are (6.1.29-31 of the same document):
precision of FLOAT is equal to or greater than the value specified (as a parameter)
precision of REAL is implementation-defined
precision of DOUBLE is greater than precision of REAL
Thus, for consistency with parameterized DECIMAL which we implemented to satisfy below constraint:
DECIMAL = DECIMAL(MAX_PRECISION)
unparametrized FLOAT should become FLOAT(MAX_PRECISION) which should be equal to DOUBLE.
That leaves REAL to be the 32-bit floating point type.
"
af22f7f717539772d0f30411bce99ef1ed86e858,prestodb/presto,"Change operator for row_number to be completely streaming

Conflicts:
	presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/WindowFilterPushDown.java
"
86a5dca64df262a17a5ac86ab08d6ceb7d443970,project-ncl/pnc,"Refactoring JPQL to Query DSL
"
d0286e2a1ffe714b6ca90df5cab0be209a13b310,project-ncl/pnc,"Split scmURL into scmRepoURL and scmRevision
"
37fd2750f5ea4ab9a72910ab79f2c35adf5de02f,project-ncl/pnc,"NCL-2402 Refactor build-records module, fixing routes and urls ready for
breadcrumb fix.
"
75d2b5a45c05c3851de9fbb02d36f01644d57a64,project-ncl/pnc,"Merge pull request #148 from slaskawi/jpql_to_predicates_refactoring

Refactoring JPQL to Query DSL"
07b9b1304080e9c771e8492e9da141ec650a1fd9,project-ncl/pnc,"Refactoring POMs
"
49c6549ae7342dfe31650adca4f806b7dac56fe2,project-ncl/pnc,"breaking up RepositoryManagerDriverTest to make it parallelize better in the surefire plugin. Adding aprox promote client module, and wiring it in to promote build output (and also uncaptured dependencies) when persistArtifacts() is called from the maven repo driver. Adding in a collectionId field to the repository configuration, so it's easy to keep track the collection to which a build belongs.
"
40e30be67fefb1aa06e26ad74b91a1ff833b3d03,project-ncl/pnc,"Extract buildExecutor.

Add driver config logging and test.

Add some more config logging.
"
023400c5812212e704876c71d9548e6348d95d6a,pymedusa/Medusa,"Refactor tv_cache -> tv.cache
"
b1fa612ee05a560f3820fcb71fd933b90747c713,pymedusa/Medusa,"Missed var renames after refactor
"
e7a5b058e38d0cba147b67a01534c2e6c9e4a8f4,pymedusa/Medusa,"Make the show updater run on startup
Fix it so that it doesnt keep updating the same shows over and over
Fix cycleTime for show updater for status page
Clean up logging in tv.py when setting the next episode and updating show
"
558068cd30e9f8dcdff026e56ca86fe37a993512,pymedusa/Medusa,"Cleanup hdtorrents a bit and fix a small bug
"
4f56ee59c446a7e68baa5bd2f900843dfca03c42,pymedusa/Medusa,"Vueify display show and snatch selection (#4888)

* added router to displayShow page

* add getShowById and getShowByName getters

* add displayShow route to router

* updated show defaults

* added new computed props (show, shows, indexer, id)

* build theme

* fix show defaults and convert some classes from mako to vue

* lint and build

* moved snatch selection to vue

* Removed self.refreshResults as it was giving an error, when clicking the refresh button.
Also it only reloads the page, which we can do also directly.

* Removed api import. As it's not used.

* Remove comment. As it's failing the build.
"
1ae2ee90e1743e34d2c0b1d61a2ffb25e05ebbfd,pymedusa/Medusa,"Sync themes (#4702)

* Sync images

* Remove unused components

* Replace mako outdated component Mako includes
"
8b1738aedcb6f4c119b47fa9173c63f107b9a9d4,pymedusa/Medusa,"Merge pull request #81 from OmgImAlexis/js

move more js to core function"
8e1b681f929160f793a2a5274fe421e6fe7192f9,pymedusa/Medusa,"Merge pull request #728 from SickRage/providers

Replace all instances of searchURL for search_url in providers"
0f5466d066b9ea8df2c68f6cba993783a7b72b36,pymedusa/Medusa,"Merge pull request #778 from SickRage/fix_rarbg

Fix RARBG after rewrite - please cherry pick to master"
5c2fb31893df15e3b7d6ec038fe1a99c3362bb4b,pymedusa/Medusa,"Added cookies_ingest attribute to torrent providers. Should fix the TD captcha. (#727)

* Added cookies_ingest attribute to torrent providers.

Users will now be able to configure cookies for providers with the cookies_ingest attribute.
This is now only enabled for torrentday. To fix the captcha issue.

* Fixed always exiting with False.

* When you enter wrong cookie, and stop medusa. Then next time, it will keep on using the old cookies.
Fixed this, by invalidating the cookies, when it doesn't get back a json, but html.

* Too many parameters for format

* Fixed codacy error. Don't materialize inner list.

* Reworked the rss_torrent cookie handling.

There is now one provider cookie attribute. But as the rss_providers are added and checked if it get's a result, I had to do make some changes, they can be configured from the ""configure custom torrent provider"" and ""provider options"" tab.

Also i've introduced a new attribute named provider.enable_cookies next to the provider.cookies attribute. As we need to get rid of the hasattr() in the mako templates sometime anyway.

New providers, which need to make use of the cookies functionality, only need to have set the provider.enable_cookies = True.

* Import not needed anymore

* Replaced the return values of the rss_validate function tuple with dicts.

* Added ui notifications for providers that need cookies added like TD. The user will get a message, that it needs to check the cookies for that provider.

* Added default value to add_cookies_from_ui() when enable_cookies is not setup correctly for a provider.

* Made sure the cookies validation message is also send back for rsstorrent.py
"
bcdbf944d6bdb97851ebef7311c38ce8801b6179,pymedusa/Medusa,"Merge pull request #371 from SickRage/sql-opt

Optimize SQL wildcard selections and set LIMIT where possible"
6c5803f1554398baf043aac9a7035e7cc1b80202,pymedusa/Medusa,Merge branch 'develop' into feature/remove-unused-libraries
ce96757ab0c36011b50ba2b62772fc14f8ab245d,quintel/etmodel,"Renamed merit order charts. Fixes #1202
"
b66495891c68b47205c57acf864a1cc708ef4830,quintel/etmodel,"sankey: made more space-efficient
"
e06761d9cd0039408e0f92dbd66fab577955967d,quintel/etmodel,"renamed api_session_id to api_scenario_key, loading of scenarios works
"
24e6ea1c7c15c7e76f0023d58434798b828a19f9,quintel/etmodel,"application controller: simplified last_etm_page stuff
"
1c6b30b5e2266c158081a5ed58d7c79df3fdbe4c,ray-project/ray,"Move all config constants into single file. (#1192)

* Initial pass at factoring out C++ configuration into a single file.

* Expose config through Python.

* Forward declarations.

* Fixes with Python extensions

* Remove old code.

* Consistent naming for constants.

* Fixes

* Fix linting.

* More linting.

* Whitespace

* rename config -> _config.

* Move config inside a class.

* update naming convention

* Fix linting.

* More linting

* More linting.

* Add in some more constants.

* Fix linting
"
c60ccbad4629fa3d5b252ab8036a382f722a7c7b,ray-project/ray,"[carla] [rllib] Add support for carla nav planner and scenarios from paper (#1382)

* wip

* Sat Dec 30 15:07:28 PST 2017

* log video

* video doesn't work well

* scenario integration

* Sat Dec 30 17:30:22 PST 2017

* Sat Dec 30 17:31:05 PST 2017

* Sat Dec 30 17:31:32 PST 2017

* Sat Dec 30 17:32:16 PST 2017

* Sat Dec 30 17:34:11 PST 2017

* Sat Dec 30 17:34:50 PST 2017

* Sat Dec 30 17:35:34 PST 2017

* Sat Dec 30 17:38:49 PST 2017

* Sat Dec 30 17:40:39 PST 2017

* Sat Dec 30 17:43:00 PST 2017

* Sat Dec 30 17:43:04 PST 2017

* Sat Dec 30 17:45:56 PST 2017

* Sat Dec 30 17:46:26 PST 2017

* Sat Dec 30 17:47:02 PST 2017

* Sat Dec 30 17:51:53 PST 2017

* Sat Dec 30 17:52:54 PST 2017

* Sat Dec 30 17:56:43 PST 2017

* Sat Dec 30 18:27:07 PST 2017

* Sat Dec 30 18:27:52 PST 2017

* fix train

* Sat Dec 30 18:41:51 PST 2017

* Sat Dec 30 18:54:11 PST 2017

* Sat Dec 30 18:56:22 PST 2017

* Sat Dec 30 19:05:04 PST 2017

* Sat Dec 30 19:05:23 PST 2017

* Sat Dec 30 19:11:53 PST 2017

* Sat Dec 30 19:14:31 PST 2017

* Sat Dec 30 19:16:20 PST 2017

* Sat Dec 30 19:18:05 PST 2017

* Sat Dec 30 19:18:45 PST 2017

* Sat Dec 30 19:22:44 PST 2017

* Sat Dec 30 19:24:41 PST 2017

* Sat Dec 30 19:26:57 PST 2017

* Sat Dec 30 19:40:37 PST 2017

* wip models

* reward bonus

* test prep

* Sun Dec 31 18:45:25 PST 2017

* Sun Dec 31 18:58:28 PST 2017

* Sun Dec 31 18:59:34 PST 2017

* Sun Dec 31 19:03:33 PST 2017

* Sun Dec 31 19:05:05 PST 2017

* Sun Dec 31 19:09:25 PST 2017

* fix train

* kill

* add tuple preprocessor

* Sun Dec 31 20:38:33 PST 2017

* Sun Dec 31 22:51:24 PST 2017

* Sun Dec 31 23:14:13 PST 2017

* Sun Dec 31 23:16:04 PST 2017

* Mon Jan  1 00:08:35 PST 2018

* Mon Jan  1 00:10:48 PST 2018

* Mon Jan  1 01:08:31 PST 2018

* Mon Jan  1 14:45:44 PST 2018

* Mon Jan  1 14:54:56 PST 2018

* Mon Jan  1 17:29:29 PST 2018

* switch to euclidean dists

* Mon Jan  1 17:39:27 PST 2018

* Mon Jan  1 17:41:47 PST 2018

* Mon Jan  1 17:44:18 PST 2018

* Mon Jan  1 17:47:09 PST 2018

* Mon Jan  1 20:31:02 PST 2018

* Mon Jan  1 20:39:33 PST 2018

* Mon Jan  1 20:40:55 PST 2018

* Mon Jan  1 20:55:06 PST 2018

* Mon Jan  1 21:05:52 PST 2018

* fix env path

* merge richards fix

* fix hash

* Mon Jan  1 22:04:00 PST 2018

* Mon Jan  1 22:25:29 PST 2018

* Mon Jan  1 22:30:42 PST 2018

* simplified reward function

* add framestack

* add env configs

* simplify speed reward

* Tue Jan  2 17:36:15 PST 2018

* Tue Jan  2 17:49:16 PST 2018

* Tue Jan  2 18:10:38 PST 2018

* add lane keeping simple mode

* Tue Jan  2 20:25:26 PST 2018

* Tue Jan  2 20:30:30 PST 2018

* Tue Jan  2 20:33:26 PST 2018

* Tue Jan  2 20:41:42 PST 2018

* ppo lane keep

* simplify discrete actions

* Tue Jan  2 21:41:05 PST 2018

* Tue Jan  2 21:49:03 PST 2018

* Tue Jan  2 22:12:23 PST 2018

* Tue Jan  2 22:14:42 PST 2018

* Tue Jan  2 22:20:59 PST 2018

* Tue Jan  2 22:23:43 PST 2018

* Tue Jan  2 22:26:27 PST 2018

* Tue Jan  2 22:27:20 PST 2018

* Tue Jan  2 22:44:00 PST 2018

* Tue Jan  2 22:57:58 PST 2018

* Tue Jan  2 23:08:51 PST 2018

* Tue Jan  2 23:11:32 PST 2018

* update dqn reward

* Thu Jan  4 12:29:40 PST 2018

* Thu Jan  4 12:30:26 PST 2018

* Update train_dqn.py

* fix
"
f89be9699c8ba8d3c519d5d15a52ec79bc0c1f00,ray-project/ray,"Introduce non-blocking Plasma API. (#71)

* Implement new plasma client API.

* Formatting fixes.

* Make tests work again.

* Make tests run.

* Comment style.

* Fix bugs with fetch tests.

* Introduce fetch1 flag.

* Remove timer only if present.

* Formatting fixes.

* Don't access object after free.

* Formatting fixes.

* Minor change.

* refactoring plasma datastructures

* Change plasma_request and plasma_reply to use only arrays of object requests.

* some more fixes

* Remove unnecessary methods.

* Trivial.

* fixes

* use plasma_send_reply in return_from_wait1

* Lint.
"
6a73711888196f6bce3e8d86a33e24545c41924b,ray-project/ray,"Update the task table (#129)

* Update the task table

* Move updating task table out of scheduling algorithm.
"
8f8e5d1fc264fe0eb6498182c14d3c9b4faba8fd,realm/SwiftLint,"move ""lintable files"" functionality to Configuration+LintableFiles
"
0773591cef91d9a86c426740144b58c997ab4066,saulpw/visidata,"made two vsheet subclasses
"
329b5b0effba0e69b353ec1d78a6753839f28193,saulpw/visidata,"[python3.7] Change async decorator to asyncthread and rename async.py

- In Python 3.7, async became a reserved keyword
"
3bdc0cca34e26ab12b4744e52551bc5e6c0c6b25,sdl/dxa-modules,"KCWA-856 | Reverted changes, simplified fix.
"
0249b0a1b0481501fb9ba39d5f27d801c5e03317,sdl/dxa-modules,"Merge pull request #226 in TSI/dxa-modules from feature/TSI-3549-semantic-mapping-for-docs to develop

* commit 'a57d766c55cb917efee10229c6659ec95a989f6d':
  TSI-3549 Fixed Topic.Link generation.
  TSI-3549 Refactored TridionDocsMashup Module to leverage DXA's Model Builder Pipeline, incl. StronglyTypedTopicBuilder.
"
7f1287a383b8cf6d4a8c3a41b65abf1dca7f2298,sdl/dxa-modules,"Merge pull request #121 in KCWA/web-app from subtask/KCWA-199-merge-develop to feature/KCWA-199-Add-sub-navigation

* commit '90457d0459643f8de855750c869f9a904480ed93': (38 commits)
  Bumped version
  Bumped version
  Bumped version
  Bumped version
  KCWA-223 Use GeneralPage instead of ContentPage for view mapping
  KCWA-223 Use real end point for retrieving page content
  KCWA-232 udpates according to PR comments
  Bumped version
  KCWA-232 changed api call to ""/api/page/{publicationId}/{pageId}/**""
  KCWA-287 Added mappings for ContentPage / Main views
  KCWA-287 Added mapping for general page view
  KCWA-239 moved schemas and vocabularies to semantic-schemas
  KCWA-239 fixed small issue
  KCWA-239 Updated UnknownLocalizationHandlerImpl
  KCWA-241 Fixed gui tests
  KCWA-241 Use demo publication as the default one
  KCWA-241 Fixed routing for main controller + fixed code review remarks
  KCWA-279 removed dependency dxa-module_core
  KCWA-244 removed cwd_client_config.xml
  KCWA-241 Get page model using page id
  ...
"
05291267de65f32df987db0c0fa7107127cb3ea1,sdl/dxa-modules,"Merge pull request #20 in KCWA/web-app from feature/KCWA-42 to develop

Squashed commit of the following:

commit f3ab63d88c47edfc7f6b13bf7f1be22014c8d7ae
Author: Jan Bevers <jbevers@sdl.com>
Date:   Wed Oct 12 09:40:12 2016 +0200

    KCWA-42 Calculate navigation path on load

commit 1ab55038391256b4cfdd90a625025ce0400865b4
Author: Jan Bevers <jbevers@sdl.com>
Date:   Mon Oct 10 15:34:22 2016 +0200

    KCWA-42 Added tests

commit 76741fad3394aae3116a307c45cac4bddb1c366b
Author: Jan Bevers <jbevers@sdl.com>
Date:   Mon Oct 10 15:08:34 2016 +0200

    KCWA-42 Navigate the app whenever a user clicks on a hyperlink inside a document

commit d53e0c6083b6e4555cf016c4f4c2d5b5600b4d36
Author: Jan Bevers <jbevers@sdl.com>
Date:   Mon Oct 10 14:09:40 2016 +0200

    KCWA-42 Updated mocks

commit 66570aba133f4d414637722ea6a5b6255e27f6ca
Author: Jan Bevers <jbevers@sdl.com>
Date:   Mon Oct 10 13:44:04 2016 +0200

    KCWA-42 Use DXA taxonomy model for navigation links

commit 0dd51d06e8821eebd3146bbff3a415c766a97876
Author: Jan Bevers <jbevers@sdl.com>
Date:   Mon Oct 10 09:54:40 2016 +0200

    KCWA-42 Updated mock data

commit 0da0335b5a2193b5b3d6a7861f73c55ec7483e02
Merge: d5328d6 8d81bf9
Author: Jan Bevers <jbevers@sdl.com>
Date:   Mon Oct 10 09:52:25 2016 +0200

    Merge branch 'develop' into feature/KCWA-42

commit d5328d677bb200609027a5d165f045f8deaaf841
Author: Jan Bevers <jbevers@sdl.com>
Date:   Tue Oct 4 16:05:00 2016 +0200

    KCWA-42 Fixed errors after merging

commit 9e294093f21cf411647e47746ceefcd3ae80b1c5
Merge: 3834654 b7d4ffc
Author: Jan Bevers <jbevers@sdl.com>
Date:   Tue Oct 4 15:46:07 2016 +0200

    KCWA-42 Merged changed from develp

commit 38346542122380ef77306fe5cc322b9180f33c7c
Author: Jan Bevers <jbevers@sdl.com>
Date:   Tue Oct 4 10:18:07 2016 +0200

    KCWA-42 Fixed tests

commit 9b2a5c3b96f1adf4ca91ec395158a2798db7d104
Merge: 70c5e41 a9790c2
Author: Jan Bevers <jbevers@sdl.com>
Date:   Tue Oct 4 09:17:25 2016 +0200

    Merge branch 'develop' into feature/KCWA-42

    # Conflicts:
    #	gui/src/components/container/PublicationContent.tsx
    #	gui/src/components/presentation/Page.tsx
    #	gui/src/global/server/RoutingServer.ts

commit 70c5e416cd43258689e5198183583547845ce344
Author: Jan Bevers <jbevers@sdl.com>
Date:   Mon Oct 3 15:59:31 2016 +0200

    KCWA-42 Use page id instead of site map item id for deep links

commit 8da217059a6404fb2ef07941acf20bad08c37528
Author: Jan Bevers <jbevers@sdl.com>
Date:   Fri Sep 30 16:47:39 2016 +0200

    KCWA-42 Updated mocks

commit cde6d6bc529f12dd7f0f89317e70d136226c5481
Author: Jan Bevers <jbevers@sdl.com>
Date:   Fri Sep 30 15:55:13 2016 +0200

    KCWA-42 Updated mocks + get title from the content
"
39e4f7b95e091f67800d2d000b839b6adf60c1ff,servo/webrender,"Make picture caching more performant, and fix some bugs.

One the remaining issues with enabling picture caching is that
it was a noticeable performance regression on sites that don't
benefit from picture caching, due to the extra render targets
and blits. Instead, we now draw to the main framebuffer and
blit those results into tiles for caching, as appropriate.

There is still a bit of work to be done here (specifically,
detecting when a tile isn't opaque, and disabling the cache blit
if we decide the tile is changing too often), but this is in
general a much faster solution than before. It's also faster
on pages that *do* benefit from picture caching, removing
one extra blit step during cache creation.

This also changes how we handle the way gecko supplies different
display lists with different local coordinate systems. Now, we
cache based on the world rect of the tile, and verify the content
with the new ComparableVec type. This is much more robust and
fixes a number of existing bugzilla bugs related to picture caching.

This patch also removes much of the hashing required, which is a
performance win on the sites I tested (even with the vec comparison
that we now use instead). We do currently update prim deps each
scroll frame, which can be improved / optimized in the future.

Finally, this implementation only allocates and stores tiles for
the current viewport, which is much better for performance and
scaling of content where the picture rect is very large.
"
c9c4ed69066c1a866d1c50ae42ce586dd517cfa7,servo/webrender,"Optimize time spent in GPU driver for GPU cache updates.

We keep a shadow copy of the GPU cache data in the render thread.
After all updates (patches) have been applied for this frame, scan
the rows of the texture for rows that have been modified.

Upload each dirty row to the GPU via a PBO to ensure that there
are no CPU-side stalls.

In the future, there's several more optimizations that can be made:
 * Batch consecutive row updates into a single PBO / upload call.
 * Perhaps track start/end of each row, to avoid a full row update for small changes.
"
4db55ba8f9a1dd482c47a984901a66e1ae2a0b27,servo/webrender,"Auto merge of #568 - nical:more-units, r=glennw

Use strongly typed geometry - Part 1

Part one of a series of pull requests to convert untyped geometry into strongly typed geometry.
This PR adds LayerPixel, ParentLayerPixel and WorldPixel, as well as the corresponging Rect, Point and Size structures, and converts good chunk of the Rect<f32> that I could identify as LayerRect.

In order to avoid churn in the public API, I postponed converting most of the webrender_trait types, but this will be done as soon as the webrender internals are properly typed. As a result of the step-by-step approach, this PR adds some unpleasant ```LayerFoo::from_untyped``` and ```foo.to_untyped``` at places, but the end goal is to have almost none of them in the end. I hope to land things progressively, though, because this type of changeset is time-consuming to rebase.

The added units are inspired from gecko's units (Layer/ParentLayer) and some of the webrneder terminology (World). Don't hesitate to propose other names.

This needs a careful review, in particular for LayerPixel vs ParentLayerPixel.

r? @glennw @kvark @staktrace

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/568)
<!-- Reviewable:end -->
"
964df2fa00f330daf4f233669e37133f93113792,servo/webrender,"Auto merge of #1181 - Gankro:bincode-ipc-5, r=kvark

New bincode-based IPC model

This replaces the existing unsound IPC with new sound and validated bincode-based IPC. On my laptop this regresses mean display list IPC time from 1.5ms to 1.8ms, which is reasonable enough to land and optimize later.

Major differences:

* We never construct a `Vec<DisplayItem>` any more. DisplayListBuilder directly serializes the data into a Vec<u8>. The backend similarly deserializes data on-the-fly. This reduces the memory footprint of BuiltDisplayLists, and eliminates several copies/allocations.

* AuxiliaryLists are no more. Auxiliary data is stored in the DisplayList next to the relevant item. When streaming the data out, we skip over these lists and just produce ItemRanges, similar to the old API. To do this while minimally impacting the rest of webrender and its consumers, there are two new ""dummy"" DisplayItems: SetGradientStops and SetClipRegion. These affect the subsequent DisplayItem, and will never be yielded by the BuiltDisplayListIter.

* DisplayItem no longer stores any ItemRanges or a ClipRegion. Instead these values are stored ""on the side"" and can be requested from the item yielded by BuiltDisplayListIter. This necessitates threading some additional state for certain methods. Notably number-of-items and size-of-item-range are no longer equivalent, and the former must therefore be threaded separately. ItemRange's fields have been made private to prevent anyone from relying on this.

* ItemRanges are now typed. This makes type declarations clearer, prevents theoretical bugs, and gives DisplayList a nicer API for getting auxiliary data.

* I needed to rewrite some of the gradient code, as it was relying on reverse iteration of auxiliary data, which is no longer supported. @rlhunt has approved my new implementation.

NOTE: this changes some public APIs and will need some changes in Servo and Gecko. I'll work on those follow ups next week.

With Transmute (Before This PR):
<img width=""539"" alt=""ipc-with-transmute"" src=""https://cloud.githubusercontent.com/assets/1136864/25545859/924c1848-2c2e-11e7-9833-efb2c8612ca0.png"">

With Bincode (After This PR):
<img width=""535"" alt=""ipc-with-bincode"" src=""https://cloud.githubusercontent.com/assets/1136864/25545858/924bc9a6-2c2e-11e7-9288-80a6ad8e671b.png"">

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/1181)
<!-- Reviewable:end -->
"
28bcb4f0a80123c6acf850889cc66d928d8af765,servo/webrender,"refactored ps_border a bit
"
5f0aee15c5928878c507398bf1bb0701ef8e6be2,servo/webrender,"Fix some redundant cases of clip mask generation.

There are two fixes here:
 * Image pictures were generating clip masks, but they are never
   actually used. In the future, we *might* want to support this,
   but at the moment it just results in clip masks that are then
   never used.
 * If a primitive is in the root coordinate system, then we know
   that it is axis-aligned, and that there are no coordinate
   system changes in between this primitive and the root. In that
   case, we can infer that the local_clip_rect of the clip scroll
   node will correctly handle the screen space clip rect.

In Gecko with the current WR code, I was seeing a lot of very large
clip masks being generated (4x extra A8 render targets) on HN. The
test case included here is a very reduced test case for these issues.

The test case makes use of the new reftest annotations to assert
that no alpha targets get allocated while rendering the yaml file.
"
a567e780e8a31593c8e02318b3419f2413453163,servo/webrender,"Auto merge of #1073 - glennw:batch-tidy, r=kvark

Tidy up several parts of the batching code.

This is prep work for some of the upcoming border refactoring.

None of the diffs in this file should result in any behaviour
changes.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/1073)
<!-- Reviewable:end -->
"
68dec15a16ea256d4ec0422aae62a6729e61ce39,servo/webrender,"Fix bug I introduced during the render task tree refactor in composites.
"
0143c309a1f21dcb922711cfcb5284210ff0d6d9,servo/webrender,"Small restructure of image id hash maps.

This doesn't achieve much by itself, but will allow a lot of the code to be structured better in the future, and is the start of some changes to reduce hash lookups during node compilation.
"
c8ad0a8b221674295844e420537df8632c0fdc8b,servo/webrender,"Auto merge of #1375 - Gankro:revert3, r=glennw

Revert Revert Rectangle Snapping

I got 5 stable builds of Servo here: https://github.com/servo/servo/pull/17297 (all the failures are unrelated or before I applied the updated test expectations).

Should probably wait for Euclid refactoring stuff to clear up before merging this.

r?glennw,kvark

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/1375)
<!-- Reviewable:end -->
"
8df93c571cd09a5b7c2c0c219897f4d2adacd157,servo/webrender,"Auto merge of #1180 - rlhunt:gradient/cleanup, r=kvark

Cleanup angle, radial gradient shaders

There is some code that should be shared between the shaders if possible.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/1180)
<!-- Reviewable:end -->
"
f69261c5d7502111cd0901926a0baf6a8ca53041,servo/webrender,"Rename brush_image -> brush_picture.

In preparation for porting ps_image -> brush_image and starting
to use segments for the image shader.

Eventually, we'll aim to unify brush_image and brush_picture.
"
ea89d7a14711ff9803a4149b8a266c70544b8310,servo/webrender,"Various improvements to text-shadow support.

* Clamp UV fetches to 0.5 texels inside the UV rect for ps_cache and cs_blur shaders.
  Hopefully, this will fix the text-shadow artifacts that appear on some machines / tests.
* Add fast path for text that has blur radius of zero.
  This is a useful optimization, and also needed to pass some of the Servo reftests, which don't support fuzzy tests.
  Text runs with a zero shadow get pushed through the normal text run path, which now supports an offset parameter.
* Respect subpixel AA mode for text runs with zero blur radius.
  Fixes #1483.
* Respect disabled text AA mode for text runs with zero blur radius.
  This is needed by some of the Servo reftests.
* Simplify the GPU cache layout of text-shadow primitives.
  They now match that of a normal text run primitive, but have several runs concatenated.
"
7cfa6e34246b47cc1adafa8cba8477c7b8dbe0e4,servo/webrender,"Auto merge of #2871 - mrobinson:split-clip-sroll-tree, r=kvark,gw3583

Split the ClipScrollTree

Split the ClipScrollTree into a collection of spatial nodes and a
collection of clipping nodes. This makes it so that no unnecessary work
is done or storage is used for clipping nodes. It also allows us to
simplify certain bits of code that had to deal with both types of nodes.

During display list ""flattening,"" positioning ClipIds are converted to
SpatialNodeIndices by consulting the ClipNode for their positioning
node. ClipIds were already converted directly into ClipChainIndices.

Eventually this change should make it to the API, meaning that we expose
the difference between the different node types. This will make it
harder to misuse the API and allow us to do away with looking up the
positioning node of clips during flattening.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/2871)
<!-- Reviewable:end -->
"
0599d6db08ace6a682a3b4b2b2e31213ce54d566,servo/webrender,"Split out positioning and clipping per-DisplayItem

This allows items to be positioned by one scrolling clipped, but
clipped by another. This is necessary to add support for CSS clip,
which allows clip to move with a scroll, but also clip a fixed position
element.
"
a884e676449e5b41669cd6de51af14e70cbe3512,servo/webrender,"Auto merge of #1801 - glennw:text-shadow-rename, r=nical

Rename text-shadow APIs to shadow instead.

In the near future, the text-shadow APIs will be used to
implement other types of shadows (e.g. box-shadows).

This patch just renames all functions and structures, which
will make it easier to review the follow up patches that
modify box shadows to work via the current text-shadow API.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/1801)
<!-- Reviewable:end -->
"
a5b68177d6654288b2c4c3853e67265de658adda,servo/webrender,"Auto merge of #1511 - pyfisch:remove_LowLevelFilterOp, r=glennw

Remove LowLevelFilterOp

LowLevelFilterOp duplicated the FilterOp from Webrender API.
All types in the low level variant used Au instead of f32 but
where always converted from floats and are converted back to
floats. So there is no advantage at all to use integers.

Also use a float for blur for consistency. See also #1244.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/1511)
<!-- Reviewable:end -->
"
ac0940534f2c52dff9e375836768a76dec214cd5,servo/webrender,"Get rid of the resolved_transform member variable.

This member variable is written to immediately before being used,
in SpatialNode::update_transform, and so can just be turned into
a local variable. The only other place that uses this is just a debug
printout. Finally, since the member variable can be removed, we can
also remove code that exists solely to populate this member.
"
85a0443ca45b839beb55ff732d95b59cfcc334a9,servo/webrender,"Require at least plane-split 0.4.

Older versions of plane-split (e.g. 0.3.0) use an older version of
euclid (0.11 instead of 0.13), and so webrender doesn't actually compile
with that. The compilation failures come from a mismatch of type names,
such as euclid::rect::TypedRect vs euclid::TypedRect.

The Cargo.lock file already uses plane-split 0.4.0 but downstream
dependencies of webrender that try to use it with an older plane-split
will run into this problem.
"
8b9715ece8668b5916d9dc439ab17f2eba73c7fd,servo/webrender,"De-duplicate shadow item code.
"
ee947443e5e70b8d96dc3c9b962773ee0ba2d2f4,servo/webrender,"Auto merge of #1360 - Thinkofname:rgba-fix, r=kvark

Rename RGBA8 to BGRA8 to match what it actually does

~~`glTexSubImage2D`'s format parameter is the format of the data that
is being uploaded not the format of the target texture. This was
causing RGBA textures to have their red and blue channels swapped.~~

~~Edit: Servo seems to byte-swap here https://github.com/servo/servo/blob/9656341f43cc1bc415e07a0a0c919740280ad2ab/components/net_traits/image/base.rs#L74 so maybe this is intended? Seems confusing given the format is called RGBA~~

Reworked into just rename RGBA8 to BGRA8

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/1360)
<!-- Reviewable:end -->
"
3d7a8fa933769b94875f822b6f4a7803da4320ee,servo/webrender,"Auto merge of #3335 - gw3583:recycle-storage, r=kvark

Add PrimitiveScratchBuffer implementation.

This splits some information from the PrimitiveStore into the new
scratch buffer type.

The scratch buffer is specifically for storing information that
is only read / written during frame building, as opposed to other
items in the primitive store which is created during scene building.

Since the scratch buffer information is not moved between threads,
it's easy to retain it between both frame builds and also when a
new display list is sent by the scene builder thread.

When a new scene arrives, the recycle method allows the storage
of the scratch buffer to possibly be shrunk, if it is now
consuming much more memory than was used on the previous frame.

NOTE: This initial commit only uses the scratch buffer for clip
      mask instances, but there will be more fields moved to make
      use of the retained scratch buffer soon.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/servo/webrender/3335)
<!-- Reviewable:end -->
"
f45858ef9cc9ff39741e72d2cfc7635dabe14ac9,siconos/siconos,"Remove unused Lagrangian::x variable
Rename NewtonEulerR::velo in NewtonEuler::velocity

First draft of D1MinusLinear with NewtonEulerDS.
      - Dynamics is ok
      - impacting law is ok
      - Equality constraints must be handle correctly (computation of \ddot y)
      - the treatment of the mass matrix and its LU factorized should be clarified woth respect to LagrangianDS

-->> Need to develop MechanicalSystemsDS
"
9d4dd6d451cd4b0638540f14f305757e08a94bca,siconos/siconos,"[io] mechanics_io : an improve in import_scene
"
a98082708f1ca39121815354dc45d1f8b615c1a2,sklintyg/common,"bumped angularUI version to 0.6.0 in fk7263 (wc part), and refactored errorDialog to comply with new 0.6.0 api
"
37a4ec5e3b142987331f645e1bef0962f826a9d7,sklintyg/common,"Clean up basedon handling to minimize unnecessary code
"
8ed6a767c2a18285c09563d6ae28be4e1f71ce49,sklintyg/common,"making RLI model compliant with common model:
- renaming fornamn, mellannamn & efternamn
- using Enhet and Vardgivare in insuranceprocess_healtreporting namespace
"
a069997b267d521b99bfa31155cb1a53494abb95,sozu-proxy/sozu,"rename TLS-related code to openssl for more consistency with rustls
"
387fd4e7d33c2933f9a57ba0b9ae016c203dde13,sozu-proxy/sozu,"do not request a front bufer until it's needed

like the previous commit, it increases complexity a bit, but now we get
much smarter buffer management, since we will only get a buffer from the
poll when it's needed, and we return it when the response ends, so idle
connections will not use any buffers
"
ba59c35548e1fca3213e27092ee4b6d1f768bed7,sozu-proxy/sozu,"slightly cleaner logs
"
dd4b77457ee565b2a4753d6397714362cf8732a4,sozu-proxy/sozu,"clean up dependencies
"
a1a2f277fa1f02138da53284095f684db7f673fd,sozu-proxy/sozu,"rename the use_openssl feature to use-openssl
"
981fa4ec9c0701018846730637de5629a26835e4,structr/structr,"Extracted method for displaying info boxes.
"
f3d1410baf80376489a32a2d548197f0e0dfe8ba,structr/structr,"Fixes ViewTests and removes redundant test specs for ui classes from modules.
"
97eb3d0c5cf27d94d334305ac17d7e6abb23bf38,structr/structr,"Fixed bug in renaming of related properties in schema editor
"
a24df133f71a0ec04c23b0ee37add88bca10b9ca,structr/structr,"Improved UI stability on websocket reconnects.
"
b9cfd69d204d40ca71e47bbdc3f94c0ed219cd3c,structr/structr,"- Adds codemirror integration to the FlowEditor tab in Structr-UI.
- Adds option to disable the integrated CodeModal of the FlowEditor.
- Renames some events within the FlowEditor.
"
4d4e9a91a750a407c085821efa5b4e315dbd2b20,structr/structr,"refactoring: removed getter method for dedicated Java types (getDateProperty, getLongProperty, getIntProperty, getBooleanProperty)
they're not necessary anymore
"
d352b0b2164851be457d7935bebc1132402b647c,structr/structr,"Moves HttpHelper to structr-rest module.
"
947571838b95cab26a64a995c38cf536a7f85185,structr/structr,"Renamed ModuleService to JarConfigurationProvider, renamed Configuration
interface to ConfigurationProvider to better reflect the actual semantics.
"
2a937b1447903179f40792a0354d61950bf811f6,structr/structr,"Added some improvements to the files/images views in Structr UI:
Images are now listed under files. The former behaviour of not listing images in the folders and files area was inconsistent.
Images in folders are now displayed in the image gallery (was neither constistend nor handy before).
You can now extract archive files of types zip, jar, tar, cpio and dump directly in Structr.
"
92f376df6860ea897ead38f8ee90530b7ee01714,structr/structr,"encapsulated console to keep code in one place and allow centralized error-handling
"
d2315800c349c6969715736146562cb4a4591afa,structr/structr,"Improved error handling and connection performance in CloudService.
"
d4d00020d6ad855d65d31020fefa5003e1bb477f,systemd/systemd," sd-bus: do not connect to dbus-1 socket when kdbus is available

We should not fall back to dbus-1 and connect to the proxy when kdbus
returns an error that indicates that kdbus is running but just does not
accept new connections because of quota limits or something similar.

Using is_kdbus_available() in libsystemd/ requires it to move from
shared/ to libsystemd/.

Based on a patch from David Herrmann:
  https://github.com/systemd/systemd/pull/886
"
f97b34a629dc4e811b9cf3d5f8cf9032f595ee2b,systemd/systemd,"Rename formats-util.h to format-util.h

We don't have plural in the name of any other -util files and this
inconsistency trips me up every time I try to type this file name
from memory. ""formats-util"" is even hard to pronounce.
"
91c4b6db7840e68e4d7a019c3cb4d5d60d2a65c7,systemd/systemd,"Merge pull request #2389 from bengal/dhcp-api-cleanup-v3

Improve libsystemd-networkd DHCP API (v3)"
713f6f901db285602ff88ebf1dcd4631293e85c1,systemd/systemd,"manager: add manager_get_dump_string()

It's like manager_dump(), but returns a string. This allows us to reduce
some duplicate code. Also, while we are at it, turn off stdio locking
while we write to the memory FILE *f.
"
3dd215e056ee9ff23175eca66686ff9b7a566dbf,systemd/systemd,"sd-rtnl: add sd_rtnl_message_enter_container()

Extend rta_offset_tb into a stack of offset tables, one for each parent of the
current container, and make sd_rtnl_message_{enter,exit}_container() pop/push
to this stack.

Also make sd_rtnl_message_rewind() parse the top-level container, and use this
when reading a message from the socket.

This changes the API by dropping the now redundant sd_rtnl_message_read()
method.
"
4b548ef382007e40bd8fb3affdce9f843d0d63ac,systemd/systemd,"resolved: move DNS class utilities to dns-type.c and add more helpers

Let's make DNS class helpers more like DNS type helpers, let's move them
from resolved-dns-rr.[ch] into dns-type.[ch].

This also adds two new calls dns_class_is_pseudo() and
dns_class_is_valid_rr() which operate similar to dns_type_is_pseudo()
and dns_type_is_valid_rr() but for classes instead of types.

This should hopefully make handling of DNS classes and DNS types more
alike.
"
7027ff61a34a12487712b382a061c654acc3a679,systemd/systemd,"nspawn: introduce the new /machine/ tree in the cgroup tree and move containers there

Containers will now carry a label (normally derived from the root
directory name, but configurable by the user), and the container's root
cgroup is /machine/<label>. This label is called ""machine name"", and can
cover both containers and VMs (as soon as libvirt also makes use of
/machine/).

libsystemd-login can be used to query the machine name from a process.

This patch also includes numerous clean-ups for the cgroup code.
"
d200735e13c52dcfe36c0e066f9f6c2fbfb85a9c,systemd/systemd,"dbus: more efficient implementation of properties

The way the various properties[] arrays are initialized is inefficient:
 - only the .data members change at runtime, yet the whole arrays of
   properties with all the fields are constructed on the stack one by
   one by the code.
 - there's duplication, eg. the properties of ""org.freedesktop.systemd1.Unit""
   are repeated in several unit types.

Fix it by moving the information about properties into static const
sections. Instead of storing the .data directly in the property, store
a constant offset from a run-time base.
The small arrays of struct BusBoundProperties bind together the constant
information with the right runtime information (the base pointer).

On my system the code shrinks by 60 KB, data increases by 10 KB.
"
1c4baffc1895809bae9ac36b670af90a4cb9cd7d,systemd/systemd,"sd-netlink: rename from sd-rtnl
"
399ab2b1ac07be5afa9708b3280d4e1a4cceb5b8,systemd/systemd,"unit: make unit casts typesafe
"
638cece45da5a6e5fc7c410b619f35abb8df3ec7,systemd/systemd,"core: clean up test run flags

Let's make them typesafe, and let's add a nice macro helper for checking
if we are in a test run, which should make testing for this much easier
to read for most cases.
"
c74a3f973e3e0bac13d66a28728a47f10046b71f,systemd/systemd,"fuzz: unify the ""fuzz-regressions"" directory with the main corpus

There isn't really much need to keep them separate. Anything which is a good
corpus entry can be used as a smoke test, and anything which which is a
regression test can just as well be inserted into the corpus.

The only functional difference from this patch (apart from different paths in
output) is that the regression tests are now zipped together with the rest of
the corpus.

$ meson configure build -Dslow-tests=true && ninja -C build test
...
307/325 fuzz-dns-packet:issue-7888:address      OK       0.06 s
308/325 fuzz-dns-packet:oss-fuzz-5465:address   OK       0.04 s
309/325 fuzz-journal-remote:crash-5a8f03d4c3a46fcded39527084f437e8e4b54b76:address  OK       0.07 s
310/325 fuzz-journal-remote:crash-96dee870ea66d03e89ac321eee28ea63a9b9aa45:address  OK       0.05 s
311/325 fuzz-journal-remote:oss-fuzz-8659:address  OK       0.05 s
312/325 fuzz-journal-remote:oss-fuzz-8686:address  OK       0.07 s
313/325 fuzz-unit-file:oss-fuzz-6884:address    OK       0.06 s
314/325 fuzz-unit-file:oss-fuzz-6885:address    OK       0.05 s
315/325 fuzz-unit-file:oss-fuzz-6886:address    OK       0.05 s
316/325 fuzz-unit-file:oss-fuzz-6892:address    OK       0.05 s
317/325 fuzz-unit-file:oss-fuzz-6897:address    OK       0.05 s
318/325 fuzz-unit-file:oss-fuzz-6897-evverx:address  OK       0.06 s
319/325 fuzz-unit-file:oss-fuzz-6908:address    OK       0.07 s
320/325 fuzz-unit-file:oss-fuzz-6917:address    OK       0.07 s
321/325 fuzz-unit-file:oss-fuzz-6977:address    OK       0.13 s
322/325 fuzz-unit-file:oss-fuzz-6977-unminimized:address  OK       0.12 s
323/325 fuzz-unit-file:oss-fuzz-7004:address    OK       0.05 s
324/325 fuzz-unit-file:oss-fuzz-8064:address    OK       0.05 s
325/325 fuzz-unit-file:oss-fuzz-8827:address    OK       0.52 s
"
0221d68a1317407960ea6f88bd4ebc1781999332,systemd/systemd,"basic/pager: convert the pager options to a flags argument

Pretty much everything uses just the first argument, and this doesn't make this
common pattern more complicated, but makes it simpler to pass multiple options.
"
79008bddf679a5e0900369950eb346c9fa687107,systemd/systemd,"log: rearrange log function naming

- Rename log_meta() → log_internal(), to follow naming scheme of most
  other log functions that are usually invoked through macros, but never
  directly.

- Rename log_info_object() to log_object_info(), simply because the
  object should be before any other parameters, to follow OO-style
  programming style.
"
4203fc8b818e68113aed2f3dc0e47a00f4059a30,systemd/systemd,"sd-netlink: make a couple of helper functions static

Also rename from rtnl_* to netlink_*.
"
3ee897d6c2401effbc82f5eef35fce405781d6c8,systemd/systemd,"tree-wide: port more code to use send_one_fd() and receive_one_fd()

Also, make it slightly more powerful, by accepting a flags argument, and
make it safe for handling if more than one cmsg attribute happens to be
attached.
"
75f86906c52735c98dc0aa7e24b773edb42ee814,systemd/systemd,"basic: rework virtualization detection API

Introduce a proper enum, and don't pass around string ids anymore. This
simplifies things quite a bit, and makes virtualization detection more
similar to architecture detection.
"
9a23e9e7754027775f62baec847b46703e20d166,systemd/systemd,"libudev: device - 128 -> ENVP_SIZE
"
5630aab1a81bcb8146298e8367d2a28d74f0b8f3,systemd/systemd,"Merge pull request #218 from poettering/dual-timestamp-null

everywhere: actually make use of DUAL_TIMESTAMP_NULL macro"
a6903061530cac5fbaa99a080a93221c02c349f9,systemd/systemd,"log: make sure generators never log into the journal to avoid activation deadlocks

This makes all generators log to kmsg by default.
"
4466194c43a25bc51b21226f04245131e698bb3f,systemd/systemd,"units: rename rtc-set.target to time-sync.target and pull it in by hwclock-load.service

On request of Miroslav Lichvar, rename rtc-set.target to
time-sync.target since usually the RTC chip isn't involved at all in NTP
syncs.

Also, pull it in by hwclock-load.service.
"
affb60b1ef0cb48388d23360c6f3b043c50f6b8c,systemd/systemd,"util-lib: split out umask-related code to umask-util.h
"
5d997827e2ebe5d4f438748d1ac87c10c29045c6,systemd/systemd,"core: add a per-unit setting MountAPIVFS= for mounting /dev, /proc, /sys in conjunction with RootDirectory=

This adds a boolean unit file setting MountAPIVFS=. If set, the three
main API VFS mounts will be mounted for the service. This only has an
effect on RootDirectory=, which it makes a ton times more useful.

(This is basically the /dev + /proc + /sys mounting code posted in the
original #4727, but rebased on current git, and with the automatic logic
replaced by explicit logic controlled by a unit file setting)
"
222148b66d1abf5b05c9d803472a9368331dae53,systemd/systemd,"resolved: make use of dns_{class|type}_is_{pseudo|valid_rr}() everywhere
"
2e59b241ca86b8338c706a7a704d301fde908581,systemd/systemd,"core: add proper escaping to writing of drop-ins/transient unit files

This majorly refactors the transient unit file and drop-in writing
logic, so that we properly C-escape and specifier-escape (% → %%)
everything we write out, so that when we read it back again, specifiers
are parsed that aren't supposed to be parsed.

This renames unit_write_drop_in() and friends by unit_write_setting().
The name change is supposed to clarify that the functions are not only
used to write drop-in files, but also transient unit files.

The previous ""mode"" parameter to this function is replaced by a more
generic ""flags"", which knows additional flags for implicit C-style and
specifier escaping before writing things out. This can cover most
properties where either form of escaping is defined. For the cases where
this isn't sufficient, we add helpers unit_escape_setting() and
unit_concat_strv() for escaping individual strings or strvs properly.

While we are at it, we also prettify generation of transient unit files:
we try to reduce the number of section headers written out: previously
we'd write the right section header our for each setting. With this
change we do so only if the setting lives in a different section than
the one before.

(This should also be considered preparation for when we add proper APIs
to systemd to write normal, persistant unit files through the bus API)
"
165a31c0dbd658444b6f03c95365554200740ebb,systemd/systemd,"core: add two new special ExecStart= character prefixes

This patch adds two new special character prefixes to ExecStart= and
friends, in addition to the existing ""-"", ""@"" and ""+"":

""!""  → much like ""+"", except with a much reduced effect as it only
       disables the actual setresuid()/setresgid()/setgroups() calls, but
       leaves all other security features on, including namespace
       options. This is very useful in combination with
       RuntimeDirectory= or DynamicUser= and similar option, as a user
       is still allocated and used for the runtime directory, but the
       actual UID/GID dropping is left to the daemon process itself.
       This should make RuntimeDirectory= a lot more useful for daemons
       which insist on doing their own privilege dropping.

""!!"" → Similar to ""!"", but on systems supporting ambient caps this
       becomes a NOP. This makes it relatively straightforward to write
       unit files that make use of ambient capabilities to let systemd
       drop all privs while retaining compatibility with systems that
       lack ambient caps, where priv dropping is the left to the daemon
       codes themselves.

This is an alternative approach to #6564 and related PRs.
"
e4da7d8c796a1fd11ecfa80fb8a48eac9e823f06,systemd/systemd,"core: add new option 'tmpfs' to ProtectHome=

This make ProtectHome= setting can take 'tmpfs'. This is mostly
equivalent to `TemporaryFileSystem=/home /run/user /root`.
"
aa8e00da547b50ea20e3691133bb3ae1d9644a2b,systemd/systemd,"test-path: move all related test files to a specific directory

To avoid polluting test/
"
baabc5776475f7313cdaa5f3bdb45c1c5d053f91,systemd/systemd,"build-sys: move more files from core/ to share/ that are generic enough
"
190700621f95160d364f8ec1d3e360246c41ce75,systemd/systemd,"sd-bus: drop bus parameter from message callback prototype

This should simplify the prototype a bit. The bus parameter is redundant
in most cases, and in the few where it matters it can be derived from
the message via sd_bus_message_get_bus().
"
e4de72876e6db5defb16ffe96c2b2ecce0e76a86,systemd/systemd,"util-lib: split out all temporary file related calls into tmpfiles-util.c

This splits out a bunch of functions from fileio.c that have to do with
temporary files. Simply to make the header files a bit shorter, and to
group things more nicely.

No code changes, just some rearranging of source files.
"
d1bddcec98551ea748f39a742a4cbcf9ea9254ef,systemd/systemd,"condition: unify condition logic in one file
"
59f448cf15f94bc5ebfd5b254de6f2441d02fbec,systemd/systemd,"tree-wide: never use the off_t unless glibc makes us use it

off_t is a really weird type as it is usually 64bit these days (at least
in sane programs), but could theoretically be 32bit. We don't support
off_t as 32bit builds though, but still constantly deal with safely
converting from off_t to other types and back for no point.

Hence, never use the type anymore. Always use uint64_t instead. This has
various benefits, including that we can expose these values directly as
D-Bus properties, and also that the values parse the same in all cases.
"
50f48ad37aad99c54de4db34b07c3825cdedcf41,systemd/systemd,"cgroup: remove support for NetClass= directive

Support for net_cls.class_id through the NetClass= configuration directive
has been added in v227 in preparation for a per-unit packet filter mechanism.
However, it turns out the kernel people have decided to deprecate the net_cls
and net_prio controllers in v2. Tejun provides a comprehensive justification
for this in his commit, which has landed during the merge window for kernel
v4.5:

  https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=bd1060a1d671

As we're aiming for full support for the v2 cgroup hierarchy, we can no
longer support this feature. Userspace tool such as nftables are moving over
to setting rules that are specific to the full cgroup path of a task, which
obsoletes these controllers anyway.

This commit removes support for tweaking details in the net_cls controller,
but keeps the NetClass= directive around for legacy compatibility reasons.
"
54c552eae6f30c3eb613aa29ea1b5c0582be7b8b,systemd/systemd,"Merge pull request #7335 from poettering/dissect-meta-info

beef up image dissection, to gather image metadata"
6bc88019b964bc84264202ccdd63110a28f6e078,tensorflow/docs,"Move Signature to code block, like c++
Change: 149969411
"
b49280ed97f1548dd9e2ea72a2828f5d0c5e5496,theborg3of5/ahk,"Cleanup - switch out regexreplace calls with just strreplace calls wherever possible, fix cleanupText to work with regex chars at end.

Also replace places that were replacing tags with references to replaceTag(s).
"
ef8c2ef0c0a56b84469ec531c330f66d9863ecfe,theborg3of5/ahk,"Tweak Selector return value when no data given by user (return """" instead of empty array)

Also update callers to check for (!data) to early quit.
"
638e82254aad3b68a14c6d2a13efaee31e3f00ab,webpack/webpack,"updates to enhanced-require, optimizing amd
"
8fd994c7c7a018606d5beac3d3f5f463a278f708,webpack/webpack,Merge branch 'master' into refactor-9
61bc4eee09e16fb841659880fe83245c13772e97,webpack/webpack,"Remove redundant `.type=""text/javascript""` and `.async=true`
"
0110035706b5ffc973d75a101515682208412956,webpack/webpack,"Merge pull request #5497 from athomann/convert-binds

Convert .bind(this) to arrow functions"
d7384e2f6a17187e59ec2831b41ee813ec158f14,webpack/webpack,removed unnecessary context argument
47f26013d7a69c36ff9454e653103079cac7fb74,webpack/webpack,"Merge pull request #6261 from ooflorent/top_level_this

Rewrite top level `this` to `undefined` in Harmony modules"
0ec792b742199ac8da3cc0011f0856269420061c,webpack/webpack,"Merge pull request #5932 from webpack/refactor/sets

refactor more properties to Sets"
5828a7b1fdbb5253ad2d886d8d07a38825c1663f,wildfly/wildfly,"[JBAS-8466] Refactor interface element hierarchy; fix handling of inet address criteria
"
87489928d8763868483cef2f4406992954a15b2b,wildfly/wildfly,"repackaged parsing classes and adjusted some API to better reflect what it is about now
"
24ce5a43f65ebe5991c1019eaa1a1dfa269234e0,wildfly/wildfly,"Remove unused dependencies from dependancyManagement

 -remove shrinkwrap module as it is not used by anymore.
"
9bc76079e9080b67ce4f5a4b45572237d8609d53,wildfly/wildfly,"Move to WildFly Core 2.0.0.Alpha12
"
1af2b154ec4daa8436ba6f946ef54fe201062c6a,wildfly/wildfly,"Fix compilation errors in EJB3 module to start refactoring the EJB3 component
"
77a442d06737e36d7edd82ff92963344243b054e,wildfly/wildfly,"Initial changes to the EJB3 component to move to the new EE framework (WIP)
"
ea7b9560b5358a1689439099680e497f69dee2a2,wildfly/wildfly,"Add more configuration, and cleanup.
"
968c6bcdcce65b9319c376d1723dd138125ed351,wildfly/wildfly,"Re-write Class-Path support for better spec complicance and simplicity
"
dd10af86525ceec8ecb9f74607508deccdab4f04,wildfly/wildfly,"Have former BootOperationHandler impls only change runtime at boot; signal reloadRequired otherwise
Add some rollback handling to write attribute handlers
General cleanup of write attribute handlers
"
ebd002eb9c39feadc4f2966fb9a317e9414bf35d,wildfly/wildfly,"Split up class and component processing into seperate DUP's
"
00df15cfb2c1493bd587504b72af01d5d7e7aa9f,wildfly/wildfly,"[JBAS-8942] Rename <management> element to <management-interfaces> in both host.xml and standalone.xml.
"
a22aaf7f9b99b3d3c5ecbeee3eac85a795cd012b,wildfly/wildfly,"Separate CacheContainer and Cache add commands.
"
ee0cceeb583ccac5d099ff7f47ef6707eb58b3f6,wildfly/wildfly,"Rework lifecycle interceptors to be more spec compliant
"
617594c679989fe777bf074244391d62ff192ce1,wildfly/wildfly,"AS7-3124 Upgrade Infinispan to 5.1.0.CR2
Remove use of deprecated APIs.
Add workarounds for ISPN-1644, ISPN-1684, ISPN-1685, ISPN-1686
AS7-3189 Infinispan caches should be accessible via jndi.
"
7b77cf0d81ea3a6bee5bca6ed533ff4123eba83e,wildfly/wildfly,"[AS7-734] Unify demos
"
55d615c54956131478f3d6b4b375e3de3dae78ea,wildfly/wildfly,"split process-controller and version modules
"
1f2230b699443b2e390c9d8ca3473dcec8b13efa,wso2/product-ei,"Rename profile into microIntegrator
"
e2cc77f33ad1abf595d9ead4589aaff7eec53d35,xesscorp/KiCost,Improved CSV behaviour and minor improvements
d0bd3d83cd669810fd68c17f88284a960b60c336,zorael/kameloso,"Rework pipereader to do the terminal output

Do the work that createFIFO used to do. Also, now take the filename of
the fifo as an argument.
"
c64179f709a7f31791a0874c0a88a331440607ff,zorael/kameloso,"Rework BasicEventHandlers to use new WHOIS scheme

And more sensibly, deduplicating some code.
"
76e7f6749b8300bfa60f4ded1abbd02eb9ab952d,zorael/kameloso,"Break out IRC bits into own package

kameloso.irc.{package,defs,common,colours}.
"
de9177b4393f961d418f560d3823f470620b0f54,zorael/kameloso,"Use extbanPrefix and exceptsChar in setMode

Instead of hardcoded values.
"
22466a7fda0f79af25af18b45093a5182da663f8,CZ-NIC/turris-os,"unify congestion control options

git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@15844 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
0717d70dd3502711f971f9080896742d2b4a9015,CapsAdmin/goluwa,"upload buffer using glCompressedTexImage2D instead


Former-commit-id: cf8b36019be101ed65330b4b471459e045733dcb"
315593819859ed80fa3c6945374b45bedcd12d77,LogicalDash/LiSE,"Improved organization through the magic of late imports.
"
a299d9f6837036e9441162b1eca865285719deb8,LogicalDash/LiSE,"Improved timeline rendering. Branches still broken.
"
68e9118b94a59b4386d8909cb0f2b603c63c1a74,Mirantis/virtlet,"Fixed cleanup in case of failure upon CreateContainer
"
251b9b926f58a0bbdfb490dbcdc361f7b38077a7,Talend/data-prep,"TDP-32: fix merging issue & imports optimized
"
0628e26795d26fad992d4a5d5ebd3ddbbe0d0fa0,Talend/data-prep,"feat(TDP-5296): bootstrap react-cmf project (#1143)

* chore: home page on cmf

* feat: saga

* close modal when clicking on background

* chore(About): func to class

* feat: Header bar links

* chore: integrate dataset

* feat: list toolbar

* feat: add columns and set col sizes

* title edition mode

* merge issue

* settings

* Adding preparation copy

* settings

* Adding preparation copy

* Adding preparation copy

* fix merge

* cc

* cc

* cc

* actions cc

* rename and cancel rename

* feat: preparations icons colors

* Upgrade versions

* feat: folder navigation

* fix copy and rename

* work on preparation creator

* fix(TDP-5296): bootstrap react-cmf app

* fix(TDP-5296): deal with tests

* fix(TDP-5296): deal with tests

* fix ee

* fix(TDP-5296): fix prod mode

* fix(TDP-5296): fix unit tests

* fix(TDP-5296): fix angular bootstrap

* fix(TDP-5296): jest testRegex

* feat(TDP-5296): settings load order

* upgrade libs

* feat(TDP-5296): bootstrap all versions

* style

* style

* feat(TDP-5296): bootstrap all versions

* feat(TDP-5296): review

* move files

* fix lint warnings

* add additional localstorage as option

* feat(TDP-5296): review

* feat(TDP-5296): review

* feat(TDP-5296): review

* fix: rework bootstrap

* TDP-5296: Fix codacy and build issues

* feat(TDP-5296): upgrade node version

* after merge

* style
"
d8073e1cb748bf4ad858b36b5c8889f453931578,Talend/data-prep,"TDP-1467: Tranformation process rewriting.

New implementation of transformation process to address issues:
* Lack separation of action contexts.
* Lack of execution metrics.
* Lack of debug / diagnostic capabilities.

Transformation pipeline object model (Pipeline, Node, Link).
* Allow writer configuration in pipeline builder.
* Allow configuration of analysis in builder.
* Adds a signal() method to pipeline's object to allow end-of-stream event.
* Introduce fast ""inline"" analysis transformation in pipeline.
* Adds a Delayed analysis node for analysis that depends on other (inline) information.
* Provides a WriterLink for TransformationWriter (output link).

Action
* Remove confusing ParsedActions class.
* Renames Action::getAction() to Action::getName().
* Adds way for actions to statically describe what they do (modification on metadata / values).
* All action that creates columns should create them in compile execution.
* Optimize delete column.
* Fix inconsistent Split behavior in compile (all columns to be created in compile).
* Review copy column action to prevent issues in compile phase.

Transformation service
* Adds a tranformer implementation based on new Pipeline model.
* Merge input/output row metadata for action context into a single method.
* Adds a ""NON_EXECUTED"" status for ActionContext.
* Use row metadata from context iso. from data set row's in action to allow easier transformation flow handling.
* Migrate NullAnalyzer to a singleton.
* Emit now takes into account metadata changes to better accomodate cases where metadata changes in middle of transformation.
* Adds Javadoc for main pipeline elements.
* Use StatisticsAdapter from Spring @Autowired.
* Adds Statistics Adapter in pipeline builder.
* Code clean up (unused classes, logger levels).
* Removes previous implementation of transformer.

Diff service
* Implement diff based on pipeline elements.
* Removes previous implementation of diff.

Fixes
* Fix regressions due to action method name changes.
* Fix issue relative to incorrect delayed analysis values for deleted rows.
* Fix issue relative to change type (incorrect stats due to type forced status).
* Fix issue relative to metadata change during preview.
* Fix issue in TypeUtils overridding forced type.

Unit tests
* Modify ActionWorkbenchUtils to leverage new pipeline elements.

TDP-1486: use tranformation context from configuration iso. using a new one.
"
7856614923b4803f618e7221be020f95fa3a7187,Talend/data-prep,"TDP-1352: review - clean unused code and component bindings, clean styles, rewrite unit tests
"
3550d8c503f764c69de51e2a75a71a0aaab6e8ea,Talend/data-prep,"ops : move displayed version in config file, init version value before bootstrap
"
983ede7080bf826a0d84f410393833d123107d93,Talend/data-prep,"TDP-702: Side improvements / refactorings

* Sync change type action with domain action changes.
* Removes getTransformedRowMetadata() in transformation context as it's no longer used.
* Get rid of ""forced columns"" during transformation (rely only on row metadata).
"
7e710c550f16c5b11242ecb37d434a396c6fbb64,Talend/data-prep,"use slf4j instead of commons-logging
"
bde9eec6a4b335dec3837b6636d153463a28d679,Talend/data-prep,"TDP-1060: code review done + backend-common/src/test/resources cleanup
"
8d5f89f6bddfb3646a882f99efd9b94713fb03ef,Talend/data-prep,"[TDP-401] fix navigation cleanup code

Signed-off-by: olivier lamy <d3548cf353cfa8a03c6f2a815e39e2c0a78449a5@apache.org>
"
e6900a7082ec7dfa9e5407c11f806c0771a31d2a,Talend/data-prep,"TDP-49 : extract transformation params into a standalone reusable component. It can be used now in recipe for example
"
f7293b7626101dd156350c9dd0f0b2401513c8df,alpha-unito/PiCo,"cleanup
"
5938de7e9ecb41e17e6fa5cf91a911c626862c45,bazelbuild/bazel,"Clean up R class generation

Remove R class generation from AndroidCommon and instead invoke it just after
resource processing. This is much more intuitive, behaves the same, and will
make it easier to call into R class generation on the new pipeline.

Also, clean up some dead code (including newly-dead code) from AndroidCommon.

RELNOTES: none
PiperOrigin-RevId: 193345190
"
452fcd0050afa68bf1544492c396806f3395bb7e,bazelbuild/bazel,"Adds the label of the cc compilation context providing the linkstamp to the Linkstamp class. Uses
that for equals instead of reference equals of the NestedSet.

Warning message now emits the offending rules.

Small AutoCodec cleanup.

PiperOrigin-RevId: 223991351
"
ad7b61286e29364d6c7e386f218c6c3b0530bfdc,bazelbuild/bazel,"Remove the functionality to do ahead-of-time #include extraction as a separate
action.

RELNOTES: None.
PiperOrigin-RevId: 207516074
"
9c445faa58aeff5ee70581bf5479472a08e3ef14,bazelbuild/bazel,"Simplify RuleContext API

Use ConfigurationMakeVariableContext instead of passing in lists of
MakeVariableSuppliers.

Progress on #2475.

PiperOrigin-RevId: 170182945
"
d8a9344699da2f6258eafa22566c7e541ec09792,bazelbuild/bazel,"Move TargetCompleteEvent generation to the CompletionFunction

This change breaks without https://github.com/bazelbuild/bazel/commit/a0ea569f7df19b8284846a52854e73747f7ec005; if that change is rolled back, this
change has to be rolled back as well.

It was previously in ExecutionProgressReceiver, and directly hooked into
Skyframe. Now that we have a way to post event bus events directly from
Sky functions, we should just do that.

Also, this allows us to access artifact metdata, since the completion function
has all the necessary artifacts as dependencies, which in turn can be used to
improve the build event protocol implementation, where we want to post URLs to
the CAS, which requires knowing the checksum.

PiperOrigin-RevId: 179903333
"
4e093d8e08454c9c2c04e94fe2e97ef4592198b6,bazelbuild/bazel,"Replace Attribute.ConfigurationTransition with config.transitions.ConfigurationTransitionProxy.

The ""proxy"" part is to dissuade people from writing:

 void myfunc(ConfigurationTransition transition)

signatures casually.

Maybe that's actually a better name than ""Transition"". But I'd rather
rename Transition to ConfigurationTransition in its own change if we
want to do that.

PiperOrigin-RevId: 180285321
"
a55714cab4d75ef944e815baf3f1ae5ec9418812,bazelbuild/bazel,"Set default of --incompatible_remove_native_{http_archive,git_repository} to true

...and switch tests to test the skylark implementation rather than the (deprecated,
by default disabled) native implementation.

(Rollforward with remaining calls to the native funcitons in the WORKSPACE
 adapted as well, tus fixing bazel_determinism_test.)

Change-Id: I3b604a27615f36463e62112dd02319fcf24f90f0
PiperOrigin-RevId: 218309750
"
3e2cee83eddb340d9a0d96cc545ccbda76b489ac,bazelbuild/bazel,"Add methods for filtering LocalResourceContainer

Dynamically Configured Resource Filtering change 1/6

To enable dynamically configured resource filtering, we'll need to be able to
pass filtered resources into resource processing code used by android_library
targets. The resource parsing action, used only in android_library targets,
takes the LocalResourceContainer as an input, unlike android_binary processing
code which never used it directly.

Abstract the code for actually building the collection of resource roots out of the withResources method, and create an additional method for calling it from resource filtering.

Also, split some common test code out of ResourceFilterTestBase to make a ResourceTestBase class for testing changes to this (and eventually, other) resource-oriented classes, and create LocalResourceContainerTest for this class in particular.

RELNOTES: none
PiperOrigin-RevId: 160640192
"
deb99598d504956836b6fab6492ae651192a59c6,bazelbuild/bazel,"Adds a helper method to copy an EvaluationContext with customized keepGoing value.

RELNOTES: None
PiperOrigin-RevId: 219344569
"
c2cd9574bd21c476043234b317b1730c5600bad0,bazelbuild/bazel,"Add a flag to guard the SkylarkCallables that have been exposed for the Android
Rules Starlark rewrite.

RELNOTES: None.
PiperOrigin-RevId: 215460549
"
86f6dc25a6ce8e50ce237c19a434d4e871fd0f73,bazelbuild/bazel,"Add @CompileTimeConstant annotations to CustomCommandLine.

This enforces certain memory-efficient patterns. For deliberate use of dynamic strings, explicitly named overloads are introduced, with javadoc that guides the programmer into making the right choice.

This CL is a memory no-op on benchmarks, but it tries to prevent backslide by making sure programmers make conscious choices when they construct their command lines.

RELNOTES: None
PiperOrigin-RevId: 165185997
"
67549a752c2316234b19d7b50ea84a8ae80d3669,bazelbuild/bazel,"Automated rollback of commit 3c5a1098af0c5ae80d4e3b1fc52dd1fef6027d43.

*** Reason for rollback ***

Breaks bazel ci: https://github.com/bazelbuild/bazel/issues/4894#event-1533040075

*** Original change description ***

Add crosstool_lib.bzl and crosstool_utils.bzl

These will be used to rewrite current crosstool autoconfiguration into
action_configs and features.

RELNOTES: None.
PiperOrigin-RevId: 189901308
"
4e5037520e3067f9d8784e1c59f9545b96111cd4,bazelbuild/bazel,"Remove support for the deprecated include() statement.

This is part of the crusade to eliminate as every dependency in Skylark on the rest of the code so that it can be moved deeper in the dependency graph.

RELNOTES: The include() statement in BUILD files is not supported anymore.

--
MOS_MIGRATED_REVID=103279943
"
9bf3f6af2e42feb3ff7ef589b0d9570029bbab67,bazelbuild/bazel,"Rollback of commit 1e37a5375f918376c132fa537e25695f673f41b8.

*** Reason for rollback ***

Apparently we now try to open output files for the process twice: once when we are constructing the output streams, and the second time when we tell the process to redirect its outputs. This causes the outputs to be empty on Windows

*** Original change description ***

Do redirection of stdout / stderr in Java instead of reimplementing it in every process wrapper again.

--
MOS_MIGRATED_REVID=126801016
"
59f1d889f71d6d203ca061787d4ea16465df1916,bazelbuild/bazel,"Add more type safety to CustomCommandLine.

Allowing add(Object) is too loose and can easily lead to programmer mistakes.

Because of type erasure, we can't use the same overload name for (eg.) add(NestedSet<String>) and add(NestedSet<Artifact>). The API is overhauled to use the same terms everywhere, eg. ""add"", ""addPaths"", ""addExecPaths"". This is similar to how it used to be a few CLs ago.

The API is overhauled to make sure it's consistent for all types. While tedious, the facade methods immediately dispatch to internal helpers, so implementation wise it's not too heavy.

While large, this CL is almost entirely an automated refactor.

PiperOrigin-RevId: 165358287
"
b7e82427fda770eccebfd92898f157cebbde4dca,bazelbuild/bazel,"Remove unused android_sdk.resource_extractor attribute from all BUILD files in
the depot.

RELNOTES: None
PiperOrigin-RevId: 167027301
"
6f864c3a5d1aa03037cf9e8c6ab853f278d67d9a,bazelbuild/bazel,"Renamed Ident to Identifier, added some helper methods and refactored two methods.

--
MOS_MIGRATED_REVID=98922811
"
ad1a77e296fe5f05624109f3af04c5bc3257e9b6,bazelbuild/bazel,"Eliminates performance overhead of --experimental_dynamic_configs=notrim.

Before this change, a non-trivial real-world build was measured to have about 20% analysis time overhead. After, that's theoretically down to 2.4%. But that's only the analysis phase, so the impact on full builds is smaller. And the impact on analysis-cached builds is zero. And practical tests show no obvious difference (JProfiler is probably overstating the impact since it excludes known heavyweight methods).

The improvements, in short:
 - Optimize a sanity check that expects each <Attribute, Label> pair to only have one transition. This alone was over half the original performance penalty.
 - Simplify logic for null configuration deps (of which there are many, e.g.: all source files)
 - Skip a check for required fragments not available in the configuration. This is irrelevant for notrim mode.

There are still some places we could optimize. Dependency.withNullConfiguration in particular takes measurable time (I think from being constructed all the time and in its hashCode calls). But this doesn't seem pressing given the new numbers.

--
MOS_MIGRATED_REVID=134533452
"
adc4a02d95a9b59d3c76f600cdebab71081e5708,bazelbuild/bazel,"Add two binary size optimizations when --compilation_mode=opt and --objc_enable_binary_stripping are specified:
1. Symbol strippings. A new strip action is registered that uses Darwin tool /usr/bin/strip to remove the symbol table of the linked binary.
2. Dead-code strippings, which uses linker flag ""--dead_strip"" to remove unreachable code in binary link action.

RELNOTES: Add a flag ""objc_enable_binary_stripping"" to enable symbol and dead code strippings on linked binaries generated by ObjC rules.

--
MOS_MIGRATED_REVID=96587585
"
99de0d07574f808fee36826289cb1f5c83e3b3e0,bazelbuild/bazel,"Cleanup: store non-code inputs to link actions separately.

--
MOS_MIGRATED_REVID=129743936
"
a54c20e1cacfff9712bbf4bd0b458b18a82bc3a8,bjadamson/BoomHS,"move mouse picking code
"
75a98f21e71f98fb17ed813517d391cf39c585bd,bjadamson/BoomHS,"move matrix computation functions to free functions
"
77aac49d4eae315d30624bcc48f16483d33b699a,bobintetley/asm3,"Refactored incoming online form and some animal updates #252
"
3d4cc2bd64e6f0842a11b70a5ee4a9fe4184333b,bobintetley/asm3,"refactor shelterview to new scheme
"
fc21d9b9d5515b462e7559350eb38a71cc9356ec,bobintetley/asm3,"rename bulk email to bulk mail
"
5879493cacd8b0d2bbff392aac4b6e7962574743,bobintetley/asm3,"offset attribute for now/today, animalcontrol refactored for parameterised queries #252
"
6fc22f26b8332d501a7ef17e4acd792fc2765a02,cinava/order-lab,"fixed assistant on search (make the same macros as in user's snapview)
"
f6ac3f7326614be4a586f02ca7c910f55a0c2e91,cinava/order-lab,"finished with removing deprecated security.context
"
b1f4f8e86c8b1c5f63d6f157aa242c62d726a9b4,cinava/order-lab,"implemented single collapse button (without children collapsing)
"
5ee3f08ed11b36c2e8762cc85ffe973ce4dcb9e0,cloudfoundry/cli,"convert share-private-domain to non-codegangsta [#97061558]
"
73a266d099f39e89cf3ff0d8833e2ac9905ab253,cloudfoundry/cli,"Reorganized testhelpers package into sub packages

Signed-off-by: Damien Le Berrigaud <99e6b749acbfbe2a596df99e91d24d6e1fdbee00@pivotallabs.com>
"
f5b99a3825a12ff3030b323f34f6f8eafe518ee3,cloudfoundry/cli,"Extracted service instance summary off space repository

Signed-off-by: Nick Wade <0ae7801e1450b93d494baac68f1ed62bce32d907@pivotallabs.com>
"
273e753631e8b1ed65cf7f50925ab7c9d5e95d15,cloudfoundry/cli,"Extracted upload out of application repository

Signed-off-by: Ted Young <66c8979f4bb24f9b49cd80cbed4f06a51450d4f8@pivotallabs.com>
"
98710915f76ab8680574e4e552a306169e7e5b65,cloudfoundry/cli,"Refactor tests to use testassert SliceContains
"
6de5b97e1ff999652ad1e558df6ec13db43878c6,cloudfoundry/cli,"Add cli version to the ""aww shucks"" messsage.

- Refactor the panic handler to use a new panic_printer package.

[Finishes #75131050]
"
ae496eef6ac31f2c799344ff650b1708a7f65c30,cloudfoundry/cli,"Renaming Authenticator to AuthenticationRepository

Signed-off-by: Damien Le Berrigaud <99e6b749acbfbe2a596df99e91d24d6e1fdbee00@pivotallabs.com>
"
63b32bf85f269c7da73ff6ff728b8a9117d4b001,compbiomed/celda,"Added new distance metrics to celda (#227)

* Added new distance metrics to celda

* Add library(SummarizedExperiment) to tests

* rename diffExp to diffExpBetweenCellStates
"
d35a03a0d63cd1e380c1ea447f97cfcdafd52f53,edx/edx-platform,"Merge pull request #908 from cpennington/reference-runtime

Replace references to .system"
4bbe9a202119086d21ebbfa2368185c1bbdd1c34,edx/edx-platform,"Merge pull request #11326 from edx/mobile/remove-dead-code

Mobile API: remove unused endpoints"
6894dafa617f77596267558d508adb7a2ed5214d,edx/edx-platform,"Merge pull request #15161 from open-craft/uman/OC-2663

ENT-392 Refactoring"
43d8574e920568f35f6847da9173a3ed4ec615d1,edx/edx-platform,"Refactored use of test_system in xmodule unit tests
so that a new one is created for each test
"
2981f532c1f91de36c468f4e2b7b71c76899a63d,edx/edx-platform,"Integrate Brian T's front-page changes, add epfl and delft

- removed duplicate logos.
- cover images are still in the 200-350 KB range.
"
afd85845694c4ff81ed1715209876e56a9e8ba31,edx/edx-platform,"remove explicit 'null' for child collection on saveName on unit code paths. I had seen cases where save was posting back an empty set on renames - deleting the components. But I can no longer reproduce it now.
"
b9ed758246dc44872d61b2a9c89e319253c33a26,edx/edx-platform,"Initial syles cleanup and changes for course discovery on openedx
"
6af5fc145296a4cd3bf1c4b93df86a84967219f3,edx/edx-platform,"ECOM-1339 Branding API footer

Serve branded footer JSON/HTML/CSS/JS from an API endpoint
in the branding app.  Refactor OpenEdX and EdX.org footer templates
to use the Python version of the API, ensuring that the API
values are consistent with the footer included in main.html.

Detailed changes:

* Added footer API end-point to the branding app.
* Footer API allows the language to be set with querystring parameters.
* Footer API allows showing/hiding of the OpenEdX logo using querystring parameters.
* Deprecate ENABLE_FOOTER_V3 in favor of the branding API configuration flag.
* Move no referrer script into main.html from the edx footer template.
* Rename rwd_header_footer.js to rwd_header.js
* Cache API responses.

Authors:
Awais Qureshi, Aamir Khan, Will Daly
"
206cedf55ef2580544aaf16421854f684376650b,edx/edx-platform,"Deprecate extra_args in favor of just passing through all unknown options
"
837e87e177e1632721ac5e48a92df5f689b3c666,edx/edx-platform,"Modules moved into their own directory

--HG--
rename : courseware/capa_module.py => courseware/modules/capa_module.py
rename : courseware/html_module.py => courseware/modules/html_module.py
rename : courseware/schematic_module.py => courseware/modules/schematic_module.py
rename : courseware/video_module.py => courseware/modules/video_module.py
rename : courseware/x_module.py => courseware/modules/x_module.py
"
988753395fa7509472b99b420057e151ce213399,edx/edx-platform,"Add support for external auth on the combined login/registration page

Add support for redirect URLs in third party auth for combined login/registration page

Remove old login/registration acceptance tests

Add deprecation warnings to old login and register views

Move third party auth util to student_account

Add exception for microsites
"
a3d24d41f5106406b29f697f8ae84669707a53e3,edx/edx-platform,"second pass in capa cleanup:
  - each response can now render its own xhtml
  - cleaned up LoncapaProblem.extract_html
"
41b9f9f071d023871fa7da1b1c0297f3fb1d63fe,edx/edx-platform,"factor out cybersource processor from cart
"
b118f4361cd96fe76c0eebc52d7dc0028a56b7f2,edx/edx-platform,"Tracking improvements. Calculator is tracked
"
d9bb5365dd4e54f62d9016541d0222f5d44ac508,edx/edx-platform,"Merge pull request #3982 from edx/dcs/move-i18ntools

Moved i18n tools to i18n-tools repo"
649578ea2f51d824eeb823571dc5f0916432b755,edx/edx-platform,"unify flag moderator permissions
"
a8417df7badc1ce58dfac2bd61e0acbf96b1acf9,edx/edx-platform,"styling for recursive xblock rendering structure to be used in the container page, pulling from general xblock styles in a separate file.
"
8a30e9ba8f5e484e4257a69035b20342a41520c7,edx/edx-platform,"Legacy email tests, removed duplicate code, updated comments, fixed CSS
"
b6fcf3a51ec05c4905dd466965cf9cdc6ccdc193,edx/edx-platform,"Some refactoring from Brian's submission.
"
17c77dd1577d9ea8e2700eea41c17e5eb9f97f52,edx/edx-platform,"Merge pull request #392 from edx/fix/vik/answer-unknown

Simplify save_grade and pass through answer_unknown"
d6ced072c41485a2eb26165cd65e3078152bb88d,edx/edx-platform,"Refactor CourseDetails
"
baa9d06e97a03a35347a3bd8aee0df5acd06790b,edx/edx-platform,"Have DiscussionXBlock take care of loading JS and CSS files it depends on.

* Add openedx.core.lib.xblock_builtin.get_css_dependencies and get_js_dependencies,
  which respect PIPELINE_ENABLED setting when determining dependencies.
* Move new discussion-related Sass files into discussion subdirectory.
* Use ""load_unicode"" instead of ""render_template"" to load JS to add to fragment for DiscussionXBlock.
* Remove unused ""course"" parameter from context for DiscussionXBlock.student_view.
* Add RTL stylesheet for DiscussionXBlock, and enable the block to load correct stylesheet.
* Load MathJax only once, and include code for configuring MathJax in discussion bundle.
* Make sure username renders correctly in DiscussionXBlock response header.
* Move WYSIWYIG Markdown editor styles to _build-discussion.scss.
* Remove unnecessary import of discussion/utilities/v1-compatibility from _build-discussion.scss.
* Keep courseware-chromeless.html in sync with courseware.html.
* Load CSS for discussions on Teams tab.  This makes it possible to remove CSS for discussions from Sass files for ""Course"" tab.
* Load js/src/tooltip_manager.js, jquery.autocomplete.js and jquery.autocomplete.css on ""Course"" tab.
"
88159623561527391df3b42fa0a779ac9e23185a,edx/edx-platform,"Studio: Converts all class-based Sass archetype-focused  @extends to use Sass placeholder syntax
"
a1ba97376a04644f30fb765fdd14becc98e6fdf6,edx/edx-platform,"studio - sass cleanup: further revisions and box-sizing all elements for consistency
"
1f2f3de4a2911c887589bae911e0fb22a7302533,edx/edx-platform,"Merge pull request #10809 from edx/asadiqbal08/SOL-1455

asadiqbal08/SOL-1455 Certs: Revise Exceptions UI"
e982d7fcdc9380902b128e199e93319a83d9e776,edx/edx-platform,"Refactor test_contenstore to remove code duplication.
"
4ee9ef61cf43f10c5d7c81f93974c02dad122262,edx/edx-platform,"Clean up some old pep8/pylint violations

Also, deletes some unused code.
"
6f3e83b86cd93f1df91c2c7cffbd7b010bc151ab,edx/edx-platform,"Major cleanup work on ShoppingCart models

* Make currency a property of the Order (for validation purposes)
* Remove null=True from Char fields
* Use InheritanceManager for subclassing OrderItem
* Change VerifiedCertificate to better handle some new use cases
* Cleaned out old migrations
* Tests!
"
f555ffd585dc1eeacb6cbc3e00014a72a5b7c35c,edx/edx-platform,"Refactor and improve js_utils helpers

- Rename escape_json_dumps to dump_js_escaped_json
- Rename escape_js_string to js_escaped_string
- Update js_escaped_string to output empty string for None
- Introduce dump_html_escaped_json
- Move dump_js_escaped_json after the pipe as new best practice
- Introduce additional uses of helpers
- Introduce new djangolib directory and move js_utils
"
86344417ffb002f7086e887d2d92e1d99bcbd8ef,edx/edx-platform,"Merge pull request #207 from edx/dhm/pep8

pep8 changes made during long refactoring"
10ee2dea82a65429c93eba08c7f47d7cbaf27a30,edx/edx-platform,"Clean up imports
"
b1eccdf2d45df185af04e2d3c1247c4702c0f707,edx/edx-platform,"Replace unit page with the container page.

STUD-1754
"
91379aa9a68856105f5abd9cd2596a56637f1e1d,edx/edx-platform,"improve date search, fix respnding, make sidebar expand when discussion column does
"
a3887e951cb3cdd4984c479109c59352bca65994,edx/edx-platform,"Courseware license (Creative Commons): FED

Use native checkboxes for courseware license options
In Studio settings editor for video module, don't show license if feature-flagged off
Don't let Scope.contents fields leak to Studio editor
JS gettext() must all be on the same line for i18n
Add docstrings for bok-choy tests
Remove LicenseMixin from HTMLDescriptor
Responding to UX review feedback
Add aria-pressed attribute
Use https links instead of protocol-relative links for links to creativecommons.org
Remove license from course outline page in Studio
"
99cf0ec54aa203d08afc06e4eb07c0d302cf0dd8,edx/edx-platform,"Merge pull request #1727 from edx/christina/public

Minor cleanup around public RESTful URLs."
33b3dfcc9279ce59a1b8adf49adb638202d8680f,edx/edx-platform,"Converts Discussion XModule to Discussion XBlock

* Renames discussion_module to discussion_xblock
* Moves common/lib/xmodule/xmodule_discussion to openedx/core/lib/xblock_builtin/xblock_discussion
"
5fca0521b20cf77bc754deeabb1a2ab951e8f49b,edx/edx-platform,"Merge pull request #15538 from potsui/fix-duplicate-account-crash

Catch exception with duplicate username/email"
820cc4aaee26a058d374cf3aa54e16ad3efdb8c2,edx/edx-platform,"Merge pull request #6784 from edx/will/invoice-refactor-squashed

Invoice data model refactor"
0bff61533d4d01e1501905deca4e8206a09d85e6,edx/edx-platform,"Merge pull request #15585 from edx/andya/learner-profile-as-feature

[WIP] Refactor learner profile into openedx/features directory"
2df3a6ef11b85ece2cc36a770a3942dc28bd7105,edx/edx-platform,"Big access control refactor

* All access control logic is now in access.py
* It exports a single method for general use: has_access(user, object, action)
 - possible actions depend on object type (e.g. 'see_exists', 'enroll', 'staff')
* Removed DARK_LAUNCH feature flag--it is now the default behavior
* Replaced check_course with three separate more focused functions that use has_access

Minor things:
* note on using pdb in testing
* moved time parsing helper into timeparse.py
* x_modules now have a .start attribute (None if not in metadata)
"
787545c83e994e5436417e170cb0d598bdb6e410,edx/edx-platform,"Renames LTIs to lti_passports.
"
cb40e9ff88b294ccdeb60e0598fd81ad469b5ef1,edx/edx-platform,"Fix a few remaining tz naive dates

And remove redundant but != date parsing methods. In process make
the general parsing function less lenient (don't default date nor
month)"
38c16891c5e9cf99e2d238ad48d4800f17edd836,edx/edx-platform,"Merge pull request #16182 from edx/robrap/LEARNER-2026-course-info-events

LEARNER-2026: Refactor course info events"
51deec380ea8ce781dc9139c55c1204a66467443,edx/edx-platform,"ECOM-1661 removed nav links for logged out states
Add context for navigation states
added find course to dashboard sidebar and included check for context that Will adds in PR
removed nav_course_search context due to design change so replaced with nav_hidden
Removed rwd_header.js and all references as no longer being used.

Wrapped Find Courses in dashboard sidebar in if statement
"
5d9fad5a5250ed3c0e4bb0e6ad7618f5535cc24b,edx/edx-platform,"Minor cleanups before pull request
"
cc6e0c55c4b6e26acf51683d6150462b61a8934c,edx/edx-platform,"Cleaning up the envs/* files so that they will work with gunicorn_django
"
95dd21738cb289b66925325e605b81be5280c79d,edx/edx-platform,"Studio: revises CSS reference/pipeline architecture for better organization, reduced redundancy, and to handle IE9 selector limits
"
9a07227ed20abe47bd8eba4abce1e062941449b9,edx/edx-platform,"Merge pull request #16082 from edx/naa/remove-old-waffles

Remove unneeded WRITE_ONLY_IF_ENGAGED waffle switch"
3e62c5e29ae2ce29db80b227604cfef067d7ec54,edx/edx-platform,"Cleaner tests
"
b30222c00f8dd48660883e0a93143c9390d061d1,edx/edx-platform,"Refactor studio tests to use StudioCourseTest
"
b6469642fd313315307da29b4ff89a0c7c4cc253,edx/edx-platform,"Merge pull request #17599 from edx/fsheets/EDUCATOR-2324

Clean up old Studio Assets Page"
38ef22b8a2388e7dd246177faae5ccefed8bec1e,edx/edx-platform,"Using youtube api (v3) instead of v2 to get the video duration .

TNL-2413
"
c14c146d0ef194d73eb4544755a3ad9609f75515,edx/edx-platform,"Merge pull request #10841 from edx/mobile/optimize-course-api

Optimize Course Catalog using CourseOverview"
cb381a7cff44ff2a3dc356d105598579610e22a4,edx/edx-platform,"Use an X icon instead of text.
"
75d194e2798ca1f3cc8a28f451fd54c101e37312,edx/edx-platform,"Update credit eligibility

* Update credit eligibility when a user satisfies an eligibility requirement.
* Refactor set_credit_requirement_status arguments.
* Use django-simple-history to track requirement status changes.
* Refactor progress page by moving credit into a helper function and adding comments.
"
0a88746aef517bccf62fe4a58d1eb55a93d2451d,edx/edx-platform,"Merge pull request #18980 from edx/arch/jwt-http-cookies

Refactor Login Cookies"
864d831ce341f4f08483e33eea5f9437759210f1,edx/edx-platform,"Use XBlock handlers for handle_ajax in XModules

Adds xblock handler_url support to the LMS, and makes handle_ajax use
that code.

[LMS-230] [LMS-229]
"
4dee832f35cb00ac647e46e78bbba96090039c00,edx/edx-platform,"convert flagging to one flag
"
b44a0b31481f923ab4e83475f4e09a422a4f1294,edx/edx-platform,"Move to PyPI version of edx-analytics-data-api-client
"
c85a1557b6910d1b6e55ba9768e350c7b1025de5,edx/edx-platform,"Separate each problem type into its own file

Separate all exercise and tool types, and create a new folder to contain them.
"
58c7656fa4bc4f272c513af4dcca4bf1c9b85947,ehcache/ehcache3,"Merge pull request #247 from timeck/warn

add suppress warnings, unsued imports, etc"
9d63439c0311fe550e076dfc4d7978fdbbb530ef,ehcache/ehcache3,"Use terracotta message tracker instead of our own implementation (close #2041)
"
19d7c4fcc3061efd3570159f1111aa4123a5031f,ehcache/ehcache3,"Issue #455 Make Serializer instances cache scoped, and make a large number of cascading changes in the SPI tests
"
b6cfc1d7e937a60eb661b8bf9b11976e277d683a,ehcache/ehcache3,"Issue #844 Javadoc for core spi store tiering package

* Moved BinaryValueHolder to org.ehcache.impl.internal.store
"
e922728030eb3ada02972072d82d8c2f6bb1288b,ehcache/ehcache3,"Issue #233 rework cache entry events to use old-value and new-value concept
"
aacd4492d0c2d2e916eef8fba0acd48dbd6f28e4,formio/formio.js,"Convert all evals to new Function calls.
"
5c6fee94bf8486c6d1e7b02a9bb6a29d9bcd572f,formio/formio.js,"Improvement: Moved getInputMask method to utils.
"
0f14ef7d47d9b2af524650472eff516a74ad3bb5,formio/formio.js,"Fixed tests and made utils methods not require instance.
"
3b24f56eba777102cc62d8b641a0c5c113b7f6a4,getredash/redash,"#671: Improve chart editor UI/UX
"
482168f98e828864a55f82b66ab0da97c9742ef6,getredash/redash,"Merge pull request #84 from EverythingMe/refactor_flask

Big refactor: flask, peewee, tests, structure changes and more
"
17061fc0f9a37411528eb0b05c710a472b12a6dc,google/syzkaller,"dashboard/app: finer-grained access control

This is the bulk of work for opening dashboard.
Implement finer-grained access control (admin/user/public).
Show only info designated to the current user access level.
Rework UIs for more clarity re bug statuses.
Show fixed bug.
"
bad4246bf2c72fa97640fbf3cf5c092b5173f581,google/syzkaller,"pkg/report: improve akaros reporter and implement symbolization
"
63b3b4225a36c50d7266a4be01fd62d9921b4d67,groue/GRDB.swift,"Rename package to GRDB, and rename SQLite module to CSQLite
"
bd32afbed2a103bc8e28c73859f81d42499601e1,groue/GRDB.swift,"Rename DatabaseWriter.readFromWrite to readFromCurrentState
"
5a572b25a037f4f7f4a775ee441aedffb04670d9,groue/GRDB.swift,"Refactor the query interface types to enhance extensibility
"
f368af3d02e145b06839cf70baa5b9887b680e26,groue/GRDB.swift,"Support “TableViewEvent” on all all platforms

* TableViewEvent features of FetchedRecordsController supported on all platforms
* Renamed TableViewEvent to FetchedRecordsChangeEvent
* Renamed TableViewChange to FetchedRecordsChange
"
35a50d610d330f384ee4b298004d3e872aec5cbe,groue/GRDB.swift,"Rename DatabaseValue to DatabaseValueType
"
ee5159e9dce476675a4f2865119a6ab731ef62aa,junkerm/specmate,"Restructuring
"
aea043b0a52f19cdeb7f3daa1ad16642cc89de30,kactus-io/kactus,"Merge branch 'master' into agis/add-warning-when-rename-branch
"
11fa48a7e5b22a4c31ca114acbe990611b641b5a,kactus-io/kactus,"introduce unified ICommitContext to replace three replicated parameters
"
76b8ccfb102222fff8992d7527b0cb45167b199a,kactus-io/kactus,"Use an enum instead of a string
"
8a3b82af6868fea189e1026f26fd5a66ca53583f,kactus-io/kactus,"Split openPullRequestOnGitHub into two

This mirrors what we had prior to https://github.com/desktop/desktop/pull/2823/commits/852ba4dd265eddbdcf3d488b87fb00cfe4a9154c in that we now have two methods, one that cares about whether the branch is ahead/behind and one that only opens the create PR page in a browser.
"
a4fc0f689443b9f26f241ab875b7ba88d98408e7,kactus-io/kactus,"Merge pull request #217 from desktop/T-Y-P-E-S

Move from typings to @types"
761058fc7c3aae5b9839fd2fba41c9ee3b3825e4,kactus-io/kactus,"Move remote-based ops to their own module
"
7e7130633bfbc70b81281ea59ec7c2592b2e9516,kactus-io/kactus,"Rename, because I always think this file is about something else
"
c543d50df163f076fc4468c785f4a9f61de886a9,kactus-io/kactus,"tidy up names
"
e95ea1220c2a79987953036b93850dccef5bacfa,kactus-io/kactus,"Remove unused commit prop
"
db64c873b3d5e49cdc6d9d59e9e497deb769cb01,kactus-io/kactus,":art: Rename for clarity
"
84c019f55f53e8f2d6521be0b45bd0cfd0879d4a,kactus-io/kactus,"extract Popup and PopupType into own module
"
b9f5267c99560fe7c5823cebccf394c71e06a4dd,kactus-io/kactus,"Move the logic into a function outside the class
"
9284f925e51bfef8781f28f7dba28d6300104597,kactus-io/kactus,"tidy up chai usages
"
5dbaf9aab0c598580947e6554d5399cd00647b7c,kovidgoyal/kitty,"Clean up usage of TTYIO for remote cmds and the shell
"
fc7ec1d3f71983797eb4bce3c0b93ce30c913cf6,kovidgoyal/kitty,"Get rid of the option to use the system wcwidth

The system wcwidth() is often wrong. Not to mention that if you SSH into
a different machine, then you have a potentially different wcwidth. The
only sane way to deal with this is to use the unicode standard.
"
3a883ad43662ff8ff9249c11d206d693388796f1,kovidgoyal/kitty,"Move the sprites GPU code to shaders.c
"
5d604432e8f098626bebd32cb8856283f2155302,microhh/microhh2,"Cleaned up the thermo routines a bit
"
85db6d6324a249cb3f846872b2f456dd0c505e87,microhh/microhh2,"cleanup of fieldmaps (removed ""s""), move tmp fields from ""sd"" to ""atmp"" to allow automatic copies of diagnostic fields to GPU, without always having 4 tmp fields (we only need 2)
"
86b7747228f929c7aa97f47bee40476748595853,microhh/microhh2,"Moved last clearDevice routines to the destructor of their class
"
2dcf46206631e83d56454e75d63d932a4e7e036c,namhyung/uftrace,"Merge branch 'misc-fix'

 - support appending replay output field
 - remove unnecessary veresion.h build dependency
 - simplify *fork+exec test cases

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
80a0790f9a2be804e5c365374854a45bb9f25616,namhyung/uftrace,"mcount: Use double shmem buffer to speed up

Instead of map/unmap new buffer each time, use double buffering.  If
one buffer is full, it'll flip to another and then record to it.

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
89740b686ff4c36e0c5b349f783b44e76a6eeab9,namhyung/uftrace,"Merge branch 'filter-split'

support PLT and kernel filter by adding @<module> suffix in filter
description.  Also fix some bugs in the existing filter code.

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
c9e0f290f58911f0df78c95257b6b64e2e5736ec,namhyung/uftrace,"Merge branch 'info-improve'

Add more information about system and task like resource usage.

  # ftrace information
  # ==================
  # program version     : ftrace v0.4
  # recorded on         : Sat Oct  3 18:50:54 2015
  # cmdline             : ftrace -D5 node-cyg hello.js
  # cpu info            : Intel(R) Core(TM) i7-2640M CPU @ 2.80GHz
  # nr of cpus          : 4 / 4 (online / possible)
  # memory info         : 11.9 / 15.5 GB (free / total)
  # system load         : 0.85 / 0.85 / 0.85 (1 / 5 / 15 min)
  # kernel version      : Linux 4.2.0
  # hostname            : danjae
  # distro              : ""Arch Linux""
  #
  # task information
  # ================
  # nr of tasks         : 5
  # task list           : 19415, 19414, 19413, 19412, 19410
  # exe image           : /home/namhyung/tmp/ftrace/node-cyg
  # build id            : 843541c35cd442db60378e57ad5909c71b03c7ab
  # exit status         : exited with code: 0
  # cpu time            : 0.006 / 3.072 sec (sys / user)
  # context switch      : 34 / 15 (voluntary / involuntary)
  # max rss             : 34236 KB
  # page fault          : 0 / 4219 (major / minor)
  # disk iops           : 0 / 16 (read / write)

Signed-off-by: Namhyung Kim <5c915a589b3ddf58cebf14bec41bcc143b37ac3c@gmail.com>
"
9358dbbd205a7617115e18b5f720d4833843c2a0,nemerosa/ontrack,"#181 Simplification of acceptance context declaration - only positive matches are accepted in a given context
"
d648e6a141c72617b6a065356683c3e24204eab6,nextstrain/augur,"Merge branch 'master' into rejig

* master:
  gitignore
  Small flu build update
  Revise flu run script
  Update README.md
  Bugfixes
  Update sequences per month and bugfixes.
  Add virus counts to meta
  Clean up duplicated code.
  Tidy files.
  TIdy code.
  Functional checkpoint.
  Make build more modular, improve documentation, simplify to ""basic build.""
  Bugfixes
  Add wrapper script for seasonal flu builds
  added comment on all_regions
  added ref strain list (empty) for other lineages
  restrict frequency data points to pivot range, include reference strains in seasonal flu build
"
959a61c90ee786b475396ba3dc8af0135c280b85,nimona/go-nimona,"Cleanup api
"
5be62cedaee87317875acfdaa56c1871ad358bac,nimona/go-nimona,"Merge pull request #91 from nimona/refactor/message-switching

Saltpack-based message-switched network"
fd5eb88c1bbc2b0bed66851e91192469d1158707,nimona/go-nimona,"Split into smaller packages

"
228b85e496a5f16b9625662a997590ec3e79ac99,onedata/onepanel,"Merge pull request #129 in VFS/onepanel from feature/VFS-2550-mount-erlang-release-into-docker to develop

* commit '106c80365ee9118deb562d533f357c27fbf04558':
  VFS-2550 Make configure operation idempotent
  VFS-2550 Use cacerts instead of cacertfile in REST handler
  VFS-2550 Use cowboy https transport in REST listener
  VFS-2525 Fix vm.args generation
  VFS-2527 Add conditional onepanel cluster deploy
"
012d1aa7a235bba10e95316e396ad00571887e8b,onedata/onepanel,"VFS-805 Refactor update pages.
"
f6d9fbadb23a5dcd7aea026895b38e11f1d3ec2a,openstack/cinder,"VMAX driver - Base functionality, replacing SMI-S with REST

In VMAX driver version 3.0, SMI-S will be replaced with unisphere
REST. Pike will support VMAX3 hybrid and All Flash arrays. This
submission is for base functionality only.

Change-Id: Ic0bdf57bd5f2b1af8e7954c70225921c2501060e
Implements: blueprint vmax-rest
"
daf0b43dbf195c30a931b646481ffee5e28feda9,openstack/cinder,"DB: Optimize volume_update method

Our current volume_update method reads the volume from the DB, joining
the volume table with 4 or 5 other tables, and then do the update using
SQLAlchemy ORM engine before returning updated ORM object.

But the truth is that we don't really need to retrieve the volume again
in any of existing cases, since the caller either doesn't care about
current value in the DB -for example when setting status to error- or it
already has that information -composing it with the current value it has
and the updated fields it's passing- and doesn't need to reload it.

This additional joined read from the DB on every volume update is
creating unnecessary load on the DB and reducing our network capacity
and in other resources we are not retrieving it either.

This patch modifies the way we do updates so we don't read current DB
values.

Change-Id: I92e76eb8eb64ac96995b29017c7683a564dc5e0e
"
bb6b19c9dc55c6d4af196e556fda136ffc0e5507,openstack/cinder,"Remove usage of taskflow 'utils.misc' module

The failure type at its old location in an internal
utils directory of taskflow is deprecated (in general
usage of taskflow utils code should be restricted/not
done) and it has been moved to a public location of
taskflow.types (which is ok to use and is not
deprecated).

This change updates to use the better and more supported
module/code location instead.

Change-Id: I8b8c6e98c934fbf1341b8f1c907ecd385405a3c1
"
72b7a18583767b9f8449345312ad2ecddd93fc00,openstack/cinder,"Fix Python 3 issues in the swift backup driver

* On Python 3, encode/decode JSON to/from UTF-8
* Use byte strings for volume content
* Replace dict.keys()[0] and dict.value()[0] with list(dict.items())[0].
  Get the key and the value at once to ensure that they are consistent.
  On Python 3, items() returns an iterator: create a list to use the [0]
  operator.
* SwiftBackupDriver: use a bytearray instead of a string because
  bytes += bytes is inefficient on Python 3, whereas str += str is
  optimized on Python 2. Replace also StringIO with BytesIO.
* BytesIO has no more len attribute on Python 3: get the length of the
  content instead.
* Replace buffer(bytearray(128)) with b'\0' * 128 to create a string of
  128 zeroed bytes
* Replace ""rw"" file mode with ""w+"" (""rw"" raises an exception
  on Python 3).
* tox.ini: add the following tests to Python 3.4

  - cinder.tests.unit.test_backup_swift
  - cinder.tests.unit.test_backup_tsm

Blueprint cinder-python3
Change-Id: I62d7ef8041847f31b5d06a92fa2edb65c6780497
"
b9b34ba1133ebb495ce4383c68d356a5a696975d,openstack/cinder,"Merge ""Remove duplicate keys from dictionary"""
583217f4477c255900c95afb5aea5273f4338235,openstack/cinder,"Merge ""Separate create and update rules for volume metadata"""
4d4627f9c213ca5d473b88bb21e611b93975074e,openstack/cinder,"Move resource usage sync functions to db backend

Resource usage sync functions was declared in cinder/quota.py, and
using db.api public methods. This functions was moved to database
backend implementation, so now sync functions can use private
methods of database backend, and session attribute can be removed
from this public methods.

Blueprint: db-session-cleanup

Change-Id: If5386e3dc1e0d6e3127732aeb5b35bbd96bc93f0
"
4196e5f2d56d68134f08563e7eb51164214d2075,openstack/cinder,"set/unset volume image metadata

This patch implements:
- Create, delete, update APIs for modifying volume image metadata.
- Refactoring in the volume API to accommodate both user and
  image metadata.
- All of the necessary testcases needed for the changes.

DocImpact
APIImpact
Partially implements: bp support-modify-volume-image-metadata
Change-Id: I22792ef7bd49c763d7c130aa8cac9abc3fff2d4c
"
95170e54b24c0cf16f9df9b63a0998569fefaa8d,openstack/cinder,"Add cleanable base object and cleanup request VO

This patch adds CinderCleanableObject class that is a Versioned Object
base class and CleanupRequest Versioned Object that will be used to pass
cleanup requests to c-vol and c-bak nodes but will not have a DB
representation.

This will be used for non Active-Active configurations as well.

Specs: https://review.openstack.org/236977

Implements: blueprint cinder-volume-active-active-support
Change-Id: Ia84b2f55a782c5e881bab03a8469b884f265910c
"
a570b061b8490755f226bfa99e93b896bd07f449,openstack/cinder,"Merge ""Dell EMC: Moved SC driver under dell_emc"""
3a4da84a463b1f375ffa747549c71d7910595379,openstack/cinder,"Merge ""Rename __init__.py to create_volume.py"""
572b84c073ef66d976d4530d9b7f07f518695ab0,openstack/cinder,"VNX: New Cinder driver in Newton

Previous VNX driver implemented all array operations
in driver, which complicated the drive logic.
In this patch, we leverage a library named
storops to interact with VNX array.
New changes below:

* Consolidate VNX driver entry, both
FC and iSCSI driver use the same entry name:
volume_driver =
cinder.volume.drivers.emc.vnx.driver.EMCVNXDriver

* A new driver option is introduced:
storage_protocol = <fc|iscsi>

* some existing bugs no longer existed.
Co-authored-By: Tang Tina <tina.tang@emc.com>
Co-authored-By: Liang Ryan <ryan.liang@emc.com>

DocImpact
Implements: blueprint new-vnx-driver
Closes-bug: #1569245
Closes-bug: #1524160
Closes-bug: #1589338
Change-Id: I9f31db708b022b16debaa4f6c5a87d95e5ac2a4f
"
f4fa6c5ff1d6c1d989587367b45f57c72ea26afb,openstack/cinder,"Stop using mox from unit/image/*.py

As mox is not compatible with python 3, all test cases that
use mox should be updated to use mock instead.

Replaced stubs.Set() with mock_object() in
cinder/tests/unit/image/.

Change-Id: I284d3f1dd30a6e4489d5482ac30ceeb231d8da41
"
7523489e856e637dc6af23638568f4700980360f,openstack/cinder,"Add NFS/GlusterFS support to brick library

Refactor NFS driver to use the brick library to perform mounts
rather than duplicating the mount code. Some of the NFS unit
test code was rewritten to test the brick implementation because
the old mount code was moved.

The Gluster driver was slightly affected in the refactoring, but
does not yet use brick to perform attaches.

bug 1214748

Change-Id: Ib29f83fabe407f9591191e9fd19e6306ca9960cf
"
05f8a52301eb5f079f7bb01eed9b3695be837f4f,openstack/cinder,"Storwize: Implement v2 replication

Storwize supports three major types for volume replications:
split IO, global mirror and metro mirror.

This patch is dedicated to implement the replication for
the modes of global mirror and metro mirror. Mirror
establishes a Global/Metro Mirror relationship between
two volumes of equal size. The volumes in a Mirror
relationship are referred to as the primary volume and
the replica volume. The replication_mode in
replication_device must be set to global or metro.

The volume type needs to associate with the extra spec
with 'replication_enabled' equaling to ""<is> True"", and
'replication_type' equaling to '<in> global' or '<in>
metro'.

What is supported with replication:
* create volume
* create volume from snapshot
* clone a volume
When a volume is created and replication is enabled, the
replica volume is also created on the back-end enabled
for replicas.

What is not supported with replication yet:
* volume migration
* volume retype
The replica volume will not be created or moved after migration
or retype of a replicated volume. Admins should be aware,
when migrating or retyping a volume to a type with replication
enabled, that the replica will not be automatically created.

The replication can be configured via either multi-backend
on one cinder volume node, or on separate cinder volume
nodes.

Options to be put in cinder.conf, where the primary back-end
is located:

enabled_backends = sv1, sv2 (if enabling multi-backends)

[sv1]
san_login = admin
san_password = admin
san_ip = 192.168.0.11
volume_driver = cinder.volume.drivers.ibm.storwize_svc.\
                StorwizeSVCDriver
volume_backend_name = sv1
storwize_svc_volpool_name=cinder
replication_device = managed_backend_name:second_host@sv2#sv2,
                     replication_mode:global,
                     target_device_id:svc_id_target,
                     san_ip:192.168.0.12,san_login:admin,
                     san_password:admin,pool_name:cinder_target

Options to be put in cinder.conf, where the secondary
back-end is connected:

[sv2]
san_login = admin
san_password = admin
san_ip = 192.168.0.12
volume_driver = cinder.volume.drivers.ibm.storwize_svc.\
                StorwizeSVCDriver
volume_backend_name = sv2
storwize_svc_volpool_name=cinder_target

Partial-implements: blueprint ibm-storwize-v2-replication
DocImpact

Change-Id: I2ad5be69b2814d3b974c963828585fa15446d772
"
2448e0415917fa6436e17c02145c69fd43c03609,openstack/cinder,"NetApp E-Series driver: Remove caching logic

This patch removes unnecessary API caching logic from the NetApp
E-Series driver. The cache, represented as the _objects dictionary,
is refreshed nearly every API call and therefore provides no value.
This refactor is also preparation for refactoring the class structure
so we can easily add an E-Series Fibre Channel driver.

Change-Id: I5a1a8c9bab3abff58a876a1da3575b1c329fdfba
"
25d6d0848c941dd6d6bf42eb4d9c2d51ee6e0451,openstack/cinder,"Add an optional db session argument to cinder.db.sqlalchemy.api.
quota_allocated_get_all_by_project(). Then in quota_reserve()
pass the session that is fetched for that method so that a new
session does not have to be made. This can avoid DB timeouts
and retries when a lot of concurrent operations are hitting
quota_reserve().

Added session to method mocking in the UT cases and removed a
mocking instance that was dead code since it was already mocked
in the specific tests needed.

Change-Id: I43b5035926eb8b65e7913ac0a8c58e6b9ebb5619
Closes-Bug: #1676574
"
30bb83d64ffebeb7d0cdca170e658f25f3e02c63,openstack/cinder,"Move oslo.serialization to oslo_serialization namespace

This is the fifth in a series of changes to move to using
the new oslo_<library> namespace that is being used for
oslo libraries.

There is currently a shim in place that is allowing the old
oslo.<library> imports to work, but we need to be prepared for
when the shims go away.  Thus, we need patches like this one to
move to the new namespace.

This patch also updates our hacking check to ensure that no instances
of oslo.utils sneak back in.

Change-Id: Ida0f9512a816d45ec5cae4dc4da4dbc923a67cf4
Partial-bug: 1409733
"
575640cfacb06409fa9337d48924bcd846bee740,openstack/ironic,"Remove the deprecated classic drivers for Cisco UCS hardware

This change removes pxe_ucs, agent_ucs, pxe_iscsi_cimc and
pxe_agent_cimc. Best effort clean up was done to the documentation.

Change-Id: I4fe75e0d4a36228f2f6be6bf6ced6d37424b6fd3
"
a8584477e46be03aacd5106b9c831784e17687e6,openstack/ironic,"Merge ""Rework logic handling reserved orphaned nodes in the conductor"""
b0af29e66478eeb48d42ba7be720f9ae06ab1044,openstack/ironic,"Raise minimum API version to 1.1

When we added microversion support to the API, the initial and minimum
version was set to 1.0. However, there were five previous API changes
since the Juno release which are not discoverable through the API
versioning scheme.

The 1.0 tag should actually indicate ""Juno stable API"". This patch
advances the minimum API version to 1.1, retroactively changing the
versions applied by two prior features:

* 1.1 -> 1.2 Rename NOSTATE to Available
* 1.2 -> 1.3 Add Node.driver_internal_info

Also, the default version applied (when no
X-OpenStack-Ironic-API-Version header is supplied) is raised to 1.1. A
client request that does not specify the header will retain the same
behavior as before this patch -- namely, the behavior prior to commit
I34bf7fa1b21580337c18206798dd8e9dfe11ba09. A client request which
specifies a version of 1.0 will result in an HTTP 406 Unsupported error
code today.

This patch leaves open the possibility for retroactively adding support
for the Juno API in future patches during the Kilo cycles, if necessary.

Change-Id: I7bc10ce72a461b8b68f5e07e1f27ec053f72a41a
"
e5536e23c3808e113fee21108f51c939591cf08a,openstack/ironic,"Merge ""Remove unneeded context initialization in tests"""
5a4beeb10aa1f0228dcd1798edcc6a5a9dbf58ec,openstack/ironic,"Remove deprecated code for driver vendor passthru

Before the driver_vendor_passthru() method was self-contained and each
driver would implement their own mechanism to invoke the driver passthru
methods. This has been deprecated and is now being removed.

Change-Id: I26538062830e98fd58441cc3d78e408131085d4d
"
0fcf2e8b51e7dbbcde6d4480b8a7b9c807651546,openstack/ironic,"Deprecate [ilo]/clean_priority_erase_devices config

The [ilo]/clean_priority_erase_devices configuration option is
duplicated by [deploy]/erase_devices_priority, this patch is marking the
ilo configuration as deprecated.

The ironic.conf.sample was also updated to reflect the changes.

Closes-Bug: #1515871
Change-Id: I2bf18e35d97160d31a51c8447745bfd60c099af2
"
c52781df05b41687d31a5c769f1d35d96adf7f44,openstack/ironic,"Handle multiple exceptions raised by jsonpatch

The jsonpatch.apply_patch() might raise different types of exceptions,
this patch improve the exception handler on the jsonpatch.apply_patch()
call to capture them and also creates a new exception called PatchError
to avoid replicating the same error message across the resources.

The patch also doesn't log the exception raised by the apply_patch()
anymore, since the problem will be returned to the client directly via
the API response.

In the chassis.py an alias ""api_utils"" was created to the utils module
to be more consistent with the ports and nodes resource.

Closes-Bug: #1271554
Change-Id: Ied1f5e573839520cc5f4e04548720f016f33349b
"
cb0794e1e3710dfba25e1010d0be02f87b5736ca,openstack/ironic,"Replace self.assertEqual(None,*) to self.assertIsNone()

This patch replaced generic self.assertEqual(None,*) to specific
self.assertIsNone() in all of ironic unit tests.
This is a reflection of iRMC vendor passthru code review comment [1]
to the original referenced source codes.

[1] https://review.openstack.org/#/c/187082/3/ironic/tests/drivers/irmc/test_power.py

Change-Id: I61f49934a79dd45b8be1c2fc0f944fb49cea80f0
"
6ce617916664359e1c14000aa731a37bd9ad1b2e,openstreetmap/iD,"Rename label from ""Star"" -> ""Star / Wye""
"
ac341cdf5aef1d19b1bc00fd6579027ea966ab91,openstreetmap/iD,"Usability changes for parking lots

- Rename ""Car Parking"" to ""Parking Lot""
- Rename ""Multilevel Car Parking"" to ""Multilevel Parking Garage""
- Add red styling for Multilevel Parking Garage preset icon
"
cd7cdd95e9e4538afe8feaf3e2c08f8ce2071c7f,openstreetmap/iD,"Add ""View on Bing Maps"" link, cleanup css
(closes #5125)
"
9120f33aa7c5ea68a09a7084b51abdaabe1dd471,openstreetmap/iD,"ReverseWay -> Reverse
"
37951636a479e6acb184ad5a258afe89fa55e999,openstreetmap/iD,"Merge pull request #32 from systemed/simple-actions

Refactoring actions and undoing"
89dded99670516d0fcecedf8e3cc45cda86684ea,openstreetmap/iD,"Improve poi finding performance, update map style
"
5c775ce25168ea43a1753b0d24b5d9afc6f4bb81,openstreetmap/iD,"Remove unused rules, be specific about webkit taps
"
9bbb5db5ef1ed1bea67fe75100e305294ef2ad69,openstreetmap/iD,"Rename garage landuse preset
(closes #4697)
"
14bb363e0df3e90bbe029e8af9146667e0f9239b,orfeotoolbox/OTB,"TEST: rename baselines
"
ba67265fde31094558addabac3b2259f78743364,orfeotoolbox/OTB,"ENH: Renaming new methods to SetNthParmeterStringList() and AddParameterStringList() following discussion on otb-developers
"
b9069bd2e71765912fc4a243bf3e23bee5130bff,orfeotoolbox/OTB,"ENH: Rework API of MachineLearningModel to better separate responsibilities
"
a496a20a3c5c0f73b7ad61372f38832929ab914e,orfeotoolbox/OTB,"labelmaptogistable OK add simplify functor and close polygon functor
"
ee1cb255956c66d7591d94db23e3de93ecf38c4d,orfeotoolbox/OTB,"REFAC: remove deprecated application TrainOGRLayersClassifier
"
9d350594b567fe7634d3ac2d6efe56666de25cfd,orfeotoolbox/OTB,"ENH: rename SinclairToCovarianceFunctor to SinclairToReciprocalCovarianceFunctor
"
7378d16bca761bd8d419eab4f95dda55a60d0a3a,orfeotoolbox/OTB,"TEST: (Visu Refactoring) Adding more testings
"
5e1f31e4900c77af568d413a4c0913ff4d7a70f4,orfeotoolbox/OTB,"Moving module to Modules/MPI/MPIConfig
"
eb3338bceb39975323236323447f65c75bfb1231,pantsbuild/pants,"Chop up the hairball a bit more: move some JVM specific tasks into pants/jvm/

The following classes now live in pants.jvm:

* IvyTaskMixin, for Tasks that call ivy_resolve
* JvmToolTaskMixin, for Tasks that bootstrap JVM tools
* NailgunTask
* IvyResolve
* JvmToolBootstrapper

Removing Task.ivy_resolve and the methods provided by JvmToolTaskMixin
cuts a large thread in the hairball--Task is no longer explicitly
dependent upon JVM specific machinery.

In a future update, I'll move the other explicitly JVM Task subclasses from pants.tasks to pants.jvm, or maybe pants.jvm.tasks.

Testing Done:
ci.sh passes

Reviewed at https://rbcommons.com/s/twitter/r/363/
"
5ad90920f5b282f28a3f66ee15b44599836b8cea,pantsbuild/pants,"Enable python-eval for pants source code.

This installs the PythonEval task in the compile phase for pants and
engages the python ""compile"" checks for pants source code in ci.  As a
result there are many missing BUILD dep fixes as well flagged by
python-eval in ci.

The python-eval checks add ~2 minutes to each ci shard, so ci is
restructured to be more fine grained in order to keep ci times ~6
minutes per shard.

Testing Done:
CI went green here:
  https://travis-ci.org/pantsbuild/pants/builds/50809395

Also ran the moved anonimizer tool:
```console
$ PANTS_DEV=1 ./pants= run src/python/pants/backend/jvm/tasks/jvm_compile:anonymize_zinc_analysis
...
22:33:14 00:01   [run]
22:33:14 00:01     [py]
22:33:14 00:01       [run]
Traceback (most recent call last):
  File ""/tmp/tmptqC4pT/.bootstrap/_pex/pex.py"", line 272, in execute
    self.execute_entry(entry_point, args)
  File ""/tmp/tmptqC4pT/.bootstrap/_pex/pex.py"", line 320, in execute_entry
    runner(entry_point)
  File ""/tmp/tmptqC4pT/.bootstrap/_pex/pex.py"", line 337, in execute_module
    runpy.run_module(module_name, run_name='__main__')
  File ""/home/jsirois/.pyenv/versions/2.7.8/lib/python2.7/runpy.py"", line 180, in run_module
    fname, loader, pkg_name)
  File ""/home/jsirois/.pyenv/versions/2.7.8/lib/python2.7/runpy.py"", line 72, in _run_code
    exec code in run_globals
  File ""/home/jsirois/dev/3rdparty/jsirois-pants/src/python/pants/backend/jvm/tasks/jvm_compile/scala/bin/anonymize_analysis.py"", line 45, in <module>
    main()
  File ""/home/jsirois/dev/3rdparty/jsirois-pants/src/python/pants/backend/jvm/tasks/jvm_compile/scala/bin/anonymize_analysis.py"", line 28, in main
    word_file = sys.argv[1]
IndexError: list index out of range

FAILURE: python {args} ... exited non-zero ({code})
```

Bugs closed: 1108

Reviewed at https://rbcommons.com/s/twitter/r/1773/
"
48224fc9d7abb0ef0eeb6f07b4f0ff254f9ec998,pantsbuild/pants,"Extract and genericize Graph for easier testing (#6010)

### Problem

#4558 involves some relatively fidgety logic, but `Graph` was built in-situ and does not have any tests of its own.

### Solution

Extract and genericize `Graph` to allow for adding unit tests of the new behaviour in #4558. Add a very basic test; more useful ones will follow."
e9279f48f9de0cc4468201e64636f6d26e365dfa,pantsbuild/pants,"Port scrooge/linter config to the options system

* Simplify the linter strictness flag with an advanced option
* Kill JavaThriftLibrary.Defaults in favor of passing the options object
* Add migrate_config.py entries
* Move the `gen` config dictionary to the options system

Testing Done:
https://github.com/pantsbuild/pants/pull/1264

Reviewed at https://rbcommons.com/s/twitter/r/1927/
"
ee3498b91f28ceaef9b1ee75e40d9409663c0db8,pantsbuild/pants,"Fixup SetupPy handling of exported thrift.

SetupPy was attempting to create a PythonThriftBuilder with an invalid
set of constructor args.  This change adds a test that exercises this
codepath in addition to the path for exported antlr libraries.

In the course of creating a testable PythonThriftBuilder, extract
BinaryUtil.Factory and ThriftBinary.Factory subsystems to both
encapsulate options and allow for directly constructable BinaryUtil and
ThriftBinary objects.

Some further file move cleanups are marked TODO in favor of keeping the
scope of this review from ballooning farther than it already has.

Testing Done:
CI went green here:
  https://travis-ci.org/pantsbuild/pants/builds/72214777

Bugs closed: 1805, 1847

Reviewed at https://rbcommons.com/s/twitter/r/2511/
"
a53597a156b04b787fccba34168f13860559ca83,pculture/unisubs,"Remove unused functions.

The permissions system has gotten a lot more complicated since it was
initially created.  Most of the checks need to be dynamic now, instead of
just being pulled from a static list.

It's easier and more consistent to just make each check dynamic instead of
special casing a few specific permissions.
"
dd1fa5e36abbee2177d9624137d1ab1c64e74cf2,pculture/unisubs,"Merge remote-tracking branch 'origin/ongoing' into fabfile-cleanup
"
b3ccec4ea9d8483751e2f4d999dd1a450c0c6e56,pculture/unisubs,"Made team messages be silenced by individual settings, for https://unisubs.sifterapp.com/projects/12298/issues/713268/comments
"
a4cf2309562a162b317f74b0692649acb89e1d72,pculture/unisubs,"some settings cleanup. Can use any port if Site port matches live server port
"
dd92da742db2c18f1fc8bd61ef81c3d88e6b5329,pculture/unisubs,"Simplified SubtitleDialogOpener by grouping open dialog args into OpenDialogArgs. Resume editing now works correctly in all cases I'm aware of.
"
1ff0deb1d7b06ed65e809ad3e4b2484e3a211bc5,pculture/unisubs,"Merge pull request #876 from pculture/statistics-refactor

Statistics refactor"
080bc0a71d12b719c5a1e4e7975c7e0b190390b9,pculture/unisubs,"Moved isComplete() function to subtitleList.

I think this will be nice to use for other parts of the code
"
ee8288d0036dd9a7c153152b0489de92a0e22a36,pculture/unisubs,"Added support for split buttons

These are buttons with a extra segment that opens a dropdown menu.

Refactored dropdown nav menu code and used it to implement the dropdowns.

Made it so clicks outside of the dropdown close the menu.
"
7dbd788b19345301fbbd766230e5c5fd1f730091,pculture/unisubs,"Prepwork for moving the last hidden message id to a user field

Added code to set the field in various situations:
  - If the user hides the new message announcement
  - If the user loads their inbox
  - Whenever the user loads a page and we notice the cookie value is
    different than the user field
"
b7214f3fcc953c3d4b064d48f3490dfd2a826cc8,pculture/unisubs,"Merge branch 'dev' into x-data-model-refactor
"
95e12e6c697d8f66b0bf267e6d991715a45fd628,pculture/unisubs,"Removed video old video management forms

Also updated how other apps can add more management forms.  I was going
to make this a TeamWorkflow method, but we need a more flexible system.
We will have some teams where the collab app wants to add a New Subtitle
Request form and the prorequest app wants to add a New Professional
Service Request form.

Rewrote the unit tests.

Updated the patch_for_test() function to allow autospeccing.
"
8c230719ffa356a759a0c9eaff99cd207b50b587,pculture/unisubs,"Yet another fix for #1168

For some reason that i still don't know why,
sometimes TeamVideo search index for an instance
gets stale after a delete and that is making the
code on permissions to fail because we can't find
the instance from the search index.

If that happens, always return false on the permissions.
Also, if we a stale index, remove it from solr."
5cb0d92da5a1d70f3348fee3b579eefc243b3225,phetsims/scenery,"Further grunt improvements.
"
fcf8d18f57814d533dddd24adab75a004247ad7d,prebid/Prebid.js,"Add support for video stream context (#1483)

* Add support for video stream context

* Define adapter as supporting video

* Use mediaTypes param to specify context

* Use utils.deepAccess

* Check for outstream bids

* Add JSDoc and validation

* Rename functions and add unit test

* Update property name

* Update stubs to new sinon stub syntax

* Only check context when mediaTypes.video was defined

* Retain video-outstream compatibility

* Revert to Sinon 1 syntax

* Server and bid response ad type for any stream type is always 'video'

* Update to address code review
"
c268ae96df3adf34b549ae9067462f44b8f2ca32,radiasoft/sirepo,"fixed #454 predefined beams now come from srwl_uti_src.py, removed beams.json, mirrors.json, samples_images.json, magnetic_measurements.json - now are computed from available standard lib files. refactored SRW specific field editors from sirepo-componenets.js into srw.js. Refactored beamList field type into modelSelectionList which will be used with predefined undulators.
"
9300377b31248d5b645b35ed3bdbd1bf563a09e9,radiasoft/sirepo,"rework lattice editor drag-and-drop to remove ""float left"" jitters. Added lattice editor delete confirmation dialog.
"
f549bc4e95fa268b6c90e993c03dac84d66c2875,radiasoft/sirepo,"srw: added Spectral Detuning option to brightness report. refactor image and mirror UI code into separate srw directives
"
fb76629112d486ce7f3c1738508b94e7a4d72a7c,rstudio/sparklyr,"some API cleanup
"
ad589469e7bd8d2d0b0a307c0c42f4a6e80ed964,rstudio/sparklyr,"merge commit

Merge remote-tracking branch 'origin/master' into feature/sparklyr-rename

Conflicts:
	README.Rmd
	docs/ml_examples.Rmd
	docs/perf_dplyr.Rmd
"
691cdff2fbfba1be5df949fe0be3d96f26356f71,salesforce/Argus,"Refactor the resize code and fix the negative width error
"
1499a48d5eb250b35011077e3f40cbebc1dd688e,salesforce/Argus,"Breadcrumbs (#78)

* update config section to display better.

* add autofocus directive to focus an input on page load.

* small updates to help normalize templates spacing and alignment, headings, tables, & other minor clean up.

* updates for new DVA services status dashboard.

* remove unused rootScope from controller.

* add support for parameterization fields to DVA service status dashboard. factor out method to augment expression with controls data to the dashboard service. updateexisting charts to use refactored method.

* update serverice status db row layout for better responsiveness and slightly longer indicator label size.

* add support for a slightly larger service text label.

* setup for loading spinner for charts. keep 'loading' text for small charts. refactor small chart options and indicator status rendering.

* add breadcrumbs site navigation. add filter for first letter of string to uppercase.

* fix console error when logging out on the dashboard list. Use Auth service and check for null for remoteUser.

* fix url path identification for breadcrumbs links to work outstide local environment. Remove some vertical spacing to bring page content higher.

* fix console error showing due to null chart.

* update breadcrumbs to icon-based in-line style. Display for 2nd level only, hide top level.

* update top nav to show current active tab, including similar routes in same tab.
"
719751113d1a14235711a323430a1d3ac7e04681,salesforce/Argus,Improving Discovery schema service performance
8a267d6ca7e5e33bb4803077fac1f6f1575b0de4,salesforce/Argus,"Merging 2.3 to master (#360)

* Do not deserialize metrics wtih empty datapoint set, COUNT Transform fix.

* Remove commented code and Add missing file.

* enable refreshing page to clear session cache

* Dequeue more alerts in a single batch.

* resolve problem of loading spinner not showing up after clicking reload button

* disable switching between shared and user's dashboard tabs while reloading

* History objects stored in HBase.

* Update javadoc.

* Fix some unit tests.

* fix discovery service sdk constant (#274)

* fix discovery service sdk constant

* also fix test case

* HistoryServiceTest is now an Integration Test.

* Fix copy paste error.

* HBaseHistoryService singleton, dispose on system stop.

* AsyncHBase client objects now obtained through a factory so that there is only 1 instance of it in the system. Refactor code.

* Modify ArgusSDK to reflect History Service changes, refactor code.

* Sharing alerts

* Modify ArgusSDK/HistoryServiceTest.json to reflect the modified json output.

* Remove unused code.

* Add asynchbase property for HistoryIT test.

* Truncate field names before sending a message to GOC.

* Add Primary Key Auto Generation Annotation.

* Remove ensureTableExists checks

* Increase Wildcard limit to 25, throw an exception when the limit is exceeded, config changes for asynchbase.

* 1)Add isSRActionable field to Notification object. 2) This business logic is only used in GOCNotifier

* Fix SDK test for testUpdateNotification and testCreateNotification

* Adding custom text to notification

* Add checkbox for Is SR Actionable  Notification

* Fixing SDK test cases

* setting shared to default in Alert constructor

* Correcting formatting issues

* Correcting Formatting issues

* Send missing data notification when metrics list is empty

* Remove authorization validation for Shared alert

* bump dev version (#317)

* bump dev version

* autopromote release

* Update references to old salesforceEng/Argus github project.
Issue #314

* Update version to 2.3.0-SNAPSHOT (#331)

* Sharing notifications and triggers
"
68d1564e49ecb14657e2dcb1251f2891ad0873c8,sanity-io/sanity,"Move data methods to root of client (breaking)
"
88edda2adb9ccd5d267d1214a495d2d06ef88cb7,scgmlz/BornAgain,"Removed obsolete methods from Simulation class hierarchy

Redmine: #1917
"
856231d1c45ad3f1684197dbbeffc3176f5cfda3,scgmlz/BornAgain,"DomainSimulationBuilder turned to namespace, method renamed.
"
7dcbbe1d55d0a894026e6a295b0b3b98b863a8dd,scgmlz/BornAgain,"Rename: ILayerSpecularInfo -> IFresnelMap
"
69b6bc1a77b32b70ef7ead3ceeeb2dbba92a8c17,scgmlz/BornAgain,"Replaced vector of pointers to axes inside OutputData to vector of objects; removed getAxes() method from OutputData
"
27244041421017a261b90dc4f0060a9e27c54e12,scgmlz/BornAgain,"Refactored decorator classes, added Experiment, Beam and Detector classes and added prototype pattern to many classes (clone() function)
"
9a12cebf6711c4467bbd72360d7bc4b70c84005c,scgmlz/BornAgain,"FitSuiteImp.cpp -> FitSuiteImpl.cpp
"
d2d029cf91aaf17afea9d402891f372ef97696ea,scgmlz/BornAgain,"Unify parameter names Length, Radius -> BaseEdge
"
12cdba9f0cfb2652e0853994231d855394cad7f3,scgmlz/BornAgain,"Additional NaN protection, check for correct refractive index, c-toe cleanup in Materials
"
fe8365920c188ff1bedf0c4251fbc62683489282,scgmlz/BornAgain,"some more polishing of the interface
"
dc950d5850f50abc297968ddf5443acf0736d7ea,scgmlz/BornAgain,"mv python-setup -> python; frombin... -> thisbornagain.
"
e88f916e47cc2c63fbee777740a951d962224dfc,scgmlz/BornAgain,"rm unnecessary includes; vitual -> final; mv some .h files to includeCollections
"
d2c5230a6744a455c66741475a92ac6a725eec21,scgmlz/BornAgain,"Celnup in commented code
"
8b0d6f31c57ff0202e37251fa2bbe6053f28b5e9,scgmlz/BornAgain,"Removed unused methods topZParticles and bottomZParticles
"
5ab05f1b797f7f3d1edda3cddd6307e9d281a22b,scgmlz/BornAgain,"Cycling refactoring in FancyGroupProperty.
"
ac1d8bb040e1c166898e09796ea43efcc288b3fa,scgmlz/BornAgain,"Use standard macros M_PI, M_PI_2 etc instead of Pi::PI etc. This resolves (or rejects) subtask (2) of #1304.
"
249774ee5773e17744fdb36aef5ab828d0d8b260,scgmlz/BornAgain,"Added ParticleCoreShell unit tests and refactored setAmbientMaterial (const ref parameter instead of const pointer)
"
c0eeb47abb706b26f448530d4aadeba2c3ad0579,scgmlz/BornAgain,"merge IInterferenceFunctionStrategy::setSpecularInfo into init; make
init non-virtual at base class level, and call virtual
strategy_specific_post_init.
"
c7b3e61976e032b81a0aee2331299587a14cc76d,scgmlz/BornAgain,"Added convenience methods to RealDataItem and removed redundant check

Redmine: #2194
"
3916a35932cd5c636818f6f02c9cd1d4da07038b,scylladb/seastar,"network_stack: refactor socket/impl interfaces and some cleanup

* Move declaration of socket types out of reactor
* Move declaration of socket impl types to private header (not needed
  for other than actual impl + socket)
* Modify connected_socket_impl to provide only sink/source
* Modify connected_socket to provide actual streams (input/output)
* Modify connected_socket shutdown methods to return future<>. This
  because a clean tls shutdown requires a final handshake.
  Note that app code has not been modified to use this.
* Removed code not needed to be public from reactor.hh

To reduce code dup, the network_stacks should also be refactored to
only return impl types, but this is _not_ in this change, because a lot
of app code still uses stack impl directly, and it is not really
required for the tls implementation/does not make it cleaner
"
3942546d4165071948104107b7c9626486a8c999,scylladb/seastar,"rpc: switch to non-deferring serialization

rpc currently allows serializers and deserializers to defer, because
the input and output stream may not be ready.  They may not, however,
defer on behalf of the object being serialized or deserialized (i.e.
you cannot serialize to disk or deserialize from disk) because that
causes the tcp connection to block until serialization/deserialization is
complete.  So in practice messages must be small enough to fit in memory,
and there is nothing gained by the complexity.

To simplify things, switch to non-deferring serialization.  Add a frame
header to messages that specifies the buffer size, which allows rpc to
use a read_exacly() to consume the message, and thereafter deserialize it
immediately.

The result is significantly simpler, which should help with compile time.
"
a0f372e376bea5590ee80bd54a44870e6ea3d341,scylladb/seastar,"iotune: rename to iotune.cc

Cleanup from last patch.

Signed-off-by: Glauber Costa <7ba9037b0dd006f9408bd45b94707becd5cd4e87@scylladb.com>
"
d266ea78c6f41e8954c3832beb96e7fbbef2035b,scylladb/seastar,"Use steady_clock_type instead of std::chrono::steady_clock.

Signed-off-by: Vlad Zolotarov <976c0f8d0852ed6439ad273880b400a75a7c41d0@cloudius-systems.com>
"
b1208d65013b39007d76c222efb03e5e158fac9f,scylladb/seastar,"output_stream: simplify flush()

output_stream can be used by only one fiber at a time so from
correctness point of view it doesn't matter if we set _end before or
after put(), but setting it before it allows us to have one future
less, which is a win.
"
7771d1f30ddab8214216481b4bcaa292117a1c55,smeighan/xLights,"Better Pan and Zoom along with reorganized camera location storage
"
fe7303e981da140107c92c7c5a0e86989e2a6f56,smeighan/xLights,"- fixed up Pgo auto-fade arithmetic (morph flicker still occurs)
- rework Pgo auto-rest options; UI is functional but not the logic
- added debug file command line parameter and userid macro in default path
"
5de1edee8cb28380143204b5a3065c17551866a8,smeighan/xLights,"Make log4cpp config more resilient ... a missing config may have caused a crash. In debug build it will also warn you if the config is missing and tell you where it needs to be placed.
"
326ca68cb35e225c3a2999b4675979cf010ae7b3,smeighan/xLights,"Remove some more libmpg123 references that are no longer needed
"
b0cb38336be7cf34da37455d002cc0d9683f32e5,smeighan/xLights,"Separate brightness/transparency for background image.
"
39d9278263ce21fa9b34b05043718d20bbc1123a,smeighan/xLights,"Connect Convert tab to Conversion dialog for XML files
"
54ef203ece6c4e267373d6a92cd6d3219b24fe6c,smeighan/xLights,"Only do the ""outside -> in"" render for the Tree model.  Fixes #573.
"
62aa7d1a18e3eb4436e21b7b6f6e595fa2835f0e,smeighan/xLights,"Improve Timing tab on Sequence Settings Dialog
"
c8a7093cbb61c473fbe93d6e2efc176630cfa317,travis-ci/worker,"Merge branch 'master' of github.com:travis-ci/worker into cha-moar-trace-func

* 'master' of github.com:travis-ci/worker:
  prepare v4.5.2 release
  backend/gce: annotate trace with ssh attempt error
  processor: check success of type assertion
  processor: log image name in job finished summary
  backend/fake: introduce option to error out all jobs
  warmer: use public ip when connecting to instance with public ip
  include public_ip flag in request to warmer service
  perform ctx store-back (into state bag) before starting span to avoid reparenting
  replace all procCtx with pre timeout contexts (preserve span parent relationship)
  only record apiRateLimit spans if a span context exists (avoid orphaned root spans)
  project id is no longer required on gce (where our tests run), update test
  fetch project and zone from metadata api when running on gce
  rename client => creds
  typo
  CHANGELG
  google: support loading default credentials for gce and stackdriver
"
c277e4a9f7d66fc8fe37497ac46a6e3ca05b1806,twosigma/beakerx,"jarek/7470: handle failure in spark getOrCreate method (#7484)

* #7470: handle errors

* #7470: SparkUI refactoring

* #7470: adjust spinner

* #7470: display error at the bottom of the form + add tooltip to spinner

* #7470: move error next to start button
"
43bfbbc25b109bfe23f9931a49bea6a4731aeee3,twosigma/beakerx,"PR for JS syntax fix (#5418)

* #5161 ""plot interaction API""

* #5161 ""plot interaction API""

* issue #5161 ""plot interaction API"" -- Actual change is for ""table integration API"" - moving functions from ""TableDispaly.js"" to ""tableScope.js""

* #5161 ""plot interaction API""  --- temporary fix for pas tests.

* issue #5161 ""plot interaction API"" -- test fix and onClick(""run_tag"") fix

* #5161 ""plot interaction API""

* #5161 ""plot interaction API""

* #5161 ""plot interaction API""

* plot/table interaction API examples

* #5161 ""plot interaction API"" some small refactoring

* Fromating code

* JS syntax fix
"
39515ff9b6ea25931b89675cb93f86690bedb0b3,xenodium/dotsies,"Rename ar/find-all-dired-current-dir to ar/find-dired-current-dir.
"
d184a87530f9ee55deb23fa2bff366d89f5e0c2e,2Abendsegler/GClh,"#821 (improvement) Adapt the height of the edit field 'Personal Cache Note' to show the complete note
"
e2c0dc34e6ae25799a446c08cef262c5e79f7e3f,2Abendsegler/GClh,"#752 config menu: create a new section 'Development', rename developer mode into gclherror_alert
"
cf439dac511481957fe358d78953551a89651183,Evolveum/midpoint,"Added flexibility to bulk actions, changes in SelectorQualifiedGetOptionType

added 'hideOperationResults' option for bulk actions
added options for 'search' bulk action
moved SelectorQualifiedGetOptionType from api-types-3 to common-3
addded missing GetOperationOption fields to GetOperationOptionsType
org: prefix declared at the root level
"
c8d634cce9d50f31bea155cd21d40286a48b84f5,Evolveum/midpoint,"Removing dead OpenDJ meat. Refactoring AbstractIntegrationTest to be more generic (needed for DB integration tests).

"
6d3ccc3f45989a4ad768d029f7126d9bf88a9723,Evolveum/midpoint,"Fixing samples to a newer schema.
Fixing some things in sanity (sync tests are disabled now).
Deltas are clonable.
Yet another ugly hack to help BaseX remember namespaces.
Reworking load of account references (in model).
Lots and lots of small things.

"
5c044697e8b5a8561fa3ca76132518dbb12e9a73,Evolveum/midpoint,"Started fixing model-intest. Reworked notifications to get rid of XSD features unsupported in prism.
"
f2e5f5178df16edf135aa7f56f9823fe0e975556,Evolveum/midpoint,"displayname panel + some cleanup
"
4858af52581d4c17358f72d4b2c5b21329962459,Evolveum/midpoint,"disabling concurrency tests, improving logging (to check what's going on during task cleanup on oracle on bamboo).
"
cc661806d480bcee05a2b002d0f0b6a105af0d4e,Evolveum/midpoint,"refactoring of ShadowCache..
"
7b9e9d10d1b1a8297119bfc7bf476f9538375db8,Evolveum/midpoint,"Refactored account construction schema

"
7bc4b498923f69cc70b4b5e171dbaf3bc1131ea1,Evolveum/midpoint,"Cleaning up UI authorizaions a bit
"
5893399bc47966480f1286b2ff9046f7607839ae,Evolveum/midpoint,"small css fixed and small refactoring in resource ocntent panels
"
22f12da8437ef064337a1c7cd0701f1b3cfe5bda,Evolveum/midpoint,"improved type checking and error handling in sql repository
"
a2abf9ea2994a0a4b2575c170fe441c8524af3f1,Evolveum/midpoint,"Switched PrismTestUtil to use prisms instead of JAXB.
JAXB can still be used if requested explicitly via JaxbTestUtil.
Removed obsolete PrismDomProcessor.
Fixed bugs related to parsing RawType and xsiType handling.
Fixed tests up to repo-sql-impl-test.
"
97abc8081a52f6e3d7b09a1549f9313d5f15cd78,Evolveum/midpoint,"MID-4402 OpResult messages fix + some code refactoring
"
ab106dc694364cda2041a66cf70a5986ccbb8a28,Evolveum/midpoint,"Cleaning up the build (stax2-api, cxf, etc.)
"
c129b0054555be9b3ad8c0575ac3b64af2e58ccd,Evolveum/midpoint,"Making ""paging"" optional parameter


"
a6a51173f5647a43c35d99b1fe598ad152cb04c4,Evolveum/midpoint,"minor refactoring + comments for erik.
"
067ddf87637cda5715fc27722da734c96619332a,Evolveum/midpoint,"First steps towards new policy rules.

Reworked PolicyRuleProcessor to correctly process policy constraints
as a conjunction - all of them must fire for the rule to be applied.
Added ""and""/""or""/""not"" operators for policy constraints. Fixed prism
to be able to work with recursive definitions (PolicyConstraintsType).
"
82b6975908776bfcb4c3087a102ad8bbedc73ee3,Evolveum/midpoint,"query convertor improved (changed path, value-attribute to path, value)..finished xml query serializer..updated samples..
"
f29a0851f9f1e90c20c425f324a5f6a1a69c5c26,Evolveum/midpoint,"first changes for menu items refactoring
"
eb44ec03bdb2b32cd06a8adbddf6c2b1d8b65cc2,Evolveum/midpoint,"Projection expand/collapse buttons, prims panel header buttons
"
c3a2ebe2e896a6130800c5c5eb22bca0c8880c52,Evolveum/midpoint,"Commons (somehow) cleaned up

"
ac0b14a1f47437d94553b84eaf84c0f0b285fde9,Evolveum/midpoint,"moved new repository interface to repo-api project

"
41225fd0f1068eb4f2808cedb60362c7717324ac,Expensify/Bedrock,"Merge pull request #272 from Expensify/tyler-test-upgrades

Simplify BedrockTester"
afd5dde8470d4eaee8d0e79f1c9a79d951804b0e,Expensify/Bedrock,"Log line cleanup.
"
bdbd63384551de901160cb829cbf247b70fa0d96,LBNL-UCB-STI/beam,"Cjrs/#262 parking 4ci (#384)

* splitting street vehicle - based legs in preparation for parking decision

* debugging discrepancy between R5 path traversal assumption (end of first to start of last) and MATSim/BEAM (end of first to end of last)

* add test to ensure durations make sense within trips

* make splitting optional and add test coverage

* RHM doesn't need to do parking

* updating protocols

* framing the pass of from driver to ChoosesParking trait

* add choosesparking class

* getting simple zonal parking infrastructure selection algorithm implemented

* wiring up creation of parking manager and introducing messaging from person to manager

* put taz coords into EPSG and some debugging

* completing the parking process and debugging, runs through beamville now

* resetting beamville conf

* tweaks

* WIP parking specification from csv

* WIP parking specification from csv - thresholdForMakingParkingChoiceInMeters parameter added to config

* WIP parking specification from csv - fix to compilation issue

* WIP parking specification from csv - fix to compilation issue

* WIP parking specification from csv - using thresholdForMakingParkingChoiceInMeters

* WIP: Parking system

* WIP: Parking System - generating/reading parking csv file with stall
values

* update lfs ip

* Parking system: events logged to out events file

* Parking system: working on score

* Parking System: Wip sampleLocationForStall

* Parking system: Writting area in taz-centers.csv

* Parking system: refactor sampleLocationForStall to use exponential distribution

* Parking system: sampleLocationForStall using exponential distribution

* #261 - Missing implementation tasks

* #262 WIP: events output review for test

* WIP #262: make sure at least some parking used, arrival and departure should be from same parking 4 tuple

* In the middle of adding parking back into work flow after major
DriveVehicle refactor. Stuck not on how to handle parking generically
instead of assuming along Persons park.

* making code compile

* go through PersonAgent before going into ChoosesParking

* fixing error

* add parking scenarios

* fix test typo

* Limited parking scenario

* Adding ReleasingParkingSpot state

* Adding initial park for vehicles

* Making parkingSpec pass: adding initial parking for vehicles in beamMobsim

* get rid of ChoosesParkingData because it adds nothing and confuses tracing transitions

* getting it back to where I started today

* debugging

* adapt to no car route found in parking planning

* Pulling up StateTimeout for BasePersonData case in ChoosesParking for
ReleasingParkingSpot state. Making parkSpec pass.

* Throwing ParkEvents after last PathTraversalEvents plus test to verify
this

* Specs for expensive, limited and empty parking should reduce driving.
Spec for limited parking access should increase VMT

* #320 - Ready to use in RideHailManager

* #321 - dealing with DepotParkingInquiry in parking manager

* Missing config and data for TazTreeMap

* Removing repeated initialization after merge

* make mustParkAtEnd be false as default

* Add missing ChoosesParking trait during PersonAgent mixing

* Change order for BeamWarmStart in BeamMobSim

* several fixes and tuning of replanning

* more fixes for failing tests though still failing

* tests usually pass, but replanning is overly diminishing value of car for some reason, causing some tests to fail occasionally

* nasty bug allowing walkers and bikers to travel at the speed of a car

* merging

* get SF light to run and fix injection silliness

* fixing broken tests

* reproduce TAZs with area column, produce parking data

* fixed another test, needed to mock TAZTreeMap correctly

* fixing mistke made during merge, need to pass flag to R5RoutingWorker to split legs for parking

* ride hail wasn't being picked up

* change in how config is passed in caused previous method of customizing to break now fixed

* something has changed in router making expected travel times in TimeDependentRoutingSpec need to be adjusted

* now there is one route out of 1000s that fails for CAR, so softening requirement in spec

* fmt

* ignore poorly formulated parking test
"
bd30ed0ab0c4b2203d6453aaa2fa0f626d4afc22,LBNL-UCB-STI/beam,"scala logger and related refactoring
"
ef45b996f2b4b98d0b76e9851e20e9f9ff8c5892,LBNL-UCB-STI/beam,"inqiuryId now a hashCode and other refactors
"
8a46ebb84e1aeb4030aafbeb02b37ecb5938788e,LBNL-UCB-STI/beam,"more work on refactor of PersonAgent
"
77e3d482137fccc088bb8b92ec45f13c1a0d6f01,LBNL-UCB-STI/beam,"Cs/#406 consider ev range 4ci (#425)

* prevent splitting before the first leg

* fmt

* fmt

* gearing up to refactor RHM

* refactor to allow AllocationManager to request routes, which are delivered back through the same proposeAllocation method (issue #406)

* debug failed test
"
ad8d89294a30e660d67d179ec9607f9d091df483,LBNL-UCB-STI/beam,"improve logging fixed #580 (#581)

* refactored/extracted bash util

* -> we should print config file path, which is started as log.info
-> we see in log file on server which commit is used

* Feedback incorporated

* Feedback incorporated and warnings fixed

* Feedback incorporated
"
f63f88d52916c92d6e227ebb46c4533074337cdb,LBNL-UCB-STI/beam,"rename method for more clarity and avoid conflict
"
c16d95487708f6f8c59fa71c5873e6b7f8994f99,NewSpring/Apollos,"312 closing media player (#398)

* MediaPlayer folder restructure/cleanup.

* componentizing mini player thumbnail

* WIP – adding close button.

* renaming component

* WIP adjusting layering, sizing, and background color. Needs opacity and probably the ability to theme aware.

* refactored to use a component class with state so that we can delay the exit button

* Updated thumnail component with bug fixes. Mostly works just need to wire up the press action to remove the component and hide the media player.

* slightly updated snaps

* Bumping jest version because of callstack bug that was fixed in later version.

* updated 🍪

* rudimentary way of hiding player. Route history is messed up this way though.

* Build stop mutation for mediaPlayer and use it on dismiss

* Patch stop to remove warnings

* Have showMiniControls follow props instead

* Keep playlist on stop

* Patch ClosedButton

Doesn't work with styled because reasons

* fix android overflow bug. background is needed to cause overflow hidden to clip.

* added a 30 minute wait time for travis scripts

* removed 30 min time

* adding a travis wait in hopes to get this PR to pass it's tests 😣

* - reverting jest to try a new plan of debug attack.
- removing mini controls test as it fails for reasons we don't fully know yet.

* fixing linter

* fixing test that Jest was stumbling over. When using the Color library Jest requires it to always return a string via Color().string()
"
2b83c7233950fc2753a5309ac2930a512ff4bc5e,Or3stis/apparatus,":truck: move files to settings folder
"
4de2ec4070bb3f366464e529e40310c8ff6a242c,QuantConnect/Lean,"Make Engine an instance

Updated all interfaces to accept dependencies via Initialize methods
"
b896ef087a728c8504c123ec35c2b67cd047e85b,QuantConnect/Lean,"Merge pull request #421 from QuantConnect/rename-subscription-factory

Rename subscription factory"
c416df6241baf99df4dfc632fdc1bc5e9dc6c408,QuantConnect/Lean,"Refactored option assignment/exercise:
1. Made sure we treat properly option expiration dates before Feb 2015 and after. Added tests.
2. Refactored expiration delisting, assignments/option exercise to happen in the end of the date, not MOC orders in the beginning of the day. Regression test.
3. Refactored option exercise model to generate proper fills on assignments/option. Those fills are reflected correctly in margins, in stats and correspond to IB model. Still need to run IB real-life live tests.
4. Refactored option symbol related functions into separate module (OptionSymbol.cs)
5. Made sure OnAssignmentEvent arrived to the user algo in regression test. Do we need OnExercise event? Not sure.
6. Tested end-to-end Ray's current code (covered call strat) to see short option legs expire worthless, and stats updated.
"
79d35333dee4f3048539dfee131c93092b854ff3,QuantConnect/Lean,"Merge pull request #2720 from Martin-Molinero/refactor-2717-ifeelmodels

Refactor IFeeModel"
ef04c41f595d99e70226b0cc87c541355471af8b,QuantConnect/Lean,"Adds DynamicDataConsolidator and uses in ResolveConsolidator

Also renamed example algorithm filenames to match the type name
"
988abaa0a431d2dc37bbcdff0ae1cf7d712e42f4,QuantConnect/Lean,"Merge pull request #2662 from Martin-Molinero/refactor-2616-track-universes-requesting-subscription

 Subscriptions will track Universe requests"
34611f07db9840fa237beba06db2c31a1d7ba28a,QuantConnect/Lean,"Merged WickoConsolidator with RenkoConsolidator and related classes, such as tests; got rid of defunct classes
"
d4b2da53b3c5d79e6e99b799597f658b6c6e6b1a,QuantConnect/Lean,"Renames BaseDataSubscriptionFactory to TextSubscriptionFactory
"
6dbe83d0be638587f11638e16decb4d368c4758d,QuantConnect/Lean,"Renames PairsTradingAlphaModel

- Since it will be used as a base class for other pairs trading models, it was ranamed as BasePairsTradingAlphaModel

- Use a tuple of symbols are key of BasePairsTradingAlphaModel._pairs dictionary.
"
72aba5e5fa549fa2a835ea4633391cc58e697cc0,QuantConnect/Lean,"Adds dividend data type

Also renamed config.Security to something more sane
"
0f51086ffdeba394d202bc715a4073049d93fcf6,SMRUCC/GCModeller,"improvements on the fasta tools
"
86531e2b0381732cb0e69b2e66d31b291c495a2a,SMRUCC/GCModeller,"improvements on the httpd server script extensions
"
6f98a59a3578005e1c4ba747d91dc4c97ff1b469,SMRUCC/GCModeller,"object renames
"
9f93697b4cf455e09491881162e22b6aa5745ec3,SMRUCC/GCModeller,"improvements on the enrichment background creator
"
dcc9355e6c46570807d73ae315b1d7f4d4728762,SMRUCC/GCModeller,"improvements on the plas system
"
6c39ada50ffef5fbd82822668d10240ce241e15f,SMRUCC/GCModeller,"code style improvements
"
cbfbc96dbc1fdb2254f630f9d0009961f81f3a9f,SMRUCC/GCModeller,"improvements on the html text API
"
b0277bc565babd1830bd19208a30b98959b1ba30,SMRUCC/GCModeller,"rename attributes
"
665b226b41bbd7ba7797a031afef1b3af4cc768a,SMRUCC/GCModeller,"add code comments and improvements on the charting plots API
"
0e3d10bd99f95166ea4b5bc8033df574659b21a2,SMRUCC/GCModeller,"move source file to the base library
"
87d7bf6c6cc4736082a36fcfe431d74ee73f74e4,SMRUCC/GCModeller,"improvements on the parser of the uniprot xml
"
6e3f52c6f48c809f14ca6c5e40aea1e7f0fa5a92,SickGear/SickGear,"Merge pull request #609 from JackDandy/refactor_scheduler_and_ports

Refactor scheduler and upstream ports."
bd98a50faedfc8971fd728c202dc6fae160e5927,SickGear/SickGear,"Merge pull request #450 from JackDandy/feature/ChangeProvHDB

Change provider HDB code simplify and PEP8."
d0326cda7eb89dd73178f678477fc60902da1e7c,SickGear/SickGear,"Change replace HTTP auth with a login page
Change to improve webserve code
Add logout menu item with confirmation
Add 404 error page
"
fe1aabca00ec614732ca497b13d8a4deb436c599,SickGear/SickGear,"Change overhaul and add API functions

Change API version... start with 10
Change set application response header to 'SickGear' + add API version
Change return timezone (of network) in API
Add indexer to calls
Add SickGear Command tip for old SickBeard commands
Add warning old sickbeard API calls only support tvdb shows
Add ""tvdbid"" fallback only for sickbeard calls
Add listcommands
Add list of all commands (old + new) in listcommand page at the beginning
Change hide 'listcommands' command from commands list, since it needs the API builder CSS + is html not json
Add missing help in webapi
Add episode info: absolute_number, scene_season, scene_episode, scene_absolute_number
Add fork to SB command
Add sg
Add sg.activatescenenumbering
Add sg.addrootdir
Add sg.checkscheduler
Add sg.deleterootdir
Add sg.episode
Add sg.episode.search
Add sg.episode.setstatus
Add sg.episode.subtitlesearch
Add sg.exceptions
Add sg.forcesearch
Add sg.future
Add sg.getdefaults
Add sg.getindexericon
Add sg.getindexers to list all indexers
Add sg.getmessages
Add sg.getnetworkicon
Add sg.getrootdirs
Add sg.getqualities
Add sg.getqualitystrings
Add sg.history
Add sg.history.clear
Add sg.history.trim
Add sg.listtraktaccounts
Add sg.listignorewords
Add sg.listrequiedwords
Add sg.logs
Add sg.pausebacklog
Add sg.postprocess
Add sg.ping
Add sg.restart
Add sg.searchqueue
Add sg.searchtv to search all indexers
Add sg.setexceptions
Add sg.setignorewords
Add sg.setrequiredwords
Add sg.setscenenumber
Add sg.show
Add sg.show.addexisting
Add sg.show.addnew
Add sg.show.cache
Add sg.show.delete
Add sg.show.getbanner
Add sg.show.getfanart
Add sg.show.getposter
Add sg.show.getquality
Add sg.show.listfanart
Add sg.show.ratefanart
Add sg.show.seasonlist
Add sg.show.seasons
Add sg.show.setquality
Add sg.show.stats
Add sg.show.refresh
Add sg.show.pause
Add sg.show.update
Add sg.shows
Add sg.shows.browsetrakt
Add sg.shows.forceupdate
Add sg.shows.queue
Add sg.shows.stats

Change sickbeard to sickgear
Change sickbeard_call to property
Change sg.episode.setstatus allow setting of quality
Change sg.history, history command output
Change sg.searchtv to list of indexers
Add uhd4kweb to qualities
Add upgrade_once to add existing shows
Add upgrade_once to add new show
Add upgrade_once to show quality settings (get/set)
Add 'ids' to Show + Shows
Add ids to coming eps + get tvdb id from ids
Add 'status_str' to coming eps
Add 'local_datetime' to comming eps + runtime
Add X-Filename response header to getbanner, getposter
Add X-Fanartname response header for sg.show.getfanart

Add missing fields to sb.show
Add missing fields to sb.shows
Change sb.seasons
Change overview optional
Change make overview optional in shows
Add setscenenumber to API builder
Change move set_scene_numbering_helper into scnene_numbering for use in web interface and API
Change use quality_map instead of fixed list
Add eigthlevel for API/builder page
Change limit indexer param to valid values
Fix wrong parameter in existing apiBuilder.tmpl that prevents javascript from continuing + add console error message for it
Fixed: filter missed shows correctly
Add @gen.coroutine
"
b332efa54307f1d0d3a844fc5f2817f337f2eb16,SickRage/SickRage,"Merge pull request #2438 from MGaetan89/feature/2567_comingEpisodes

Move ""Coming episodes"" logic into a dedicated class"
47dc9a432c2bef7b9eaced114df3b3be87441c75,SickRage/SickRage,"Misc code cleanup
"
58313e3eb3522d25c500e7d9d3d0cd2617e9563c,SickRage/SickRage,"Merge pull request #2784 from VinceVal/rename-comingEpisodes-to-schedule

Refactor /comingEpisodes/ to /schedule/ in GUI and save sort"
e2caf53875d4881944c946c7a2c99c1818c94b06,SickRage/SickRage,"Merge pull request #2660 from VinceVal/fix-snatched-quality-pills

Improve the way quality class is generated"
668a72625107ba3a06032a612d319a619a4da02a,SickRage/SickRage,"Misc template cleanup
"
455564404e77b445c93b7e2731e623583f41dbac,SickRage/SickRage,"refactored qBitTorrent client, fixed issues with sending torrent files
"
152d87a5c76950fe68fd69aa8dedb30f001dfdd9,SickRage/SickRage,"migrate: SQLite -> CodernityDB
"
2c510aa21040437707c3c7ab063386c28a7cf91e,SickRage/SickRage,"Improve UI to display fluidly on different screen sizes.

Fixes the issue where top menu items would disappear on smaller screens.
Add Bootstrap v3.2.0 with Normalize v3.0.1 from github.com/twbs/bootstrap.
Add a modified jquery pnotify stylesheet.
Various UI tweaks.
Update CHANGES.md and TODO.txt
"
e3ef02240b277443fa6ef876d7b004e3d2f90b2b,Ultimaker/Uranium,"Merge pull request #346 from Ultimaker/WIP_improve_initialization

CURA-5164 Make application initialization and start up more clear"
729acbae22aaedd6b2c850a6af1202ab5a2fa67c,WPGlobus/WPGlobus,"Made template for Site Title
"
935ba7d48711f9413c28aed6493a0f539b38fdbc,WPGlobus/WPGlobus,"filter__wp_get_object_terms code cleanup
"
2ed34e54ecae67f5a1e6fb38132ba151bdb7512c,alphagov/rummager,"Add rest-client to global dependencies

`rest-client` is used *everywhere*, so it needs a special place instead
of requiring it randomly around the place.
"
18a5f8b4be00cfd9dfd3ae54af0cbc3ee5ee363c,alphagov/rummager,"Introduce ResultSet value object.

This unifies return types across the `search` and `advanced_search`
methods on Elasticsearch::Index and lets us simplify the presentation
logic.
"
60083aa1f0dfc739c4845e510aa1cc89edd75722,audiokit/AudioKit,"Merge pull request #677 from adamnemecek/develop

refactoring"
866c30de6617ef41cb5cbd31aca91220c35d1f78,audiokit/AudioKit,"Added extensions to AudioComponentDescription to simplify construction
"
92a98daa7c6bc88b5cde1cbc043e701d137fd81d,audiokit/AudioKit,"* small refactoring of the init callback
"
51a0fb9ae0e51333d74b41b97130f1d07cf730de,audiokit/AudioKit,"A little refactoring for banks
"
d0b5a373e4216bc3ca2f14799f154cb0fde7f910,audiokit/AudioKit,"Restructured AKMandolinDSP classes
"
f2946d819a0390961e309a7cc9af96bf06c5cf77,audiokit/AudioKit,"Merge pull request #1274 from marcussatellite/develop

made some AudioKit headers public"
4f4b2c055ed56dd3ecd0cfcd62c5a00300032246,audiokit/AudioKit,"Breaking up AKMIDI.swift into multiple files
"
8c6427959ca38118f2dbc7555aa92508fca09197,blevesearch/bleve,"made more of index mapping private
"
bdead683351aa8487b5d8d253d68f2b4263219c7,centreon/centreon,"  *  Improve downtime and service  relation

git-svn-id: 25a0ac75d3222d69293b2750b310215dcabd6451@11567 6bcd3966-0018-0410-8128-fd23d134de7e
"
08c45a29715a68cc053dad3109aadb05e46a4560,centreon/centreon,"Replace macro @CENTREON_ETC@
"
a694dceda22b7132d5783a3c8cd58617078b6d3e,centreon/centreon,"improve ba and kpi forms
"
ea5fdd09c4f5dca68398c31db29e8729661ec013,centreon/centreon,"    *[Datatable]: Improve export button
"
a7bfbbedd6059183c5126bbea248fe52176f6386,coreboot/coreboot,"amd/stoneyridge: Convert MP init to mp_init_with_smm

Change the Stoney Ridge SOC to a more modern method for setting up
the multiple cores.

Add a new cpu.c file for most of the processor initiliazation.  Build
mp_ops with the necessary callbacks.  Note also that this patch removes
cpu_bus_scan.  Rather than manually find CPUs and add them to the
devicetree, allow this to be done automatically in the generic
mp_init.c file.

SMM information is left blank in mp_ops to avoid having mp_init.c
install a handler at this time.  A later patch will add TSEG SMM
capabilities for the APU.

This patch also contains a hack to mask the behavior of AGESA which
configures the MTRRs and Tom2ForceMemTypeWB coming out of AmdInitPost.
The hack immediately changes all WB variable MTRRs, on the BSP, to UC
so that all writes to memory space will make it to the DRAM.

BUG=b:66200075

Change-Id: Ie54295cb00c6835947456e8818a289b7eb260914
Signed-off-by: Marshall Dawson <7e1f03060580a936245d826517caa1807214ea35@gmail.com>
Reviewed-on: https://review.coreboot.org/21498
Tested-by: build bot (Jenkins) <8254d1186852c26c9fb3d343db6a5be86317fea9@coreboot.org>
Reviewed-by: Kyösti Mälkki <54bd130f2000c0d5e96442b78dd2a055986fbb66@gmail.com>
Reviewed-by: Aaron Durbin <af0622ab041e8b0f8e5819838dcc93898196e71f@chromium.org>
"
7b40e42c495bc7cf92dbcda325c51591fb2bdc77,coreboot/coreboot,"buildgcc: use ${GDB_DIR} instead of gdb-${GDB_VERSION}

Bring gdb in sync with all other build targets.

Change-Id: I9c478947a00f044edf910a91d876bbf486a791cf
Signed-off-by: Stefan Reinauer <b7a34d9d688de5c92c7948a5d8c55e0adeaff0bb@coreboot.org>
Reviewed-on: http://review.coreboot.org/10488
Reviewed-by: Patrick Georgi <bc411205f21846a74924ee7b489c75617ec76078@google.com>
Tested-by: build bot (Jenkins)
Reviewed-by: Alexander Couzens <c600dc1dfcd5dfaa88c69d8339e7002b7cd99cd3@fe80.eu>
"
015f0aea5dc0cd391ddc34c1db6591d93d08e8a9,coreboot/coreboot,"Add predefined __ROMSTAGE__ and __RAMSTAGE__ macros

This patch adds the macros __ROMSTAGE__ and __RAMSTAGE__ which get
predefined in their respective stages by make, so that we have one
specific macro for every stage. It also renames __BOOT_BLOCK__ and
__VER_STAGE__ to __BOOTBLOCK__ and __VERSTAGE__ for consistency.

This change is intended to provide finer control and clearer
communication of intent after we added a new (optional) stage that falls
under __PRE_RAM__, and will hopefully provide some robustness for the
future (we don't want to end up always checking for romstage with #if
defined(__PRE_RAM__) && !defined(__BOOT_BLOCK__) &&
!defined(__VER_STAGE__) && !defined(__YET_ANOTHER_PRERAM_STAGE__)). The
__PRE_RAM__ macro stays as it is since many features do in fact need to
differentiate on whether RAM is available. (Some also depend on whether
RAM is available at the end of a stage, in which case #if
!defined(__PRE_RAM__) || defined(__ROMSTAGE__) should now be
authoritative.)

It's unfeasable to change all existing occurences of __PRE_RAM__ that
would be better described with __ROMSTAGE__, so this patch only
demonstratively changes a few obvious ones in core code.

BUG=None
TEST=None (tested together with dependent patch).

Change-Id: I6a06d0f42c27a2feeb778a4acd35dd14bb53f744
Signed-off-by: Patrick Georgi <bc411205f21846a74924ee7b489c75617ec76078@chromium.org>
Original-Commit-Id: a4ad042746c1d3a7a3bfda422d26e0d3b9f9ae42
Original-Change-Id: I6a1f25f7077328a8b5201a79b18fc4c2e22d0b06
Original-Signed-off-by: Julius Werner <4d12f06cff3725783b352157673a720bc67c4afe@chromium.org>
Original-Reviewed-on: https://chromium-review.googlesource.com/219172
Original-Reviewed-by: Aaron Durbin <af0622ab041e8b0f8e5819838dcc93898196e71f@chromium.org>
Reviewed-on: http://review.coreboot.org/9304
Reviewed-by: Stefan Reinauer <b7a34d9d688de5c92c7948a5d8c55e0adeaff0bb@coreboot.org>
Tested-by: build bot (Jenkins)
"
7357110ac1b8f4f516f1ba874131663edc6ec447,dthain/basekernel,"Merge pull request #223 from dthain/kobject-cleanup

Kernel Object / System Call Cleanup"
e6da2db477b4ed92bbcb6b19f9a52032a94aa209,dthain/basekernel,"Added detectors for a variety of errors in syscall_handler.c
Clean up error symbols and make literals in switch statement.
Slight changes to error names for consistency.
"
913b4fb9e2777cf0960b1e1ad9c2aa2aef67e808,eerimoq/asn1tools,"Cleanup.
"
a19d20cfb8f7250d5738f878981719fe1ba66b8d,electron/electron,"refactor: more cleanup of chromium_src (#15424)

"
70bcb0ac5af853d1bd3c5f633b76b42bf137f741,electron/electron,"Clean up no-unused-vars lint errors
"
499c9bc3b96eaa08446fc2bb7c5db6fef98dea95,electron/electron,"Enable converting v8::Function to base::Callback.
"
2cd03bf360f2eceabf1e3839e0301513c16dc945,electron/electron,"build: remove duplicate devtools sources (#14522)

* build: remove duplicate devtools sources

* build: create separate target for chrome sources

* Move sources that are always depended on by electron,
  starting with security_state_tab_helper.{cc|h}
* Add //component/strings to pak for devtools security tab

* fix: allow specifying type of the added filesystem.

https://chromium-review.googlesource.com/c/chromium/src/+/729250

* fix: do not index excluded folders

https://chromium-review.googlesource.com/c/chromium/src/+/972579
"
391c07b80ac838d20ada53ad0a7f19c56cfbb44d,electron/electron,"Simplify custom window button positioning
"
c320da5ec80dc74d359216e12b9016bd7e5ce7c0,electron/electron,"Merge pull request #13030 from electron/miniak/member-init

Refactoring: use C++11 class member variable initialization"
b50f86ef43b17f90c295349d8ca93751ad9045a6,electron/electron,"refactor: use separate ipc-renderer-internal / ipc-main-internal APIs for Electron internals (#13940)

"
b900ff93e45084a43b0a6c0b7b897134f2437f31,electron/electron," Make OnCapturePageDone static
"
a8b5a371328b66362971dabdd0117b6315626b63,fluent/fluentd-ui,"make up fluentd setting page
"
8f5e6c7ed400b9afd46c1c904eba74965d0cf083,gamejolt/gamejolt,"Reworked cover buttons, client buttons, and package card buttons...

They now work for sellables and in client. It knows when to show a Buy button in headers and correctly works with packages on in the games.view state.
"
cb6b064178ee9b8ce8da7f5cf0d92c624399ebd1,git-cola/git-cola,"qt: Make the 'text' field optional in create_button()

Signed-off-by: David Aguilar <9de348c050f7cd1ca590883733c4e531ce610bf4@gmail.com>
"
67c15a34d6c4556b293ef2b81647646c69a4ca25,git-cola/git-cola,"cola: Add a gitcola module and move the GitCola class there

Signed-off-by: David Aguilar <9de348c050f7cd1ca590883733c4e531ce610bf4@gmail.com>
"
245a3d758425c337e05c298e6dec5deac154dd6b,git-cola/git-cola,"app: refactor widgets to provide a context to difftool commands

Related-to: #457
Signed-off-by: David Aguilar <9de348c050f7cd1ca590883733c4e531ce610bf4@gmail.com>
"
61d4410b476b16d924e654692635952592f276d0,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into fix-download-artifacts-button-link

* upstream/master:
  Reset pushes_since_gc counter before specs run to ensure starting point is 0
  Add missing spec for ProtectedBranches::CreateService
  Refactor boards_spec.rb to avoid code duplication
  Render invalid template for merge requests without source project and open
"
07009a1f4893652e152794ae8160a2f46e00772c,gitlabhq/gitlabhq,"Add Object Storage to GitLab project import

- Refactor uploads manager
- Refactor importer, update import spec
- Add more object storage specs
"
b2d142c4a026b479925482c4756172d86888198b,gitlabhq/gitlabhq,"Merge branch 'fix/ha-mode-import-issue' into 'master'

Fix Import/Export not working in HA mode

Use a shared path instead of `Tempfile` default `/tmp` so the import file is accessible by any GitLab instance.

Fixes https://gitlab.com/gitlab-org/gitlab-ce/issues/20506

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- Tests
  - [x] All builds are passing
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

See merge request !5618"
9dd330576ac374cd7ec7e97863e0b5228dfd3205,gitlabhq/gitlabhq,"Merge branch 'blackst0ne-rails5-rename-sort-methods' into 'master'

[Rails5] Rename `sort` methods to `sort_by_attribute`

See merge request gitlab-org/gitlab-ce!18142"
b959ae553b1243e081d557b1e545d30830931e5b,gitlabhq/gitlabhq,"Improve group visibility level feature
"
f7140dcc63e3d3927ef0dafa3d6c726857ee4b99,gitlabhq/gitlabhq,"Merge branch 'index-milestone-title-label' into 'master'

Improve performance when filtering on milestone on labels

Also some minor refactoring in the seeding.

See merge request !1587"
694cfeb7b7288d7d27eca30f808fba421c1f1719,gitlabhq/gitlabhq,"Merge branch 'master' into refactor-clusters
"
dfc2542f55953815f703d743635d6faf2523d1a1,gitlabhq/gitlabhq,"use full caps RSS instead of rss
"
b3279b9b5170a19a2aa504eae94a9a8be5908755,gitlabhq/gitlabhq,"moved from albino -> pygments.rb
"
aac1de46c9be659b74da12f704412f38292974db,gitlabhq/gitlabhq,"Use a specialized class for querying events

This changes various controllers to use the new EventCollection class
for retrieving events. This class uses a JOIN LATERAL query on
PostgreSQL to retrieve queries in a more efficient way, while falling
back to a simpler / less efficient query for MySQL.

The EventCollection class also includes a limit on the number of events
to display to prevent malicious users from cycling through all events,
as doing so could put a lot of pressure on the database.

JOIN LATERAL is only supported on PostgreSQL starting with version 9.3.0
and as such this optimisation is only used when using PostgreSQL 9.3 or
newer.
"
24d939afb9816f3de2ca247de82f96ca32de3612,gitlabhq/gitlabhq,"Remove Group#owner_id from API since it is not used any more
"
7cef4f1908d99743bf1dfb9c1cfdd6b2936b2b3d,gitlabhq/gitlabhq,"Improve valid keys validation for CI config nodes
"
0672258915a0cf444802ffc50ad1cd914f4f11d4,gitlabhq/gitlabhq,"Cleanup CiCommit and CiBuild

- Remove all view related methods from Ci::Build and CommitStatus
- Remove unused Ci::Commit and Ci::Build methods
- Use polymorphism to render different types of CommitStatus
"
22d44ae9a699c418aba442cd99eec8f58d5fa006,gitlabhq/gitlabhq,"Use /-/health instead of breaking /-/liveness
"
0ea81ae50a702c7341b1bd6fd15002ee78ac4964,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/pipeline-hooks-without-slack' into wall-clock-time-for-showing-pipeline

* upstream/pipeline-hooks-without-slack:
  Make explicit call for all event types for ProjectHook factory
  Capitalise URL on web_hooks/form
  Remove changes not related to this MR
  Added documentation for pipeline hooks
  Rename queue to enqueue in tests
  Instrument Project.visible_to_user
  Fix build play failure
  Update ruby 2.3.1
  Improve transition between states for event `enqueue`
  Use event `enqueue` instead of `queue`
  Fix test failures
  Fix bug where destroying a namespace would not always destroy projects
  Remove unused SpamReport model; this was renamed to SpamLog
  Corrected links/usernames in performance guide
  Add gravatars to build history
  Add deployment ID and gravatar to environments page
  Format environment history page
  Add avatar to commit message; environment style updates to match pipelines page
  Style deploy button
"
895efdfbcfe6082709943767dc8b3ebf399e1283,gitlabhq/gitlabhq,"use text instead of string for db columns
"
3d7194f0112da12e8732df9ffe8b34fe7d0a9f6b,gitlabhq/gitlabhq,"Merge Request on forked projects

The good:

 - You can do a merge request for a forked commit and it will merge properly (i.e. it does work).
 - Push events take into account merge requests on forked projects
 - Tests around merge_actions now present, spinach, and other rspec tests
 - Satellites now clean themselves up rather then recreate

The questionable:

 - Events only know about target projects
 - Project's merge requests only hold on to MR's where they are the target
 - All operations performed in the satellite

The bad:

  -  Duplication between project's repositories and satellites (e.g. commits_between)

(for reference: http://feedback.gitlab.com/forums/176466-general/suggestions/3456722-merge-requests-between-projects-repos)

Fixes:

Make test repos/satellites only create when needed
-Spinach/Rspec now only initialize test directory, and setup stubs (things that are relatively cheap)
-project_with_code, source_project_with_code, and target_project_with_code now create/destroy their repos individually
-fixed remote removal
-How to merge renders properly
-Update emails to show project/branches
-Edit MR doesn't set target branch
-Fix some failures on editing/creating merge requests, added a test
-Added back a test around merge request observer
-Clean up project_transfer_spec, Remove duplicate enable/disable observers
-Ensure satellite lock files are cleaned up, Attempted to add some testing around these as well
-Signifant speed ups for tests
-Update formatting ordering in notes_on_merge_requests
-Remove wiki schema update
Fixes for search/search results
-Search results was using by_project for a list of projects, updated this to use in_projects
-updated search results to reference the correct (target) project
-udpated search results to print both sides of the merge request

Change-Id: I19407990a0950945cc95d62089cbcc6262dab1a8
"
44321b1a3d99fc1a25d4b24afef55e1755f89e8a,gitlabhq/gitlabhq,"Merge branch 'master' into feature/multi-level-container-registry-images

* master: (57 commits)
  Ensure we generate unique usernames otherwise validations fail
  Fix a Knapsack issue that would load support/capybara.rb before support/env.rb
  Ensure users have a short username otherwise a click event is triggered ...
  Enable the `bullet_logger` setting; enable `raise` in test environment
  Fix Rubocop offenses
  Set the right timeout for Gitlab::Shell#fetch_remote
  Refactoring Projects::ImportService
  Move methods that are not related to mirroring to the repository model
  Fix GitHub pull request formatter spec
  Rename skip_metrics to imported on the importable concern
  Add CHANGELOG
  Remove unused include from RepositoryImportWorker
  Skip MR metrics when importing projects from GitHub
  Fetch GitHub project as a mirror to get all refs at once
  Make file templates easy to use and discover
  Ensure user has a unique username otherwise `user10` would match `user1`
  Ensure the AbuseReport fixtures create unique reported users
  Don't use FFaker in factories, use sequences instead
  Fix brittle specs
  Fix the AbuseReport seeder
  ...

Conflicts:
	db/schema.rb
"
75496059a1c36c2139bf29fa20fd4370c511fdd1,gitlabhq/gitlabhq,"Further design iteration on project overview

Continues the iteration on the project overview UI:

- moved star, fork and new clone button
(copy SSH/HTTPS URLs) to top right,
  made them smaller
- avatar is now larger (64px)
- 'Request access' is now a link instead
  of a button
- overview comes before the description +
  changed styling and added icons
- description font-size is now 16px (large-paragraph)
- quick links to files are moved downwards
  below the commit/pipeline info
- margins changed to group content into
  4 groups to clean up the interface
- visibility info reduced to icon-only and
  moved to the right of the title
"
2395b8f079fdd3f82428fd6f71221f57614cd226,gitlabhq/gitlabhq,"Merge branch 'show_tags_in_commit_view' into 'master'

Show tags in commit view

### What does this MR do?
With this MR you can see the assigned tags for a commit in the commit view.
### Are there points in the code the reviewer needs to double check?
I don't think so. But it would be awesome if the reviewer can tell me how to add a tag to the sample_commit in spec/support/repo_helpers.rb.
Then I can add a test for the new tag_names_contains method as soon as possible :)

### Why was this MR needed?
At the moment if one click on a commit will see details such as: parent commit, amount of additions, deletions, but will not see if this commit has Tag linked to it.
Showing branch, tag details will give better overview about the commit

### What are the relevant issue numbers / Feature requests?
Feature request: http://feedback.gitlab.com/forums/176466-general/suggestions/3962044-show-tags-in-commit-view
### Screenshots
![gitlab_feature_show_tags](https://gitlab.com/uploads/haynes/gitlab-ce/771c1a36bb/gitlab_feature_show_tags.png)

@dblessing Can you take a look at this MR as well please?

See merge request !297
"
e8ca579d88703aeeaa64dbf4ac45f73a60181568,gitlabhq/gitlabhq,"Add a project forks spec helper

The helper creates a fork of a project with all provided attributes,
but skipping the creation of the repository on disk.
"
f0886918845f8292889db7e30033b7051147f3b0,gitlabhq/gitlabhq,"Merge branch '34264-replace-settings-ci-cd-pipelines-with-settings-pipelines-in-docs' into 'master'

Resolve ""Replace 'Settings ➔ CI/CD Pipelines' with 'Settings ➔ Pipelines' in docs""

Closes #34264

See merge request !12433"
1e5506d01619780da68fc51ada58188a9070255b,gitlabhq/gitlabhq,"Remove some deprecated methods

To avoid the use of slow queries, remove some deprecated methods and encourage
the use of ProjectFinder to find projects.
"
e1e315ee28c07a0095996375767076ff9259cbd5,gitlabhq/gitlabhq,"Merge branch 'mr-image-commenting' into 'master'

Re-implemented image commenting on diffs

Closes #48956

See merge request gitlab-org/gitlab-ce!22443"
3c8d2148fc81cf75af322744221a0ff284216988,gitlabhq/gitlabhq,"Merge branch 'feature/send-registry-address-with-build-payload' into 'master'

Send registry address with build payload

## What does this MR do?

Adds `registry_url` as a part of a build payload, when sending a response to a GitLab Runner which requested a new build.

## Are there points in the code the reviewer needs to double check?

Change in `lib/ci/api/entities.rb`.

## Why was this MR needed?

This is one of the steps needed to add support for private/protected registries hosted with GitLab CE/EE.

## Screenshots (if relevant)

## Does this MR meet the acceptance criteria?

- [x] [Changelog entry](https://docs.gitlab.com/ce/development/changelog.html) added
- [ ] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [x] API support added
- Tests
  - [x] Added for this feature/bug
  - [ ] All builds are passing
- [ ] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [ ] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [ ] Branch has no merge conflicts with `master` (if it does - rebase it please)
- [ ] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?

Related to gitlab-org/gitlab-ci-multi-runner#1828, gitlab-org/gitlab-ci-multi-runner!386, gitlab-org/gitlab-ci-multi-runner#1434

See merge request !7474"
4e249d5baea99a52915025fc2827d01ab2d77c18,gitlabhq/gitlabhq,"Use :maximum instead of :within for length validators with a 0..N range

Signed-off-by: Rémy Coutable <4ea0184b9df19e0786dd00b28e6daa4d26baeb3e@rymai.me>
"
9e396d6e1c975aece20877623973dcd2d6941355,gitlabhq/gitlabhq,"Fix namespace move callback behavior, especially to fix Geo replication of namespace moves during certain exceptions
"
3c3b17a5a4b4f85f3f81f918a7e0c3a57f469eb7,gitlabhq/gitlabhq,"Merge branch 'issue-edit-inline-move-project' into 'issue-edit-inline'

Added move to project in issue inline edit form

See merge request !11437"
6a92dff2bc368aa362a0e239f9fcf953ad4e9e52,gitlabhq/gitlabhq,"Merge branch 'master' into sh-headless-chrome-support

* master: (96 commits)
  Fetch the merged branches at once
  Merging EE doc into CE
  Avoid using Rugged in Gitlab::Git::Wiki#preview_slug
  Cache commits on the repository model
  Remove groups_select from global namespace & simplifies the code
  Change default disabled merge request widget message to ""Merge is not allowed yet""
  Semi-linear history merge is now available in CE.
  Remove repetitive karma spec
  Improve spec to check hidden component
  Rename to shouldShowUsername
  Add KubernetesService#default_namespace tests
  Revert ""Merge branch '36670-remove-edit-form' into 'master'""
  Fix bitbucket login
  Remove duped tests
  Add path attribute to WikiFile class
  Make local_branches OPT_OUT
  Clarify the language around External Group membership with SAML SSO to clarify that this will NOT add users to GitLab Groups.
  Added ssh fingerprint, gitlab ci and pages information in an instance configuration page
  Fix the incorrect value being used to set GL_USERNAME on hooks
  Resolve ""Remove overzealous tooltips in projects page tabs""
  ...
"
356e9aa81107efbc42c863210f1c760d8fabdb0c,gitlabhq/gitlabhq,"Merge branch 'master' into sh-headless-chrome-support

* master: (21 commits)
  Fix bottom spacing for dropdowns that open upwards
  Fix linting errors in sprintf
  regression with product labels
  Hide Gollum inside Gitlab::Git::Wiki
  Restore User.from_gitaly
  Added skeleton loading paradigm to UX guide
  Remove those tests as they're not needed anymore
  Resolve ""Precompiled assets with digest strings are ignored in CI""
  Make the `QA:Page::Project::Show` driver less brittle
  Change index on ci_builds to optimize Jobs Controller
  Add basic sprintf implementation to JavaScript
  Expose GitLab features to the CI runner
  Hide CI section markers from job trace
  Freeze the constant array
  Just allow the scheme we want!
  Adapt to the latest addressable behaviour
  Strip before passing to addressable, otherwise it's invalid
  Make sure we didn't blow up if URI is invalid
  Only update gems we need
  ok
  ...
"
7781bda9bd82997f4a03de4cf911b1156ceb2cde,gitlabhq/gitlabhq,"Move Markdown/reference logic from Gitlab::Markdown to Banzai
"
3e8118d689824ef299c1069eff6150849046c0b5,gitlabhq/gitlabhq,"Merge branch '20052-actions-table-vscroll' into 'master'

Prevent overflow with vertical scroll when we have space to show content

## What does this MR do?
Removes vertical and horizontal scroll from builds, environments and pipelines tables by adding a media query since this is only necessary in smaller screens.

## Screenshots (if relevant)
![scroll](/uploads/6b9e3584df6e4ca29553d2ff576b794e/scroll.jpg)

## Does this MR meet the acceptance criteria?

- [ ] [Changelog entry](https://docs.gitlab.com/ce/development/changelog.html) added
- [ ] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [ ] API support added
- Tests
  - [ ] Added for this feature/bug
  - [x] All builds are passing
- [x] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if it does - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?
 Closes #20052

See merge request !8061"
fd32960e7c94bdc0db9704b5ec7661defdc488e3,gitlabhq/gitlabhq,"Separate CE params on Grape API
"
020ea32e767b9ad033f9fedcaa902865a01fa944,gitlabhq/gitlabhq,"Implement pipeline hooks, extracted from !5525

Closes #20115
"
4995302df64b71846370aa80f5b12a2d73112421,gitlabhq/gitlabhq,"Enable the StringReplacement cop.

Also fix one use of `gsub` that would be faster as `delete`.

Use `tr` instead of `gsub` when you are replacing the same number of
characters. Use `delete` instead of `gsub` when you are deleting
characters.
"
df60723eecdaa39b8526d5967596de7141f3f038,gitlabhq/gitlabhq,"Merge branch '20371-artifacts_present_db_check' into 'master'

Check for Ci::Build artifacts at database level

## What does this MR do?

Check for the presence of artifacts not expired at database level

## Are there points in the code the reviewer needs to double check?

N/A

## Why was this MR needed?

To try to improve a little the performance of the pipelines page

## What are the relevant issue numbers?

Closes #20371

## Screenshots (if relevant)

N/A

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- ~~[ ] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)~~
- ~~[ ] API support added~~
- Tests
  - [x] Added for this feature/bug
  - [ ] All builds are passing
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)


See merge request !5543"
377afd65d158eca8dd6b875e50e20e76b6117507,gitlabhq/gitlabhq,"Enable renaming files & folders in the Web IDE

Closes #44845
"
4c1dc31051fb741bbd6daff4b5c1dcb166d85eeb,gitlabhq/gitlabhq,"Clean up ActiveRecord code in TodosFinder

This refactors the TodosFinder finder according to the new code reuse
rules, as enforced by the CodeReuse cops. I also changed some of the
methods to use regular if statements, instead of assignments and/or
early returns. This results in a more natural flow when reading the
code, and it makes it harder to accidentally return the wrong result.
"
120f9abaa15ce0feec1dc457ad3dc3787e4fbfc6,gitlabhq/gitlabhq,"Add GitLab Pages

- The pages are created when build artifacts for `pages` job are uploaded
- Pages serve the content under: http://group.pages.domain.com/project
- Pages can be used to serve the group page, special project named as host: group.pages.domain.com
- User can provide own 403 and 404 error pages by creating 403.html and 404.html in group page project
- Pages can be explicitly removed from the project by clicking Remove Pages in Project Settings
- The size of pages is limited by Application Setting: max pages size, which limits the maximum size of unpacked archive (default: 100MB)
- The public/ is extracted from artifacts and content is served as static pages
- Pages asynchronous worker use `dd` to limit the unpacked tar size
- Pages needs to be explicitly enabled and domain needs to be specified in gitlab.yml
- Pages are part of backups
- Pages notify the deployment status using Commit Status API
- Pages use a new sidekiq queue: pages
- Pages use a separate nginx config which needs to be explicitly added
"
a567d596f85b2f2f23e8e6f31f0eb3fa957f2c48,gitlabhq/gitlabhq,"Merge pull request #2305 from gitlabhq/fix_gfm_auto_complete

Fix and refactoring gfm_autocomplete"
7e2ad5d47a1d95281e2a217538dae67107a584c2,gitlabhq/gitlabhq,"Merge branch 'fix/mwbs-to-mwps' into 'master'

Rename MWBS to MWPS

Closes #24707

See merge request !9335"
b13bed62eaa047560370692f22041993635f83ee,gitlabhq/gitlabhq,"Clean up code by using keyword arguments.
"
c4142cf9c0c0b217034c60a0a973d2e96b17a428,gitlabhq/gitlabhq,"Improve components for PhantomJs compatibility
"
5d2c70b117600e3dd37e40bb206195e694a6546c,gitlabhq/gitlabhq,"Merge branch 'master' into widget-widget-widget-fun

* master: (163 commits)
  Add KUBE_CA_PEM_FILE, deprecate KUBE_CA_PEM
  Remove useless assignment
  Rename query parameter to `membership`
  Stop setting Strict-Transport-Securty header from within the app
  Add filter param for authorized projects for current_user for V4
  Improve EE compatibility MR docs [ci skip]
  Fix the `Gitlab::Seeder` monkey patch to disable mail delivery
  Use separate error class for cherry-pick and revert tree errors
  Fix cherry-picking or reverting through an MR
  Resolve ""missing count badge styling in new sidebar dropdown""
  Fix Rubocop offense in build retry service
  Decrease tanuki logo size
  remove extra whitespace on dashboard projects page
  Changes after review
  Delete hooks from project with empty repository
  Only add a newline in Markdown Editor if the current line is not empty
  Revert ""Disallow system notes for closed issuables""
  Cleaning up navigational order - Project
  Backport EE changes. Service method should be `get` and not `all`
  Remove bundle-audit ignores that are no longer applicable
  ...
"
171b2625b128e5954ce0a150a4fc923a22164e4e,gitlabhq/gitlabhq,"Addreses backend review suggestions

- Remove extra method for authorize_admin_project
- Ensure project presence
- Rename 'read_repo' to 'read_repository' to be more verbose
"
b4f7fa0e8b641c563c05b2ddd564b4530906035b,gitlabhq/gitlabhq,"Merge branch 'remove-scss-variables-5' into 'master'

Finish cleaning up reassigned variables

Closes #49807

See merge request gitlab-org/gitlab-ce!21349"
ef35ca238dd8ed1c8b8d8c3cfdf64630c6c781ff,gitlabhq/gitlabhq,"Merge branch 'rename-ci-commit-phase-2' into rename-ci-commit-phase-3
"
1243cab2918ac6f8a1ac7ecbb4e00c14cfc290c1,gitlabhq/gitlabhq,"Merge branch '22774-retouch-environments-deployments' into 'master'

Resolve ""Retouch environments list and deployments list""

## What does this MR do?
#### Environments List
- Fixes deployment ID
- Removes bold styling from deployment ID
- Changes Las Deployment Column to have '#ID by user'
- Adds build column with link to the build
- Adds external url to where the environment is hosted

#### Environment Details
- Add link to the build column and changes content to show ""build (#id) by user""
- Adds external link to the review app

Adds tests

## Screenshots (if relevant)
#### Environments List
![env_list](/uploads/6cfd737bb0d2f2853a610479877de5a3/env_list.png)
#### Environments Details
![env_details](/uploads/70ec59d7d7de5c1ef57132c2ec9c1b8f/env_details.png)

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- [ ] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [ ] API support added
- Tests
  - [x] Added for this feature/bug
  - [ ] All builds are passing
- [ ] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [ ] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?
Closes #22774

See merge request !6691"
317c3cdd33c59c0fd9f3993cf1fb0e34b601bbcc,gitlabhq/gitlabhq,"Merge branch 'refactor-clusters' into 38464-k8s-apps
"
13827e10ef78a021b882c1ac2b226201f057335e,gitlabhq/gitlabhq,"Merge branch 'master' into vue-mr-widget-state

* master: (39 commits)
  WebIDE: Fix Commit bugs
  Resolve ""Projects API: filter 'with_issues_enabled=true' returns projects with 'issues_enabled=false'""
  Fix incorrect path for gitlab-shell authorized keys helper
  Fix duplicate item in protected branch/tag dropdown
  dynamic imports for groups: pages
  Refactor dispatcher project mr edit and creation diff path
  Refactor dispatcher project mr creations new path
  Rework indexes on redirect_routes to be more effective and enforce a case insensitive unique path
  Upgraded Karma Dependencies
  Fix conflict with ee icon
  Remove trailing space after author name in note header
  Delete conflicting orphaned routes
  Make the 'Edit' links consistent in the issuable sidebar
  Fix a bug calculating artifact size for project statistics
  Update rubocop, rubocop-rspec, and gitlab-styles
  Correctly escape UTF-8 path elements for uploads
  Change cursor to default for disabled buttons
  Fix eslint
  Remove Event listener and make code more readable.
  Update CHANGELOG.md for 10.1.7
  ...
"
9556030d10df455deaf16d65c46c5b0537c14bac,gitlabhq/gitlabhq,"Merge branch 'dz-use-nip-io' into 'master'

Use nip.io instead of xip.io

See merge request gitlab-org/gitlab-ce!19688"
185d278bbf298e4d4ff98e418c3a7577e401359a,gitlabhq/gitlabhq,"Use remote_branch instead
"
faa57d785bb3807be9f0974390bd999bac4dcc6b,gitlabhq/gitlabhq,"Switch to using gettext:compile instead of gettext:pack in the install
Docs

This skips the step that updates the .pot files with changes in the
codebase, which can take extra time, and isn't required during install.
"
7e9b41896d8c2ffae36152401f35479b39297e78,gitlabhq/gitlabhq,"Merge branch 'refactor-builds-creation-service' into 'master'

Refactor pipeline creation service

## What does this MR do?
This refactors GitLab CI build processing: all builds for pipeline are pre-created when a pipeline object is created. 
The builds are created with a new introduced status `created`.
The builds are then automatically promoted to `pending` when a previous stage do succeed.
This significantly simplifies pipeline processing code solving a lot of problems of lazily initialisation of previous approach (builds were created on-demand).

## Why was this MR needed?
The previous mechanism had a lot of flows (shown in related issues) in how it work, but also in code design. Removing cross model-service-library dependencies.

The current approach moves a build creation to single place `CreatePipelineService` and removes a dynamic dependency on `config_processor` significantly simplifying a build creation and pipeline processing. Pipeline processing is implemented in `ProcessPipelineService`.

This also allows to easily extend GitLab with Manual Actions which is part of 8.10 direction issue.

## Migration problem
~~This MR removes the a on-demand creation of builds in pipelines.
 Pipelines that are running and are in mid-stage (some stages started, but not all) will not be fully evaluated after application restart. 
This happens, because the code responsible for on-demand creation is removed. 
There's no easy way to migrate existing pipelines, other than doing offline migration and putting pipeline processing in migration code (which seems to be a really bad idea).~~

To support old pipelines I added a lazy initialization of builds if none is found.

## What are the relevant issue numbers?
Fixes: https://gitlab.com/gitlab-org/gitlab-ce/issues/12839
Solves: https://gitlab.com/gitlab-org/gitlab-ce/issues/18644 https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/289
Allows to easily implement: https://gitlab.com/gitlab-org/gitlab-ce/issues/17010

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- [x] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [x] API support added
- Tests
  - [x] Added for this feature/bug
  - [ ] All builds are passing
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [ ] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)


See merge request !5295"
a1781a49416790f727b3dd3453bf704723e72b90,gitlabhq/gitlabhq,"Consistently use PersonalAccessToken instead of PersonalToken
"
188c231304845ff29506dc152aaea6ec42373015,gitlabhq/gitlabhq,"Add a test to make sure the queue ticks when updating runners
"
41e4072393f0088c75f27d61293318844c62125e,gitlabhq/gitlabhq,"Add regexp_for_value helper method
"
92d896183bd958e16c85daa6341ffde3414f054f,gitlabhq/gitlabhq,"Merge branch 'rs-organize-factories' into 'master'

Factory cleanup

Related: https://gitlab.com/gitlab-org/gitlab-ce/issues/5880

See merge request !2847"
0cd76190deb01db8ff080186f3daa5b6067a27f6,gitlabhq/gitlabhq,"Lock helm charts to the VERSION already specified for each application.

Fix up VERSION for each of the applications
* There is no 0.0.1 helm version for jupyterhub. Use the latest version instead
* `:nginx` is not a valid chart version. Lock the ingress application GitLab installs to the latest chart version.
* Use the latest gitlab-runner chart to prevent GitLab installing older versions when users have been installing the lastest version

Always install from the VERSION and not the database `version` column.
This should fix cases like https://gitlab.com/gitlab-org/gitlab-ee/issues/6795 in
the instances where an install command failed previously, which locked the version
in the database to an older version.

Also, ensure that the version column is updated to the version we are
installing.

Add specs to show how previously failed appplications will be handled when the helm installation is run again

Add changelog entry
"
b63c41e12e9e6f7e9fd1d79bedf56bd42cc17035,gitlabhq/gitlabhq,"Merge branch 'zj-builds-to-jobs-api' into 'master'

Rename builds to jobs in the API

Closes #28515

See merge request !9463"
fc5eb253dbd1fac0674c1a164847dabfd1229c9e,gitlabhq/gitlabhq,"refactor store
"
df10507f3eb43bda9cc6adbebf8c2d1736c3463f,gitlabhq/gitlabhq,"Merge branch 'update-trace-handling-code' into 'master'

Optimise trace handling code to use streaming instead of full read

See merge request !10311"
1208d55206128266690f46f0165df0fc10c24941,gitlabhq/gitlabhq,"Merge branch 'master' into 'refactor-snippets-finder'

# Conflicts:
#   spec/models/project_spec.rb"
27a75ea1757d1c1b67bf501ec333221ed5e92d04,gitlabhq/gitlabhq,"Backport 'Rebase' feature from EE to CE

When a project uses fast-forward merging strategy user has
to rebase MRs to target branch before it can be merged.
Now user can do rebase in UI by clicking 'Rebase' button
instead of doing rebase locally.

This feature was already present in EE, this is only backport
of the feature to CE. Couple of changes:
* removed rebase license check
* renamed migration (changed timestamp)

Closes #40301
"
160f1fd225944b4cedd9d5223cdc55b2f3ed0ea7,gitlabhq/gitlabhq,"Merge branch 'docs-use_docker_stable_in_examples' into 'master'

Use stable docker image instead of latest

See merge request gitlab-org/gitlab-ce!18373"
ffda8a1a0eb273e62fcb0197f352400946571778,gitlabhq/gitlabhq,"user routings refactor
"
f947972dede2f8d68215555e4b4fd6e90a6bc437,gitlabhq/gitlabhq,"Improve diff view switching and components
"
57ab639c0dec366a7aecbe69490f0662f477ecd0,gitlabhq/gitlabhq,"Dashboard css improvements

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>
"
e9060da6f0aee35d1d6b7a9158a102c4b197a965,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into gem/sm/bump-google-api-client-gem-from-0-8-6-to-0-13-6

* upstream/master: (130 commits)
  Handle error when fetching ref for MR with deleted source branch
  refactor emails service
  fix update service
  refactor users update service
  refactor keys controller
  refactor some controllers to make them EE friendly
  fix specs
  fix users update service
  update initializers
  refactor services to match EE signature
  Change recommended MySQL version to 5.6
  Clarify artifact download via the API only accepts branch or tag name for ref
  Clean merge_jid whenever necessary on the merge process
  Rolling back change to n+1 detection
  Breadcrumbs receives padding when double lined
  karma spec fixes
  Add EEP to headings
  Added some Gitaly docs to `docs/development`
  Check orientation of profile image
  Fixed missing namespaces on navigation translations
  ...
"
d9a4ca5975b4fb91b147930d863f0bb4b9619a64,gitlabhq/gitlabhq,"Move pre_process into render_result

The method Banzai::Renderer.pre_process would always be called,
regardless of whether the Markdown to render was already cached or not.
In cache the document _was_ cached the output of the pre-processing
pipeline was ignored resulting in it doing nothing but wasting CPU
cycles.

This commit moves Banzai::Renderer.pre_process into
Banzai::Renderer.render_result so that it's _only_ used when needed.
"
f3d4767d0c78daf315e6b653bed3a3a3ee308072,gitlabhq/gitlabhq,"Rename `notice_added_references` to `create_new_cross_references!`
"
097eafc8c74f97912a52399d422fb24be84e734d,gitlabhq/gitlabhq,"fix some issues and improved error output for forking
"
f3e8b8881463bd30aa50085a45f5db96d400d3e7,gitlabhq/gitlabhq,"Use travel_to instead of dependency injection, feedback:

https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/5734#note_14056642
"
bb3d7b055849047b520bde4a13f5fdb58c4558fe,gitlabhq/gitlabhq,"Merge branch 'refactor-project-page' into 'master'

Improve project home page usability

I looked at project page and saw next problems with it:

* a lot of information but not separated on blocks - hard to understand
* unclear how to contribute to project

Instead of complete redesign I followed step-by-step changes.

### Step 1

First of all I separated Repository and Contribution blocks.
Contribution block should makes it easy for people to contribute. Even when we visit GitHub project page its not clear how to start. Our Contribution section should help with it. All repository stats and download button moved to Repository block.

![Screenshot_2015-05-05_11.49.16](https://gitlab.com/gitlab-org/gitlab-ce/uploads/e69977603acfdc381acb539b19e8cba1/Screenshot_2015-05-05_11.49.16.png)

### Step 2

Next step was to make top section less loaded. I moved clone panel to sidebar because it is very heavy element and rarely used. If you use web editor - you dont even use it. If you work via http/ssh you will copy remote only once. So my idea - it should be on home page but should not be in center of attention.

![Screenshot_2015-05-05_12.47.04](https://gitlab.com/gitlab-org/gitlab-ce/uploads/41633cc8915bb12c979230567b40aea4/Screenshot_2015-05-05_12.47.04.png)

See merge request !610
"
30a43b7e04b98616f379bdd800532c3354df8b19,gitlabhq/gitlabhq,"Fix export removal for hashed-storage projects within a renamed or deleted namespace
"
1a5b7e7d70cfe4802e858f129779e388307fbbab,gitlabhq/gitlabhq,"Refactor protected branches documentation
"
c4b35a623016bb8a3402d9a53fb9df7a990ad9aa,gitlabhq/gitlabhq,"Merge branch 'fix-commit-status-rendering' into 'master'

Cleanup Ci::Commit, Ci::Build and CommitStatus views

This MR tries to do first sweep of cleanups to Ci::Commit and
Ci::Build objects removing all view-related functions and fixing the
API from other side.

Fixes: https://gitlab.com/gitlab-org/gitlab-ce/issues/6046

See merge request !2760"
c11006ac6c395556f7d326a9630d4d32a07005cc,gitlabhq/gitlabhq,"Merge branch '18755-fix-destroy-project-causes-post_decline_request-to-be-executed' into 'master'

Resolve ""Destroying a project causes post_decline_request to be executed""

## What does this MR do?

Ensure we don't send ""access request declined"" to access requesters when a project is deleted.

## Are there points in the code the reviewer needs to double check?

I've created a service to decouple the notification sending from the AR model.

## Why was this MR needed?

Because there was an issue.

## What are the relevant issue numbers?

Fixes #18755, #18750.

## Does this MR meet the acceptance criteria?

- [x] No CHANGELOG needed.
- [x] Tests
  - [x] Added for this feature/bug
  - [x] All builds are passing
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

See merge request !4744"
19c5c4453598d6ac2d88b15456c9919d3330df88,gitlabhq/gitlabhq,"Merge branch 'revert-upload-refactor' into 'master'

Revert upload refactor

See merge request !1548
"
4ca73f56cb59b86f25b55ff02800571fb82c742f,gitlabhq/gitlabhq,"Small refactoring and cleanup of notification logic

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>
"
f744a5c12f0c82573f5247b9e7580c3eeb7768cf,gitlabhq/gitlabhq,"Added dyanmic position adjustment

Added tooltips for dropdown items

Reverted pretty much everything in favour of a DOM approach

Simplified JS
"
88132258d66ca955b0e9bd93d4ee8dc12cc54537,gitlabhq/gitlabhq,"Merge branch 'docs/builds-to-jobs-massacre' into 'master'

Rename builds to jobs in docs

See merge request !9204"
b4045e997feae2043965706ae9f89ce6221a3792,gitlabhq/gitlabhq,"Merge branch 'group-name-validation' into 'master'

Adds JavaScript validation for group path editing

## What does this MR do?

- Prevents group_edit form submission when special characters are included in the new group name
- Enhances gl_field_errors to support this use case and be more re-usable. 

## Are there points in the code the reviewer needs to double check?

**The implementation of validation is here: https://gitlab.com/gitlab-org/gitlab-ce/commit/73d997046cac376ccdbcaac6f183002bc19b9a1f**

The rest of the diff for this MR is augmenting gl_field_errors

## Why was this MR needed?

- Currently we allow submission and a 500 error is returned. 

## Screenshots (if relevant)
![2016-10-21_14.11.21](/uploads/2bef5764d3f2429dd0f900661153eef7/2016-10-21_14.11.21.gif)
## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG.md) entry added
- [x] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [x] All builds are passing
- [x] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if it does - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?

Closes https://gitlab.com/gitlab-org/gitlab-ce/issues/23564, https://gitlab.com/gitlab-org/gitlab-ce/issues/19756, https://gitlab.com/gitlab-org/gitlab-ce/issues/19736, https://gitlab.com/gitlab-org/gitlab-ce/issues/23922

See merge request !7041"
ac1bbe7a78b0d861850de26797552c797966b309,gitlabhq/gitlabhq,"Merge branch 'file-toggle' into 'master'

Unify dropdown button styles

Unifies dropdown styles across app (use one shade of gray for border, always use caret instead of chevron)   
Before:
![Screen_Shot_2016-11-02_at_1.39.20_PM](/uploads/f0a2808c97aaa404626631683da32380/Screen_Shot_2016-11-02_at_1.39.20_PM.png)
After:   
![Screen_Shot_2016-11-02_at_1.39.45_PM](/uploads/cca0d40138d48f11cfc7183b202abad9/Screen_Shot_2016-11-02_at_1.39.45_PM.png)

Should affect _all_ dropdowns
![Screen_Shot_2016-11-02_at_1.35.12_PM](/uploads/73874a46d79144a7a854eab57030c2bc/Screen_Shot_2016-11-02_at_1.35.12_PM.png)

See merge request !7250"
5d174ee546d0c59ed30858ae6315a8a466cf668e,gitlabhq/gitlabhq,"Merge branch 'health-check-disable-email' into 'master'

Disable the email checking part of the standard Health Check

## What does this MR do?
    
In order to fix it we have overwritten the email_configured? method in the health check so that it does not check email status during the standard health check.

## Why was this MR needed?

The email check used in the Heath Check doesn't properly make use of enough of the SMTP config options to be able to properly test the STMP connection, and as a result could cause a failure.

## What are the relevant issue numbers?

Fixes https://gitlab.com/gitlab-org/gitlab-ce/issues/17742

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- [x] ~~[Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)~~
- [x] ~~API support added~~
- Tests
  - [ ] Added for this feature/bug
  - [ ] All builds are passing
- [ ] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [ ] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [ ] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

See merge request !4903"
d6abee51894ba90c15b02202a6e1b5842b74cf00,gitlabhq/gitlabhq,"Merge branch 'winh-cleanup-comment-submit-test' into 'master'

Cleanup test for disabling comment submit button

See merge request gitlab-org/gitlab-ce!17930"
7ad8704c24e54ba08db204131843cd9eaeaed7df,gitlabhq/gitlabhq,"Merge branch 'master' into 40468-empty-states

* master: (76 commits)
  Fix image view mode
  Remove the need for destroy and add a comment in the spec
  Use build instead of create in importer spec
  Simplify normalizing of paths
  Fix failing importer test case on MySQL due to missing trailing slash in root path
  Fix gitlab:import:repos Rake task moving repositories into the wrong location
  Allow git pull/push on project redirects
  Resolve ""Include asset_sync gem""
  Use prefix for TableOfContents filter hrefs
  Resolve ""No feedback when checking on checklist if potential spam was detected""
  Fix Rubocop
  Fix N+1 query when displaying events
  Add Chain::Command specs
  Fix a bug of before_sha being inproperly evaluated to `checkout_sha`
  Implement and use Gitlab::Ci::Pipeline::Chain::Command
  Fix invalid pipeline build chain tag evaluation
  Add docs explaining why you get signed out with ""Remember me""
  Move the circuitbreaker check out in a separate process
  Migrate Git::Repository#fsck to Gitaly
  Fix new personal access token showing up in a flash message
  ...
"
f9c5f18d448de3fefced3149550263adc83af1bf,gitlabhq/gitlabhq,"Improve method that tells if build is retryable

This method now should return false if build is not completed. If build
is running then it is not retryable, therefore `Ci::Build#retryable?`
returned wrong value. This commit changes this behavior
"
909a0ff3ace1eb82a4296764777a552779c39839,gitlabhq/gitlabhq,"Fix and remove duplicate specs

Signed-off-by: Rémy Coutable <4ea0184b9df19e0786dd00b28e6daa4d26baeb3e@rymai.me>
"
17ad286e5db45c2d0d39fdceb8f201fe2e780a25,gitlabhq/gitlabhq,"Rename ci_commit to pipeline
"
1cc633c8eca52fe794c9db0b1373023eb67666d7,gitlabhq/gitlabhq,"Adds helpers to remove withespace and linebreaks
"
317c928198aac43d4e00d1645318a373a33974cf,gitlabhq/gitlabhq,"improve emoji checking performance
"
111962891b369710d9604567e94fdbe682d16931,gitlabhq/gitlabhq,"Merge branch 'profile-bundle-tag-refactor' into 'master'

removed profile webpack bundle tag

See merge request gitlab-org/gitlab-ce!17320"
0944dd43840eee8bbcbe5199c59ae9f762d6bdb5,gitlabhq/gitlabhq,"Merge branch 'improve-navigation' into 'master'

Improve GitLab UI

* move logout button to top right

![Screenshot_2015-06-08_16.56.13](https://gitlab.com/gitlab-org/gitlab-ce/uploads/7de04fab52ad6b742dbea100674f9671/Screenshot_2015-06-08_16.56.13.png)

* remove issue/mr title truncation on index pages. For smaller screens it allow to read complete title of issue

![Screenshot_2015-06-08_16.57.55](https://gitlab.com/gitlab-org/gitlab-ce/uploads/9dcaadfba14f8561c12fcd29a2e70112/Screenshot_2015-06-08_16.57.55.png)

* Improve mobile UI for several pages

See merge request !783
"
f253f72529824198a591e06537d321917eca1d5e,gitlabhq/gitlabhq,"Cleaned up Repository#initialize

The ""default_branch"" argument is never used and the ""project"" argument
isn't optional.
"
209c4c5e3ef0f6f0fe1c0c0cd2271e450d8790bc,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into qa-secret-variables-scenario

* upstream/master: (136 commits)
  Revert ""Merge branch 'osw-updates-merge-status-on-api-actions' into 'master'""
  Add modal for deleting a milestone
  Revert ""Merge branch 'remove-rugged-walk' into 'master'""
  Resolve ""Link to Clusters in Auto DevOps instead of Kubernetes service""
  Update CHANGELOG.md for 10.4.1
  Add a gRPC health check to ensure Gitaly is up
  Add formatted_data attribute to Git::WikiPage
  Avoid array indices to fixtures in JS specs
  Migrate .batch_lfs_pointers to Gitaly
  Updates `Revert this merge request` text
  Work around a bug in DatabaseCleaner when using the deletion strategy on MySQL
  Use the DatabaseCleaner 'deletion' strategy instead of 'truncation'
  Workaround a recaptcha pop-up that cannot be tested
  Uses sprite icon to render verified commit badge and uniforms css colors
  Moves more mr widget components into vue files Adds i18n Adds better test coverage
  Execute system hooks after-commit when executing project hooks
  Remove one Spinach job and add one RSpec job
  Remove callback as we already update accordingly on services
  Fix typo in `.gitlab-ci.yml` heading
  Migrate repository bundling to Gitaly
  ...
"
be4abe7719a500852ce4f913d345e9b3e8794dc3,gitlabhq/gitlabhq,"Stops page reload when changing tabs or pages - uses API requests instead
"
19f5304a6e9ca7baf819933ef3e5135bae3b0777,gitlabhq/gitlabhq,"Merge branch 'fix/gitlab-export-confidential' into 'master'

Fix confidential issues made public after import

Fixes https://gitlab.com/gitlab-org/gitlab-ce/issues/21803

The gitlab.com import was ignoring the confidential attribute, hence making all issues public after being imported.

The API has changed in order to also expose this field.

See merge request !1992"
92e079ede29d4d1e1c4a36166aa76ea13e3412d3,gitlabhq/gitlabhq,"Merge branch 'backstage/avatar-helper-vanilla-js' into 'master'

Add vanilla JS avatar_helper and update existing avatar helpers

See merge request gitlab-org/gitlab-ce!20886"
142d5abc0cc7dc0ef3a108109862e19792d8a1b5,gitlabhq/gitlabhq,"Merge branch 'variables' into 'master'

Removing and combining sass variables

* Removes/combines a good portion of our many shades of gray, according to https://gitlab.com/gitlab-org/gitlab-ce/uploads/207006b0aeadee57499c891f173198f4/Shades_of_grey_-_combined.png
* Renaming variables according to saturation etc will be in separate MR

See merge request !8052"
8112f7550b70c83bde2f74ed48e7781c5424ebb9,gitlabhq/gitlabhq,"Add PreferencesHelper module

Consolidates the helpers related to user preferences.

Renames `app_theme` to `user_application_theme` to better explain what
it is.
"
d2e00097fe9ee92076041e0eeca9da28f3183cc8,gitlabhq/gitlabhq,"Merge branch 'docs/ci-variables-deprecation-table' into 'master'

Cleanup CI variables table and add a deprecation note

See merge request !9831"
84199f19197583da44471a6b7f91694b7f4645df,gitlabhq/gitlabhq,"Merge branch 'rename-rendered_title' into 'master'

Rename all references to rendered_title to realtime_changes

See merge request !11359"
4dfe26cd8b6863b7e6c81f5c280cdafe9b6e17b6,gitlabhq/gitlabhq,"Rewrite the GitHub importer from scratch

Prior to this MR there were two GitHub related importers:

* Github::Import: the main importer used for GitHub projects
* Gitlab::GithubImport: importer that's somewhat confusingly used for
  importing Gitea projects (apparently they have a compatible API)

This MR renames the Gitea importer to Gitlab::LegacyGithubImport and
introduces a new GitHub importer in the Gitlab::GithubImport namespace.
This new GitHub importer uses Sidekiq for importing multiple resources
in parallel, though it also has the ability to import data sequentially
should this be necessary.

The new code is spread across the following directories:

* lib/gitlab/github_import: this directory contains most of the importer
  code such as the classes used for importing resources.
* app/workers/gitlab/github_import: this directory contains the Sidekiq
  workers, most of which simply use the code from the directory above.
* app/workers/concerns/gitlab/github_import: this directory provides a
  few modules that are included in every GitHub importer worker.

== Stages

The import work is divided into separate stages, with each stage
importing a specific set of data. Stages will schedule the work that
needs to be performed, followed by scheduling a job for the
""AdvanceStageWorker"" worker. This worker will periodically check if all
work is completed and schedule the next stage if this is the case. If
work is not yet completed this worker will reschedule itself.

Using this approach we don't have to block threads by calling `sleep()`,
as doing so for large projects could block the thread from doing any
work for many hours.

== Retrying Work

Workers will reschedule themselves whenever necessary. For example,
hitting the GitHub API's rate limit will result in jobs rescheduling
themselves. These jobs are not processed until the rate limit has been
reset.

== User Lookups

Part of the importing process involves looking up user details in the
GitHub API so we can map them to GitLab users. The old importer used
an in-memory cache, but this obviously doesn't work when the work is
spread across different threads.

The new importer uses a Redis cache and makes sure we only perform
API/database calls if absolutely necessary.  Frequently used keys are
refreshed, and lookup misses are also cached; removing the need for
performing API/database calls if we know we don't have the data we're
looking for.

== Performance & Models

The new importer in various places uses raw INSERT statements (as
generated by `Gitlab::Database.bulk_insert`) instead of using Rails
models. This allows us to bypass any validations and callbacks,
drastically reducing the number of SQL queries and Gitaly RPC calls
necessary to import projects.

To ensure the code produces valid data the corresponding tests check if
the produced rows are valid according to the model validation rules.
"
242c00dc1c37c5c1161771ecd639ba4bd5eea445,gitlabhq/gitlabhq,"Merge branch 'use-cached-project-count-ce' into 'master'

Used cached value of project count to reduce DB load

Following !5746, backport a change from https://gitlab.com/gitlab-org/gitlab-ee/merge_requests/637/diffs#diff-2.

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- Tests
  - [x] All builds are passing
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

See merge request !5754"
e28fc7b1d366e044cd2f90fe54590966688709c5,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into 8998_skip_pending_commits_if_not_head

* upstream/master: (197 commits)
  Add text to break up diagrams
  Implement review comments from @DouweM for !10467.
  Fix rubocop offence
  Linking to edit file directly
  Optimise trace handling code to use streaming instead of full read
  Use config.toml to configure Gitaly
  Fix indexes in container repositories table
  Recent search history for issues
  Fix rubocop
  Use change direction in spec
  Use be_pending
  Improve trigger_schedule.rb
  Implement a offset calculation on cron_parser_spec
  Clean up trigger_schedule_worker_spec.rb
  Improve instantiate recursion in cron_parser.rb
  Fix unnecessary changes in schema.rb
  Add empty line in cron_parser.rb
  Use parenthesis for respond_to :ref
  Define next_time as let in trigger_schedule_spec
  Remove next_run_at: nil from trigger_schedule_spec
  ...
"
d58d3098f159a17fbcf1ae27165c249722990988,gitlabhq/gitlabhq,"Rename used_timeout to timeout
"
be17a32d041209c5268c72005ac7c82eac15c934,gitlabhq/gitlabhq,"Merge branch 'improve/public_area' of /home/git/repositories/gitlab/gitlabhq
"
b64351478a6eec7b50ffa6017bc58fefda60c2a7,gitlabhq/gitlabhq,"Merge branch 'revert_email_thread' into 'master'

Revert email threading rewrite

The 'to:' address introduced by this merge caused a flood of email going to an admin account for GitLab.com. This feature should not be shipped as-is.
"
771bf9527ffd5fd8fe258381593f686d5d960a42,gitlabhq/gitlabhq,"Improve performance of DiffDiscussion#truncated_diff_lines and DiffNote#diff_line by removing expensive diff position calculation and comparison
"
3368afd7676ac50f62be05b9817a655fb19ac0c3,gitlabhq/gitlabhq,"Merge branch 'rename-ci-commit-phase-2' into 'master'

Rename Ci::Commit in specs

This is second iteration of renaming Ci::Commit occurences, this time I try to rename all `let's` and `factories` to match what type of object is created:

1. Rename factories: `ci_[...]_commit_[...]` to `ci_[...]_pipeline_[...]`,
2. Rename all `let's(:[ci_]commit)` to `let(:pipeline)`,
3. Rename all occurrences of `[ci_]commit` to `pipeline` if Pipeline object is created

cc @grzesiek @DouweM 

See merge request !4463"
45613341689c81789d3da44f23a46135249969e3,gitlabhq/gitlabhq,"Remove dismissable_callout as it has become an unneeded wrapper for persistent_user_callout
"
ed81ee9ba2b5a0b68996ccb238bfa4c69a6df062,gitlabhq/gitlabhq,"Revert ""Merge branch '41416-making-instance-wide-data-tools-more-accessible' into 'master'""

This reverts merge request !20679"
bb8f2520b4254c9dabe377df48e29c5f17894a1d,gitlabhq/gitlabhq,"Persist truncated note diffs on a new table

We request Gitaly in a N+1 manner to build discussion diffs. Once the diffs are from different revisions, it's hard to make a single request to the service in order to build the whole response.
With this change we solve this problem and simplify a lot fetching this piece of info.
"
e2865c232efd4350dd82d0fbdfdf2f226e4e8461,gitlabhq/gitlabhq,"Rename LabelSubscription javascript to ProjectLabelSubscription
"
f8496a33b33fb266eb43d3926432d6349bf1086a,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into wall-clock-time-for-showing-pipeline

* upstream/master: (554 commits)
  Fix expansion of discussions in diff
  Improve performance of MR show page
  Fix jumping between discussions on changes tab
  Update doorkeeper to 4.2.0
  Fix MR note discussion ID
  Handle legacy sort order values
  Refactor `find_for_git_client` and its related methods.
  Remove right margin on Jump button icon
  Fix bug causing “Jump to discussion” button not to show
  Small refactor and syntax fixes.
  Removed unnecessary service for user retrieval and improved API error message.
  Added documentation and CHANGELOG item
  Added checks for 2FA to the API `/sessions` endpoint and the Resource Owner Password Credentials flow.
  Fix behavior around commands with optional arguments
  Fix behavior of label_ids and add/remove_label_ids
  Remove unneeded aliases
  Do not expose projects on deployments
  Incorporate feedback
  Docs for API endpoints
  Expose project for environments
  ...
"
645dceb0a233fc523ac16611fa3fec317d29a7e1,gitlabhq/gitlabhq,"Run plugins as separate process and pass data via STDIN

Signed-off-by: Dmitriy Zaporozhets <be23d75b156792e5acab51b196a2deb155d35d6a@gmail.com>
"
79f74249023492bb691d4a167065a4f67d7c68b6,gitlabhq/gitlabhq,"Merge branch '22864-kubernetes-service' into 'master'

Introduce deployment services, starting with a KubernetesService

## What does this MR do?

Adds a minimal `KubernetesService` and introduces the idea of deployment services, generally.

## Are there points in the code the reviewer needs to double check?

## Why was this MR needed?

Two issues scheduled for 8.15 both require a Kubernetes service - #22864 and #23580 - but they use it for very different things. Add a minimal kubernetes service to avoid conflicts later.

## Screenshots

![Screen_Shot_2016-12-14_at_12.44.13](/uploads/77d38baf2a196118f0cf7e2b996a65f3/Screen_Shot_2016-12-14_at_12.44.13.png)

## Does this MR meet the acceptance criteria?

- [x] [Changelog entry](https://docs.gitlab.com/ce/development/changelog.html) added
- [x] [Documentation created/updated](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/development/doc_styleguide.md)
- [x] API support added
- Tests
  - [x] Added for this feature/bug
  - [x] All builds are passing
- [x] Conform by the [merge request performance guides](http://docs.gitlab.com/ce/development/merge_request_performance_guidelines.html)
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if it does - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

## What are the relevant issue numbers?

Closes #22985

See merge request !7994"
1e66ff6d8003abeab261c90fc94d8fcb4d93083d,gitlabhq/gitlabhq,"Merge branch '42270-fix-namespace-remove-exports-for-hashed-storage' into 'master'

Fix export removal for hashed-storage projects within a renamed or deleted namespace

Closes #42270

See merge request gitlab-org/gitlab-ce!16658"
50f76ae0eae29f7362702da274055f76a350ee6f,gitlabhq/gitlabhq,"Merge branch 'ui-improvements' into 'master'

Style project home page

Also make header more compact

Signed-off-by: Dmitriy Zaporozhets <dmitriy.zaporozhets@gmail.com

See merge request !1246
"
c3bd3bfc6e1990f4774bcd678deef1eb202a2680,gitlabhq/gitlabhq,"Improve variables support

This ensures that variables accept only string,
alongside also improves kubernetes_namespace,
improving validation and default value being set.
"
c5664761778a5f530ee7a738f25da3c6742e3ab2,gitlabhq/gitlabhq,"rename charcoal theme variables for consistency
"
56814482d66edd49fc8eeb26896e6cfe788b984e,gitlabhq/gitlabhq,"Merge branch '28019-make-builds-show-faster' into 'master'

Performance improvement on Projects::BuildsController#show.html

Closes #28019

See merge request !9149"
87411889b9c8a778bebafeaa381e1d736af7329a,gitlabhq/gitlabhq,"Merge branch '22132-rename-branch-name-params-to-branch' into 'master'

Standardize branch name params as `branch` on V4 API

Closes #22132

See merge request !8936"
39ec62ea9890fb35beb684348a50c28f4b241509,gitlabhq/gitlabhq,"Merge branch 'fix/improve-naming-convention-in-ci-config' into 'master'

Improve naming convention in ci configuration module

## What does this MR do?

This MR improves the naming convention in CI configuration module to reflect the domain design better.

## What are the relevant issue numbers?

Related to #15060

See merge request !7448"
7b926c6eb42ebe8aaeda71e0e2e8a16e8da53504,gitlabhq/gitlabhq,"Merge branch '2fa-api-check' into 'master'

2FA checks for API workflows

## What does this MR do?

It adds a check to the API `/session` endpoint that will deny authentication requests to users that have 2FA enabled. In the error message it will instruct them to use a Personal Access Token instead.

It adds a check to the `/oauth/token` endpoint, when `grant_type: 'password'` is used, so that no OAuth2 access token can be generated if the user has 2FA enabled. This endpoint should not be used by OAuth applications, anyway. OAuth apps should follow the flow of redirecting the user to GitLab, where 2FA access restrictions apply and logging them in there. Once successfully authenticated, the OAuth token is passed to the client.

## Why was this MR needed?

No 2FA check on API endpoints.

## What are the relevant issue numbers?

Fixes #2979

See merge request !5820"
b8f67b4ddf6b4a56fc25565d66230fc6e78ba72d,gitlabhq/gitlabhq,"Merge branch 'dropdown-load-fix' into 'master'

Dropdown loading time preformance fix

## What does this MR do?
Optimizes the performance of the dropdown load time by just sending the required data to load the dropdown instead of the full object

This MR aims to fix #17474 

See merge request !5113"
eaf211c2e393a2eeb5999b9ffec17112cdd52a0c,gitlabhq/gitlabhq,"Expose compose method in the ci config entry nodes
"
2672f44e25b6b2638b850208a1ef4a97983f28ed,gitlabhq/gitlabhq,"Merge branch 'clean-up-issue_spec.js' into 'master'

Replace static fixture by generated one in issue_spec.js

## What does this MR do?

- clean up `issue_spec.js`
- introduce an alternative approach to #19445
  - rename `rake teaspoon` to `rake teaspoon:tests`
  - introduce `rake teaspoon:fixtures` which generates fixtures using RSpec
  - introduce `rake teaspoon` which runs `rake teaspoon:fixtures` and `rake teaspoon:tests`

## Why was this MR needed?

- many duplications
- missing existence checks
- missing conditions
- static fixtures don't match real views

## Reasoning

I want to explain some of my decisions here, so that they stay visible for future discussions.

### Why not HAML?

- same number of HAML templates as number of fixtures (many input files)
- embedded logic less readable
- can not be rendered by JavaScript (because of inline Ruby)

### Why RSpec?

- real controllers for fixtures
- spys available for mocking
- easily report failed fixture generations

### Why not magic_lamp? (#19445)

- introduces another dependency/tool
- needs to run a server concurrently to teaspoon
- makes it harder to use a JavaScript test runner
- static HTML files serve faster

See merge request !6059"
43afe46bbd19b1edf60abf3f104fb2b0d29af564,gitlabhq/gitlabhq,"Refactor contributions events and write tests for calendar
"
ec4423665cacfe2f0675fb8b9b5bd8dd17a77dd7,gitlabhq/gitlabhq,"Gitlab::Shell works on shard name, not path

Direct disk access is done through Gitaly now, so the legacy path was
deprecated. This path was used in Gitlab::Shell however. This required
the refactoring in this commit.

Added is the removal of direct path access on the project model, as that
lookup wasn't needed anymore is most cases.

Closes https://gitlab.com/gitlab-org/gitaly/issues/1111
"
dc038a7108f3e61e708310b5a9ab4b193723366b,gitlabhq/gitlabhq,"Rename Group#people to Group#members
"
43e756d4eafd79f4d2f366b646ebb94af78b5a4c,gitlabhq/gitlabhq,"Refactored AkismetHelper into AkismetService and cleaned up `Spammable`
- Refactored SpamCheckService into SpamService
"
e1a3bf30b6ea04f2c658729f65a0eb09847dd341,gitlabhq/gitlabhq,"Rename ActiverecordSerialize cop

This cop has been renamed to ActiveRecordSerialize to match the way
""ActiveRecord"" is usually written.
"
8c126525faba40032244328187ba73a53b6eaf4c,gitlabhq/gitlabhq,"Extract code into IssueBoardEntity
"
985c68a1ec34eedfe3d6e5b8ca2020af9f9c3457,gitlabhq/gitlabhq,"Merge remote-tracking branch 'upstream/master' into use-update-runner-service

* upstream/master: (589 commits)
  Backport changes from EE squash
  Fix broken tests Rename Build to Job
  Adds changelog entry
  Change ""Build"" to ""Job"" in builds show page header and sidebar
  replace `find_with_namespace` with `find_by_full_path`
  PlantUML support for Markdown
  remove dateFormat global exception
  fix relative paths to xterm.js within fit.js
  use setFixtures instead of fixture.set
  prevent u2f tests from triggering a form submission while testing
  simplify test for focus state
  preload projects.json fixture
  preload projects.json fixture
  rework tests which rely on teaspoon-specific behavior
  Only render hr when user can't archive project.
  use setFixtures instead of fixture.set
  ensure helper classes and constants are exposed globally
  preload projects.json fixture
  fix fixture references in environments_spec
  allow console.xxx in tests, reorder eslint rules alphabetically
  ...
"
fbaabb3911c6fec25edc25bfffad94ae2a7c0e28,gitlabhq/gitlabhq,"Rename `enabled_git_access_protocols` to singular.
"
f5551efdfd71c6aedb609093374a6c4dbed6a78b,gitlabhq/gitlabhq,"Rewrite and improve git backend logic. Fix project movind. Raise exception to prevent unexpected issues
"
e9ad837cf0f0a51e7f8035f27ad35005a828e3fd,gitlabhq/gitlabhq,"Merge branch '42751-rename-master-to-maintainer' into 'master'

Resolve ""Rename the `Master` role to `Maintainer`""

Closes #42751

See merge request gitlab-org/gitlab-ce!19080"
896aa2a1f0a79a18ad1cd7530fa0c6acaa41288d,gitlabhq/gitlabhq,"Merge branch 'fix/33584-atom-layout' into 'master'

Refactor atom builder by using a layout

See merge request !12114"
eccefa9bfad94426f9bd87f7b5fd18289bd443f1,gitlabhq/gitlabhq,"Merge branch 'fix-filter-label-tooltip' into 'master'

Fix filter label tooltip HTML rendering

## What does this MR do?
Tooltips on labels used in a filter are now rendered as HTML

## Are there points in the code the reviewer needs to double check?
Shouldn't be

## Why was this MR needed?
Fix existing bug (See screenshot below for reference)

## What are the relevant issue numbers?
Closes #20592 

## Screenshots (if relevant)
Before:
![Screen_Shot_2016-08-04_at_10.27.59_AM__2_](/uploads/7ca37d4116f15a2d22ad16fbbe682f1f/Screen_Shot_2016-08-04_at_10.27.59_AM__2_.png)

After:
![Screen_Shot_2016-08-04_at_10.24.37_AM__2_](/uploads/7fce6c8a93d293767dacbcd682831f86/Screen_Shot_2016-08-04_at_10.24.37_AM__2_.png)

## Does this MR meet the acceptance criteria?

- [x] [CHANGELOG](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG) entry added
- Tests
  - [x] All builds are passing
- [x] Conform by the [style guides](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#style-guides)
- [x] Branch has no merge conflicts with `master` (if you do - rebase it please)
- [x] [Squashed related commits together](https://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits)

See merge request !5671"
ff28a7cc3687485ee138d4616a56ba1548a03e7c,gitlabhq/gitlabhq,"Moved cache expiration code to Repository hooks

This keeps all the cache expiration code in a single file/class instead
of spreading it all across the codebase.
"
8acf1ce3715b684e8ed2a8c06fc4d900511486a9,gitlabhq/gitlabhq,"Merge branch '25725-remove-window-object' into 'master'

Removes unneeded `window` declaration in environments related code

Closes #25725

See merge request !8456"
403b727138e22ce8ba83332ab03fa21fb7f72a1c,gitlabhq/gitlabhq,"Slightly refactor getting note notification recipients.
"
100d16156bf9451e5cda7c60a479c90d5a197397,hioa-cs/IncludeOS,"Merge pull request #504 from AndreasAakesson/dev

tcp: Clean up"
b2fbf91539e6284ca84f90753b195900b15a189f,hioa-cs/IncludeOS,"Minor code refactoring
"
06b1d9bba9b0d55fb98aef7267c8d3aaa2d3c10d,hioa-cs/IncludeOS,"Added namespace net + some cleanup
"
68ac09e7cf06f166b4f43648a7654d28634dd324,hioa-cs/IncludeOS,"Merge pull request #976 from ingve/statftw

test: unit test cleanup"
cb091d681491083405940371872269330260e833,hioa-cs/IncludeOS,"tcp: Now properly closing. Simplified writing. ACK with data (if any)
"
93386a2a0759081c89ce21b8076da3da8ac088f9,hioa-cs/IncludeOS,"net: Rewrite packet system to include driver headers
"
b8a47856a3600ca7f20a131f515841b39c470cb7,hioa-cs/IncludeOS,"pci_manager: Rewrite to support uninitialized fixed vectors
"
b1d365c82a46a6d5d9df5cc7b1b73201db3394fc,hioa-cs/IncludeOS,"Merge pull request #374 from RicoAntonioFelix/dev

Minor refactoring of sources..."
51042591bf35ead396db5014b68c548283165f61,hioa-cs/IncludeOS,"Merge pull request #286 from fwsGonzo/master

Renamed UDP write to sendto"
5373cefb28f498acee2d215595d5566f2517fa28,hioa-cs/IncludeOS,"Merged with tcp and hw refactor
"
be62fde533cc0ec2fdae76c69d43337a4dca3048,hioa-cs/IncludeOS,"Merge pull request #514 from fwsGonzo/dev

fs: Simplify sync ls, add dirent-only versions for ls"
20c6c016f9fe002a345cddda476fa350aedd8d2e,huiyiqun/check_mk,"Refactoring WATO: host movement reworked
"
970fdd65eff7446b5359e158759d8a4b0b590154,huiyiqun/check_mk,"Improved contextbutton/togglebutton syling on hires screens

Change-Id: If21b1e2d0c76e8d610df975862698fd23a6483d5
"
f6af5c08a28765a78cc81bf899d189ac77985339,huiyiqun/check_mk,"FIX: remove duplicate entries from Quicksearch
"
d82b098f6b9aa8430fb358ac6d9dedd70bd0d8ce,huiyiqun/check_mk,"Refactoring WATO: bulk cleanup reworked
"
690ecf9be27aea9bc174aa6ffcf586a4a0af91c6,huiyiqun/check_mk,"Rename title text for persist icon
"
8826f8cd86f2cc0d43cf54363bc4db78799ee067,huiyiqun/check_mk,"Cleaned up unused vars in misc python files
"
15793de2fb9a147947fd9aa1c61fe24a9b1d49d3,huiyiqun/check_mk,"5039 Livestatus proxy: Connection parameters can now be configured globally

The connection parameters of the Livestatus Proxy can now be configured
globally to specify a default set of parameters for all sites. Each site
can now either be configured to use the global defaults or set it's own
parameters.

For most environments it is sufficient to configure the global defaults
and make all sites use the defaults.

Using the global defaults makes it a lot easier to maintain the settings
since you don't need to configure the settings for each site individually
anymore.

Change-Id: I718aa6ccc6c5a7c4044f304f808c08178f8ac2e7
"
a478d4c3dea327cc7415c89f3ddf2f9bc9772245,huiyiqun/check_mk,"ldap: Improved ldap configuration a bit
"
8eb8fa95d094e41372a440cec7c4c5fd6a590375,huiyiqun/check_mk,"#1983 FIX Fixed special case in language configuration via user profile

When a user explicitly configured ""english"" as language in it's user
profile, this setting was not saved correctly. Instead the former
configured language or the default configured language was selected
again after saving.
"
70041c58308967580e6b91df1e3e9857fe4279cc,huiyiqun/check_mk,"Reworked printer pages checks - not yet finished
"
b9c46db1545e5eb2ab00c03ffcfbf6530a18b1f6,huiyiqun/check_mk,"#1686 FIX Host renaming also updates explicit negated hosts in rules
"
1ff5f23615b2d0fe61a1c8298fba5e4ae2c728af,huiyiqun/check_mk,"Intermediate state for improvement of commands form
"
065c19d5d63312afa3d245f4941c225591d4a4e7,huiyiqun/check_mk,"windows agent: improve the chance to find the powershell interpreter
"
44c0d7562411cc11e7527f31ff8b8394e0cf6567,huiyiqun/check_mk,"Cleaned up some unused variables

Change-Id: I5c91cabd694094cb8bc38e4e22c51a74f901b469
"
17d09fa593bf0ec6271721bc7db5ade272f341cf,huiyiqun/check_mk,"Simplify InputBuffer's API.

The are two advantages for doing this:

   * It doesn't keep the textual representation of a query alive longer than
     needed, something which gets important when the query gets big.

   * It reduces coupling between classes, now only Store needs to know the
     InputBuffer.  So it is e.g. crystal-clear now that Query simply gets a
     completed query and doesn't rely on any I/O for this to be done in an
     interleaved way.

The representation of the query input has been changed from a deque to a
list. The former is offers constant-time indexing at the price of being more
heavy-weight, something which we don't need.
"
cfd9d92ce7cf730405d621f4aec26338721da7a8,icescrum/iceScrum,"- redirect on context state when 404
- refactoring loadJsVar
"
8db958ce29c3ba401fd85dd7241ef1fb89f56d22,icescrum/iceScrum,"rss -> feed
backlogs (beginning)
and others fix
"
b3402403f917b17632d952362a888bf4b77ff0e7,icescrum/iceScrum,"Remove obsolete stuff
"
672d48e43bec97941fa8e6863ff5248f6510e8de,icescrum/iceScrum,"- new backlogs
- new chart
- refactor on multiple window ui
- new object Window
"
658e8c80013ce085a717ceeb62281194bd9c4b43,icescrum/iceScrum,"Sprint plan improvements (no sortable yet)
"
bc1ab6380346f194e224cd2a9940600bc0816fb5,icescrum/iceScrum,"Rename app -> application (part 1)
"
0c234e5ce8fce0b7f6c3128477b3ac151543441f,killbill/killbill,"analytics: remove specific mocks

Extract MockAccountUserApi from account and share it in util. Get rid of
the analytics specific one.

Update the analytics tests to use the MockAccountBuilder instead of the
analytics specific MockAccount.

Move MockEntitlementUserApi to util.

Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
"
275a4e5d3ca1a26a1dcd5d43def261f1da5024b3,killbill/killbill,"Move to latest and greatest JDBI version
"
dac5b71dc6c00f1089bf05e3bbfc9a8418bece3d,killbill/killbill,"entitlement: update tests setup

* Add logging around each test
* start/stop MySQL once for the whole test suite
* Remove e.printStackTrace(); - use TestNG assertions instead

Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
"
a5a538821ab8192170dedd356362b2216f0076bd,killbill/killbill,"Test refactoring of payment
"
385b1878951d7f704c32031ef14d051e85e8fe57,killbill/killbill,"Squashed commit of the following:

commit 95c3adb49ea2a9831dbbe85d33a2b13c6781e860
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Thu Jan 31 12:10:29 2013 -0800

    beatrix: fix scanning bug in ServiceFinder

    In some situations, we were scanning the full filesystem to find
    KillbillServices. Add a safeguard - this should never happen.

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit bedb298fff6a4878b1fac0f68ab23b4e5173c518
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Thu Jan 31 12:03:55 2013 -0800

    osgi: fix pom versions after merge

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit 9cb940f13f37ba513dbc04aabcbd2b0a5d6b44e4
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Thu Jan 31 11:01:05 2013 -0800

    meter: don't try to aggregate if aggregation is disabled

    It looks like we had the config parameter, but we never used it.

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit 0b35e77019131b2c33e97d5bef54d3941d5a0d9f
Merge: d2053cc 28c7f38
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Wed Jan 30 17:38:15 2013 -0800

    Merge remote-tracking branch 'origin/master' into osgi

commit d2053cca60be431a0b7745ee06ab4b1238bef2b8
Merge: fe86eb0 af0f77a
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Tue Jan 29 17:24:04 2013 -0800

    Merge remote-tracking branch 'origin/master' into osgi

commit fe86eb0de2ee900cb66987b8dd5d98e6c4f6f4cd
Merge: 69b27cf 8c03f1c
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Tue Jan 29 17:22:23 2013 -0800

    Merge remote-tracking branch 'origin/master' into osgi

commit 69b27cf5114adb6fbfc0375b6a5a416f82770d4c
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Tue Jan 29 17:21:30 2013 -0800

    entitlement: fix tests group in EntitlementTestSuiteNoDB

    NoDB are fast tests.

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit 16e5b8e70be1b396954307e3020c24760a4e48c1
Merge: 9077410 1ecc5db
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Tue Jan 29 17:19:55 2013 -0800

    Merge branch 'master' into osgi

    Conflicts:
    	beatrix/src/test/java/com/ning/billing/beatrix/integration/BeatrixIntegrationModule.java
    	pom.xml

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit 9077410f2459e25c330359ccc233b989a551882c
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Fri Jan 18 17:26:08 2013 -0800

    osgi: jruby: fix require line when invoking the plugin

    Testing done: started up two bundles, one in Java and one in Ruby, and
    was able to print out external bus events from Killbill in both.

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit 38b976954396e14c929b7303135381a25528cd16
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Fri Jan 18 16:15:02 2013 -0800

    osgi: remove extra dependency

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit 22e6d927b141946d959548f49af6cc5e61f0f08f
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Fri Jan 18 16:11:54 2013 -0800

    osgi: jruby: simplify Activator

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit cf0bd02235e7ce514b2ca308a792c0066475ba63
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Fri Jan 18 15:46:48 2013 -0800

    osgi: second pass of cleanups

    * Refactored the build structure
    * Tested both hello and JRuby bundles under Felix and Equinox
    * Fixed the Java plugin discovery code

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit 6d4ed539dea126d91d73a261252e4b449cb12269
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Fri Jan 18 14:32:20 2013 -0800

    travis: try a workaround to avoid timeouts

    Builds are stopped if no output has been received in the last 5 minutes.
    Since `mvn install --quiet -DskipTests=true' takes more than 5 minutes
    now, see if removing the --quiet flag solves our issues.

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit 9f9ef5d98736862f0ba56e739020f3da745f88ef
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Fri Jan 18 14:24:44 2013 -0800

    osgi-jruby-bundle: first pass of cleanups

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit ca1a99b83bec62ea3d8894e890a16241e2a0964b
Author: stephane brossier <stephane@ning.com>
Date:   Thu Jan 17 10:44:56 2013 -0800

    Add config for java plugin

commit e0e7144f5bd2ce6668d6d83940966924581f62f9
Merge: a95335f 735fce7
Author: stephane brossier <stephane@ning.com>
Date:   Wed Jan 16 16:16:16 2013 -0800

    Merge branch 'osgi' of github.com:killbill/killbill into osgi

commit a95335fe2404d425b3e6d7aee7ca22a2d098c630
Author: stephane brossier <stephane@ning.com>
Date:   Wed Jan 16 16:15:44 2013 -0800

    Add osgi config for jruby pugins

commit 735fce7d890250325ad8eaac529def8457a995f3
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Wed Jan 16 13:27:09 2013 -0800

    orgi-jruby-bundle: install Killbill APIs

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit 53a05444890d6dfd5dc1523b2615f213414bce41
Author: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
Date:   Wed Jan 16 11:58:45 2013 -0800

    Squashed commit of the osgi-jruby-bundle branch

    Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>

commit e5307649a992075c4b71398893dc591bc68e946a
Author: stephane brossier <stephane@ning.com>
Date:   Wed Jan 16 11:34:38 2013 -0800

    Cleanup OSGI branch-- break initial example

commit 04f6abafda5be0156f510618731c8c53bfcca399
Author: stephane brossier <stephane@ning.com>
Date:   Tue Jan 15 19:38:46 2013 -0800

    Protoype work to test embedding OSGI within killbill

commit 5c931ae0a3b0b7179ad56331a063501d237f326d
Author: stephane brossier <stephane@ning.com>
Date:   Fri Jan 11 21:12:00 2013 -0800

    Toying with OSGI

Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
"
5fa98ab5b0b0035313690400dad9ec794afa9e67,killbill/killbill,"Cleanup for payment json in jaxrs
"
f77b99d008e4dae54e372b012c86b7000e7dfb34,killbill/killbill,"invoice: use the tag user api instead of the dao directly

Add a simple test to validate the change: TestDefaultInvoiceDao.

Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@ning.com>
"
10b2453f45a46dacec34e0ef7c36252b9d36eb25,killbill/killbill,"Rename Subscription -> SubscriptionBase
"
991bad93d948a27bfc533da5317d2af30a39cff9,killbill/killbill,"Merge branch 'audit-rework' of github.com:killbill/killbill into audit-rework
"
f01eaef5c30be63ccc3c1d6f57ea1e0343311e47,killbill/killbill,"Changed getPaymentAttemptForInvoiceId to return a List; renamed to getPaymentAttemptsForInvoiceId
"
ea9220dead8df60c676c22c93c3f5534c20cd8c7,killbill/killbill,"Reduce usage of clock.getUTCNow()

Use context createdDate instead, for consistency.

Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@mouraf.org>
"
6633087a867ebc7e1831fc30476a8df6b2b4d026,killbill/killbill,"Started refactor of InvoiceModule
"
5ddf86a1fe4539ad274c14ae31329422affd84f6,killbill/killbill,"logging: first pass at enhancing log messages

* Structure messages by using key-value pairs whenever possible
(i.e. key1='value1', key2='value2') - this should help parsing in Splunk, Logstash, etc.
* Change default logback.xml pattern (use ISO8601 format for dates, switch to key/values, shorten logger name)
* Review log levels and use error only for unexpected errors (e.g. codepath that should never happen)

Signed-off-by: Pierre-Alexandre Meyer <ff019a5748a52b5641624af88a54a2f0e46a9fb5@mouraf.org>
"
5a834209d081765f2cb3dd1441fb9aa0ee411a1a,libracore/erpnext,"Cleanup of PO schedule date pull requests
"
ef06a4b349613607359c730a5931a6baef03ee7b,libracore/erpnext,"[autoname] [cleanup] strip blank spaces and remove autoname where naming_series: can be set in doctype
"
aa848bee2843d571ad09b7c2b80c8a67e12be6e9,libracore/erpnext,"website css cleanups + dropdown in top toolbar
"
bdee6e074a7104969530881513eae3eabb4029d7,libracore/erpnext,"[cleanup] moved company to top section, hide company if only one exists, changed field labels
"
6831b9422b09b4e6eadec49ce550e52fa982263f,libracore/erpnext,"payment entry improvements and deletion of payment tool
"
ab64e323cd941f4e27728837e85e5dc0198f6d77,libracore/erpnext,"Merge pull request #10747 from mbauskar/pos

rename Is Online field to Use POS in Offline Mode in pos settings"
9b1afe197d963a08532c9854c74302ea3c199bbc,libracore/erpnext,"cleanup of form, rename, route, added fonts
"
7eba1a35d33b77bf69f6e9102e243cd57509a489,libracore/erpnext,"Controller init args fix (#11015)

* Controller init args fix

* cleanup useless code
"
1828c12481a0453ff7c560055b516fa528765e55,libracore/erpnext,"[refactor] added dynamic link in journal entry, #3847
"
4dc2f43c0d60d642b0d06076972b71b4f0231928,libracore/erpnext,"moving to bootstrap 2.0
"
fb3fd6e3e5e441de4709a2fd7499a6a2b0ee44f3,libracore/erpnext,"deprecated gl_control and some rewrites
"
2a21bc9fc209d578283c4d8d6e2e4676a88c82da,libracore/erpnext,"[taxes and charges] refactor
"
577e4c4e28f8be111fe0ab255aae485504e582a6,libracore/erpnext,"Add in transaction.js, cleanups
"
87d270a5b55056009cfa86a58e33ec56111fb311,libracore/erpnext,"refactored code for reserved qty with testcases
"
7fecb503605c41fa2a17bf2ac01226ca76199391,libracore/erpnext,"[enhance] rename warehouse account type to stock
"
aeef7bd910c73c9261c2814d930bde677be51ab1,libracore/erpnext,"[sales taxes and charges] renamed field cost_center_other_charges to cost_center
"
919b9fcccfb91b1d9b2280dab913b2cf3cecd1c3,libracore/erpnext,"[cleanup] Maintenance Schedule, Maintenance Visit
"
d65bb86c3789599de17aa024e7ddb61e391946ea,linuxkit/linuxkit,"Merge pull request #2080 from dave-tucker/pkg-mk

Simplify Makefiles for Packages"
115373d42e34e9c83076bbcaeab930a667531ac7,linuxkit/linuxkit,"Merge pull request #92 from djs55/go-diagnostics

moby: rewrite diagnostics server in Go"
4ffd42e4f0d67efdb18ad326ff401d3364ee542c,linuxkit/linuxkit,"slirp binary renamed to vpnkit

Recently com.docker.slirp was renamed.

Please update Docker for Mac before using this script...

Signed-off-by: Justin Cormack <af64ee19f04db9509cb02b0e470e11e5402ef9b3@docker.com>
"
3ed8361c94f39aa0286c5a0282076b16e32a1ebe,liveblog/liveblog,"Merge commit 'b1eabb769b8013723b6713e697a1f3e89b54b565' into fix/refactored-highlight
"
eba88d056c5d9e9a9782d4081f2110d4174f85d9,liveblog/liveblog,"cleanup package.json
"
6d90191107d5c62487a788bba343eab3852599a5,liveblog/liveblog,"Merge pull request #680 from liveblog/fix/refactored-highlight

Fix/refactored highlight"
9e63a896b1d4b210a761b3590740ac3167da9564,liveblog/liveblog,"Fix update theme settings on blog update and create (#763)

- Fix update theme settings on blog update and create
- Add S3_PUBLISH_BLOGSLIST settings option
- Fix for missing theme.
- Move render_bloglist_embed function to blogs.embeds
- Use deepcopy for bloglist assets dict.
- Add blogs list embed publishing settings to main settings.py"
878b98aef7c485a4f091c3420d1bd8b0e62814ca,locdb/locdb-frend,"made number of type string;
"
b49a45b6ac05457b5b797b084967f724ab4d021d,nortikin/sverchok,"Add new Torus 2D node as generator (extended) (#1300)

* Add new Torus 2D node to the generator (extended) arsenal

This node will basically generate a 2D ring (aka 2D torus) alowing for the same kind of settings that the torus 3D offers, albeing adapted to the 2D space.

Minor/Major or Exterior/Interior radii could be adjusted to control the size and the width of the torus (ring) as well as the radial and circular sections. The radial sections can also be phased.

The node is pretty much a strip down version of the Torus 3D node so it is fully vectorized.

Note: The property list was compacted a little more (compared to Torus 3D node) to appease zeffii's quest to squash the vertical scroll as much as possible without compromising readability or stepping on the pep8 nerves ;)

* Clean up the code: PEP8 + code distillation

* Add documentation for Torus 2D node

* Remove extra polygons and fix bug in closing the polygon band

Note: While porting the code from torus (3D) the closing of the polygon band had an extra polygon created resulting in overlapping polygons.

* Minor edit to make code more readable

* Minor edit

Continue the code distillation madness.

* Convert phase input to expect degrees

* Rename torus 2D as ring
"
6c727bee1b08fc56f16335f38253f38835da298a,onedata/oneclient,"VFS-2071 Simplify keyValueAdapter code
"
54988df383ed413b1b3c707860f617fc5f9f0c44,onedata/oneclient,"Merge pull request #540 in VFS/oneclient from feature/VFS-4333-fix-incoming-connection-pool-message to develop

* commit 'f3355b30dbcb52e521cf3fdaa8a1913194c54083':
  Squashed 'helpers/' changes from f5ee61fe6..784f0061a
  Squashed 'helpers/' changes from fd532c8e7..f5ee61fe6
  VFS-4333 Increased communicator thread count
  VFS-4333 Added Oneclient version to logs
  Squashed 'helpers/' changes from c0c515f84..fd532c8e7
"
1e7ceb96731e98f75063c140bd8b45e9ce91f02e,onedata/oneclient,"Merge pull request #115 in VFS/helpers from feature/VFS-1016-new-messages-handling-with-streaming to develop

# By Konrad Zemek (13) and Krzysztof Trzepla (9)
# Via Konrad Zemek (6) and Krzysztof Trzepla (1)
* commit '75d367a9d0ee32c9dcf6206a3925735067af9d55 [formerly 966865da17d905f9371e3a4f0713a5249173a24a]': (22 commits)
  VFS-1016 Fix tests.
  VFS-1016 Add new communication stack to oneclient.
  VFS-1016 Add accessor to returned SessionId.
  VFS-1034 Set token as optional in handshake request message.
  VFS-1034 Add constructor to handshake request message.
  VFS-1016 Translate handshake message and response.
  VFS-1034 Add ping and pong messages.
  VFS-1034 Add handshake response message.
  VFS-1034 Add handshake request message.
  VFS-1016 Add unsuccesful handshake integration test.
  Squashed 'clproto/' changes from 684ad1b..a5acf7c
  VFS-1016 Implement first tests for the whole communication stack.
  VFS-1016 Implement full communication layer with new protocol.
  VFS-1034 Merge develop.
  VFS-1016 Improve protocol.
  VFS-1016 Rewrite CommunicationHandler for new protocol.
  VFS-1034 Remove protocol dependencies.
  Squashed 'clproto/' changes from c84f2f9..684ad1b
  WIP.
  VFS-1016 Rename SSLConnection and SSLConnectionPool.
  ...


Former-commit-id: 9642f414e816856d06518619656e7d63a115d489"
fd268a5908f831ea36885ca0e4eff594fb573efa,onedata/oneclient,"Events related code split into multiple files
"
985de52d6dd08db1a3230ee4d3375c7a49f9f1aa,onedata/oneclient,"VFS-292: improve read speed
"
e8055651b1c7bd0295c5d441faaff404922fbfb9,onedata/oneclient,"VFS-670 Clean up includes in veilhelpers' headers.


Former-commit-id: 7884a570187fb4ad04b4756c8668bfdf67300ad5"
27f4f2cd29d93b66af6843b748c68d916527a375,onedata/oneclient,"Squashed 'helpers/' changes from c8f8915..aa46c42

aa46c42 VFS-1428 Extend IStorageHelper interface.
811824e VFS-1428 Add option that disables proxy IO helper build.
63defee Merge branch 'develop' of ssh://git.plgrid.pl:7999/vfs/helpers into feature/VFS-1428-support-for-multi-storage-types
2145289 VFS-1428 Add abstract storage helper context layer.
5aaae93 Merge pull request #147 in VFS/helpers from feature/VFS-1407-client-get-subscriptions-on-handshake to develop
8b2e83b VFS-1411 Add Ceph storage helper.

git-subtree-dir: helpers
git-subtree-split: aa46c42b478a7a60a12773f2d137bffbd2717252
"
3b78551a27a60cafed7385460537884a07160350,onedata/oneclient,"VFS-1841 Clearing caches after rename
"
519dd063d95ccdafb321773623b8d7a605b92815,onedata/op-worker,"Merge pull request #1876 in VFS/op-worker from bugfix/VFS-4829-fix-sync-invalidating-blocks-after-replication to develop

* commit '4dfd9c5263c777a6d058315a53bd8534daa4c5a4':
  VFS-4829 do not check transfer plots in test of replication of big file
  VFS-4829 fix broken sync test
  VFS-4829 code reformatting
  VFS-4829 improvements according to PR
  VFS-4829 call dbsync posthook on resolved doc
  VFS-4829 increase timetrap in replica_eviction tests
  VFS-4829 improvements according to PR
  VFS-4829 increase timeouts eviction and migration test suites
  VFS-4829 increase timeout in many_simultaneous_failed_transfers test
  VFS-4829 remove commented out debug code, add timeout, increase timetrap
  VFS-4829 test improvements and fixes, removing unnecessary init_per_testcase clauses
  VFS-4829 increase timeout in quota_decreased_after_eviction
  VFS-4829 bugfixes
  VFS-4829 refactor tests of replica eviction and migration
  Revert ""VFS-4829 remove tests refactor""
"
bf1b534e883e9af78b08a0138a5552d698dfa5f2,onedata/op-worker,"Merge pull request #1141 in VFS/op-worker from feature/VFS-2992-refactor-datastore to develop

* commit 'ab6873796628926cf4ab3b531ce647d991ddfa44':
  VFS-2992 Add transaction process
"
f754bd2c857c0797c7812292fb18948ee1c9c0ba,onedata/op-worker,"VFS-4238 refactor space_transfers_cache model
"
63b7d9877d6458dbf2ae8005cd149957260f1666,onedata/op-worker,"Merge pull request #40 in VFS/bamboos from feature/VFS-1129-packages-deb-and-rpm to develop

# By Tomasz Lichon
# Via Tomasz Lichon
* commit '0bc7c5176781e6dc8f0147d85d7999bd380d0820':
  VFS-1129 Remove old bamboos config
  VFS-1129 Remove old bamboos scripts
  VFS-1129 Rename oneprovider_node -> op_worker in base repo
"
9c4012daf9b827eeb27cff3394905925fcad8250,onedata/op-worker,"VFS-4742 - clean after refactor

* remove remaining inconsistencies (e.g. rename invalidation to eviction)
* fix types used and dialyzer warnings
* remove not longer used errors
* rm redirector_listener
"
7990e4ccf8d1cbb919ec41a30d936409b85adbcc,onedata/op-worker,"Merge remote-tracking branch 'origin/feature/VFS-2856-fslogic-refactoring' into feature/VFS-2907-2-test-storage-sync
"
d56796b41dcad10d64d33e0eb99bd5e0b9c7d9d6,onedata/op-worker,"Merge remote-tracking branch 'remotes/origin/develop' into feature/VFS-2233-extract-file-guid-to-fuse-message

# Conflicts:
#	include/proto/oneclient/fuse_messages.hrl
#	rebar.config
#	src/modules/fslogic/fslogic_worker.erl
#	src/modules/fslogic/lfm_submodules/lfm_files.erl
#	src/proto/translator.erl
"
4ba994db1ec2182cf764ac39e7d6e680409443a4,onedata/op-worker,"VFS-2557, Refactor ct performance tests
"
8f32338973a2b4faaee2db008273e8ed6e168454,onedata/op-worker,"Merge pull request #873 in VFS/op-worker from feature/VFS-1995-dbsync-tests-and-repair-errors to release/3.0.0-beta4

# By Michal Wrzeszcz
# Via Michal Wrzeszcz
* commit 'df2f8786332fc186489edcfca43ad3f16199b962': (35 commits)
  VFS-1995, Minor rename update (fix integration bug)
  VFS-1995, Minor test update
  VFS-1995, Minor location usage update
  VFS-1995, Minor location usage update
  VFS-1995, Rename update
  VFS-1995, Update test timetrap
  VFS-1995, Update test timeout
  VFS-1995, Repair env description
  VFS-1995, Fix dialyzer
  VFS-1995, Minor fixes after merge
  VFS-1995, Update after merge
  VFS-1995, Multiprovider tests update
  VFS-1995, Multiprovider tests update
  VFS-1995, Multiprovider tests update
  VFS-1995, Syncing locations update
  VFS-1995, Multiprovider tests update
  VFS-1995, Multiprovider tests added
  VFS-1976, update after merge
  VFS-1976, update cluster_worker
  VFS-1947, merge
  ...
"
342abda1321b1762cdd3f642c5b040c83960a75a,onedata/op-worker,"VFS-787: remove some unneeded code
"
ec1a8d31269af7b5970a0767b84474e7a08a862c,onedata/op-worker,"VFS-1505 Refactoring times updating and emitting
"
76b12ac1851d763edbc9d365ccd60227ff4e2061,onedata/op-worker,"VFS-4114 - refactor and improvements according to PR, added tranfer_links:umerge function
"
3b212b851295b6e96c9e8ad87d132bc27a50451c,onedata/op-worker,"VFS-829: move rename impl to seperate module
"
bc93722305b01db059bb12fe7efa6d4979b6c3c0,onedata/op-worker,"Merge pull request #959 in VFS/op-worker from bugfix/VFS-2229-fix-problem-with-incorrect-locations to develop

* commit 'd784593eab40ceaff8949252d5768601e7d2c855':
  VFS-2229 Add reaction to rename of external file_location
"
e32cb6ccc1a521558c2c5d4d55acc8477bb7e863,onedata/op-worker,"permissions cache improvements + some more tests
"
4b1a910e6c0628908e3a25c3011e726f9825dc9b,onedata/op-worker,"VFS-692 Refactor stress tests code.
"
137fb1b0251d211afc6fdb426922ff85c8fd4d51,onedata/op-worker,"VFS-2456 Temporarily rename file-metadata record to meta
"
b2072086866b8ba88867aa8ef01366641a606154,onedata/op-worker,"VFS-3730 Separate trusted CAs from certificate chain

Add option web_cert_chain_file with path to certificate chain
for listeners, separate from CAs trusted by http client.
"
2b54b75806561cdbfc0f9902a4f1e61046526ada,onedata/op-worker,"VFS-5023 improvements according to PR, first autocleaning tests
"
347b7d0524263039e0f1c56663f649d552a19469,onedata/op-worker,"Merge pull request #217 in VFS/veilcluster from VFS-466-crash-bazy-podczas-ping-testu to master

# By Tomasz Lichon (27) and root (4)
# Via Tomasz Lichon (4) and root (1)
* commit 'c57eb0703f46eba21ba66a270f744027dc6dd925': (31 commits)
  todos
  enable dd_write and multiple_ping_v2
  temporary disable dd_write and multiple_ping_v2
  ct fix due to change in session cleanup
  code cleanup
  bigcouch update
  ping duration -> 240
  code cleanup
  ping duration 60min
  deleting session when its last connection is deleted
  session clearing bursts size: 1000
  ping test duration -> 30min, session clearing in bursts
  ping test duration -> 4h
  removing deleted session fix , unwanted log removed
  broken pid temp fix 2
  ping duration ->1min, some logs added, broken pid temp fix
  ping duration ->2min
  interesting logs marked with ##, ct tests disabled
  pid parsing error fix
  session expire time -> 10min
  ...
"
55c4b5fcf2afd8f46714ff5d3f30a3b9fb653a7f,onedata/op-worker,"VFS-2856 Fslogic refactoring.
"
2270a35aad51a02bb632c47250a9a47d31582688,onedata/op-worker,"basho update (cast -> call, some logs removed)
"
94363b0561566382ff3af61339f93d1b3c111e2b,onedata/op-worker,"VFS-787: improve inter-provider ClusterProxy
"
3398d4c15524a92d99b318a3b18e42944371d880,onedata/op-worker,"Merge pull request #856 in VFS/op-worker from instant-subscriptions to release/3.0.0-beta3

# By Michal Zmuda
# Via Michal Zmuda
* commit 'cfc1ee68e73753a63355d67c596939d1a8bc93b7':
  updated cluster-worker
  subscriprion renewal reworked
"
13ec319a4d23aebafc7fc39d21cbcead83f8be60,onedata/op-worker,"Merge pull request #1486 in VFS/op-worker from feature/VFS-4178-add-flat-storage-path-mapping-option to develop

* commit '8c9bed2057b21da761b2a5f4f7f778170ebd8808':
  VFS-4178 Fix dialyzer
  VFS-4178 Minor code refactoring
  VFS-4178 Minor code refactoring
  VFS-4178 Fixed issues after PR
  VFS-4178 Fixed issues after PR
  VFS-4178 Fixed flat storage rename and overwrite
  VFS-4178 Fixed generation of flat file storage id
  VFS-4036 Added time update and permission check after rename on flat storage
  VFS-4036 Added flat storage path support
  Squashed 'helpers/' changes from 9be121367..95da9b070
  Squashed 'bamboos/' changes from 9a85f26b9..39c78fa3b
"
f4f1cb23ea34dfa352828230472d6abd9df44fc5,onedata/op-worker,"VFS-1382 moved datastore include files
"
6395680581ff07ce55472714d67ce03a26ffe188,opencog/atomspace,"simplify handle usage.

This results in a bunch of different cleanups of all kinds.
"
250199bc9106aedd2720ba995cd7cf01cdf3f0e7,opencog/atomspace,"- added support for creating Frames into the embodiment AtomTable
  - Framenet Frames, corresponding to all the existing embodiment predicates, are being created by the predicate updaters classes
- Changed the embodiment config file to make it load the scheme module when started
  - it is necessary to load the Frames structures defined into the file: embodiment/scm/predicates-frames.scm
- fixed CogServer::loadSCMModules to avoid a segfault when the parameter SCM_PRELOAD(config file) is defined and a null config_paths is given
- changed both OPC and LS executable to make then use, as scheme config_paths, the local ""."" directory
- changed the makeDistribution script from embodiment to copy the required scheme files to the dist directory
- fixed some predicates generating algorithms (i.e. is_movable -> avatars, humanoids and pets weren't movable before, now they are)
"
9f2d76b5bf3606b8f85d246ba1d844cf088e8b13,opencog/atomspace,simplify a bit moses_exec (by overloading more functions that take a whole table instead of input and output tables)
0f5af62038eaceb2be226ae78c36709a27ee0961,opencog/atomspace,"Merge pull request #1250 from williampma/microplanning

Microplanning: more refactoring"
01dd21a752a53c2e7391146f0a9df3cb5d6e1406,opencog/atomspace,replace field_set::*_bits methods by field_set::*_bit to be more consistent with the contin and disc method names
2b868995da79f1a52e49475b9ca291f932310d6c,opencog/atomspace,replaced homogeneous table by heterogeneous one (+ lots of code simplifications). First step towards having MOSES learn functions with different inputs and output types
ed708bdd8492ff6ce3b303949c76147a1725bd80,opencog/atomspace,"Merge pull request #590 from linas/va

Add dummy clauses to simplify search."
dcd1bfda0c99cd7ee5353e61e694e646a16e1ee9,opencog/atomspace,"Merge pull request #65 from ngeiswei/organize_comboreduct_dir

move type checking, interpreter and table into there own dir"
fd7f87d765f85fccb41c1aea04ccd03b85a06ba1,opencog/atomspace,"Merge pull request #343 from ngeiswei/pm-log

Replace stdout debug by log in pattern matcher"
010e1a69eb50901384cfd43a0910526c2fc58dbc,opencog/atomspace,"moses: multibscore_based_bscore really not a template any more; move code to .cc file from .h
"
3b0a99602b6c73e90f3a57144cf8fb87a66395aa,opencog/atomspace,"Rename behave_cscore::ignore_idxs by behave_cscore::ignore_cols
"
f654229fce9f09fbf5d0aa8092c2c51f88f36b46,opencog/atomspace,"moses: rename the algo back to hill_climbing (now that that is what it does...)

The old behaviour is still available by using the -L1 -T1 flags.
"
01f97ba13cda5fb6f328b4e626e552d2fcf015d7,opencog/atomspace,"Rename reasoning/engine by unified-rule-engine
"
372d58dad8a2ad90a059cdbb29e0a952c63dc677,opennars/opennars,"more simple optimizations
"
0cb5ff6e41baf46c99551e7e4cc06ec0cf16de0a,opennars/opennars,optimized multilog output threading
dafd6cc812fdaefc13eec00d98005b6a8f0e8c87,opennars/opennars,"refactoring, simplification; all existing tests passing again
"
2fd6b05d810e26db3af0cf6b7cf9281eb66f4209,opennars/opennars,"refactoring, in progress. continuing.."
7cbc20ed7209e414930aab8a0d8ff956895257a8,opensalt/opensalt,"refactor: merge changes from develop
"
bd18990d787b6c8b2e762bc9ec60d26714c2e1cb,openstack/neutron,"Merge ""Improve DHCP agent performance"""
326b85dd6154048b1671732d2d7df8deb8b99207,openstack/neutron,"Plugins should call __init__ of db_base_plugin for db.configure

Currently each plugin calls db.configure() within the plugin's __init__
class or defines an initialize() method that's sole job is to call this
method. Instead we should just call the super method of a plugin so that
db.configure() is called for us out of the db_base_plugin class.

Note: the only reason why I'm making this change is that I want to add
something to the __init__() class of the db_base_plugin that's needed for
the nova-event-callback blueprint and adding it in the base class of init
looks to be the best place.

Change-Id: Iec3c912735021ceb90f657108aad3a57460d66e7
Closes-bug: #1282303
"
8f80a52b01f77b8e2988f6ec78cfbfbecab4895d,openstack/neutron,"Refactor/prepare db common utils for neutron-lib

Extract all the common utils from common_db_mixin.py in preparation
for moving them to neutron-lib.

This is a preliminary step in preparation for refactoring the
CommonDbMixin class and moving it to neutron-lib also.

Partial Blueprint: neutron-lib

Change-Id: I3cba375a8162cb68e8f988f22f5c8b1ce7915180
"
5defcd0aa61b96933369a545040e57d9665add7a,openstack/neutron,"Remove unused arg to config.setup_logging()

The cfg.CFG argument is ignored and misleading.  This change removes it
and updates all callers.

Closes-Bug: #1355565
Change-Id: I2fcece85d1abe848e5c01125cfb62c02f2dcbc86
"
2f13345b861e2873abbbeaa69b9620ce431a3baf,openstack/neutron,"Reference DEFAULT_SERVICETYPE OptGoup names in lowercase

To have consistent option group name format across projects,
oslo.config now normalizes all non lowercase group names to lowercase
when loading conf files.
Thus conf files are backwards compatible but option group references
in the code must now use lowercase before we update oslo.config.

This patch replaces all 'DEFAULT_SERVICETYPE' references to
'default_servicetype'

Change-Id: Iccab055c4664e11c9618706e594416194065048b
"
8589f16324eb469df51e7ba4d2dcdca548f0bad6,openstack/neutron,"Remove dead method _get_router_ids

No place is using _get_router_ids, it is dead method now.
And for l3_db.Router related query, it always based on certain
filters, such as on which host, extra attribute is distributed
or HA. While this method cannot fix those requirements.

Method _get_router_ids is created in patch
I35eae975209316aad6b2c97c909dce385729864d , its purpose is to
avoid DB query to fetch full data for routers while only id is
needed. But in patch Ie561b19a2e58a2a563d79b75421e9e24c70f36f9 ,
its caller was removed, but seems we forget to remove this dead
method at that time.

Change-Id: I924e3e652deea2f89c4aaf1fd780e467ea81b843
"
7ea7db0125945741ef44ef9bea331304680a62bc,openstack/neutron,"l3_nat_agent was renamed to l3_agent
and this was missed.

This broke quantum-l3-agent when setup.py was
used to install but  did not affect package installs.

This change fixes the issue.

Change-Id: I820d26fba5d2774262577ed4fbae81dc7362e93e
"
a13295b9a8c76c01b2f6dfa013110b2e24a6e4da,openstack/neutron,"Enable automatic validation of many HACKING rules.

 * Add hacking to the tox build - a set of flake8 plugins that
   perform automatic validation of many HACKING.rst rules.
 * This patch configures hacking in the tox build and performs
   the mechanical cleanup required to allow the checks to pass.
 * See https://pypi.python.org/pypi/hacking

Change-Id: Ie9b3eb5627a9b6dd181f79225abae422e6cf3777
"
062ef79381c744f7bb9a8874bf33ac35877161f0,openstack/neutron,"use is_extension_supported from neutron-lib

The is_extension_supported function now lives in neutron-lib. This patch
removes the function from neutron and uses lib's version instead.

NeutronLibImpact

Change-Id: Iccb72e00f85043b3dff0299df7eb1279655e313e
"
a2fe5fd2e065859251897f219ab4bb40e1108d94,openstack/neutron,"Delete Tempest fork, import from tempest and tempest_lib

A while ago we copied Tempest networking API tests in to the
Neutron repo, and along came thousands of lines of code of Tempest
testing infrastructure (neutron.tests.tempest). For a while we
periodically refreshed our fork via:
tools/copy_api_tests_from_tempest.sh

I think it's time we move away from that model by eliminating
the fork. We do this by deleting unused code and importing the
rest from tempest_lib. There's some Tempest code still not
moved from Tempest to tempest_lib in tempest.common. I think
it's preferable to import that code than to copy it, and Tempest
cores mostly agree. Manila and Ironic also do the same.
To be able to import from tempest I added it as a requirement:
Since Tempest is not on PyPi, I had to get it from git. Only the api
tests environment needs Tempest, so instead of adding it to
test-requirements, I added it specifically to the api and
api-constraints venvs.

neutron.tests.tempest.test and neutron.tests.tempest.common.*
still remain. These are tighly coupled with one another, and
sadly since Neutron forked Tempest code, Tempest has made significant
changes to those files that also require changes to the test files.
I aim to get rid of the Neutron fork of these files in a follow up
change.

Also fixed import grouping in test files so that it's std libs,
3rd party libs, and then Neutron code.

* Removed neutron.tests.tempest.config:
  - We only added one option after the fork. I created a new group
    called 'neutron_plugin_options' and moved the new option to that
    group. This is in preperation for the Tempest plugin architecture,
    where you're supposed to add new config options to a new group
    and not to existing configuration groups. Note that this is
    obviously a backward incompatible change, but it's to an option
    added in the same cycle.
* Removed neutron.tests.tempest.test and neutron.tests.tempest.common.
  - This introduced an API change to the way we access Keystone,
    which required mechanical changes to a few tests (create_tenant
    calls need a different client now).
  - The way Tempest manages primary, admin and alternative tenant
    credentials was changed after we forked, which required another
    mechanical change to a few tests.
* Cut all of the Keystone clients we don't need. We only need
  to create/delete tenants, the other clients were used in Tempest by
  actual Keystone tests.
* Changed neutron.tests.api.base.BaseNetworkTest:
  - Re-implemented get_client_manager so that it returns the Neutron
    clients manager and not the one in the Tempest repo.
  - Updated it from the Tempest repo so that it uses the new way
    to manage credentials (Since it now uses the Tempest test base
    class and not our out of date forked copy).

Change-Id: I4f9193dfe26f2d36985cb480a98709ec182a2f7b
"
1dfd65f4cff1133cff45e103083fc3ae3130877b,openstack/neutron,"Stop mock patches by default in base test class

Adds a mock.patch.stopall to the base unit test
case cleanup routines to stop patches by default
in unit tests. This behavior can be overwritten
by setting an attribute on the test class if
required.

Also removes the explicit stops in the Cisco n1kv,
VMware, and NEC unit tests to leverage the new
automatic cleanup.

Closes-Bug: #1290550
Change-Id: Ic642430a765ea8deb07ebd88b619da58a58e0edd
"
c0db9c23e307a000af5e8fed6960ccd55c0e3a38,openstack/neutron,"Configure agents using neutron.common.config.init (formerly .parse)

After oslo.messaging port is done, we'll need to initialize RPC layer
from all RPC agents. We'll put initialization into init() function, so
the first step for migration is to make agents use it.

The function is renamed to be explicit about the fact that we don't just
parse configuration by calling it, but also do other common
initializations, like setting RPC layer.

blueprint oslo-messaging

Change-Id: I71c62f270ac7a1ff1426a3f49a32133b65580e35
"
db80198a1b0025e425db098933edbf4da1a331ce,openstack/neutron,"Move internal port processing to router classes

Change-Id: I38b18f6d24c788c96b2d13ccca5d2e9a7a4fcdeb
Partially-Implements: bp/restructure-l3-agent
"
7a2a85623da4d296c5dfe5dc8b6fdb772d74ce92,openstack/neutron,"oslo: migrate to namespace-less import paths

Oslo project decided to move away from using oslo.* namespace for all their
libraries [1], so we should migrate to new import path.

This patch applies new paths for:
- oslo.config
- oslo.db
- oslo.i18n
- oslo.messaging
- oslo.middleware
- oslo.rootwrap
- oslo.serialization
- oslo.utils

Added hacking check to enforce new import paths for all oslo libraries.

Updated setup.cfg entry points.

We'll cleanup old imports from oslo-incubator modules on demand or
if/when oslo officially deprecates old namespace in one of the next
cycles.

[1]: https://blueprints.launchpad.net/oslo-incubator/+spec/drop-namespace-packages

Depends-On: https://review.openstack.org/#/c/147248/
Depends-On: https://review.openstack.org/#/c/152292/
Depends-On: https://review.openstack.org/#/c/147240/

Closes-Bug: #1409733
Change-Id: If0dce29a0980206ace9866112be529436194d47e
"
7267d75fdd3f90af759d71e9490cd41d41ba6d98,openstack/neutron,"Use separate queue for agent state reports.

This optimization is needed for big clusters with hundreds
of agents where the spike of activity may trigger a burst
of RPC requests that would prevent neutron-server from processing
agent heart beats in time, triggering resource rescheduling.

This will be further optimized by running dedicated RPC workers
for state reports processing.

Related-Bug: #1496410
Change-Id: Id86a1f962aaa4f64011d57ae55d240f890cca4f7
"
91c15edf54c07da77ecf4fc335b0ba3951ff1f90,openstack/neutron,"Ignore gre devices in namespaces when cleaning up devices

Agents and netns_cleanup tool attempt to clean up devices from
namespaces before destroying namespaces, but they should skip doing it
for gre devices that are automatic and show up depending on kernel
modules loaded.

Change-Id: Ie95890ed92ac73ec8e2d118a9727b9e1624a5178
Related-Bug: #1604115
"
43c1f98f074549611db90b6c333d2c54d7e4d4b3,openstack/neutron,"Move ARP responder test to sanity command

Additionally, the patch improves the check itself:
To check if the currently installed OVS supports the ARP responder
feature, we try to add a flow that references an OpenFlow ARP
extension via ofctl. The test may fail due to an (expected)
Runtime error, or due to some other unexpected error.
In such a case the error was previously masked and tossed away.

* Clean up ARP responder unit test
* Extract ARP responder flow actions to be used by the unit
  tests, functional test as well as the ARP responder code itself

After this patch, if the sanity check returned False but the
user never ran it or ignored its results, the OVS agent will
output errors to the log every time an ARP entry is (attempted)
to be added or removed from the flow table.

Closes-Bug: #1323718
Change-Id: I428c954d6561cd398a1e580804a9482969a154af
"
10286abe752f9baff92f9326bea6d176a46ed8af,openstack/neutron,"Merge ""Refactoring of L3 agent notifications for router"""
11bd2dcdb92327af3de2a61cc9af9ffe69f9b6a3,openstack/neutron,"Replace mox in unit tests with mock

blueprint remove-mox

Removing mox from test-requirements.txt will be done in another patch
because stubout module is a part of mox and it is used in several modules.

Change-Id: I9370e8da815d2234a032a8875da73a86d4126d46
"
fdb70c6c19fa6bb8625ce6bf9e5033f15efd55b5,owid/owid-grapher,"Greatly reorganizing header code
"
5a1806b7b8d9d9ffac1edf3760cf4f4f404e16d3,owid/owid-grapher,"Remove some unneeded imports and webpack config
"
7d0a6ed1da43569632df5874381d258577a7417c,pandas-dev/pandas,"StataWriter: Replace non-isalnum characters in variable names by _ instead of integral represantation of replaced character. Eliminate duplicates created by replacement.
"
ae2e3a438579fc2b33b500d210f83e3ebb07e48a,pandas-dev/pandas,"Merge pull request #4675 from jreback/numeric

CLN/API: Refactor of _get_numeric_data/_get_bool_data to core/generic.py, allowing Series/Panel functionaility"
3cb91f09c5a710c589d365e3dfea20501b09b978,pandas-dev/pandas,"CLN: in common.py - revised _maybe_upcast to use _maybe_promote
     in rehashpe.py - removed block2d_to_block3d in favor of block2d_to_blocknd
"
300a8954e46932389460eead3199a100f55a76e3,pandas-dev/pandas,"Merge pull request #5244 from jreback/truncate

API/CLN: consolidate truncate into NDFrame (panel had a separate method)"
0c58a825181bde2c4d7e1a912e246181d33f55d6,pandas-dev/pandas,"CLN: Remove unused variables (#21986)

"
9692a194a65b107545e49730250b79d8e3c8b2ca,pandas-dev/pandas,"REF: more refactoring.  checkpoint to debug something
"
863cbc571b17a1734d813a45201b8158643ce3e2,pandas-dev/pandas,"DEPR, DOC: Deprecate buffer_lines in read_csv

`buffer_lines` is not respected, as it is determined internally via a
heuristic involving `table_width` (see <a href=""https://github.com/pyd
ata/pandas/blob/master/pandas/parser.pyx#L527"">here</a> for how it is
computed).

Author: gfyoung <gfyoung17@gmail.com>

Closes #13360 from gfyoung/buffer-lines-depr-doc and squashes the following commits:

a72ecbe [gfyoung] DEPR, DOC: Deprecate buffer_lines in read_csv
"
221ab06f54ff39137e5a3881962f5b09a54c1815,pandas-dev/pandas,"ENH: improve DatetimeIndex repr for len-1 and len-2 cases close #1611
"
aa5b6e6b53637ca861d7b6cbae2878e7c4687199,pandas-dev/pandas,"DEPR: deprecate .asobject property (#18572)

"
a0ca4d7b2773074ee6eedcd01056d5e45337af8b,pandas-dev/pandas,"Remove offset/DTI caching (disabled since 0.14 (#23118)

* Remove offset/DTI caching (disabled since 0.14

* remove unused import

* remove cached_range tests

* fixup remove unused imports

* whatsnew
"
a178546341b06664d5b5d7e9e30fc16e8a25199c,pandas-dev/pandas,"CLN: move resolvers getter to generic.py
"
0fd2cd0e2c49d5abf5e84cbe64c6ab93ecdecef7,pandas-dev/pandas,"BUG: Bug in iat return boxing for Timestamp/Timedelta (GH7729)
CLN/COMPAT: cleanup timedelta64[ns] series inferrence
"
2eb6d38ed0563318cea5f419a6eb32b211d24ff1,pandas-dev/pandas,"CLN: remove deprecated irow, icol, iget, iget_value (GH10711)

xref https://github.com/pandas-dev/pandas/issues/6581

Author: Joris Van den Bossche <jorisvandenbossche@gmail.com>

Closes #15547 from jorisvandenbossche/remove-irow-icol and squashes the following commits:

06ea1bb [Joris Van den Bossche] CLN: remove deprecated irow, icol, iget, iget_value (GH10711)
"
3bed38328927d472e546e045c5b3fc3e5f2f99ba,pandas-dev/pandas,"General print statement cleanup.
"
9d15685dbf2d1bdf4597971a709336a2f1e7c997,pandas-dev/pandas,"ENH: use asfreq and reset index instead of resample for plotting
"
0632168f99c0167697c3668b186d19ae628a182a,pandas-dev/pandas,"CLN: cleaning core/common.py

partial on #12503

Author: Jeff Reback <jeff@reback.net>

Closes #12804 from jreback/types and squashes the following commits:

6e2e187 [Jeff Reback] TST: relocate tests to pandas/tests/formats,types
faf581a [Jeff Reback] CLN: extension dtypes need to be refernced directly
bd1fde4 [Jeff Reback] CLN: move pprint_thing to printing
2081048 [Jeff Reback] CLN: add formats/printing.py, strip from common.py
3b027af [Jeff Reback] CLN: move core/formats.py and core/style.py to formats
ae5e8fb [Jeff Reback] CLN: remove _pickle_array, _unpkckle_array from common.py
b42a2c9 [Jeff Reback] CLN: move diff, take to algorithms.py
a214e82 [Jeff Reback] CLN: move com.mask_missing to missing
e77be39 [Jeff Reback] CLN: move ABC to types/generic.py
534dcc7 [Jeff Reback] CLN: create pandas/types CLN: move core/dtypes.py -> types
"
2f676508a2b7dc0b13f08741dbd4cc9b13e75fde,pandas-dev/pandas,"CLN: rename ""print_config.X"" to ""print.X""
"
ee6262d08603c4e3e82d3e91ee8c1eefe90a6012,pandas-dev/pandas,"ENH: deprecate timeRule and offset in shift method, clean up cython build
"
7d00a308a4c3e32c44498c690740a5a7d9a5a842,pandas-dev/pandas,"BUG/ENH: cleanup for Timedelta arithmetic

Fixes GH8813
Fixes GH5963
Fixes GH5436

If the other argument has a dtype attribute, I assume that it is ndarray-like
and convert the `Timedelta` into a `np.timedelta64` object. Alternatively, we
could just return `NotImplemented` and let the other type handle it, but this
has the bonus of making `Timedelta` compatible with ndarrays.

I also added a `Timedelta.to_timedelta64()` method to the public API. I
couldn't find a listing for `Timedelta` in the API docs -- we should probably
add that, right?

Next up would be a similar treatment for `Timestamp`.
"
a79f4d6a12d8884b54a49f1f7c811b08a6796dc4,pandas-dev/pandas,"BUG Deprecating use of bool() on DataFrame, GH #1069

Calling bool() on DataFrame raises issues described in #1069. This
change causes DataFrame to raise a ValueError when called with bool(),
and instead provides a new property, dataframe.empty.
"
7dd451d881964d958acbd078e8dba505906b01bf,pandas-dev/pandas,"BUG: iloc misbehavior with pd.Series: sometimes returns pd.Categorical, fixes #14580

closes https://github.com/pandas-dev/pandas/issues/14580

Author: Nathalie Rud <nathalier@gmail.com>

Closes #14642 from nathalier/nath-working and squashes the following commits:

f6b1790 [Nathalie Rud] DOC: add whatsnew entry for bug GH #14580 fix
bb9b601 [Nathalie Rud] TST: add test to cover bug GH #14580
9a69ca5 [Nathalie Rud] CLN: refactor _getitem_axis() of  _iLocIndexer class
5b5ead4 [Nathalie Rud] BUG: fix iloc with pd.Series on pd.Categorical
"
51cbf8bb928bf7bb0d798f374cbf3080b23cf9da,pandas-dev/pandas,"BUG: tokenization error reporting, work on parameter hell simplification
"
e1e14a404d1faa5c0e8b0111d19637f407414ccb,pandas-dev/pandas,"Merge pull request #3175 from waitingkuo/fix-rename

BUG: Fix the rename function for Series and DataFrame, #3165"
81d9e0be80a5331db161f92800670cbdf2516af3,pandas-dev/pandas,"BUG: made behavior of operator equal for CategoricalIndex consistent, improved unit tests
"
63b0d9b730167d012a4d8e7c96a69a7c52319036,pandas-dev/pandas,"REF: microsecond -> nanosecond migration, most of the way there #1238
"
3274f2724c5601a2b1896ced678b688ebf6eb922,pandas-dev/pandas,"Merge pull request #8753 from immerrr/refactor-slice-locs

API: allow negative steps for label-based indexing"
b735ffc75e4cea35b14866ada4c58a42551fb9dc,pandas-dev/pandas,"BUG: fix negative step support for label-based slices

INT: make Index.slice_locs step-aware

BUG: fix PeriodIndex.searchsorted to accept Periods

INT: refactor time-related indices to use step-aware slice_locs

INT: refactor MultiIndex to use step-aware slice_locs

INT: enable second/microsecond partial string slicing
"
e660c058a662426afc4d8855aabf4677f01b4a4c,pandas-dev/pandas,"Merge pull request #10542 from schettino72/10151-cleanup-up-platform-python-version-checks

CLN: cleanup up platform / python version checks. fix GB10151"
b72cfb5220589f61cca67ecfcfaef8d042949273,pandas-dev/pandas,"API: removed functions and methods deprecated in 0.4 Series, address GH #229
"
d085044f090d5b3a122208792eb0a3b836960fae,paninski-lab/yass,"fixes #159 (#188)

* adds cerberus schema file

* fixes cerberus schema file

* fixes to cerberus schema

* validating yass config with cerberus

* cleaning up validation code

* verifying all sample config files

* schema validation fixes

* fixes #159

* removes unused field from schema validator
"
cd0cbd16fb85f8635568074daca0cd645fd42bec,paradajz/OpenDeck,"improved/simplified defines and checks
"
f8efece3dcc5269e4e8844c07a291df0af527e26,polyaxon/polyaxon,"#69 Refactor search algorithms and
 * Prepare structure for hyperband and other algorithms
"
713af792156f961dcafccef12d345a7fa282ad34,polyaxon/polyaxon,"Consolidate paths tests
"
57271723e0726594a5bcfc238520ff9baac88416,psychopy/psychopy,"Revert ""ENH - Don't set the origin in interactive mode.""
This reverts commit 943ca6e86617896a0d89ba7d484ed7790da6d1ee.

Revert ""Update deprecated log reference""
This reverts commit e275506a3ea7876e0513769627e1be9b55c8b6e3.

Revert ""RF: Switch testEmulator to use @raises decorator""
This reverts commit 60fa3093ed919838cc6de7c2bd520079b6a3db77.

These small bug-fixes / enhancements have been moved to
a small-refactors branch and removed from
feature-newstyle-trialhandler branch to keep it on topic.
"
dc03cd3b86b05b790fa1275f20e17f5eff363338,psychopy/psychopy,"ENH: moved the toolbar functions so they can be used by Coder too
"
b7b9baef16b9b5c78a07f92737a1aad85740358a,psychopy/psychopy,"visual: deprecated depth (was only confusing people and little use)

updated changelog
"
28e932e1ff35aab4f6b76c01f17502665d69a1df,psychopy/psychopy,"Window backends (#1677)

* WIP: refactoring Window class to support easier backend additions

* RF: pyglet backend refactoring is now working (pygame not yet)

* RF: pyglet and pygame both now present stimuli in refactored windows

pygame doesn't seem to sync to the screen refresh anymore but otherwise
appears to be working fine

* RF: pyglet and pygame both now present stimuli in refactored windows

pygame doesn't seem to sync to the screen refresh anymore but otherwise
appears to be working fine

* RF: fix to the iohub link from pyglet window backends

* RF: pygame and pyglet refactoring seems to be complete

I've tested that:
 - both can still render text
 - both receive input from keyboard
 - test quiste passes on both (reinstated for pygame):
   NB pygame does not test text or radialstim

* RF: retinaContext wasn't defined in new pyglet backend code

* FF: typo in the call to backend.setMouseVisibility()

* FF: Backends need a name for logging purposes

* TESTS: Travis testing with sys built-ins failed with old ffmpeg

moviepy needs a newer version so testing here whether we can upgrade
ffmpeg with a simple apt-get install

* TESTS: Trying Travis on Trusty (14.04) again instead of Precise (12.04)

Travis Precise was previously giving problems with SSL but hopefully
that's now fixed

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: adding ppa for ffmpeg to be installed on ubuntu 14.04 travis

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: try install Travis libav-tools instead of ffmpeg package

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: Python 2.7.9 is being run on Travis Trusty. Trying to get 2.7.13

Maybe it was caused by the system_site_packages flag?

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: Python 2.7.9 is being run on Travis Trusty. Trying to get 2.7.13

Maybe it was caused by the system_site_packages flag?

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: We are now using Python 2.7.14 on travis but still not building

Looks like problem might be the force-reinstall flags. Let's try
not forcing so that existing packages remain

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: SSL problem with Travis even though we *are* now using Py 2.7.14

try using pip install --users instead following advice on
https://github.com/travis-ci/travis-ci/issues/8382

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: SSL problem with Travis even though we *are* now using Py 2.7.14

trying to install python-openssl from apt-get instead of pip

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: It looks like sudo pip install was a problem for the

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: matplotlib seems not to install properly using apt-get so try pip

Or maybe the problem is that the apt-get version is going to a different
Python installation?

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: need xpra on trusty to get redirecting of virtual display?

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: need xpra on trusty to get redirecting of virtual display?

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: reverting the test env to be precise (12.04) after a day of pain

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>

* TESTS: (re)removing the test of MovieStim3 for travis with sys python

Conda is working fine on travis (with audio on mute) but the system
python install doesn't seem to recognise the ffmpeg installation

Signed-off-by: Jon Peirce <eae6eaed4a1a667da1d2a361303cc78f8071dfd8@gmail.com>
"
ec802a1626f2ea135c27241dc3d8e34e9d334e95,remomueller/slice,"Improved the responsiveness and display of emails on smaller devices
"
b8586615859fd2f0901d66b9d6881e1b18ce95af,remomueller/slice,"Improved the load time of sheet edit pages
"
6e9059f10f5f4b107400e17cf047f807d463ad6e,remomueller/slice,"Design Library and Variable Library menu items simplified to Designs and Variables
"
3b14cf82f65d1ec6eb9001343f710485456c56e1,rentpath/react-ui,"feat(datepicker): clone into repo

affects: @rentpath/react-ui-core

* moved repo into react-ui-core since it's only 2 files
"
bc30727549f0c16be07b14fd9d5aa165719c4c8c,scoophealth/oscar,"Merge ""convert prescription to JPA and fix some code access and add updatedate"""
b3a9080483e551ca345f076616e454debe8b6d95,scoophealth/oscar," #831 Dispensing information

moved from 12.1 hamilton public health to master.
"
5f63c0090565790bee454ff1af20dd1c98f04dbc,scoophealth/oscar,"Merge changes Ib18c074b,I70c81189,I07349ae5

* changes:
  Code Cleanup: some missed stuff
  Code Cleanup: Super Manager DAO updates mostly
  Code Cleanup: removing architecture for doing jdbc updates
"
8ad094a7503ddac1733c545064c51fa00a8574cd,scoophealth/oscar,"Code cleanup: just some type safety stuff in billing
"
bb900267761522af1a0ce212a4f09cd599a07d6d,sdl/Sdl-Community,"Refactoring: removed comented code.
"
313fb326afbf840f1be8a59d352a977647bc17e7,seek4science/seek,"renaming Sample to DeprecatedSample

this is a first sweep and test failures are expected
"
d4c90fde09346bd2b5aa98e10c52c3051d3f5105,seek4science/seek,"rename tab_lazy_load.js to faceted_search.js
"
bb8601149e93b6a0b3e7888e3ec88707dc8a4f82,seek4science/seek,"tidied up footer some more and logos
"
fedc50e0a59e434c8baf0ef47a71c435a1ca2a4e,shopware/shopware,"Merge pull request #1260 in SW/shopware from bugfix/next/sw-8831-fix-twice-smarty-blocks to next

* commit 'bc43c34d04bcb92f85760e08d70c70973e128871':
  SW-8831 - Renamed double smarty blocks
"
a3cd36d9f93929a10ea826298b581d32441d1b89,shopware/shopware,"Add new service for retrieving the next number of a number range

Previously there existed three different ways to get the next number of a number range (`s_order_number`) from the database and save it back. However, two of them were not safe and might resulted in using the same number twice due to a lack of locking the `s_order_number` table. This commit adds a new service `shopware.number_range_manager`, which can be used to safely retrieve the current and next number of a range by just passing its name. Furthermore it makes use of that service in three places, which previously used a separate (potentially unsafe) implementation to get the next number:

* Customer creation (via shop frontend)
* Order creation
* Order document creation

This commit does not introduce any breaking changes.
"
a3ab27d8a5284233f410387ada4076a96a2f54b0,shopware/shopware,"Merge pull request #5961 in SW/shopware from ntr/5.3/simplify-docker-setup to 5.3

* commit 'bfea3b544b00602156738d043cecc9d5fcd60f4e':
  Add node_modules to .gitignore
  Update elasticsearch/elasticsearch to support authentication
  Elasticsearch integration
  Add bamboo build scripts for nightwatch
  Change nightwatch artifacts path
  NTR - Add documentation and add the ability to provide env arguments to the runner
  NTR - Nightwatch.js for E2E tests
  Update composer dependencies
  Simplify docker setup
  Disable unstable mink test
"
8e55d06cebd42808a31e8a0b553b056ab3321441,shopware/shopware,"Merge pull request #989 in SW/shopware from feature/next/responsive/sw-7856-listing-view-tablet-and-desktop to feature/next/responsive/sw-7855-listing-view-mobile

* commit '09aa1b62ca6b4673cab36e0c743453e5d0402e7c': (21 commits)
  SW-7856 Refactored panel component
  SW-7856 Refactored listing actions
  SW-7856 Refactored listing grid
  SW-7856 Added restriction for the product-box styles to the listing view
  SW-7856 Added additional classes
  SW-7856 Added additional blocks
  SW-7856 Refactored global modifier
  SW-7856 Refactored compare button
  SW-7856 Refactored code style
  SW-7856 Added listing styles for tablet and desktop viewport
  SW-7856 Added additional styles to the breadcrumbs
  SW-7856 Added new global modifier
  SW-7856 Added file for last viewed module
  SW-7856 Added new ribbon component
  SW-7856 Refactored panel component
  SW-7856 Added new module for the sidebar
  SW-7856 Refactored select field component
  SW-7856 Refactored breakpoints and added new component functions
  SW-7856 Added auto submit plugin
  SW-7856 Refactored collapse panel plugin
  ...
"
900c1f3cdd586a39dd7f741f3a035fcd06f9fb39,shopware/shopware,"Merge pull request #900 in SW/shopware from bugfix/next/sw-8100-score-refactor to next

* commit '2efdb852a93ce516c09acb3558d73ee8512eb08e':
  SW-8100 - sCore refactoring finishing touches
  SW-8100 - sCore refactoring stage 1
  SW-8100 - sCore unit testing
"
17bbef8d9fd8a0b021aa693284a7c5de490722c8,shopware/shopware,"SW-11642 - Remove deprecated search components
"
dbb29d774ae1622ac48c70deaf76dae9e9d355b9,shopware/shopware,"SW-8094 - Refactored session access
"
9e9979b53e34ca1a4947302120fddde1a4937b8a,shopware/shopware,"Merge pull request #4145 in SW/shopware from sw-16629/5.3/refactor-request-response-objects to 5.3

* commit 'e3bb9e3a826c912adbfa69f91efa68a61bc3d3fd': (32 commits)
  SW-16629 - Document removed ZF components in UPGRADE document
  Strip require_once calls from Zend Framework
  Remove Zend_File and Zend_Validate_File_* and Zend_Filter_File_*
  Remove Zend_Wildfire (and Zend_Db_Profiler_Firebug and Zend_Log_Writer_Firebug, Zend_Log_Formatter_Firebug)
  Remove unused Zend_Loader_* autoloaders
  Remove Zend_Json_Decoder, Zend_Json_Encoder and Zend_Json_Expr
  Remove conditional version checks for unsupported PHP Versions
  Remove Zend_Filter_Encrypt and Zend_Filter_Decrypt
  Remove Zend_Filter_Compress and Zend_Filter_Decompress
  Remove Zend_Service
  Remove Zend_Soap
  Remove Zend_XmlRpc
  Remove unused Zend_Db adapter
  Remove Zend_Registry
  Remove Zend_Debug
  Remove Zend_Ldap
  Remove Zend_Text
  Remove Zend_Stdlib
  Remove Zend_ProgressBar
  Remove Zend_TimeSync
  ...
"
85dd1d1e1c17bc3ab545107ff63719f339bdf5c6,shopware/shopware,"Merge pull request #1280 in SW/shopware from feature/next/sw-8569-detail-page-final to next

* commit '95293e15390bb7d225b253e4353ab53e3aa3ceb0': (38 commits)
  SW-8569 Fixed regressions
  SW-8569 Bugfixes
  SW-8569 Optimized behaviour between tab and product slider plugin
  SW-8569 Added documentation
  SW-8569 Refactored image zoom plugin
  SW-8569 Refactored image slider plugin
  SW-8569 Removed menu scroller plugin
  SW-8569 Refactored image slider plugin
  SW-8569 Refactored styles of detail page
  SW-8569 Removed buggy image scroller plugin
  SW-8569 Refactored image slider and lightbox plugin
  SW-8569 Refactored template of detail page product information
  SW-8569 Refactored styles of the detail page
  SW-8569 Implemented image zoom plugin
  SW-8569 Removed old image slider plugin
  SW-8569 Refactored tab navigation plugin
  SW-8569 Refactored last seen products plugin
  SW-8569 Refactored detail page templates
  SW-8569 Removed debug code
  SW-8569 Implemented image zoom plugin
  ...
"
e24203eb02e8a3ead332b6ce3ff900449ef750ee,shopware/shopware,"Merge pull request #7130 in SW/shopware from github-prs to 5.5

* commit '8739fce198aea8c9a1fad453540428b876d4a56b': (43 commits)
  NTR - Update UPGRADE.md
  SW-22387 - Update mail template context
  SW-22387 - add product information to sARTICLEAVAILABLE template fixes #1768
  SW-22879 - Make class DeleteResult namespaced in PSR-0 compatible fashion, fixes #1866
  SW-17962 - Fix modalbox plugin when it contains more than one target and target have a sub element
  SW-20399 - Disable document box instead hide
  SW-22554 - Fix migration number
  SW-20583 - Change structured data of blog article to meet the requirements
  SW-20708 - Add typehints
  SW-20708 - removed unused code in controllers fixes #1429
  SW-21536 - Add support for ProductBoxLayout plugin extension
  SW-22843 - Add error flag for billing address department
  SW-21675 - Check if the supplied XML markup is valid, before trying to read its attributes
  SW-22568 - Added endpoint config option to AwsS3v3Factory fixes #1801
  SW-22554 - notifcation attribute and event fixes #1798
  SW-22878 - Add backlog test
  SW-22878 - Fixes table name s_es_backend_backlog
  SW-21675 - Collect width and height for SVG fixes #1641
  SW-21536 - add custom product layout fixes #1608
  SW-22587 - Fix tests
  ...
"
22343c599caa6167c02b595df63b9fa2c610a384,shopware/shopware,"SW-9542 - Move core classes
"
c3abf6a6d005b8b775aa253f4244cdb7e7f0da40,shopware/shopware,"Merge pull request #2353 in SW/shopware from bugfix/next/sw-10838-fix-config-stores to next

* commit '3fa2680525450ec68a452e3926ccdd6caebe66d3':
  SW-10838 - Fix duplicate name parameter in config module stores
"
ae964d2304805349c0adf083db663059d0464ee5,shopware/shopware,"Merge pull request #4389 in SW/shopware from sw-17346/5.3/implement-emotion-listing-visibility to 5.3

* commit '9197b091259316c61810a84390f445d11569de94':
  SW-17346 - Force visibility selection
  SW-17346 - Increase migration number
  SW-17346 - Move visibility filtering into device configuration service
  SW-17346 - Fix listing pagination for ajax reload to use new listing wrapper
  SW-17346 - Add translations and visibility help text
  SW-17346 - Refactor emotion device configuration service and add unit tests
  SW-17346 - Move sidebar to listing wrapper for full screen emotions with listings
  SW-17346 - Implement new listing_visibility emotion configuration
"
0f32ea9e28db3e5a59e51ffd4b24cf316fa457ed,shopware/shopware,"Merge pull request #564 in SW/shopware from feature/next/di-integration to next

* commit '1ee8f248de4af2f4c54d41df1861e2c65e2dda48': (73 commits)
  Remove unused dependency on cache from plugin manager
  Move ResourceLoader to the \Shopware\Components\DependencyInjection namespace.
  Normalize resource names in resource loader.
  Remove resource loading via init-methods on bootstrap. Move into service container.
  Pull Doctrine Common & Doctrine DBAL from composer
  Moved password_compat lib by ircmaxell to composer.
  Rename EntityManager factory method to get rid of php strict error.
  Simplify include path and kernel-boot
  Manage dependency on Symfony Console Component with composer.
  Add explicit entry for Symfony Filesystem Component in composer.json, was pulled as dependency before.
  Remove unused file
  Fix collection event with single values, also update unit test
  Use composer autoloader for whole application namespace due to better performance
  Move service definitions away from config directory to prevent user changes.
  Refactor loading of core classes.
  Titdy up enlight application
  Refactor entity manager initialisation.
  Remove PluginContainer from ResourceLoader.
  Remove dependency on shopware application from testcase
  Refactor HookManager to remove dependency on Application.
  ...
"
e13583f774d1f7c32dfa3f086250a5200da5b9be,sonvister/Binance,"Move user data classes to UserData namespace

"
c00921dbca8f938423356f0b6ac2374b9d7cac4c,sonvister/Binance,"Create TradeCache

Add support for live trade display using TradeCache in sample application (change existing command to 'live aggTrades'). Rename 'CandlesticksCache' to 'CandlestickCache' in all instances. Rename 'AggregateTradesCache' to 'AggregateTradeCache' in all instances."
8f950cd9975ae2fa592f79b5928dd78bb8046c7d,sonvister/Binance,"Add TradeWebSocketClient (existing to AggregateTrade...Client)

Add buyer/seller order ID to Trade class. AggregateTrade no longer extends Trade class. Rename TradeUpdateEventArgs to AccountTradeUpdateEventArgs."
3d9b8529742758b5ee503832d472d2d3bae98761,tensorflow/minigo,"Hotfixes from running-head (#59)

* update hparams for 9s run.  Train size 256, set stepwise decay.  Fix l2 regularization strength

* Extract constants for chunk size and window size.  Cleanup how many chunks we look at.  Log the inverse set of gathered models.

* remove TF warning spam at startup on variable name substitution

* update children_as_pi to always softmax

* add `game_counts` command to rl_loop.  Wrap train in a try/except block.

* fix log message in selfplay.  Change shuffle buffer size to 4M

* add the rl_runner script

* flip the sign on the squash comparator.  Cleanup a comment and autopep fixed my lambda.

* fix game count -- no longer playing 8x batches

* fix tests

* comments

* update the local_rl_loop script to use the new holdout_pct flag, also add a verbosity flag for the train command and extract the shuffle buffer size

* more comments
"
5f7759cdf874b8ffc7bde5b795c351b4c4df9e1a,wrohdewald/Gpxity,"Restructure: Simplify construction of Activity, move more code from specific backends into backend.py

split Backend.add() into add() and rewrite()
"
8be42b2ae3264dd225b1b16cf87dee2c3adaf46b,JiHong88/SunEditor,"modify: context.user -> option, document update
"
c7202fc82163c1f72aa9aceb9c65b0316293ccdd,JiHong88/SunEditor,"update: var -> const + let, remove function copyObj, SUNEDITOR.func -> util
"
c80d3709e5e1ac68b2601fc6de663e6c3007896b,LLK/scratch-blocks,"Merge branch 'develop' into cleanup/scrollbar_complications
"
be889cb7b455be357fa1ee3b94214e2097c9e1c1,LLK/scratch-blocks,"Merge pull request #83 from rachel-fenichel/feature/svg_refactor

Refactor block_svg to share code between horizontal and vertical vers…"
f6aef459fca1c59261814c1723edba0600417cf9,LLK/scratch-blocks,"API-breaking cleanup.  But doubtful anyone will be affected. (#748)

* Make add/removeClass return whether they did anything.
* Move more functions onto utils.
* Move bind functions to Blockly.
* Routine recompile.
"
83abc988a72e5604b280c3ff26a36dfa699d2a7c,LLK/scratch-blocks,"Remove unused changeOutput func.
"
fe09cc9eb24ae6f923c18fb72890046f02a17020,LLK/scratch-blocks,"Merge pull request #359 from rachel-fenichel/cleanup/lint

Lint"
d1f6bdb173915794dd7c43c671a39897bb52792f,LLK/scratch-blocks,"Make Block.getField public.
"
ab7f6d6e7c3dfe11c9293d09b4aa1f61e3ccec2e,LouisCAD/Splitties,"Merge pull request #141 from LouisCAD/renaming-to-views-subpackages

Make Views related splits names and package names more consistent"
93af160c970e36d0e31c64a964a4563a6f464c87,MerryMage/dynarmic,"arm_types: Add FPSCR to Arm::LocationDescriptor and make Arm::LocationDescriptor have a FauxO-like interface
"
57d2c27e57930cc49baa2f0e6866348ee02a125f,Michael2109/cobalt,"Organised and tidied all block classes.
"
743c28248ebab519f499eed5ab8f8b5265be4d81,PRX/Infrastructure,"Rename env var for consistency
"
0b74a003363975d95fc112a5bd5b22f880d3a088,Riverscapes/pyBRAT,"Removed redundant instances of Supporting Functions closes #159
"
fbaebcfead5d44977904d8140aa4299df0c4a9de,SUNET/eduid-webapp,"Rename email_proofing_userdb -> proofing_userdb

Rename verifications_db -> proofing_statedb
"
2876683034cd4bc39a6eb4f685e55b13113356a1,Sometrik/framework,"refactor, implement REMOVE_CHILD
"
e22d5c79f5d3b05502612cc617f5f930840631e9,Sometrik/framework,"remove unnecessary methods
"
b1608eb92fc52083615a3fdc1e9e001b933c9822,Sometrik/framework,"refactor setImage() method
"
ee8f52e6bbbb68f02a8a6dab19ff734bd97e2e0f,Sometrik/framework,Refactor NativeMessage to NativeCommand fix #58
765173f79851ecb1f16627d1f9241b75acbeb0fb,Sometrik/framework,Add missing and clean up imports
28781971aa5fd64d0b28611d8761b7d7e241b5d0,Symantec/Dominator,"Disable scanner during Fetch(), Update() and Cleanup() RPCs.
"
f816c96ff0432751784b5580265da1b87e98a482,TzuChieh/Photon-v2,"[refactor] templatized Quaternion & Matrix4f with real number literal

Signed-off-by: T.C. Chang <971844b6dc281af76317f12a0ae8c1e3abb2b136@ntu.edu.tw>
"
135a2cf3076f4899234f6b69d87f97c667308210,TzuChieh/Photon-v2,"kdtree construction now utilizes tri-aabb intersection test for better performance

Signed-off-by: T.C. Chang <971844b6dc281af76317f12a0ae8c1e3abb2b136@ntu.edu.tw>
"
a3d57021a4106da8147370b818dbb8bc68e289cb,TzuChieh/Photon-v2,"[refactor] slightly better light cooking procedures
"
ad0b15ac1c357b32b3418d8dd2afc33f9ec5d78b,adrian-lang/adrian,"Refactor inference and apply new view of astlib
"
05027f162d793204fe05ee09c3a9307bfd7fa69a,ampproject/amphtml,"Infrastructure for dynamically loading A4A validation keys (#5091)

* Update amp-ad-network-doubleclick-impl.md

* Reverting doc changes

The previous change was made in error (wrong branch).

* Clean up dynamic key loading.

* Fix test, accounting for renaming.

* Fixed unit tests for amp-a4a and crypto-verifier.

* Removed debug statement, and changed name of key set url from 'ampproject' to 'google'.

* Changed visibility of getSigningServiceNames to public.

* Clean up dynamic key loading.

* Fix test, accounting for renaming.

* Fixed unit tests for amp-a4a and crypto-verifier.

* Removed debug statement, and changed name of key set url from 'ampproject' to 'google'.

* Changed visibility of getSigningServiceNames to public.

* Clean up dynamic key loading.

* Fix test, accounting for renaming.

* Fixed unit tests for amp-a4a and crypto-verifier.

* Removed debug statement, and changed name of key set url from 'ampproject' to 'google'.

* Changed visibility of getSigningServiceNames to public.

* Clean up dynamic key loading.

* Fixed unit tests for amp-a4a and crypto-verifier.

* Removed debug statement, and changed name of key set url from 'ampproject' to 'google'.

* Fixed issues left over from merge.

* Fixed type and lint issues.

* Minor fixes and restructuring as suggested in feedback.

* Reverted to using Uint16 instead of Uint8 in bytes.js.

* Removed need to convert from string to ArrayBuffer.

* Removed typehints, unneeded else blocks, and broke up ternary op.

* Replaced unneeded promise with just null.

* Yet another unneeded Promise removed.

* Fixed spacing issues, removed unneeded return, and moved typehints.

* Removed more annotations.

* Removed all type hints, and another unneeded Promise.

* Fixed indentation, changed throw to promise reject, and added tests for utf8 en/de-coding.

* Fixed lint issues.

* Making use of  function for resolving nested promises in signature verification step.

* Fixed type annotation, and replaced any with some function.

* Removed unneeded newline.

* Addressing feedback.

* Updated amp-ad-network-fake-impl import.
"
4648595b98fa61ea23f0f447cf062560a4e95729,ampproject/amphtml,":sparkles: Build replaceURL from inbound parameter instead of viewer messaging. (#15368)

* Remove replaceUrl message, switch to amp_r parameter.

* Retain messaging support, add additional substitution.

* Move replace URL to docinfo; expect absolute url.

* Lint and bug fixes.

* Move fallback to DocInfo to separate concerns.

* Remove replace URL check in impression.js

* Improved naming and added note about caching source URL.

* Initial refactoring of replace URL param support.

* Revert viewer impl

* Fixes and lint. Preparing to add tests.

* Fix lint / types.

* Tests and slight updates

* Fix tests and prepare for merge

* Cleanup and prepare for merge

* Optional fixes + bump bundlesize

* Fix lint
"
ede7006a50e4d02257070297bb211a3c77f83bf1,ampproject/amphtml,"Adds method to allow implementing networks to execute custom reset logic. (#8774)

* Added public method to AmpA4a that is called within unlayoutCallback, to allow implementing networks to perform custom reset logic.

* Fixed duplicate expectations.

* Removed unused import.

* Reverting to overriding unlayoutCallback.

* Fixed doubleclick test.

* Forgot to call super.unlayoutCallback()...

* Iframe removed through parentElement; actually removing ampAnalyticsConfig, rather than just nulling it out.

* Realized that ampAnalyticsConfig != amp analytics element.

* Added asserts and extra checks.

* Lint fix.

* Assert shuffle.

* Using removeElement.
"
f95b6789a9380616a21551c9966385c8a7aae8db,ampproject/amphtml,"Merge pull request #239 from erwinmombay/gulp-unit-watch

refactor(gulp): refactor unit task to add flags"
56257de60b9d2d432e3078fe92b4c094bbdfad7a,ampproject/amphtml,"Amp-Ad Fast Fetch: make nameframe default xdomain render method (#14499)

* Fast Fetch: make nameframe default xdomain render method

* backout unrelated error->warn changes

* backout unrelated error->warn changes

* PR feedback

* PR feedback

* update dep-check to allow default url construction

* lint failure

* fix test failure

* remove console log
"
97c75fe6fd0a2f751b181e0d0dfc06d73f4557cf,ampproject/amphtml,"Separate out implementaton of document-info and remove dependency of … (#5864)

Together this improves code size for `3p-frame` based and some other extensions.

Part of #5792"
1db8835aa056993e06e6cde012860c835a542e2e,ampproject/amphtml,"Remove the soon-to-be-deprecated gulp-util (#12825)

"
36fe72c96317991cd86886f8ddd970036d2aa229,ampproject/amphtml,"Change (deprecated) KeyboardEvent.keyCode -> KeyboardEvent.key (#18530)

* Change KeyboardEvent.keyCode -> KeyboardEvent.key

* Linter issues

* Change KeyCodes enum to be strings

* which fix
"
accd6ebaf7d673669daf65e84ccca11f679152ba,ampproject/amphtml,"Implementing amp-playbuzz extension (#6106) (#6351)

* Implementing amp-playbuzz extension (#6106)

* Improved current implementation of amp-playbuzz

* Fixed height issue

* Fixed CR issues for amp-playbuzz

* Change amp-playbuzz height + homemade overflow button (#6106)

* Fixed origin issue

* Fixed Height bug + Origin Check

* Updated validation files + unlisteners array

* Fixed scrolling events before overflow bug

* Fixed placeholder strech height bug

* Fixed scroll data + layout support + slow preconnect

* Removed debouncing from OnChange to receive all events
"
f88bf6cd6df0c6de7d00702a73eab4fd197438bd,ampproject/amphtml,"Consent API introduce UNKNOWN & IGNORED state (#14508)

* add unknown ignored state

* remove unused code

* rename

* v0 size
"
6f2313da609e2edec6cc8eef65398e6811ba1a65,benkuper/Chataigne,OnActivate / OnDeactivate refactor  and Action/MappingUI improvements
e4e379c032bf14e2825c9bb4baaa0d791f6ba873,benkuper/Chataigne,"Mapping refactor
MappingEditor + Filter Editor
CurveMap WIP
TODO : Automation custom inspector // Inspector keep prev Editor on select
"
b81bfa409251184826a3dcf660236faa7fd4ddda,dan-cristian/haiot,"refactor sensor modules
"
a6283d73245767acf173a54e503548af355f6b35,danliris/dl-module,"update method split
"
99e9b028a6e8914127fd0fc51ea6cb62c8f30496,davidmerfield/Blot,"Merge branch 'master' of https://github.com/davidmerfield/blot into git-refactor
"
e83dbfb230e18748504ac58bb1a52e0ef2953e66,digimezzo/Dopamine,"Slightly simplified the collection check
"
08b9c4e52461e9f9eb0b9c867841aa87d8cb8b01,digimezzo/Dopamine,"CLeaned up playlist code
"
9535fff97b38c1f872103a9a82e64f0db38a33ca,digimezzo/Dopamine,"Cleaned up some indexing strangeness
"
f76fdc2f6b2a592fade71f0a93486e513a9cd4f8,dwavesystems/dimod,"0.2.0

* implemented composition for spin variables, no docs yet

* broke everything but now better documented

* sped up ising_to_qubo

* sped up qubo_to_ising

* fixed important bug where data field was replicated

* composition version implemented, might try decorator now...

* layer -> composite

* dynamic inheritance to instantiated object wrapping

* added to unittests

* install instructions include pip

* docstrings and html stuff, not complete

* first pass finished documentation for spin_transform

* clean up, unittest update

* finished first draft documentation

* updated ignore

* changed generic sampler test name so it hopefully does not get caught by pytest

* removed unnecessary import

* samples -> num_samples

* removed structured_ising and structured_qubo methods, added composite functionality

* Added Travis CI status badge to README

* sublime in .gitignore

* removing structure

* building on travis and appveyor for pypi

* changed install

* reverted. added using pip to install

* changed order

* Update .travis.yml

changed test runner

* added deployment details for deployment to pypi

* added deployment details for deployment to pypi

* Merge branch 'master' of https://github.com/oneklc/dimod

* added linux and mac os testing

* fixed order

* added appveyor.yml from demo

* modified to work with our build process

* testing a hunch

* hunch number 2

* osx fixes for travis-ci

* fixes for mac builds

* fixed pip install

* made executable

* more updates for osx testing

* fix for python 2.7

* changed pypi user

* more fixes for python2 on mac

* clean up

* clean up

* added appveyor helper scripts

* added appveyor helper scripts

* typo fix

* installing/upgrading setuptools and wheel in python env

* removed previous fail. installing/upgrading setuptools and wheel in python env

* removing ci support for python 2.6

* added wheel to travis pypi build

* does not support python 2.7.0

* removed structured methods with references

* updated documenation to reflect removal of structured methods

* removed structured, changed the way the structure property was added and added inits to the example samplers
"
ef6a29070d822e6b35d6b978d2f070f8a5854b30,emacs-mirror/emacs,"shr.el (shr-tag-color-check): Convert colors to hexadecimal with shr-color->hexadecimal.
shr-color.el (shr-color->hexadecimal): Add converting functions for RGB() or HSL() color representation.
shr.el (shr-tag-font): Add.
 (shr-tag-color-check): New function to get better colors.
 (shr-tag-insert-color-overlay): Factorize code between tag-font and tag-span.
shr-color.el: New file.
color-lab.el: New file.
"
7e3ab3026e9b0f783b8aacead1fad668c792e8ab,emacs-mirror/emacs,"* lisp.h (GCPRO1_VAR, UNGCPRO_VAR): New macros,

so that the caller can use some name other than gcpro1.
(GCPRO1, UNGCPRO): Reimplement in terms of the new macros.
(Fx_create_frame, x_create_tip_frame, Fx_show_tip):
(Fx_backspace_delete_keys_p): Rename locals to avoid shadowing.
Some of these renamings use the new GCPRO1_VAR and UNGCPRO_VAR
macros.
"
b3bf18b3b87ac8f00857b8bfc3f2c74cf0e2fb7d,emacs-mirror/emacs,"Use SAFE_ALLOCA etc. to avoid unbounded stack allocation.

This follows up on the recent thread in emacs-devel on alloca; see:
http://lists.gnu.org/archive/html/emacs-devel/2014-09/msg00042.html
This patch also cleans up alloca-related glitches noted while
examining the code looking for unbounded alloca.
* alloc.c (listn):
* callproc.c (init_callproc):
Rewrite to avoid need for alloca.
* buffer.c (mouse_face_overlay_overlaps)
(report_overlay_modification):
* buffer.h (GET_OVERLAYS_AT):
* coding.c (make_subsidiaries):
* doc.c (Fsnarf_documentation):
* editfns.c (Fuser_full_name):
* fileio.c (Ffile_name_directory, Fexpand_file_name)
(search_embedded_absfilename, Fsubstitute_in_file_name):
* fns.c (Fmake_hash_table):
* font.c (font_vconcat_entity_vectors, font_update_drivers):
* fontset.c (fontset_pattern_regexp, Ffontset_info):
* frame.c (Fmake_terminal_frame, x_set_frame_parameters)
(xrdb_get_resource, x_get_resource_string):
* ftfont.c (ftfont_get_charset, ftfont_check_otf, ftfont_drive_otf):
* ftxfont.c (ftxfont_draw):
* image.c (xbm_load, xpm_load, jpeg_load_body):
* keyboard.c (echo_add_key, menu_bar_items, tool_bar_items):
* keymap.c (Fdescribe_buffer_bindings, describe_map):
* lread.c (openp):
* menu.c (digest_single_submenu, find_and_call_menu_selection)
(find_and_return_menu_selection):
* print.c (PRINTFINISH):
* process.c (Fformat_network_address):
* scroll.c (do_scrolling, do_direct_scrolling, scrolling_1):
* search.c (search_buffer, Fmatch_data, Fregexp_quote):
* sound.c (wav_play, au_play):
* syntax.c (skip_chars):
* term.c (tty_menu_activate, tty_menu_show):
* textprop.c (get_char_property_and_overlay):
* window.c (Fset_window_configuration):
* xdisp.c (safe__call, next_overlay_change, vmessage)
(compute_overhangs_and_x, draw_glyphs, note_mouse_highlight):
* xfaces.c (face_at_buffer_position):
* xmenu.c (x_menu_show):
Use SAFE_ALLOCA etc. instead of plain alloca, since the
allocation size isn't bounded.
* callint.c (Fcall_interactively): Redo memory_full check
so that it can be done at compile-time on some platforms.
* coding.c (MAX_LOOKUP_MAX): New constant.
(get_translation_table): Use it.
* callproc.c (call_process): Use SAFE_NALLOCA instead of
SAFE_ALLOCA, to catch integer overflows on size calculation.
(exec_failed) [!DOS_NT]: New function.
(child_setup) [!DOS_NT]: Use it.
* editfns.c (Ftranspose_regions):
Hoist USE_SAFE_ALLOC + SAFE_FREE out of 'if'.
* editfns.c (check_translation):
Allocate larger buffers on the heap.
* eval.c (internal_lisp_condition_case):
Check for MAX_ALLOCA overflow.
* fns.c (sort_vector): Use SAFE_ALLOCA_LISP rather than Fmake_vector.
(Fbase64_encode_region, Fbase64_decode_region):
Avoid unnecessary calls to SAFE_FREE before 'error'.
* buffer.c (mouse_face_overlay_overlaps):
* editfns.c (Fget_pos_property, check_translation):
* eval.c (Ffuncall):
* font.c (font_unparse_xlfd, font_find_for_lface):
* ftfont.c (ftfont_drive_otf):
* keyboard.c (echo_add_key, read_decoded_event_from_main_queue)
(menu_bar_items, tool_bar_items):
* sound.c (Fplay_sound_internal):
* xdisp.c (load_overlay_strings, dump_glyph_row):
Use an ordinary auto buffer rather than alloca, since the
allocation size is fixed and small.
* ftfont.c: Include <c-strcase.h>.
(matching_prefix): New function.
(get_adstyle_property): Use it, to avoid need for alloca.
* keyboard.c (echo_add_key):
* keymap.c (describe_map): Use ptrdiff_t, not int.
* keyboard.c (echo_add_key): Prefer sizeof to strlen.
* keymap.c (Fdescribe_buffer_bindings): Use SBYTES, not SCHARS,
when counting bytes.
* lisp.h (xlispstrdupa): Remove, replacing with ...
(SAFE_ALLOCA_STRING): ... new macro with different API.
This fixes a portability problem, namely, alloca result
passed to another function.  All uses changed.
(SAFE_ALLOCA, SAFE_ALLOCA_LISP): Check for MAX_ALLOCA,
not MAX_ALLOCA - 1.
* regex.c (REGEX_USE_SAFE_ALLOCA, REGEX_SAFE_FREE)
(REGEX_ALLOCATE): New macros.
(REGEX_REALLOCATE, REGEX_ALLOCATE_STACK, REGEX_REALLOCATE_STACK)
(REGEX_FREE_STACK, FREE_VARIABLES, re_match_2_internal):
Use them.
* xdisp.c (message3): Use SAFE_ALLOCA_STRING rather than doing it
by hand.
(decode_mode_spec_coding): Store directly into buf rather than
into an alloca temporary and copying the temporary to the buf.

Fixes: debbugs:18410
"
d614e4a8cd2d5fe37b38bb4d8191013a7d917731,emacs-mirror/emacs,"Turn misc objects into pseudovectors

Eliminate the category of miscellaneous objects, and turn all
such objects into pseudovectors.  The immediate motivation
for this change is to free up an enum Lisp_Type tag value, a
scarce resource that can be better used elsewhere.  However,
this change is worthwhile in its own right, as it improves
performance slightly on my platform, 0.3% faster for 'make
compile-always' on Fedora 28, and it simplifies the garbage
collector and interpreter (Bug#32405).
* doc/lispref/internals.texi (Garbage Collection):
* etc/NEWS:
Document change to garbage-collect return value.
* src/alloc.c (total_markers, total_free_markers):
(union aligned_Lisp_Misc, MARKER_BLOCK_SIZE)
(struct marker_block, marker_block, marker_block_index)
(misc_free_list, allocate_misc, live_misc_holding)
(live_misc_p, sweep_misc):
* src/lisp.h (lisp_h_MARKERP, lisp_h_MISCP, MARKERP, MISCP)
(Lisp_Misc, enum Lisp_Misc_Type, Lisp_Misc_Free)
(Lisp_Misc_Marker, Lisp_Misc_Overlay, Lisp_Misc_Finalizer)
(Lisp_Misc_Ptr, Lisp_Misc_User_Ptr, Lisp_Misc_Limit)
(Lisp_Misc_Bignum)
(XSETMISC, struct Lisp_Misc_Any, XMISCANY, XMISCTYPE)
(struct Lisp_Free, union Lisp_Misc, XMISC):
Remove.  All uses removed.
(cleanup_vector): Clean up objects that were formerly misc
and are now pseudovectors.
(make_misc_ptr, build_overlay, Fmake_marker, build_marker)
(make_bignum_str, make_number, make_pure_bignum)
(make_user_ptr, Fmake_finalizer):
Build as pseudovectors, not as misc objects.
(mark_finalizer_list, queue_doomed_finalizers)
(compact_undo_list, mark_overlay, mark_object)
(unchain_dead_markers):
Mark as vector-like objects, not as misc objects.
(mark_maybe_object, mark_maybe_pointer, valid_lisp_object_p)
(total_bytes_of_live_objects, survives_gc_p):
* src/fns.c (sxhash):
No need to worry about misc objects.
(garbage_collect_1): Do not generate a 'misc' component.
(syms_of_alloc): No need for 'misc' symbol.
* src/buffer.c (overlays_at, overlays_in, overlay_touches_p)
(overlay_strings, recenter_overlay_lists)
(fix_start_end_in_overlays, fix_overlays_before)
(Foverlay_lists, report_overlay_modification)
(evaporate_overlays):
* src/editfns.c (overlays_around):
* src/data.c (Ftype_of):
* src/fns.c (internal_equal):
* src/lisp.h (mint_ptrp, xmint_pointer, FINALIZERP)
(XFINALIZER, MARKERP, XMARKER, OVERLAYP, XOVERLAY, USER_PTRP)
(XUSER_PTR, BIGNUMP, XBIGNUM):
* src/print.c (print_vectorlike, print_object):
* src/undo.c (record_marker_adjustments):
* src/xdisp.c (load_overlay_strings):
Formerly misc objects are now pseudovectors.
* src/lisp.h (PVEC_MARKER, PVEC_OVERLAY, PVEC_FINALIZER)
(PVEC_BIGNUM, PVEC_MISC_PTR, PVEC_USER_PTR):
New constants, replacing their misc versions.  All uses changed.
(struct Lisp_Marker, struct Lisp_Overlay, struct Lisp_Misc_Ptr)
(struct Lisp_Bignum, struct Lisp_User_Ptr, struct Lisp_Finalizer):
Make usable as a pseudovector by using a pseudovector header,
replacing any DIY components, and putting Lisp_Object members
first.  All uses changed.
"
31f6e939334180add7bc11240343615a2e6350f6,emacs-mirror/emacs,"Support rectangular regions for more commands

* lisp/simple.el (region-extract-function): Handle the arg value ‘bounds’.
(region-insert-function): New function.
(shell-command-on-region): Add arg ‘region-noncontiguous-p’.
If non-nil, operate on multiple chunks.
(region-noncontiguous-p): New function.

* lisp/rect.el: Add function rectangle--insert-region
around region-insert-function.
(extract-rectangle-bounds): New function.
(rectangle--extract-region): Handle the arg value ‘bounds’.
(rectangle--insert-region): New function.

* lisp/emulation/cua-rect.el: Add function cua--insert-rectangle
around region-insert-function.
(cua--extract-rectangle-bounds): New function.
(cua--rectangle-region-extract): Handle the arg value ‘bounds’.

* lisp/replace.el (query-replace, query-replace-regexp): Add arg
‘region-noncontiguous-p’.  Use ‘use-region-p’.
(query-replace-regexp-eval, map-query-replace-regexp)
(replace-string, replace-regexp): Use ‘use-region-p’.
(keep-lines, flush-lines, how-many): Use ‘use-region-p’.
(perform-replace): Add arg ‘region-noncontiguous-p’.
If non-nil, operate on multiple chunks.

* src/casefiddle.c (Fdowncase_region): Add arg ‘region-noncontiguous-p’.
If non-nil, operate on multiple chunks. (Bug#19829)
"
7ea369e5f22d6e3bcf1e55225c0ff356d9cabb2e,emacs-mirror/emacs,"Tweak integer division

* src/data.c (arith_driver): Reorder to remove unnecessary
FIXNUMP.  Tighten test for whether to convert the divisor from
fixnum to mpz_t.  Simplify.
"
e6cfa098ae23e34c5415642e2f848a92982924ef,emacs-mirror/emacs,"Introduce global-eldoc-mode.  Move Elisp-specific code to elisp-mode.el.
* lisp/emacs-lisp/eldoc.el (global-eldoc-mode): New minor mode.
(eldoc-schedule-timer): Obey it.
(eldoc-documentation-function): Default to nil.
(eldoc-mode): Don't enable if eldoc-documentation-function is not set.
(eldoc-documentation-function-default, eldoc-get-fnsym-args-string)
(eldoc-highlight-function-argument, eldoc-get-var-docstring)
(eldoc-last-data-store, eldoc-docstring-first-line)
(eldoc-docstring-format-sym-doc, eldoc-fnsym-in-current-sexp)
(eldoc-beginning-of-sexp, eldoc-current-symbol)
(eldoc-function-argstring): Move to elisp-mode.el.
(eldoc-symbol-function): Remove, unused.
* lisp/progmodes/elisp-mode.el: New file.  Rename all ""eldoc-*"" to ""elisp--*"".
(elisp-completion-at-point): Rename from lisp-completion-at-point.
(elisp--preceding-sexp): Rename from preceding-sexp.
* lisp/loadup.el: Load new file progmodes/elisp-mode.
* lisp/ielm.el (inferior-emacs-lisp-mode): Set eldoc-documentation-function.
* lisp/emacs-lisp/lisp.el (lisp--local-variables-1, lisp--local-variables)
(lisp--local-variables-completion-table, lisp--expect-function-p)
(lisp--form-quoted-p, lisp--company-doc-buffer)
(lisp--company-doc-string, lisp--company-location)
(lisp-completion-at-point): Move to elisp-mode.el.
* lisp/emacs-lisp/lisp-mode.el (lisp--mode-syntax-table): New syntax-table,
extracted from emacs-lisp-mode-syntax-table.
(emacs-lisp-mode-abbrev-table, emacs-lisp-mode-syntax-table): Move to
elisp-mode.el.
(lisp-imenu-generic-expression): Add comments to document what comes
from which Lisp dialect.
(emacs-lisp-mode-map, emacs-lisp-byte-compile)
(emacs-lisp-byte-compile-and-load, emacs-lisp-mode-hook)
(emacs-lisp-mode, emacs-list-byte-code-comment-re)
(emacs-lisp-byte-code-comment)
(emacs-lisp-byte-code-syntax-propertize, emacs-lisp-byte-code-mode)
(lisp-interaction-mode-map, lisp-interaction-mode)
(eval-print-last-sexp, last-sexp-setup-props)
(last-sexp-toggle-display, prin1-char, preceding-sexp)
(eval-last-sexp-1, eval-last-sexp-print-value)
(eval-last-sexp-fake-value, eval-sexp-add-defvars, eval-last-sexp)
(eval-defun-1, eval-defun-2, eval-defun): Move to elisp-mode.el.
* src/lisp.mk (lisp): Add elisp-mode.elc.
"
6ba72723bbb8bfe644bb67137aa1b9483dbe9ee4,emacs-mirror/emacs,"(with_ns): Remove dead code, since OPTION_DEFAULT_OFF means never unset.
"
2d6b6005bcf3cc4ece90c0d19a645ca3ae1940ea,emacs-mirror/emacs,"* lisp/window.el (window--pixel-to-total): Remove unused `mini' var.
(maximize-window, minimize-window): Remove unused `pixelwise' arg.
(split-window): Remove unused `new' var.
(window--display-buffer): Remove unused `frame' and `delta' vars.
(fit-window-to-buffer): Remove unused vars `frame', `display-height',
and display-width'.
"
ba93a18774352c97d6dd73c73141cbff6305581b,emacs-mirror/emacs,"Remove obsolete '#define static' cruft.

* etc/PROBLEMS: Remove obsolete '#define static' cruft.
* lwlib/xlwmenu.c [emacs]: Include ""bitmaps/gray.xbm"".
(gray_bitmap_width, gray_bitmap_height, gray_bitmap_bits) [!emacs]:
Remove; all uses replaced with definiens.
* src/s/hpux10-20.h (_FILE_OFFSET_BITS): Don't #undef.
This #undef was ""temporary"" in 2000; it is no longer needed
now that '#define static' has gone away.
* src/xfns.c, src/xterm.h (gray_bitmap_width, gray_bitmap_height)
(gray_bitmap_bits): Remove; no longer needed.
All uses replaced with definiens.
* src/xterm.c: Include ""bitmaps/gray.xbm"".
"
ff8c9764201440d24f928d864235d66263b6ed2f,emacs-mirror/emacs,"* lisp/progmodes/ruby-mode.el (ruby-accurate-end-of-block): When
`ruby-use-smie' is t, use `smie-forward-sexp' instead of
`ruby-parse-partial'.

Fixes: debbugs:16078
"
38182d901d030c7d65f4aa7a49b583afb30eb9b7,emacs-mirror/emacs,"More xmalloc and related cleanup.

* alloc.c, bidi.c, buffer.c, buffer.h, bytecode.c, callint.c:
* callproc.c, charset.c, coding.c, composite.c, data.c, dispnew.c:
* doc.c, editfns.c, emacs.c, eval.c, fileio.c, filelock.c, fns.c:
* font.c, fontset.c, frame.c, fringe.c, ftfont.c, ftxfont.c, gmalloc.c:
* gtkutil.c, image.c, keyboard.c, keymap.c, lread.c, macros.c, menu.c:
* nsfns.m, nsfont.m, nsmenu.m, nsterm.m, print.c, process.c, ralloc.c:
* regex.c, region-cache.c, scroll.c, search.c, sound.c, syntax.c:
* sysdep.c, term.c, termcap.c, unexmacosx.c, window.c, xdisp.c:
* xfaces.c, xfns.c, xftfont.c, xgselect.c, xmenu.c, xrdb.c, xselect.c:
* xterm.c:
Omit needless casts involving void * pointers and allocation.
Prefer ""P = xmalloc (sizeof *P)"" to ""P = xmalloc (sizeof (TYPE_OF_P))"",
as the former is more robust if P's type is changed.
Prefer xzalloc to xmalloc + memset 0.
Simplify malloc-or-realloc to realloc.
Don't worry about xmalloc returning a null pointer.
Prefer xstrdup to xmalloc + strcpy.
* editfns.c (Fmessage_box): Grow message_text by at least 80 when
growing it.
* keyboard.c (apply_modifiers_uncached): Prefer local array to
alloca of a constant.
"
ec6ad6f20a885e8a87f31c4fd2c76d470ae61d12,emacs-mirror/emacs,"calc/README:  Add mention of logarithmic units.
calc/calc-help.el (calc-logunits-add): Rename from `calc-logunits-plus'.
(calc-logunits-sub): Rename from `calc-logunits-minus'.
(calc-logunits-mul): Rename from `calc-logunits-times'.
(calcFunc-lupoweradd): Rename from `calcFunc-lupowerplus'.
(calcFunc-lupowersub): Rename from `calcFunc-lupowerminus'.
(calcFunc-lupowermul): Rename from `calcFunc-lupowertimes'.
calc/calc-ext.el (calc-init-extensions): Change names of logarithmic
unit functions in autoloads.
"
652dabfff6f99631f8f3d6c3a658f0b8895d48b0,emacs-mirror/emacs,"emacsclient: fix child exit when exec fails

* lib-src/emacsclient.c (start_daemon_and_retry_set_socket):
If the execvp of Emacs fails exit instead of having the child
run on and do the work of the parent.  Coalesce duplicate code.
"
0bb2392728c10748f3376f8cef6d9ca53e29f464,emacs-mirror/emacs,"Support bidi reordering of overlay and display strings.
Fix bugs #7616, #8133, #8867.

 src/xdisp.c (compute_display_string_pos)
 (compute_display_string_end): Accept additional argument STRING.
 (init_iterator, reseat_1): Initialize bidi_it->string.s to NULL.
 (reseat_to_string): Initialize bidi_it->string.s and
 bidi_it->string.schars.
 (Fcurrent_bidi_paragraph_direction): Initialize itb.string.s to
 NULL (avoids a crash in bidi_paragraph_init).  Initialize
 itb.string.lstring.
 (init_iterator): Call bidi_init_it only of a valid
 buffer position was specified.  Initialize paragraph_embedding to
 L2R.
 (reseat_to_string): Initialize the bidi iterator.
 (display_string): If we need to ignore text properties of
 LISP_STRING, set IT->stop_charpos to IT->end_charpos.  (The
 original value of -1 will not work with bidi.)
 (compute_display_string_pos): First arg is now struct
 `text_pos *'; all callers changed.  Support display properties on
 Lisp strings.
 (compute_display_string_end): Support display properties on Lisp
 strings.
 (init_iterator, reseat_1, reseat_to_string): Initialize the
 string.bufpos member to 0 (zero, for compatibility with IT_CHARPOS
 when iterating on a string not from display properties).
 (compute_display_string_pos, compute_display_string_end): Fix
 calculation of the object to scan.  Fixes an error when using
 arrow keys.
 (next_element_from_buffer): Don't abort when IT_CHARPOS is before
 base_level_stop; instead, set base_level_stop to BEGV.  Fixes
 crashes in vertical-motion.
 (next_element_from_buffer): Improve commentary for when
 the iterator is before prev_stop.
 (init_iterator): Initialize bidi_p from the default value of
 bidi-display-reordering, not from buffer-local value.  Use the
 buffer-local value only if initializing for buffer iteration.
 (handle_invisible_prop): Support invisible properties on strings
 that are being bidi-reordered.
 (set_iterator_to_next): Support bidi reordering of C strings and
 Lisp strings.
 (next_element_from_string): Support bidi reordering of Lisp
 strings.
 (handle_stop_backwards): Support Lisp strings as well.
 (display_string): Support display of R2L glyph rows.  Use
 IT_STRING_CHARPOS when displaying from a Lisp string.
 (init_iterator): Don't initialize it->bidi_p for strings
 here.
 (reseat_to_string): Initialize it->bidi_p for strings here.
 (next_element_from_string, next_element_from_c_string)
 (next_element_from_buffer): Add xassert's for correspondence
 between IT's object being iterated and it->bidi_it.string
 structure.
 (face_before_or_after_it_pos): Support bidi iteration.
 (next_element_from_c_string): Handle the case of the first string
 character that is not the first one in the visual order.
 (get_visually_first_element): New function, refactored from common
 parts of next_element_from_buffer, next_element_from_string, and
 next_element_from_c_string.
 (tool_bar_lines_needed, redisplay_tool_bar)
 (display_menu_bar): Force left-to-right direction.  Add a FIXME
 comment for making that be controlled by a user option.
 (push_it, pop_it): Save and restore the state of the
 bidi iterator.  Save and restore the bidi_p flag.
 (pop_it): Iterate out of display property for string iteration as
 well.
 (iterate_out_of_display_property): Support iteration over strings.
 (handle_single_display_spec): Set up it->bidi_it for iteration
 over a display string, and call bidi_init_it.
 (handle_single_display_spec, next_overlay_string)
 (get_overlay_strings_1, push_display_prop): Set up the bidi
 iterator for displaying display or overlay strings.
 (forward_to_next_line_start): Don't use the shortcut if
 bidi-iterating.
 (back_to_previous_visible_line_start): If handle_display_prop
 pushed the iterator stack, restore the internal state of the bidi
 iterator by calling bidi_pop_it same number of times.
 (reseat_at_next_visible_line_start): If ON_NEWLINE_P is non-zero,
 and we are bidi-iterating, don't decrement the iterator position;
 instead, set the first_elt flag in the bidi iterator, to produce
 the same effect.
 (reseat_1): Remove redundant setting of string_from_display_prop_p.
 (push_display_prop): xassert that we are iterating a buffer.
 (push_it, pop_it): Save and restore paragraph_embedding member.
 (handle_single_display_spec, next_overlay_string)
 (get_overlay_strings_1, reseat_1, reseat_to_string)
 (push_display_prop): Set up the `unibyte' member of bidi_it.string
 correctly.  Don't assume unibyte strings are not bidi-reordered.
 (compute_display_string_pos)
 (compute_display_string_end): Fix handling the case of C string.
 (push_it, pop_it): Save and restore from_disp_prop_p.
 (handle_single_display_spec, push_display_prop): Set the
 from_disp_prop_p flag.
 (get_overlay_strings_1): Reset the from_disp_prop_p flag.
 (pop_it): Call iterate_out_of_display_property only if we are
 popping after iteration over a string that came from a display
 property.  Fix a typo in popping stretch info.  Add an assertion
 for verifying that the iterator position is in sync with the bidi
 iterator.
 (handle_single_display_spec, get_overlay_strings_1)
 (push_display_prop): Fix initialization of paragraph direction for
 string when that of the parent object is not yet determined.
 (reseat_1): Call bidi_init_it to resync the bidi
 iterator with IT's position.  (Bug#7616)
 (find_row_edges): If ROW->start.pos gives position
 smaller than min_pos, use it as ROW->minpos.  (Bug#7616)
 (handle_stop, back_to_previous_visible_line_start, reseat_1):
 Reset the from_disp_prop_p flag.
 (SAVE_IT, RESTORE_IT): New macros.
 (pos_visible_p, face_before_or_after_it_pos)
 (back_to_previous_visible_line_start)
 (move_it_in_display_line_to, move_it_in_display_line)
 (move_it_to, move_it_vertically_backward, move_it_by_lines)
 (try_scrolling, redisplay_window, display_line): Use them when
 saving a temporary copy of the iterator and restoring it back.
 (back_to_previous_visible_line_start, reseat_1)
 (init_iterator): Empty the bidi cache ""stack"".
 (move_it_in_display_line_to): If iterator ended up at
 EOL, but we never saw any buffer positions smaller than
 to_charpos, return MOVE_POS_MATCH_OR_ZV.  Fixes vertical cursor
 motion in bidi-reordered lines.
 (move_it_in_display_line_to): Record prev_method and prev_pos
 immediately before the call to set_iterator_to_next.  Fixes cursor
 motion in bidi-reordered lines with stretch glyphs and strings
 displayed in margins.  (Bug#8133) (Bug#8867)
 Return MOVE_POS_MATCH_OR_ZV only if iterator position is past
 TO_CHARPOS.
 (pos_visible_p): Support positions in bidi-reordered lines.  Save
 and restore bidi cache.
 src/bidi.c (bidi_level_of_next_char): clen should be EMACS_NT, not int.
 (bidi_paragraph_info): Delete unused struct.
 (bidi_cache_idx, bidi_cache_last_idx): Declare EMACS_INT.
 (bidi_cache_start): New variable.
 (bidi_cache_reset): Reset bidi_cache_idx to bidi_cache_start, not
 to zero.
 (bidi_cache_fetch_state, bidi_cache_search)
 (bidi_cache_find_level_change, bidi_cache_iterator_state)
 (bidi_cache_find, bidi_peek_at_next_level)
 (bidi_level_of_next_char, bidi_find_other_level_edge)
 (bidi_move_to_visually_next): Compare cache index with
 bidi_cache_start rather than with zero.
 (bidi_fetch_char): Accept new argument STRING; all callers
 changed.  Support iteration over a string.  Support strings with
 display properties.  Support unibyte strings.  Fix the type of
 `len' according to what STRING_CHAR_AND_LENGTH expects.
 (bidi_paragraph_init, bidi_resolve_explicit_1)
 (bidi_resolve_explicit, bidi_resolve_weak)
 (bidi_level_of_next_char, bidi_move_to_visually_next): Support
 iteration over a string.
 (bidi_set_sor_type, bidi_resolve_explicit_1)
 (bidi_resolve_explicit, bidi_type_of_next_char): ignore_bn_limit
 can now be zero (for strings); special values 0 and -1 were
 changed to -1 and -2, respectively.
 (bidi_char_at_pos): New function.
 (bidi_paragraph_init, bidi_resolve_explicit, bidi_resolve_weak):
 Call it instead of FETCH_MULTIBYTE_CHAR.
 (bidi_move_to_visually_next): Abort if charpos or bytepos were not
 initialized to valid values.
 (bidi_init_it): Don't initialize charpos and bytepos with invalid
 values.
 (bidi_level_of_next_char): Allow the sentinel ""position"" to pass
 the test for valid cached positions.  Fix the logic for looking up
 the sentinel state in the cache.  GCPRO the Lisp string we are
 iterating.
 (bidi_push_it, bidi_pop_it): New functions.
 (bidi_initialize): Initialize the bidi cache start stack pointer.
 (bidi_cache_ensure_space): New function, refactored from part of
 bidi_cache_iterator_state.  Don't assume the required size is just
 one BIDI_CACHE_CHUNK away.
 (bidi_cache_start_stack, bidi_push_it): Use IT_STACK_SIZE.
 (bidi_count_bytes, bidi_char_at_pos): New functions.
 (bidi_cache_search): Don't assume bidi_cache_last_idx is
 always valid if bidi_cache_idx is valid.
 (bidi_cache_find_level_change): xassert that bidi_cache_last_idx
 is valid if it's going to be used.
 (bidi_shelve_cache, bidi_unshelve_cache): New functions.
 (bidi_cache_fetch_state, bidi_cache_search)
 (bidi_cache_find_level_change, bidi_cache_ensure_space)
 (bidi_cache_iterator_state, bidi_cache_find)
 (bidi_find_other_level_edge, bidi_cache_start_stack): All
 variables related to cache indices are now EMACS_INT.
 src/dispextern.h (struct bidi_string_data): New structure.
 (struct bidi_it): New member `string'.  Make flag members be 1-bit
 fields, and put them last in the struct.
 (compute_display_string_pos, compute_display_string_end): Update
 prototypes.
 (bidi_push_it, bidi_pop_it): Add prototypes.
 (struct iterator_stack_entry): New members bidi_p,
 paragraph_embedding, and from_disp_prop_p.
 (struct it): Member bidi_p is now a bit field 1 bit wide.
 (bidi_shelve_cache, bidi_unshelve_cache): Declare
 prototypes.
 src/.gdbinit (xvectype, xvector, xcompiled, xchartable, xboolvector)
 (xpr, xfont, xbacktrace): Use ""header.size"" when accessing vectors
 and vector-like objects.
 src/dispnew.c (buffer_posn_from_coords): Save and restore the bidi
 cache around display iteration.
 src/window.c (Fwindow_end, window_scroll_pixel_based)
 (displayed_window_lines, Frecenter): Save and restore the bidi
 cache around display iteration.
 lisp/buff-menu.el (Buffer-menu-buffer+size): Accept an additional
 argument LRM; if non-nil, append an invisible LRM character to the
 buffer name.
 (list-buffers-noselect): Call Buffer-menu-buffer+size with the
 last argument non-nil, when formatting buffer names.
 (Buffer-menu-mode, list-buffers-noselect): Force left-to-right
 paragraph direction.
 doc/lispref/display.texi (Other Display Specs): Document that `left-fringe'
 and `right-fringe' display specifications are of the ""replacing""
 kind.
"
b474519ebee98ec8cb29fda3a87ad0179ac9afd0,emacs-mirror/emacs,"Checked rmail.texi

* doc/emacs/rmail.texi: Copyedits.  Use 'mail composition buffer' in place
of '*mail*', since Message does not call it that.
(Rmail Reply): Rename rmail-dont-reply-to-names.
\\`info- no longer handled specially.
Update for rmail-enable-mime-composing.
Don't mention 'm' for replies.
Don't mention rmail-mail-new-frame and cancelling, since it does
not work for Message at the moment.

* lisp/mail/rmail.el (rmail-dont-reply-to-names): Mark as obsolete.

* lisp/mail/undigest.el (unforward-rmail-message): Doc fix.

* admin/FOR-RELEASE: Related markup.
"
748155880fc11549ab230b74e2cb2d03a4965630,emacs-mirror/emacs,"Small src/puresize.h cleanup.
* src/puresize.h: Remove code assuming PNTR_COMPARISON_TYPE is not
defined, unconditionally defined in lisp.h.
"
4b298d5a3e0d5fb75f66c48598e80122669cef8b,emacs-mirror/emacs,"* keyboard.c (record_asynch_buffer_change): Initialize an event
only if it's really needed.
* frame.h (enum output_method): Remove output_mac member since
it's a leftover from the deleted code.
* frame.c (Fframep): Adjust user here ...
* terminal.c (Fterminal_live_p): ... and here.
* coding.c (Qmac): Now here because it's only used to denote
end-of-line encoding type.
(syms_of_coding): DEFSYM it.
* frame.h (Qmac): Remove duplicated declaration.
"
0c94c8d603031f6b665ae7f3136ca77fb573fd7e,emacs-mirror/emacs,"A few more naming-convention fixes for getters and setters.

* buffer.c (set_buffer_overlays_before): Move here from buffer.h,
and rename from buffer_overlays_set_before.
(set_buffer_overlays_after): Move here from buffer.h, and rename
from buffer_overlays_set_after.
* buffer.h (buffer_intervals): Rename from buffer_get_intervals.
All uses changed.
(set_buffer_intervals): Rename from buffer_set_intervals.
* intervals.c (set_interval_object): Move here from intervals.h,
and rename from interval_set_object.
(set_interval_left): Move here from intervals.h, and rename from
interval_set_left.
(set_interval_right): Move here from intervals.h, and rename from
interval_set_right.
(copy_interval_parent): Move here from intervals.h, and rename from
interval_copy_parent.
* intervals.h (set_interval_parent): Rename from interval_set_parent.
(set_interval_plist): Rename from interval_set_plist.
Return void, not Lisp_Object, since no caller uses the result.
* lisp.h (string_intervals): Rename from string_get_intervals.
(set_string_intervals): Rename from string_set_intervals.
"
966d51592f07ad9de6afebcd828e667cce0f6a27,emacs-mirror/emacs,"Rename main_thread to main_thread_id and simplify

* src/emacs-module.c: Include syssignal.h, for main_thread_id.
[HAVE_PTHREAD]: Do not include pthread.h.
(main_thread): Remove.  All uses replaced by main_thread_id,
or by dwMainThreadId on NT.  Since the HAVE_PTHREAD code is now using
the main_thread_id established by sysdep.c, there is no need for a
separate copy of the main thread ID here.
(module_init): Remove.  All uses removed.
* src/sysdep.c (main_thread_id) [HAVE_PTHREAD]:
Rename from main_thread.  All uses changed.  Now extern.
"
ec8df74431a76616a83806e1c1f4a094731a3f77,emacs-mirror/emacs,"* gnutls.c: Fix problems found by GCC 4.6.0 on Ubuntu 10.10.

(gnutls_make_error): Rename local to avoid shadowing.
(gnutls_emacs_global_deinit): ifdef out; not used.
(Fgnutls_boot): Use const for pointer to readonly storage.
Comment out unused local.  Fix pointer signedness problems.
"
a9a06e0b10b7583e73ffebd7111937516264c4d5,emacs-mirror/emacs,"* fontset.c (FONTSET_SPEC, FONTSET_REPERTORY, RFONT_DEF_REPERTORY): Remove; unused.
"
ec7cc85b3974f570965807203360dfa86069a136,emacs-mirror/emacs,"Make bidi_cache_total_alloc static.

 src/bidi.c <bidi_cache_total_alloc>: Now static.
 (bidi_initialize): Initialize bidi_cache_total_alloc.
"
4d6769e1bb5109e9cec202350d5252234970d525,emacs-mirror/emacs,"lisp/*: Add declarations, remove unused bindings, mark unused args.

* lisp/avoid.el (mouse-avoidance-mode): Mark unused arg.
  (mouse-avoidance-nudge-mouse): Remove unused binding.

* lisp/imenu.el (imenu-default-goto-function): Mark unused args.
  (imenu-progress-message): Remove obsolete macro; all callers changed.

* lisp/mouse.el (mouse-menu-major-mode-map):
* lisp/emacs-lisp/authors.el (authors-scan-change-log)
  (authors-add-to-author-list):
* lisp/emacs-lisp/avl-tree.el (avl-tree--enter-balance):
* lisp/emacs-lisp/smie.el (smie-auto-fill):
* lisp/mail/sendmail.el (mail-bury):
* lisp/mail/unrmail.el (unrmail):
* lisp/net/tls.el (open-tls-stream):
* lisp/textmodes/picture.el (picture-mouse-set-point):
  Remove unused bindings.

* lisp/subr.el (keymap-canonicalize): Remove unused binding.
  (read-passwd): Mark unused arg.

* lisp/tutorial.el (tutorial--display-changes): Remove unused binding.
  (tutorial--save-tutorial-to): Remove unused variable.

* lisp/emacs-lisp/package.el (define-package, package-menu-mark-delete)
  (package-menu-mark-install, package-menu-mark-unmark): Mark unused args.
  (package-generate-autoloads, package-menu--generate)
  (package-menu--find-upgrades): Remove unused bindings.

* lisp/emulation/cua-rect.el (cua-restrict-regexp-rectangle)
  (cua-restrict-prefix-rectangle): Doc fixes.  Remove unused bindings.
  (cua--mouse-ignore, cua--delete-rectangle, cua--extract-rectangle)
  (cua--indent-rectangle, cua-open-rectangle, cua-close-rectangle)
  (cua-blank-rectangle, cua-string-rectangle, cua-replace-in-rectangle)
  (cua-incr-rectangle, cua-sequence-rectangle, cua--convert-rectangle-as)
  (cua--rectangle-aux-replace, cua--left-fill-rectangle)
  (cua-scroll-rectangle-up, cua-scroll-rectangle-down)
  (cua-delete-char-rectangle): Mark unused args.
  (cua-align-rectangle): Remove unused binding.

* lisp/mail/rmail.el (compilation--message->loc)
  (epa--find-coding-system-for-mime-charset): Declare.

* lisp/net/dbus.el (dbus-register-service): Declare.
  (dbus-name-owner-changed-handler): Remove unused binding.

* lisp/nxml/nxml-mode.el (nxml-electric-slash, nxml-in-mixed-content-p)
  (nxml-compute-indent-from-matching-start-tag): Remove unused variables.
  (nxml-scan-backward-within): Mark unused arg.
  (nxml-dynamic-markup-word): Remove unused binding.
"
e268e987dccd39b3ae6aa61a558e9d5b8349b8d7,emacs-mirror/emacs,"* net/tramp.el (tramp-advice-file-expand-wildcards): Simplify.
Don't set `ad-return-value' if `ad-do-it' doesn't.
"
4393663bc52fc24c15aa9c1779dfc23d3a0f901f,emacs-mirror/emacs,"Fix warnings in ns*m files: Replace deprecated methods, declare new interfaces. 

* emacs.c: Declare unexec_init_emacs_zone.

* nsfns.m (check_ns_display_info): Cast to long and use %ld in error
to avoid warning.

* nsimage.m (allocInitFromFile): Don't use deprecated method
bestRepresentationForDevice on OSX >= 10.6.

* nsmenu.m (fillWithWidgetValue): Don't use depercated method
sizeToFit on OSX >= 10.2.

* nsselect.m (ns_string_from_pasteboard): Don't use deprecated methods
cString and lossyCString on OSX >= 10.4

* nsterm.h (MAC_OS_X_VERSION_10_3, MAC_OS_X_VERSION_10_4)
(MAC_OS_X_VERSION_10_5): Define if not defined.
(EmacsView, EmacsTooltip): Implements NSWindowDelegate on OSX >= 10.6.
(EmacsMenu): Implements NSMenuDelegate on OSX >= 10.6.
(EmacsToolbar): Implements NSToolbarDelegate on OSX >= 10.6.

* nsterm.m (keyDown): Call to wantsToDelayTextChangeNotifications and
variable firstTime not needed on OSX >= 10.6.
(setPosition): setFloatValue:knobProportion: is deprecated on OSX
>= 10.5.  Use setKnobProportion, setDoubleValue.
"
6a67b20ddd458d71a1d63746504d91b1acea9b2b,emacs-mirror/emacs,"* lisp/emacs-lisp/eieio*.el: Move the function defs to defclass.

* lisp/emacs-lisp/eieio.el (defclass): Move from eieio-defclass all the code
that creates functions, and most of the sanity checks.
Mark as obsolete the <class>-child-p function.
* lisp/emacs-lisp/eieio-core.el (eieio--define-field-accessors): Remove.
(eieio--class, eieio--object): Use cl-defstruct.
(eieio--object-num-slots): Define manually.
(eieio-defclass-autoload): Use eieio--class-make.
(eieio-defclass-internal): Rename from eieio-defclass.  Move all the
`(lambda...) definitions and most of the sanity checks to `defclass'.
Mark as obsolete the <class>-list-p function, the <class> variable and
the <initarg> variables.  Use pcase-dolist.
(eieio-defclass): New compatibility function.
* lisp/emacs-lisp/eieio-opt.el (eieio-build-class-alist)
(eieio-class-speedbar): Don't use eieio-default-superclass var.
"
f2a77c3a41744e43b52f0ac7a2c9bd7f8d406ae1,emacs-mirror/emacs,"* unexnext.c:
* m/ews4800.h:
* m/hp9000s300.h:
* m/ibm370aix.h:
* m/mips-siemens.h:
* m/ncr386.h:
* m/next.h:
* m/pmax.h:
* m/powerpcle.h:
* m/tandem-s2.h:
* s/386bsd.h:
* s/bsd386.h:
* s/bsd4-1.h:
* s/bsd4-2.h:
* s/bsdos2-1.h:
* s/bsdos2.h:
* s/bsdos3.h:
* s/bsdos4.h:
* s/nextstep.h:
* s/ultrix4-3.h:
* s/usg5-0.h:
* s/usg5-2-2.h:
* s/usg5-2.h:
* s/usg5-4-3.h:
* s/ux4800.h:
* s/uxpds.h:
* s/uxpv.h: Remove support for obsolete systems.
* s/hpux.h, s/hpux10.h, s/hpux8.h, s/hpux9.h, s/hpux9shr.h:
Remove, insert contents in s/hpux-10.20.h
* s/aix3-1.h, s/aix3-2-5.h, s/aix3-2.h, s/aix4-1.h, s/aix4.h:
Remove, insert contents in s/aix-4.2.h
* s/usg5-3.h: Remove, insert contents in s/usg5-4.h.
* s/bsd4-3.h: Rename to ..
* s/bsd-common.h: ... this.
* src/data.c:
* src/doc.c:
* src/ecrt0.c:
* src/emacs.c:
* src/fileio.c:
* src/floatfns.c:
* src/keyboard.c:
* src/mem-limits.h:
* src/print.c:
* src/process.c:
* src/sysdep.c:
* src/syssignal.h:
* src/systty.h:
* src/syswait.h:
* src/term.c:
* src/unexec.c:
* src/unexelf.c:
* src/unexhp9k800.c:
* src/m/hp800.h:
* src/m/ibmrs6000.h:
* src/m/mips.h:
* src/m/vax.h:
* src/s/darwin.h:
* src/s/freebsd.h:
* src/s/gnu.h:
* src/s/ms-w32.h:
* src/s/msdos.h:
* src/s/netbsd.h:
* src/s/template.h: Remove references to obsolete variables.

* Makefile.in: Add dependencies for all unexec files.
(admindir): Remove unused variable.
(UNEXEC_SRC): Remove references.

* config.nt: Remove reference to UNEXEC_SRC.

* lwlib.c: Remove references to obsolete variables.

* fakemail.c: Remove references to obsolete variables.

* os.texi: Remove references to obsolete systems.

* configure.in:
* configure: Remove references to obsolete systems.
"
56eb09046e00ac7ee6d3d3d752cb1ee664b7e062,emacs-mirror/emacs,"Use define-minor-mode where applicable.
* mh-show.el (mh-showing-mode): Move function to mh-e.el.
* mh-e.el (mh-showing-mode):
* url-dired.el (url-dired-minor-mode):
* org-table.el (orgtbl-mode):
* view.el (view-mode):
* type-break.el (type-break-query-mode)
(type-break-mode-line-message-mode):
* textmodes/reftex.el (reftex-mode):
* term/vt100.el (vt100-wide-mode):
* tar-mode.el (tar-subfile-mode):
* savehist.el (savehist-mode):
* ibuf-ext.el (ibuffer-auto-mode):
* composite.el (auto-composition-mode):
* progmodes/vhdl-mode.el (vhdl-electric-mode, vhdl-stutter-mode):
Use define-minor-mode.
(vhdl-mode): Use static mode-line format.
(vhdl-mode-line-update): Delete.
(vhdl-create-mode-menu, vhdl-activate-customizations)
(vhdl-hs-minor-mode): Don't bother calling it.
"
8ea90aa3525a93194e98b7e1b2ea77e96ca3dde6,emacs-mirror/emacs,"Use const char* instead of char*.
Reduce the number of warnings with -Wwrite-strings.
* src/xrdb.c (get_environ_db, get_system_name):
* src/unexelf.c (find_section):
* src/term.c (string_cost, string_cost_one_line, per_line_cost)
(get_named_tty, init_tty):
* src/sysdep.c (sys_subshell):
* src/sound.c (sound_perror, sound_warning, vox_open, vox_init)
(alsa_sound_perror, alsa_open, alsa_configure, alsa_init):
* src/search.c (Freplace_match):
* src/process.c (Fmake_network_process, send_process, init_process):
* src/lread.c (Fload, init_lread):
* src/keymap.c (Fdescribe_buffer_bindings, describe_map_tree):
* src/keyboard.c (parse_tool_bar_item, struct event_head):
* src/gtkutil.h (xg_get_font_name):
* src/gtkutil.c (get_dialog_title, create_dialog, xg_get_font_name)
(make_widget_for_menu_item, make_menu_item, create_menus)
(xg_make_tool_item):
* src/font.c (parse_matrix, font_parse_name):
* src/floatfns.c (rounding_driver, float_error_fn_name):
* src/filelock.c (get_boot_time_1, lock_file_1):
* src/fileio.c (barf_or_query_if_file_exists, check_writable):
* src/editfns.c (get_system_name, get_operating_system_release)
(Fencode_time, Fset_time_zone_rule):
* src/dispextern.h (string_cost, per_line_cost, get_named_tty, init_tty):
* src/buffer.c (defvar_per_buffer): Use const.
"
6f73c465a8990560fedb1c9897c893056b4b04ef,emacs-mirror/emacs,"* cl-macs.el (cl--transform-lambda): Refine last change.

Fixes: debbugs:20125

* test/automated/cl-lib-tests.el: Use lexical-binding.
(cl-lib-arglist-performance): Refine test to the case where one of the
fields has a non-nil default value.  Use existing `mystruct' defstruct.
(cl-lib-struct-accessors): Use `pcase' to be a bit more flexible in the
accepted outputs.
"
7004545244ea5efbe7a37db72431f982c70576e6,emacs-mirror/emacs,"Further optimization in Tramp's file name decomposition

* lisp/net/tramp.el (tramp-syntax): Recompute all file name
components.  Call `custom-set-variables' after loading.
(tramp-build-prefix-format, tramp-build-prefix-regexp)
(tramp-build-method-regexp)
(tramp-build-postfix-method-format)
(tramp-build-postfix-method-regexp)
(tramp-build-prefix-ipv6-format)
(tramp-build-prefix-ipv6-regexp)
(tramp-build-postfix-ipv6-format)
(tramp-build-postfix-ipv6-regexp)
(tramp-build-postfix-host-format)
(tramp-build-postfix-host-regexp)
(tramp-build-file-name-regexp)
(tramp-build-completion-file-name-regexp): New defuns.
(tramp-prefix-format, tramp-prefix-regexp)
(tramp-method-regexp, tramp-postfix-method-format)
(tramp-postfix-method-regexp, tramp-prefix-ipv6-format)
(tramp-prefix-ipv6-regexp, tramp-postfix-ipv6-format)
(tramp-postfix-ipv6-regexp, tramp-postfix-host-format)
(tramp-postfix-host-regexp)
(tramp-remote-file-name-spec-regexp)
(tramp-file-name-structure, tramp-file-name-regexp)
(tramp-completion-file-name-regexp): Convert defuns into defvars.
(tramp-prefix-regexp-alist)
(tramp-postfix-method-regexp-alist)
(tramp-prefix-ipv6-regexp-alist)
(tramp-postfix-ipv6-regexp-alist)
(tramp-postfix-host-regexp-alist)
(tramp-remote-file-name-spec-regexp-alist): Remove.
(tramp-build-remote-file-name-spec-regexp)
(tramp-build-file-name-structure): Simplify.
(tramp-completion-file-name-regexp-alist): New defconst.
(tramp-tramp-file-p, tramp-dissect-file-name)
(tramp-make-tramp-file-name)
(tramp-completion-make-tramp-file-name)
(tramp-rfn-eshadow-update-overlay-regexp)
(tramp-register-file-name-handlers)
(tramp-completion-handle-file-name-all-completions)
(tramp-completion-dissect-file-name, tramp-clear-passwd):
* lisp/net/tramp-ftp.el (tramp-ftp-file-name-handler):
* lisp/net/tramp-sh.el (tramp-sh-handle-vc-registered)
(tramp-compute-multi-hops): Use variables but functions for
file name components.

* test/lisp/net/tramp-tests.el (tramp-test24-file-name-completion):
Use variables but functions for file name components.
"
c23c3394aeab609850146767294418e7eab62bbe,emacs-mirror/emacs,"* net/tramp.el (tramp-replace-environment-variables): New defun.
(tramp-handle-substitute-in-file-name, tramp-file-name-handler):
Use it.
"
9dc774d4792633e32b3a2e583d6591faa721e637,emacs-mirror/emacs,"* fileio.c (Fread_file_name): Do not pass redundant args and ...
* callint.c (read_file_name): ... convert to static here.
* lisp.h (Fread_file_name): Do not EXFUN it.
* composite.c (CHAR_COMPOSABLE_P): Replace unsafe macro with ...
(char_composable_p): ... static function.  All users changed.
"
8bf997efee7b3bc523a4c2bad3a1b228b14e40dd,emacs-mirror/emacs,"* cedet/semantic/idle.el (semantic-idle-scheduler-work-timer):
Change timeout to 1.  Doc fix.

* cedet/semantic/edit.el (semantic-change-hooks): Add
semantic-edits-change-function-handle-changes directly.

* cedet/semantic/util.el (semantic--completion-cache): Move to
semantic.el.
(semantic-symbol-start): Remove unneeded function.

* cedet/semantic.el (semantic--completion-cache): Move here from
semantic/util.el
(semantic-clear-toplevel-cache, semantic--set-buffer-cache)
(semantic-fetch-tags): Reset semantic--completion-cache.
(semantic-force-refresh): New function
(semantic-mode-map): New variable.

* cedet/semantic/senator.el: New file.

* cedet/ede.el: Fix autoload.
(ede-customize-forms-menu): Handle null projects.
"
edd74c35125983cbf822b15828886c7d2e50b275,emacs-mirror/emacs,"Separate read and write access to Lisp_Object slots of struct frame.
* frame.h (FGET, FSET): New macros similar to AREF and ASET.
* buffer.c, data.c, dispnew.c, dosfns.c, eval.c, fontset.c, frame.c:
* fringe.c, gtkutil.c, minibuf.c, msdos.c, nsfns.m, nsmenu.m, nsterm.m:
* print.c, term.c, w32fns.c, w32menu.c, w32term.c, window.c, window.h:
* xdisp.c, xfaces.c, xfns.c, xmenu.c, xterm.c: Adjust users.
"
5fa4ac767c6aaf9203d2ec6ff2f90a061b401930,emacs-mirror/emacs,"Import filemode module from gnulib.

* .bzrignore: Add lib/sys/.
* Makefile.in (GNULIB_MODULES): Add filemode.
* lib/Makefile.am (MOSTLYCLEANDIRS): New macro.
* lib/filemode.c: Renamed from src/filemode.c and regenerated
from gnulib.  This adds support for some more file types, e.g.,
Cray DMF migrated files.
* lisp/emacs-lisp/find-gc.el (find-gc-source-files): Remove filemode.c.
* lib/filemode.h, lib/sys_stat.in.h, m4/filemode.m4, m4/st_dm_mode.m4:
* m4/sys_stat_h.m4: New files, generated from gnulib.
* aclocal.m4, configure, lib/Makefile.in, lib/gnulib.mk, m4/gl-comp.m4:
Regenerate.

2011-02-20  Paul Eggert  <eggert@cs.ucla.edu>
"
644c6b414f39222890246d7fe155a369b1983246,emacs-mirror/emacs,"* lisp/font-lock.el (font-lock-beginning-of-syntax-function): Remove

(font-lock-fontify-block): Don't let-bind it.
(font-lock-compile-keywords): Don't use it.
(font-lock-set-defaults): Don't set it.  Allow the variable alist to
start one slot earlier, instead.

* lisp/emacs-lisp/syntax.el (font-lock-beginning-of-syntax-function):
Don't declare.
(syntax-ppss): Don't use it either.

* lisp/font-core.el (font-lock-defaults): Remove SYNTAX-BEGIN
from docstring.

* doc/emacs/display.texi (Font Lock): Don't mention
font-lock-beginning-of-syntax-function.

* doc/lispref/modes.texi (Font Lock Basics): Update description of
font-lock-defaults.
(Syntactic Font Lock): Remove font-lock-beginning-of-syntax-function.

* lisp/loadhist.el (unload-feature-special-hooks):
Remove font-lock-beginning-of-syntax-function.

* lisp/obsolete/lazy-lock.el (lazy-lock-fontify-region):
* lisp/emacs-lisp/lisp.el (beginning-of-defun-raw): Don't let-bind
font-lock-beginning-of-syntax-function.
"
785adfcc8dee02ac544f80e4f7f8d3d5b2965981,emacs-mirror/emacs,"Don't say Fnext_read_file_uses_dialog_p is const

It's const only if a windowing system is not used; don't say it's
const otherwise.  See:
http://lists.gnu.org/archive/html/emacs-devel/2015-01/msg00310.html
* lib-src/make-docfile.c (write_globals):
Add a special hack for Fnext_read_file_uses_dialog_p.
* src/fileio.c (next_read_file_uses_dialog_p): Remove.
Move guts back to ...
(Fnext_read_file_uses_dialog_p): ... here.
Don't declare as const, as make-docfile.c now has a special case
for this function.  This is an ugly hack, but it's better than
lying to the compiler.
"
0e70695aa48cb34d8c3df6e4d4173b6adb474b23,emacs-mirror/emacs,"* buffer.h (NARROWED, BUF_NARROWED): Drop unused macros.
(DECODE_POSITION, BUFFER_CHECK_INDIRECTION): Fix indentation.
* buffer.c (toplevel, syms_of_buffer): Drop old commented-out
debugging stubs.
"
3a345b50628cd700031121ad1b2ac1b7fae7f920,emacs-mirror/emacs,"Backport: Handle the `neg' operator in some calc-units functions.

* lisp/calc/calc-units.el (math-units-in-expr-p)
(math-single-units-in-expr-p, math-find-compatible-unit-rec)
(math-extract-units): Handle the `neg' operator.  (Bug#19582)
* test/automated/calc-tests.el (calc-tests-equal, calc-tests-simple):
New functions.
(test-calc-remove-units, test-calc-extract-units)
(test-calc-convert-units): New tests.
"
20cfd2480d75679da33958ea258143a313911712,emacs-mirror/emacs,"Improve indexing on the chapter/section/subsection levels.

 doc/lispref/windows.texi (Recombining Windows): Index subject of sections.
 doc/lispref/variables.texi (Variables with Restricted Values)
 (Generalized Variables): Index subject of sections.
 doc/lispref/text.texi (Buffer Contents, Examining Properties)
 (Changing Properties, Property Search, Substitution): Index
 subject of sections.
 doc/lispref/syntax.texi (Motion and Syntax, Parsing Expressions)
 (Motion via Parsing, Position Parse, Control Parsing): Index
 subject of sections.
 doc/lispref/strings.texi (Predicates for Strings, Creating Strings)
 (Modifying Strings, Text Comparison): Index subject of sections.
 doc/lispref/searching.texi (Syntax of Regexps, Regexp Special)
 (Regexp Functions, Regexp Functions): Index subject of sections.
 doc/lispref/processes.texi (Subprocess Creation, Process Information): Index
 subject of sections.
 doc/lispref/positions.texi (Screen Lines): Index subject of sections.
 doc/lispref/nonascii.texi (Scanning Charsets, Specifying Coding Systems):
 Index subject of sections.
 doc/lispref/minibuf.texi (Text from Minibuffer, Object from Minibuffer)
 (Multiple Queries, Minibuffer Contents): Index subject of
 sections.
 doc/lispref/markers.texi (Predicates on Markers, Creating Markers)
 (Information from Markers, Moving Markers): Index subject of
 sections.
 doc/lispref/macros.texi (Defining Macros, Problems with Macros): Index
 subject of sections.
 doc/lispref/loading.texi (Loading Non-ASCII, Where Defined): Index subject
 of sections.
 doc/lispref/lists.texi (List-related Predicates, List Variables, Setcar)
 (Setcdr, Plist Access): Index subject of sections.
 doc/lispref/keymaps.texi (Controlling Active Maps, Scanning Keymaps)
 (Modifying Menus): Index subject of sections.
 doc/lispref/help.texi (Accessing Documentation, Help Functions): Index
 subject of sections.
 doc/lispref/hash.texi (Hash Access): Index subject of sections.
 doc/lispref/functions.texi (Core Advising Primitives)
 (Advising Named Functions, Porting old advices): Index subject of
 sections.
 doc/lispref/frames.texi (Creating Frames, Initial Parameters)
 (Position Parameters, Buffer Parameters, Minibuffers and Frames)
 (Pop-Up Menus, Drag and Drop): Index subject of sections.
 doc/lispref/files.texi (Visiting Functions, Kinds of Files)
 (Unique File Names): Index subject of sections.
 doc/lispref/display.texi (Refresh Screen, Echo Area Customization)
 (Warning Variables, Warning Options, Delayed Warnings)
 (Temporary Displays, Managing Overlays, Overlay Properties)
 (Finding Overlays, Size of Displayed Text, Defining Faces)
 (Attribute Functions, Displaying Faces, Face Remapping)
 (Basic Faces, Font Lookup, Fontsets, Replacing Specs)
 (Defining Images, Showing Images): Index subject of sections.
 doc/lispref/debugging.texi (Debugging, Explicit Debug)
 (Invoking the Debugger, Excess Open, Excess Close): Index subject
 of sections.
 doc/lispref/customize.texi (Defining New Types, Applying Customizations)
 (Custom Themes): Index subject of sections.
 doc/lispref/control.texi (Sequencing, Combining Conditions)
 (Processing of Errors, Cleanups): Index subject of sections.
 doc/lispref/compile.texi (Eval During Compile): Index subject of sections.
 doc/lispref/commands.texi (Using Interactive, Distinguish Interactive)
 (Command Loop Info, Classifying Events, Event Mod)
 (Invoking the Input Method): Index subject of sections.
 doc/lispref/buffers.texi (Buffer List, Buffer Gap): Index subject of sections.
 doc/lispref/backups.texi (Making Backups, Numbered Backups, Backup Names)
 (Reverting): Index subject of sections.
 doc/lispref/abbrevs.texi (Abbrev Tables, Defining Abbrevs, Abbrev Files)
 (Abbrev Expansion, Standard Abbrev Tables, Abbrev Properties)
 (Abbrev Table Properties): Index subject of sections.
 doc/lispref/os.texi (Time of Day, Time Conversion, Time Parsing)
 (Time Calculations, Idle Timers): Index subject of sections.
"
882f0d8119c9135b06ce9b291a139e4e9c6eeff8,emacs-mirror/emacs,"* filelock.c: Fix some buffer overrun and integer overflow issues.

(get_boot_time): Don't assume that gzip command string fits in 100 bytes.
Reformulate so as not to need the command string.
Invoke gzip -cd rather than gunzip, as it's more portable.
(lock_info_type, lock_file_1, lock_file):
Don't assume pid_t and time_t fit in unsigned long.
(LOCK_PID_MAX): Remove; we now use more-reliable bounds.
(current_lock_owner): Prefer signed type for sizes.
Use memcpy, not strncpy, where memcpy is what is really wanted.
Don't assume (via atoi) that time_t and pid_t fit in int.
Check for time_t and/or pid_t out of range, e.g., via a network share.
Don't alloca where an auto var works fine.
"
3c9359dfe479a7fa1b161ad86afe571f66b23617,emacs-mirror/emacs,"First Coccinelle semantic patch.
* coccinelle: New subdirectory
* coccinelle/README: Documentation stub.
* coccinelle/vector_contents.cocci: Semantic patch to replace direct
access to `contents' member of Lisp_Vector objects with AREF and ASET
where appropriate.
"
d17337e501a189c1d46f758e10c6c2842cafff17,emacs-mirror/emacs,"New macro to iterate over all buffers, miscellaneous cleanups.
* lisp.h (all_buffers): Remove declaration.
* buffer.h (all_buffers): Add declaration, with comment.
(for_each_buffer): New macro.
* alloc.c (Fgarbage_collect, mark_object): Use it.
* buffer.c (Fkill_buffer, Fbuffer_swap_text, Fset_buffer_multibyte)
(init_buffer): Likewise.
* data.c (Fset_default): Likewise.
* coding.c (code_conversion_restore): Remove redundant check
for dead buffer.
* buffer.c (Fkill_buffer): Likewise.  Remove obsolete comment.
"
6711a21f1125c0047c56eb266eb374c1ec90a967,emacs-mirror/emacs,"* lisp/font-lock.el (font-lock-flush, font-lock-ensure): New functions.
(font-lock-fontify-buffer): Mark interactive-only.
(font-lock-multiline, font-lock-fontified, font-lock-set-defaults):
Make buffer-local.
(font-lock-specified-p): Remove redundant boundp check.
(font-lock-flush-function, font-lock-ensure-function): New vars.
(font-lock-turn-on-thing-lock): Set them.
(font-lock-default-fontify-buffer): Obey font-lock-dont-widen.
(font-lock-after-change-function): Make `old-len' optional.
(font-lock-set-defaults): Remove redundant `set' of font-lock-defaults.
Call font-lock-flush, just in case.
* lisp/progmodes/verilog-mode.el (verilog-preprocess): Disable workaround in
recent Emacsen.
* lisp/progmodes/vera-mode.el (vera-fontify-buffer): Declare obsolete.
(vera-mode-map, vera-mode-menu): Remove bindings to it.
* lisp/progmodes/idlw-help.el (idlwave-help-fontify): Use font-lock-ensure
and with-syntax-table.
* lisp/textmodes/conf-mode.el (conf-quote-normal):
* lisp/progmodes/sh-script.el (sh-set-shell):
* lisp/progmodes/prog-mode.el (prettify-symbols-mode):
* lisp/progmodes/f90.el (f90-font-lock-n):
* lisp/progmodes/cwarn.el (cwarn-mode):
* lisp/nxml/nxml-mode.el (nxml-toggle-char-ref-extra-display):
* lisp/progmodes/compile.el (compilation-setup, compilation--unsetup):
* lisp/hi-lock.el (hi-lock-mode, hi-lock-unface-buffer)
(hi-lock-set-pattern, hi-lock-set-file-patterns): Use font-lock-flush.
* lisp/mail/rmail.el (rmail-variables): Set font-lock-dont-widen instead of
font-lock-fontify-buffer-function and
font-lock-unfontify-buffer-function.
(rmail-unfontify-buffer-function, rmail-fontify-message):
Use with-silent-modifications.
* lisp/htmlfontify.el (hfy-force-fontification): Use jit-lock-fontify-now
and font-lock-ensure.
* lisp/bs.el (bs-show-in-buffer): Use font-lock-ensure.
* lisp/gnus/mm-view.el (mm-display-inline-fontify): Use font-lock-ensure.
* lisp/gnus/gnus-cite.el (gnus-message-citation-mode): Use font-lock-flush.
* lisp/org/org-compat.el (org-font-lock-ensure): New function.
* lisp/org/ox-odt.el (org-odt-do-format-code):
* lisp/org/ox-html.el (org-html-fontify-code):
* lisp/org/org.el (org-fontify-like-in-org-mode):
* lisp/org/org-src.el (org-src-font-lock-fontify-block):
* lisp/org/org-clock.el (org-clock-get-clocktable): Use it.
* lisp/org/ox-org.el (org-org-publish-to-org): Use it.  Avoid using find-file
from Elisp.
* test/automated/ruby-mode-tests.el (ruby-assert-face): Use font-lock-ensure.
(ruby-interpolation-keeps-non-quote-syntax): Use syntax-propertize.
"
8449dd1f655d118a104e87c65ab77c86d5b71382,emacs-mirror/emacs,"authors.el updates and ChangeLog fixes

* lisp/emacs-lisp/authors.el (authors-ignored-files)
(authors-valid-file-names, authors-renamed-files-alist): Additions.
"
b86b15b22117e9aab6e6a033d9a541441acdecb4,emacs-mirror/emacs,"Fix bug #17790 with compilation against giflib 5.1.0 and later.

 src/image.c [5 < GIFLIB_MAJOR + (1 <= GIFLIB_MINOR)]: Declare the
 prototype of DGifCloseFile as appropriate for older and newer
 versions of giflib.
 (gif_close): New function, encapsulates the differences in the
 calling sequence of DGifCloseFile before v5.1.0 and after it.
 (gif_load): Call gif_close instead of DGifCloseFile.  Divulge the
 error string where appropriate.

 lisp/term/w32-win.el (dynamic-library-alist): Support giflib 5.1.0
 and later.
"
6b7df8d3dd960dc4d62ffa4eabcdb37043a1c9e2,emacs-mirror/emacs,"Merge changes made in Gnus trunk.

shr.el (shr-tag-hr): Use shr-hr-line to specify which character to use to display hr lines.
shr.el (shr-max-columns): Do not change state to nil if we just inserting spaces.
sieve-manage.el (sieve-manage-open): Allow port names as well as port numbers.
shr.el (shr-current-column, shr-find-fill-point): New functions; start thinking about breaking CJVK text.
nnimap.el (nnimap-transform-split-mail): Not all articles have bodies.  Protect against this.
shr.el (shr-insert): Fix up the white space only regexp.
nnimap.el (nnimap-request-rename-group): Select group read-only before renaming it.
"
20a673b2d0ed2b2f75ab5d7d6e4930fdea0e1a5f,emacs-mirror/emacs,"Merge changes made in Gnus trunk.

Reimplement nnimap, and do tweaks to the rest of the code to support that.

* gnus-int.el (gnus-finish-retrieve-group-infos)
(gnus-retrieve-group-data-early): New functions.

* gnus-range.el (gnus-range-nconcat): New function.

* gnus-start.el (gnus-get-unread-articles): Support early retrieval of
data.
(gnus-read-active-for-groups): Support finishing the early retrieval of
data.

* gnus-sum.el (gnus-summary-move-article): Pass the move-to group name
if the move is internal, so that nnimap can do fast internal moves.

* gnus.el (gnus-article-special-mark-lists): Add uid/active tuples, for
nnimap usage.

* nnimap.el: Rewritten.

* nnmail.el (nnmail-inhibit-default-split-group): New internal variable
to allow the mail splitting to not return a default group.  This is
useful for nnimap, which will leave unmatched mail in the inbox.

* utf7.el (utf7-encode): Autoload.


Implement shell connection.

* nnimap.el (nnimap-open-shell-stream): New function.
(nnimap-open-connection): Use it.


Get the number of lines by using BODYSTRUCTURE.

(nnimap-transform-headers): Get the number of lines in each message.
(nnimap-retrieve-headers): Query for BODYSTRUCTURE so that we get the
number of lines.


Not all servers return UIDNEXT.  Work past this problem.


Remove junk from end of file.


Fix typo in ""bogus"" section.


Make capabilties be case-insensitive.


Require cl when compiling.


Don't bug out if the LIST command doesn't have any parameters.

2010-09-17  Knut Anders Hatlen  <kahatlen@gmail.com>  (tiny change)

	    * nnimap.el (nnimap-get-groups): Don't bug out if the LIST command
	    doesn't have any parameters.


(mm-text-html-renderer): Document gnus-article-html.

2010-09-17  Julien Danjou  <julien@danjou.info>  (tiny fix)

	    * mm-decode.el (mm-text-html-renderer): Document gnus-article-html.


* dgnushack.el: Define netrc-credentials.


If the user doesn't have a /etc/services, supply some sensible port defaults.


Have `unseen-or-unread' select an unread unseen article first.


(nntp-open-server): Return whether the open was successful or not.


Throughout all files, replace (save-excursion (set-buffer ...)) with (with-current-buffer ... ).


Save result so that it doesn't say ""failed"" all the time.


Add ~/.authinfo to the default, since that's probably most useful for users.


Don't use the ""finish"" method when we're reading from the agent.


Add some more nnimap-relevant agent stuff to nnagent.el.


* nnimap.el (nnimap-with-process-buffer): Removed.


Revert one line that was changed by mistake in the last checkin.


(nnimap-open-connection): Don't error out when we can't make a connection


nnimap-related changes to avoid bugging out if we can't contact a server.
* gnus-start.el (gnus-get-unread-articles): Don't try to scan groups
 from methods that are denied.
* nnimap.el (nnimap-possibly-change-group): Return nil if we can't log
 in.
(nnimap-finish-retrieve-group-infos): Make sure we're not waiting for
 nothing.
* gnus-sum.el (gnus-select-newsgroup): Indent.
"
d1e4c4037e88f3256db19813805d03f8ad0291fa,emacs-mirror/emacs,"Make vc-annotate work through copies and renames.
* vc-annotate.el (vc-annotate-extract-revision-at-line): Return
the file name too.
(vc-annotate-revision-at-line)
(vc-annotate-find-revision-at-line)
(vc-annotate-revision-previous-to-line)
(vc-annotate-show-log-revision-at-line): Update to get the file
name from vc-annotate-extract-revision-at-line.
(vc-annotate-show-diff-revision-at-line-internal): Change the
argument to mean whether to show a file diff or not.  Get the file
name from vc-annotate-extract-revision-at-line.
(vc-annotate-show-diff-revision-at-line): Update
vc-annotate-show-diff-revision-at-line call.
(vc-annotate-warp-revision): Add an optional file argument.

* vc-git.el (vc-git-annotate-command): Pass -C -C to the blame command.
(vc-git-annotate-extract-revision-at-line): Also return the file
name if found.

* vc-hg.el (vc-hg-annotate-command): Pass --follow to the annotate
command.  Remove unused code.
(vc-hg-annotate-re): Update to match --follow output.
(vc-hg-annotate-extract-revision-at-line): Also return the file
name if found.

* vc.el: Update annotate-extract-revision-at-line documentation.
"
4ebbdd6712c1966406b40d2673464949775cbd7a,emacs-mirror/emacs,"Handle errno and exit status a bit more carefully.

* lib/ignore-value.h: Remove this gnulib-imported file.
* lib/gnulib.mk, m4/gnulib-comp.m4: Regenerate.
* admin/merge-gnulib (GNULIB_MODULES): Remove ignore-value.
* src/callproc.c (child_setup) [!DOS_NT]: Don't try to stuff an error
number into an exit status.  Instead, use EXIT_CANCELED.
(child_setup) [!MSDOS]: Avoid possible deadlock with vfork.
* src/callproc.c (relocate_fd):
* src/emacs.c (close_output_streams, main):
* src/process.c (create_process):
* src/sysdep.c (sys_subshell) [!DOS_NT || !WINDOWSNT]:
Use emacs_perror for simplicity.
* src/callproc.c (relocate_fd, main):
* src/sysdep.c (sys_subshell):
Exit with EXIT_CANCELED etc., not 1, when exec setup fails.
(shut_down_emacs): Use emacs_write, not write.
* src/emacs.c, src/sysdep.c: Don't include <ignore-value.h>.
* src/fileio.c (Fcopy_file, e_write):
* src/nsterm.m (ns_select):
* src/process.c (send_process):
* src/sound.c (vox_write):
Use emacs_write_sig, not emacs_write.
* src/lisp.h (emacs_write_sig, emacs_perror): New decls.
* src/process.h (EXIT_CANCELED), EXIT_CANNOT_INVOKE, EXIT_ENOENT):
New constants.
* src/sysdep.c (emacs_backtrace): Use emacs_write, not ignore_value
of write.
(emacs_full_write): New function.
(emacs_write): Rewrite to use it.
(emacswrite_sig, emacs_perror): New functions.
* src/xrdb.c (fatal): Don't invoke perror, since errno might be garbage.
"
43f8b2756816315f8779d64bad5cf6f1e14660e6,emacs-mirror/emacs,"* bookmark.el (bookmark-alist): Allow the 2 slightly different formats
used until now in bookmark.el's code.
(bookmark-get-bookmark): Accept bookmark names or bookmark records.
(bookmark-get-bookmark-record): Allow the 2 slightly different formats
used until now in bookmark.el's code.
(bookmark-set-filename): Remove special code, moved to its only caller.
(bookmark-store): Use the newer format.
(bookmark-make-record-default): Add arg `point-only'.
Rename from bookmark-make-record-for-text-file.
(bookmark--jump-via): New function.
(bookmark-jump, bookmark-jump-other-window, bookmark-bmenu-2-window)
(bookmark-bmenu-other-window, bookmark-bmenu-switch-other-window):
Use it.
(bookmark-jump-noselect, bookmark-default-handler):
Don't return an alist, instead return the data implicitly by changing
current buffer and point.  Signal an error if the file doesn't exist.
* info.el (Info-bookmark-make-record):
Use bookmark-make-record-default.
(Info-bookmark-jump): Use bookmark-default-handler.
* image-mode.el (image-bookmark-make-record):
Use bookmark-make-record-default.
(image-bookmark-jump): Use bookmark-default-handler.
* doc-view.el (doc-view-bookmark-make-record):
Use bookmark-make-record-default.
(doc-view-bookmark-jump): Use bookmark-default-handler.
"
d1cb2f785525ad717a1504f4762505086b390bad,emacs-mirror/emacs,"* lisp/calc/calc-units.el (calc-convert-exact-units): New function.
(calc-convert-units): Check for missing units.

* lisp/calc/calc-ext.el (calc-init-extensions):  Autoload
`calc-convert-exact-units' and assign it a keybinding.

* lisp/calc/calc-help (calc-u-prefix-help): Add help for the
""un"" keybinding.
"
ba1ed52f0c2c7fd15fe1feadabfd0af88e19b4c3,emacs-mirror/emacs,"Use binary-io module, O_BINARY, and ""b"" flag.

* admin/merge-gnulib (GNULIB_MODULES): Add binary-io.  It was already
present implicitly; this just makes the dependence explicit.
* lib-src/etags.c, lib-src/hexl.c, lib-src/make-docfile.c:
Include binary-io.h instead of fcntl.h and/or io.h.
(main): Use set_binary_mode or SET_BINARY
in place of handcrafted code.
* lib-src/etags.c (main) [DOS_NT]:
* lib-src/movemail.c (main) [WINDOWSNT]:
Don't mess with _fmode.
* lib-src/etags.c (main, process_file_name, analyse_regex):
Use fopen/popen's ""b"" flag instead.
* lib-src/movemail.c (main, popmail): Use open/lk_open/mkostemp's O_BINARY
instead.
* src/callproc.c (create_temp_file): Use mkostemp's O_BINARY flag.
* src/emacs.c [MSDOS]:
* src/emacs.c (main) [DOS_NT]: Don't mess with _fmode.
(main) [MSDOS]: Use SET_BINARY instead of setmode.
* src/minibuf.c: Include binary-io.h instead of fcntl.h.
(read_minibuf_noninteractive):
Use set_binary_mode instead of handcrafted code.
Don't call emacs_set_tty if emacs_get_tty failed.
* src/sysdep.c, src/systty.h (emacs_get_tty): Return int, not void.
* src/sysdep.c (emacs_open, emacs_pipe): Use O_BINARY.
* src/w32.c (pipe2): Adjust eassert to include O_BINARY.

Fixes: debbugs:18006
"
de7e2b368752bfc3cef17a8c82f6b3aec72bc649,emacs-mirror/emacs,"Get rid of cl-lexical-let, keeping only lexical-let for compatibility.
* lisp/emacs-lisp/cl-macs.el: Provide itself.
(cl--labels-convert-cache): New var.
(cl--labels-convert): New function.
(cl-flet, cl-labels): New implementation with new semantics, relying on
lexical-binding.
* lisp/emacs-lisp/cl.el: Mark compatibility aliases as obsolete.
(cl-closure-vars, cl--function-convert-cache)
(cl--function-convert): Move from cl-macs.el.
(lexical-let, lexical-let*, flet, labels): Move from cl-macs.el and
rename by removing the ""cl-"" prefix.
* lisp/emacs-lisp/macroexp.el (macroexp-unprogn): New function.
"
76b397fb2aaecf9f71b6a914dea4a5ff7b486d18,emacs-mirror/emacs,"Simplify Irix build, remove iris4d.h file.

* configure.in: Remove reference to iris4d.h.

* src/m/iris4d.h: Remove file, move contents ...
* src/s/irix6-5.h: ... here.
"
459a5f4b57987e18cd0c340cc47edb61d37c8c32,emacs-mirror/emacs,"* net/tramp.el (tramp-do-copy-or-rename-file-out-of-band): Protect
setting the modes by `ignore-errors'.  It might fail, for example
if the file is not owned by the user but the group.
(tramp-handle-write-region): Ensure, that `tmpfile' is always readable.
"
26d4541d4c0c9a71453143c17d392291c41856ff,emacs-mirror/emacs,"Fix minor problems found by static checking.

* buffer.c (Fdelete_all_overlays): Return nil.
* doc.c (Fsubstitute_command_keys):
* regex.c (WEAK_ALIAS):
* xdisp.c (redisplay_internal):
Move initialization down, to pacify GCC 4.7.1 -Wjump-misses-init.
"
1111783029f1d7f50c348d1836ec56c62fb344c2,emacs-mirror/emacs,"Redesign bidi-aware edge positions of glyph rows, fix bug #6036.

 dispextern.h (struct glyph_row): New members minpos and maxpos.
 (MATRIX_ROW_START_CHARPOS, MATRIX_ROW_START_BYTEPOS)
 (MATRIX_ROW_END_CHARPOS, MATRIX_ROW_END_BYTEPOS): Reference minpos
 and maxpos members instead of start.pos and end.pos, respectively.
 xdisp.c (display_line): Compare IT_CHARPOS with the position in
 row->start.pos, rather than with MATRIX_ROW_START_CHARPOS.
 (cursor_row_p): Use row->end.pos rather than MATRIX_ROW_END_CHARPOS.
 (try_window_reusing_current_matrix, try_window_id): Use
 ROW->minpos rather than ROW->start.pos.
 (init_from_display_pos, init_iterator): Use EMACS_INT for
 character and byte positions.
 (find_row_edges): Renamed from find_row_end.  Accept additional
 arguments for minimum and maximum buffer positions seen by
 display_line for this row.  Don't use iterator to find the
 position following the maximum one; instead, increment the
 position found by display_line directly.  Fix logic; eol_pos
 should be tested before the rest.  Handle the case of characters
 delivered from display vector (bug#6036).  Fix tests related to
 it->method.  Handle the truncated_on_right_p rows.
 (RECORD_MAX_MIN_POS): New macro.
 (display_line): Use it to record the minimum and maximum buffer
 positions for glyphs in the row being assembled.  Record the
 position of the newline that terminates the line.  If word wrap is
 in effect, restore minimum and maximum positions seen up to the
 wrap point, when iterator returns to it.
 (try_window_reusing_current_matrix): Give up if in bidi-reordered
 row and cursor not already at point.  Restore original pre-bidi
 code for unidirectional buffers.
 dispnew.c (increment_row_positions, check_matrix_invariants):
 Increment and check row->start.pos and row->end.pos, in addition
 to MATRIX_ROW_START_CHARPOS and MATRIX_ROW_END_CHARPOS.
 .gdbinit (prowlims): Display row->minpos and row->maxpos.
 Display truncated_on_left_p and truncated_on_right_p flags.
 Formatting fixes.
 (pmtxrows): Display the ordinal number of each row.  Don't display
 rows beyond the last one.
 bidi.c (bidi_cache_iterator_state): Don't zero out new_paragraph:
 it is not copied by bidi_copy_it.
"
77ccee0959daf0256a746fa3029cfe4da6f2b476,emacs-mirror/emacs,"* config.in: Regenerate.
* s/ms-w32.h (subprocesses): Define unconditionally.
* s/template.h (subprocesses): Update comment.
* s/vms.h (subprocesses):
* s/usg5-4.h (subprocesses):
* s/hpux10-20.h (subprocesses):
* s/gnu-linux.h (subprocesses):
* s/cygwin.h (subprocesses):
* s/bsd-common.h (subprocesses):
* s/aix4-2.h (subprocesses):
* s/darwin.h (subprocesses): Do not define, defined by default now.

* Makefile.in (C_SWITCH_SITE, LD_SWITCH_SITE): Remove, unused.
Remove all references.
(temacs): Add GNUStep specific ld flags.

* Makefile.in (ALL_CFLAGS): Remove reference to C_SWITCH_SITE.

* config.nt (C_SWITCH_SITE, LD_SWITCH_SITE): Do not undefine.

* Makefile.in (ALL_CFLAGS): Remove reference to C_SWITCH_SITE.

* configure.in (LD_SWITCH_SITE): Remove, set the values directly
in src/Makefile.in.
(static): Remove, autoconf would always comment it out anyway.
(subprocesses): Define unconditionally.
"
22351e44a3afb189c438fb02f73b8e5065afd0e1,emacs-mirror/emacs,"Always add initial message to *scratch* buffer if
`initial-scratch-message' is non-nil regardless of the value of
`inhibit-startup-screen'.
(inhibit-startup-screen, initial-scratch-message): Doc fix.
(command-line-1): Move code that inserts `initial-scratch-message'
up before the if-form that checks for `inhibit-startup-screen'.
Suggested by Jonathan Rockway <jon@jrock.us>.
"
bd7bbf294efbe3745cb596e9555150e044cf6ed0,emacs-mirror/emacs,"(INTERVALS_H): Rename from INTERVAL_SRC, update all users.
"
aaa36002bef7223e1dce0b0431d54f728ef589ba,emacs-mirror/emacs,"Reduce CPP usage.
* Makefile.in (LIB_X11_LIB): Remove, inline in the only user.
(obj): Use autoconf for unexec instead of cpp.

* configure.in (LIB_X11_LIB): Remove, inline in the only user.
(unexec): Define unconditionally, all platforms define
UNEXEC.  AC_SUBST it.
(UNEXEC_SRC): Remove, unused.
"
ff6f4585eedbefea245ec597e96217271b6fe2d2,emacs-mirror/emacs,"(ediff-context-diff-label-regexp): Don't match
whitespace after the file name of the first line of unified format,
because git-diff doesn't output whitespace and file modification time
after the file name.
"
da6a8debb270a2e602f3b789ec3e27e815041164,emacs-mirror/emacs,"* make-dist: Don't distribute old, unsupported w32 build method.
"
2ec9db5d1e97275a2a4c27e04ed6f3e8c3382cab,emacs-mirror/emacs,"* src/xdisp.c (syms_of_xdisp): New vars redisplay--all-windows-cause and
redisplay--mode-lines-cause.
(redisplay_internal): Keep them uptodate.  Remove redundant check of
buffer_shared_and_changed.
* *.[chm]: Number every assignment to update_mode_lines so we
can track why it is set.
"
1b3b87dfe0fae8e5266319531c0a874c8b4313b1,emacs-mirror/emacs,"Use define-derived-mode (and derived-mode-p).
* lisp/play/snake.el (snake-mode):
* lisp/play/mpuz.el (mpuz-mode):
* lisp/play/landmark.el (lm-mode):
* lisp/play/blackbox.el (blackbox-mode):
* lisp/play/5x5.el (5x5-mode):
* lisp/obsolete/options.el (Edit-options-mode):
* lisp/net/quickurl.el (quickurl-list-mode):
* lisp/net/newst-treeview.el (newsticker-treeview-mode):
* lisp/mail/rmailsum.el (rmail-summary-mode):
* lisp/mail/mspools.el (mspools-mode):
* lisp/locate.el (locate-mode):
* lisp/ibuffer.el (ibuffer-mode):
* lisp/emulation/ws-mode.el (wordstar-mode):
* lisp/emacs-lisp/debug.el (debugger-mode):
* lisp/array.el (array-mode):
* lisp/net/eudc.el (eudc-mode): Use define-derived-mode.
* lisp/net/mairix.el (mairix-searches-mode-font-lock-keywords):
Move initialization into declaration.
(mairix-searches-mode): Use define-derived-mode.
* lisp/net/eudc-hotlist.el (eudc-hotlist-mode): Use define-derived-mode.
(eudc-edit-hotlist): Use dolist.
* lisp/man.el (Man-mode-syntax-table): Rename from man-mode-syntax-table.
(Man-mode): Use define-derived-mode.
* lisp/info.el (Info-edit-mode-map): Rename from Info-edit-map.
(Info-edit-mode): Use define-derived-mode.
(Info-cease-edit): Use Info-mode.
* lisp/eshell/esh-mode.el (eshell-mode-syntax-table): Move initialization
into declaration.
(eshell-mode): Use define-derived-mode.
* lisp/chistory.el (command-history-mode-map): Rename from
command-history-map.
(command-history-mode): Use define-derived-mode.
* lisp/calc/calc.el (calc-trail-mode-map): New var.
(calc-trail-mode): Use define-derived-mode.
(calc-trail-buffer): Set calc-main-buffer manually.
* lisp/bookmark.el (bookmark-insert-annotation): New function.
(bookmark-edit-annotation): Use it.
(bookmark-edit-annotation-mode): Make it a proper major mode.
(bookmark-send-edited-annotation): Use derived-mode-p.
* lisp/arc-mode.el (archive-mode): Move kill-all-local-variables a tiny bit
closer to its ideal place.  Use \' to match EOS.

* lisp/cedet/semantic/grammar.el (semantic-grammar-mode): Use define-derived-mode.
(semantic-grammar-mode-syntax-table): Rename from
semantic-grammar-syntax-table.
(semantic-grammar-mode-map): Rename from semantic-grammar-map.
* lisp/cedet/data-debug.el (data-debug-mode-map): Rename from data-debug-map.
(data-debug-mode): Use define-derived-mode.

* lisp/gnus/score-mode.el (gnus-score-mode-map): Move initialization
into declaration.
(gnus-score-mode): Use define-derived-mode.
* lisp/gnus/gnus-srvr.el (gnus-browse-mode): Use define-derived-mode.
* lisp/gnus/gnus-kill.el (gnus-kill-file-mode-map): Move initialization
into declaration.
(gnus-kill-file-mode): Use define-derived-mode.
(gnus-kill-file-edit-file, gnus-kill-file-enter-kill, gnus-kill):
Use derived-mode-p.
* lisp/gnus/gnus-group.el (gnus-group-mode): Use define-derived-mode.
(gnus-group-setup-buffer, gnus-group-name-at-point)
(gnus-group-make-web-group, gnus-group-enter-directory)
(gnus-group-suspend): Use derived-mode-p.
* lisp/gnus/gnus-cus.el (gnus-custom-mode): Use define-derived-mode.
* lisp/gnus/gnus-bookmark.el (gnus-bookmark-bmenu-mode): Use define-derived-mode.
* lisp/gnus/gnus-art.el (gnus-article-mode): Use define-derived-mode.
(gnus-article-setup-buffer, gnus-article-prepare)
(gnus-article-prepare-display, gnus-sticky-article)
(gnus-kill-sticky-article-buffer, gnus-kill-sticky-article-buffers)
(gnus-bind-safe-url-regexp, gnus-article-check-buffer)
(gnus-article-read-summary-keys): Use derived-mode-p.
"
20ef56dbc88f517ebf60d89577fc89870d9fe888,emacs-mirror/emacs,"Fix race conditions with signal handlers and errno.

Be more systematic about preserving errno whenever a signal
handler returns, even if it's not in the main thread.  Do this by
renaming signal handlers to distinguish between signal delivery
and signal handling.  All uses changed.
* atimer.c (deliver_alarm_signal): Rename from alarm_signal_handler.
* data.c (deliver_arith_signal): Rename from arith_error.
* dispnew.c (deliver_window_change_signal): Rename from
window_change_signal.
* emacs.c (deliver_error_signal): Rename from fatal_error_signal.
(deliver_danger_signal) [SIGDANGER]: Rename from memory_warning_signal.
* keyboard.c (deliver_input_available_signal): Rename from
input_available_signal.
(deliver_user_signal): Rename from handle_user_signal.
(deliver_interrupt_signal): Rename from interrupt_signal.
* process.c (deliver_pipe_signal): Rename from send_process_trap.
(deliver_child_signal): Rename from sigchld_handler.
* atimer.c (handle_alarm_signal):
* data.c (handle_arith_signal):
* dispnew.c (handle_window_change_signal):
* emacs.c (handle_fatal_signal, handle_danger_signal):
* keyboard.c (handle_input_available_signal):
* keyboard.c (handle_user_signal, handle_interrupt_signal):
* process.c (handle_pipe_signal, handle_child_signal):
New functions, with the actual signal-handling code taken from the
original respective signal handlers, sans the sporadic attempts to
preserve errno, since that's now done by handle_on_main_thread.
* atimer.c (alarm_signal_handler): Remove unnecessary decl.
* emacs.c, floatfns.c, lisp.h: Remove unused FLOAT_CATCH_SIGKILL cruft.
* emacs.c (main_thread) [FORWARD_SIGNAL_TO_MAIN_THREAD]:
Move to sysdep.c.
(main) [FORWARD_SIGNAL_TO_MAIN_THREAD]:
Move initialization of main_thread to sysdep.c's init_signals.
* process.c (waitpid) [!WNOHANG]: #define to wait; that's good enough for
our usage, and simplifies the mainline code.
(record_child_status_change): New static function, as a helper
for handle_child_signal, and with most of the old child handler's
contents.
(CAN_HANDLE_MULTIPLE_CHILDREN): New constant.
(handle_child_signal): Use the above.
* sysdep.c (main_thread) [FORWARD_SIGNAL_TO_MAIN_THREAD]:
Moved here from emacs.c.
(init_signals) [FORWARD_SIGNAL_TO_MAIN_THREAD]: Initialize it;
code moved here from emacs.c's main function.
* sysdep.c, syssignal.h (handle_on_main_thread): New function,
replacing the old SIGNAL_THREAD_CHECK.  All uses changed.  This
lets callers save and restore errno properly.
"
67343d1d9fef95c242a6d050187bb036e4bb82eb,emacs-mirror/emacs,"* eval.c (toplevel): Remove redundant #include directives.
* xterm.c (x_initialize): Add static to match prototype.
"
087fc47ace7797d2ef36ff167f7befd5f4ba01da,emacs-mirror/emacs,"Turn `directory-sep-char' into a noop.

* lisp/subr.el (directory-sep-char): Move from fileio.c and make a defconst.

* src/emacs.c (decode_env_path): Don't check DIRECTORY_SEP,
  call dostounix_filename directly.

* src/fileio.c (CORRECT_DIR_SEPS): Remove.
  (Ffile_name_directory, directory_file_name, Fexpand_file_name)
  (Fsubstitute_in_file_name): Use dostounix_filename instead.
  (file_name_as_directory): Use dostounix_filename, DIRECTORY_SEP.
  (syms_of_fileio) <directory-sep-char>: Move to subr.el.

* src/lisp.h [WINDOWSNT] (Vdirectory_sep_char): Don't declare.
  (DIRECTORY_SEP): Define unconditionally.

* src/w32proc.c (CORRECT_DIR_SEPS): Remove.
  (Fw32_short_file_name, Fw32_long_file_name): Use dostounix_filename.

* src/s/ms-w32.h (DIRECTORY_SEP): Remove.
"
8612b71a44b34519fe1b047a9f1d6f6b1431d411,emacs-mirror/emacs,"Changes to remove Feval calls from GUI under NS.
* nsterm.h: Move KEY_NS_... definitions here from nsterm.m.  Add
NS_TOGGLE_TOOLBAR, NS_PUT_WORKING_TEXT, NS_UNPUT_WORKING_TEXT.
Remove NS_INSERT_WORKING_TEXT, NS_DELETE_WORKING_TEXT.

* nsterm.m: Move KEY_NS_... definitions to nsterm.h.
(EmacsView-toggleToolbar:): Use KEY_NS_TOGGLE_TOOLBAR.
(EmacsView-setMarkedText:,-deleteWorkingText:): Use NS_TEXT_EVENT
instead of NON_ASCII_KEYSTROKE_EVENT.
(EmacsApp-terminate:): Use KEY_NS_POWER_OFF instead of Feval.
(EmacsApp-applicationShouldTerminate:): Query user.
(EmacsPreferencesController-runHelp:): Use KEY_NS_INFO_PREFS
instead of Feval.

* termhooks.h (NS_TEXT_EVENT): New event type under HAVE_NS.

* keyboard.c (kbd_buffer_get_event): Check for it.
(keys_of_keyboard): Define lispy keys for
ns-put/unput-working-text.

* nsmenu.m (ns_popup_dialog): Resync window setting with X and W32
versions.
(EmacsDialog-runDialogAt:): Use NSModalPanelRunLoopMode.
"
98ccf24eab43a7434108cc6a5300e777356557e3,emacs-mirror/emacs,"Rename cvs-append-to-ignore to vc-cvs-append-to-ignore.

2013-09-20  Xue Fuqiao  <xfq.free@gmail.com>

	* lisp/vc/pcvs.el (cvs-mode-ignore):
	* lisp/vc/vc-cvs.el (vc-cvs-ignore, vc-cvs-append-to-ignore): Rename
	cvs-append-to-ignore to vc-cvs-append-to-ignore.

If/when someone complains about her package calling that function we
can add an obsolete alias at that point.
"
b366b3bbf5ce0f6b47afec2eff0f7d27291e9a6f,emacs-mirror/emacs,"* lisp/completion.el: Use post-self-insert-hook.

Fixes: debbugs:19400

(completion-separator-self-insert-command)
(completion-separator-self-insert-autofilling): Remove.
(completion-separator-chars): New var.
(completion-c-mode-hook, completion-setup-fortran-mode): Use it instead
of changing the keymap.
(completion--post-self-insert): New function.
(dynamic-completion-mode): Use it instead of rebinding keys.
(cmpl--completion-string): Rename from completion-string.
(add-completion-to-head, delete-completion): Let-bind it explicitly.
"
06a4f1102f40c2cb7ffa035b4f16b9039efaf95b,emacs-mirror/emacs,"Unconditionally reset load-path after dumping

* src/lread.c: (dump_path): Remove.
(load-path-default): Remove `changed' argument.
Do not set dump_path permanently.  Simplify.
(init_lread): Simplify.
(syms_of_lread): Remove dump_path.

* lisp/loadup.el (load-path): Warn if site-load or site-init changes it.
No more need to reset it when bootstrapping.

* doc/lispref/internals.texi (Building Emacs):
* doc/lispref/loading.texi (Library Search): Mention that site-load,
site-init cannot change load-path.

* INSTALL: No longer mention load-path and site-init/site-load.

* etc/NEWS: Mention this.

Fixes: debbugs:16107
"
e0607aaa2c6b33104fed475eb15452b2cdb6df03,emacs-mirror/emacs,"Make `checkout-model' apply to filesets.
* vc-hooks.el (vc-checkout-model): Rewrite.
(vc-before-save, vc-after-save): Adjust callers accordingly.
* vc.el (vc-editable-p, vc-next-action, vc-checkout, vc-update)
(vc-transfer-file): Adjust callers accordingly.
* vc-rcs.el (vc-rcs-checkout-model): Adjust arg.
(vc-rcs-state, vc-rcs-state-heuristic, vc-rcs-receive-file)
(vc-rcs-checkout, vc-rcs-fetch-master-state): Use vc-rcs-checkout-model
instead of vc-checkout-model.
* vc-mcvs.el (vc-mcvs-revert):
Use vc-mcvs-checkout-model i.s.o vc-checkout-model.
* vc-cvs.el (vc-cvs-checkout-model): Adjust arg.
(vc-cvs-revert): Use vc-cvs-checkout-model i.s.o vc-checkout-model.
* vc-svn.el (vc-svn-checkout-model):
* vc-hg.el (vc-hg-checkout-model):
* vc-git.el (vc-git-checkout-model):
* vc-bzr.el (vc-bzr-checkout-model): Adjust arg.
"
f818cd2a398ced7776c91e41331afb51b00b471a,emacs-mirror/emacs,"Restore Emacs 23 display-buffer functions and options.

* window.el (display-buffer-window): Rewrite doc-string.
(display-buffer-record-window): New function.
(display-buffer-macro-specifiers)
(display-buffer-even-window-sizes, display-buffer-set-height)
(display-buffer-set-width, display-buffer-in-window)
(display-buffer-reuse-window, display-buffer-split-specifiers)
(display-buffer-side-specifiers, display-buffer-split-window-1)
(display-buffer-split-window, display-buffer-split-atom-window)
(display-buffer-pop-up-window, display-buffer-pop-up-frame)
(display-buffer-pop-up-side-window, display-buffer-in-side-window)
(display-buffer-other-window-means-other-frame)
(display-buffer-normalize-special)
(display-buffer-normalize-default)
(display-buffer-normalize-argument)
(display-buffer-normalize-alist-1, display-buffer-normalize-alist)
(display-buffer-normalize-specifiers, display-buffer-frame)
(display-buffer-same-window, display-buffer-same-frame)
(display-buffer-other-window)
(display-buffer-same-frame-other-window)
(display-buffer-other-frame, pop-to-buffer-same-window)
(pop-to-buffer-same-frame, pop-to-buffer-other-window)
(pop-to-buffer-same-frame-other-window, pop-to-buffer-other-frame)
(switch-to-buffer-same-frame)
(switch-to-buffer-other-window-same-frame)
(display-buffer-alist-of-strings-p, display-buffer-alist-add)
(display-buffer-alist-set-1, display-buffer-alist-set-2)
(display-buffer-alist-set): Remove.
(display-buffer-function, special-display-buffer-names)
(special-display-regexps, special-display-function): In
doc-string refer to display-buffer-window and quit-restore
parameter.
(pop-up-frame-alist, pop-up-frame-function, special-display-p)
(special-display-frame-alist, special-display-popup-frame)
(same-window-buffer-names, same-window-regexps, same-window-p)
(pop-up-frames, display-buffer-reuse-frames, pop-up-windows)
(split-window-preferred-function, split-height-threshold)
(split-width-threshold, window-splittable-p)
(split-window-sensibly, window--try-to-split-window)
(window--frame-usable-p, even-window-heights)
(window--even-window-heights, window--display-buffer-1)
(window--display-buffer-2, display-buffer-other-frame): Restore
old Emacs 23 code, order and doc-strings where applicable.
(display-buffer-default, display-buffer-assq-regexp): New functions.
(display-buffer-alist): Rewrite doc-string.
(display-buffer-default-action)
(display-buffer-overriding-action): New variables.
(display-buffer, switch-to-buffer): Rewrite.
(pop-to-buffer): Restore Emacs 23 behavior but use
window-normalize-buffer-to-display.
(switch-to-buffer-other-window, switch-to-buffer-other-frame):
Restore Emacs 23 behavior but use
window-normalize-buffer-to-switch-to.
(pop-to-buffer-same-window): Rewrite.
(pop-to-buffer-other-window, pop-to-buffer-other-frame): Rewrite
using Emacs 23 options.

* org-compat.el (org-pop-to-buffer-same-window): Remove LABEL
argument from pop-to-buffer-same-window call.
"
750c33f71e7281e651f7315689f9085a1d0894d7,emacs-mirror/emacs,"Move the defintion of `gnutls-log-level' to the C level to avoid loading problems
"
fb6cdfc0f0692ead110ecd80df52f894fca8fb50,emacs-mirror/emacs,"* sysdep.c (str_collate) [__STDC_ISO_10646__]: Move up setting errno.
"
8afaa1321f8088bfb877fe4b6676e8517adb0bb7,emacs-mirror/emacs,"Add a few safety checks when ENABLE_CHECKING

This was motivated by the recent addition of module code,
which added some ENABLE_CHECKING-enabled checks that are
useful elsewhere too.
* src/alloc.c (compact_font_cache_entry):
* src/fns.c (sweep_weak_table):
* src/lread.c (oblookup):
Use gc_asize rather than doing it by hand.
* src/emacs-module.c (module_make_global_ref)
(module_free_global_ref, module_vec_size):
Omit assertions that lisp.h now checks.
* src/lisp.h (XFASTINT, ASIZE): In functional implementations,
check that the result is nonnegative.  Use eassume, as this
info can help a bit when optimizing production code.
(XSYMBOL) [!USE_LSB_TAG]: Assert that argument is a symbol,
to be consistent with the USE_LSB_TAG case.
(gc_asize): New function, when ASIZE is needed in the gc.
(gc_aset): Use it.
(HASH_TABLE_P): Move definition up, so that it can be used ...
(XHASH_TABLE): ... here, to assert that the arg is a hash table.
"
62efea5e881407a178c5c291575facc17dca8a3f,emacs-mirror/emacs,"* alloc.c (allocate_window): Zero out non-Lisp part of newly
allocated window.
(allocate_process): Likewise for new process.
(allocate_terminal): Changed to use offsetof.
(allocate_frame): Likewise.
* frame.c (make_frame): Omit redundant initialization.
* window.c (make_parent_window): Use memset.
(make_window): Omit redundant initialization.
* process.c (make_process): Omit redundant initialization.
* terminal.c (create_terminal): Likewise.
"
ba83908c4b7fda12991ae9073028a60da87c1fa2,emacs-mirror/emacs,"Misc fixes, and use lexical-binding in more files.
* lisp/subr.el (letrec): New macro.
(with-wrapper-hook): Move from lisp/simple.el and don't use CL.
* simple.el (with-wrapper-hook): Move with-wrapper-hook to subr.el.
* lisp/help-fns.el (help-function-arglist): Handle subroutines as well.
(describe-variable): Use special-variable-p to filter completions.
* lisp/emacs-lisp/macroexp.el (macroexpand-all-1): Don't expand `declare'
in defmacros.
* lisp/emacs-lisp/cconv.el (cconv-convert, cconv-analyse-form):
Handle `declare'.
* lisp/emacs-lisp/cl.el (pushnew): Silence unfixable warning.
* lisp/emacs-lisp/cl-macs.el (defstruct, define-compiler-macro):
Mark unused arg as unused.
* lisp/emacs-lisp/byte-opt.el (byte-optimize-lapcode): Use memq.
* lisp/emacs-lisp/autoload.el (make-autoload): Don't assume the macro's
first sexp is a list.
(autoload-generate-file-autoloads): Improve error message.
* lisp/emacs-lisp/advice.el (ad-arglist): Use help-function-arglist
to understand the new byte-code arg format.
* lisp/vc/smerge-mode.el:
* lisp/vc/log-view.el:
* lisp/vc/log-edit.el:
* lisp/vc/cvs-status.el:
* lisp/uniquify.el:
* lisp/textmodes/css-mode.el:
* lisp/textmodes/bibtex-style.el:
* lisp/reveal.el:
* lisp/newcomment.el:
* lisp/emacs-lisp/smie.el:
* lisp/abbrev.el: Use lexical-binding.
* src/eval.c (Fprog1, Fprog2): Simplify and use XCDR/XCAR.
(Fdefvar): Remove redundant SYMBOLP check.
(Ffunctionp): Don't signal an error for undefined aliases.
* doc/lispref/variables.texi (Converting to Lexical Binding): New node.
"
f5bdcb3221ba28326b47210773d84c49cc9b4a1e,emacs-mirror/emacs,"Improve file notifications, especially for Tramp

* doc/lispref/files.texi (Magic File Names):
Mention `file-notify-valid-p'.

* doc/lispref/os.texi (File Notifications):
Describe `file-notify-valid-p'.

* etc/NEWS: Add `file-notify-valid-p'.

* lisp/net/tramp-gvfs.el (tramp-gvfs-handle-file-notify-add-watch):
Improve implementation.
(tramp-gvfs-monitor-file-process-filter): Rename from
`tramp-gvfs-file-gvfs-monitor-file-process-filter'.  Delete
process if appropriate.

* lisp/net/tramp-sh.el (tramp-sh-handle-file-notify-add-watch):
Improve implementation.
(tramp-sh-gvfs-monitor-dir-process-filter): Rename from
`tramp-sh-file-gvfs-monitor-dir-process-filter'.  Delete process
if appropriate.
(tramp-sh-inotifywait-process-filter): Rename from
`tramp-sh-file-inotifywait-process-filter'.  Delete process if
appropriate.

* lisp/net/tramp.el (tramp-handle-file-notify-rm-watch):
Use `delete-process'
(tramp-handle-file-notify-valid-p): Check also, that file or
directory to be watched still exists.

* test/automated/file-notify-tests.el (file-notify--test-timeout):
New defun.  Use it at all places a timeout is needed.
(file-notify--test-cleanup): Delete directories recursively.
Cleanup also Tramp connections.
(file-notify-test02-events): Add tests for `attribute-change'.
(file-notify-test04-file-validity, file-notify-test05-dir-validity):
Add tests for `file-notify-rm-watch'.
"
68f06909711dc87eb7af7d32424578db6667a395,emacs-mirror/emacs,"Make `message-beginning-of-line' aware of folded headers

* lisp/gnus/message.pl (message-beginning-of-header): New function which
moves point to the beginning of a mail header.  The function is aware of
folded headers and with non-nil argument looks for the true beginning of
a header while with nil argument moves to the indented text of header's
value.
(message-beginning-of-line): Function is now aware of folded headers and
either moves point to the indention of a header or, in visual-line-mode,
searches for the beginning of the header.
"
351edece98dcafbfa9237ffc07a63b181877d6ac,emacs-mirror/emacs,"* lisp/progmodes/python.el (python-mode-skeleton-abbrev-table): Rename from
python-mode-abbrev-table.
(python-skeleton-define): Adjust accordingly.
(python-mode-abbrev-table): New table that inherits from it so that
python-skeleton-autoinsert does not affect non-skeleton abbrevs.
* lisp/abbrev.el (abbrev--symbol): New function, extracted from abbrev-symbol.
(abbrev-symbol): Use it.
(abbrev--before-point): Use it since we already handle inheritance.
"
7e47afad4513977ba3cc5a175081f1c258a8ddfe,emacs-mirror/emacs,"* character.h (INC_POS, DEC_POS): Rename locals to avoid shadowing.
"
2706144f145922839e82e5d0edb3d29463b729fe,ethereum/ethereumj,"Refactor to better encapsulate blockchain database
"
5ead5a5da0313989ddc33e0a8c39c421bb286309,ethereum/ethereumj,"Merge pull request #203 from ligi/ligi/code_review/fix_typos_and_cleanup2

remove typos / add missing modifiers / code cleanup"
f9b054cd578428b07e61f6fa6918f43362f37675,ethereum/ethereumj,"Clean up the initialization of RepositoryImpl and DetailsDataStore
"
182953bb3a993c0fdad1c0160952a3e888986964,ethereum/ethereumj,"Fix where block minGasPrice was used instead of tx.gasPrice
"
e86d83b261254eddb606f334a8ecddc5d47ce496,ethereum/ethereumj,"Removes unused transactionMap from Wallet
"
a6803e74c853510da8b0ca6a7f6c9c3161bba63f,ethereum/ethereumj,"Call Repository interface instead of implementation
"
ad50605eaffeb4356c6f29e41d35e1a6ec19eb37,fogbeam/cas_mirror,"removed unused reference from web app
"
218656199fedb1db6653d8c248bdf47a7e135346,fogbeam/cas_mirror,"represent assignedId as a String for Services Management

Javascript loses precision with large longs, work around this by using a string instead.
"
59f94df4622d366e3ebe43701df2fb59f74abe24,fogbeam/cas_mirror,"Clean up sms notifications
"
ffd32e69643d7c6bb9d77539030cb4f4ed7a1e16,fogbeam/cas_mirror,"working on build clean up
"
dd1fce66386b860e4bf5edadbec2f082a5611983,fogbeam/cas_mirror,"clean up REST API for JWTs
"
39812c171e6f5f1f2e3800d335b3cfaa96f19203,fogbeam/cas_mirror,"clean up findbugs
"
93c5f64f38080834139fc8ab50281222e9074a9b,fogbeam/cas_mirror,"separated sections, added status codes
"
be79f9a3d66d569828ecd73a0b176d9479093e61,fogbeam/cas_mirror,"clean up creation of principal factories
"
ec32223012e07d0c0b7e9a27a7e502bbf37483f0,fogbeam/cas_mirror,"cleaning up val references [force build]
"
a9fd0762013be09aab8d9a6a3539020857110ea9,fogbeam/cas_mirror,"optimize CI build
"
4de2a6b65fc3fc0915065f95148da0907ede7850,fourtf/chatterino2,"added a setting to collapse long messages by default
"
0a8073d0e5fc4cb63c077683f23d10c47e27354d,fourtf/chatterino2,"refactored SplitInput
"
c26422aec1765a40527a606aa84c2fe66206e81b,fourtf/chatterino2,"refactored MessageBuilder
"
5b26cdaa0777562a0b3c663a203528eca56bd5df,fourtf/chatterino2,"added split resizing and splitting
"
e0bb061c81f5877f55013c42177e06fc36d54656,fourtf/chatterino2,"refactored the settings dialog
"
818f7fca5aade40d830876ad5a58cae4f9320c3e,hyperledger/fabric,"Merge ""[FAB-9551] Extract TransactionContext"""
4cc8d04f900cd2b96e8204c67f257345c3612aad,hyperledger/fabric,"Merge ""[FAB-2210] Rename CONFIGURATION enums to CONFIG"""
97e3ae61168acad6f425cf38dde90b8fc50766af,hyperledger/fabric,"Merge ""[FAB-4622] Improve Retry text in orderer.yaml"""
e63662a3c755d988f2bff4b175049e919e0b665a,hyperledger/fabric,"Cleaup core.yaml security section

This change-set removes the unused properties from
the security section of core.yaml
Among other things, SHA2 is now default in core.yaml

Change-Id: I45b28c05e6c799c3ac6531f1e5d482be6f96a0a2
Signed-off-by: Angelo De Caro <aa3159afc1d353ecf7d91cbd242724ce1f99d443@zurich.ibm.com>
"
0cf1830cd339ca0c22560ea9b0f1e8bd724b53a1,hyperledger/fabric,"[FAB-8870] Return concrete types from constructors

The contructors for the gRPC client and server were
actually returning interfaces rather than
concrete types.  As there was really no use for
the interfaces in the package, the interfaces
were removed and concrete types are now public and
returned from the constructors.

Additionally, some cleanup on the types as well
to remove redundant fields.

Change-Id: I1c82f77aab3419fcde4f04e6a083428b85086bae
Signed-off-by: Gari Singh <10008a422f4be611b73174084ba2f7f909d5b402@gmail.com>
"
0c23ac1f467f2dde2b2a7c3708327ea40bc66460,hyperledger/fabric,"Merge ""Clean up peer logging - serviceability"""
f477ccc7e74c44f1ab0d217a1b06df072d68d76a,hyperledger/fabric,"[FAB-3171] Rename the lifecycle system chaincode

The existing name is lccc, would like to update it to lscc.

In this way we can keep all system chaincode with the same scc suffix.

This is also aligned with other system chaincodes like cscc, escc and
qscc.

Change-Id: Ica59de57ea15e79be252aaae263af9a27a19c896
Signed-off-by: Baohua Yang <dee3cfe538de2f2fa60a015b83efd726c9fa0f84@cn.ibm.com>
"
da5effe4c7f1f90fb91efa88d8318af19cc4d9ef,hyperledger/fabric,"FAB-1292 Gossip pull refactoring: Mediator

This commit introduces:
1) A pull.Mediator, an object that offloads
handling of messages and implementation of algo.PullAdapter from
the rest of the gossip code, so that it can be used for any type of
message we want to sync using the pull mechanism.

2) A certStore object, that holds certificates that are going
   to be replicated using the pull mechanism.
3) An addition of an identity message which is a certificate that's
   replicated among peers.

Change-Id: Ia7682c3c9874ee40fa3588706239f914f1e334fb
Signed-off-by: Yacov Manevich <632344b5da9bd743456189af4db4b56472defb8c@il.ibm.com>
"
8257b3ded2687b84a66efbbdb7cdee8bbac9c000,hyperledger/fabric,"Implementing VerifyBlock for Gossip

This change-set does the following:
1. Refactors the mcs package to simplify mocking;
2. Implements the method VerifyBlock of the
MessageCryptoService interface.
3. Tests

This change-set should be merged together with
https://gerrit.hyperledger.org/r/#/c/6321/

Change-Id: Ia4a1d92ee5ede55caaffe9a9b53afb2552308e2d
Signed-off-by: Angelo De Caro <aa3159afc1d353ecf7d91cbd242724ce1f99d443@zurich.ibm.com>
"
ec1bbdf6aba9952b7496df52d43e078d5cee6854,hyperledger/fabric,"Merge changes from topic 'fab-2178-b'

* changes:
  [FAB-2589] Clean up top-level orderer pkg
  [FAB-2588] Fix unkeyed fields in composite literal
  [FAB-2581] Fix if-else statements in deliver tests
  [FAB-2580] Fix return of unexported type
  [FAB-2579] Fix inconsistencies in ledger package
"
8028eb4b2a33fcedbaa4070cff0de3d5d80f0646,hyperledger/fabric,"[FAB-7108] Refactor ccEpFunc to string

The main purpose of function ccEpFunc is to compute chaincode
endpoint and return error if needed. It will be better to do
all checks and computation during the node start up phase.

The CR will do all the necessary checks in node/start.go and
panic if unexpected error. Therefore, it will pass only the
chaincode endpoint value (as string) to the follow up function.

Also, the CR moves panic from createChaincodeServer to serve
function and revises UT to cover all chaincode endpoint
computation cases.

Change-Id: Ie4802472f0dd04c3a3da1e1ac6e30f90463fb0b2
Signed-off-by: Boliang Chen <098bb68b66278ed600ffc04422124757db67c35a@gmail.com>
"
ab7e34f34d68bba4b1912f2bc05c817f19212f92,hyperledger/fabric,"[FAB-1468] Fix make protos and regen proto files

https://jira.hyperledger.org/browse/FAB-1468

This has been driving me crazy, so submitting a patch to fix.  The proto
changes were the result of running the normal dockerized make protos.

Change-Id: I18c2f7609d09efc8e57b9bb0de1ef6113198c294
Signed-off-by: Jason Yellick <3a1724207862302656e55e6f840a9996dad69e59@us.ibm.com>
"
1d98632af8a1ca7c7b769b56c83fd70844a13e64,hyperledger/fabric,"[FAB-9991] Cleanup bddtests/behave references

We no longer use behave in the fabric repo.

Change-Id: I636736bcd76e8582f111855c392f4ee3be2bcc62
Signed-off-by: Matthew Sykes <89c6e4c9c1046731a9c37abefc223a83de36a5d9@us.ibm.com>
"
ba288e1adcd371edcc5a4f9bdc99169f3ac475f7,hyperledger/fabric,"[FAB-1659] Update BDD Compose ENV vars

https://jira.hyperledger.org/browse/FAB-1659

In FAB-1612 [1] new configuration keys were introduced on the
`orderer.yaml` file. The ENV vars on the Compose files we use for the
orderer-related BDD tests however were not updated accordingly. As a
result, all tests would run against the default config setting
(read: solo) and the Kafka path would not get tested.

This changeset addresses this issue.

Additionally it:

1. Removes all environment variables from the Compose files when these
match the defaults in `orderer.yaml`. This reverses an earlier take on
the matter. The thinking behind this change is that we don't need to
keep two sets of settings unless absolutely necessary.

2. Formats `orderer.yaml` so that the recently-added lines break at 80
characters, as is the case with the rest of that file.

[1] https://gerrit.hyperledger.org/r/#/c/3879/

Change-Id: I0d1e137bd4a8e523edb7cb6a060c09ff80d31340
Signed-off-by: Kostas Christidis <e1a8399e36effe75a124102eb2a2bdfc82e0aab4@christidis.io>
"
985a9e291815cb1ca215f9809387651212cf0226,jkomoros/boardgame,"Manager.StateFromBlob -> stateFromRecord, which makes it unexported. Fixes #185.
"
692836f1b0a5974c713d6478f729d8969f39e5f6,jtablesaw/tablesaw,"minor cleanups
"
7be1354123a19255bef59e70eb776f373748778a,kmatheussen/radium,"Remove some gfx buffers that were not used (this commit might increase window resize speed)
"
f432898b671e644b1fcd165c05cca5fedf689f1b,kmatheussen/radium,"api: Renamed gui_setAlwaysOnTop to gui_setParent, etc.
"
d990f3b6a463b48e1be9752aa2a84760c3ece7e8,kmatheussen/radium,"radium::Vector: Rename add to push_back
"
a96578298a2cc52ba97632bc12e58525009fdb55,kmatheussen/radium,"Rewrote bus system. Buses are now SoundProducerLinks, like all the other connections.
"
3eefe53d080b84b5bc0aa4945ff5c82fce6b5a38,kmatheussen/radium,"Sequencer: 1. Add ""Show GUI"" / ""Move to a different seqtrack"" / ""Cut automation"", ""Copy automation"" to the seqtrack automation popup menu. 2. Remove the ""Remove (delete all nodes)"" option from the seqtrack automation popup menu (use ""Cut automation"" instead). 3. Add ""Paste automation"" to the seqtrack popup menu. API: addSeqAutomation2. API: Fixed the return value of addSeqAutomation
"
4774ffeb5da1252fa6eaae86db4b75b7e02a9069,kmatheussen/radium,"moved more unused code
"
a38380e6b73137c9199445f0de5852d492bc767d,kmatheussen/radium,"Sequencer: Optimize creating time conversion table for stretch automation
"
5115d839a539ab89d32f63eaad6b3be8fac16b09,kmatheussen/radium,"optimize rescheduling
"
ded5269937ca4bad2a990b62461ff3ed2bacabc6,leo-yuriev/libfpta,"mdbx-windows: rework mdbx_assert_fail() and mdbx_panic() to avoid dependency from CRT.

7 of 17 for https://github.com/leo-yuriev/libmdbx/issues/43

Change-Id: I40dc8d6a7d1d955c13c7d328ee904f0e6f30b248
"
ee4d5bb5d2fc3d2c893a08f15e711736d0dba51d,leo-yuriev/libfpta,"mdbx: rework TLS cleanup on thread termination.

Re-fix https://github.com/ReOpen/ReOpenLDAP/issues/48

Change-Id: Ie47d2ede0f47b382a30ab6a27546f249f56cf4f6
"
8238545befe8d30a7dd2f02d1cb40b105e58b7e6,libretro/RetroArch,"Cleanups
"
1e37515e2f425dc40e2c28c02b5c7241d350eaf6,libretro/RetroArch,"(XDK D3D) Rename d3d_render_device member to dev
"
a81baed9e2ecf555b134e7fd60fb5a782f564fb3,libretro/RetroArch,"Move hw_render_callbakc to video driver state and take it out
of global state
"
4ba88ccabfbe7d40e7330a2d14941c6a316dbc02,libretro/RetroArch,"Refactor away rarch_main_set_pause
"
4bbb05f4153e692eeda3e63e79d9d9b329771f67,libretro/RetroArch,"Refactors in retroarch.c to do with game reset
"
fd05b5a25c5f7076e87ea05e4e4ff0d1be157ee3,libretro/RetroArch,"rarch_input_set_keybind refactored away - input driver's set_keybinds
function now provides the functionality
"
fe1a0835809ce6459b9fbec1a1309a0a8857060b,libretro/RetroArch,"Revert ""Simplify menu_common_type_is""

This reverts commit 395dc79f6c3ebbe7a316664db35d4013daea85b4.
"
6f05cce0deb24c8eaca86463ea147e32fb31c091,libretro/RetroArch,"Get rid of menu_common_settings.c - add remaining public functions to
menu backend interface
"
f0a04fd98ca07986576f84ce58cef80c82329bc6,libretro/RetroArch,"Rename 'Load Archive/Open Archive')
"
a75c3b6154cc11ddce03be4a619977ff19380048,libretro/RetroArch,"(menu_displaylist.c) Cleanups
"
983e160e67cb238acd3dbdf7234b20f6e644b70e,libretro/RetroArch,"Convert file to C
"
8366ea976b4f95af2bef0c21573769e333d27593,libretro/RetroArch,"(Menu) Refactor MENU_SETTINGS_PRIVACY_OPTIONS
"
86de91d718e356eae23f28ea6660a048d32b22b2,libretro/RetroArch,"fastforward_ratio - add improved clamping code
"
9a4b28735b16034a7817c53e405bf68d3dc92288,libretro/RetroArch,"HAVE_SOCKET_LEGACY -> no IPv6

I had previously assumed that if AF_INET6 is defined, IPv6 support was
present. Some psychopathic console SDKs which shall not be named
actually define AF_INET6 but none of the IPv6 structures. As there is
therefore no way to determine whether IPv6 support is present at
preprocessor time, I'm ust assuming that HAVE_SOCKET_LEGACY implies no
IPv6. This means in effect that no consoles get IPv6 support.
"
ddb9cff2af1be43d4daf22737c5f32f70ce59393,libretro/RetroArch,"More header include cleanups
"
544bb079d747b0fc4286268f8de5a5c9959e3350,libretro/RetroArch,"Don't force '-' -> '_' in name stripping.
"
9e61f6ffd0a2c42e1c20ba606a6eceb9526810ef,libretro/RetroArch,"Cleanups
"
15780e7a876113085d20b7a363c8f0542f2d6fd8,libretro/RetroArch,"Cleanups
"
ce42e7fb65ab5d6a4ad5f1592283a0d448587842,libretro/RetroArch,"Remove default_paths.salamander_file and make hardcoded constant
in config.def.h
"
18355d47489ed330e2ecd0a73225cba2dbca1422,libretro/RetroArch,"Rename retro_perf_stop
"
83c51f136a987efec58454dfa5cb225a5bfc4339,libretro/RetroArch,"(RGUI) add screenshot command

(GX) general cleanups, change joystick threshold
"
eebcde721b75102fde2b621bcb3c4238d0e2d14b,libretro/RetroArch,"Rename video_coord_array
"
66ce3c1a0d01a1ac355d384782c9614aad1d145b,libretro/RetroArch,"(Menu) Cleanups
"
77e5cdbfde630eab11c419982181b26f7d549b75,libretro/RetroArch,"Revert ""Rename runloop_msg_queue_push to video_driver_msg_queue_push""

This reverts commit ad7386913cf2876d2bffd4bedf0284b23f1ed593.
"
74f202bbda2c7b5b2adaff51451e502601a6aaf4,libretro/RetroArch,"(Menu) Cleanups
"
37282401627174b572c4fc7442d427959b1d405c,libretro/RetroArch,"Move some code
"
fc169cf4fe5fb7ddb5120aae073d88e76d7895b4,libretro/RetroArch,"Split up libchdr_chd.c into several files
"
76f068f852a2baf62a1542a71e4592f5eeb3387b,libretro/RetroArch,"Simplify RARCH_CTL_VERIFY_API_VERSION
"
e83e6275ac5b990e168c5e6fb407c1b7885075b0,libretro/RetroArch,"Merge pull request #1038 from lakkatv/lakka

(Lakka) Move tweening related functions in an external lib"
88c68f479ae2dbb743e573fd8a71262a42923a0f,libretro/RetroArch,"Cleanups
"
7260e52a23ff4d64d160947ef04b72f96e32f070,libretro/RetroArch,"Make improved version of this - https://github.com/libretro/RetroArch/pull/7350/commits/873d60151fb7ff88fca5353a02b498dff7fc964b
"
8484ea4154540ea73a91e61c4ed8ff2a3c2efe71,libretro/RetroArch,"Merge pull request #6672 from gblues/master

Cleanup of Wii U launcher code"
5f0aa1852ec37ca1f1af1df2e7f2461f717f1cce,libretro/RetroArch,"This needs to be properly refactored later
"
8cb3172eea8ab950b52959dc9e48102dfbdda204,libretro/RetroArch,"(360) Cleaned up messy char to wchar and vice versa conversion routines
in 360 menu code by using new helper functions
"
0c8ee93e3e44aecd26f485562e53ed14b9d10012,libretro/RetroArch,"Moved cheevos files to their own folder in preparation for the changes to support leaderboards
"
3c8b9670083178f9f55f08b24c545ee605275b54,libretro/RetroArch,"(GL) Make EGL context file - have PSL1GHT build use eglGetProcAddress
- doesn't currently link
"
81fecc88eab1831b256ff6ad8f2885e3526872e7,libretro/RetroArch,"(RARCH_CONSOLE) Renamed console_rom_ext.c to rarch_zlib.c -
compiled it in for HAVE_ZLIB (for griffin) - moved rarch_console_load_game_wrap
to frontend_console.c and renamed it console_load_game
"
f38ba514ed077c472508a8f23018ab4c3cf5952e,libretro/RetroArch,"Get rid of unused variables
"
56ef89994696782b870bc3f164816da6863d17b1,libretro/RetroArch,"Move code to menu_content.c
"
1fea80c630e7d738956f048c2b17c150cf7df2c9,libretro/RetroArch,"Another header cleanup
"
b9d3de70ab50d7b74a34237df778de65b181e950,libretro/RetroArch,"Merge pull request #2967 from Themaister/master

Some ioctl cleanups, XMB ribbon in Vulkan."
a4983cc935f05c61ab7f89981a92ec9be6032738,libretro/RetroArch,"(Menu) Refactor MONITOR_INDEX setting
"
494e229b03d8148e7f1865e66b0cb34087be70d2,libretro/RetroArch,"Refactor this
"
6ebd4e139ebceb8c115c081dc85c2f0e716d6351,libretro/RetroArch,"Rewrite more string_is_equal call invocations as memcmp
"
65a2b0c900614419ff2e2123c0f4422de68fb7e7,libretro/RetroArch,"Move/rename menu_update_system_info to rarch_update_system_info
"
c0d4f3275d7117e7b58612084005056d50a721b3,libretro/RetroArch,"Merge pull request #338 from lioncash/master

Move the settings menu over to one menu, while also being Fragment based."
0245be31935d2203a6fbb9289be21dbdf891e920,libretro/RetroArch,"Refactor remaining toggle functions
"
4b0c2cd7de62b437079b56396a64b3a77193e59c,libretro/RetroArch,"Refactor menu_texture.c - uncouple it from file I/O
"
866501703fd98eafa0f3dfa4a10dd412cba93f2c,libretro/RetroArch,"Cleanups
"
811abcf6122b0c42849b61553ac9daed95aaf08a,libretro/RetroArch,"(RARCH_CONSOLE) Further Input rewrite for console ports
"
53df91232122d94a0277a004d0b35ea79bdca377,libretro/RetroArch,"(PS3) Move PS3-specific FPS printing code to ps3_ctx.c
"
2c2542ff63fa62ee3d5b3bdd87030192a07a8ce5,libretro/RetroArch,"Rename message.c/message.h to message_queue.c/message_queue.h
"
599ed62849dda637befba5c98a87cf31cbe98c1e,libretro/RetroArch,"(Overlay) Refactor some more code
"
37656eed84cd91c4351790e61194cbd9401531ff,libretro/RetroArch,"(udev_input.c) Rework input_state
"
b8e09769ae577e340a1f712037f98ac66ef7c5ae,libretro/RetroArch,"Cleanup
"
b038b4ae412759186b53a86bf3939a29b2fda169,libretro/RetroArch,"Move some variables to menu_input_ctl as static local variables
"
50d820f7903280b184db5a54ad98cebb2f6e0a44,libretro/RetroArch,"Shorten settings names
"
594b36488b4544253468ecd716bd141f965c578b,libretro/RetroArch,"Get rid of more small and slow menu wrapper functions
"
d364e5083a53bc39b70d7a68ade8f3b64873585a,libretro/RetroArch,"move net function back into its net define block
"
82d80cf24f16dc61ef4b3d3dd93b38c0aba245dc,libretro/RetroArch,"(PS3) Multiman cleanups
"
ea175fd26f0ab337d54f6ba531865b4be4857561,libretro/RetroArch,"Rename menu_entries_add_enum to menu_entries_append_enum
"
c0a1a6a3fe5f8b0953ea08bc67f006cb0893431e,libretro/RetroArch,"Move system->shutdown to runloop_ctl, turn it into a local
static variable
"
fd7e4db9aa5b9ceaa1bf57f35a6502234a3ecf60,libretro/RetroArch,"Combine system.c and runloop.c
"
1ec7b79ad62e563166ccebcf4ddee156b5e0dc35,libretro/RetroArch,"Rename another task
"
2bf636b913e6c0a8ff0892c5be92b5eb3bd1fac4,libretro/RetroArch,"Rename menu_driver_list_delete to menu_driver_list_free
"
468f7256df8ed278c45d6aa54eb702dbbf2b13f8,libretro/RetroArch,"(PS3) Add new ZIP extract mode - can extract ZIP to current directory
now
"
e34943194c683eca97eb8b184c9fa791d8039308,libretro/RetroArch,"Refactor camera driver code
"
a014f2db883e3195b255751e16e90ede152c4327,libretro/RetroArch,"Move framebuffer is dirty and other menu-related state flags
to menu_handle_t
"
1ec90df165f8c3e697daf4d0c3912f14a04b5888,libretro/RetroArch,"Refactor fastforward ratio
"
808004a1323d5ac53849fecfb735b5324d50d6a0,libretro/RetroArch,"(RJPEG) Cleanups
"
a3e4eff02a8304f1fe93d2a41f1ac481af65f29b,libretro/RetroArch,"(Cocoa) Move files around
"
58cfb27c5a106e6c83fda1431acb3eaec7641da1,libretro/RetroArch,"Split up some of the code in retroarch.c to general.c
"
4e6e46e9ebfe3d16c7c3e231ebac61f135635130,linkedin/WhereHows,"implements guided modal for compliance field tag entry. refactors radio component
"
3f569dc4c2e9c3533d8cddd03d4a6dfa995c8915,linkedin/WhereHows,"adds additional patterns request_header and mobile_header to tracking field regular expression. extracts tracking field pattern check to utils
"
a219625a59b4bdbce8179cb2af2cd8b8a323c0f4,liqd/a4-meinberlin,"Make ProjectContext a mixin

Mixins should not depend on their order on the class hierarchy.

By using @properties instead of setting them directly in the dispatcher
we don't have to think about class hirearchy orderings.
This was made possible due to the changes to filters which dropped the
requirement to set request.module|project

The module|project validation was dropped since we have no case where we
set the module|project from the url with a hierarchical e.g. idea_slug
from which another module|project may result.
"
140072c7be842602e884456da682638ab8095b4b,liqd/a4-meinberlin,"adjust views to dashboard mixin refactoring
"
2d1a74d4e0483e269eb540c0eabe5b0919234de0,liqd/a4-meinberlin,"Merge pull request #255 from liqd/2017-04-as-list-queryset

Refactor queryset of list view"
47389475548e08561e62f53845b197790b6ae3c4,missionpinball/mpf,"make methods public to fix CS
"
8a18714282cc1a88a3c0606bc631f5f29c8c6d99,missionpinball/mpf,"remove unused number from configure_driver
"
fda804203949ed34e42137dad37d86bcb0757915,missionpinball/mpf,"improve code coverage. add test for rgba_color
"
1c968e65f54d2cc92904ef1acf61e9fe0771c983,missionpinball/mpf,"add platform_controller. refactor platform
"
f554fc7468cee4368ff3c2f9b4da1c9a6a153382,missionpinball/mpf,"Renamed devices module to device

The devices name didn’t follow the standards of module naming
conventions
"
9a8837fba4720b8502ae3ef7c8f2311116c3f2f2,mrtyler/gpii-infra,"Sed-less pure ruby obfuscation solution, refactoring secrets
"
d28822e94d3a79eddf199ef3248bc61d9bb3a61f,nextstrain/auspice,"Merge branch 'master' into 296-download-modal

* master:
  Fix to d3Range
  Upgrade react-select
  Remove radium and replace style arrays with spread operators
  Cleanup and delint imports
  Move to modular lodash import calls
  Remove unused dependencies
  Finish migration of phyloTree to d3 v4
  Include tree helper functions
  Start on refactor layout.tree in tree reducer
  Migrate date conversion to d3 v4
  Continue phyloTree migration
  Start on phyloTree migration
  Continue migration to d3 v4
  Partial move to d3 v4
  eslint typo
"
06e73780dcdb6d1209ed437eeb8367d4f308a7c0,nextstrain/auspice,"Merge branch 'merge-simplify'

* merge-simplify: (22 commits)
  simplify latLongs() as per #361
  map uses nodeColors instead of calculating colorScale. Should be faster
  remove datasetGUID from tree reducer
  remove colorScale from maybeDrawDemesAndTransmissions
  check for dataset change and remove demes. Closes #365
  update how map calls changeDateFilter. Animation now works.
  comment out (no longer used) datasetGuid
  comment out (empty) maybeAnimateDemesAndTransmissions
  ensure tree is loaded in maybeUpdateDemesAndTransmissions
  simplify maybeDrawDemesAndTransmissions conditionals
  simplify maybeComputeResponive conditionals
  add (redux).tree.version
  minor
  remove zoomToClade
  reduce changeDateFilter actions from 3 to 2 and no getState call
  simplify visibility & branch thickness to a single action
  simplify load status & reduce number of actions of entropy
  comment out analysisSlider for now (revisit)
  simplified tree load status. Deprecated datasetGuid
  simplify load status of meta + seqs
  ...
"
b614f2b156368b4298c211f1f65ce30f1ce5e14a,nextstrain/auspice,"Cleanup and delint imports

"
f9afe1535dbd07473548e32c9c898193eafedfa0,nextstrain/auspice,"Move colorBy query param to redux

This was a bit more involved than layout, dmin, etc... 

* The colorScale state in App was kind of mess. It was getting recomputed every render pass via componentWillReceiveProps. I removed state for the moment, creating colorScale on render. Suggest recreating a saner state of colorScale via redux.
* There are still a couple load bugs (notably when trying to reload a genotype coloring from query params), but nothing that wasn't there before.
"
bd435c4fc76df40ee681e4c8da59c96428d79822,nsnam/ns-3-dev-git,"Refactoring LteUeRrc
"
1716b106dc735f9b1bd79495b5618178e4f5e8a8,nsnam/ns-3-dev-git,"Helper restructure: done
"
5ade799440d628c1d00c8b8c43ae24168b581ea0,nsnam/ns-3-dev-git,"QueryInterface -> GetObject
"
5de083e2345127e1a6424fd3dc65506fa5d9a834,nsnam/ns-3-dev-git,"value.h -> attribute.h
"
d6b315e54b82749332ab4b86bda7cf6b333c25cf,nsnam/ns-3-dev-git,"Move energy module out of contrib directory
"
ebb9193ef9666cad0ff8ab68525e9f5ff059c9fa,nsnam/ns-3-dev-git,"Bug 871: Rework construction of Wi-Fi rates

This patch attempts to lay some groundwork for enhancements to the Wi-Fi module
by bringing the representation of transmit rates more in line with the
standard.

The key part of the patch is the introduction of a type that corresponds to the
notion of Modulation Class described in IEEE 802.11-2007, Section 9.6.1, Table
9-2.

It also adds coding rate information to the WifiModes and centralises their
construction into a single WifiModeFactory method. The rates are also renamed
with reference to their Modulation Class.

WifiModes no longer have a WifiStandard, but the latter type still exists and is
used to imply the set of WifiModes that a MAC/PHY pair will support.
"
c9a4932c8012899166c345725f339ded6214108f,objective-audio/ui,"Merge pull request #47 from objective-audio/set_mesh_data

rename to 'set_mesh_data' from 'set_data'"
1c1873521fa7bd56c5f1ff425b6d25d203558352,objective-audio/ui,"remove unused geture_recognizer
"
a67d40ee8d8f585376e9940a1c6a57a8e6949bae,objective-audio/ui,"Merge pull request #211 from objective-audio/detector

rename collision_detector to detector"
7e932b0ec104874d5d78b0ef6c5c04fc6f501fcf,oliexdev/openScale,"Speed up table view by using spanned string instead of HTML
"
fe372af45328a862da33ef76c6cef7ad8ad64863,photonstorm/phaser,"Commit before tidying up redundant files
"
a814cc26cc8752b19f1070c903d64fc38a5a99de,photonstorm/phaser,"* Fixed issue 135 - Added typeof checks into most ArcadePhysics functions to avoid errors with zero values.
* Fixed issue 136 - distanceTo using worldX/Y instead of x/y.
"
b978a2b73b02e6520be45e2de0450859eb5a3c35,photonstorm/phaser,"Introduced a separate stage.fullScreenScaleMode property that is used to decide scaling when fullscreen.
"
7a6b643e996114d8ea9343bb05e51dd03b70ab9c,photonstorm/phaser,"Make Graphics methods chainable.
"
3b9386727e641c648b09632672ea2719f05bed7d,photonstorm/phaser,"Small refactoring and massively optimised the canvas renderer, also added new Mat3 class.
"
3f47d8dfc3c199583dd6f76ffe8699cc288d0b12,polymonster/pmtech,"material refactor wip
"
813c603a0d2b62ee73ad922995049c87a8fb5960,reimagined/resolve,"Rename with-postcss. Change readme files. Add tests to Jenkins
"
586d5c24fa72ecdb1d64fc38bd630f8ca96eed71,rsiebert/TVHClient,"Added logic to cancel a series recording entry.
Additionally removed duplicate constants and renamed one."
77798c2b76a4b6ade99c6a53202925aec4f124ae,rsiebert/TVHClient,"Reverted commits that are on the refactoring branch
"
2cf7b9b9cfac60f71256c4a6e2b860841de12acd,sklintyg/statistik,"Cleanup code.

Fix broken code test.
"
ababa452912d08759e7a0f5035c651f1370bb342,sklintyg/statistik,"Renamed api class FallPerLan to SjukfallPerLan
"
24c536f4795fc562dda6b781f7956074c3d2d430,sklintyg/statistik,"STATISTIK-166: Added details view for long sick leaves for verksamhet. Also refactored the model used by cases per month to make it generic enought to be used also by this new long sick leaves detail view.
"
d569a65321dacfc710ac231bd31d5e79261ea869,tentone/nunuStudio,"Able to drag and drop textures to object
"
7c9d3c185708a9a608913d26260a3317e6798360,tentone/nunuStudio,"TextureAssets and minor refactor

Renamed initialscene to defaultscene
Fixed readFileBase64
"
34fa306215218d8d75c9eb712b5734d0493213a6,tentone/nunuStudio,"Audio and Video serialization done

Moved some files
Added FPS example
Renamed Model3D to Mesh
Added PLY and VTK Loaders
Refactored some ObjectUtils functions
"
506e8023de3832e4f507d926fa41c2288e9ffa24,tentone/nunuStudio,"Clean up

"
ff19a2e56f9b3d3e274a68f803be4fb873da363f,thalerjonathan/phd,"refactoring and writing
"
3848cb2f095d6ab9acfd9a19e013b8114c32472c,thalerjonathan/phd,"restructuring: ace and social simulation no more subsection of fields of application
"
1242bb007eff622e4d6dea82ccc0ecee2901dcda,toggl/toggldesktop,"Rename WS callback, will use it for all changes
"
a066334fcc3e99c6d80c0f441fbe5b56fcb70cb8,toggl/toggldesktop,"Improved offline handling
"
95b589283966a459dba546cd3f534eda5f799e0f,toggl/toggldesktop,"Split HTTPS client and WebSocket client
"
5e4fcb0ae4d7037f0b949e947d1f2084383e2e3f,tonyofrancis/Fetch,"enqueue action option rename
"
4d45743e389a03777ad5120745740cf2a7327efd,vespa-engine/vespa,"Revert ""Merge pull request #7837 from vespa-engine/revert-7836-bratseth/remove-unused-rpc-server-take-3""

This reverts commit 0c39992b60e6103a85fa00362df74930a660e51c, reversing
changes made to a8277a3a486f7fd174e562bf174cfa72aede9cee.
"
9967338b1a3514830e92924d868046ee2cfc97db,vespa-engine/vespa,"Merge pull request #4533 from vespa-engine/revert-4453-jvenstad/zone-cleanup-4

Revert ""Jvenstad/zone cleanup 4"""
dbf6ebc7ad3df6ad197b2a81feae870d933e7ea3,vespa-engine/vespa,"Merge pull request #6032 from vespa-engine/hmusum/remove-debug-from-response

Remove debug fields from response (not used anymore)"
906980b5722c061673574fa74d6960e077f477c1,vespa-engine/vespa,"Create Athenz tenancy using Okta

- Use ZmsClient from vespa-athenz in AthenzClientFactory
- Rename ZmsClientImpl (controller-server) to ZmsClientFacade and modify it to use ZmsClient
- Move ApplicationAction and HostedAthenzIdentities to controller-server
- Change ZmsClientMock to mock ZmsClient from vespa-athenz
"
65dcaa714247b95459495338f044e89446d9a986,vespa-engine/vespa,"Optimize includes.
"
83108df45e6f9c635771a2cad7fd7cd296b9f799,vespa-engine/vespa,"Revert ""Merge pull request #7831 from vespa-engine/revert-7818-bratseth/remove-unused-rpc-server""

This reverts commit 0aeda846a4dd36c03f49e4504e91ee2c813bde87, reversing
changes made to c0513ac34d2c438e9f97e699659855029e1f06e8.
"
e54857bf484158e84e3f13ce44ca7b8ad0ff71aa,vespa-engine/vespa,"Merge pull request #2705 from yahoo/freva/simplify-tests

Freva/simplify tests"
1c5eb1dafb6419158cf848d5acfea62d0a5824fc,vespa-engine/vespa,"Revert ""Gjoranv/split parent""
"
fb8d2cff4c80e38f30c689e833068e8eb05b4fb3,vespa-engine/vespa,"VIP status for combined clusters

When a container and content cluster is set up such that
nodes are paired 1-1 and all content nodes have the entire corpus,
containers can bypass dispatching and always search the local
peer content node (""direct search"").

In this case, if the local content node is down or is missing data,
we prefer not receiving traffic on the local container node to avoid
the unnecessary latency and network load from having to route queries
from the local container to a remote content node.

This commit determined VIP status of containers based on the status
of the local content node, instead of the default method, when we
recognize that we have a ""combined cluster"" configuration.
"
e6993aad49cd2f5343a556dfd4b4f414a20a0582,vespa-engine/vespa,"Merge pull request #5000 from vespa-engine/hmusum/remove-unused-setting

disableFiledistributor is not used anymore"
a55b45e2bb1442b94480b585ab2b973c15d4be36,vespa-engine/vespa,"Replace / in Tensorflow constants and placeholders to _
"
42452fc330121c5df3c4925a48c5a05436b7bf54,vespa-engine/vespa,"Merge pull request #2956 from yahoo/geirst/remove-temp-symlinks-used-when-renaming-binaries

Remove temporary symlinks used when renaming binaries."
c324bc8ee6474ad5f951f7220bd2ee7f8291fb76,vespa-engine/vespa,"Merge pull request #4064 from vespa-engine/jvenstad/deployment-cleanup-3

Jvenstad/deployment cleanup 3"
b163ab0af963bd3184793ada0c7f10550d95021f,vespa-engine/vespa,"Merge pull request #5141 from vespa-engine/bratseth/simplify-tensor-transformer

Bratseth/simplify tensor transformer"
da543305317e887582315c1e4f25b080edcca430,vespa-engine/vespa,"Merge pull request #5895 from vespa-engine/hmusum/add-maintainer-for-removing-unused-tenants

Add maintainer for deleting unused tenants"
8a45a58af8275760a30a88cd1de1b609844b07d8,vespa-engine/vespa,"Name changes, minor refactoring, should be non-functional only
"
93fc424035ae8f2050aa3b9e71e4e41f76354b29,vespa-engine/vespa,"Renamed submethod
"
e381b0f63361c87e4e42736e6d2e82ff4c652e4c,vespa-engine/vespa,"Rename AthensDomain -> AthenzDomain
"
85a1cd1615c61fbf4bcf12479d8baa600763bbf6,vespa-engine/vespa,"Rewrote StorageMaintainer to wrap calls to node-admin-maintenance
"
b3233b95c6f0c26d03b7cdf6686138507fb940b5,vespa-engine/vespa,"Merge pull request #2404 from yahoo/geirst/refactor-searchlib-docstore-code-and-tests

Geirst/refactor searchlib docstore code and tests"
adbf51ef6537c663317886a31d908a0ef0e5269d,vespa-engine/vespa,"C++ style fix: Use foo() instead of foo(void)
"
34cc0a2f116f620cbc1a894dff93691f528600a2,wilkerlucio/pathom,"Improve performance on simple list queries
"
a5ef975adfcd0a4796d3ce9b6dd7f975bc9c0988,wilkerlucio/pathom,"Improved path cost calculation, don't count same sym twice, consider cache in multi-step paths
"
3dbaf8c083f5fec0326b736f87fd82c2938a19d1,wilkerlucio/pathom,"BREAKING: Renamed ::pc/wrap-resolver to ::pc/wrap-resolve
"
71bb4973cdfe56498ddfd79c53a58937a0bed646,wilkerlucio/pathom,"Rename ::pc/mutations to ::pc/index-mutations
"
91729a9694a95760099a6d2633977975b1ee3fa4,yonaskolb/XcodeGen,"Add support for simple files excludes from sources #5. (#135)

* Add support for simple files excludes from sources #5.

* Add pattern matching for Source excludes #5.

* Simplify getting Source.excludes from jsonDictionary.

* Remove recursive pattern matching and formatting.
"
f017fdd05b4c67ee4a503dbf2dcc8c8effe56e32,Anveio/mturk-engine,"Rename audio1 to audioNewSearch
"
cadf22871ad6514be027c2b2565aff07918cd032,AvaloniaUI/Avalonia,Merge branch 'master' into improve-open-file-dialog
44226cf8f76db4a6f229f1130a3c882dca59d2ed,AvaloniaUI/Avalonia,"Merge pull request #1715 from AvaloniaUI/unify-render-animation-timers

Unify render & animation timers"
7a6b3e3fdd17e73853383e46407887b5317d2493,AvaloniaUI/Avalonia,"Merge pull request #1695 from AvaloniaUI/templatebinding

Simplify TemplateBindings"
02692183c2df1d317017617dde55a822b29cb138,AvaloniaUI/Avalonia,"Merge pull request #924 from wieslawsoltes/cleanup

Cleanup unused items and build warnings"
71f745c721767f3162fac06fa3cf9745d71c9628,GovReady/govready-q,"refactor imputed questions so that they are performed once along with finding the next question to answer

Since imputed values should be evaluated using a context that follows the dependency tree, rather than linearly as the questions are listed in the YAML file, it was helpful to combine the next_question and impute routines. Imputed values are now only calculated when all of a question's dependencies are available. User answers that somehow got entered but now their dependencies aren't satisfied are dropped.

That necessitated some changes to make project root modules work. Since projects have an introduction that isn't answered by the user, we have to pretend the _introduction question is answered so that project tasks show up at all (i.e. their questions' dependencies are satisfied).

Additionally, this changes where the start of dependency evaluation is. It used to be with the questions mentioned in the module document outputs. For projects, questions are typically not listed in a document output. But they must be evaluated. So we now start the evaluation at questions that are not the dependents of other questions. That means we will always see every question. And since this routine now also handles the next-question logic, questions no longer need to be mentioned in output documents (or be a dependency of one that is) to be asked of the user.
"
7f99a081d601e33a7fd6f1bf849e935975163690,GovReady/govready-q,"Merge pull request #470 from GovReady/jt_primary

Fix #467 (cancel project rename), #469 (missing email confirmation email body template)"
2e678dfbed6740ba6e736979f1d4a1b42ca103c8,Jedisjeux/Jedisjeux,"improve product grid with status label


Former-commit-id: 5620884f478142d71558deef6c794d229840ec87"
bb7ff9656f1a92d9930d1c458dab4259f7a2aba1,Jedisjeux/Jedisjeux,"refactor game review templates


Former-commit-id: a10e87476da283a7e1107e319a3e30127ec518ea"
a8ad3c3661a58a4eb6a66455bc7320feb4d52780,PureSwift/Bluetooth,"#72 Refactor source layout
"
7ce7d161bfc71b712d5e9781de0b0e1d4b2e1ddb,QEF/q-e_schrodinger,"Makefile simplification: TOPDIR is used to define the same LIBOBJS everywhere.
In case of trouble, see instruction in the make.inc file.


git-svn-id: 5d23e60e07e2295b11e715623d9852ba2611792f@12840 c92efa57-630b-4861-b058-cf58834340f0
"
d34029bf6b60505412e3ea93422534a413360e02,QEF/q-e_schrodinger,"All references to EE/ subdirectory and to libraries in Multigrid/ removed.
Calls to variables and routines in EE/ commented, for the time being.


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@7226 c92efa57-630b-4861-b058-cf58834340f0
"
4984a3c7ca2436c2341ece8d6aaddab301e4b5de,QEF/q-e_schrodinger,"Some cleanup and tidying up


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@6333 c92efa57-630b-4861-b058-cf58834340f0
"
f07983e01ce9d3326331e22a6a2355dce6106afa,QEF/q-e_schrodinger,"Tentative improvement of the EXX especially +US and PAW codes
1. instead of doing a mp_sum(exxbuff) I have introduced a series of communicators that can be used to broadcast the exxbuff among pools with the minimumamount of communication and without the need to sum a billion zeros. This seem to be much faster, and should no more increase with the number of CPUs, which was worrying me a bit
2. changed the sign of PAW Fock energy, I'm not sure where the minus come from, but with this expression you get the correct ratio of Fock and Hartree energy when computing a single band
3. computing <beta|psi> for the k+q grid is no more done explicitly with calbec, but the projections are rotated from the irreducible grid. In order to do so, the values of <beta|psi> is stored in the routine sum_bands, which may not be the idea place
4. the ultrasoft augmentation is now added on the ecutfock grid, in both G spce and real space, as a consequence the real-space smooth grid is now unused, and I have removed ii (I have left the bits of code commented as it may come useful in the future)
5. (not EXX) when using verbosity=high, the various component of the PAW contribution to H and XC energies are printed on screen, as well as the total (plane waves+PAW) H and XC energies, this was particularly useful to test EXX and I was tired to havvign to add it again everytime I touch this part of the code
6. I'm a bit confused about the values of ""printout"", I'm afraid I may have messed something up in electrons. Now I have set printout to zero when exx_is_active, which seems to not print anything strange (Otherwise the HWF energy was absurd) from the svn diff"" it looks like it was printout=1 before

LP


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@13119 c92efa57-630b-4861-b058-cf58834340f0
"
9b276586b6725e2ddc65f271a08e5ae6f5817412,QEF/q-e_schrodinger,"More cleanup of k+G indices: almost all occurrences of k-point dependent ""igk""
variables deleted; almost all occurrences of ""npw"" made local (PW and PP only)
Variable ""current_k"" must be set before calling h_psi (as before, although it
was used only in some cases). All changes should be safe, but testing of PP 
and PH is very limited.


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@12428 c92efa57-630b-4861-b058-cf58834340f0
"
000587c7099a3d1bff59c2c982f3bc8b1c25aa77,QEF/q-e_schrodinger,"New code for Fermi Surface plotting added. Removed obsolete band_plot.x code.
The only remaining fortran-77 codes are in QHA and Minpack in GWW.


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@11791 c92efa57-630b-4861-b058-cf58834340f0
"
1d420423a5be40d31d2a100aae71ccf743a6fa10,QEF/q-e_schrodinger,"EXX with k-point parallelization: removal of a useless variable
--- This line, and those below, will be ignored--

M    PHonon/PH/phq_init.f90
M    PHonon/PH/elphon.f90
M    PW/src/xk_wk_collect.f90
M    PW/src/exx.f90


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@12193 c92efa57-630b-4861-b058-cf58834340f0
"
397fb04592745c3ee465ba64599eb24de3a6c869,QEF/q-e_schrodinger,"Monofield renamed everywhere to gatefield, according to comment to the QE paper
Also, example reference regenerated (smearing type changed)



git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@13720 c92efa57-630b-4861-b058-cf58834340f0
"
dcbec83b39330b823c28a527233a8816a5e0191f,QEF/q-e_schrodinger,"Full LDA+U scheme (with U, J, and other parameters) is implemented
which should also work with noncollinear magnetism and FR pseudo-potentials.
Old simplified version is kept and runs by default. New implementation 
can be invoked by specifying lda_plus_u_kind = 1 (it is 0 by default). 

  


git-svn-id: 74e6431733c050716dad9223ffe8dd2aefa9cfba@8694 c92efa57-630b-4861-b058-cf58834340f0
"
636712cef96d735a087bf6f1bdc7cbe019fc2d01,QEF/q-e_schrodinger,"- scatter/gather like subroutines that act on fft grids,
  moved from PW/para.f90 to Modules/fft_base.f90


git-svn-id: 5d23e60e07e2295b11e715623d9852ba2611792f@4614 c92efa57-630b-4861-b058-cf58834340f0
"
be76efc3436fe0710548ad551e96db84ea4d04d3,QEF/q-e_schrodinger,"More cleanup (?): modules ""uspp"" and ""symme"" extracted from ""pwcom""
everywhere. I didn't like the previous half-baked state.


git-svn-id: 5d23e60e07e2295b11e715623d9852ba2611792f@5128 c92efa57-630b-4861-b058-cf58834340f0
"
643bf5d9a79d170c4051e4ae1859f8e6fa898d59,ROBOTIS-GIT/emanual,"Improved mobile UI
"
e336947f594c5cc047cc7bc8683144f0d689b0b3,SSEHUB/EASyProducer,"VTL improvement

  - {}; as standalone result expression
  - fix for container init vs. stmt block"
2be547624c7b5d760cf4f303cc37ab2ac38db213,angular/core-builds,"ffda3e4 build(aio): simplify the primary overload's anchor
"
6513b4e393b9ec6e2090fd4fe2602e93097c0499,angular/core-builds,"08a18b8 refactor(common): Remove ngOnChanges from NgForOf (#23378)
"
3c93ba22c9427b2feb9b3686f7b4042c3aa771f8,angular/core-builds,"675e3d4 refactor: remove most facades (#12399)
"
7d8666cbc7811a7146cd937bc364bc0d4fa2bbf5,angular/core-builds,"910a16a refactor(ivy): remove directive references from template (#22986)
"
d2adc1d7d78120bed00396ccad0f6443432695c1,angular/core-builds,"3e73bea refactor(compiler): convert metadata classes used in summaries into interfaces (#13123)
"
588d9e96d83bb21b8036e91a94e718273720e091,angular/core-builds,"8e03f65 refactor(router): improve flatten fn
"
96cd934e860c35dda771abfa28c78473aed79d25,angular/core-builds,"671f734 refactor: misc cleanup (#11654)
"
87a384a7b5b528a9c4f8dbc50fcb7f92004d1955,angular/core-builds,"8ceffd8 fix(aio): improve transitions between pages
"
ea2da1ae75282eeeb4a9fcbbd8c7b05969b81c99,angular/core-builds,"b44f5c6 build(aio): make less verbose tools
"
c3cc7a84b0325f2c7c98c38b76edb4c18efe589c,angular/core-builds,"b64b5ec refactor(facade): Remove most of StringMapWrapper facade. (#12022)
"
0a12928c282400ee70bf5f589fb8a597574fc472,angular/core-builds,"7dbc103 fix(upgrade): improve downgrading-related error messages (#26217)
"
e759b5a840daad4d902aee959f0ef37f78a65a6d,angular/core-builds,"62e7b9d refactor(ivy): code simplification (#22082)
"
25262917d95e08de38ad5e55566229545c350c69,angular/core-builds,"a24e652 ci: clean up CI logging, folding, add build time logging, and improve error handling (#14425)
"
7b1740daf669d2a24d841eb48a4885895a24f049,angular/core-builds,"735dfd3 refactor(ivy): replace LNode.dynamicLContainerNode with flat LContainers (#26407)
"
4b47bebcacdade34d0451cba8ac555833619c71f,angular/core-builds,"46aa0a1 fix(animations): properly recover and cleanup DOM when CD failures occur (#20719)
"
dfab5af5df7ee029030c3ac45c1e6a2f7143a3f6,angular/core-builds,"89c6161 docs: improve github labels by introducing ""PR target"" labels (#18436)
"
627d82bdf46e98732454a7188a84e46c493ce87b,angular/core-builds,"90b0713 refactor(compiler): don’t write summaries for jit by default
"
7ea80a298f086a2c126061a4e7eec8229bf22c1b,angular/core-builds,"1bd04e9 refactor: remove unused imports
"
15a3777f0702d8b67a3cfe08437c4ac78269ac90,angular/http-builds,"b83fe6f fix(upgrade): Prevent renaming of $inject property (#16706)
"
1fba2322d004c371a27a1c2c28db9523161ca2b6,angular/http-builds,"e53179e refactor(ivy): move parent from LNode to TNode (#24189)
"
43c162402be8ba8ec94ab670ee347fb8ab6553f1,angular/http-builds,"2326b9c fix(service-worker): clean up caches from old SW versions (#26319)
"
706247bcba0b9ac36ac9029ec2740b4bcf2b7955,angular/http-builds,"c65b4fa refactor: format & lint
"
104c9efe2f1c8735eb6ea6f122362010261b9291,angular/http-builds,"25c1f33 refactor(docs-infra): bump polyfills payload limit (#25806)
"
ad127919ceb942d5cb50150d42834c09844e9601,angular/http-builds,"2d7b3a8 refactor(core): remove an unused import in application_ref (#13901)
"
dc0d78e347c1dcb33953dc50c0631173eb33767b,angular/http-builds,"3f5a3d6 refactor(ivy): add internal `isProceduralRenderer()` (#22055)
"
6d0c8fc977682b87b759e3dd6e9cd8007533a0b1,angular/http-builds,"21d213d refactor(aio): drop `run` (from `yarn run`), rename script and remove unnecessary cmds
"
44a7508bda4efc3d91598924f8cdcb3360392172,angular/http-builds,"ce40e85 refactor(common): update CLDR data to v33.0.0 (#23265) PR Close #23265
"
e8500a5671d9fa59cf73f3fe5e4113d3f558382a,angular/http-builds,"2c0c86e fix(compiler): improve the error when template is not a string
"
ef9adf3d8063b65dc1472154dc4f2db4b6b0a82a,angular/http-builds,"b7fa5de fix(core): improve error msg for invalid KeyValueDiffer.diff arg (#15489)
"
3f2f982e51b4b31040fad7d2f5d38e0cfc79eaa3,angular/http-builds,"fdb3f26 refactor(compiler): cleanup (#15960)
"
7ab257c74e38f20c9f7c3b8b03b6f628617cc5b3,angular/http-builds,"b6aad07 build: remove duplicate dependency on TypeScript
"
b9b44e034883194d12cef2f20a4ad0bf3814ad84,angular/http-builds,"1a9e096 refactor(compiler): make arguments in `InlineArray` optional.
"
96e09db401b905aae0a63024b421e6169307a0b1,angular/http-builds,"6e73300 refactor(ivy): cleanup directives & pipes import (#23369)
"
0aa185567dccdaf088869586adea1260d75c82fc,arescentral/antares,"Make play-sound actions look more natural
"
b56649a831591391998a080aeb246107d34e83eb,brython-dev/brython,"Improve implementation of function defaults
"
02a4fcf0734edb53d413cb1cce2c213f4de651ed,brython-dev/brython,"Move some exception functions from py_utils.js to py_exceptions.js ; if a SyntaxError happens in a comprehension, print correct error line
"
39cfb7f6eda4cc602362cab103103e8fe605552f,couchbase/ns_server,"MB-6403: use optimized math for cache miss rate

Obvious stuff. Thanks a lot to Mike Wiederhold for spotting this.

Change-Id: Ia3d0e305e4f723865d7d55dd10106cb7ee10dcfa
Reviewed-on: http://review.couchbase.org/20105
Reviewed-by: Michael Wiederhold <a17fed27eaa842282862ff7c1b9c8395a26ac320@couchbase.com>
Tested-by: Aliaksey Kandratsenka <340b8e09ca65cd3fc686427fcfed17e87eaf61e2@gmail.com>
"
b6de8d12a39791a0b6a6e95f67d49235f2e8bd7a,couchbase/ns_server,"Random code cleanup, remove some spam
"
cab601e663214362956e00cf8d94ea8b183f42e7,databrary/databrary,"revise auth investigator languages
"
126acdfe1e903c26b4f7d0e12593fa2c6330d0ad,databrary/databrary,"use jquery ui events instead of angular to call
"
e599fbcb8bc120271c0a18037688b63ff2fc3a27,databrary/databrary,"WIP: start unifying all models into modelService

To deal with circular dependencies.  It's more efficient this way
anyway.  Non-unified models are broken in the mean time.
"
dc4b5ce8940fd5229a08fb0067f1937c07fccc25,databrary/databrary,"WIP: more flexible transcode infrastructure
"
75ae38da81fd3a100e22624331512bd0434035f9,databrary/databrary,"Remove extension, reassemble when building original file name for assets

- the name of an original asset has the extension inside of the name, so
when building the name for downloading, remove the extension, build a trimmed name,
then add back the extension
- each file name has a limit on size, unsure why, so format needs to be added after
capping the file name size
- also, when reading original asset, use the proper format instead of making a placeholder
format to indicate the file is a audio/video file
"
77553a6d2e484156b8ec404302d2f47615844bb9,databrary/databrary,"Move more asset functionality from types to models
"
7d194a08180a3131b70a9701d9d8b7fff08465e9,databrary/databrary,"Reorganize record controllers
"
8e88c4f81d2e213609e55e8be4a511d54f3fff10,databrary/databrary,"Simplify and refactor authorization view/controller, add info

Synchronized schema
"
0de1eb834d7aaa370c6396ea69915846967e0133,databrary/databrary,"Merge: Refactor with HLint

1. Browse http://databrary.github.io/databrary/hlint.html
2. `$ hint='Redundant do' # for example`
3. `$ time vim -q <(hlint -j -o ""$hint"" src) +'sil cfdo sil !hlint -o ""'""$hint""'"" --refactor --refactor-options=-i %' +q`
4. Check, run tests
5. `$ git commit -am ""Refactor: $hint""`
6. Repeat until satisfaction is achieved.

* [x] Unit tests
* [ ] nix-build (running)
* [x] smoketest

Merging pull request #641 from databrary:chreekat/hlint-refactor
"
35a880e5b6af0c97dfcdf3c7cb9d00f2c1324b51,databrary/databrary,"Fix clickElsewhere not to break other click events

Also rename site/view to site/home

Fixes #2354
"
22bb5fff06460b004056092f202db7e35e47ba81,databrary/databrary,"Replace native `.map` function calls with `_.map`

Looking at a jsPerf benchmark here http://jsperf.com/native-vs-array-js-vs-underscore/8, the Lodash maps are substantially faster than the native.
"
c9f929d6cfc54a46beb36ee26a01b50c00e2ac99,databrary/databrary,"Rename some things
"
1235e53894f37bdf762a83a30c77eb1fd81f3ca3,datawire/ambassador,"Merge pull request #790 from datawire/flynn/dev/test-cleanup

Clean up a bunch of test failures"
233474dcf352d29d1c39dab2b2d5162dff25fedb,datawire/ambassador,"Merge branch 'release/0.50.0' into flynn/dev/labelling

* release/0.50.0:
  removed unsed buffer service
  updated dockerfile with the custom envoy image
  moved buffer config into ambassador module
  fixed schema and v2listener
  added http buffered test
  initial commit interdax poc
"
44c50d8b859ade493edf75fdec297bee841e1211,decaf-emu/decaf-emu,"opengl: Remove unnecessary FrameBuffer struct.
"
ed08088f476e0e442e3f8e7c2bde4a95dcd88781,decaf-emu/decaf-emu,"Added glbinding library to simplify OpenGL usage.
"
75f0d8ee909b8113b97af0e1356c0e500366e3de,digitalocean/netbox,"Closes #2578: Reorganized nested serializers
"
a870a3b9185d35580818d7663618d9917ebf4caf,digitalocean/netbox,"Fixes #1166: Re-implemented bulk IP address creation
"
f8a961b56816470a389a6b7e547b60b16313e18d,digitalocean/netbox,"Cleaned up import statements
"
c53488c6c74e74f70330dcfcb9d876cf0afe992c,education/classroom,"Use ActiveRecord callbacks for model creation

When you create a model on Classroom, it will fire of an API call to
GitHub.com in order to create the corresponding object on the site
(Team, Repo etc). Additionally if you remove the object from the
database (a RepoAccess) for example, it will also deletes the GitHub.com
representation (the Team in this case).

This makes the code easier to follow and allows for re usability. The
creation of teams and repositories has been extracted out to Rails model
concerns so that any model can have team creation or repository creation
without too much work.
"
f2119c6c371950911a4e22f20b2a56ef2baadd04,endeavourhealth/EDS,"Refactor EMIS CSV packages
"
207b23462270db054d6c227b0b1abcdb4471a25f,expertiza/expertiza,"Refactor and merge E1761
"
bc3bcaa5d31285ada77a0410d562ed4e513fe034,fetus-hina/stat.ink,"use jp3cki\yii2\flot\FlotAsset instead of app\assets
"
967c7fa265c194ceba79381aef2061ee6a06e24a,fetus-hina/stat.ink,"use jp3cki\yii2\zxcvbn\ZxcvbnAsset instead of app's
"
2397354c2ff9e34191539f026c54a56787d14e0d,gift-surg/GIFT-Grab,"Issue #25: pixel format conversion pointers made class members instead of allocating for each frame
"
4a3d9bbf6466deecf899b7694ffbb714b307240e,github/VisualStudio,"Renaming the output property to avoid graphql alias issue
"
84631f5577d39844dd13e95fa0e6e31663af6ce4,github/VisualStudio,"Replace ActivateItem with open/diff file ommands.
"
e6a2f1e8042fbda24a68fb31ab1468472ffde4c0,github/VisualStudio,"Merge branch 'master' into refactor/new-metrics-format
"
d84ce22249c8daa12cb4523f258d93d9dc84f328,github/VisualStudio,"Remove unused source.extension.vsixmanifest files

Only the one in GitHub.VisualStudio appears to actually be used.
"
35ba4b2bca252370f4b91833bfdbfe459966b881,github/VisualStudio,"Renaming PullRequestChecksEnum
"
92b1b31038465921b146530dd70338c0f80f7ab0,github/orchestrator,"Merge pull request #623 from github/instance-key-ipv6

Formalizing InstanceKey, much refactoring"
8ccc84a5d91b0c2f429cc33c81d1a9456b6f3940,github/orchestrator,"- added CLI documentation for ""move-gtid"", ""move-slaves-gtid""
- cluster.js: fixed and simplified ""colorize_dc"""
8413cb00da4207fabf7f00736a72434f7e575400,github/orchestrator,"Web:
- added /web/clusters-analysis
- added js, tmpl files
- refactored some css around

cli:
- added ""get-cluster-heuristic-lag"" command
- some code cleanup"
a3a254ea0ca5e779da1ac58230201e75820a6311,github/orchestrator,"Added MySQLConnectTimeoutSeconds config
Some repeating code cleanup in instance_dao"
27b6634ff56aafb96f9c01fbacce90f59d088448,jherby2k/AudioWorks,"Renamed AudioWorks.Extensions to AudioWorks.Extensibility.
"
db41a4298f0719d7197e073b281ce9d36ed02820,karelzak/util-linux,"misc-utils: cleanup strtoxx_or_err()

Signed-off-by: Karel Zak <b517c2d99ca3f904174ad92ae4446c78e81c3cf1@redhat.com>
"
641c27234ddba5bc511291bbbc66399b1ebb5412,kvhnuke/etherwallet,"skubakdj  PR #52 + more cleanup
"
869e666f97fbe8a32b9c63cc1bddc4a12f1a5f02,lamsfoundation/lams,"LDEV-2140 Made it so that tool activities outputs are retrieved once on single click the first time they are clicked, instead of when they are dropped from the toolkit. Also got it working so that when you open an existing design with outputs, it selects the correct one in the gradebook output combo box.
"
f93a121533e8b7840588e1881f199850a1100db3,lede-project/source,"ramips: cleanup mt7620 Netgear image code

1. Reuse functions defined in `image-commands.mk`
2. Rename fakeroot image

Signed-off-by: Joseph C. Lehner <60b98631f51c8756775e90e2275a1dec53301de2@gmail.com>
"
58fc50f1b088a4bf89b2ce355fc8a4cef3dffcd2,lede-project/source,"ar71xx: add support for 8devices Lima board

Lima is a module for the (IoE) internet of everything applications,
based on Qualcomm/Atheros QCA4531.

Specification:

- 650/600/216 MHz (CPU/DDR/AHB)
- 64 MB of RAM (DDR2)
- 32 MB of FLASH
- 2T2R 2.4 GHz
- 2x 10/100 Mbps Ethernet
- USB 2.0 Host
- PCIe
- UART for serial console
- 14x GPIO

Flash instruction:
1. Download lede-ar71xx-generic-lima-squashfs-sysupgrade.bin
and rename it to 8dev_recovery.bin
2. Binary file copy to USB stick and plug into slot USB
3. Press S2 (reset) button
4. Press and hold the S1 button by 5 seconds
5. Wait ~40 seconds to complete recovery

Tested on:

- Lima development kit

Signed-off-by: Karol Dudek <98a1a098cbd2e9fb8c1f7124a87801f0873db4b4@sli.pl>
"
6bfddb152fac5b8e55ef5221e183655bc2de6216,lede-project/source,"some additional config file cleanup..

SVN-Revision: 15845
"
68b5d34f69421264de6e5d77760fcc2bfe9ee687,lede-project/source,"ar71xx: add support for 8devices Rambutan development board

Rambutan is a Wifi module based on QCA9550/9557
http://www.8devices.com/products/rambutan

This commit adds basic support for Rambutan development kit

Specification:
- 720/600/200 MHz (CPU/DDR/AHB)
- 128 MB of DDR2 RAM
- 128 MB of NAND Flash
- 1x 100Mbps Ethernet
- 1x 1000Mbps Ethernet (PHY on dev-kit)
- 1x Wifi radio 2x2 MIMO, dualband 2.4 and 5 GHz
- 2x U.FL connectors on module, chip antennas on dev-kit
- 1x miniPCIe slot
- 1x USB2.0 host socket + 1x USB2.0 pins on 2.54mm header

Flash instructions:
Stock firmware is OpenWrt, so use:
 sysupgrade -n /tmp/lede-ar71xx-nand-rambutan-squashfs-sysupgrade.tar
or upgarde from GUI (don't save config)
Use factory image to flash from U-Boot:
 tftpboot 80060000 lede-ar71xx-nand-rambutan-squashfs-factory.ubi
 nand erase.part ubi
 nand write 80060000 ubi ${filesize}

Signed-off-by: Mantas Pucka <5977ddaa6e6d5d0a6037591f81411d54b98dac34@8devices.com>
[split support in uboot-envtools package into a separate commit,
fixed alphabetical order in lib/preinit/05_set_iface_mac_ar71xx]
Signed-off-by: Piotr Dymacz <a417921c44df4ef794596f685bcb77437ecb1bc6@gmail.com>
"
48855aab6c02fbe9c2a99d65ff4fe0ca1a1e7e51,lede-project/source,"ath9k: make support for PC-OEM cards optional, reduces module size

Signed-off-by: Felix Fietkau <nbd@openwrt.org>

SVN-Revision: 40859
"
e965c028208d233ecdc3edd5a999835afec90532,lede-project/source,"even more config file cleanup

SVN-Revision: 15913
"
42862fd94d0ef9b4acce4156894edd79bceba886,lnked/react-starter,"remove unused
"
89f22f735944989912a7a0394dd7e80d420cb0f3,mitmproxy/mitmproxy,"refactor connection & protocol handling
"
08655cb9567f502ec79799499968c57125d9a205,mitmproxy/mitmproxy,"Merge remote-tracking branch 'origin/master' into proxy-refactor-cb
"
a388ddfd781fd05a414c07cac8446ef151cbd1d2,mitmproxy/mitmproxy,"A new interface for reply

Reply is now explicit - it's no longer a callable itself. Instead, we have:

    reply.kill()            - kill the flow
    reply.ack()             - ack, but don't send anything
    reply.send(message)     - send a response

This is part of an incremental move to detach reply from our flow objects,
and unify the script and handler interfaces.
"
b56de79d6c4362d9587c4a5254dd7757a34dac7b,mitmproxy/mitmproxy,"Merge pull request #1350 from cortesi/addons-cleanup

Addons cleanup"
8725d50d03cf21b37a78c1d2fa03ade055c8a821,mitmproxy/mitmproxy,"Add blinker dependency, start using it to refactor console app

Blinker lets us set up a central pub/sub mechanism to disentangle our object
structure.
"
d9cb0838093a962f636ef6cda17fd652bc2ef65e,mitmproxy/mitmproxy,"Reorganize test suite to remove confusion between test utils and libmproxy utils.
"
568f40c810f4de60f10bd814608fde8268ef7733,mitmproxy/mitmproxy,"Fix transparent mode initialisation, refactor mitmproxy.platform (#1787)

"
ff27d65f08d00c312a162965c5b1db711aa8f6ed,mitmproxy/mitmproxy,cleanup whitespace
14a551fff2b05d76539121f5207c664182e234b1,morganbengtsson/mos,"Rename environment maps etc
"
447b43c47cfc2c536dbfbeb7c3e55cece9e0460a,mozilla-iot/gateway,"Rename AvailableAddon to InstalledAddon.
"
e3bd9bba7da0926e4bcaebd15e99990e353a1d2f,neo4j/neo4j-browser,"Refactor bolt module to be more testable
"
a2b27ed22596ca7aaccfd30b74655f14be9bfcb9,nozzle/react-static,"Update webpack module rules to allow importing everything that is not supposed to be compiled (#75)

* Document outdated sections with current behavior & API signature

* Allow transformers without a return statement, side-effect: more readable syntax

* Refactoring complete module rules system. Configured loaders to support every file that is not supposed to be compiled via url-load

er and allowing to swap loaders with a simple opt-out & replace approach. Removed /plugins directory in favor of /webpack/rules.

* Explain new behaviour

* Rename module loading rules to plus names

* Remove obsolete dependency

* Update examples
"
1ca90a980ce41c9a42de77789fd1bf2705d968a1,openpgpjs/openpgpjs,"Support multiple keys per ASCII armored block. Unify error handling: replace print_error function
with exceptions. The idea is to use exceptions internally, but catch them in the high level API
functions and return errors as implemented in openpgp.key.readArmored.
"
40c12a3c3f523e6aaacadd11e89cfdb8deeea12a,orbeon/orbeon-forms,"Implemented ""[ #315131 ] RFE: Support XML comments in the pipeline engine"". Refactoring. Removed some unused legacy code.
"
a1070ddd483787ba8d55eba6640aeab773beb0a9,orbeon/orbeon-forms,"Added optimized event handling for offline mode when going online.
"
415ca9ad4e88176cd35744f63ed47a12ec2dd5d2,orbeon/orbeon-forms,"Progress on path analysis: value analysis, clean-up, bug-fixing.
"
446493e346a28e0f8468530c77f80cc2eed41e80,orbeon/orbeon-forms,"Fix [ #313143 ] Cursor in text area is moved at the end of the field while typing
"
692fd7072e6a7685429f242d186ee3d8fc99d904,orbeon/orbeon-forms,"Refactoring of properties classes. Shouldn't have added / removed / changed functionality.
"
8c3da5c2c538e05d66391dd036ccbc91214d4bc5,pfalcon/micropython,"stm: flush storage cache immediately; improve user interface.
"
05005f679e00241e15a87751d89327f2c4630cb6,pfalcon/micropython,"py: Remove mp_obj_str_builder and use vstr instead.

With this patch str/bytes construction is streamlined.  Always use a
vstr to build a str/bytes object.  If the size is known beforehand then
use vstr_init_len to allocate only required memory.  Otherwise use
vstr_init and the vstr will grow as needed.  Then use
mp_obj_new_str_from_vstr to create a str/bytes object using the vstr
memory.

Saves code ROM: 68 bytes on stmhal, 108 bytes on bare-arm, and 336 bytes
on unix x64.
"
c1d9bbc3453454aceb28f51e72e4aeb8ef1c12eb,pfalcon/micropython,"Implement __bool__ and __len__ via unary_op virtual method for all types.

__bool__() and __len__() are just the same as __neg__() or __invert__(),
and require efficient dispatching implementation (not requiring search/lookup).
type->unary_op() is just the right choice for this short of adding
standalone virtual method(s) to already big mp_obj_type_t structure.
"
d182b98a37bde34c06ae705624da03cf381eb4dc,pfalcon/micropython,"py: Change all uint to mp_uint_t in obj.h.

Part of code cleanup, working towards resolving issue #50.
"
b4b10fd350852e321624d74983cca286091b55a1,pfalcon/micropython,"py: Put all global state together in state structures.

This patch consolidates all global variables in py/ core into one place,
in a global structure.  Root pointers are all located together to make
GC tracing easier and more efficient.
"
b4fe6e28eb3bbf70b1f1da08a13a40a4ac3ee1db,pfalcon/micropython,"py: Fix function type: () -> (void).
"
c89c681a9f065e66ce817a024fda24abeed9519f,pfalcon/micropython,"Rework makefiles. Add proper dependency checking.
"
99d8c37ccd3cf3a3a905aeb8fa1b7e27e449cc5d,pharo-project/pharo,21556 Unify all implementations of indexInNonEmpty
1d3294d21e7408d96927785e1df5d5ed2aeb7681,phenotips/phenotips,"Issue #381: Improve the results of the OMIM disease search
Issue #382: Index from OMIM the gene causing a disease
Done.
"
7b03129916aa050f4d120a532659dbbba279f7be,riscv/riscv-openocd,"flash/nor: Add support for TI CC26xx/CC13xx flash

Added cc26xx flash driver to support the TI CC26xx and CC13xx
microcontrollers. Driver is capable of determining which MCU
is connected and configures itself accordingly. Added config
files for four specific variants: CC26x0, CC13x0, CC26x2, and
CC13x2.

Note that the flash loader code is based on the sources used
to support flash in Code Composer Studio and Uniflash from TI.

Removed cc26xx.cfg file made obsolete by this patch.

Change-Id: Ie2b0f74f8af7517a9184704b839677d1c9787862
Signed-off-by: Edward Fewell <e56302c7ecf37ba80bf6d558bd4681b3d29eca26@ti.com>
Reviewed-on: http://openocd.zylin.com/4358
Tested-by: jenkins
Reviewed-by: Tomas Vanek <43ef19bf23c426eee1a57a6137d151bab85ad769@fbl.cz>
Reviewed-by: Fredrik Hederstierna <f487c7598f046a9a67757788cf85ee89028a1b14@hederstierna.com>
"
d0dee7ccafcf87259fadf6c5de43df8583b0e885,riscv/riscv-openocd,"reg_t -> struct reg

Remove misleading typedef and redundant suffix from struct reg.
"
3d6bcf07921753141a3905ee5619724573460cb3,riscv/riscv-openocd,"- convert all files to unix line-ending


git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@347 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
bc075606b7de9f85bff50e8afc0dbdcba3a99765,riscv/riscv-openocd,"David Brownell <david-b@pacbell.net> Tweak disassembly commands:

 For ARMv4/ARMv5:
  - better command parameter error checking
  - don't require an instruction count; default to one
  - recognize thumb function addresses
  - make function static
  - shorten some too-long lines
 For Cortex-M3:
  - don't require an instruction count; default to one

With the relevant doc updates.
---
Nyet done:  invoke the thumb2 disassembler on v4/v5,
to better handle branch instructions.

git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@2624 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
b174a0d75ec81fbcd075c8c8d7f915e4a3d76bc3,riscv/riscv-openocd,"arm920t_cache_line_t -> struct arm920t_cache_line

Remove misleading typedef and redundant suffix from struct arm920t_cache_line.
"
d47e1b8f362379d8a2307f49e2b42115a3f40524,riscv/riscv-openocd,"- rename log functions to stop conflicts under win32 (wingdi)

git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@523 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
9edf04d67a373b774d0c5220566031661a0a261e,roelandjansen/UHSDR,"Renamed some variables around audio muting
Purpose is to be able to better understand the use of these variables
Audio muting handling is quite complex currently.
Also removed a special state variable by making it a parameter of
AudioDriver_SetRxAudioProcessing
No functional change
"
4ea527d9e8b62d4626de2e91d466bbb3d8269965,roelandjansen/UHSDR,"Merge pull request #510 from db4ple/active-devel

Refactored the AM TX processing"
9fa5afa6d6ab387c3f8f904b0fbebda410ee3dd7,roelandjansen/UHSDR,"Merge pull request #945 from db4ple/active-devel

Moved ""FW Change Message"" to bootscreen, fixed SPI Display issue. Removed useless file"
03ba3593adc852eecffb2f7ff3612c34de1fd73d,roelandjansen/UHSDR,"Small refactorings Si570 plus reduced Codec I2C speed.
Did some minor refactorings in I2C part of the Si570
and also lowered the default I2C2 (Codec/EEPROM) speed since
200 Khz caused some issues in PTT switching sequences.
"
1d6e75ea44a0da111804dd88573da71fe46abf26,roelandjansen/UHSDR,"Made SNAP switchable feature, moved SNAP memory out of CCM
Moved a lot of data structures into CCM, with FreeDV buffers it is full.
FreeDV and SNAP will not run at the same time on small memory machines (192k).
"
fce6a9e40ffc5f2c893e4bd31a46a53e81124de9,roelandjansen/UHSDR,"Unified the 3 graphics drivers.
Use with caution
Changed launch config for OVI40 bootloader to run with GNU MCU Eclipse, breaks launch compatibility with GNU ARM Eclipse (the predecessor name).
Switched to internal builder also for DebugMCHF config much quicker turnaround in most cases
"
947466ae6b8a676823f6d1e8511718d8a787c6c5,roelandjansen/UHSDR,"Code as is works by default as before.
More refactoring towards new menu handling.
Move around/renamed some functions.
The new code is partially ready but fully disabled.
Uncomment #define NEWMENU in ui_menu.c to play with it.
It just displays (with prev/next page, first page).
Do not turn ENC2 and ENC3 while within new menu
this will change some settings.
YOU HAVE BEEN WARNED!
"
58fa90d3fb261a2619236afc43ca45a1bb65ca64,roelandjansen/UHSDR,"Merge pull request #950 from db4ple/active-devel

Reworked the Startupscreen a little, renamed some defines"
cbfe43f8a1e0de7fe49d65474897f3c3f342b73f,roelandjansen/UHSDR,"Merge pull request #978 from db4ple/active-devel

Even more spectrum refactoring"
0296027d626df976e00fc1333569fcb87f01add5,roelandjansen/UHSDR,"Refactored cw_gen.c/.h to use uniform naming scheme
And fixed some minor things like static declarations of all local functions etc.
No functional change
"
553cebbd8d510b06ed965e45af6f3a1c9ecbad46,samdauwe/BabylonCpp,"Refactoring for better smart pointer usage
"
ab16880381cf26894ecf9f30581163c553f4147d,scalameta/scalameta,"Rename -P:semanticdb:crashes to -P:semanticdb:failures

To quote @olafurpg: ""I don't see the benefit in changing :failures to
:crashes. The later is not clearer IMO, just different. I've recommended
:failures:ignore to several scalafix users who have reported issues
so it's not an esoteric corner of the plugin.""
"
7563265408a638f7bb8b091e2094300c4ed6fc69,scalameta/scalameta,"Move MethodUsages to a separate file to minimize expect diffs.

Previously, adding a line to `example.Methods` would introduce large
diffs in metac.expect since all call-sites in `MethodsUsages` would
shift by a couple line numbers. This commit moves `MethodsUsages` to a
separate file so that new definitions in `example.Methods` introduce
minimal diffs.
"
e2317e8655ead8a2a391355ed91bccf98eadb2c7,scalameta/scalameta,"introduces type lambdas

When working on the new incarnation of the scala.reflect => scala.meta converter,
I had to solve a problem that's been glossed over in the previous implementation:
the problem of assigning types to terms.

Previously, we had a great cop-out approach that consisted in attaching
native reflection artifacts to scala.meta trees. For instance, if we converted
a scala.reflect term, then we would created a scala.meta term with the original
term attached. Then, if someone asked us about the type of the converted term,
we'd go into the attachment, fetch its scala.reflect type, convert it to scala.meta
and be done with it.

Despite being very simple, this approach was also remarkable for being
an evolutionary dead-end, because storing platform-dependent information
in platform-independent trees isn't going to scale. What if we need to serialize
this information? What if we need to mix trees from different platforms?
And so on, and so forth.

So, a new approach that I put together in the day before my ScalaDays Amsterdam talk
consisted in adding a dedicated `typing` field to all ast nodes that inherit
from Term. This field would be essentially Option[Type], either being empty
or carrying a scala.meta (i.e. platform-independent) Type.

Now, instead of converting the types lazily, when they are requested,
I had to convert the types eagerly, when the corresponding trees are converted.
And that brought up a really old problem discovered by @mutcianm:
what type should we assign to method references, e.g. as in:

def foo[T](x: T) = x
foo[Int](42)

The old idea was to throw an exception if someone calls `.tpe` on `foo[Int]`
or `foo`, because those are not value types and hence can't be represented
in Scala syntax and hence shouldn't be supported by scala.meta.

This was more or less fine in the old vision of scala.meta, where it was
an unopinionated metaprogramming framework. However, in the new scheme of things
where scala.meta is optimized towards analysis of fully typechecked code
(loaded from TASTY), i.e. where all the term nodes already have their types
assigned successfully (that is, where .tpe can't fail because a tree node
is untyped or refers to an unresolved overloaded method), I think it makes
sense to try to assign types to all terms.

To do that, we need to think what to do with `foo[Int]` and `foo` in the example
above (something that corresponds to MethodType and PolyType in scalac;
there are other non-value types in scalac, e.g. ClassInfoType or OverloadedType,
but they are not relevant in our setting).

After some deliberation, I decided to go ahead and approximate MethodTypes
as corresponding function types and create a dedicated AST node for PolyTypes.
Even though there's no surface syntax for polytypes in scalac, there's
always kind-projector, and it seems that they are planning to add type lambdas
to Dotty. In any case, if necessary, we can restrict polytypes to just quasiquotes
and have the prettyprinter emit equivalent structural projects.

Let's see where this is going to lead us.
"
5f053d35a93405f88265cda85b160e7a7ae025e7,scalameta/scalameta,"Fix spurious duplicate decls for nested objects in metacp (fix #1543)
"
bbba305ad837768cf1ad865c1ba4e3c20d0ed496,scalameta/scalameta,"improves scaladocs for scala.meta

* Scaladocs now include extension methods
* Implicit classes that had public fields no longer have them
  (unfortunately this means that I had to downgrade them from value classes)
* RichOriginLike's parse and tokens were appearing everywhere,
  because the class says `implicit class RichOriginLike[T](originLike: T)`,
  so I had to disable that conversion in scaladoc
"
fd0d7c6dc1ec5c0b448138e036b53055537e854f,scalameta/scalameta,"Merge pull request #131 from xeno-by/refactor/quasiquotes

refactors the initial implementation of quasiquotes"
421ca89f891c7bf6a2103946378e1e9c3e18999b,scalameta/scalameta,"Replace references to ""Database"" with ""SemanticDB""

`TextDocumentsOps` didn't have the same ring to it.
"
6890c862577689852fd70eb7e5ff2017d5cf6318,scalameta/scalameta,"Clean up TODOs
"
165d73947c0a65ab196309bec7acc517f2a35901,scalameta/scalameta,"Rename index.expect to metac.index

Previous name was inconsistent with metacp.expect/metacp.index
"
ed98be0822671998cbfe29ef2aea829543cd162c,shirasagi/shirasagi,"[refactor] css: .ss-quota-bar (#1887)

- memo/quota
- share/quota
- webmail/quota"
f71ac119caa4a8f0094a99379621e53a1936a5f6,shirasagi/shirasagi,"Refactor ezine locale
"
c89da681595fd293457bf2442b07e9af66493b91,sofa-framework/sofa,"Monstruous cleanup of cmake files


Former-commit-id: b4a303476352a07ae64be4ab97e3b7bd34392d15"
ac8e897eb5b561cc5010e9b02bf81e8fe500b8fc,sofa-framework/sofa,"[all] Continue replacing std::cout with msg_info

modules changed are:
	- SofaOpenGl
        - SofaNonUniformFem
        - SofaPython
        - SofaSparseSolver
        - SofaSphFluid
        - SofaTopology
        - SofaUserInteraction

(1700 still remains :)...then +4000 of sout/serr)
"
38412b9ee399a581ce5be6107c098411498aab4d,sofa-framework/sofa,"Merge pull request #392 from SofaDefrost/addSceneCheckerDuplicate

[SofaGraphComponent] Refactor the SceneChecker and add a new SceneChecker to test duplicated names."
c71e60d8c6fcdac564a7cfb91c19b8c7bb27d534,sofa-framework/sofa,"framework/simulation: introduce cleanup() functions

The cleanup() function is the little sister of the init() function.  The
cleanup function of a library should be called before exiting to give
this library a chance to clean up, e.g. by freeing whatever resources it
may have allocated.

Basically, this means that a typical SOFA-based application looks like
this :

    int main()
    {
        sofa::simulation::tree::init();

        ...

        sofa::simulation::tree::cleanup();
        return 0;
    }

Also, this commit moves those init() and cleanup() functions to their
own files, to avoid polluting files that are included by *everything*.


Former-commit-id: a881068a9e01a81f6128228ed82140bf725a6a06"
27f25ecd1f45f869e4abce16734fb7bfa347b5ee,sofa-framework/sofa,"[scripts/ci] Propagate tool renaming

SofaDeprecatedComponents -> getDeprecatedComponents
"
20d4ff76d32e9d99da825d8c7d2360b188872f76,spectrecoin/spectre,"Merge pull request #104 from spectrecoin/simplify-docker-build

Simplify docker build"
21b97f8251074b0fc57f4b8abee39986a04eb362,stardiviner/emacs.d,"migrate RESTful, HTTP extensions into separate init file.
"
477083ba03e37cbcf505f15a6457567b23a28979,streetmix/streetmix,"Separate drag state code for palette segments
"
4c58fc2075dc10eb5ef51b66630c2c46c542ec2e,strongbox/strongbox,SB-1289: use `AuthenticationManager` instead of `AuthenticatorsRegistry`
0ee522fcc3fbf72e16516db2e8980f77b9eb7e06,strongbox/strongbox,"Merge pull request #99 from strongbox/SB-482

SB-482: Extract the HTTP partial fetches functionality into a separate module"
b193411b5877966b99ebb64ef937ddc7e7623a5b,symfony/http-kernel,"feature #12854 [3.0][HttpKernel] Remove unused method Kernel::isClassInActiveBundle (hacfi)

This PR was merged into the 3.0-dev branch.

Discussion
----------

[3.0][HttpKernel] Remove unused method Kernel::isClassInActiveBundle

| Q             | A
| ------------- | ---
| Bug fix?      | no
| New feature?  | no
| BC breaks?    | yes, if using isClassInActiveBundle (not used by Symfony itself)
| Deprecations? | yes
| Tests pass?   | yes
| Fixed tickets | #11652
| License       | MIT
| Doc PR        | - (Not mentioned in the docs)

Follow-up of #11869

Commits
-------

91dcca4 [HttpKernel] Remove unused method Kernel::isClassInActiveBundle
"
1006f540b3dda80b068cf7a8e1bd92907558678c,symfony/http-kernel,"Merge branch '2.6' into 2.7

* 2.6:
  [2.6] cleanup deprecated uses
  [2.5] cleanup deprecated uses

Conflicts:
	src/Symfony/Component/Form/composer.json
	src/Symfony/Component/Security/Tests/Core/LegacySecurityContextInterfaceTest.php
"
48eb52088e74c789c24d3e0ec4be6deb36c7e053,symfony/http-kernel,"Merge branch '2.4' into 2.5

* 2.4:
  fixed CS
  [Process] fixed some volatile tests
  [HttpKernel] fixed a volatile test
  [HttpFoundation] fixed some volatile tests
  [Tests] PHPUnit Optimizations
  Use getPathname() instead of string casting to get BinaryFileReponse file path

Conflicts:
	src/Symfony/Bundle/FrameworkBundle/Tests/DependencyInjection/Fixtures/php/full.php
	src/Symfony/Bundle/FrameworkBundle/Tests/Functional/Bundle/TestBundle/Controller/SessionController.php
	src/Symfony/Component/ClassLoader/Tests/ApcUniversalClassLoaderTest.php
	src/Symfony/Component/Console/Formatter/OutputFormatterStyle.php
	src/Symfony/Component/HttpKernel/DataCollector/LoggerDataCollector.php
	src/Symfony/Component/HttpKernel/Debug/TraceableEventDispatcher.php
	src/Symfony/Component/HttpKernel/Tests/DataCollector/LoggerDataCollectorTest.php
	src/Symfony/Component/HttpKernel/Tests/DataCollector/RequestDataCollectorTest.php
	src/Symfony/Component/HttpKernel/Tests/Debug/TraceableEventDispatcherTest.php
	src/Symfony/Component/Process/Tests/AbstractProcessTest.php
	src/Symfony/Component/Routing/Matcher/Dumper/PhpMatcherDumper.php
	src/Symfony/Component/Routing/Tests/Generator/UrlGeneratorTest.php
	src/Symfony/Component/Security/Acl/Dbal/MutableAclProvider.php
	src/Symfony/Component/Security/Core/Authentication/Provider/PreAuthenticatedAuthenticationProvider.php
	src/Symfony/Component/Security/Http/Tests/Firewall/SwitchUserListenerTest.php
	src/Symfony/Component/Serializer/Tests/Normalizer/GetSetMethodNormalizerTest.php
	src/Symfony/Component/Translation/Tests/Dumper/IcuResFileDumperTest.php
	src/Symfony/Component/Validator/Constraints/ChoiceValidator.php
	src/Symfony/Component/Validator/Constraints/CollectionValidator.php
	src/Symfony/Component/Validator/Tests/Constraints/AbstractConstraintValidatorTest.php
	src/Symfony/Component/Validator/Tests/Constraints/IsbnValidatorTest.php
	src/Symfony/Component/Validator/Tests/ValidationVisitorTest.php
	src/Symfony/Component/Yaml/Parser.php
"
b904f6aac68439a2f8922e3eac4296917076a649,tenstream/tenstream,"refactor type definitions
"
63bfd6fd75787c635b0caae2374381b2a2cec278,tenstream/tenstream,"change function name mean() to meanval(), which is more consistent with standard fortran naming e.g. in maxval, minval
"
fd7faeb475ff609dadca0f421ac48bf879480d64,unity3d-jp/MeshSync,"refactoring
"
810d20df6474ad758dc640388f93a627a70c680b,unity3d-jp/MeshSync,"MotionBuilder: rename/delete handling
"
b28286177f62fe0501f00ed2dd0de26aecb18d78,wireapp/wire-webapp,"Call reliability improvements (WEBAPP-3718) (#906)

"
2b36c9a2317f99f58512a7eae13aeba470128ee2,wireapp/wire-webapp,"refactor: Speed up the sdp sending timeout protocol (#4534)

"
e790979e36fbda28094f31c529013354bb982d81,wireapp/wire-webapp,"refactor: Move connection entity to proper namespace (#4930)

"
b360c6a7c6a0a360f59c3dae9bdaa561594020d2,wix/wix-style-react,"Grid pr (#192)

* add Grid

* added bootstrap and grid init files

* added simple grid

* remove not used comment

* init card

* Grid example for card

* Grid add eyes e2e

* fix e2e
"
c9f690bc41fb17b1e22de942860c3781ad9b0971,wix/wix-style-react,"Testkit template migration (#262)

* TextArea uses testkit template

* textField uses testkit template

* created composite component templalte for all composite components with label and some kind of input

* Added new composite -  AutoCompleteComposite

* added storybook initial documentation.

* Loader uses testkit template

* added testkit generic tester

* refactored the RadioGroup tests and migrated it to use testkit template

* Refactored RadioButton primitive component with tests and testkit template

* fixed import path of scss file

* removed deprecated code from Input
"
3508620f7a9e5eed34ac5b75ec9e5f321496a61a,xournalpp/xournalpp,"GLib Poppler objects replaced with own objects, so we can use the parsed contents from poppler to export PDFs

git-svn-id: f28c3624e27da2b8b98f0de10aa9bded6df39eef@21 9fe2bcd3-a095-4d8b-a836-9b85dc8d7627
"
18a65ad6d3563f40568b2966f4a32d97a5d51fae,xournalpp/xournalpp,"text --> latex inplace substitution
"
51b73bdef340e25521b9836ba4b694e3a4c0d2b0,xournalpp/xournalpp,Code cleanup
7b62a8042ef54757a89fb30fdfc6deb0e3a34a63,xwiki-labs/cryptpad,"Remove TextPatcher and begin to include ChainPad directly using requirejs instead of sniffing off the window
"
9184dd0ce6f712f2a705b43fcb1604ea15083cc5,xwiki-labs/cryptpad,"Merge branch 'refactor2' into staging
"
c00158d23a3ee4119277d73834944c39d47705e1,xwiki-labs/cryptpad,"Move code to common-history
"
fef3868eede6c14ad4d51ea5fd2a90fff0863493,CZ-NIC/knot-resolver,Merge !698: http module improvements from cloudflare
b3388d1029674e9f9ee75520f93f6fd6f181ecf6,CZ-NIC/knot-resolver,Merge !202: trust anchor improvements
dbca231605923363b7bdeb78afafd0d169503cfd,CZ-NIC/knot-resolver,"contrib: created 'contrib' directory with ccan/isaac as csprng

previously cryptolib random function was used to generate message id,
this works well but it is slow especially when the entropy is low,
replaced with cryptographically safe prng ISAAC

the ccan directory is going to be used in the future, as it's include
structure makes it easy to embed C snippets instead of reimplementing
them
"
774dbbd75dd001e7eb8cde8b4871e2daff47331e,DamienCassou/emacs.d,"Try to improve ftgp/workflow
"
a07c0044826a28ab7e913482ec65cbb97f291a05,FundRequest/platform,"active -> funded
"
b3ffb958e086ef6c1926ce370a742a840c6721e0,FundRequest/platform,"Move some classes to common
"
b704e10d88d909ac3b182f1b5eb062b67a6f4699,InfernoEngine/engine,"Refactors continued
"
ca053e52732ee53297cf7b49d112c6e30236fc24,LightningNetwork/lnd,"multi: minor coding style and comment clean ups post-discovery merge

This commit implements some minor coding style, commenting and naming
clean up after the recent major discovery service was merged into the
codebase.

Highlights of the naming changes:
* fundingManager.SendToDiscovery -> SendAnnouncement
* discovery.Discovery -> discovery.AuthenticatedGossiper

The rest of the changes consist primary of grammar fixes and proper
column wrapping.
"
065d353992082ed764fc4b4c0ebc52c7df98d0a1,MishkaRogachev/JAGCS,"MissionItemsStatus and vertical profile refactored to common
"
98be5aeee996cb7c6858428f9d301afb66c0c311,MishkaRogachev/JAGCS,"Mission presenter moved to side-nav menu
"
e59552384b2dca76944040e6585af9dbfc4063fb,MishkaRogachev/JAGCS,"rename ShortVehicleDisplay -> ShortAerialVehicleDisplay
"
466e92ed700c6387d595899973e3b068b522609b,MishkaRogachev/JAGCS,"Map presenation refactoring start
"
dac30826721856e1d236099c51210a3eb3433a15,MishkaRogachev/JAGCS,"RadioPresenter moved to StatusBar
"
8688359eed315adda813e14072bb09fef86068e1,OceanPARCELS/parcels,"Improved plot title using datetime

Using datetime to pretty print the time in the plotting, see also #45.

Furthermore now plotting title and axes labels when no background field
given (by moving title from field.py to particle.py.
"
d9d0ee13669c9596f8c5ae74f2247d0ce41e5e35,OpenGeoscience/geojs,"Switch test progress to use the karma-spec-reporter.

Instead of printing test progress like
```
JS 2.1.1 (Linux 0.0.0): Executed 89 of 1022 SUCCESS (0 secs / 0 secs)
```
this prints information like
```
  geo.annotation
    geo.annotation.lineAnnotation
      ✓ _coordinates
```

For coverage tests, I've set it to only print failures.  This will make
it easier to read through results on CI.

Also, the colorLegend test was failing when run without coverage but
passing when run with coverage.  This has to do with how browsers are
invoked, and was the result of a shift the location of the map element.
This location is now used to determine where to perform a mouse test,
resulting in identical results regardless of coverage.  By fixing how a
mouse event was created in PhantomJS, PhantomJS now gets identical
results to Firefox.
"
0a1ec0ea7b82b52f180ea7c6cb21e9ea5adca92b,OpenGeoscience/geojs,"Optimizing code

Not using tween for now
"
821b94419c5ba5641a983b87b7e3ee77586894e4,WLOGSolutions/RSuite,"Refactor sub deps filtering
"
265ccc2512d12983888727d742b7f625a64d74f9,angular/forms-builds,"407b5cf refactor(ivy): re-introduce QueryPredicate with more focused role (#21857) (#21857)
"
a91b6d55d42f2602b6905fefeee6706fb15e72b5,angular/forms-builds,"51c26b8 test: remove deprecated Buffer usage in sourcemap test (#25805)
"
b6270fd22ba80620a9a5bbc4f0f0a9cb419df9e1,angular/forms-builds,"f795f64 refactor(aio): remove redundant styles
"
52ad0d912bd5932e9cfc76635a9bbeae5d18052a,angular/forms-builds,"23ec88e refactor(ivy): remove unreferenced utils file (#26076)
"
8cbf0451963b4cff581dad0e190242f5662ad549,angular/forms-builds,"4662878 refactor(compiler): refactor template binding parsing (#23460)
"
6087b88ad5d5a4e5695d66f836589c863e1610d1,angular/forms-builds,"2ba3ada revert: ""refactor(compiler-cli): remove the dependency on fs in codegen.ts (#17738)""
"
26b6ee64662367ce4b5c404c65032380d1f94d06,angular/forms-builds,"228238e refactor(aio): move SearchService initialisation into SearchBoxComponent
"
eea5428e39c1417538db1e96ee75cf8ed9e2f56f,angular/forms-builds,"90bd984 refactor(common): simplify closure-locale by removing imports (#18926)
"
7ed134ddaa5e59cb54e58c9d13c5eaf3e0cad8c5,angular/forms-builds,"77ff72f Revert ""style(animations): fix short param names (#23668)""
"
33dc6f77e8f56901b5fe9241590d4d56b41974d5,angular/forms-builds,"3db84c8220 (HEAD -> master, upstream/master) build: fix size limits for CLI to make CI green (#18849)
"
75a0401bd62e1feb15f09a30718c81156c80a03e,angular/forms-builds,"0b68312 refactor(ivy): assertion (#22189)
"
1a06284113853e0c0efeb0883df53e56e7ce9630,angular/forms-builds,"f781f74 refactor(ivy): remove need for LContainer.template (#24335)
"
9720bdbfe1b29936d85c7236492ca25878b4a5da,angular/forms-builds,"8c975ed refactor(facade): inline StringWrapper (#12051)
"
31c48effd6f1c4275f4447b1c6157a7aa196ca3c,angular/forms-builds,"307c469 refactor(router): code cleanup
"
f8bfe703294e4cd5b7554b283a24c39e9a9e0a9d,angular/forms-builds,"e096a85 fix(animations): remove duplicate license header
"
aa3d9d1287a25dc20cb15ef7f3f3763e58be9ebf,angular/forms-builds,"1e7a873 build(bazel): remove unused angular.tsconfig.json integration/bazel test (#25778)
"
c75076e9ceace2895e57742c6896fae27181ab5c,angular/forms-builds,"3664829 refactor(ivy): misc (#25174)
"
b1546c4ea52085f758b7ec214ac8894a6c978c22,blakearchive/archive,"reworked overlay
"
d1e1b6d2edfeea6034ba95d625f6cdb830c97bc6,blakearchive/archive,"Merge pull request #469 from blakearchive/refactor

Refactor"
379c5f3350b74f6a72d662d46dedcd80fe1e2e4f,blynkkk/blynk-server,"Storage refactoring
"
c1ea2da9d9dfa4ad0f75fd4cd4b5e17aa50d6d60,blynkkk/blynk-server,"cleanup and refactoring
"
ea516f794b54203ff485414b3ef9c936888a3cf7,blynkkk/blynk-server,"Tests cleanup + ignored test that is failed in codeship.
"
5693dc41ab5a99cccfc125641a61754b3f9b0b52,blynkkk/blynk-server,"version in poms 0.11.4 -> 0.12
"
28d412ff20309b275da1375839dae0ee236a5ac2,domob1812/huntercore,"build: quit abusing LIBS for Windows builds.

Similar to the INCLUDES changes in 6b099402b40, split out LIBS into individual
entries for more fine-grained control.

Also add MINIUPNPC_LIBS which was missing before, and hook it up to
executables.
"
eb837199a06293ea541171bdc4652591c6506921,domob1812/huntercore,"Consensus: Refactor: Separate Consensus::CheckTxInputs and GetSpendHeight in CheckInputs
"
6dacbbb511ff4d15ea9582914d301252e5e84cb2,domob1812/huntercore,"Merge branch 'namecore'

Update for upstream refactorings, including the removal of priority.

Conflicts:
	qa/rpc-tests/test_framework/test_framework.py
	qa/rpc-tests/test_framework/util.py
	src/Makefile.qttest.include
	src/coins.cpp
	src/miner.cpp
	src/miner.h
	src/pow.cpp
	src/primitives/transaction.cpp
	src/rpc/blockchain.cpp
	src/rpc/mining.cpp
	src/rpc/misc.cpp
	src/rpc/rawtransaction.cpp
	src/test/test_bitcoin.cpp
	src/validation.cpp
	src/wallet/wallet.cpp
"
d894894aab78dbd5e32267313237648933248377,domob1812/huntercore,"wallet: Refactor to WalletInitInterface* const g_wallet_init_interface
"
8f59251b83cd9c862aee53dd50ce32bcab12ed6d,domob1812/huntercore,"Merge pull request #4100

a0495bb Add <Hasher>::OUTPUT_SIZE (Pieter Wuille)
4791b99 crypto: create a separate lib for crypto functions (Cory Fields)
f2647cc crypto: explicitly check for byte read/write functions (Cory Fields)
5437248 build: move bitcoin-config.h to its own directory (Cory Fields)
3820e01 Extend and move all crypto tests to crypto_tests.cpp (Pieter Wuille)
7ecd973 Move {Read,Write}{LE,BE}{32,64} to common.h and use builtins if possible (Pieter Wuille)
a5bc9c0 Add built-in RIPEMD-160 implementation (Pieter Wuille)
13b5dfe Move crypto implementations to src/crypto/ (Pieter Wuille)
1cc344c Add built-in SHA-1 implementation. (Pieter Wuille)
85aab2a Switch miner.cpp to use sha2 instead of OpenSSL. (Pieter Wuille)
cf0c47b Remove getwork() RPC call (Pieter Wuille)
7b4737c Switch script.cpp and hash.cpp to use sha2.cpp instead of OpenSSL. (Pieter Wuille)
977cdad Add a built-in SHA256/SHA512 implementation. (Pieter Wuille)
"
17780d6f35a3951f649c3b7766b9283d9c18e39f,domob1812/huntercore,"scripted-diff: Avoid `interface` keyword to fix windows gitian build

Rename `interface` to `interfaces`

Build failure reported by Chun Kuan Lee <ken2812221@gmail.com>
https://github.com/bitcoin/bitcoin/pull/10244#issuecomment-379434756

-BEGIN VERIFY SCRIPT-

git mv src/interface src/interfaces
ren() { git grep -l ""$1"" | xargs sed -i ""s,$1,$2,g""; }
ren interface/            interfaces/
ren interface::           interfaces::
ren BITCOIN_INTERFACE_    BITCOIN_INTERFACES_
ren ""namespace interface"" ""namespace interfaces""

-END VERIFY SCRIPT-
"
d0225fd6cb7790f53274e8fa8ac8a8c32b2b9cfa,domob1812/huntercore,"Merge branch 'namecore'

Update for upstream refactorings:
  - CTransactionRef
  - JSONRPCRequest

Remove the temporary hack to fix invalidateblock for waitforblock, which
seems to be working upstream now.

Conflicts:
	src/Makefile.bench.include
	src/bitcoind.cpp
	src/chainparams.cpp
	src/coins.h
	src/init.cpp
	src/main.cpp
	src/main.h
	src/miner.cpp
	src/miner.h
	src/names/common.h
	src/names/main.cpp
	src/names/main.h
	src/rpc/blockchain.cpp
	src/rpc/mining.cpp
	src/rpc/misc.cpp
	src/rpc/names.cpp
	src/test/data/bitcoin-util-test.json
	src/test/name_tests.cpp
	src/test/test_bitcoin.cpp
	src/txmempool.h
	src/undo.h
	src/version.h
	src/wallet/rpcwallet.cpp
	src/wallet/wallet.cpp
"
280023f31d7007694f9f77e07868ae122c55cfd7,domob1812/huntercore,"Remove duplicate includes
"
5df84de583c900e00fef63bedaef32786f205a33,domob1812/huntercore,"Merge #12970: logging: bypass timestamp formatting when not logging

339730a6d8 logging: bypass timestamp formatting when not logging (Cory Fields)

Pull request description:

  As suggested by @laanwj on IRC:
  ```
  <cfields> whoa
  <cfields> Leaving test case ""knapsack_solver_test""; testing time: 358694ms
  <cfields> i386 + old wine ^^
  <cfields> Leaving test case ""knapsack_solver_test""; testing time: 6781ms
  <cfields> ^^ same, but with the LogPrint commented out
  ...
  <wumpus> if both log-to-file and log-to-console is disabled, it should probably bypass all logging
  ```
  Edit: The painful line commented out being the LogPrintf in CWallet::AddToWallet.

Tree-SHA512: bc6da67dcdf05e9164fff7a7e9980de897e6f1b0d3f6e1ebde2162cbcba7d54a6ec94283534eb5a1ebde7134533d7fe7e496aa35ea3128c567ed6483eae5212c
"
176c021d085f5a45bc9e038e760942aa648dd797,domob1812/huntercore,"[qa] Test non-atomic chainstate writes

Adds new functional test, dbcrash.py, which uses -dbcrashratio to exercise the
logic for recovering from a crash during chainstate flush.

dbcrash.py is added to the extended tests, as it may take ~10 minutes to run

Use _Exit() instead of exit() for crash simulation

This eliminates stderr output such as:
    terminate called without an active exception
or
    Assertion failed: (!pthread_mutex_destroy(&m)), function ~recursive_mutex, file /usr/local/include/boost/thread/pthread/recursive_mutex.hpp, line 104.

Eliminating the stderr output on crash simulation allows testing with
test_runner.py, which reports a test as failed if stderr is produced.
"
d636f3943d39ec893dab2d2546f77f3f2607769d,domob1812/huntercore,"Merge #10536: Remove unreachable or otherwise redundant code

4265bf351 Remove unreachable or otherwise redundant code (practicalswift)

Tree-SHA512: bc9666ab5d20c936d78c50c0361405aca9edd116602aa9bcd71a79a904b647ac9eca0651d1a9d530189a6ac1c4e235bfc69ec1a68f7e36cc14d6848ac2206b7b
"
e59d2a80f9167031521d882394a08b02fa9d0343,domob1812/huntercore,"Merge pull request #6315

7aac6db [QT] dump banlist to disk in case of ban/unban over QT (Jonas Schnelli)
7f90ea7 [QA] adabt QT_NO_KEYWORDS for QT ban implementation (Jonas Schnelli)
07f70b2 [QA] fix netbase tests because of new CSubNet::ToString() output (Jonas Schnelli)
4ed0510 [Qt] call DumpBanlist() when baning unbaning nodes (Philip Kaufmann)
be89292 [Qt] reenabling hotkeys for ban context menu, use different words (Jonas Schnelli)
b1189cf [Qt] adapt QT ban option to banlist.dat changes (Jonas Schnelli)
65abe91 [Qt] add sorting for bantable (Philip Kaufmann)
51654de [Qt] bantable polish (Philip Kaufmann)
cdd72cd [Qt] simplify ban list signal handling (Philip Kaufmann)
43c1f5b [Qt] remove unused timer-code from banlistmodel.cpp (Jonas Schnelli)
e2b8028 net: Fix CIDR notation in ToString() (Wladimir J. van der Laan)
9e521c1 [Qt] polish ban table (Philip Kaufmann)
607809f net: use CIDR notation in CSubNet::ToString() (Jonas Schnelli)
53caec6 [Qt] bantable overhaul (Jonas Schnelli)
f0bcbc4 [Qt] bantable fix timestamp 64bit issue (Jonas Schnelli)
6135309 [Qt] banlist, UI optimizing and better signal handling (Jonas Schnelli)
770ca79 [Qt] add context menu with unban option to ban table (Jonas Schnelli)
5f42132 [Qt] add ui signal for banlist changes (Jonas Schnelli)
ad204df [Qt] add banlist table below peers table (Jonas Schnelli)
50f0908 [Qt] add ban functions to peers window (Jonas Schnelli)
"
c78bd937017212c89c1c7aab07399cec5b6b3bdd,domob1812/huntercore,"[Qt] extend validate line edit and btc address validator

- remove btc address length from address validator
- add an optional btc address check in validated line edit that defaults
  to off and is used in GUIUtil::setupAddressWidget()
- an isAcceptable() check is added to validated line edit on focus out
  which only kicks in, when a validator is used with that widget
- remove an isAcceptable() check from sendcoinsentry.cpp
- remove obsolete attributes from ui files, which are set by calling
  GUIUtil::setupAddressWidget()
- move some more things to GUIUtil::setupAddressWidget() and remove them
  from normal code e.g. placeholder text
"
8273793350e47786edbb2abf5831ebab9b72ca01,domob1812/huntercore,"Eliminate compiler warning due to unused variable
"
099482a58dceb67a4949bac25d35d22aa887aa8c,domob1812/huntercore,"Merge branch 'auxpow' into dev

Update name conflict handling for refactoring of the signalling API, and
update the name RPC function interfaces for JSONRPCRequest.

Conflicts:
	src/Makefile.bench.include
	src/chainparams.cpp
	src/init.cpp
	src/rpc/rawtransaction.cpp
	src/script/interpreter.h
	src/txmempool.h
	src/validationinterface.cpp
	src/validationinterface.h
	src/wallet/rpcwallet.cpp
"
8269a0953ee9ccbdc422433fc37184e60f94b178,domob1812/huntercore,"Reimplement click-to-pay links. Add OSX support.

Switch to using Qt's QLocalServer/QLocalSocket to handle bitcoin
payment links (bitcoin:... URIs)

Reason for switch: the boost::interprocess mechanism seemed flaky,
and doesn't mesh as well with ""The Qt Way""

qtipcserver.cpp/h is replaced by paymentserver.cpp/h

Click-to-pay now also works on OSX, with a custom Info.plist
that registers Bitcoin-Qt as a handler for bitcoin: URLs and
an event listener on the main QApplication that handles
QFileOpenEvents (Qt translates 'url clicked' AppleEvents into
QFileOpenEvents automagically).
"
f48742c2bf6002f7c1afaf1d1723659b85d4a3ac,domob1812/huntercore,"Get rid of C99 PRI?64 usage in source files

Amend to d5f1e72. It turns out that BerkelyDB was including inttypes.h
indirectly, so we cannot fix this with just macros.

Trivial commit: apply the following script to all .cpp and .h files:

    # Middle
    sed -i 's/""PRIx64""/x/g' ""$1""
    sed -i 's/""PRIu64""/u/g' ""$1""
    sed -i 's/""PRId64""/d/g' ""$1""
    # Initial
    sed -i 's/PRIx64""/""x/g' ""$1""
    sed -i 's/PRIu64""/""u/g' ""$1""
    sed -i 's/PRId64""/""d/g' ""$1""
    # Trailing
    sed -i 's/""PRIx64/x""/g' ""$1""
    sed -i 's/""PRIu64/u""/g' ""$1""
    sed -i 's/""PRId64/d""/g' ""$1""

After this commit, `git grep` for PRI.64 should turn up nothing except
the defines in util.h.
"
25c56cdbe748ec72c1d101c74602cca6bc82eee6,domob1812/huntercore,"Merge #12878: [refactor] Config handling refactoring in preparation for network-specific sections

77a733a99 [tests] Add additional unit tests for -nofoo edge cases (Anthony Towns)
af173c2be [tests] Check GetChainName works with config entries (Anthony Towns)
fa27f1c23 [tests] Add unit tests for ReadConfigStream (Anthony Towns)
087c5d204 ReadConfigStream: assume the stream is good (Anthony Towns)
6d5815aad Separate out ReadConfigStream from ReadConfigFile (Anthony Towns)
834d30341 [tests] Add unit tests for GetChainName (Anthony Towns)
11b6b5b86 Move ChainNameFromCommandLine into ArgsManager and rename to GetChainName (Anthony Towns)

Pull request description:

  This does a bit of refactoring of the configuration handling code in order to add additional tests to make adding support for [test]/[regtest] sections in the config file in #11862 easier. Should not cause any behaviour changes.

Tree-SHA512: 8d2ce1449fc180de03414e7e569d1a21ba1e9f6564e13d3faf3961f710adc725fa0d4ab49b89ebd2baa11ea36ac5018377f693a84037d386a8b8697c9d6db3e9
"
a0f3d3cdad630103d919a4ec802c413b87fa1f1a,domob1812/huntercore,"net: move ban and addrman functions into CConnman
"
84d26d3a36db589cabec2529a6936ad3efa90c6b,domob1812/huntercore,"Merge pull request #5106

1bea2bb Rename ProcessBlock to ProcessNewBlock to indicate change of behaviour, and document it (Luke Dashjr)
d29a291 Rename RPC_TRANSACTION_* errors to RPC_VERIFY_* and use RPC_VERIFY_ERROR for submitblock (Luke Dashjr)
f877aaa Bugfix: submitblock: Use a temporary CValidationState to determine accurately the outcome of ProcessBlock, now that it no longer does the full block validity check (Luke Dashjr)
24e8896 Add CValidationInterface::BlockChecked notification (Luke Dashjr)
"
d19d45a1e6a4345a57d5983d466b16dadbec0da9,domob1812/huntercore,"Merge #9821: util: Specific GetOSRandom for Linux/FreeBSD/OpenBSD

7e6dcd9 random: Add fallback if getrandom syscall not available (Wladimir J. van der Laan)
7cad849 sanity: Move OS random to sanity check function (Wladimir J. van der Laan)
aa09ccb squashme: comment that NUM_OS_RANDOM_BYTES should not be changed lightly (Wladimir J. van der Laan)
224e6eb util: Specific GetOSRandom for Linux/FreeBSD/OpenBSD (Wladimir J. van der Laan)

Tree-SHA512: 9fd408b1316c69de86674f342339b2f89192fd317c8c036b5df4320f828fa263c7966146bfc1904c51137ee4a26e4cb0f560b2cd05e18cde4d808b9b92ad15c4
"
d9ae1cefa081c7ef978fab0b288475692678af72,domob1812/huntercore,"Merge #9289: net: drop boost::thread_group

67ee4ec net: misc header cleanups (Cory Fields)
8b3159e net: make proxy receives interruptible (Cory Fields)
5cb0fce net: remove thread_interrupted catch (Cory Fields)
d3d7056 net: make net processing interruptible (Cory Fields)
0985052 net: make net interruptible (Cory Fields)
799df91 net: add CThreadInterrupt and InterruptibleSleep (Cory Fields)
7325b15 net: a few small cleanups before replacing boost threads (Cory Fields)
"
56ac0469609ad41e0ce3f002e87bd3d006c5c953,domob1812/huntercore,"Merge #8443: [Wallet] Trivial cleanup of HD wallet changes

7e5d94d [Wallet] Trivial cleanup of HD wallet changes (Jonas Schnelli)
"
6045dcb5e9f551906e8cafd8c3548c75c6daa9d6,domob1812/huntercore,"Rename namecoin -> huntercoin.
"
5a8398e55a5f2bc0ce95c1e5da06c11365af0764,domob1812/huntercore,"Merge pull request #1205 from laanwj/2012_05_granular_ui_notifications

Finer-grained UI updates, move UI interface to boost::signals"
e9d76a161d30ee3081acf93d70a9ae668a9d6ed1,domob1812/huntercore,"Merge #8068: Compact Blocks

48efec8 Fix some minor compact block issues that came up in review (Matt Corallo)
ccd06b9 Elaborate bucket size math (Pieter Wuille)
0d4cb48 Use vTxHashes to optimize InitData significantly (Matt Corallo)
8119026 Provide a flat list of txid/terators to txn in CTxMemPool (Matt Corallo)
678ee97 Add BIP 152 to implemented BIPs list (Matt Corallo)
56ba516 Add reconstruction debug logging (Matt Corallo)
2f34a2e Get our ""best three"" peers to announce blocks using cmpctblocks (Matt Corallo)
927f8ee Add ability to fetch CNode by NodeId (Matt Corallo)
d25cd3e Add receiver-side protocol implementation for CMPCTBLOCK stuff (Matt Corallo)
9c837d5 Add sender-side protocol implementation for CMPCTBLOCK stuff (Matt Corallo)
00c4078 Add protocol messages for short-ids blocks (Matt Corallo)
e3b2222 Add some blockencodings tests (Matt Corallo)
f4f8f14 Add TestMemPoolEntryHelper::FromTx version for CTransaction (Matt Corallo)
85ad31e Add partial-block block encodings API (Matt Corallo)
5249dac Add COMPACTSIZE wrapper similar to VARINT for serialization (Matt Corallo)
cbda71c Move context-required checks from CheckBlockHeader to Contextual... (Matt Corallo)
7c29ec9 If AcceptBlockHeader returns true, pindex will be set. (Matt Corallo)
96806c3 Stop trimming when mapTx is empty (Pieter Wuille)
"
c39a6b9ec8ea6599639435378e0078218a4155fc,domob1812/huntercore,"Tests: Refactor to create witness script creation function

* Refactor blocktools.py so that witness script creation is its own function
* Changed p2p-segwit to use new function
"
321bd948a792118cdc39f21acdf90309ac781b02,domob1812/huntercore,"Merge branch 'namecore'

Update for upstream refactorings, mainly NULL => nullptr rename.

Conflicts:
	src/coins.cpp
	src/core_write.cpp
	src/init.cpp
	src/miner.cpp
	src/pow.cpp
	src/rest.cpp
	src/rpc/blockchain.cpp
	src/rpc/misc.cpp
	src/test/test_bitcoin.cpp
	src/validation.cpp
	src/wallet/rpcwallet.cpp
	src/wallet/wallet.cpp
	test/functional/test_framework/test_framework.py
	test/functional/test_runner.py
"
5e4715cd4a5a12a57b5b55fb600f062b1b4a320e,domob1812/huntercore,"Merge branch 'auxpow'

Moved special logic for decoding name transactions to JSON to
core_write.cpp's ScriptPubKeyToUniv, with ScriptPubKeyToJSON removed
upstream.

Refactor the Namecoin test framework for upstream changes, in particular
the removal is is_network_split and using self.extra_args instead of
overriding setup_nodes.

Conflicts:
	src/rpc/rawtransaction.cpp
	src/validation.cpp
	test/functional/abandonconflict.py
	test/functional/p2p-feefilter.py
	test/functional/test_framework/test_framework.py
	test/functional/test_framework/util.py
	test/util/data/blanktxv2.json
	test/util/data/txcreate1.json
	test/util/data/txcreate2.json
	test/util/data/txcreatedata2.json
	test/util/data/txcreatedata_seq0.json
"
438c7e4cd2179170aeadb4aa1c902ccd1256dee6,domob1812/huntercore,"Merge pull request #4555

6dcfda2 Don't pass nHashType to EvalScript nor CheckSig (jtimon)
2b23a87 Don't pass nHashType to VerifyScript (jtimon)
ce3649fb Remove CScriptCheck::nHashType (was always 0) (jtimon)
358562b Remove unused function main:VerifySignature (jtimon)
"
1a275bac2b5454ae9d6744f28c29cbf40e2fbf13,domob1812/huntercore,"Merge pull request #1052 from sipa/scopedlocks

Use scoped locks instead of CRITICAL_BLOCK"
81b79f2c394c08e2bcf612f89a230afb60074a81,domob1812/huntercore,"[tests] Rename rpc_* functional tests.
"
d889c036cd6f683116e6a27e404be2809d1deb76,domob1812/huntercore,"Merge #11403: SegWit wallet support

b224a47a1 Add address_types test (Pieter Wuille)
7ee54fd7c Support downgrading after recovered keypool witness keys (Pieter Wuille)
940a21932 SegWit wallet support (Pieter Wuille)
f37c64e47 Implicitly know about P2WPKH redeemscripts (Pieter Wuille)
57273f2b3 [test] Serialize CTransaction with witness by default (Pieter Wuille)
cf2c0b6f5 Support P2WPKH and P2SH-P2WPKH in dumpprivkey (Pieter Wuille)
37c03d3e0 Support P2WPKH addresses in create/addmultisig (Pieter Wuille)
3eaa003c8 Extend validateaddress information for P2SH-embedded witness (Pieter Wuille)
30a27dc5b Expose method to find key for a single-key destination (Pieter Wuille)
985c79552 Improve witness destination types and use them more (Pieter Wuille)
cbe197470 [refactor] GetAccount{PubKey,Address} -> GetAccountDestination (Pieter Wuille)
0c8ea6380 Abstract out IsSolvable from Witnessifier (Pieter Wuille)

Pull request description:

  This implements a minimum viable implementation of SegWit wallet support, based on top of #11389, and includes part of the functionality from #11089.

  Two new configuration options are added:
  * `-addresstype`, with options `legacy`, `p2sh`, and `bech32`. It controls what kind of addresses are produced by `getnewaddress`, `getaccountaddress`, and `createmultisigaddress`.
  * `-changetype`, with the same options, and by default equal to `-addresstype`, that controls what kind of change is used.

  All wallet private and public keys can be used for any type of address. Support for address types dependent on different derivation paths will need a major overhaul of how our internal detection of outputs work. I expect that that will happen for a next major version.

  The above also applies to imported keys, as having a distinction there but not for normal operations is a disaster for testing, and probably for comprehension of users. This has some ugly effects, like needing to associate the provided label to `importprivkey` with each style address for the corresponding key.

  To deal with witness outputs requiring a corresponding redeemscript in wallet, three approaches are used:
  * All SegWit addresses created through `getnewaddress` or multisig RPCs explicitly get their redeemscripts added to the wallet file. This means that downgrading after creating a witness address will work, as long as the wallet file is up to date.
  * All SegWit keys in the wallet get an _implicit_ redeemscript added, without it being written to the file. This means recovery of an old backup will work, as long as you use new software.
  * All keypool keys that are seen used in transactions explicitly get their redeemscripts added to the wallet files. This means that downgrading after recovering from a backup that includes a witness address will work.

  These approaches correspond to solutions 3a, 1a, and 5a respectively from https://gist.github.com/sipa/125cfa1615946d0c3f3eec2ad7f250a2. As argued there, there is no full solution for dealing with the case where you both downgrade and restore a backup, so that's also not implemented.

  `dumpwallet`, `importwallet`, `importmulti`, `signmessage` and `verifymessage` don't work with SegWit addresses yet. They're remaining TODOs, for this PR or a follow-up. Because of that, several tests unexpectedly run with `-addresstype=legacy` for now.

Tree-SHA512: d425dbe517c0422061ab8dacdc3a6ae47da071450932ed992c79559d922dff7b2574a31a8c94feccd3761c1dffb6422c50055e6dca8e3cf94a169bc95e39e959
"
b88cb1a96eb670ca1f36cdc3fa908a23bffa18c5,domob1812/huntercore,"Merge pull request #5105

a96d113 Rename CWalletInterface to CValidationInterface (Pieter Wuille)
"
40e96a30160ddc2cb39bc9b86ec103ac892e09ab,domob1812/huntercore,"Merge pull request #5599

0cc0d8d Get rid of the internal miner's hashmeter (jtimon)
"
54604600c3de6cb18540c0911127173f68ad246c,domob1812/huntercore,"Add AbsPathForConfigVal to consolidate datadir prefixing for path args

Most commandline/config args are interpreted as relative to datadir if
not passed absolute. Consolidate the logic for this normalization.
"
74e4d80068f9c29d4891439332b4027328c8584b,domob1812/huntercore,"Merge pull request #2210 from Diapolo/Qt_header_cpp_cleanup

Bitcoin-Qt: massive header and cpp cleanup"
67a42f929b1434f647c63922fd02dc2b93b28060,domob1812/huntercore,"Network stack refactor

This introduces CNetAddr and CService, respectively wrapping an
(IPv6) IP address and an IP+port combination. This functionality used
to be part of CAddress, which also contains network flags and
connection attempt information. These extra fields are however not
always necessary.

These classes, along with logic for creating connections and doing
name lookups, are moved to netbase.{h,cpp}, which does not depend on
headers.h.

Furthermore, CNetAddr is mostly IPv6-ready, though IPv6
functionality is not yet enabled for the application itself.
"
2c2d98806253db8c83055800a6bb14814a2f12b1,domob1812/huntercore,"Merge #10546: Remove 33 unused Boost includes

49de096 Remove unused Boost includes (practicalswift)

Tree-SHA512: ff2dad94f9eeb1dc50fcffd0e94e1686be04e4e5bc45f58ae955d630c15cd25bb8f5583d0aa1f2f263b5a723be79747ef3c6e6b417c7be7787c0abc8d1874019
"
c548698c0910670dcd57305b95cbde895b21e042,eMoflon/emoflon-ibex,refactoring on manipulation code via utils
313ead1dc929dfaf899a8e7dce5293f32e6bcd13,eMoflon/emoflon-ibex,"Add BinaryILP problem, which contains helper methods for easier creation of often used constructs and more effective fixing of vars
"
d954d7e17214696674c23cb4dc0640b24f4c2bd7,ec-europa/joinup-dev,"ISAICP-2255: Provide access control and graph handling for the collections.
Move a method to joinup core to make it generic.
"
bcfe0127106ee8568caebe6c840ab66d425181da,ec-europa/joinup-dev,"ISAICP-2373: Properly clean up aliases on the scaffolded node object after translating them to the actual field values.
"
6b23094cff77d7e485e0a2ae5698884f63c87ce7,ethereum/go-ethereum,"Improve key store passphrase crypto

* Change MAC-then-Encrypt to Encrypt-then-MAC
* Change AES256 to AES128
* Use first 16 bytes of KDF derived key for AES and
  remaining 16 for MAC
"
9008b155d3c8d2a32c4c8945f1174243d48d4e90,ethereum/go-ethereum,"Renamed `chain` => `core`
"
cd856cb2133d390758bb24b88fa3b538bb7bc306,ethereum/go-ethereum,"Separated block db from state db. Partial fix for #416
"
81e2124ea20503b70fac726868e3bbefd8c02d73,ethereum/go-ethereum,"improved error detection and handling for NewTransactionFromBytes

integrated review comments
"
37dd9086ec491900311fc39837f4a62ef5fd3a4a,ethereum/go-ethereum,"core: refactor genesis handling

This commit solves several issues concerning the genesis block:

* Genesis/ChainConfig loading was handled by cmd/geth code. This left
  library users in the cold. They could specify a JSON-encoded
  string and overwrite the config, but didn't get any of the additional
  checks performed by geth.
* Decoding and writing of genesis JSON was conflated in
  WriteGenesisBlock. This made it a lot harder to embed the genesis
  block into the forthcoming config file loader. This commit changes
  things so there is a single Genesis type that represents genesis
  blocks. All uses of Write*Genesis* are changed to use the new type
  instead.
* If the chain config supplied by the user was incompatible with the
  current chain (i.e. the chain had already advanced beyond a scheduled
  fork), it got overwritten. This is not an issue in practice because
  previous forks have always had the highest total difficulty. It might
  matter in the future though. The new code reverts the local chain to
  the point of the fork when upgrading configuration.

The change to genesis block data removes compression library
dependencies from package core.
"
413ace37d3ba13a551f60e4089f2e0070c607970,ethereum/go-ethereum,"eth, p2p: rename trusted nodes to static, drop inbound extra slots
"
cf71f5cd604f4d5c94d9e9b12b121a614d662dc7,ethereum/go-ethereum,"rpc: remove HexNumber, replace all uses with hexutil types

This change couldn't be automated because HexNumber was used for numbers
of all sizes.
"
097ba56df59293f9225a8ecdc9e1c43a5ad891bb,ethereum/go-ethereum,"Renamed block_chain to chain_manager
"
7b662103a026ee96667c8cad96dc952b7896a8af,ethereum/go-ethereum,"Merge pull request #2535 from karalabe/modularize-console

cmd, console: split off the console into a reusable package"
479cf7344dac497dd1682df1ce08da7911bb36c8,fable-compiler/Fable,"Add some applicative tests and optimize options
"
3c0be064c60b773d7f06a46d7ddd22fafd536297,fable-compiler/Fable,"Cleanup
"
3cc3101d2eece4d1310eaad7945630033fed8b7b,fable-compiler/Fable,"Improve error messages II
"
7f08a1cee65738fbff3c63ab862e46ab61606922,gabyx/ExecutionGraph,"Refactor the shit out of it
"
56e21759c6c43957f9e0815ea9e2ce55e0673481,geneontology/go-site,"renamed gafs dir to groups.
"
bda418bad06928a7253565ffc9b171524e4e9e0c,genonbeta/TrebleShot,"Improve stability, add feature file renaming, move if it is possible while updating save path
"
5ac28491bf33f3f73d52d0623a75c870670f8214,hmrc/assets-frontend,"Merge pull request #887 from hmrc/SDT-688

Make the language selector reusable"
f6c5492ba56c25b2b435a1376a093f0eac87e763,hmrc/assets-frontend,"initial commit for gulp task refactor
"
213aeb6ab3a941a89998712a86ba3f3eeae307a5,imGraetzl/im_graetzl,"home out HTML/CSS and some minor refactoring
"
4ebd3e03df9462a5e73092867ef56260ac160fd4,imGraetzl/im_graetzl,"Fixed filters and extracted them as a component
"
f06adb31c67b60ee10fcaac66cf87935ed4ee32e,langurmonkey/gaiasky,"Data values separated into their own group in GlobalConf
"
01e047240158a0c9be7824bf37a2305ab95cae9b,langurmonkey/gaiasky,"General code clean-up

- Removed all tabs
- Added new logger
- Fixed notif messages
- Much more
- Fixes #25
"
442d3e93daa30d5dd17633e97651ccc1c0bac8dd,libgraviton/graviton,"Cleanup GRV-1347: some cleanup
"
504bf8ee749baeab22826a4662c30a55ca842ee1,livepeer/go-livepeer,"separate out bonding
"
95444475bbdd1864bfe769aba068735669c5a0a6,mingzuozhibi/mzzb-ui,"refactor(admin-sakura): Move to List
"
6902ea082a468344a0a37ad90f6d651386ee3309,mingzuozhibi/mzzb-ui,"refactor(state): Extract Current State
"
737164f9f06070f3b60afc47fe2024883b7391ef,mltframework/shotcut,"Rename blur filters.
"
fbd427d82dd319de0bbfa70fcfc120a5ce4d0089,mltframework/shotcut,"cleanup UI state around encode, capture, stream
"
9cda4a4b231cb5bf83aa1d65432e6284ab6bbe24,mltframework/shotcut,"Refactor all QSettings into new Settings singleton.
"
ab3ce28d6187781ad280ad47780fa22b1251de23,mltframework/shotcut,"Improve frame accuracy when pausing and seeking.

When pausing, sometimes the consumer thread would output a newer frame before
the video thread was done. Then, the video thread would output an older frame.

Also, when seeking, the consumer would reload a bunch of the same frame into
the buffer.
"
6f98b449fd6200c6b2334b17cefd80e52112b302,opencog/link-grammar,"refactor this and that


git-svn-id: fc35eccb03ccef1c432fd0fcf5295fcceaca86a6@32075 bcba8976-2d24-0410-9c9c-aab3bd5fdfd6
"
5e670e6ece463658e866f08fb43a8730da79ef30,opencog/link-grammar,"Use a per-dictionary locale.

This is a big commit, in order to do the changes at once so everything
will remain consistent.

Changes:
1. Set the locale (locale string) and locale_t (locale object) fields
of the dictionary structure, using a potential per-dictionary locale
as returned by linkgrammar_get_dict_locale().

2. Take care to use the dictionary locale when compiling the regexes.

3. Simplify very much format_locale():
   - Converting to long locale names on WIN32 is not actually needed.
   - Use separate ll and cc instead of a combined string.

4. Replace all the isw*() functions by their isw*_l() versions,
and use the dict locale as their locale-object argument.
"
1d93639d7204dd605ee44605722d1d318cef259a,opencog/link-grammar,"Revise slang handling
"
a12ee04b0c3984f247592bbe2a542396f7d23b0b,opencog/link-grammar,"move a misplaced flag
"
d51fbd6ea2e6b0e4fafa66204f60dcb5e49a2ec7,opencog/link-grammar,"Fix contable memory leak when a dict contains no connectors

Also remove redundant recomputation of the number of connectors.
"
633d88af7437e300b8f3ca467a34d61a0fc60fab,opendaylight/netvirt,"Merge ""elanmanager Checkstyle clean-up (94%) """
bef2d9076626e58db05d8860895622b18955c4f5,pscedu/slash2-stable,"clean up one recusive lock usage of bmap
"
b3ec7a90ea13ae6032138a3097d0e983bcdb3409,pscedu/slash2-stable,"- overhaul the make infrastructure:
    (o) introduce MODULES which do the platform-specific bindings to get code
	compiled that uses external interfaces, such as fuse, zfs, libpthread,
	etc.
    (o) remove the depend target.  depends are now discovered automatically
	when source files change.

- use the in-tree fuse when linking apps with fuse instead of relying on a
  system installation.


git-svn-id: f2acecaac6fbd5a03f3d4799db58dda434111981@9795 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
2536e5b93caf395df02db10dd80941f0bb63ee05,pscedu/slash2-stable,"convert to listcache for improved debugability

git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@17332 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
bd7d95c281b5700e8805d855ef1eaab3b05bb6db,pscedu/slash2-stable,"rename an opstats


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@20797 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
df599a24aa5b05ecb861227a567d67a418304c01,pscedu/slash2-stable,"fix some bugs, and rewrite update propagate to be similar to garbage reclaim


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@14982 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
1c817cb14621fff1c8e065609130b84896ebbe87,pscedu/slash2-stable,"- consolidate uswi instantiation to alleviate a race condition
  causing segfaults.
- more progress on partial truncate (queue the up_sched work on the USSR threads).


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@12763 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
033483b93e86cad06afd29ecdccb9e3ffec4466c,pscedu/slash2-stable,"CSVCF_WANTFREE --> CSVCF_MARKFREE
"
d5895fff502150c3130b29b4f36f7232ab272aba,pscedu/slash2-stable,"more async I/O support:

  leave all I/O callbacks exactly as they are now instead of mucking
  with the lot.  instead, we just setup the aio callback environment to
  look exactly like a regular callback; it will just be invoked from the
  rci (RPC handler to CLI from ION) context

note: this is an RPC flag day, make sure you sync all daemons


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@17286 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
8926e2289f75b345a6b3438a713d5b23fcd7fd38,pscedu/slash2-stable,"more upsched renaming and shuffling

git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@12229 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
16beab59602761e818fc9f78e66a25324ca88c35,pscedu/slash2-stable,"workaround fuse_ino_t being 'unsigned long' and thus 4 bytes against the 8-byte
slfid_t on i386:

- rename RPC 'ino' fields to 'fid', to dissociate from fuse inode numbers.
- introduce a flag to handle demoted integers as FIDs.  return ENFILE when
  we see a collision, allowing up to 4 billion files to work in mount_slash
  instead of probably none.
- try to use the fuse 'ino' value as little as possible; prefer the fcmh_fg
  instead.

with this change, mount_slash should theoretically work on i386.


git-svn-id: ae92b08b608af1c8cefa3e10d2325ea527204e07@10039 3eda493b-6a19-0410-b2e0-ec8ea4dd8fda
"
5f8da72e8eea10656132ecca7ada5b8ce22f41f5,skycocker/chromebrew,"Merging crew refactor and importing lib/color
"
7d586ae8f64fc002666954476b037d1d2a9801ae,thheller/shadow-cljs,"refactor exception handling to get non-zero exit codes on errors

closes #63
"
8755175d61d0a3885431ad01e9e5016cc979df79,triplea-game/triplea,"Added new Territory Effect Attachment option, noBlitz, which disallows certain units from blitzing in this effect, and also some general cleanup. (edwin & veqryn)

git-svn-id: c1ba500aeec1d6140676cb07156a1e31a23423bf@3377 a4c711aa-641f-0410-879d-9b464e52b682
"
67de20255cd5ba8c4993135329414dc5841d3f4e,triplea-game/triplea,"AI - Refactored some data fields into new ProData class and created
manager classes for territories and units"
4c92fbff8c9cb39795b88a9de43df6e599d3256f,triplea-game/triplea,"Make private methods static where possible
"
71bcf7af9bee7f989a4fd563b17e527123e69c0f,triplea-game/triplea,"Use ClientSettings enum to save/load preference instead of model objects
"
aa42cc0f34bbec97b77bd22c9acf81d257f098ac,triplea-game/triplea,"Merge pull request #775 from DanVanAtta/inline_variables

Convert class fields to local"
951a396e4c996c553e32857685eaf337ff0bebf6,triplea-game/triplea,"Merge pull request #1932 from ssoloff/add-match-any-factory-method

Replace CompositeMatchOr subclass with Match#any()"
b355daed56e33e6bfed77855dd90f31384685324,triplea-game/triplea,"* Moved 'Fire' out of MustFightBattle with the hopes of abstracting it and making it a general class one day. (veqryn)

* Created battle steps and interfaces for Air Battle, but still not done actual combat. (veqryn)

* Created ability for Air Battles to create Bombing Raids when they are finished if any bombers remain. (veqryn)

* Created new unit attachments, ""canIntercept"", ""canEscort"", ""airDefense"", ""airAttack"", which can be combined with new game option, ""Raids May Be Preceeded By Air Battles"", to allow air battles. (veqryn)

git-svn-id: c1ba500aeec1d6140676cb07156a1e31a23423bf@3328 a4c711aa-641f-0410-879d-9b464e52b682
"
45995e0d163442fc28644738412df1ff03b7d61d,triplea-game/triplea,"Rename odds calculator package to maintain backwards compatibility

This package contains classes that are serialized with game data.  Thus,
old save games cannot be loaded after the package name was changed from
""oddsCalculator"" to ""oddscalculator"".  This change reverts the package
name to what it was in the last stable release.
"
bd79696b662a79caf5f742a848f2d7e48aa1440f,triplea-game/triplea,"Merge pull request #361 from DanVanAtta/cleanup_imports

Cleanup - Remove unnecessary imports"
5993b74ddb92e6390107cec70e29e3d545f7d90c,triplea-game/triplea,"Merge pull request #1726 from ssoloff/make-private-methods-static-where-possible

Make private methods static where possible"
18f7c6bebbe703de2700bc9057e8be3a1ee589d7,triplea-game/triplea,"Remove unused fields and method parameters (#3257)

* Remove unused fields

* Remove unused method parameters

* Or document the parameter if it's part of a public API (and the
  parameter's meaning is clear).
* Or suppress the warning if the parameter is part of a non-API method
  and it can't be removed for compatibility.

* Remove unnecessary cast

* Add reminder to replace DelegateList upon next incompatible release
"
c19fc11355b13d75d97286402c7a933fb23d3b70,ulfalizer/Kconfiglib,"Drop some compatibility and tighten up lexing

Old versions of the C tools used to ignore unhandled characters in some
contexts due to sloppy lexing, which Kconfiglib emulated for
compatibility (things like ""---help---"" used to depend on it).

This was improved in the C tools by commit c2264564 (""kconfig: warn of
unhandled characters in Kconfig commands""), committed in July 2015.

Remove the compatibility hack and tighten up the lexing in Kconfiglib as
well. It will make implementing the new preprocessor stuff smoother.

The major version will be bumped.
"
94e6db54b8c8411cead8cc4186aa9199a23d617e,ulfalizer/Kconfiglib,"Simplify MenuNode.referenced() a bit

Can get the initial set from expr_items(self.dep), since it's always
included and always returns a new set().
"
54de4188fdf0da93bb2b3c892dbc8395d359ef33,whitesource/fs-agent,"WSE-241 Fix support for python3 - rename configuration parameter
"
c381f3b6efa35e403e81dad4821272a605730316,whitesource/fs-agent,"Refactoring
"
339624d0f71ef19788f2a1e5b5a33110ca04c3a7,wieslawsoltes/Core2D,"Refactored methods to use generics
"
981c7022437919ce98ff732ae3f48aef56c17152,wieslawsoltes/Core2D,"Removed unused projects
"
7a0c85b8f5412a7006a32a8c20cb60366ffb0aaf,wieslawsoltes/Core2D,"Merge pull request #6 from Core2D/commands

Make commands static"
53dc62ec0fde593edff47b002c50e57a5bd88353,AntennaPod/AntennaPod,"Remove unused imports
"
309ed07378b57dc2ef85f77ca9dd3a27db0c8c48,Arvtesh/UnityFx.Async,"Heavy Then optimizations
"
3cbb2eba8bde27a291fb3b38728b0838391e898a,Automattic/wp-calypso,"rename to term-tree-selector.
"
27397c4b80026609c0515988bc6b73314f6a7fe6,Automattic/wp-calypso,"Activity Log: allow to download a backup (#19371)

* Activity Log: add action, reducer, selector, in preparation to display a dialog for backup

 - Display backup dialog
 - Create backup calling wpcom/v2 endpoint

* Update classifier to handle download request dialogs

* Refactor `classifyEvents()` with default values

* Initiate backup creation. Monitor progress

* Monitor progress and show card at the end prompting user to download backup

* Update texts, convert link to button

* Allow to display two progress cards and two success/error cards. Fix Invalid Date issue
"
7de539b7d8d7643c667b1f8bd04badf05908d9e7,Automattic/wp-calypso,"Kracken: Fix a bug with featured domains

We would filter free domains from the suggestions, which would fatal the FeaturedDomainSuggestion because it always expects primarySuggestion/secondarySuggestion. Added checks to prevent that too.

Refactored utility functions."
dd39cd481ef852094f60a85238353aa904778a28,Automattic/wp-calypso,"Merge pull request #4440 from Automattic/update/themes-consolidate-action-types

Themes: Consolidate action types"
d745b11eb58b1ab4c4322bb8a6b61b88b5c615d9,Automattic/wp-calypso,"Login: Rename wp-login feature to group it under a login prefix
"
9db0a9c960ea326393da981e9086133ee90e3da2,Automattic/wp-calypso,"Merge pull request #5377 from Automattic/remove/5363-component-classes

Framework: Deprecate use of component-classes"
3839698519d14028770e7c732706dbe9b374c609,Automattic/wp-calypso,"Activity Log: Put a page title on this page to match others. (#23015)

* Put a page title on this page to match others.
I've just copy-pasted how it's done elsewhere in this file. I'm not familiar enough with how things work to know how to use DocumentHead as suggested :)

* Replace imperative title in controller with declarative React component

* Clean up the rest of the file for consistency
"
ff7ce2332a0df0888af32986f26452428b8fcad3,Automattic/wp-calypso,"Update Reader Post Component in SEO Reader Preview (#12704)

* First attempt at using the `reader-post-card` component in the SEO reader preview.

* Don’t allow the action buttons to wrap.

* Code style cleanup.

* Hide the bottom border when used as an SEO preview.

* Hide labels until we break at 960px.

Used object.assign for a cleaner process of the post -> readerpost conversion.

Force has_avatar so we get round avatars for authors.

* Cleaned up the PropTypes in the `reader-preview` component.

* Fix wrapping issue with action buttons.

* Stub the reader-preview component for SSR to get the build working.
"
0084dc81a18e38386263de4e6aae9cdfff5a0058,Automattic/wp-calypso,"Invites: Refactor in order to display notices after accept-invite answer

* accept invite after log in and not before.
"
ccc630d1514fc1b9f3a22c281715506667917938,Automattic/wp-calypso,"Change field names to match what the REST API returns

* Remove hard-coded fields that are now returned by the REST API

* Generate options to show in Preload Posts dropdown
These options are not returned by the REST API.

* cache_mutex_disabled is the same setting as cache_disable_locking

* Format timestamps on Advanced tab
‘cache_next_gc’ is returned by the API as a Unix timestamp.

* Refactor EasyTab to use an ES6 class
The ‘httpOnly’ setting is not returned by the API, so the EasyTab
component needs to save its state. Hence the need to refactor to use an
ES6 class.

* Refactor PreloadTab to use an ES6 class
The ‘preloadRefresh’ setting is not returned by the API, so the
PreloadTab component needs to save its state. Hence the need to
refactor to use an
ES6 class.

* ""Lock Down"" setting is now a toggle so it should not be a read-only field
"
3eba639292b03df481a8759cdcf3a279db9690fd,Automattic/wp-calypso,"Plugins: Remove the unused featured plugins component (#8577)

"
d731ea305d44f0db0600b0b01cabe2ffa3dcb6a2,Automattic/wp-calypso,"Fix/plans screaming case (#8409)

This refactors a bit in /lib/plans/constants and /lib/plans/index trimming extra data and fixing a bug where nudges were shown when they should not.
"
4507e4b01026c8f580d710f8af3e6978898404f7,Automattic/wp-calypso,"Update Refund survey (#11524)

* Add enrichedSurveyData function for cancellation survey.

* Use enrichedSurveyData before submitting remove purchase survey.

* Call enrichedSurveyData before submitting survey for refunds.

* Add newOrRenewal for purchase (based on number of years).

* Split submit survey call into multiple lines.

* Assemble enriched survey result using Object.assign.

* Introduce unit test for enrichedSurveyData.

* Ensure daysSincePurchase and daysSinceSiteCreation are calculated for survey data.

* Correct determination of new purchase vs renewal when cancelling.

Renewals are charged 30 days before one year after the initial purchase.

* Remove newOrRenewal calculation from cancellation survey.

The calculation was not a reliable indication of cancellation after initial purchase or after renewal.
"
34c9431bd3952a9b15f4cf87e99e3e333faeb7e1,Automattic/wp-calypso,"* Move selectors to their own files (with a test for each)
* Split constants to individual exports
* Better symbol names throughout
* Improved logic on the wrapper component
"
5471f8cacb32026a08fe04da3e98eadb87bfc635,Automattic/wp-calypso,"Update dependency mini-css-extract-plugin-with-rtl to v0.1.2 (#26945)

"
2443e25905b5560c3e6d49b34254cf01f869d2d3,Automattic/wp-calypso,"[immediate login links] Notify user that they were automatically logged in if we land on a page with relevant query parameters (#26391)

* Notify user that they were automatically logged in if we land on a page with relevant query parameters

* Change language from magic to immediate login

* Fix fatal error - return if currentUser is null instead of trying to destructure it

* Save immediate login-related information received via query parameters

* Do not do any notifications-related work if we are going to a log-in related page

* Use lodash.once instead of a custom implementation

* Add state selectors for immediate login-related data

* Move action constant to action-types

* Add more unit tests
"
fc64b1008672fcd1ba85a157c1711eba2dbf09c4,Automattic/wp-calypso,"Replace `deterministicStringify` with `json-stable-sort` (#17283)

* Replace `deterministicStringify` with `json-stable-sort`

@see #17262

The existing implementation of `deterministicStringify` left some
questions out in the open and possible some bugs. `json-stable-sort`
seems to have worked out those issues so I'm switching over to using it
instead of our home-grown solution.

There is a behavioral change here in that arrays will no longer be
sorted before stringifying. We're not sure why they were sorted
originally but as we're using this to identify unique values we will
want to treat different arrays as different arrays.

* Update hash keys in wpcom/sync-handler tests

The `wp/sync-handler` tests have some hard-coded values representing
hashes generated from serializing request objects. Because
`deterministicStringify()` generated a different serialization than
`json-stable-sort` the hash changed at runtime and the tests failed.

These tests could benefit from generating these hashes dynamically so
they don't fail again in the future for other legitimate changes, but
right now I'm going to leave that change out as I want to get this stuff
merged and don't want to mix that much change into one PR and I don't
think this will break too often.
"
8f8c4183209fa95d481ab35f0abf35033162a251,Automattic/wp-calypso,"Move away from stacked version

- Still mostly an experiment at this point.
- Attempt at refactoring where the code lives, pretty sure @mtias will have comments
"
5a8b5fa294e8fadb94edd8d8c4484107f7102617,Automattic/wp-calypso,"Comments: remove feature flags (#20769)

Cleaning up feature flags that are enabled in all environments."
5084e7b2b409b990437335bb8ac814d0bd7d63c4,Automattic/wp-calypso,"Stats: create a redux state subtree to manage post stats (#5059)

This is intended to replace the Flux post-stat-store
The action requestPostStat is used to trigger the api call to load the stat
We can then use one of the selectors :
 - isRequestingPostStat to check whether the stat is being fetched
 - getPostStat to retrieve the fetched stat"
0e76c2b67fbc807b84be37409c9b7b51db4b136a,Automattic/wp-calypso,"Merge pull request #1392 from Automattic/add/z-index-map-1139

Framework: move z-index values to z-index scss function"
8eaf1b5a9872ea98c9466b16fc31f8f0d3c6ab57,Automattic/wp-calypso,"State: Rename dispatchWithMeta to extendAction

Extends action object directly, not via meta property
"
09db49768a653448db79643d52af69891ed631fd,Automattic/wp-calypso,"Components: Move happiness-engineers to Redux

- Add Action Creators/Action Types
- Add Reducers
- Add to global state tree
- Tests for reducers
- Add actions.js tests
- Return promise in wpcom undocumented
- Change test describe() to better explain what the test does
- Add selectors and tests
- Add query object
- remove old lib
"
b78ee8f844077c7faad8ab4d77fc56523f00c3e2,Automattic/wp-calypso,"Merge pull request #3275 from Automattic/update/deprecate-add-new-button

Framework: remove ""AddNewButton"" and replace with compact borderless Button"
688c4ebb926f91e3c7cb89c4b802670f515fd0c0,Automattic/wp-calypso,"Consolidate state shape for happychat.chat (#18743)

* State: extract happychat.chat reducer from happychat

* Use jest mock instead of own sinon helpers

* Move HAPPYCHAT_CHAT_STATUS_* to constants

* State: extract selectors related to happychat.chat

* State: extract actions related to happychat.chat

* happychat.chat.message moved to happychat.ui.currentMessage
"
039b1d6485e05e4238b82eccb578da37f8031497,Automattic/wp-calypso,"Stats: Fixes and improvements to loading behavior with empty localStorage
"
34cd09fbe0f8ec3e8474304fdb2c77ae366d3975,Automattic/wp-calypso,"Merge pull request #12880 from Automattic/fix/ml-redux

Magic Login: Simplify Redux State"
3a4151397597f077eae7cbe8a9b591801c13d1e0,Automattic/wp-calypso,"Framework: Fix showcase to signup flow

Change the signup routes to render a complete react tree
including the top-level layout, allowing a transition from
the showcase logged-out layout to the signup logged in one.

* Allow elements as props to the layout component
* Add a ReduxWrappedLayout helper function
* change signup routes to use the isomorphic router
* Split the entry points for the isomorphic router controller
(allowing client-specific dependencies)
"
7d8c2c02049358af7416af0c0fd82120457b9df8,Automattic/wp-calypso,"Framework: Include HelloVote notice in Layout (#8423)

* State: Add helloVoteNoticeDismissed to preferences schema

* Layout: Include HelloVote notice in layout for site-specific screens

* Framework: Update phrasing of HelloVote notice call-to-action

* Framework: Bind stat bumping with HelloVote notice action

* Framework: Hide HelloVote notice if user cannot manage site

* Framework: Hide HelloVote notice if already in settings section

* State: Include geo state handlers

* Framework: Hide HelloVote notice if not US-based browser

* Analytics: Enhance TrackComponentView to bump MC stats

* Framework: Track MC stat for HelloVote notice impression

* Framework: Update HelloVote notice prompt text to encourage users

Since will not be shown to logged-out visitors

* Framework: Avoid unnecessary geo queries in HelloVote notice

* Framework: Update geo endpoint URL per systems feedback

* Framework: Add stylesheet for HelloVote notice
"
578e8237a78fab291fb08137b7c79b5535080aae,Automattic/wp-calypso,"Merge pull request #3071 from Automattic/update/client-prop-name

Make the name of the client property in config files more generic."
a0b36530c43a5caac196569e0e035170c88cbae3,Automattic/wp-calypso,"RegisterDomainStep: Modularize stateful analytics functions (#27036)

This moves the analytics function `enqueueSearchStatReport` into `/register-domain-step/analytics.js`."
70a87069cf43e9abb60782a0d03a191e0eb0aafb,Automattic/wp-calypso,"Framework: Update Jade to Pug (v2) (#19984)

* server/pages: Rename *.jade to *.pug
* Server: Use suffix-less Pug template filenames
* Docs: Update Jade references to Pug in READMEs
* Framework: Upgrade Jade to Pug v2
* server/boot: Use pug as view engine
"
b68344fce6a9bf81d26959ce7d253a5e36d05874,Automattic/wp-calypso,"Fix the clean:public script to do a better job cleaning public/ folder (#29354)

* SEO Preview Upgrade Nudge: webpackify CSS and PNG assets

Move the PNG image from `/public/images`, which a build directory that shouldn't be version controlled,
to the component directory and make it a webpack assets. Webpackifies the component CSS as a drive-by.

* Disable vendors prefix for the map/mapbox-gl chunk

* Fix the clean:public command to remove all build artifacts in public/

* Jest Config: add more file extensions to the list of image assets to ignore

* Remove the chunk-name-tuning of map/mapbox-gl and amend the scripts accordingly

* Address review feedback: GIFs and vendors~*
"
9f5d6b27cb1940d6a553ee3901969111c0c2e118,Automattic/wp-calypso,"Jetpack Connect: Separate stale data logic in a utility function
"
87fe97b068ec337c74e42f502dfa629404eb6df0,Blockrazor/blockrazor,"problem: menu does not allow sub menus 

solution: complete refactor of the menu #946"
5e1f4d858180fccfff69f6a5f910f25d28093bab,Blockrazor/blockrazor,"UX issues with new share button

solution: remove custom CSS and only use bootstrap, add modal instead of dropdown added better title tags to each icon for better UX #799
"
b1f1ec22fbab8f098e85f8c46251b3b36bdda597,Blockrazor/blockrazor,"Problem: #69 App architecture inefficiencies and overhead

 
Solution: move and destructured some of page files. #69"
08af1e1f600344c4b09e440e558f856a4b77e945,Blockrazor/blockrazor,"Problem: [/currency/x] cannot add exchanges to coins

 
Solution: made exchange methods/pubs/collections. Expanded localizable collection for optimistic UI. implemented typeahead on target page, but there're major problems with no results found template explained in issue: #783"
26c2ac45838b99854d3db75730979529677ffb13,MDAnalysis/mdanalysis,"Fix some untyped exception handlers

Using try/except without an specified exception can hide major issues.
It also hide the intent of the code by not telling what is expected to
go wrong. This commit fix some occurrences of that bad practice when I
could understand the intent of the code.

Makes Quantified Code happier by fixing part of the suggestion untitled
""Avoid untyped exception handlers"".
"
6bbbf30d94bd292a51e9ceb8434584092ec89760,OpenSlides/OpenSlides,"rename mediafiles private flag to hidden
"
35a80427595f6c6130efca5ec04d5da0e89a504b,OpenSlides/OpenSlides,"Assignments template improvements

- list view with quickview
- ngDialog for create/update view
- candidates
- polls
"
46f6bbb907a76b74b8ecd1a59f693d9793006056,OpenSlides/OpenSlides,"Motion PDF improvements

* Use consistent lineheight (1.25) in PDF (also for lists).
* set default value of motions_line_length config to 90.
* Reduce footer height.
* Use identifier in filename only if available.

Added missing translation string.
"
cd34d30866521d320d829729ba4308fd38d4734f,OpenSlides/OpenSlides,"Remove utils.collections.Collection class and other cleanups

* Activate restricted_data_cache on inmemory cache
* Use ElementCache in rest-api get requests
* Get requests on the restapi return 404 when the user has no permission
* Added async function for has_perm and in_some_groups
* changed Cachable.get_restricted_data to be an ansync function
* rewrote required_user_system
* changed default implementation of access_permission.check_permission to
  check a given permission or check if anonymous is enabled
"
f1ddd16dc61629e08ff9409b88cbd7b52617286c,OpenSlides/OpenSlides,"Motion rework

- remove motion version
- migrations for versions and change recommendations
- Redone motion comments. Wording changed from comment fields to comment
  sections
- fixed test order, tests are not atomic
- introduce get_group_model. Just use OpenSlides Groups and not the
django's ones.
"
29d25d30d6cea2ce9b5a2368a7a1912b0aaa3db0,OpenSlides/OpenSlides,"cleanup the agenda app
"
7f08a0949744dfc051122bee546bbe231d315aa7,OpenSlides/OpenSlides,"Merge pull request #2992 from FinnStutzenstein/CleanUp

Collection name to CamelCase (fixes #2983)"
7b7f43b04a640c23dcfc636aee5fc421eea92206,OpenSlides/OpenSlides,"#97: Countdown: move countdown config input field from config tab to portlet
"
76dc29cddfc3f9a60f0ab86de77a59ebac6855ff,OpenSlides/OpenSlides,"Use uib-alert instead of deprecated alert tag.
"
e92666d473713366599c8a19901f619ad600e848,OpenSlides/OpenSlides,"Merge pull request #1442 from normanjaeckel/TornadoAutoupdate

Rework of tornado autoupdate functionality"
f01fe5a8942861ad1b87b0aecd076bddd190e444,OpenSlides/OpenSlides,"removed unused imports from participant and did some pep8 changes
"
413abf2b9a573d25d4752dbb7c0799a89d633a06,OpenSlides/OpenSlides,"Merge pull request #1408 from normanjaeckel/DjangoRESTFramework-Work

Refactored REST api in agenda, core and users app."
aa7fd9e7645b01c73a11f4dfca75a9e73b5ca06f,PhantomBot/PhantomBot,"- Cleanup in core events

**Main Changes:**
- Moved some events to better locations, also switched to our new PubSub
event classes.

**ScriptApi.java:**
- Added a method to check if events are registered.

**init.js:**
- Core event listeners are now loaded first.
- Added a check to make sure an event exists before adding it as a hook.
"
4ba71308848baa34697bf990975df9a595b6c00a,RetroShare/RetroShare,"

Major Rewrite of the New Cache Based Services.
	- Defined a generalised Group/Msg retrieval interface (RsTokenService), which is defined in rsidentity.h
	- Defined MetaData for both Groups and Messages (not finalised yet).
	- Implemented a general Data Backend for Local Testing of interface - inside p3gxsservice.cc
	- Modified services to use this temporary backend.
	- Added Wire and ForumV2 services.

Still lots to do:
	- work out request options.
	- finalise metadata.
	- group permissions.
	- identities



git-svn-id: 0f25c6ddeac99a4730a1b38b855f701458e5ee60@5219 b45a01b8-16f6-495d-af2f-9b41ad6348cc
"
0b736d9f281157f1e4877cd209d830abd96d5785,RetroShare/RetroShare,"moved collapse/expand to correct place

git-svn-id: 311b3c6b8f984d55ae55c3790df9fb4ccd5216ab@2086 b45a01b8-16f6-495d-af2f-9b41ad6348cc
"
92969c2f58e4aec4786c5cda2c7761461b8e66ea,RetroShare/RetroShare,"
Improvements to GXS services.
 * Added serialiser for wiki items (actual data to be finalised).
 * Added wiki and fixed id services to be run properly.
 * Disabled dummyData for ids.
 * Fixed some bugs in Id serialiser.
 * Added missing fns in p3wiki



git-svn-id: a71c37ab87913b235579277a1ea632c261a4e1cc@5748 b45a01b8-16f6-495d-af2f-9b41ad6348cc
"
d13526facde70c9ee27f589b39c51f3f0526f27a,RetroShare/RetroShare,"added a new method rs_malloc that checks its arguments and prints a stacktrace on error/weird call. Changed the code everywhere to use this instead of malloc. Removed some mallocs and replaced with RsTemporaryMemory
"
24a3fb58d4b0ccd9f8c0b878186fac36584456d8,RetroShare/RetroShare,"Improved plugin system:
- the user is asked at start wether to load or deny unregistered plugins, but can make it mind later in config->plugins
- added API and SVN numbers into required external plugin symbols
- user-defined plugin rules are dropped when a plugin changes (hash changes) or when the main executable changes.
- added new status flags (Plugin denied, missing API/SVN numbers)
- modified saveList()/loadList() to allow saving a list of rejected plugins as well.
- added methods in notifyBase and inherited classes to ask for plugin confirmation.

- adapted VOIP plugin to follow these new rules (API+SVN numbers). Other plugins should be adapted as well by addign the 
 missing symbols (RETROSHARE_PLUGIN_api and RETROSHARE_PLUGIN_revision).



git-svn-id: 311b3c6b8f984d55ae55c3790df9fb4ccd5216ab@5529 b45a01b8-16f6-495d-af2f-9b41ad6348cc
"
199026e9aef38b9d3e0d10bbee4f0dd7b5e4e05a,SatelliteQE/robottelo,"Make user authentication internal by default

Do not generate non-existent LDAP server entries each time a new user is
created. Instead, use the internal authentication service, which is highly
likely to exist and be working.
"
0d6b9eb0405501e35835055da09523fc7b10345e,SatelliteQE/robottelo,"Clean up import statements
"
ee30e38050bf39de6c7c6af4f2d13b1eda82e140,SatelliteQE/robottelo,"Merge pull request #2585 from oshtaier/Issue_2274

Re-implement compute resource functionality for UI + cover BZ1223405"
9de947cd33b94febb9a088c22214f80f7946757b,SatelliteQE/robottelo,"Merge pull request #1441 from Ichimonji10/simplify-factory

Drop custom error checking code"
2fd4bef1ffebd7b62129aebcc60b6b6294af4e64,SatelliteQE/robottelo,"Performance improvement in WebUI for delete-like operations
"
ae295d7169c44ad545ff51d02ee1e0be93c67f8b,SatelliteQE/robottelo,"Override DDT data decorator

Add main.smoke to sample properties file
Add tests for robottelo.data decorator
Refactor all ddt.data decorator imports to robottelo.data
Organize alphabetically imports for some modules
"
2b72bb11f8f6268addcc626593e5004e8d8e4dd7,SatelliteQE/robottelo,"Merge pull request #1227 from Ichimonji10/request-data

When making API calls, provide ""data"" not ""params"""
71fd4177ab0f0ec98a02fe88160f5e6b895c8380,SciCatProject/catanie,"Merge branch 'develop' of gitlab.psi.ch:MELANIE/catanie into feature/cleanUp-rxjs
"
ccdfa7b7a3e7107b056f10c3a73b0b1259acdf24,SonarSource/sonarqube,"SONAR-5531 - Optimized refresh while mass indexing
"
120dc80f1074dbd533e05b33d5a7fd797702e701,SonarSource/sonarqube,"improve code quality
"
8587775dbe02b9a92f592e375d1faf28285572b6,SonarSource/sonarqube,"SONAR-6864 Rename WS batch/* to scanner/*
"
710344da59f61f395593782deb1c342d473da5bf,SonarSource/sonarqube,"SONAR-7980 Rewrite the ""Licenses"" page (#1207)

"
7a894686606925522e1a6d8b01c7c2fc092200c9,SonarSource/sonarqube,"SONAR-10598 Display warning page when detecting login update during authentication

* SONAR-10598 Refactor UserIdentityAuthenticator#authenticate to use a ParameterObject
* SONAR-10598 Redirect user when login is updated and update personal org
* SONAR-10598 Improve update of personal organization key
* SONAR-10598 Improve IT stability related to generation of provider ID
* SONAR-10598 Add USERS#ORGANIZATION_UUID
* SONAR-10598 Replace usage of Organizaions#UserId by Users#OrganizationUuid
"
556bb9e43c9b5119c8830bf4abcffef8c56256a3,SonarSource/sonarqube,"Move WorkDuration API to internal package as it will be refactored is 4.3
"
1296af33c362310fde9d7e6e4357d5a758a323c4,SonarSource/sonarqube,"SONAR-3714 Refactor the bulk change service in order to inject Actions instead of having it hardcoded
"
4bfd79e52cea465f226c78abb253c2073f4c1d4c,SonarSource/sonarqube,"SONAR-1663 include the dbcleaner plugin + move all purges in this plugin
"
846b39889a0aee7ca7328501432e219dbd168a4f,SonarSource/sonarqube,"Remove unused transitive dependencies of blueprints
"
b73397a160c4f84702c659bb596394fff9d7fe98,SonarSource/sonarqube,"SONAR-4112 Remove the unused/deprecated metrics ""Complexity/paragraph"" and ""Paragraph""
"
359547e4d6ca79786d9df319f85c17d20806cad4,SonarSource/sonarqube,"SONAR-5886 improve the creation date facet on the issues page
"
75a272858eacced1247db1328978bbc75d253d30,SonarSource/sonarqube,"SONAR-7391 Drop unused DB index DUPLICATIONS_INDEX_PSID
"
71fec25c4056c1dcfe75769c2041b1d56a89a2e5,SonarSource/sonarqube,"SONAR-9784 rewrite projects management page
"
ca4f0a47bc7e60bbcc74f05e495cad95eaee7a09,SonarSource/sonarqube,"SONAR-5338 rename actions ""plan"" to ""covered_files"" and ""testable"" to ""test_cases"" in /api/tests WS
"
b1f464e19bcb76f753fbc819aaa2a02f8c8f1c0f,Stellarium/stellarium,Merge from trunk r7485; improved label placement for proportional nebulae.
1ef043aee7bf96a42cd0bc5db639dcd9d0cf6404,Stellarium/stellarium,move satellites plugin keybinding to json file
cf166211ff6edeecce08b7fc17f4462b41d9bdd9,Stellarium/stellarium,Removed unnecessary OpenGL includes.
aa58e39a04e51f89be4d11b8fdf647380ef693e6,Stellarium/stellarium,"Converted GridLinesMgr to use properties.  Refactored StelGui to use 
signals/slots for updating the UI based on GridLinesMgr.
"
d91d20909ce418a38cd60c32112bd3e46cac17c0,Stellarium/stellarium,refactor: MovementMgr -> StelMovementMgr
06efe8d46d4de9d44524f4841a841144968c46a4,Stellarium/stellarium,refactor: AudioMgr -> StelAudioMgr
361137c9ca6c0de1f02cdc5771e57426c8cbc855,Stellarium/stellarium,"New optional experimental feature: Percentage-closer soft shadows (PCSS) - this should make shadows sharper the closer they are to the object that casts them, and more faded further away. It still has some bugs.
Improved PCF filtering by incorporating frustum size information to scale the offsets. This should make the filter independent of frustum parameters.
Changed the GUI to only update relevant controls when Scenery3dMgr changes instead of all controls
Tried to simplify shaders a bit by using arrays for shadow data (matrices, textures, varyings), but Intel seems to have serious problems with that approach, so I left that out."
7857f896b88bae9d91b73873a8a6fcd92b6b2785,Stellarium/stellarium,"Refactored the ""cubemap shadow mode"" into a global option to use only a single shadow cascade (also in perspective mode), and an option to use the ""full cubemap shadows"", i.e. separate calculation for each cube side."
2111354d4e4f2c43baf939ae2f4453d931c4b2d1,TheBastionBot/Bastion,"Improved how database is handled inside events
"
1c7a3c2d6ebd3018f44131f51655d771dd1ea8e2,XavCC/xavcc.github.io,"moving all src files to assets
"
3638385b586fa3854d9cb7b24bd005d4ef0f2665,alchemy-fr/Phraseanet,"Move minify to dedicated controller, www directory cleanup
"
c40804287a6e01e821a4653a6311caf6a1a1ac41,alchemy-fr/Phraseanet,"Update refactor

Fix indent

Conflicts:

	lib/Alchemy/Phrasea/Application/Root.php
	templates/web/common/dialog_export.html.twig
"
530d9d6aa18e7b738fe550815d1f6e5429a79122,angular/router-builds,"e6c81d2 Revert ""refactor(platform-browser): move platform-browser/animations to animations/browser (#15043)""
"
20970a6b3d306aaac32642d90769001fbe9cad41,angular/router-builds,"cbbad1b refactor(ivy): pre-factor: set explicit type parameters for ModuleWithProviders (#25970)
"
c675d3748abac038d9b9f0817b40c3c9218c8a5a,angular/router-builds,"25a6da2 refactor(compiler-cli): refactor compiler host parameters (#13147)
"
f2967ff79f9a56a5cb46a37d4c7e0d9249a3fe3b,angular/router-builds,"505ae75 docs(aio): update deprecated Http reference to HttpClientModule, remove Http reference because another context is used (#21984)
"
3af6c1a17cc3698745ab28dd83424f93e7092a0e,angular/router-builds,"0f21a58 cleanup(router): add a test verifying than NavigationEnd is not emitted after NavigationCancel
"
9de2011a569ad8fd7fc9d0c64aa60de4e100ed4e,angular/router-builds,"e5c4e58 fix(upgrade): fix/improve support for lifecycle hooks (#13020)
"
c9cd268664b483c7062f307d49db3263ab8b0270,angular/router-builds,"e64b1e9 fix(compiler): make `.ngsummary.json` files idempotent (#21448)
"
ecdf47cbe1b61d01f48a416ea56049340995082c,angular/router-builds,"37e6da6 refactor(router): clean up naming
"
1b7214905ddd2557e3a3bd98cb17d2a53b55d110,angular/router-builds,"ff71eff refactor(core): use flags in `Renderer2.setStyle` instead of booleans (#15045)
"
4565f71c6cfd9c68ca2c32e19152210358fa3029,angular/router-builds,"dcf64a0 fix(bazel): improve error message for missing assets (#22096)
"
d950c63c8050bafcb33fabd6b05044a65739c461,ant-design/ant-design,"improve calendar
"
b95b3b33862efe0466bf53545b49f58802a561fc,ant-design/ant-design,"rename some icons
"
df1e399db90d94db8ad2bba62aa4b42a2100b5b3,apache/jackrabbit-oak,"OAK-6318 Refactor oak.spi.security into a separate module/bundle
 - rollbackl of r1810297



git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1810356 13f79535-47bb-0310-9956-ffa450edef68
"
2dccf6ae7fce56343b14142f24555504f148299a,apache/jackrabbit-oak,"OAK-458: Define upgrade from Jackrabbit2.x to Jackrabbit OAK

Include property index updates in the upgrade.
Optimize the hook organization to avoid extra tree traversals

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1548089 13f79535-47bb-0310-9956-ffa450edef68
"
75e284becbab6d141ffa075e781b706c03cb75f7,apache/jackrabbit-oak,"OAK-798: Review / refactor TreeImpl and related classes
Replace usage of Tree.getChildOrNull with Tree.getChild

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1478209 13f79535-47bb-0310-9956-ffa450edef68
"
af641830643ec39b759fa187d5d5277348b73412,apache/jackrabbit-oak,"OAK-813: Removing a Node if the parent is not accessible
replace usages of NodeBuilder.removeChildNode with NodeBuilder.remove and remove deprecated removeChildNode method

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1485747 13f79535-47bb-0310-9956-ffa450edef68
"
4def476d78edf95dfe525f388eb952934b054051,apache/jackrabbit-oak,"OAK-1080: MongoMK: improved concurrency

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1537423 13f79535-47bb-0310-9956-ffa450edef68
"
f8f2a509590a35e41c6fdd987ab0c1c7e21ac20f,apache/jackrabbit-oak,"OAK-161: Refactor Tree#getChildStatus
comment

git-svn-id: 67138be12999c61558c3dd34328380c8e4523e73@1355874 13f79535-47bb-0310-9956-ffa450edef68
"
1230a98d5b035c826577c904cec7daf92a903063,bkimminich/juice-shop,"Merge pull request #41 from bkimminich/develop

build optimizations"
3a9966d2463af22a6388f55179f33e268ccb384f,bkimminich/juice-shop,"v2.26.0 (#298)

* v2.26.0-SNAPSHOT

* Make config callback optional

* Show thumbnail in search results

* Replace theme in index.html on server start
(fixes #293)

* Delete __vulns.json
(idea has not seen any adoption)

* Increase file size for upload-size test
(to prevent occasional failure on some machines)

* Add unit tests
- for app.configuration of Twitter/Facebook URLs
- and for presence of cryptocurrency addresses

* Extend client side unit tests

* Add walkthrough on http://location-href.com to web links

* Handle $http promises inside services
as preparation for Angular 1.6 migration (see #294)

* Adopt User API tests to new promise handling

* Fix authentication in User API tests

* Ignore node security advisory 154 for sanitize-html
(https://nodesecurity.io/advisories/154)

* New Crowdin translations (#286)

* Romanian
* Spanish
* Burmese

* Add Burmese language to dropdown :mm:

* Ctf improvments (#295)

* Added clipboard button

* Implemented replay notification of solved challenges.

(cherry picked from commit e72245a)

* Made the repeat notification more obvious.

(cherry picked from commit a62656f)

* Made the copy button text translatable

* Fixing coding style to follow standard guidelines

* Made the check if the challange was solved more obvious

* Added e2e test for the challange repeat functionality

* Added option to show/ hide the ctf flags in the notifications

* Refactored code to follow standard code style

* Fixed unexpected request in client side test

* Diabled challange repeat functionality if ctf is disabled

* Remove unnecessary repetition of config properties

* Make notification-repeat test aware of CTF mode

* Update documentation regarding CTF extensions

* Beautify UI for CTF extension
- smaller copy-button
- moved repeat-info to a  tooltip

* Add Testhexen blog post

* Pull out media links into REFERENCES.md

* Reorder README sections

* Changed Docker Baseimage to node-alpine

* Add `git` to Docker image
(+17MB, required for some Bower dependencies)

* Install `git` before switching to `WORKDIR`

* Run `apk update` before attempting to add `git`

* Fix README/REFERENCES wording and syntax

* New Crowdin translations (#296)

* New translations en.json (Romanian)

* New translations en.json (Romanian)

* New translations en.json (Romanian)

* New translations en.json (Romanian)

* New translations en.json (Spanish)

* New translations en.json (Burmese)

* New translations en.json (Burmese)

* New translations en.json (Burmese)

* New translations en.json (Burmese)

* New translations en.json (Romanian)

* New translations en.json (Burmese)

* New translations en.json (Burmese)

* New translations en.json (Burmese)

* New translations en.json (Burmese)

* New translations en.json (Burmese)

* New translations en.json (Japanese)

* New translations en.json (Czech)

* New translations en.json (Dutch)

* New translations en.json (Romanian)

* New translations en.json (Hungarian)

* New translations en.json (Danish)

* New translations en.json (Indonesian)

* New translations en.json (Turkish)

* New translations en.json (Spanish)

* New translations en.json (Burmese)

* New translations en.json (French)

* New translations en.json (Norwegian)

* New translations en.json (German)

* New translations en.json (Arabic)

* New translations en.json (Swedish)

* New translations en.json (Portuguese)

* New translations en.json (Klingon)

* New translations en.json (Russian)

* New translations en.json (Italian)

* New translations en.json (Estonian)

* New translations en.json (Greek)

* New translations en.json (Japanese)

* New translations en.json (Lithuanian)

* New translations en.json (Latvian)

* New translations en.json (Finnish)

* New translations en.json (Polish)

* New translations en.json (Chinese Simplified)

* New translations en.json (Czech)

* New translations en.json (Dutch)

* New translations en.json (Romanian)

* New translations en.json (Hungarian)

* New translations en.json (Danish)

* New translations en.json (Indonesian)

* New translations en.json (Burmese)

* New translations en.json (Spanish)

* New translations en.json (Turkish)

* New translations en.json (Norwegian)

* New translations en.json (German)

* New translations en.json (French)

* New translations en.json (Arabic)

* New translations en.json (Swedish)

* New translations en.json (Portuguese)

* New translations en.json (Klingon)

* New translations en.json (Russian)

* New translations en.json (Italian)

* New translations en.json (Estonian)

* New translations en.json (Greek)

* New translations en.json (Japanese)

* New translations en.json (Lithuanian)

* New translations en.json (Latvian)

* New translations en.json (Finnish)

* New translations en.json (Polish)

* New translations en.json (Chinese Simplified)

* Rebase with develop

* New translations en.json (German)

* New translations en.json (German)

* New translations en.json (Turkish)

* Update contributors list

* v2.26.0

* Add language flags for non-english links
"
89887a87cafa6a64d2f3a63f61d5ea0e721fd4fd,cBioPortal/cbioportal,"javascript clustering solution for oncoprint heatmap

using 1-spearman correl. instead of 1-pearson for distance metric

different color in progress bar for computation steps
"
5f47d7ec89e4e8b0dc35d1653f1eec7263f08f68,cBioPortal/cbioportal,"some more changes and cleanup
"
3010082c6d8815b6dd48e6e2e34de4762a827225,cBioPortal/cbioportal,"merged with client-side-refactoring
"
db7dff779a2dbb8d8dced52faf57c1ddd6448532,cBioPortal/cbioportal,"renamed the PDB chain panel label,
added an image with a tooltip next to the label
"
05bc7c27fed903bb22399260ec1e16a73c301ff6,cBioPortal/cbioportal,"More improvements and implementation

(1) Improve look of track dots
(2) Switch legend from table layout to svg layout, and
implement downloading legend as svg, thus completing downloading
oncoprint as svg
(3) Select sort direction from dropdown menu
(4) Change label view dimension calculation
(5) Fix potential infinite loop in slider by checking if change triggered
by user or by code
(6) Shorten labels if necessary and add tooltip to label view
"
031f0c87e782cf51b7a7d9e209b3beb3272367ba,cBioPortal/cbioportal,"Move Virtual Study models to legacy code
"
955e5b03c912e87ed67c370b67ddc399d5769888,cBioPortal/cbioportal,"echo feature, stable cancer ID and code clean up
"
fa69c896adebb66e5d074ec37d599840c60c7d0c,cBioPortal/cbioportal,"Refactoring to accomplish three main goals:  1.  web API is now backward compatible;  2.  cancer study stable IDs are exposed (but, not internal cancer study IDs); and 3. all unit tests now pass
"
cf61fb1279599740ada674200a4ba8694cb07a58,cBioPortal/cbioportal,"Merge branch 'rc' into clean-up-data-handling-in-datamanager

Conflicts:
	portal/src/main/webapp/js/src/oncoprint/webgl/setup.js
"
cbd9effe42679f9f505fc7589e16ca5751f7dbdb,cBioPortal/cbioportal,Merge branch 'rc' into database-cleanup
0b999b52dd1966018c2f8690ae099496d89edb3e,cBioPortal/cbioportal,"improved the pdb panel's expand/collapse behavior
"
58e54fd6d819aaf96ebb0c456ee4d98670168aea,ebi-uniprot/QuickGOBE,"refactor  controller's responsibility to create specific requests, and create one type of request only. it is then the responsibility of the framework to deduce what the request means, e.g., join/simple/rest query.
"
858a3607832756763673b789d0d98d728d6dd29e,fitpay/fitpay-ios-sdk,"Removing deprecated functions
"
e0695947890cb3af27b888dca708588080bab91c,fitpay/fitpay-ios-sdk,"Cleanup

- enabling code coverage
- moved FitpaySDKConfiguration and RestAPIConstants under FitpaySDK
- deleting FitpaySDKDemo
- deleting FitpaySDKAuthenticationTests
- formatted test files (still a little more to do)
  - blank lines due to Xcode auto-formatting
- Updated TransactionTests filename to match object
"
f72c8ee5d22fdde117fc1d479931343543a11d95,fujicoin/electrum-fjc,"move is_valid from wallet class to bitcoin.py
"
857eb4ac1d8e1ee24b48245ecaf59edcf096cbfa,fujicoin/electrum-fjc,"Remove unused imports. Explicitly import a few deep imports.
"
2f2e468d0a801be4b2793228ec92129966918b8d,fujicoin/electrum-fjc,"SocketPipe shouldn't close the socket.

This is a layering violation - the SocketPipe doesn't own
the socket and provides no other way to close the socket, leading
to unnecessary complexity like that in interface.py.

I looked at deamon.py and NetworkProxy - the two other users,
and they don't close the sockets explicitly, just let them be
garbage collected.
"
3c1f856ddf9ea9452ac6fdb5a0e3dc3eaaee38e3,goreleaser/goreleaser,"fix: improve homebrew formula

This commit improves the homebrew formula pipeline step to support
more customizations.
"
b3fa5cfc192c17fa3cafdcd99d72203c37f3ac99,goreleaser/goreleaser,"renamed from binary_name to binary
"
2ce8589587480d2a47e7513b6e28c374af3a18d9,goreleaser/goreleaser,"improvements
"
bbaabd7c3723311227ada4876d592b3e2722d81c,goreleaser/goreleaser,"improved logging
"
27a9abc73be1cf9de8a1c5ef740afbd90f60006b,goreleaser/goreleaser,"refactor: Introduced name per artifactory instance for identification

This introduced a new property per Artifactory instance: Name
With this name we are able to

a) identify a instance
b) use the name to identify the secret (instead of a number)
c) use this name for logging
"
47c73687fa7ebbba4bd118c50a43df3b08d9ff82,hawkrives/gobbldygook,"simplify the original html
"
3ee0748f3e432c32a4c917e46c7f7f5339e4a1b8,hawkrives/gobbldygook,"Revise npm run lint
"
fa3daba4ff0fd15eba4f765500dfb160548dbd79,hep-gc/cloudscheduler,"Adding in new slot columns are reorganization
"
282b215eafd1b9808e4ad213fc112c664f5dcc96,hhkaos/awesome-arcgis,"Improving landing page
"
5e56944610a26fffe7ec43006d681dfb7a8c69aa,hhkaos/awesome-arcgis,"Refactoring and cleaning some pages
"
6bbc2e4396eee7e81bba4d3114ccc0b74bc0ab8a,jodogne/OrthancMirror,"refactoring
"
59b50d46d75ec4faf2b4c0fe0bf87e237f1672b1,jodogne/OrthancMirror,"getting rid of static dcmtk for debian
"
ce860e187c940662f81579a69cd2197c7678a384,kubernetes/kubernetes,"Merge pull request #44408 from ncdc/controller-run-consistency

Automatic merge from submit-queue

Make controller Run methods consistent

- startup/shutdown logging
- wait for cache sync logging
- defer utilruntime.HandleCrash()
- wait for stop channel before exiting

Please review for accuracy and consistency.

cc @deads2k @wojtek-t @smarterclayton @sttts @mikedanese @liggitt @rrati @derekwaynecarr"
3afefae02a0588654693de27ef5387c1f9ab5f01,kubernetes/kubernetes,"Merge pull request #38676 from caesarxuchao/sync-gc

Automatic merge from submit-queue (batch tested with PRs 38676, 41765, 42103, 41833, 41702)

Add synchronous garbage collection

Fix https://github.com/kubernetes/kubernetes/issues/29891.

Split into five commits:
1. generated: don't need review
2. API: got reviewed in #38678, i addressed @lavalamp's comments there.
3. registry changes: @nikhiljindal could you help take a look?
4. gc changes: reviewed by @deads2k in #38679. It needs another pass.
5. tests: @lavalamp @deads2k could take a look?

TODO:
- [ ] Update doc. Note that the existing doc has been refactored in https://github.com/kubernetes/kubernetes.github.io/pull/2488.
- [ ] add an admission controller to check if a user can set OwnerReference.BlockOwnerDeletion
- [ ] https://github.com/kubernetes/kubernetes/pull/38676#discussion_r103277274
- [ ] split the unit tests garbagecollector_test.go according to the components tested.
- [ ] try if it's practically safe to use the cached object status in attempToDeleteItem(), after synchronous GC feature is stable. (Also see https://github.com/kubernetes/kubernetes/pull/38676#discussion_r103056971)
- [ ] add blockOwnerDeletion for rs adoption https://github.com/kubernetes/kubernetes/pull/38679#discussion_r93817284
- [ ] https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/38676/pull-kubernetes-e2e-gce-etcd3/20101/ (improve the log message)

```release-note
Added foreground garbage collection: the owner object will not be deleted until all its dependents are deleted by the garbage collector. Please checkout the [user doc](https://kubernetes.io/docs/concepts/abstractions/controllers/garbage-collection/) for details.
deleteOptions.orphanDependents is going to be deprecated in 1.7. Please use deleteOptions.propagationPolicy instead.
```"
592c39bccc78dcd43309165632d6fafec475c984,kubernetes/kubernetes,"Merge pull request #62541 from filbranden/cgroupname1

Automatic merge from submit-queue. If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Use a []string for CgroupName, which is a more accurate internal representation

**What this PR does / why we need it**:

This is purely a refactoring and should bring no essential change in behavior.

It does clarify the cgroup handling code quite a bit.

It is preparation for further changes we might want to do in the cgroup hierarchy. (But it's useful on its own, so even if we don't do any, it should still be considered.)

**Special notes for your reviewer**:

The slice of strings more precisely captures the hierarchic nature of the cgroup paths we use to represent pods and their groupings.

It also ensures we're reducing the chances of passing an incorrect path format to a cgroup driver that requires a different path naming, since now explicit conversions are always needed.

The new constructor `NewCgroupName` starts from an existing `CgroupName`, which enforces a hierarchy where a root is always needed. It also performs checking on the component names to ensure invalid characters (""/"" and ""_"") are not in use.

A `RootCgroupName` for the top of the cgroup hierarchy tree is introduced.

This refactor results in a net reduction of around 30 lines of code,
mainly with the demise of ConvertCgroupNameToSystemd which had fairly
complicated logic in it and was doing just too many things.

There's a small TODO in a helper `updateSystemdCgroupInfo` that was introduced to make this commit possible. That logic really belongs in libcontainer, I'm planning to send a PR there to include it there. (The API already takes a field with that information, only that field is only processed in cgroupfs and not systemd driver, we should fix that.)

Tested: By running the e2e-node tests on both Ubuntu 16.04 (with cgroupfs driver) and CentOS 7 (with systemd driver.)

**NOTE**: I only tested this with dockershim, we should double-check that this works with the CRI endpoints too, both in cgroupfs and systemd modes.

/assign @derekwaynecarr 
/assign @dashpole 
/assign @Random-Liu 

**Release note**:

```release-note
NONE
```"
b43ccd6e2b2baae70b68c9a0c52c6d1d73c6340c,kubernetes/kubernetes,"Merge pull request #23506 from Random-Liu/new-docker-client

Automatic merge from submit-queue

Kubelet: Start using the official docker engine-api

For #23563.

This is the **first step** in the roadmap of switching to docker [engine-api](https://github.com/docker/engine-api).
In this PR, I keep the old `DockerInterface` and implement it with the new engine-api.
With this approach, we could switch to engine-api with minimum change, so that we could:
* Test the engine-api without huge refactoring.
* Send following PRs to refactor functions in `DockerInterface` separately so as to avoid a huge change in one PR.

I've tested this PR locally, it passed all the node conformance test:
```
make test_e2e_node

Ran 19 of 19 Specs in 823.395 seconds
SUCCESS! -- 19 Passed | 0 Failed | 0 Pending | 0 Skipped PASS

Ginkgo ran 1 suite in 13m49.429979585s
Test Suite Passed
```
And it also passed the jenkins gce e2e test:
```
go run hack/e2e.go -test -v --test_args=""--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]""

Ran 161 of 268 Specs in 4570.214 seconds
SUCCESS! -- 161 Passed | 0 Failed | 0 Pending | 107 Skipped PASS

Ginkgo ran 1 suite in 1h16m16.325934558s
Test Suite Passed
2016/03/25 15:12:42 e2e.go:196: Step 'Ginkgo tests' finished in 1h16m18.918754301s
```

I'm writing the design document, and will post the switching roadmap in an umbrella issue soon.

@kubernetes/sig-node "
886014b1a35c1bdf0fca26fe4da0ba84dc3d5c39,kubernetes/kubernetes,"kubectl: fix sort logic for logs

Use a separate sorting algorithm for kubectl logs that sorts from older
to newer instead of the other way that ActivePods is doing.
"
fe135fc2517599f1536cacbb1f43c81e1ff530a1,kubernetes/kubernetes,"Merge pull request #24630 from euank/redundant-created

Automatic merge from submit-queue

kubelet: Remove redundant `Container.Created`

As far as I can tell, this has been supplanted by a) the `DockerJSON.CreatedAt` field and b) the
`ContainerStatus.CreatedAt`, where the first is used for creating the
second.

The `.Created` field was only written to as far as I can see.

cc @yifan-gu & @Random-Liu 

Is there any reason we might want to keep this around? "
33fb6170f9dadc31eb9da33ffb15eb2fc7838a9c,kubernetes/kubernetes,"Use TYPE instead of RESOURCE in help string

For commands in kubectl, use TYPE in help string.
"
e06795533f53aabd66b06ff179c7b57102970859,kubernetes/kubernetes,"Working on fixing #43716.
This will create the necessary certificates.
On GCE is will upload those certificates to Metadata.
They are then pulled down on to the kube-apiserver.
They are written to the /etc/src/kubernetes/pki directory.
Finally they are loaded vi the appropriate command line flags.
The requestheader-client-ca-file can be seen by running the following:-
kubectl get ConfigMap extension-apiserver-authentication
--namespace=kube-system -o yaml
Minor bug fixes.
Made sure AGGR_MASTER_NAME is set up in all configs.
Clean up variable names.
Added additional requestheader configuration parameters.
Added check so that if there is no Aggregator CA contents we won't start
the aggregator with the relevant flags.
"
6b5d82b5128a4a05ad8cee701432ba8bddfa5cf0,kubernetes/kubernetes,"Merge pull request #37505 from k82cn/use_controller_inf

Automatic merge from submit-queue (batch tested with PRs 39807, 37505, 39844, 39525, 39109)

Made cache.Controller to be interface.

**What this PR does / why we need it**:

#37504"
f8f57d8959d162bb2da453d2e5285ab200bc1273,kubernetes/kubernetes,"Use separate client for node status loop
"
9e18c29e9f5d8489029a78921ca6d69c07455b16,kubernetes/kubernetes,"Make fluentd-gcp collect etcd's logs on the master.
"
85ee11afc01ff418fc9500544ba21515e83a2eed,kubernetes/kubernetes,"Merge pull request #12966 from mikedanese/godep-cleanup

remove unused godeps"
f66ca25d9f3e0d15433e60f97154857579e39489,kubernetes/kubernetes,"Rename AccessMode to PersistentVolumeAccessMode
"
61673c4b39606fc7e1de9a3cdd4ff5aaaebc0f31,kubernetes/kubernetes,"make kubectl get generic with respect to objects
"
e27d534b87253f2c7ebb60fd6274ff864bc98e9c,kubernetes/kubernetes,"Merge pull request #4262 from vishh/api_resources

Rename ResourceRequirementSpec to ResourceRequirements."
2700871b049d5498167671cea6de8317099ad406,kubernetes/kubernetes,"Merge pull request #5013 from smarterclayton/misc_fixup

Small cleanups to a number of client behaviors"
d68c738fcf73fc47a0814d78b1eccf2b2453eca0,kubernetes/kubernetes,"Merge pull request #4575 from nikhiljindal/versionedFieldSelector

Adding converter functions to convert field label selectors to internal version before matching"
42d8d4ca8888cc91d639b0a0decc2195bdd2baf1,kubernetes/kubernetes,"Merge pull request #40948 from freehan/cri-hostport

Automatic merge from submit-queue (batch tested with PRs 40873, 40948, 39580, 41065, 40815)

[CRI] Enable Hostport Feature for Dockershim

Commits:
1. Refactor common hostport util logics and add more tests

2. Add HostportManager which can ADD/DEL hostports instead of a complete sync.

3. Add Interface for retreiving portMappings information of a pod in Network Host interface. 
Implement GetPodPortMappings interface in dockerService. 

4. Teach kubenet to use HostportManager"
5b423dd458c9a592b3419feaeb4d2d385aa1c75f,kubernetes/kubernetes,"rkt: Refactor version check with api-service.

Also mocked systemd interfaces for testing purpose.
"
aa13f3fa2a884042dbccb85bc93f8b2958ccf64c,kubernetes/kubernetes,"Merge pull request #59289 from rmmh/semantic-check

Automatic merge from submit-queue (batch tested with PRs 53689, 56880, 55856, 59289, 60249). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

 Add test/typecheck, a fast typecheck for all build platforms.

Add test/typecheck, a fast typecheck for all build platforms.

Most of the time spent compiling is spent optimizing and linking
binary code. Most errors occur at the syntax or semantic (type) layers.
Go's compiler is importable as a normal package, so we can do fast
syntax and type checking for the 10 platforms we build on.

This currently takes ~6 minutes of CPU time (parallelized).

This makes presubmit cross builds superfluous, since it should catch
most cross-build breaks (generally Unix and 64-bit assumptions).

Example output:

```$ time go run test/typecheck/main.go
type-checking:  linux/amd64, windows/386, darwin/amd64, linux/arm, 
    linux/386, windows/amd64, linux/arm64, linux/ppc64le, linux/s390x, darwin/386
ERROR(windows/amd64) pkg/proxy/ipvs/proxier.go:1708:27: ENXIO not declared by package unix
ERROR(windows/386) pkg/proxy/ipvs/proxier.go:1708:27: ENXIO not declared by package unix

real    0m45.083s
user    6m15.504s
sys     1m14.000s
```


```release-note
NONE
```"
7585c46bc18913232a72d83e2f5a02a5a1f65c1b,kubernetes/kubernetes,"Merge pull request #41192 from deads2k/agg-06-informer

Automatic merge from submit-queue (batch tested with PRs 41319, 41192)

Split informers by internal and external to allow inclusion in client-go

client-go doesn't have any internal clients, so informers which require internal clients can never be included in it.  This splits the informer generation into internal and external so we can safely include them.

@kubernetes/sig-api-machinery-misc @ncdc"
a6b0410f83b124578412be35bdf0e7a0e1b27c24,kubernetes/kubernetes,"Automated rename from NodeConfiguration to JoinConfiguration
"
dd452461504ca373ca59dde2e667c50ae984e6fa,kubernetes/kubernetes,"Merge pull request #3587 from dchen1107/image

Clean up Kubernetes PullPolicy"
c2874941620c264813b6bfa42913f95fd0cc2317,kubernetes/kubernetes,"cleanup dead installer code
"
71e8c8eba43a0fade6e4edfc739b331ba3cc658a,kubernetes/kubernetes,"Fail on swap enabled and deprecate experimental-fail-swap-on flag

* Deprecate the old experimental-fail-swap-on
* Add a new flag fail-swap-on and set it to true

Before this change, we would not fail when swap is on. With this
change we fail for everyone when swap is on, unless they explicitly
set --fail-swap-on to false.
"
91b2f59bc66a0cc38d79a54db15d78cdc26d8acd,kubernetes/kubernetes,"Jenkins: Add configs for gke+trusty e2e test jobs

Additionally, merge kubernetes-e2e-trusty.yaml into kubernetes-e2e.yaml and
refactor the latter to serve all e2e jobs.
"
6399854240d78efc4feb790df45b9f79e13f60c7,kubernetes/kubernetes,"Remove unused YAML tags and GetYAML/SetYAML methods

Unneeded after move to ghodss/yaml.
"
468c99ea24c76d7d207cea49bde5087051690517,kubernetes/kubernetes,"Merge pull request #70558 from seans3/custom-column-move

kubectl: move custom columns printers and flags"
2bb89428a75eb4f45f7e99e15efda077189c2a2d,kubernetes/kubernetes,"Merge pull request #30671 from mfanjie/e2e-extract-common-code

Automatic merge from submit-queue

extract common function in ingress and federation e2e to uil

Separate refactoring existing e2e code part from #29773
1. extract common constants, structs and functions in federated-service.go to federation-util.go, move existing util functions from federated-service.go to federation-util.go
2. extract common constants, structs and functions in ingress.go to ingress-util.go, move existing util functions from ingress.go to ingress-util.go

@quinton-hoole"
a666c1e731f5ded059cb093f5dbb87fcb884f838,kubernetes/kubernetes,"Merge pull request #7134 from yifan-gu/version

kubelet: Refactor GetDockerVersion()."
4379619a63fdb4a9e553350f802bdbbcd1086093,kubernetes/kubernetes,"Merge pull request #28939 from saad-ali/fixIssue28616ParallelMount

Automatic merge from submit-queue

Allow mounts to run in parallel for non-attachable volumes

This PR:
* Fixes https://github.com/kubernetes/kubernetes/issues/28616
  * Enables mount volume operations to run in parallel for non-attachable volume plugins.
  * Enables unmount volume operations to run in parallel for all volume plugins.
* Renames `GoRoutineMap` to `GoroutineMap`, resolving a long outstanding request from @thockin: `""Goroutine"" is a noun`
"
ff7934fdeea38bf6a56c61bbbe15721c4f45023e,kubernetes/kubernetes,"Merge pull request #55132 from caesarxuchao/webhook-move-shared-code

Automatic merge from submit-queue. If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Reorganize admission webhook code

ref: https://github.com/kubernetes/features/issues/492

* Moved client and kubeconfig related code to webhook/config;
* Moved the rule matcher to webhook/rules;
* Left TODOs saying we are going to move some other common utilities;
* Other code is moved to webhook/validation.


This is to prepare adding the mutating webhook. See https://github.com/kubernetes/kubernetes/pull/54892."
2c7ef5ad4fec58fbd9293da5c5d79b01834d2944,kubernetes/kubernetes,"Deduplicate RC/RS controller code.

The code was already 99% similar between RC and RS.
This is a wild idea to try to deduplicate the two controllers
in a type-safe manner without adding tons of boilerplate,
and without using code generation.

They are still separate resources. This is a refactor that isn't
intended to change any behavior.
"
36bb479c52071da24bd1af09124804ab9f10c446,kubernetes/kubernetes,"Merge pull request #5498 from ZJU-SEL/refactor-ubuntu

Ubuntu-distro: deprecate & merge ubuntu single node work to ubuntu cluster node stuff"
4da14c8a64d3acfa7febcb7ee3e44c4118800f2f,kubernetes/kubernetes,"Merge pull request #28204 from thockin/cleanup-third_party

Automatic merge from submit-queue

Cleanup third party (pt 2)

Move forked-and-hacked golang code to the forked/ directory.  Remove ast/build/parse code that is now in stdlib.  Remove unused shell2junit"
824f04f86af26b5bd23d8c3659cfe85d6a52e66c,kubernetes/kubernetes,"Simplify describe events table

The describe table for events is not easy to read and violates other
output guidelines. Change to use spaces (we don't use tabs in formal
output for tables). Remove columns that are not normally needed or
available on events.

Example for pods:

```
...
QoS Class:       BestEffort
Node-Selectors:  role=app
Tolerations:     <none>
Events:
  Type     Reason      Age                 From                         Message
  ----     ------      ----                ----                         -------
  Normal   Pulling     1h (x51 over 5h)    kubelet, origin-ci-ig-n-gj0x pulling image ""registry.svc.ci.openshift.org/experiment/commenter:latest""
  Normal   BackOff     8m (x1274 over 5h)  kubelet, origin-ci-ig-n-gj0x Back-off pulling image ""registry.svc.ci.openshift.org/experiment/commenter:latest""
  Warning  FailedSync  3m (x1359 over 5h)  kubelet, origin-ci-ig-n-gj0x Error syncing pod
```

Puts the type first (separate important from not), then reason (which is
the most impactful scanning field). Collapses first seen, last seen, and
times into a single field, since most of the time you care about the
last time the event happened, not the first time.
"
1f2262e6b0f5bab90fecba4bde5ee8cc6f65d0ae,kubernetes/kubernetes,"Move some kubelet constants to a common place.
"
1df4f8eaf6721d9f52fed35020c044c986755014,kubernetes/kubernetes,"Merge pull request #70028 from liggitt/move-extensions-types

move internal apps API types out of extensions package"
601173c2feb392cd43ef09f4fea59b3d7f56b302,kubernetes/kubernetes,"Merge pull request #26916 from caesarxuchao/podgc

Automatic merge from submit-queue

rename the gc for terminated pods to ""podgc""

to avoid name collision with the [generic garbage collector](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/garbagecollector/garbagecollector.go)"
1cb737fb970a65be2b3ff21cbf00196359b56cd3,kubernetes/kubernetes,"Merge pull request #41576 from deads2k/cli-04-remove-outputversion

Automatic merge from submit-queue (batch tested with PRs 41706, 39063, 41330, 41739, 41576)

deprecate and disconnect --output-version

For at least two releases, there haven't been multiple versions of API groups and we don't plan to support conversions in commands other than `kubectl convert`.  This disconnects the `--output-version` option to be consistent with conversion agnostic command before it becomes an issue.

@kubernetes/sig-cli-pr-reviews @fabianofranz @smarterclayton

```release-note
`--output-version` is ignored for all commands except `kubectl convert`.  This is consistent with the generic nature of `kubectl` CRUD commands and the previous removal of `--api-version`.  Specific versions can be specified in the resource field: `resource.version.group`, `jobs.v1.batch`.
```"
d05a96b3df3003ed26c385223a1d2dc3b6f27a96,kubernetes/kubernetes,"Merge pull request #58118 from roberthbailey/vagrant

Automatic merge from submit-queue. If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Remove the deprecated vagrant kube-up implementation

xref #49213

```release-note
NONE
```"
8326697055cd7de7317a62c0fded34e2c81a7d05,kubernetes/kubernetes,"rewrite all links to prs to k8s links
"
c5d755dbec6a44db7d2ff4c5c9a6127842c24a8d,kubernetes/kubernetes,"Refactor tests to match new versioned code structure
"
5f97413dd533ce13b13405f940661ae2738f7c25,kubernetes/kubernetes,"Merge pull request #1663 from smarterclayton/separate_pod_state_for_health_check

Refactor HealthCheck to take podUUID as its own argument"
0829f39b39cec9d3e72e8a9148ea66c22ea1803d,kubernetes/kubernetes,"Merge pull request #33164 from sttts/sttts-handler-chain-cleanup

Automatic merge from submit-queue

Cleanup genericapiserver handler chain

- move generic (api independent) handler filters to `pkg/genericapiserver/filters`
- entangle `genericapiserver.New()`
- unify signature of all handler filters (also those in `pkg/apiserver`)"
5ad494077ef3dd3a88b7c11ac0366e8367ff6f17,kubernetes/kubernetes,"Merge pull request #42914 from liggitt/fix-defaulting

Automatic merge from submit-queue (batch tested with PRs 44424, 44026, 43939, 44386, 42914)

remove defaulting from conversion path

follow up for #42764

* remove call to defaulting from conversion path (defaulting is a separate step from conversion)
* remove non-top-level-object defaulting registration (unused after conversion call is removed)
* generate missing top-level defaults for some api groups:
  * autoscaling/v2alpha1
  * policy/v1alpha1
  * policy/v1beta1
* register top-level defaults for some api groups that were missing them:
  * autoscaling/v2alpha1
  * settings/v1alpha1"
6f98cc9f6a971fec475d6144350d6ccebf94d978,kubernetes/kubernetes,"Merge pull request #55017 from nikhita/remove-tpr-extensions

Automatic merge from submit-queue (batch tested with PRs 51401, 54056, 54977, 55017, 55052). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

extensions: remove TPR remnants

The extensions group still had the TPR types + generated client. Having this in the codebase doesn't create any problems but would be good to clean up, especially since TPR access has been removed in 1.8.

**Release note**:

```release-note
NONE
```

/assign @sttts @deads2k"
e3f6f14bf0d1af6abbd20e48335089e9a681193f,kubernetes/kubernetes,"Merge pull request #43411 from csbell/test-timeouts-cleanup

Automatic merge from submit-queue

Unify test timeouts under a common name.

Some timeouts were too aggressive and since we've slowly been moving every controller to 5 minutes, consolidate everyone under ``federatedDefaultTestTimeout``. To aid in debugging some service-related issues, if a service cannot be deleted, we issue a kubectl describe on it prior to failing."
500b63aed6ba84b9f5fae3aa36a5736510c7c3fb,kubernetes/kubernetes,"Merge pull request #62726 from xiangpengzhao/kubeadm-json-name

Automatic merge from submit-queue (batch tested with PRs 62726, 60085, 62583). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

 Refactor kubeadm api validation.

**What this PR does / why we need it**:
This PR refactor kubeadm api validation to use field json name. When users get a validation error, they can easily know which field is invalid in their config files.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

**Special notes for your reviewer**:
@fabriziopandini I remember we mentioned this refactoring in some comment. I didn't see this change was done, so I send this PR to address this.

**Release note**:

```release-note
NONE
```"
70bd5fdfe55a999776d78cf65e38f11ab5637b57,kubernetes/kubernetes,"Refactor ControllerRefManager

To prepare for implementing ControllerRef across all controllers,
this pushes the common adopt/orphan logic into ControllerRefManager
so each controller doesn't have to duplicate it.

This also shares the adopt/orphan logic between Pods and ReplicaSets,
so it lives in only one place.
"
017fb6a81859fee5600de146628b94306d028889,kubernetes/kubernetes,"Merge pull request #8575 from yifan-gu/kube_refactor

Minor kubelet/rkt refactors"
3701c2ac0e4a69c6ba56526838c9c37ae5b9fe8b,kubernetes/kubernetes,"Add kubectl to build/release scripts.

Also Refactor build helpers into client/cross and server/linux.  This make it easier to tell users what to build to get just the client binaries.
"
968df828a00f76c5c8e77912b5a3a52dabc9ccca,kubernetes/kubernetes,"move getMaxVols function to predicates.go and change the params of NewMaxPDVolumeCountPredicate funcs

Signed-off-by: zhangjie <bfa81d9fbe55b5893bb5b19622e2756c23bc50c2@yeah.net>
"
44c166cd73d21e24ba8f1ca7130ad54d1218b891,kubernetes/kubernetes,"Merge pull request #60020 from roberthbailey/kubelet-flags

Automatic merge from submit-queue (batch tested with PRs 59310, 60424, 60308, 60436, 60020). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

 Move kubelet flag generation from the node to the client

Pass the kubelet flags through a new variable in kube-env (KUBELET_ARGS).

Remove vars from kube-env that were only used for kubelet flags.

This will make it simpler to gradually migrate to dynamic kubelet
config, because we can gradually replace flags with config file
options in a single place without worrying about the plumbing to
move variables from the client onto the node.

/cc @verult (re: https://github.com/kubernetes/kubernetes/pull/58171)

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

**Special notes for your reviewer**:

**Release note**:

```release-note
action required: [GCP kube-up.sh] Some variables that were part of kube-env are no longer being set (ones only used for kubelet flags) and are being replaced by a more portable mechanism (kubelet configuration file). The individual variables in the kube-env metadata entry were never meant to be a stable interface and this release note only applies if you are depending on them.
```"
9ca4fb40dcbfa3e206ff70d3b1e6fbcbe544c3e1,kubernetes/kubernetes,"Merge pull request #8844 from yujuhong/kubelet_unittest

Kubelet: clean up unit tests"
df064881d25855163d7615c8d5dbfe959be624da,kubernetes/kubernetes,"Merge pull request #31005 from simonswine/feature-flocker-dyn-provisioning

Automatic merge from submit-queue

Dynamic provisioning for flocker volume plugin

Refactor flocker volume plugin
* [x] Support provisioning beta (#29006)
* [x] Support deletion
* [x] Use bind mounts instead of /flocker in containers

* [x] support ownership management or SELinux relabeling.
* [x] adds volume specification via datasetUUID (this is guranted to be unique)

I based my refactor work to replicate pretty much GCE-PD behaviour 

**Related issues**: #29006 #26908

@jsafrane @mattbates @wallrj @wallnerryan"
f203e42cb98ed4bac7ad8ebbed717d3bd42f55b6,kubernetes/kubernetes,"Expose a default Table and partial output via Accept headers

All generic registries expose metadata output, and refactor endpoints to
allow negotiation to handle those responses. Add support for
PartialObjectMetadata being returned for objects as well.
"
f122fc94bfbc242319cfd1a25a347b3a88af5577,kubernetes/kubernetes,"Move service enviroment vars code.

GetServiceEnvironmentVariables (originally in  pkg/registry/service/rest.go)
is split into two parts: one that lists services, and one that turns
a ServiceList into environment vars.  This will allow a subsequent PR
to add a call to the latter function with an existing ServiceList.
The former part is moved into pkg/registry/pod/bound_pod_factory.go.
The latter part is put in a new package, pkg/kubelet/envvars/envvars.go.
The new package is under kubelet because the container enviroment is more
associated with kubelet than with registry.
Test code moved too.
"
639572ac68a9dee25649198e1b638e01ca7ee140,kubernetes/kubernetes,"fix redundant alias and remove unused function
"
17175b24a200be8bd2d681b99ff43c218f4edd07,kubernetes/kubernetes,"Merge pull request #40007 from JulienBalestra/rktnetes-systemd-ops-helpers

Automatic merge from submit-queue (batch tested with PRs 41812, 41665, 40007, 41281, 41771)

Kubelet-rkt: Add useful informations for Ops on the Kubelet Host

Create a Systemd SyslogIdentifier inside the [Service]
Create a Systemd Description inside the [Unit]

**What this PR does / why we need it**:

#### Overview
Logged against the host, it's difficult to identify who's who.
This PR add useful information to quickly get straight to the point with the **DESCRIPTION** field:

```
systemctl list-units ""k8s*""
UNIT                                             LOAD   ACTIVE SUB     DESCRIPTION
k8s_b5a9bdf7-e396-4989-8df0-30a5fda7f94c.service loaded active running kube-controller-manager-172.20.0.206
k8s_bec0d8a1-dc15-4b47-a850-e09cf098646a.service loaded active running nginx-daemonset-gxm4s
k8s_d2981e9c-2845-4aa2-a0de-46e828f0c91b.service loaded active running kube-apiserver-172.20.0.206
k8s_fde4b0ab-87f8-4fd1-b5d2-3154918f6c89.service loaded active running kube-scheduler-172.20.0.206

```

#### Overview and Journal

Always on the host, to easily retrieve the pods logs, this PR add a SyslogIdentifier named as the PodBaseName.


```
# A DaemonSet prometheus-node-exporter is running on the Kubernetes Cluster
systemctl list-units ""k8s*"" | grep prometheus-node-exporter
k8s_c60a4b1a-387d-4fce-afa1-642d6f5716c1.service loaded active running prometheus-node-exporter-85cpp

# Get the logs from the prometheus-node-exporter DaemonSet 
journalctl -t prometheus-node-exporter | wc -l
278
```

Sadly the `journalctl` flag `-t` / `--identifier` doesn't allow a pattern to catch the logs.

Also this field improve any queries made by any tools who exports the Journal (E.g: ES, Kibana):
```
{
	""__CURSOR"" : ""s=86fd390d123b47af89bb15f41feb9863;i=164b2c27;b=7709deb3400841009e0acc2fec1ebe0e;m=1fe822ca4;t=54635e6a62285;x=b2d321019d70f36f"",
	""__REALTIME_TIMESTAMP"" : ""1484572200411781"",
	""__MONOTONIC_TIMESTAMP"" : ""8564911268"",
	""_BOOT_ID"" : ""7709deb3400841009e0acc2fec1ebe0e"",
	""PRIORITY"" : ""6"",
	""_UID"" : ""0"",
	""_GID"" : ""0"",
	""_SYSTEMD_SLICE"" : ""system.slice"",
	""_SELINUX_CONTEXT"" : ""system_u:system_r:kernel_t:s0"",
	""_MACHINE_ID"" : ""7bbb4401667243da81671e23fd8a2246"",
	""_HOSTNAME"" : ""Kubelet-Host"",
	""_TRANSPORT"" : ""stdout"",
	""SYSLOG_FACILITY"" : ""3"",
	""_COMM"" : ""ld-linux-x86-64"",
	""_CAP_EFFECTIVE"" : ""3fffffffff"",
	""SYSLOG_IDENTIFIER"" : ""prometheus-node-exporter"",
	""_PID"" : ""88827"",
	""_EXE"" : ""/var/lib/rkt/pods/run/c60a4b1a-387d-4fce-afa1-642d6f5716c1/stage1/rootfs/usr/lib64/ld-2.21.so"",
	""_CMDLINE"" : ""stage1/rootfs/usr/lib/ld-linux-x86-64.so.2 stage1/rootfs/usr/bin/systemd-nspawn [....]"",
	""_SYSTEMD_CGROUP"" : ""/system.slice/k8s_c60a4b1a-387d-4fce-afa1-642d6f5716c1.service"",
	""_SYSTEMD_UNIT"" : ""k8s_c60a4b1a-387d-4fce-afa1-642d6f5716c1.service"",
	""MESSAGE"" : ""[ 8564.909237] prometheus-node-exporter[115]: time=\""2017-01-16T13:10:00Z\"" level=info msg=\"" - time\"" source=\""node_exporter.go:157\""""
}
```"
cb317604abe31c2d85baab26340e3e9d2a2ee828,kubernetes/kubernetes,"Some refactoring. Only selectively use ssh proxy.

Add NetworkName to gce.Config.
Add locking to uses of master.tunnels.
"
212b4598172ab5071b861542af1ced5116724f19,kubernetes/kubernetes,"Move internal types of hpa from pkg/apis/extensions to pkg/apis/autoscaling
"
d9cea93eb69aa11c6e1826e45b356d6fc4e8072c,kubernetes/kubernetes,"[Federation] Do not build separate binaries for federation control plane components, hyperkube should be sufficient.

Also build the hyperkube docker image on-the-fly.

This is only a temporary fix until the proposal in issue
https://github.com/kubernetes/kubernetes/issues/28630 is implemented.

Also, the new build/deployment method completely obviates this step.

We use debian image instead of busybox and do not build hyperkube as a
static binary yet. Wait until PR
https://github.com/kubernetes/kubernetes/pull/26028 is merged to build
static hyperkube binaries.
"
a2b5be80d09ed35f0fc39f390755d7d57b6238bb,kubernetes/kubernetes,"Merge pull request #12923 from wojtek-t/refactor_etcd_test_3

Unification refactoring to pkg/registry"
ef0a512c15dc6f12ca6866d658639171cb7bbdb3,kubernetes/kubernetes,"Move framework into components directory
"
170dcc2ea086f94fb5d80c75f2aa1c1039084d36,kubernetes/kubernetes,"Merge pull request #68754 from bradhoekstra/optional-service-env-variables

kubelet: Make service environment variables optional"
2b755dc48045d2aa5fe5fc9f432168f25e16e42d,kubernetes/kubernetes,"Merge pull request #31716 from coufon/explicitly_delete_pods_in_node_perf_test

Automatic merge from submit-queue

Explicitly delete pods in node performance tests

This PR explicitly deletes all created pods at the end in node e2e performance related tests.

The large number of pods may cause namespace cleanup times out (in #30878), therefore we explicitly delete all pods for cleaning up."
efe47a398880543944dfa464fdada0d2dbb81696,kubernetes/kubernetes,"Merge pull request #50023 from tcharding/kubectl-options

Automatic merge from submit-queue (batch tested with PRs 50023, 50639)

Correct case for starting character of option string

**What this PR does / why we need it**:

Kubectl-conventions.md states:

   ""Flag descriptions should start with an uppercase letter and not have a period at the end of a sentence""

There are numerous cases where this is violated in `kubectl/cmd`. This PR is the result of an audit of all source files under `kublet/cmd` and corrects the case of the initial Flag description character.

/sig cli
/kind cleanup
/kind documentation

**Release note**:
```release-note
NONE
```"
fe973461f5503cdcaba5015a5ea340ed477aafab,kubernetes/kubernetes,"Merge pull request #4916 from thockin/plural_21_endpoints

Rename type Port to ContainerPort"
8afdda103006435128a197e77168fe6deec71709,kubernetes/kubernetes,"cleanup: remove unused options for rs controller
"
4a386f881fafa3c7b978f5f09feac8b2b6874b15,kubernetes/kubernetes,"Deprecate HostConfig at container start
"
3418c8eaf272baac822f214e813a3e969338a0ff,kubernetes/kubernetes,"Merge pull request #41810 from luxas/kubeadm_rbac_default

Automatic merge from submit-queue (batch tested with PRs 38702, 41810, 41778, 41858, 41872)

Always enable RBAC in kubeadm and make a pkg with authorization constants

**What this PR does / why we need it**:

This PR:
 - Splits the authz constants out into a dedicated package, so consumers don't have to import lots of other things (informers, etc...)
 - Makes a `IsValidAuthorizationMode` function for easy checking
 - Hooks up kubeadm against the new constant package, for example using the validation method when validating the kubeadm API obj
 - Always enables RBAC in kubeadm as discussed with @liggitt and @jbeda 
   - This because we have to grant some rules in all cases for kubeadm (for instance, making the cluster-info configmap public) 
 - Adds more unit tests

**Which issue this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close that issue when PR gets merged)*: fixes #

**Special notes for your reviewer**:

**Release note**:

```release-note
NONE
```
@liggitt @jbeda @errordeveloper @dmmcquay @pires @deads2k"
b45afc04a2cd3eca6b36911c765213dcb0140975,kubernetes/kubernetes,"Use nonexistent image instead of minReadySeconds in deployment rollover e2e test
"
01c0f8cb54dc89e8d41ca41b51cd8e90d0516c55,kubernetes/kubernetes,"Merge pull request #28587 from wojtek-t/remove_codec_from_content_config

Automatic merge from submit-queue

Remove Codec from ContentConfig.

This is the remaining cleanup after adding NegotiatedSerializer to ContentConfig."
3ec7487c0fdd6ac7498fbf093b7192579581227f,kubernetes/kubernetes,"Merge pull request #55263 from anfernee/refactor_reduce

Automatic merge from submit-queue (batch tested with PRs 55254, 55525, 50108, 54674, 55263). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Refactor Priority Reduce functions

- Reducing the duplicated reduce function by introducing a reduce
  function generator that generates common reduce functions.
- Remove logs from reduce function, so it's purely calculating scores.
- Optimize the reduce functions by removing unnecessary conversion to
  float64.

**Release note**:
```release-note
None
```"
9175082a1c26c68b8cdf38f33bd387b46ec66a65,kubernetes/kubernetes,"Split naming behavior out into objects that are derived from the request

Fix bug with cross namespace queries not being possible.  Ensure selflink
is set on lists correctly.
"
9ca7ffdf592fe7b5d6ddc05d139874d199d27c55,kubernetes/kubernetes,"Merge pull request #66577 from mkimuram/issue/66571

Automatic merge from submit-queue (batch tested with PRs 66577, 67948, 68001, 67982). If you want to cherry-pick this change to another branch, please follow the instructions here: https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md.

Refactor volume test in a similar way to csi tests

Refactoring for non-csi e2e test similar to below commit in csi e2e test.
https://github.com/kubernetes/kubernetes/commit/4d11dab272fc358c918a1a6b83db8f938535cdb0#diff-0d9ecaa3e6a0297186ad33f57aad472e

Scopes for this refactoring are below three files:
  - test/e2e/storage/volumes.go
  - test/e2e/storage/volume_io.go
  - test/e2e/storage/persistent_volumes-volumemode.go



**What this PR does / why we need it**:

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #66571

**Special notes for your reviewer**:
/sig storage
@davidz627 @msau42 @jsafrane  

**Release note**:

```release-note
NONE
```"
d5098c162402f9e507b21b64e47fc4ff929ae6f3,kubernetes/kubernetes,"Remove warning about changes in default token TTLs

It was planned for 1.9 cleanup to remove that warning, as change was
done few release cycles ago and users should be already aware of it.

Closes: kubernetes/kubeadm#346
"
ab32196ffdcc7970976dc19348fde8198f52d446,kubernetes/kubernetes,"Refactor RBD volume (Generated files)
"
de5f40705851fcc30a3ec102b96b1a5415fedc10,kubernetes/kubernetes,"Refactor CreateExec, StartExec and InspectExec.
"
e9374411d51d94571cba05b17a6466c7fdf16065,kubernetes/kubernetes,"Merge pull request #62509 from sjenning/qos-reserved-feature-gate

Automatic merge from submit-queue (batch tested with PRs 61962, 58972, 62509, 62606). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

kubelet: move QOSReserved from experimental to alpha feature gate

Fixes https://github.com/kubernetes/kubernetes/issues/61665

**Release note**:
```release-note
The --experimental-qos-reserve kubelet flags is replaced by the alpha level --qos-reserved flag or QOSReserved field in the kubeletconfig and requires the QOSReserved feature gate to be enabled.
```

/sig node
/assign  @derekwaynecarr 
/cc @mtaufen"
544d0a5c0519cc17926230b31cc80eed7f50c06b,kubernetes/kubernetes,"Cleanup hairpin flag in the kubelet.
"
01e58de70c6ab8a55110ec3e5d0d02d340deba31,kubernetes/kubernetes,"Refactor ConfigMapManager
"
6fa4042211a8fac03670e12e0c93e0cff7493c98,kubernetes/kubernetes,"Merge pull request #38690 from sttts/sttts-swagger-postbuildhandler

Automatic merge from submit-queue

genericapiserver: unify swagger and openapi in config

- make swagger config customizable
- remove superfluous `Config.Enable*` flags for OpenAPI and Swagger.

This is necessary for downstream projects to tweak the swagger spec."
865dc1995743a5492e44044d38dce7a4042fe1c1,kubernetes/kubernetes,"Move and fix nodeManager related unit tests
"
3a399c05f50b134aeec01484f387063d3b770b01,kubernetes/kubernetes,"Merge pull request #59510 from smarterclayton/services_table

Automatic merge from submit-queue (batch tested with PRs 60106, 59510, 60263, 60063, 59088). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Refactor service storage to remove registry wrapper

This exposes the correct table exporter to the API endpoint, which is a prereq for server side GET to beta. Removing the use of the registry simplifies a few complex changes but results in test abstractions changing.

Part of #58536"
07b3ab720dea04a3dd9531113b273d86a676f90a,kubernetes/kubernetes,"Improve error reporting a little in ingress e2e.
Also add Output() to the util/exec Cmd interface.
"
9f7199d5bbf1053a68bab1b290728b528e446a0a,kubernetes/kubernetes,"Clean up some dead code.
"
dbcfa96c6036fbc6188a44e443448a5fee63fef2,kubernetes/kubernetes,"Merge pull request #45460 from nilebox/nilebox-pod-preset-renaming

Automatic merge from submit-queue (batch tested with PRs 45623, 45241, 45460, 41162)

Replacing “Pod Injection Policy” with “Pod Preset” in the code documentation

**What this PR does / why we need it**:
Replacing the leftovers of the old term ""Pod Injection Policy"" with ""Pod Preset"" in the code documentation."
e6991d0a66ac3cc68fff0911de739fd3645993d5,kubernetes/kubernetes,"Extract the service controller from the apiserver, put it in the controller manager for now.
"
715b77cbcd7d4d6e87b1b4c6561b194d7bf79e7b,kubernetes/kubernetes,"Split proxy and scheduler arguments

Keep options and flags distinct from initialization
"
fc41bc6ec6cb7b57473d859ef98e0e3ffec4cbaf,kubernetes/kubernetes,"Merge pull request #39091 from deads2k/api-54-move-authn

Automatic merge from submit-queue

remove unneeded authenticator dependencies from genericapiserver

Refactors the authenticator options to remove unneeded dependencies.

@sttts"
fc2d201e155296f311ae0a9278b00dcae2d68708,kubernetes/kubernetes,"Allow watch cache to be disabled per type

Currently setting watch cache size for a given resource does not disable
the watch cache. This commit adds a new `default-watch-cache-size` flag
to map to the existing field, and refactors how watch cache sizes are
calculated to bring all of the code into one place. It also adds debug
logging to startup to allow us to verify watch cache enablement in
production.
"
4a89481fbb56544fa7b4a3bc4e97dcec2f04a6e4,kubernetes/kubernetes,"Merge pull request #19034 from Random-Liu/deprecate-running-pod-in-syncpod

Auto commit by PR queue bot"
bbf3b55e76a6fe2d79c83392902004bbbc1cc313,kubernetes/kubernetes,"Extract RESTHandler and allow API groupings

Prepare for running multiple API versions on the same HTTP server
by decoupling some of the mechanics of apiserver.  Define a new
APIGroup object which represents a version of the API.
"
0727219c832373f06d6b9fd8f900285724a822c4,kubernetes/kubernetes,"New package defines .kubernetes_auth format.

Refactored common code to that package.
Subsequent PRs will load and emit these files.
"
cbad3202052eab4bf1bf18144be1e49a74bdae5d,kubernetes/kubernetes,"Reorganize kubelet tree so apis can be independently versioned
"
51b5d5a51bea1144836a4fcdbfc332bde3ef8ad2,kubernetes/kubernetes,"move auditoptions to separate struct
"
9daf55e1735385d5b81b50ccd0d9a55522a026b8,kubernetes/kubernetes,"remove unnecessary field conversions
"
31dadca04f0284e22ad6d739acbc0ae1ee4a7bab,kubernetes/kubernetes,"Merge pull request #1047 from lavalamp/fixApiObj

Cleanup: remove deprecated fields the proper way"
cdba0ce3e3749dec70f7ecf2b3fa0f470605c381,kubernetes/kubernetes,"Merge pull request #62736 from cblecker/remove-unneeded-deps

Automatic merge from submit-queue. If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Remove unneeded deps from vendor

**What this PR does / why we need it**:
#58784 removed the initresource admission plugin, but didn't remove it's dependencies. 

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #62696.

**Release note**:
```release-note
NONE
```"
a3ba760a2794be66f58c7ce1951dc100370bd348,kubernetes/kubernetes,"Federation: separate notion of zone-name & dns-suffix

We can put subdomains into hosted zones (for example,
foo.federation.example.com can be hosted in example.com)

By allowing sharing a common hosted zone, this means the user doesn't
have to do as much setup.
"
d2cd73974708897fd3bdb0c28844064a6f6d080e,mozilla/addons-server,"Implement separate needs admin code review and needs admin content review flags
"
d7f6b48e0ac5f6afd8bd31c7044930cccd9d1320,mozilla/addons-server,"add (probably unnecessary) channel filter to update info method (#4123)

add (probably unnecessary) channel filter to update info method"
f5bd4b31273bf8f109e733f5c91022dc8a4e723d,mozilla/addons-server,"Merge pull request #299 from magopian/1073432-remove-webapps-from-code

[DO NOT MERGE] some more code cleanup following the guillotine (bug 1073432)"
5152e5b6e06a6e03171a4a794b9991aeed0e4752,mozilla/addons-server,"Move some requires_restart/compatible_apps calls to Version instead of Addon

Splitted from #3892, to prepare for version channel changes and
current_version being limited to listed versions only.
"
549d5e92df27effdfeaf956dbaf79dd2f86c3d91,mozilla/addons-server,"auto-mark old msgs as read when join thread, refactor comm tests (bug 931223)
"
84ea8cc9899d345ecfdb9863ffbe87b6bab0d990,mozilla/addons-server,"Merge pull request #1277 from ngokevin/recoome

rename comm link (bug 928160)"
c6e311b5bceecad301f11e8df0f1bbbe5fb29da4,mozilla/addons-server,"Merge pull request #6973 from diox/reviewers-admin-content-review

Implement separate needs admin code review and needs admin content review flags"
9ff7f492a60e4471ba4a8f9f296230ece8e8491d,mozilla/addons-server,"Merge pull request #1524 from ngokevin/commando1

auto-mark old msgs as read when join thread, refactor comm tests (bug 931223)"
a9aa80233374618231909fbae4fc57a4c246f022,mozilla/addons-server,"Expose is_restart_required property on files in the search/detail API (#5858)

* Expose is_restart_required property on files in the search/detail API

* Fix mapping tests

* Replace no_restart field (and HTML/CSS for consistency) by is_restart_required

* Move migration now that 953 is taken

* Remove old model field entirely.
"
9ae6b422d45e6063cef92759186a9141b4f4f2ce,mozilla/addons-server,"Update AES_KEYS to use private_mkt.AES_KEYS instead.
"
62e94c8b4566d97c88046b995d3595d750d76fa2,mozilla/addons-server,"Removed password on delete requirement on mkt (bug 706069)

When BrowserID gets the ability to re-auth, we'll update to use that
instead.
"
deb01b8968a872ed8d2ef98090287566e601cafc,mozilla/addons-server,"Refactored AllowAppOwner a bit to remove the reviewer check (bug 915791)

This removes the dependency on a Tastypie authorization class.
"
c9a57701b96d651fee3670ae9b5d1d76a554d5d4,mozilla/addons-server,"use separate tables for remembering synced collections
"
f78f4a216c8b0d439600f73c8ea957fb465fbeef,mozilla/addons-server,"Extracted l10n messages from 2018-07-21 at 24504f7163
"
644afcc024b273d515a70343db9f2234c8367e41,mozilla/addons-server,"Merge pull request #3915 from diox/move-stuff-to-version

Move some requires_restart/compatible_apps calls to Version instead of Addon"
c4c2f18f4c672734c4b1b72f2485d3aee885448d,mozilla/addons-server,"Make ""other add-ons by author"" code not choke on invalid input (bug 565688)
"
c35648da1965b6b7e4d950df2a36ef1c5594f9d4,mozilla/addons-server,"Potentially fix our reindex issue on -dev.

It took me days to find this and loads of useless refactoring but
apparently these tasks get immediately upgraded to a chord after we
chain them later with the other tasks (after the for-loop).

And, the only requirement for a chord is: do not ignore the results,
never!

Refs #3960

* Make sure index_stats isn't using call_command
* modernize create_subtasks, add support for countdowns, fix queries loading the world...
* half chunk size for stats reindexing
* Refactor stats reindex logging
* Upgrade elasticsearch to 5.4.1 for our docker config
* Make es test setup easier to inherit for our uitests.
* Restore order, make sure to start es before add-on get's created.
* Remove db requirement from es_test fixture
"
703aa6396ceae92642ceddd72180d1047ed6aa72,mozilla/addons-server,"some massive CSS cleanup
"
1a7cd21e614d0754b4799dbc291d4b21ebbc6ed7,mozilla/addons-server,"Search & Reviewer Search API cleanup and documentation (bug 899232)
"
b82cea42c6ee4018d23ed9d24f68bd17d3b7ee02,mozilla/addons-server,"Merge pull request #8732 from diox/fix-deletion-unknown-type

Make sure you can delete add-ons with unknown types"
c6ac76cdf838d192880e4caecb32b4af02e55da9,neowu/core-ng-project,"* tuning: internal tuning, move low level optimization class to impl package, leave core.framework.util simple ones
"
97db8aab076281c7b53a5ccef6e5c7f0939b3903,noironetworks/neutron,"Merge ""Get rid of ML2 inheritance of delete_network"""
b14c06b5eda188a665ca37f884e9591cd8d47535,noironetworks/neutron,"Fail if required extensions are missing

If the required extensions are missing, we currently log an error
that is going to be practically ignored. That said, the unfulfilled
requirement will most definitely going to lead to other failures,
so we might as well fail fast.

This patch also cleans up some <barf>dns-integration nonsense</barf>
within the ML2 framework: the extension must not be declared statically
as it's being loaded by the extension manager, and this fixes the lousy
unit tests we have to live with. As for the db base plugin, some cleanup
is still overdue, but it will have to be taken care of in a follow-up
patch.

Closes-bug: #1538623

Change-Id: Id50eeb52c5d209170042b48821a29af3421c2f5c
"
23b907bc6e87be153c13b1bf3e069467cdda0d27,noironetworks/neutron,"Remove deprecated use_namespaces option

The use_namespaces option has been defined as a workaround to kernels
not properly supporting namespaces. This limitation is behind us, it's
time to remove use_namespaces after its deprecation in Kilo in order to
simplify code and remove a poorly tested case (use_namespaces=False).

This change prepares for removal pullup_route method[1] which was only
used when use_namespaces=False.

[1] neutron.agent.linux.ip_lib

DocImpact
UpgradeImpact
Closes-Bug: #1508188
Related-Bug: #1435382
Depends-On: I303038eec560a6d99421140c2822aed8b518470b
Depends-On: I4feb2a15c7e1e4bfdbed2531b18b8e7d798ab3cc
Change-Id: I2fbf65df1250d9f9f1656b3964ee3b6de1ef1118
"
5b36603e698b42ad6583ab8fe3aa01c5104f425b,noironetworks/neutron,"Separate packet filter activation from port operation in NEC Plugin

Fixes: bug #1209422
Change-Id: I5480e0798e64221f2f096732db6584634caddfb1
"
01749d8240867d737291c8c1a6a5745e2df5c3b6,noironetworks/neutron,"Merge ""Clean-up L3 constant TODOs"""
ae1fb6e87225900bedbc68d014369a1adaa4fcab,noironetworks/neutron,"Use assertFalse(observed) instead of assertEqual(False, observed)

The patch also improves the way in which the assertTrue (and
similarly assertFalse) are done,

We should use assertFalse not assertEqual.

Co-Authored-By: Gary Kotton <gkotton@vmware.com>

Closes-Bug: #1503074

Change-Id: I5f527ddf2ca522cdf101de2482d59f059eca010f
"
74a227500aaf9593f4b2b0e44fbf9cffda650405,noironetworks/neutron,"Merge ""Register sqlalchemy events through hook for UT cleanup"""
81de3606bbaa2827f39b425d9ea46d4e071a78e7,noironetworks/neutron,"Merge ""Refactoring _create_test methods for OVO UTs"""
a7326a947bc0b30778e06acd772dd38bcb28d96d,noironetworks/neutron,"Policies for external networks

Bug #1042030 , part 2

Also reworks model queries in order to allow plugins and extensions
to augment them as required through hooks.

Change-Id: Ice72fc6d3b1c613d596c037818ed66d7e9ed841d
"
c9bdcb5557dbf8f782fe502dbb6c98c3550e5241,noironetworks/neutron,"Unite qos_rules and qos_*_rules tables

The only values in qos_rules table are: type, id and qos_policy_id. Both
id fields point to qos_*_rules and qos_policies objects.

Type is redundant since qos_rule and qos_*_rule objects maintain 1-to-1
relationship.

Keeping a separate table just to link qos_*_rule and qos_policy objects
has no meaning. At the same time, it complicates the code for rule
objects significantly.

So instead of copying with all those issues, we just squash the tables
into single one. It allows us to reuse all base methods from
NeutronObject for rules.

LOC stats for the patch clearly shows the point:

65 insertions(+), 267 deletions(-)

And no actual functionality is lost.

While at it, the following changes were applied:

- some base tests are reimplemented to test objects in a more explicit
  way;
- fields_no_update class attribute is now actually enforced in base
  object class.

Partially-Implements: blueprint quantum-qos-api
Change-Id: Iadabd14c3490c842608e53ceccf38c79dcdf8d85
"
c1f2df2f6b87b435039d4cb52ccb14c0d9c53adc,noironetworks/neutron,"Fix error returned when an HA router is updated to DVR

Before this patch, the code compares the 'ha' flag that
comes in from the user, and the current state of the 'distributed'
flag in the DB. This is wrong because if a router is currently
HA in the DB, and the update request contains only
{'distributed': True}, then the 'ha' flag from the request
is None and the error condition is never raised!

The reason the unit tests
(Specifically test_migrate_ha_router_to_distributed)
did not catch this issue is because
of another bug: The _update_router helper method in the L3 HA
unit tests had an 'ha' default value of True, when it should
have had a default value of None. Setting it to None fails
the unit test (Because it raises the wrong exception),
and the contents of the patch makes the unit test pass.

Change-Id: Ie979b6a8400490b578ded17dc6529529e9637b34
Closes-Bug: #1505375
"
da973cc5a7ba69d762b2af22bc224e9a7f338981,noironetworks/neutron,"Merge ""Move internal port processing to router classes"""
88078250028d50b6d726a6bdf79874a2f4e9abce,noironetworks/neutron,"Replace openvswitch plugin's VlanMap with vlan_ids DB table.

Fixes bug 1023167.

The openswitch plugin's in-memory VlanMap is replaced with a vlan_ids
DB table similar to that used by the linuxbridge plugin. This will
prevent conflicting VLAN assignments if multiple server replicas are
run, and also sets the stage for phase 2 of the provider-networks BP
implementation that will add support for multiple physical
networks.

Unlike with the current linuxbridge plugin, the contents of the
openvswitch plugin's vlan_ids table are properly updated at startup in
case the vlan_min or vlan_max configuration variables have changed.

A new test_ovs_db test case has been added.

The primary key of the vlan_bindings table is changed from the vlan_id
to the network_id, which is now a foreign key, and network deletion is
now properly handled.

The net_id has been removed from the VlanIdInUse exception, requiring
a minor update to the linuxbridge plugin. The new NoNetworksAvailable
exception, with ResourceExhausted as its base class, is returned when
no more VLANs are available.

Change-Id: I65a2347dea5366cc0d15d98a88f40e42e1a45f4c
"
7743e571cd15ec50a35a34dc3cc668702c54393d,noironetworks/neutron,"OOP naming cleanup in l3_dvr_db

Start protected method names with underscore.

Closes-Bug: #1446911
Change-Id: Iddf4f467118e40eb5b4bfe18bde00aa9d34b2ec4
"
7f680552ebc199d37f78549d5fd55391c3cc68aa,openthread/openthread,"Thread API cleanup.
"
10e5b9a38f2c77ff16ed9e20d224fdf0643bfb74,openthread/openthread,"UDP API cleanup.
"
52cee572fe068165c3d6f68bec18830e16c5952e,pycroscopy/pycroscopy,"Code cleanups

"
aa8b998d1e852c388e1eda6a836f573d60445f11,pycroscopy/pycroscopy,"renamed write_data() to write()
"
91491c6e37b69cc26acd82f3685e71720c415831,raonix-github/openwrt,"rename RouterStation stuff, and add machine type for the LSX board

SVN-Revision: 13694
"
719e9aaae3e2f90b8a48f432d05b30363ad8df0e,raonix-github/openwrt,"ramips: Add support for Xiaomi MiWiFi Nano

Xiaomi MiWiFi Nano is based on Mediatek MT7628 with 64MB ram 16MB flash

Signed-off-by: Noble Pepper <openwrtmail@noblepepper.com>

v3  includes changes suggested by L. D. Pinney & Karl Palsson-
Eliminate en25q64 (4MB) flash chip
Alphabetization
Remove hyphen in model
Rename profile from miwifinano.mk to xiaomi.mk
Add gpios that are attached to leds

git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@49024 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
c0e131b4363dde16a1071131b7e762e36099f780,raonix-github/openwrt,"ramips: add support for newifi d2

Previously Newifi D2 could only use PandoraBox M1's firmware.
It works fine, but LED GPIO is different.
As a result, a separated DTS file for this device should be implemented.

Hardware spec:

* CPU: MTK MT7621A
* RAM: 512MB
* ROM: 32MB SPI Flash
* WiFi: MTK MT7603+MT7612
* Button: 2 buttons (reset, wps)
* LED: 3 single-color LEDs (USB, WiFi 2.4GHz, WiFi 5GHz) &
       2 dual-color LEDs (Power, Internet)
* Ethernet: 5 ports, 4 LAN + 1 WAN

Installation method:

Same as Newifi D1, users may need to request unlock code from the device
manufacturer. Otherwise, a SPI flash programmer may be necessary to get
the firmware flashed. After the device is unlocked, press and hold reset
button before power cable plugs in. Then go to http://192.168.1.1 to
upload and flash the firmware package.

Signed-off-by: Jackson Ming Hu <8889bc788012998423de5f38d0a2a76caa64d038@gmail.com>
"
4c665e6ca4ce7044fbaf4e6a772b021c012f760c,raonix-github/openwrt,"large improvement for parallel builds. works without V=99 now and without warnings. tested with -j on an 2x dual core opteron machine

SVN-Revision: 11414
"
1ce5f3c0cf4d99b663335234bff1d677009224cb,raonix-github/openwrt,"ar71xx: rename mach-rb-4xx.c to mach-rb4xx.c, and change Kconfig symbol


git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@20027 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
cac6e3495f74f87646f4d177eb2c978feb5d3fdd,raonix-github/openwrt,"build: consistently use 'depends on' instead of 'depends'

make the syntax more compatible with kernel menuconfig

Signed-off-by: Felix Fietkau <nbd@openwrt.org>

git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@36351 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
3687b4fb2693e54e6d476d4fe0a736e75eeee2c7,raonix-github/openwrt,"ar71xx: move leds-gpio device support into a spearate file

SVN-Revision: 18936
"
03ad6a6950e408ff9fa39b35a9b4e8ad5d309b59,raonix-github/openwrt,"[package] we removed 2.6.23/24 and 26 support, simplify conditions in packages

git-svn-id: c673a1a018ba15e3442847f58d2337db82164816@16993 3c298f89-4303-0410-b956-a3cf2f4a3e73
"
f12a32630ff52b5e13397f64e9fb31708e97fb60,raonix-github/openwrt,"treewide: use the generic board_name function

Use the generic function instead ot the target specific ones.

Signed-off-by: Mathias Kresin <34c6fceca75e456f25e7e99531e2425c6c1de443@kresin.me>
"
c5c798acacbad900d052b532430394d1f038616c,raonix-github/openwrt,"kernel config: remove the obsolete pcomp unlzma symbol

SVN-Revision: 25683
"
1381fa6c5c4d1d3bb6d69f6d5869722af28e3e39,raonix-github/openwrt,"rename the omap4 target to omap

Signed-off-by: Imre Kaloz <kaloz@openwrt.org>

SVN-Revision: 38691
"
d5bbef37feacac6346390f8ad51aec1cab97e2aa,raonix-github/openwrt,"rename reset register definitions

SVN-Revision: 13516
"
99414dbcf1901a8f362e62febe562dacd4595c8e,raonix-github/openwrt,"ramips: Add support for Xiaomi MiWiFi Nano

Xiaomi MiWiFi Nano is based on Mediatek MT7628 with 64MB ram 16MB flash

Signed-off-by: Noble Pepper <openwrtmail@noblepepper.com>

v3  includes changes suggested by L. D. Pinney & Karl Palsson-
Eliminate en25q64 (4MB) flash chip
Alphabetization
Remove hyphen in model
Rename profile from miwifinano.mk to xiaomi.mk
Add gpios that are attached to leds

SVN-Revision: 49024
"
e3ec84aeeea06cb0fa88af91a63d8469b29d712a,shogun-toolbox/shogun,"-added debug messages
-renamed p_value_method to null_approximation_method"
57f6f02dc465b44c4a4c70f3200208ef28605041,shogun-toolbox/shogun,"Added virtual method indicating whether machine requires labels for training,
made clustering algorithms do not require labels
"
a0b32218bcb2219d1a61af5e3486567704cb3ae8,shogun-toolbox/shogun,"make inline virtual or virtual inline functions all just virtual
"
d07511b21c3cffcd3b44c2dc477d54ad2e996371,shogun-toolbox/shogun,"Renamed EClassifierType to EMachineType
"
736fb9b94575ac744d03612f8d43b35bc48e7359,shogun-toolbox/shogun,"-- precompute segment loss and move code for that to a new class
"
342c4a198282b2358d98372e369d755a4f2c11bf,soajs/soajs.dashboard,"SOAJ-21 SOAJ-15 updated content builder UI displays, removed unneeded logs from service api
"
b0630ca807d06a235601523e63e005e8d668fbe2,soajs/soajs.dashboard,"revamped deploy vm to store dbrecord prior to call cloostro then updated based on returned response.
vm layer db records are now indexed by infra id and layer name but not unique.
modified api layer and all of deploy, get status, modify and delete vm layer to rely on the mongo record id in conjunction with infra id and layer name.
updated add environment wizard to integrate with the above modified methods based on the new inputs.
removed unneeded cleanup method from delete environment.
"
83a0b9f8b28490158c072dcc5732db6ada6c342d,substratum/substratum,"DefaultsManager: Deprecate the animated images for reset cards

"
6430926c7cf7237cb0125616c81eba0bb6f1d58d,substratum/substratum,"OverlayManagerActivity: Move the Settings option to an app shortcut

"
0509c87aa5da310946b1f38ce07fd788617da05a,teamcapybara/capybara,Slight improvement to failed upload spec
f8dc750c5894b99e2eca3fb4ec754490178d2d46,troubling/hummingbird,"xlo cleanup

Do some cleanup, simplifying and fix some problems around large objects.
"
548c2525ce1ad111ef154ffaa6ef92db93848b0e,troubling/hummingbird,"some logging/cmd stuff

This basically makes ""hummingbird start/stop/etc."" into a low-rent
process control tool for dev work, and makes logging to stdout/stderr
for processes the default.

Commands like ""hummingbird proxy"" will now log to stdout/err, unless
new destinations are set with the -l and -e flags.

Add a remark in usage that ""hummingbird start"" shouldn't be used for
production.

Get rid of -d, since apparently nobody does that anymore.

Use SIGTERM for graceful shutdown, since that's more standard.

Various little cleanups, since I was in the neighborhood.
"
b698155ade24db43da136a6d43a356b463274a27,troubling/hummingbird,"Refactored client [again]
"
ce1f031ab366c876885ee06edbc456a8454d8181,veritone/veritone-sdk,"Merge pull request #140 from veritone/widgets-reorganization

Widgets reorganization"
fe14334c922a64af8f6f20edae2deb3f6124d46f,vertexproject/synapse,"added tests for tag interval output and remove ivalival dead code
"
fe673c64875997918be12cb82b747fd25b53a58e,vertexproject/synapse,"cleanup syntax parsing and add more error checking
"
203e948c68e0c3ca3f0bc7d3376ee95148a445c4,way-cooler/way-cooler,"update_active_of -> layout_active_of
"
10fa7f009045670581c8f3563e09f331b3e49272,way-cooler/way-cooler,"More registry access cleanup
"
55e4c0110e1d060eee462d3acf8be5af1cdf7b77,way-cooler/way-cooler,"Moved to a much better tree structure
"
dfc1686c02bc95fa8e645d388f4bc0854cc566f2,way-cooler/way-cooler,"Merge branch 'tree-splitup' into master

Tree splitup"
aa46822b5898dedd51a4fd35250f1eb820be54f2,way-cooler/way-cooler,"Added test drawables that work

So this works, and fairly well at that which is nice.

Going to iterate on this, mainly by making the code less shit at first
and then finally actually rendering the contents of the drawables.

One issue that needs to be addressed is to render the drawable contents
without unnecessary copying. I'd rather not have to do that, but it
might be necessary.

The only real requirement is getting an fd to a block of memory, (i.e we
need something that implements
https://doc.rust-lang.org/nightly/std/os/unix/io/trait.AsRawFd.html)

However we _need_ to use a cairo ImageSurface since that's how the Lua
code writes out the bytes. We could use create_for_data, but that will
require using unsafe code unless we want it owned by the surface (which
while safe isn't what we want since we need some way to access the data
behind it using an fd).

Ultimately we might just copy the bytes anyways.
"
262ff1fe354c5e739d93979bf588b9948877aad1,way-cooler/way-cooler,"Added is_quit_bound function to cycle through bound commands and determine whether way_cooler_quit is bound. modified keys::init to check whether the quit command is bound, and if so, not bind alt-shift-esc to quit. Moved keys::init to be called after the completion of lua::init calls.
"
ef172301076914114a9841a4bb5440e2d857a8a2,zurb/foundation-sites,"Merge branch 'feature/issue-8680' into v6.3

* feature/issue-8680: (250 commits)
  #8680 Removing unused code
  #8680 Updating Foundation.Nest to determine if it is a menu vs. accordion menu, cleaning scss and updating documentation
  Updating to enhance accessibility
  Updating to enhance accessibility
  #8680 Refactoring Accordion code to use ""Tree"" related accessibility.
  fix centered columns flowing around uncentered columns
  add row w/ single column to centered-columns visual test
  create visual test for centered columns
  add specificity to centered columns to override :last-child
  Added the Equalizer's dependencies to the config.yml
  Fixed the Equalizer dependencies #8974
  Add check if key exists in map
  Fix ghetto for loop
  Change slides with arrow keys only if the data-accessible option is true
  Correct documentation for tooltip dependency list
  Add is-collapse-child class
  Enable the script to load in DoneJS SSR
  Added background, and color css declarations for table tfoot
  Fixed the Meter black border in Edge
  Fixed the progress-bar black border in IE and Edge
  ...

# Conflicts:
#	scss/grid/_flex-grid.scss
"
824a5258296a328e93f5f272108643f97f2fe27e,zurb/foundation-sites,"Use offset instead of position when dropdown parent is body and position with dropdown parent is not body.
"
d17b66b705779138aa0a75351848dc8b19cf0968,zurb/foundation-sites,"Clean up javascript code style
"
22e976065f64709c9f104a98661c163644db64c2,zurb/foundation-sites,"Rename .tab-bar to .title-bar and solidify markup structure
"
9c7d1c449945538d35874cffe713e8d259e75beb,ColinIanKing/stress-ng,"Add autodetection for 64 byte alignment of functions (LP: #1676834)

Rather than trying to poorly guess of 64 byte alignment is available
we should autodetect this at config build time. Add a helper to test
build with forced 64 byte alignment and define DHAVE_ALIGNED_64 if
it is available.

Signed-off-by: Colin Ian King <d100aa70785e45ee8deab668147d941941915c21@canonical.com>
"
3dad5653162e74a4c89797e6e20b1b230dc4bbe5,ColinIanKing/stress-ng,"shim: rename sys_ioprio_* to shim_ioprio_*

Signed-off-by: Colin Ian King <d100aa70785e45ee8deab668147d941941915c21@canonical.com>
"
1c012866f96c71c6979c88ffc1b209fb467b6e7b,ColinIanKing/stress-ng,"Re-structure sources, break into per test and helper funcs sources

Signed-off-by: Colin Ian King <d100aa70785e45ee8deab668147d941941915c21@canonical.com>
"
81cb4b42eef7306486da286c7bd0232d0c4e70c5,ColinIanKing/stress-ng,"stress-cpu: re-work math stressors with macros

Also add some extra variations now that we've macro-ised the
underlying construction of these math ops

Signed-off-by: Colin Ian King <d100aa70785e45ee8deab668147d941941915c21@canonical.com>
"
aa700ef074cd68e0d4499fb92e5f092d203c8a31,ColinIanKing/stress-ng,"Rename pr_failed_* macros to pr_fail

Signed-off-by: Colin Ian King <d100aa70785e45ee8deab668147d941941915c21@canonical.com>
"
856b6e245d2c1f0b1824d97cc5f9a5954a2a0577,ColinIanKing/stress-ng,"Add stress_map_shared helper to mmap stress-ng shared region

Signed-off-by: Colin Ian King <d100aa70785e45ee8deab668147d941941915c21@canonical.com>
"
beb54a985f2cc4b330a52b8118ce069fa4534add,DestinyItemManager/DIM,"Merge pull request #2015 from bhollis/move-popup-module

Move popup module"
119170ddf70bc4387831728e589855914dbdf691,DestinyItemManager/DIM,"Use completionValue from objective instead of objectiveDef.
"
32aa8c08ff1655af726387578c784946365952fa,DestinyItemManager/DIM,"Merge pull request #2843 from bhollis/dtr-perkrater

Convert perkRater into functions"
aa538541c10a427a50257ced050f2e336e6c87b2,DestinyItemManager/DIM,"Improve the scroll-top directive and use it for vendors
"
6742143b3b1eeb2a49c9d7339019becad7240d2f,DestinyItemManager/DIM,"Renames and moving CSS closer to components
"
567eec2c53a59049dfa4d21c80c78714db5a42f3,DestinyItemManager/DIM,"Typescriptify loadout popup and pull auto loadouts and postmaster
handling into separate files
"
c6d66b4f8e187b931b05770341a065e28599c7a9,EMBL-EBI-SUBS/subs-api,"Use the improved repository methods for counting entities
"
4e2f7514244b88e174efe49caf8b02300531a3e3,Freemius/wordpress-sdk,"[cleanup] [unused-code]
"
e2f98568822c4f3f9b180b77a2ef10236189e2fa,Homebrew/homebrew-core,"Rename readline to gnu-readline

The Readline class clashes with the Readline module from the Ruby
stdlib. This has mostly worked, but with the recent debugging support's
integration of IRB, it is no longer possible for them to coexist. So we
need to rename it.

The implications of this are:

 - Anything that depends on readline will reinstall it as
   ""gnu-readline"". Anything already installed will continue to function.

 - ""brew upgrade readline"" will say ""gnu-readline not installed"", as
   ""readline"" is now an alias.

 - Probably other things.

So there are some downsides, but we will just have to deal with them.

Fixes Homebrew/homebrew#15776.
"
7ea831adb091f232e40c6c00fb816fee6c4421bb,HumanExposure/factotum,"Post-merge, cleaned up old tests that use ORM to populate test database
"
2464bc3020498b9472fcb8b9b0765f03fa24fe8d,JohnSnowLabs/spark-nlp,"- Improved vivekn training performance
- Fixed dependency parser tests
- Separated wordCount from vivekn wordCount
- New params to customize tokens from corpus
"
189d8289dae7a0a9fe986efb7778cb62ac33eed5,LogtalkDotOrg/logtalk3,"Remove unused `build_release.sh` script option to pass a custom version string
"
fec4d4ab119b127fed9f90ba81f05b2b1fc8bb83,LogtalkDotOrg/logtalk3,"Rename and rearrange some user manual sections for clarity and consistency
"
93ed01be269e61a8dfa2ae9a03f502ca3cde7b4f,LogtalkDotOrg/logtalk3,"Move the `iso8601.lgt` file to its own folder and update the code to use the operating-system access library to get the current date
"
2a0a125edeab38fc5c7e89333085af7375f90c78,MoveOnOrg/mop-frontend,"Adds inline styling to help position link

WIP: refactor to take state out of lower level component
"
7fe59a86f4f79e4cb27e76da7ddd0d781af2ddf3,MoveOnOrg/mop-frontend,"Merge pull request #280 from MoveOnOrg/262-refactor-petition-report

Refactor petition report"
a35e9b80a6b442275377bb9dd12e62ab39bb23d9,MoveOnOrg/mop-frontend,Merge branch 'master' into 262-refactor-thanks
a18bfe4ad8a12402e956c564f22b29dda1e375ac,PopulateTools/gobierto,"Refactor current stage process without dates
"
9cdf963f483e1c72b76026d3ea622b2edca83fa2,PopulateTools/gobierto,"Improve performance plans json
"
525c031013c41c7bbd91408dc60a5dee17909414,PopulateTools/gobierto,"Merge branch 'stable' into 437-improve-privacy-policy-reference
"
e75c59f0b1a0e9eea81cb9ff2e53ad47e96fb516,SleepyTrousers/EnderIO,"0.7.2
- Massive client side performance improvement for large capacitor banks
- Fixed capacitor bank lighting
- Improved connected textures for fused quartz
- Significant performance improvements to all machines
- French localisations added [WLCD]
- Resolved block update related issues with EIO conduits and TE conduits/blocks.
- #426 Conduit Bundles low performance
- #428 Crash when breaking TE redstone conduit connected to Ender IO conduit
- #430 Red stone conduit update times grow with network size
"
277419c5cdd3e29ae6347809aa8960c300092112,SleepyTrousers/EnderIO,"Various Fixes and Improvements

As requested by Henry on Discord all changes but the moving of the Species Item Filter have been completed"
a448d1b00d1c68af20c715726f90bd84dbdbeb5f,SleepyTrousers/EnderIO,"0.8.0
Liquid Conduit Changes:
  - New 'Pressurized Fluid Conduit' (tier 2)
    - 'Round Robin' output, regardless of conduit network topology
    - uses existing fluid conduit recipe
    - lower performance overhead than existing fluid conduits
  - Current fluid conduits made cheaper and slower
  - #314 By default, the fluid type is now cleared when a fluid conduit empties. The fluid type is locked by right clicking a conduit with a container of that fluid, and is unlocked by right clicking with an empty bucket.
  - Auto extraction and flow rates now changeable in the config
  - Existing fluid conduits will be upgraded in-place to pressurized conduits.

- New 'Fused Glass', cheap connected texture glass. Can use fused quartz frames to change the border.
- Further significant performance improvements made to the conduits.
- Capacitor Bank's IO mode can be set per face by right clicking with a wrench
- #357 No output into TE Energy Conduits from the Capacitor Bank
- #420 Added missing localizations
- #436 Crash with binnies mods
- #438 Dupe bug with Quarry Plus
- #439 Crash when breaking TE redstone conduit connected to Ender IO conduit
- #440 Energy Conduit sending power to tesseract when not connected
- #449 Power level on the side of capacitor banks doesn't seem to update properly
- #450 Cap Bank outputting to TE conduit when first attached.
- #453 #447 Cap Bank causes other blocks not to render
"
f4aa4e7d75e086634d3bd585e7dc3a058f280199,SleepyTrousers/EnderIO,"Moving more block holders to ModObject and general cleanup

"
104128770b5f267c94a6d8811dd7769f41546b5d,SleepyTrousers/EnderIO,"#291 Improved rendering of conduit connections.
Removed 'stubs' from disabled conduit connections.
"
1045dc93c133dc8bf869409435ed96e218485fae,SleepyTrousers/EnderIO,"Reworked Sould Handling

"
af00acb61b0c1e5e0aa9a7480132d4da3a2ba6c8,SleepyTrousers/EnderIO,"Removed redstone conduit switch and remaining redstone conduit resources. Removed dead code from RedstoneConduit class
"
a10f4d1d815acaaf7f97433af41a1d39ec81bd3b,SleepyTrousers/EnderIO,"Renamed still to vat.
"
1f3dbd17341a3cf4d492d12ebb797f0e6bfbbee5,Sp2000/colplus-backend,"Create name acts and references during import and simplify API & data model by removing reference pages from everywhere but name acts
"
5f605ca3395dc85ec70c0db07cd5ea57396e8298,Sp2000/colplus-backend,"Use gazetteer not area_standard. Extract common interpreter methods to InterpreterBase and also transliterate dwc vernaculars
"
bb9df626b3247591f1ef8dabb452a25ed242f7a2,airslie/renalware-core,Extract Events into module
ee2495ecae22a9bf1ce291c09736bb2e24f9cc19,airslie/renalware-core,"Rename Clinic to ClinicVisit
"
a7ea378af58684fd4e9721ef6234783139b61181,airslie/renalware-core,"Merge pull request #719 from airslie/chores/clean-up

Various clean-up items include modularization and missing foreign keys"
0e73e6e4b38de3222f720d713c9e380f14ade914,airslie/renalware-core,"Extract 'system seeds'

These seeds must exist for the application to function
"
a173b055fcec62bfc505410bf43a4274dcd482cf,airslie/renalware-core,"Merge pull request #135 from airslie/chores/patient-renaming

Modify ""patients"" table columns to match Wardware columns"
7a295a2ab1723bf3c8ce777494bbdabf244706f3,airslie/renalware-core,"Merge pull request #557 from airslie/refactoring/explicitly-model-letter-states

Models letters as explicit states"
f8e7b6092a68588eeb53f155999d653a7672c24c,airslie/renalware-core,"Merge pull request #704 from airslie/chore/update_request_algorithm_to_use_requests

update request algorithm to use requests instead of observation_requests"
837d7eb8411c28ca4b4056f414aa9e4982e5e2bf,airslie/renalware-core,"Renames ESRF to Renal Profile to better reflect it's intention
"
58f44da6f7141eee464d5b6febe6fa4c7df53e35,alphagov/smart-answers,"Refactor flows to use new predicates

these make the graph transition labels more comprehensible
"
cf5d2c6aecb044ec3f065c1952e0e7b1424357ee,alphagov/smart-answers,"Always show documents_needed_7_days_residency for consular_cp_outcome

None of the countries leading to consular_cp_outcome is in the
ss_21_days_residency_required_countries list. This may or may not be
coincidental, but keeping dead code around is not good.

This was the last use-case for ss_21_days_residency_required_countries?
method, so it's being removed too.
"
8bee67ea43dc4de5e024342931c8028785d10f4d,alphagov/smart-answers,"Remove and deprecate section_slug within flows

Left methods with deprecation warning to avoid blowing up with any
unmerged answers.
"
309660a71c73526663a3334815ee603e23ccc0ef,alphagov/smart-answers,"Rename outcome_cp_or_equivalent

I used a combination of the
marriage-abroad-responses-and-expected-results.yml file and outcome
template to confirm that this outcome is used for for same sex civil
partnerships in various countries.
"
40077c58be4d26b519b274d8ffbad12d5af22d33,alphagov/smart-answers,"Convert outcome_ireland

== Notes

* I've introduced the MarriageAbroadHelper and added the `ceremony_type` helper
method. This replicates the behaviour of the `ceremony_type` calculate block in
the `partner_opposite_or_same_sex?` question. I considered using a partial
instead of helper method but the method feels like a better fit.

== Inlined the following outcome-specific phrases:

* outcome_ireland_opposite_sex
* outcome_ireland_same_sex
"
5df05a6df0015d0741ad4b976a93507b49722b40,alphagov/smart-answers,"Rework statutory declaration requirements in Italy

A foreign partners may need to check with their consulate what is a
correct procedure to fullfil statutory declaration requirements for
marriages in Italy.
"
d3c61d2020b550c483184a3ba13aafaafeab8917,angular/upgrade-builds,"5794506 refactor(ivy): move id to TView (#24264)
"
caa01df9dddd2f1190f87fd42f7f5ffc7cbe02b9,angular/upgrade-builds,"bb46f54 refactor(aio): use the SelectMenuComponent for all select menus
"
6d4a564c641a399af27be0427ef930cb6e160cbc,angular/upgrade-builds,"c649da9 fix(aio): remove unused `news.html` file
"
14cb1435a26d36b43ce0098bc73d8e2393473598,angular/upgrade-builds,"c869b14 build: drop unused re-export of json_marshal. (#25449)
"
45e74a4329e3d5474964e35b73aeeca46dcfb56c,angular/upgrade-builds,"86b7bd9 revert: refactor(router): cleanup, simplification
"
caebca037c15b768bfcec4141f7ffcb516b9a6bb,angular/upgrade-builds,"fb4d84d refactor(core): Refactor IterableDiffers#create method (#21383)
"
1dd3996cdb9cdfe94f3803c8f26bd430fa48e987,angular/upgrade-builds,"3ab25ab refactor: fix broken linting rules due to revert
"
c5a54b80da3673d128fff7802e6dce6f204cae05,angular/upgrade-builds,"2c0c86e fix(compiler): improve the error when template is not a string
"
291ded5a192c3e1a135c130d75138ff34b21d794,angular/upgrade-builds,"3ba5220 refactor(forms): `ngForm` element selector has been deprecated in favor of `ng-form` (#23721)
"
db1bb812cd751c445a0999b42ed35c2bde3661df,angular/upgrade-builds,"abecf3e build(aio): move the `transforms` folder into the `tools` folder
"
acb5bc742885ff189c7afa47001776f5b43dc8c3,angular/upgrade-builds,"2e14130 feat(aio): refactor DocViewer w/ services component builder (#14294)
"
efd41292855a833481d489011a280c310857c724,angular/upgrade-builds,"263c1a1 refactor: remove unused imports of the deprecated Renderer
"
e9275c543d52381ab174b0652451e6a0bed6afa1,angular/upgrade-builds,"8d300ff fix(aio): header click should always toggle expand/collapse (#16439)
"
7b3edaf11e9bf85704bc65388a9d5efa536cccac,angular/upgrade-builds,"5afaa39 refactor(compiler): produce more dense generated code (#16666)
"
09f37cc584548c8af2a23536d88f2467d102596f,angular/upgrade-builds,"3e73bea refactor(compiler): convert metadata classes used in summaries into interfaces (#13123)
"
4ac4417475f7b1f91e40db3ad6217cbb7bd724fa,angular/upgrade-builds,"c2e1311 refactor(aio): rename method (loadContainingCustomElements --> loadContainedCustomElements) (#23944)
"
83e45f0286a3438cddb2d5222bc053e093bccc87,dsherret/ts-simple-ast,"refactor(file-system): Preparing for having the ability to queue deletions.

BREAKING CHANGE: SourceFile/Directory: delete() and deleteSync() are now deleteImmediately() and deleteImmediatelySync().
"
a30f1efeb0643311672bb069ea9af37b423eaeff,dsherret/ts-simple-ast,"refactor: Move more code writing into structureToTexts.
"
ba3bd74ca302418ca0e766f337a5edddf1ffcde6,dsherret/ts-simple-ast,"- Change some ""getCompiler"" methods to return a wrapped Node (it's easier for getting symbols).
- Fix bug when checking if a file exists (it would always return true before)
- Move out enclosing node from Type. User should pass it in when necessary (as is done in ts compiler)
"
44056ca75ab2ee1faabde1cb50bdab5ddb6f49b0,dsherret/ts-simple-ast,"#20 - Improvements for inserting non-comma separated nodes into braces or a source file.

Still lots of cleanup and work to be done.
"
ae7d32b9b6ce1a9a0ebb1fecf2e77bdd9a45be2b,dsherret/ts-simple-ast,"0.29.0 - Implements #18.

Also, change node to compilerNode, make public, and remove getCompilerNode() method. Same for other similar objects (ex. getCompilerType() -> compilerType). This is based on #36.
"
d17f219a68a3a6b34cb8798a538893e4865a973d,dutchcoders/marija-web,"performance boost and huge refactor
"
c4546baaa4057988188c7526b9e0bca9bc10baf2,edenlabllc/ehealth.api,"add list of Employee field (#3452)

* add list of Employee field

* Update apps/graphql/test/web/resolvers/employee_resolver_test.exs

Co-Authored-By: kiurchv <4d482bd878dfd8eb72bb28ae459bca9f89c03d0f@gmail.com>

* Update apps/graphql/test/web/resolvers/employee_resolver_test.exs

Co-Authored-By: kiurchv <4d482bd878dfd8eb72bb28ae459bca9f89c03d0f@gmail.com>

* Update apps/graphql/test/web/resolvers/employee_resolver_test.exs

Co-Authored-By: kiurchv <4d482bd878dfd8eb72bb28ae459bca9f89c03d0f@gmail.com>

* Update apps/graphql/test/web/resolvers/employee_resolver_test.exs

Co-Authored-By: kiurchv <4d482bd878dfd8eb72bb28ae459bca9f89c03d0f@gmail.com>

* add insert_list helper

* add get_by_id Employee field

* fix nhs_legal_entity reference
"
0757cce3aca7f736cbb306abab9027a4dd1fe63c,edenlabllc/ehealth.api,"Reimbursement (#929)

* WIP: Pharmacy registration (#923) (#924)

* Pharmacy registration (#923)

* add type to ukr_med_registry

* add pharmacy kveds migration

* support pharmacy in kveds validator

* update creating legal entity logic to respect type

* filter legal_entities by type

* add pharmacy to personal type token

* WIP: Create employee request#742 (#906) (#907)

* Create employee request#742 (#906)

* validate doctor on employee request creating

* allow to create pharmacist

* deactivate pharmacy owners when create new pharmacy owner

* show pharmacist info at employee view

* update deactivate employee for pharmacist

* show pharmacist info at employee list

* remove unused code

* remove unused code, add tests

* configure reimbursement build

* fix creating employee request

* don't do autodeploy for reimbursement
"
a321c2c3e150f7f86f57e61b7b1f7e21e6035369,edenlabllc/ehealth.api,"Split ContractRequest schema (#3711)

* introduce CaptitationCntractRequest type and ContractRequest interface

* setup BDD testing for GraphQL app

* add ContractRequest ""get all"" and ""get specific"" features and step definitions

* update Elixir version for GraphQL app

* fix mix.exs

* use white_bread from hex

* eliminate credo warnings
"
dcbe9fa2cab524da2cc05ad402065462eb570161,github-for-unity/Unity,"Merge master into refactor/rename-views-to-ui
"
e280096ddbe5a6ca846c6d3553566d88050efbe1,github-for-unity/Unity,"Make the view methods more consistent, and make sure all windows call into them

Use OnEnable/OnDisable instead of OnShow/OnHide, it's more consistent with Unity's
naming and our own window class.

AuthenticationView was missing some calls from the window, fixicate.
"
e659480c9c0e29efbba99d59f054442533d66c78,github-for-unity/Unity,"Merge pull request #87 from github-for-unity/fixes/refactor-view

Refactoring BaseWindow and Subview to better handle initialization"
4aeda82395a4a999bd9a94cb5551797be062d0f0,github-for-unity/Unity,"Merge pull request #121 from github-for-unity/fixes/changes-view-refactoring

Refactoring and testing changes view tree model objects"
55449294e4490a62fc38c4eb073bf0beb7b25149,github-for-unity/Unity,"Merge branch 'fixes/task-cleanup' into enhancements/download-functionality
"
3af456196b064af641aae1d1859bddf90cf1c514,github-for-unity/Unity,"Make it possible to branch out on task success and failure. Cleanups

Kill some unused code in the task system, mainly the Defer paths
which we aren't using anymore
Add a way of calling different tasks depending on the success or failure
of the previous task.
Add some different ways of setting the result of a task beyond the
value returned by the previous task, mainly for seeding initial
values.
"
38ca462c6b946a23b950d3cd2e3f3a9eecfd2b81,github-for-unity/Unity,"Removing an assortment of commented code
"
75a3786fec1f1e719664894a3620a0407337a3d4,github-for-unity/Unity,"Merge pull request #101 from github/fixes/clean-up-settings-and-utility

Clean up settings, move more things out of utility"
bac56f27d62b057d9f12a13d1d409af32e483740,github-for-unity/Unity,"Merge pull request #375 from github-for-unity/fixes/cleanup

Warning cleanup"
674e3892287091012d0a802f23d2f8ec7cd82145,jam1garner/Smash-Forge,"wireframe refactoring
"
41f598a767556d3150e8fa18c996e4eeafa01972,jam1garner/Smash-Forge,"use texture instead of int for nut
"
8bb32b1f8ec1296242185bcae2355e1402971e51,jam1garner/Smash-Forge,"camera transforms refactoring
"
394c69293a4245549f54da6088255ca7df2cc5e0,jam1garner/Smash-Forge,"Merge pull request #206 from jam1garner/cube-map-display

Cube Map Display, Rendering Rework"
88ca6edef853e975a53189c7d5c6d706213f75c3,jam1garner/Smash-Forge,"Merge pull request #180 from jam1garner/rendering_rework

Rendering Rework"
6701447f6b90e1f75d9cc4f1f1201b395c0548c4,jcubic/jquery.terminal,"Refactor process_command function
"
6875a1c5dc52401294a11dceeb36b1e548416d6a,jcubic/jquery.terminal,"remove duplicated source maps #430
"
86b6614a0c75f5ae2bfaf458de0a44187d87d79a,linux-test-project/ltp,"syscalls: open12, openat02: Fixes.

* Unify the cloexec test on $TCID_child

* Add forgotten .gitignore records for them

* Remove tst_require_root() from setup
  (these tests can run without root just fine)

Signed-off-by: Cyril Hrubis <e0c73f351b538f846f03d0c22a5583b41bce619a@suse.cz>
"
b1ef993d71df0692b929aea6983ffc909e8a4ee9,linux-test-project/ltp,"Intial Addition of sync_file_range() syscall test to LTP. I have developed test cases for sync_file_range() system call which will do the basic sanity (error) checking for the system call.  These tests have to be run on 2.6.17 kernel and above. The test cases have been currently tested only on x86 and x86_64 architecture. Also,  I have hard coded the system call number in the test case for  review purposes and will be later on moving it to linux_syscall_numbers.h file in the LTP framework. The support for PowerPC was provided from 2.6.22 kernel onwards. I had not taken care of it in my previous patch. Now this is addressed. Signed-Off-By: ""B. N. Poornima"" <poornima@in.ibm.com>.
"
bfaa4200dfa4c815063e13f369b09fd81b4cdd08,lucas-clemente/quic-go,"move all error things to new qerr package, replacing errorcodes
"
6150c19dcb3fe0be295b94ae8501ba9d69a70fce,lucas-clemente/quic-go,"remove unused perspective from header writing
"
eb8ee42d759762184a33512880dd7c3fcc9f92a4,lucas-clemente/quic-go,"Merge pull request #1424 from lucas-clemente/header-refactoring

refactor header parsing"
240946dfde3417981faae45ef87c0cf1d7654ce8,lucas-clemente/quic-go,"replace version number literals with constants to make grepping easier
"
1875faf2329a6570b151ba9334e46022c5e9fbb7,meetecho/janus-gateway,"Remove unneeded allocations checking

Since commit 1f067658 (""Converted memory allocations to GLib ones, and
fixed a couple of leaks""), allocations are done with g_malloc() and
others. According to GLib documentation, these functions always return a
valid pointer, aborting the program when memory could not be allocated.
This effectively makes the checks useless, so remove them.
"
dc17f9895fed9b1de0aa44b74f0b0052bb87bd7c,meetecho/janus-gateway,"Removed extra/unneeded calls to json_decref
"
0788b0e5767ef25ee12cc69ad2022aeeffaf37e9,meetecho/janus-gateway,"Removed unneeded checks
"
8b077d0d4395b224bdd2ec04f8033b508f07fc39,mercadopago/px-android,"view controllers refactor
"
d1d03986021a8c08f9ddfb38628c0a2bc9bb378f,mercadopago/px-android,"Refactor rejection code
"
d3d32824ce7995b2fcd802ffded7ba5a33be8c86,mercadopago/px-android,"refactors
"
51ef4342c2136b5f9eebf4845eac3780d953a6a9,mercadopago/px-android,"[refactor] checkout activity/checkout presenter step 2


"
a4e9bca4526ba54a52569a868e3e512e9a51ab07,mercadopago/px-android,"field active activity rename
"
e8bdc6143c49c38dd527bb8990d7893fe27506fe,mobxjs/mobx-state-tree,"Some README improvements
"
3b7bbfa3fc314897931df3af2288de5ef19d3681,mobxjs/mobx-state-tree,"Fix grammatical error, rename amount to number
"
cf0d76447865a6915a77c30406d744fddf334a7f,mobxjs/mobx-state-tree,"Introduced  to make it possible to refer to a type using typeof
"
4446993817a896307467f5f48fad0dda25dbc3f1,mobxjs/mobx-state-tree,"WIP: factoring out mabeMST
"
0fce2697ae5649a39b108f24f076a2b4bc784ae3,mobxjs/mobx-state-tree,"removed unnecessary closures from model/array/map
"
97e255b055d9b330d18aaaab6c59ddf27358d23b,mobxjs/mobx-state-tree,"Merge pull request #267 from mobxjs/improved-actions

Introduce async actions, implements #266"
391f462df7b2a5ac72429e3e28b77b061f2e64d0,opencobra/cobratoolbox,"first attempt to rewrite initCobraToolbox and changeCobraSolver.
"
a01f9dc697ec2266b4b67da39f92f16703f6fd3c,pierreguillot/Camomile,"Improve UI window name with track properties
"
345bbe28ba0513d3af123c38a63f9824725ee403,pierreguillot/Camomile,"update travis & remove unused makefile
"
65a0cf8a13013d7b71320bcf956efaf926c629c6,quasarframework/quasar,"refactor: Update globals to latest spec
"
caa77c2f2d6610ca4a609f8cb49941f1d88b24d4,raiguard/ModernGadgets,"Process settings update & input box cleanup
"
0c667fd554da16f45e17d718bf0940ea6f42ac4b,raiguard/ModernGadgets,"Tidy up settings
"
400c1989ccf9616e73032a43de200860b827ff31,severalnines/s9s-tools,"Working on backup: cleanup.
"
6e3aab4aa5f72bbcd513ef717b4f51ff71c66ab5,severalnines/s9s-tools,"Cleanup.
"
50aaec84d4ce8ff656f91d1a4f5b4a91d21afb7c,severalnines/s9s-tools,"Polishing metatype functions.
"
95c8f28e4f54421c2aa35e24a3606e583071d05f,severalnines/s9s-tools,"Removed an unused variable
"
01f17ae208c1bd9e70fa7fc76f5463aa46602815,stinsonga/emacs-mirror,"* abbrevs.texi (Abbrev Mode): abbrev-mode is an option.

* backups.texi (Making Backups): backup-directory-alist and
make-backup-file-name-function are options.
(Auto-Saving): auto-save-list-file-prefix is an option.

* buffers.texi (Killing Buffers): buffer-offer-save is an
option.

* display.texi (Refresh Screen): no-redraw-on-reenter is an
option.
(Echo Area Customization): echo-keystrokes is an option.
(Selective Display): selective-display-ellipses is an option.
(Temporary Displays): temp-buffer-show-function is an option.
(Face Attributes): underline-minimum-offset and x-bitmap-file-path
are options.
(Font Selection): face-font-family-alternatives,
face-font-selection-order, face-font-registry-alternatives, and
scalable-fonts-allowed are options.
(Fringe Indicators): indicate-buffer-boundaries is an option.
(Fringe Cursors): overflow-newline-into-fringe is an option.
(Scroll Bars): scroll-bar-mode is an option.

* eval.texi (Eval): max-lisp-eval-depth is an option.

* files.texi (Visiting Functions): find-file-hook is an option.
(Directory Names): directory-abbrev-alist is an option.
(Unique File Names): temporary-file-directory and
small-temporary-file-directory are options.

* frames.texi (Initial Parameters): initial-frame-alist,
minibuffer-frame-alist and default-frame-alist are options.
(Cursor Parameters): blink-cursor-alist and
cursor-in-non-selected-windows ar options.
(Window System Selections): selection-coding-system is an
option.
(Display Feature Testing): display-mm-dimensions-alist is an
option.

* help.texi (Help Functions): help-char and help-event-list are
options.

* keymaps.texi (Functions for Key Lookup): meta-prefix-char is
an option.

* minibuf.texi (Minibuffer History): history-length and
history-delete-duplicates are options.
(High-Level Completion): read-buffer-function and
read-buffer-completion-ignore-case are options.
(Reading File Names): read-file-name-completion-ignore-case is
an option.

* modes.texi (Mode Line Top): mode-line-format is an option.
(Mode Line Variables): mode-line-position and mode-line-modes
are options.

* nonascii.texi (Text Representations):
enable-multibyte-characters is an option.
(Default Coding Systems): auto-coding-regexp-alist,
file-coding-system-alist, auto-coding-alist and
auto-coding-functions are options.
(Specifying Coding Systems): inhibit-eol-conversion is an
option.

* os.texi (Init File): site-run-file is an option.
(System Environment): mail-host-address is an option.
(User Identification): user-mail-address is an option.
(Terminal Output): baud-rate is an option.

* positions.texi (Word Motion): words-include-escapes is an
option.

* searching.texi (Standard Regexps): page-delimiter,
paragraph-separate, paragraph-separate and sentence-end are
options.

* text.texi (Margins): left-margin and fill-nobreak-predicate
are options.

* variables.texi (Local Variables): max-specpdl-size is an
option.

* windows.texi (Choosing Window):
split-window-preferred-function, special-display-function and
display-buffer-function are options.
"
2cbff44e85755b72ad81a39c481195170634a310,stinsonga/emacs-mirror,"Split into admin/notes/unicode,font-backend
"
e8937de5547a687b6d03199368645f168cb8ad37,stinsonga/emacs-mirror,"Replace GROUP argument in six window primitives by new functions.

* doc/lispref/windows.texi (Window Start and End, Textual Scrolling)
* doc/lispref/positions.texi (Screen Lines): Remove optional GROUP argument
from description of six window functions.  Add in description of new functions
window-group-start, window-group-end, set-window-group-start,
pos-visible-in-window-group-p, recenter-group and move-to-window-group-line,
together with the six variables indirecting to the pertinent group
functions.

* src/window.c
* src/keyboard.c: Revert the commit from 2015-11-11 12:02:48, in so far as it
applies to these two files, which added the GROUP argument to six window
primitives.

* lisp/follow.el (follow-mode): Use updated variable names for the indirected
functions.

* lisp/isearch.el (isearch-update, isearch-done, isearch-string-out-of-window)
(isearch-back-into-window, isearch-lazy-highlight-new-loop)
(isearch-lazy-highlight-search, isearch-lazy-highlight-update): Replace calls
to window primitives (e.g. window-start) with a GROUP argument by calls to
new functions (e.g. window-group-start).

* lisp/ispell.el (ispell-command-loop): Replace call to
pos-visible-in-window-p with pos-visible-in-window-group-p.

* lisp/window.el (window-group-start, window-group-end)
(set-window-group-start, recenter-group, pos-visible-in-window-group-p)
(selected-window-group, move-to-window-group-line): New functions.
(window-group-start-function, window-group-end-function)
(set-window-group-start-function, recenter-group-function)
(pos-visible-in-window-group-p-function, selected-window-group-function)
(move-to-window-group-line-function): New variables.
"
f4b6ba46b857e140c6482c0542c70fc989b1fe85,stinsonga/emacs-mirror,"Support MS-Windows build and reversed rows in GUI frames; add initial docs.

 doc/emacs/mule.texi (International): Mention support of
 bidirectional editing.
 (Bidirectional Editing): New section.
 etc/HELLO: Reorder Arabic and Hebrew into logical order, and
 insert RLM before the opening paren, to make the display more
 reasonable.  Add setting for bidi-display-reordering in the local
 variables section.
 lisp/files.el: Make bidi-display-reordering safe variable for
 boolean values.
 src/xdisp (append_glyph): If the glyph row is reversed, prepend the
 glyph rather than appending it.
 src/makefile.w32-in (OBJ1): Add $(BLD)/bidi.$(O).
 ($(BLD)/bidi.$(O)): New target.
"
9ce1d38890a77e93af0d20f51c53419c097200d3,stinsonga/emacs-mirror,"Use curved quotes in core elisp diagnostics

In the core elisp files, use curved quotes in diagnostic formats,
so that they follow user preference as per ‘text-quoting-style’
rather than being hard-coded to quote `like this'.
* lisp/abbrev.el (expand-region-abbrevs):
* lisp/button.el (button-category-symbol, button-put)
(make-text-button):
* lisp/cus-start.el:
* lisp/custom.el (custom-add-dependencies, custom-check-theme)
(custom--sort-vars-1, load-theme):
* lisp/emacs-lisp/byte-run.el (defun, defsubst):
* lisp/emacs-lisp/cl-generic.el (cl-defgeneric)
(cl-generic-generalizers):
* lisp/emacs-lisp/macroexp.el (macroexp--obsolete-warning):
* lisp/emacs-lisp/map-ynp.el (map-y-or-n-p):
* lisp/emacs-lisp/nadvice.el (advice--make-docstring)
(advice--make, define-advice):
* lisp/emacs-lisp/tabulated-list.el (tabulated-list-put-tag):
* lisp/emacs-lisp/timer.el (timer-event-handler):
* lisp/env.el (setenv):
* lisp/facemenu.el (facemenu-add-new-face)
(facemenu-add-new-color):
* lisp/faces.el (face-documentation, read-face-name)
(face-read-string, read-face-font, face-spec-set-match-display)
(read-color, x-resolve-font-name):
* lisp/files.el (locate-user-emacs-file, find-alternate-file)
(set-auto-mode, hack-local-variables)
(hack-one-local-variable--obsolete)
(dir-locals-set-directory-class, write-file)
(basic-save-buffer, delete-directory, copy-directory)
(recover-session, recover-session-finish, insert-directory)
(file-modes-char-to-who, file-modes-symbolic-to-number)
(move-file-to-trash):
* lisp/font-lock.el (font-lock-fontify-buffer):
* lisp/format.el (format-write-file, format-find-file)
(format-insert-file):
* lisp/frame.el (get-device-terminal, select-frame-by-name):
* lisp/fringe.el (fringe--check-style):
* lisp/help.el (describe-minor-mode-from-indicator):
* lisp/image.el (image-type):
* lisp/international/fontset.el (x-must-resolve-font-name):
* lisp/international/mule-cmds.el (prefer-coding-system)
(select-safe-coding-system-interactively)
(select-safe-coding-system, activate-input-method)
(toggle-input-method, describe-current-input-method):
* lisp/international/mule-conf.el (code-offset):
* lisp/mouse.el (minor-mode-menu-from-indicator):
* lisp/replace.el (query-replace-read-from)
(occur-after-change-function, occur-1):
* lisp/scroll-bar.el (scroll-bar-columns):
* lisp/simple.el (execute-extended-command)
(undo-outer-limit-truncate, compose-mail, set-variable)
(choose-completion-string, define-alternatives):
* lisp/startup.el (site-run-file, tty-handle-args, )
(command-line, command-line-1):
* lisp/subr.el (noreturn, define-error, add-to-list)
(read-char-choice):
* lisp/term/common-win.el (x-handle-xrm-switch)
(x-handle-name-switch, x-handle-args):
* lisp/term/x-win.el (x-handle-parent-id, x-handle-smid):
Use curved quotes in diagnostics.
* lisp/international/mule.el (find-auto-coding):
Use "" to quote in a diagnostic, to be consistent with the rest of
this file.
"
b313f9d86378db4dd4619923572b07513c53ceac,stinsonga/emacs-mirror,"* regex.c (RETALLOC_IF): Define only if needed.

(WORDCHAR_P): Likewise.  This one is never needed, but is used
only in a comment talking about a compiler bug, so put inside
the #if 0 of that comment.
(CHARSET_LOOKUP_BITMAP, FAIL_STACK_FULL, RESET_FAIL_STACK):
(PUSH_FAILURE_ELT, BUF_PUSH_3, STOP_ADDR_VSTRING):
Remove; unused.
"
f56d71a5961e6b6ccc5108ee624d6292d562661d,stinsonga/emacs-mirror,"(vc-status-kill-dir-status-process): Simplify.
(vc-status-refresh): Make sure the buffer is live.
"
d5111d525f134d0a1f15c61d16d59b20d824f552,stinsonga/emacs-mirror,"shr cleanup and background color fix

(shr-table-widths): Off-by-one error in width computation.
(shr-expand-newlines): Remove dead code.
(shr-insert-table): Extend background colors to the end of the column.
"
fcd42c11c0e0e5fa3ab931ad2126b1d855ba240f,stinsonga/emacs-mirror,"Unify Fx_focus_frame between all ports.
* src/frame.h (x_focus_frame): New prototype.
* src/xfns.c (Fx_focus_frame): Remove.
(syms_of_xfns): Do not defsubr it.
(x_focus_frame): X implementation.
* src/nsfns.m (Fx_focus_frame): Remove.
(syms_of_nsfns): Do not defsubr it.
(x_focus_frame): NS implementation.
* src/w32term.c (Fx_focus_frame): Remove.
(x_focus_on_frame): Rename to...
(x_focus_frame): W32 implementation.
* src/w32term.h (x_focus_on_frame): Remove prototype.
* src/w32fns.c (Fx_focus_frame): Remove.
(syms_of_w32fns): Do not defsubr it.
* src/frame.c (Fx_focus_frame): Define here.
(syms_of_frame): Defsubr here.
* src/gtkutil.c (xg_tool_bar_callback): Use x_focus_frame.
* lisp/frame.el (x-focus-frame): Mark as declared in frame.c.
"
a3720aa275043aa5ee0f14c8a342183d293d6ae7,stinsonga/emacs-mirror,"Follow variable naming convention

* src/gnutls.c (QCgnutls_bootprop_priority)
(QCgnutls_bootprop_trustfiles, QCgnutls_bootprop_keylist)
(QCgnutls_bootprop_crlfiles, QCgnutls_bootprop_callbacks)
(QCgnutls_bootprop_loglevel, QCgnutls_bootprop_hostname)
(QCgnutls_bootprop_min_prime_bits, QCgnutls_bootprop_verify_flags)
(QCgnutls_bootprop_verify_hostname_error)
(QCgnutls_bootprop_callbacks_verify): Rename from
Qgnutls_bootprop_..., all uses changed.

* src/xfaces.c (QCignore_defface): Rename from Qignore_defface, all
uses changed.
"
3eb93c07f7a60ac9ce8a16f10c3afd5a3a31243a,stinsonga/emacs-mirror,"Rely on conservative stack scanning to find ""emacs_value""s

* src/emacs-module.c (struct emacs_value_tag)
(struct emacs_value_frame, struct emacs_value_storage): Remove.
(value_frame_size): Remove constant.
(struct emacs_env_private): Use Lisp_Object for non_local_exit info.
(lisp_to_value): Remove first arg.
(module_nil): New constant.
Use it instead of NULL when returning an emacs_value.
(module_make_function): Adjust to new calling convention of
Qinternal_module_call.
(DEFUN): Receive args in an array rather than a list.
Use SAFE_ALLOCA rather than xnmalloc.  Skip the lisp_to_value loop when
we don't have WIDE_EMACS_INT.  Adjust to new type of non_local_exit info.
(module_non_local_exit_signal_1, module_non_local_exit_throw_1):
Adjust to new type of non_local_exit info.
(ltv_mark) [WIDE_EMACS_INT]: New constant.
(value_to_lisp, lisp_to_value): Rewrite.
(initialize_frame, initialize_storage, finalize_storage): Remove functions.
(allocate_emacs_value): Remove function.
(mark_modules): Gut it.
(initialize_environment): Don't initialize storage any more.
Keep the actual env object on Vmodule_environments.
(finalize_environment): Don't finalize storage any more.
(syms_of_module): Initialize ltv_mark and module_nil.

* src/emacs-module.h (emacs_value): Make it more clear that this type
is really opaque, including the fact that NULL may not be valid.

* modules/mod-test/mod-test.c (Fmod_test_signal, Fmod_test_throw):
Don't assume that NULL is a valid emacs_value.
"
ae4969c2d69a74c896eb49c9a34aeb645ffed082,stinsonga/emacs-mirror,"term: rework color cutomizing

* term.el (term-handle-colors-array): Use a set of new faces to
color the terminal.  Also uses :inverse-video property.
(term-default-fg-color): Set to nil by default, deprecate in favor
of `term-face'.
(term-default-bg-color): Set to nil by default, deprecate in favor
of `term-face'.
(term-current-face): Use `term-face' by default.
(term-bold-attribute): Variable deleted.
"
6b42bcfcfdb7269f5c470f39fc06337b79e1ef03,stinsonga/emacs-mirror,"Fix the MSDOS build as fallout of latest changes.

 msdos/sedlibmk.inp (allocator.$(OBJEXT), careadlinkat.$(OBJEXT)): Fix
 editing out.
 msdos/sed2v2.inp (IS_DEVICE_SEP): Edit to match ':'.
 (IS_DIRECTORY_SEP, INTERNAL_TERMINAL): Fix Sed command syntax.
 (MSDOS): Define only if undefined, as MSDOS is a built-in macro,
 unless some std= switch to GCC is used.

 src/msdos.c (dos_set_window_size, IT_update_begin)
 (IT_frame_up_to_date, IT_set_frame_parameters): Use FVAR and WVAR
 instead of direct references.
"
74244d239e9093035c369721b469529a5fdaf1c6,stinsonga/emacs-mirror,"Better isolate code that assumes NIL_IS_ZERO

Suggested by Stefan Monnier in:
http://lists.gnu.org/archive/html/emacs-devel/2015-01/msg00588.html
* alloc.c (allocate_pseudovector):
Use memclear, not memsetnil, to remove a 'verify'.
* callint.c (Fcall_interactively):
* dispnew.c (realloc_glyph_pool):
* xdisp.c (init_iterator):
Use memclear, not memset, to remove a 'verify'.
* lisp.h (memclear): Rename from memsetnil, and take a byte
count rather than a word count.  All callers changed.
"
f1ea2b9e6b63593f5919f60a68a9e19026756ac4,stinsonga/emacs-mirror,"Fix lisp_eval_depth in unwind-protect cleanup

Problem reported by Paul Pogonyshev (Bug#33034).
* src/lisp.h (union specbinding): New member unwind.eval_depth.
* src/eval.c (record_unwind_protect, set_unwind_protect): Set it.
(do_one_unbind): Use it.
"
340074e936c4393e42364b3c52b238a629571fc5,stinsonga/emacs-mirror,"* m/amdx86-64.h (HAVE_LIB64_DIR): Consolidate ifdefs.
* m/alpha.h (TEXT_END):
* m/ibmrs6000.h (TEXT_END):
* m/macppc.h (TEXT_END):
* s/darwin.h (TEXT_END):
* s/msdos.h (TEXT_END): Remove, unused.
* s/gnu-linux.h (BSD_PGRPS): Add a comment.
* s/cygwin.h: Remove comment.
"
b788a98d136af5e841e8e521f6900b703a294743,stinsonga/emacs-mirror,"* emacs-lisp/authors.el (authors-renamed-files-alist):
Add entries for INSTALL.CVS.
"
f60e429a1a1a0d6a51761ef12e54dde52967f085,stinsonga/emacs-mirror,"Redesign redisplay interface to drop global output_cursor.
* dispextern.h (struct redisplay_interface): Remove cursor_to member.
(toplevel): Remove declaration of output_cursor.
(set_output_cursor, x_cursor_to): Remove prototype.
* window.h (struct window): New member output_cursor.
(output_cursor_to): New function to replace RIF member.
* dispnew.c (redraw_overlapped_rows, update_marginal_area)
(update_text_area, set_window_cursor_after_update): Use it.
* xdisp.c (output_cursor, set_output_cursor, x_cursor_to): Remove.
(x_write_glyphs, x_insert_glyphs, x_clear_end_of_line):
* nsterm.m (ns_update_window_begin, ns_update_window_end):
* w32term.c (x_update_window_begin, x_update_window_end):
* xterm.c (x_update_window_begin, x_update_window_end):
Adjust to use per-window output cursor.
"
374f6a5f34a83d3e4c518f0726558642293fdd71,stinsonga/emacs-mirror,"Port --enable-gcc-warnings to GCC 6.1

* configure.ac (WERROR_CFLAGS): Omit -Wunused-const-variable=2.
* lib-src/etags.c (LOOKING_AT, LOOKING_AT_NOCASE):
Omit test whether pointer plus a constant equals a null pointer.
* src/alloc.c (compact_small_strings):
Avoid pointer arithmetic on null pointers.
* src/alloc.c (mark_face_cache):
* src/fontset.c (free_realized_fontsets, Fset_fontset_font):
* src/fringe.c (draw_fringe_bitmap_1)
(Fset_fringe_bitmap_face):
* src/macfont.m (macfont_draw):
* src/msdos.c (IT_set_face, IT_clear_screen):
* src/nsfont.m (nsfont_draw):
* src/nsterm.h (FRAME_DEFAULT_FACE):
* src/nsterm.m (ns_draw_window_cursor)
(ns_draw_vertical_window_border, ns_draw_window_divider)
(ns_dumpglyphs_box_or_relief)
(ns_maybe_dumpglyphs_background, ns_dumpglyphs_image)
(ns_dumpglyphs_stretch):
* src/w32term.c (w32_draw_vertical_window_border)
(w32_draw_window_divider, x_set_mouse_face_gc):
* src/xdisp.c (estimate_mode_line_height, init_iterator)
(handle_face_prop, handle_single_display_spec, pop_it)
(CHAR_COMPOSED_P, get_next_display_element)
(next_element_from_display_vector, extend_face_to_end_of_line)
(fill_gstring_glyph_string,BUILD_COMPOSITE_GLYPH_STRING):
* src/xfaces.c (Finternal_merge_in_global_face, Fface_font)
(lookup_named_face):
* src/xterm.c (x_draw_vertical_window_border)
(x_draw_window_divider, x_set_mouse_face_gc):
Prefer FACE_OPT_FROM_ID to FACE_FROM_ID when the result might be null.
* src/xterm.c (try_window_id):
Redo loop to convince GCC 6.1 that it is null pointer safe.
(x_color_cells):
Use eassume as necessary to pacify GCC 6.1.
* src/dispextern.h (FACE_FROM_ID, IMAGE_FROM_ID): Now returns non-null.
(FACE_OPT_FROM_ID, IMAGE_OPT_FROM_ID): New macro, with the old
behavior of the non-_OPT macro, to be used when the result
might be a null pointer.
* src/dispnew.c (buffer_posn_from_coords, marginal_area_string)
[HAVE_WINDOW_SYSTEM]:
* src/intervals.h (INTERVAL_WRITABLE_P):
* src/term.c (turn_off_face):
* src/xdisp.c (get_glyph_face_and_encoding, fill_image_glyph_string)
(produce_image_glyph, produce_xwidget_glyph):
* src/xfaces.c (lookup_named_face):
Remove unnecessary test for null pointer.
* src/keyboard.c (read_char): Suppress bogus -Wclobbered warning.
* src/process.c (would_block): New function.
(server_accept_connection, wait_reading_process_output, send_process):
Use it.
* src/xdisp.c (get_window_cursor_type, note_mouse_highlight):
Prefer IMAGE_OPT_FROM_ID to IMAGE_FROM_ID when the result
might be null.
"
1a13852e906ca4f4f98a65106496d2cb1c517d64,stinsonga/emacs-mirror,"Final preparations for new window resize code.

* window.c (replace_window): Rename second argument REPLACEMENT to
NEW.  New third argument SETFLAG.  Rewrite.
(delete_window, make_dummy_parent): Call replace_window with
third argument 1.
(window_list_1): Move down in code.
(run_window_configuration_change_hook): Move set_buffer part
before select_frame_norecord part in order to unwind correctly.
Rename count1 to count.
(recombine_windows, delete_deletable_window, resize_root_window)
(Fdelete_other_windows_internal)
(Frun_window_configuration_change_hook, make_parent_window)
(resize_window_check, resize_window_apply, Fresize_window_apply)
(resize_frame_windows, Fsplit_window_internal)
(Fdelete_window_internal, Fresize_mini_window_internal): New
functions.
(syms_of_window): New variables Vwindow_splits and Vwindow_nest.
"
9d5cb6312b5e6ad61c7cdb5a1282d81e677899f2,stinsonga/emacs-mirror,"Make epa-file progress message user-friendly.

* epa.el (epa-progress-callback-function): Fix the logic of
displaying progress.
* epa-file.el (epa-file-insert-file-contents): Make progress
display more user-friendly.
(epa-file-write-region): Ditto.
"
5d9c6f17db619edad416c35559e56319a66333ae,stinsonga/emacs-mirror,"* doc/misc/calc.texi (Basic Operations on Units):
  (Customizing Calc): Mention the variable `calc-allow-units-as-numbers'.

* lisp/calc/calc.el (calc-allow-units-as-numbers): New variable.
* lisp/calc/calc-units.el (calc-convert-units): Use new variable.
"
50c117fe86d94719807cbe08353c032779b3b910,stinsonga/emacs-mirror,"EIEIO: Change class's representation to unify instance & class slots

* lisp/emacs-lisp/eieio-core.el (eieio--class): Change field names and order
to match those of cl--class; use cl--slot for both instance slots and
class slots.
(eieio--object-num-slots): Use cl-struct-slot-info.
(eieio--object-class): Rename from eieio--object-class-object.
(eieio--object-class-name): Remove.
(eieio-defclass-internal): Adjust to new slot representation.
Store doc in class rather than in `variable-documentation'.
(eieio--perform-slot-validation-for-default): Change API to take
a slot object.
(eieio--slot-override): New function.
(eieio--add-new-slot): Rewrite.
(eieio-copy-parents-into-subclass): Rewrite.
(eieio--validate-slot-value, eieio--validate-class-slot-value)
(eieio-oref-default, eieio-oset-default)
(eieio--class-slot-name-index, eieio-set-defaults): Adjust to new
slot representation.
(eieio--c3-merge-lists): Simplify.
(eieio--class/struct-parents): New function.
(eieio--class-precedence-bfs): Use it.

* lisp/emacs-lisp/eieio.el (with-slots): Use macroexp-let2.
(object-class-fast): Change recommend replacement.
(eieio-object-class): Rewrite.
(slot-exists-p): Adjust to new slot representation.
(initialize-instance): Adjust to new slot representation.
(object-write): Adjust to new slot representation.

* lisp/emacs-lisp/eieio-base.el (eieio-persistent-convert-list-to-object):
Manually map initargs to slot names.
(eieio-persistent-validate/fix-slot-value): Adjust to new
slot representation.

* lisp/emacs-lisp/eieio-compat.el (eieio--generic-static-symbol-specializers):
Extract from eieio--generic-static-symbol-generalizer.
(eieio--generic-static-symbol-generalizer): Use it.

* lisp/emacs-lisp/eieio-custom.el (eieio-object-value-create)
(eieio-object-value-get): Adjust to new slot representation.

* lisp/emacs-lisp/eieio-datadebug.el (data-debug/eieio-insert-slots):
Declare to silence warnings.
(data-debug-insert-object-button): Avoid `object-slots'.
(data-debug/eieio-insert-slots): Adjust to new slot representation.

* lisp/emacs-lisp/eieio-opt.el (eieio--help-print-slot): New function
extracted from eieio-help-class-slots.
(eieio-help-class-slots): Use it.  Adjust to new slot representation.

* test/automated/eieio-test-methodinvoke.el (make-instance): Use new-style
`subclass' specializer for a change.

* test/automated/eieio-test-persist.el (persist-test-save-and-compare):
Adjust to new slot representation.

* test/automated/eieio-tests.el (eieio-test-17-virtual-slot): Don't use
initarg in `oset'.
(eieio-test-32-slot-attribute-override-2): Adjust to new
slot representation.

* lisp/emacs-lisp/cl-preloaded.el (cl--class): Fix type of `parents'.
"
5d68dc9a2fd1b9b883db6bc1c226541b50de8bb1,stinsonga/emacs-mirror,"Change vectorlike from struct to union

* src/lisp.h (vectorlike_headed): Change from struct to union.
All uses changed.  Since it has only one member, this does not
change semantics.  This is designed to simplify future changes
needed to fix bugs like Bug#29040.  All uses changed.
"
afd4052b6c0cf0deb49b709a41d43748c773a3d0,stinsonga/emacs-mirror,"* process.c (create_pty): Remove unnecessary ""volatile""s.
"
3226d6cacf15156b8760600be0c6b2aac4dac26d,stinsonga/emacs-mirror,"Remove some functions, variables and aliases obsolete since at least 21.1.

* doc/misc/misc.texi (Shell Mode): Remove reference to old function name.

* src/character.c (Fchar_bytes): Remove obsolete function.
(syms_of_character): Remove Schar_bytes.
* lisp/subr.el (char-bytes): Remove obsolete function.

* lisp/emacs-lisp/checkdoc.el (checkdoc-minor-keymap): Remove obsolete alias.

* lisp/isearch.el (isearch-return-char): Remove obsolete function.

* lisp/mouse.el: No longer provide mldrag.
(mldrag-drag-mode-line, mldrag-drag-vertical-line):
Remove obsolete aliases.

* lisp/comint.el (comint-kill-output): Remove obsolete alias.

* lisp/shell.el: Comment fix.

* lisp/composite.el (decompose-composite-char): Remove obsolete function.
* lisp/ps-def.el (decompose-composite-char): Remove unused function.

* lisp/iswitchb.el (iswitchb-default-keybindings): Remove obsolete function.

* lisp/outline.el (outline-visible): Remove obsolete function.

* lisp/term/pc-win.el (x-frob-font-slant, x-frob-font-weight):
* lisp/faces.el (internal-find-face, internal-get-face)
(frame-update-faces, frame-update-face-colors)
(x-frob-font-weight, x-frob-font-slant)
(internal-frob-font-weight, internal-frob-font-slant)
(x-make-font-bold, x-make-font-demibold, x-make-font-unbold)
(x-make-font-italic, x-make-font-oblique, x-make-font-unitalic)
(x-make-font-bold-italic): Remove functions and aliases, obsolete
since Emacs 21.1.
* lisp/emulation/viper-util.el (viper-get-face):
* lisp/obsolete/lucid.el (find-face, get-face): Use facep.
* lisp/vc/ediff-init.el (ediff-valid-color-p, ediff-get-face):
Remove unused functions.
* lisp/vc/ediff-util.el (ediff-submit-report): Doc fix.

* etc/NEWS: Mention above changes.
"
30fe9bf45903a63132d13597f53fa21ee7a069f4,stinsonga/emacs-mirror,"Remove unneeded #define POSIX

* src/s/gnu-linux.h, src/s/sol2-6.h: No longer define POSIX,
unused since 2011-01-17 change to systty.h.

* admin/CPP-DEFINES: Related edit.
"
49a053fc5b27c7d1a32c42301fc66657dfc396ae,stinsonga/emacs-mirror,"Address some ""unused lexical variable"" warnings

* lisp/dframe.el (x-sensitive-text-pointer-shape, x-pointer-shape): Declare.

* lisp/eshell/esh-io.el (x-select-enable-clipboard): Declare.

* lisp/erc/erc-button.el (erc-button-add-buttons):
* lisp/eshell/em-cmpl.el (eshell-complete-parse-arguments):
* lisp/eshell/em-hist.el (eshell/history, eshell-isearch-backward):
* lisp/eshell/em-pred.el (eshell-parse-modifiers, eshell-pred-file-time):
Remove unused local variables.
"
50bfdd5d78aa015d9032da7e6376665243f3f3b1,stinsonga/emacs-mirror,"Some Tramp minor fixes, found during test campaign.

* net/tramp-adb.el (tramp-adb-file-name-handler-alist)
[make-symbolic-link]: Use `tramp-handle-make-symbolic-link'.

* net/tramp-gvfs.el (tramp-gvfs-file-name-handler-alist)
[make-symbolic-link]: Use `tramp-handle-make-symbolic-link'.
(tramp-gvfs-maybe-open-connection): Set always connection
properties, even if target is mounted already.

* net/tramp-sh.el (tramp-color-escape-sequence-regexp):
Set tramp-autoload cookie.
(tramp-get-remote-touch): New defun.
(tramp-sh-handle-set-file-times): Use it.
(tramp-sh-handle-directory-files-and-attributes):
Use `tramp-handle-directory-files-and-attributes' if neither stat
nor perl are available on the remote host.

* net/tramp-smb.el (tramp-smb-handle-insert-directory): Mark trailing
""/"".  Write long listing only when ""l"" belongs to the switches.

* net/tramp.el (tramp-handle-make-symbolic-link): New defun.
(tramp-check-cached-permissions): Call `file-attributes' if the
cache is empty.

* net/trampver.el: Update release number.
"
42acc58182959fd891b5f4263d900c088de24c13,stinsonga/emacs-mirror,"2008-11-16  Michael Kifer  <kifer@cs.stonybrook.edu>

	* viper-init.el (viper-ESC-keyseq-timeout): Make it into a function
	instead of a variable.

	* viper-util.el (viper-fast-keysequence-p): Changed to use
	viper-ESC-keyseq-timeout as a function.
	(viper-get-saved-cursor-color-in-replace-mode): Use defun instead of
	defsubst.

	* viper-cmd.el: Let line-move-visual to nil when using next-line or
	previous-line.
	(viper-R-state-post-command-sentinel): Use defun instead of defsubst.

	* viper-keym.el (viper-ESC-key): Use (kbd ""ESC"").

	* ediff-util.el (ediff-toggle-multiframe): Check if control window is
	live.
	(ediff-save-buffer): Let window-min-height to 2.

	* ediff-wind.el (ediff-setup-windows-plain-compare): Avoid selecting
	the minibuffer.
"
86bd985ec0060b83fe272e3fcc1d35f19a966ad1,stinsonga/emacs-mirror,"Perform font-specific cleanup when font object is swept by GC.  See
http://lists.gnu.org/archive/html/emacs-devel/2013-10/msg00740.html.
* alloc.c (cleanup_vector): New function.
(sweep_vector): Call it for each reclaimed vector object.
* font.h (struct font): Adjust comment.
"
ebd156110cd758dd0b356424844c8a14dfc4c615,stinsonga/emacs-mirror,"Convert function definitions to standard C.
* src/xterm.c (x_frame_of_widget, x_alloc_nearest_color_for_widget)
(x_alloc_lighter_color_for_widget, cvt_string_to_pixel)
(cvt_pixel_dtor, x_window_to_menu_bar, xt_action_hook)
(xaw_jump_callback, xaw_scroll_callback)
(x_create_toolkit_scroll_bar, x_set_toolkit_scroll_bar_thumb)
(x_wm_set_size_hint, x_activate_timeout_atimer): Convert
definitions to standard C.
* src/xmenu.c (menubar_id_to_frame, popup_get_selection)
(popup_activate_callback, popup_deactivate_callback)
(menu_highlight_callback, menubar_selection_callback)
(apply_systemfont_to_dialog, apply_systemfont_to_menu)
(free_frame_menubar, popup_selection_callback, as)
(create_and_show_popup_menu, dialog_selection_callback)
(create_and_show_dialog):
* src/xfns.c (hack_wm_protocols, x_window):
* src/xfaces.c (x_update_menu_appearance):
* src/widget.c (get_default_char_pixel_size, pixel_to_char_size)
(char_to_pixel_size, round_size_to_char, get_wm_shell)
(set_frame_size, update_wm_hints, setup_frame_gcs)
(update_various_frame_slots, update_from_various_frame_slots)
(EmacsFrameInitialize, EmacsFrameRealize, EmacsFrameResize)
(EmacsFrameSetValues, EmacsFrameQueryGeometry)
(EmacsFrameSetCharSize, widget_store_internal_border): Likewise.
"
9052f9f01ea219b9e9819b3cb3c6bfd9a6751460,stinsonga/emacs-mirror,"calc/calc.el (math-normalize-error): New variable.
(math-normalize): Set `math-normalize-error' to t when there's an error.

calc/calc-alg.el (math-simplify): Don't simplify when `math-normalize'
returns an error.
"
03ab8921a811be962c0fc0b6879fb59e08e7952c,stinsonga/emacs-mirror,"Fix bug #7952 with vertical motion in Grep buffers.

 src/window.c (window_scroll_line_based): Use a marker instead of
 simple variables to record original value of point.
"
d67b4f80dbe514d6e351e7d89c78921c85e7dbe7,stinsonga/emacs-mirror,"* xterm.c (syms_of_xterm):
* xselect.c (syms_of_xselect):
* xmenu.c (syms_of_xmenu):
* xfns.c (syms_of_xfns):
* xfaces.c (syms_of_xfaces):
* xdisp.c (syms_of_xdisp):
* window.c (syms_of_window):
* w32fns.c (syms_of_w32fns):
* undo.c (syms_of_undo):
* textprop.c (syms_of_textprop):
* terminal.c (syms_of_terminal):
* syntax.c (syms_of_syntax):
* sound.c (syms_of_sound):
* search.c (syms_of_search):
* print.c (syms_of_print):
* minibuf.c (syms_of_minibuf):
* macros.c (syms_of_macros):
* keymap.c (syms_of_keymap, initial_define_key)
(initial_define_lispy_key):
* keyboard.c (syms_of_keyboard):
* insdel.c (syms_of_insdel):
* image.c (syms_of_image):
* fringe.c (syms_of_fringe):
* frame.c (syms_of_frame):
* fontset.c (syms_of_fontset):
* fns.c (syms_of_fns):
* fns.c (syms_of_fns):
* fileio.c (syms_of_fileio):
* fileio.c (syms_of_fileio):
* eval.c (syms_of_eval):
* doc.c (syms_of_doc):
* dispnew.c (syms_of_display):
* dired.c (syms_of_dired):
* dbusbind.c (syms_of_dbusbind):
* data.c (syms_of_data):
* composite.c (syms_of_composite):
* coding.c (syms_of_coding):
* cmds.c (syms_of_cmds):
* charset.c (define_charset_internal, syms_of_character):
* ccl.c (syms_of_ccl):
* category.c (syms_of_category, init_category_once):
* casetab.c (syms_of_casetab):
* casefiddle.c (syms_of_casefiddle):
* callint.c (syms_of_callint):
* bytecode.c (syms_of_bytecode):
* buffer.c (keys_of_buffer, syms_of_buffer):
* alloc.c (syms_of_alloc):
* process.c (syms_of_process, init_process):
* lread.c (syms_of_lread, init_obarray):
* font.c (build_style_table):
* emacs.c (syms_of_emacs, main): Replace calls to intern with
intern_c_string, calls to make_pure_string with
make_pure_c_string.  Use pure_cons instead of Fcons.

* process.c (socket_options): Make it const.
(set_socket_option, init_process): Use a const pointer.

* lread.c (intern_c_string): New function.
(defvar_kboard, defvar_lisp, defvar_lisp_nopro, defvar_bool)
(defvar_int): Uset it.  Make the name const char*.

* font.c (struct table_entry): Remove unused member.  Make NAMES
constant.
(weight_table, slant_table, width_table): Make constant.

* emacs.c (struct standard_args): Make name and longname constant.
"
e8001d4c27e1e33c83b9994aac4d5fc3feada2da,stinsonga/emacs-mirror,"Do not munge contents of local symbolic links

This lets Emacs deal with arbitrary local symlinks without
mishandling their contents (Bug#28156).  For example,
(progn (shell-command ""ln -fs '~' 'x'"") (rename-file ""x"" ""/tmp/x""))
now consistently creates a symbolic link from '/tmp/x' to '~'.
Formerly, it did that only if the working directory was on the
same filesystem as /tmp; otherwise, it expanded the '~' to
the user's home directory.
* lisp/dired.el (dired-get-filename): Use files--name-absolute-system-p
instead of rolling our own code.
* lisp/files.el (files--name-absolute-system-p): New function.
(file-truename, file-chase-links): Use it to avoid mishandling
symlink contents that begin with ~.
(copy-directory, move-file-to-trash):
Use concat rather than expand-file-name, to avoid mishandling
symlink contents that begin with ~.
* src/fileio.c (Fmake_symbolic_link): Do not expand leading ""~"" in the
target unless interactive.  Strip leading ""/:"" if interactive.
(emacs_readlinkat): Do not prepend ""/:"" to the link target if
it starts with ""/"" and contains "":"" before NUL.
* test/src/fileio-tests.el (try-link): Rename from try-char,
and accept a string instead of a char.  All uses changed.
(fileio-tests--symlink-failure): Also test leading ~, and ""/:"",
to test the new behavior.
"
1546c55901a99229848a1381aac2e618f5d6c04a,stinsonga/emacs-mirror,"Rename `image-extension-data' to `image-metadata'.
http://lists.gnu.org/archive/html/emacs-devel/2010-03/msg01456.html

* image.c: Add `Qextension_data'.
(syms_of_image): Initialize and staticpro `Qextension_data'.
(Fimage_metadata): Rename from `Fimage_extension_data'.
(gif_load): Put GIF extension data to the property
`Qextension_data'.

* image.el (image-animated-p): Use `image-metadata' instead of
`image-extension-data'.  Get GIF extenstion data from metadata
property `extension-data'.
"
9b851e2550c1d627413ecc6c626a0dfe1bbbf33b,stinsonga/emacs-mirror,"New emacs-lisp-byte-code-mode; misc minor changes.
* lisp/emacs-lisp/lisp-mode.el (emacs-list-byte-code-comment-re): New var.
(emacs-lisp-byte-code-comment)
(emacs-lisp-byte-code-syntax-propertize, emacs-lisp-byte-code-mode):
New functions.
(eval-sexp-add-defvars): Don't skip defvars in column >0.
(eval-defun-2): Remove bogus interactive spec.
(lisp-indent-line): Remove redundant whole-exp code, now done in
indent-according-to-mode.
(save-match-data): Remove redundant indent data.
* lisp/emacs-lisp/benchmark.el (benchmark-run, benchmark-run-compiled):
Use `declare'.
* lisp/gnus/qp.el (quoted-printable-decode-region):
Inline+CSE+strength-reduction.
"
3f791afed9cd1002b909cefd3482763b2a310608,stinsonga/emacs-mirror,"* image.c: Integer signedness and overflow and related fixes.

This is not an exhaustive set of fixes, but it's time to
record what I've got.
(lookup_pixel_color, check_image_size): Remove redundant decls.
(check_image_size): Don't assume that arbitrary EMACS_INT values
fit in 'int', or that arbitrary 'double' values fit in 'int'.
(x_alloc_image_color, x_create_x_image_and_pixmap, png_load)
(tiff_load, imagemagick_load_image):
Check for overflow in size calculations.
(x_create_x_image_and_pixmap): Remove unnecessary test for
xmalloc returning NULL; that can't happen.
(xbm_read_bitmap_data): Don't assume sizes fit into 'int'.
(xpm_color_bucket): Use better integer hashing function.
(xpm_cache_color): Don't possibly over-allocate memory.
(struct png_memory_storage, tiff_memory_source, tiff_seek_in_memory)
(gif_memory_source):
Use ptrdiff_t, not int or size_t, to record sizes.
(png_load): Don't assume values greater than 2**31 fit in 'int'.
(our_stdio_fill_input_buffer): Prefer ptrdiff_t to size_t when
either works, as we prefer signed integers.
(tiff_read_from_memory, tiff_write_from_memory):
Return tsize_t, not size_t, since that's what the TIFF API wants.
(tiff_read_from_memory): Don't fail simply because the read would
go past EOF; instead, return a short read.
(tiff_load): Omit no-longer-needed casts.
(Fimagemagick_types): Don't assume size fits into 'int'.
"
cd1f21dd9e794a14aa6907296c6ee95cc5f693a1,stinsonga/emacs-mirror,"cleanup xv init test, and introduce PVEC_XWIDGET
"
870409d4fb06834c28e75cd653ad8aa2a7e8f581,stinsonga/emacs-mirror,"Merge changes made in Gnus trunk.

shr.el: Start implementation.
shr.el: Continue implementation.
gnus-gravatar.el (gnus-gravatar-insert): Adjust character where we should go backward.
shr.el: Minimally useful state achieved.
mm-decode.el (mm-text-html-renderer): Switch to using shr.el for HTML rendering.
shr.el: (shr-insert): Add a newline after every picture before text.
gnus.texi (Splitting Mail): Really fix the @ref syntax.
shr.el (shr-add-font): Use overlays for combining faces.
shr.el (shr-add-font): Use overlays for combining faces.
shr.el (shr-insert): Pass upwards the text start point.
gnus-util.el: Reintroduce multiple completion functions.
"
6c6f1994bf684f510d600bd18023fa01b4b06500,stinsonga/emacs-mirror,"Prefer list1 (X) to Fcons (X, Qnil) when building lists.

This makes the code easier to read and the executable a bit smaller.
Do not replace all calls to Fcons that happen to create lists,
just calls that are intended to create lists.  For example, when
creating an alist that maps FOO to nil, use list1 (Fcons (FOO, Qnil))
rather than list1 (list1 (FOO)) or Fcons (Fcons (FOO, Qnil), Qnil).
Similarly for list2 through list5.
* buffer.c (Fget_buffer_create, Fmake_indirect_buffer):
* bytecode.c (exec_byte_code):
* callint.c (quotify_arg, Fcall_interactively):
* callproc.c (Fcall_process, create_temp_file):
* charset.c (load_charset_map_from_file)
(Fdefine_charset_internal, init_charset):
* coding.c (get_translation_table, detect_coding_system)
(Fcheck_coding_systems_region)
(Fset_terminal_coding_system_internal)
(Fdefine_coding_system_internal, Fdefine_coding_system_alias):
* composite.c (update_compositions, Ffind_composition_internal):
* dired.c (directory_files_internal, file_name_completion)
(Fsystem_users):
* dispnew.c (Fopen_termscript, bitch_at_user, init_display):
* doc.c (Fsnarf_documentation):
* editfns.c (Fmessage_box):
* emacs.c (main):
* eval.c (do_debug_on_call, signal_error, maybe_call_debugger)
(Feval, eval_sub, Ffuncall, apply_lambda):
* fileio.c (make_temp_name, Fcopy_file, Faccess_file)
(Fset_file_selinux_context, Fset_file_acl, Fset_file_modes)
(Fset_file_times, Finsert_file_contents)
(Fchoose_write_coding_system, Fwrite_region):
* fns.c (Flax_plist_put, Fyes_or_no_p, syms_of_fns):
* font.c (font_registry_charsets, font_parse_fcname)
(font_prepare_cache, font_update_drivers, Flist_fonts):
* fontset.c (Fset_fontset_font, Ffontset_info, syms_of_fontset):
* frame.c (make_frame, Fmake_terminal_frame)
(x_set_frame_parameters, x_report_frame_params)
(x_default_parameter, Fx_parse_geometry):
* ftfont.c (syms_of_ftfont):
* image.c (gif_load):
* keyboard.c (command_loop_1):
* keymap.c (Fmake_keymap, Fmake_sparse_keymap, access_keymap_1)
(Fcopy_keymap, append_key, Fcurrent_active_maps)
(Fminor_mode_key_binding, accessible_keymaps_1)
(Faccessible_keymaps, Fwhere_is_internal):
* lread.c (read_emacs_mule_char):
* menu.c (find_and_return_menu_selection):
* minibuf.c (get_minibuffer):
* nsfns.m (Fns_perform_service):
* nsfont.m (ns_script_to_charset):
* nsmenu.m (ns_popup_dialog):
* nsselect.m (ns_get_local_selection, ns_string_from_pasteboard)
(Fx_own_selection_internal):
* nsterm.m (append2):
* print.c (Fredirect_debugging_output)
(print_prune_string_charset):
* process.c (Fdelete_process, Fprocess_contact)
(Fformat_network_address, set_socket_option)
(read_and_dispose_of_process_output, write_queue_push)
(send_process, exec_sentinel):
* sound.c (Fplay_sound_internal):
* textprop.c (validate_plist, add_properties)
(Fput_text_property, Fadd_face_text_property)
(copy_text_properties, text_property_list, syms_of_textprop):
* unexaix.c (report_error):
* unexcoff.c (report_error):
* unexsol.c (unexec):
* xdisp.c (redisplay_tool_bar, store_mode_line_string)
(Fformat_mode_line, syms_of_xdisp):
* xfaces.c (set_font_frame_param)
(Finternal_lisp_face_attribute_values)
(Finternal_merge_in_global_face, syms_of_xfaces):
* xfns.c (x_default_scroll_bar_color_parameter)
(x_default_font_parameter, x_create_tip_frame):
* xfont.c (xfont_supported_scripts):
* xmenu.c (Fx_popup_dialog, xmenu_show, xdialog_show)
(menu_help_callback, xmenu_show):
* xml.c (make_dom):
* xterm.c (set_wm_state):
Prefer list1 (FOO) to Fcons (FOO, Qnil) when creating a list,
and similarly for list2 through list5.
"
423dbf9b1e682291f32cf901ad71c586eeca3958,stinsonga/emacs-mirror,"Rename `linux' to `gnu_linux'.
"
3511c7847949ea1d53a32cf9327c0e02d2191f3d,stinsonga/emacs-mirror,"* configure.in (AC_CHECK_FUNCS): Detect library functions
strcasecmp and strncasecmp.
* lib-src/etags.c (etags_strcasecmp, etags_strncasecmp): Define to
library functions strcasecmp and strncasecmp if available.
* lwlib/lwlib.c (my_strcasecmp): Rename to lwlib_strcasecmp, which
may be defined to library function strcasecmp if available.
* src/dispextern.c (xstrcasecmp): Define to library function
strcasecmp if available.
* src/xfaces.c: Do not use xstrcasecmp if strcasecmp is available.
"
4ee88440781304fc7003d51e363c3e3a5cc2e8fd,stinsonga/emacs-mirror,"Remove unused variable temp-buffer-show-specifiers.

* window.c (temp_output_buffer_show): Don't use
Vtemp_buffer_show_specifiers.
(Vtemp_buffer_show_specifiers): Remove unused variable.
* help.el (with-help-window): Don't reference
temp-buffer-show-specifiers in doc-string.
"
df17e41e8d19a47ae51ae3af786c2c959740a325,stinsonga/emacs-mirror,"Ralf Angeli  <angeli at caeruleus.net>

(reftex-make-separate-toc-frame): Simplify selection of frame focusing
function.
"
0b3d4a4756646cc7e908375a457e36e15712ad00,stinsonga/emacs-mirror,"Fix a race condition that causes Emacs to mess up glib.

The symptom is a diagnostic ""GLib-WARNING **: In call to
g_spawn_sync(), exit status of a child process was requested but
SIGCHLD action was set to SIG_IGN and ECHILD was received by
waitpid(), so exit status can't be returned.""  The diagnostic
is partly wrong, as the SIGCHLD action is not set to SIG_IGN.
The real bug is a race condition between Emacs and glib: Emacs
does a waitpid (-1, ...) and reaps glib's subprocess by mistake,
so that glib can't find it.  Work around the bug by invoking
waitpid only on subprocesses that Emacs itself creates.
* process.c (create_process, record_child_status_change):
Don't use special value -1 in pid field, as the caller now must
know the pid rather than having the callee infer it.  The
inference was sometimes incorrect anyway, due to another race.
(create_process): Set new 'alive' member if child is created.
(process_status_retrieved): New function.
(record_child_status_change): Use it.
Accept negative 1st argument, which means to wait for the
processes that Emacs already knows about.  Move special-case code
for DOS_NT (which lacks WNOHANG) here, from caller.  Keep track of
processes that have already been waited for, by testing and
clearing new 'alive' member.
(CAN_HANDLE_MULTIPLE_CHILDREN): Remove, as record_child_status_change
now does this internally.
(handle_child_signal): Let record_child_status_change do all
the work, since we do not want to reap all exited child processes,
only the child processes that Emacs itself created.
* process.h (Lisp_Process): New boolean member 'alive'.

Fixes: debbugs:8855
"
122e9f8f29a92b6038b65a3b4f6ef31ad96e2cd5,stinsonga/emacs-mirror,"various small cleanups detailed in changelogs
"
cda26e64621d71c6a797f694418d844a621998be,stinsonga/emacs-mirror,"Do not split line before width of fill-prefix

When auto-filling a paragraph, don't split a line before the width of the
fill-prefix, creating a subsequent line that is as long or longer (Bug#20774).
* lisp/simple.el (do-auto-fill): Only consider break-points that are later in
the line than the width of the fill-prefix.  This is a more general solution
than the previous logic, which only skipped over the exact fill-prefix.  The
fill-prefix doesn't necessarily match the prefix of the first line of a
paragraph in adaptive-fill-mode.
"
416a2c45b3068568e47076ed089db25830117ea8,stinsonga/emacs-mirror,"Add doc-strings to some cl float parameters.

* lisp/emacs-lisp/cl-extra.el (cl-float-limits): Add doc string.
* lisp/emacs-lisp/cl.el (most-positive-float, most-negative-float)
(least-positive-float, least-negative-float)
(least-positive-normalized-float, least-negative-normalized-float)
(float-epsilon, float-negative-epsilon): Add doc-strings,
based on those in cl.texi.

* lisp/emacs-lisp/cl-extra.el (most-positive-float, most-negative-float)
(least-positive-float, least-negative-float)
(least-positive-normalized-float, least-negative-normalized-float)
(float-epsilon, float-negative-epsilon):
Remove unnecessary declarations.
"
8e378d88cc4102b514f6f5a070d43f32191eab83,stinsonga/emacs-mirror,"Remove some diary-lib function aliases, obsolete since 22.1.

* lisp/calendar/diary-lib.el (view-diary-entries, list-diary-entries)
(show-all-diary-entries): Remove obsolete function aliases.
"
d32926ffaadd1d194557add72ccbff239feff26e,stinsonga/emacs-mirror,"* emacs-list/cust-print.el: Move to obsolete.
"
35ad054578a15b8f98b7d7e93f03d2f9cd112c3e,stinsonga/emacs-mirror,"* s/sol2.h:
* s/sol2-4.h: Reorganize conditionals.
"
a9ec34f4c483f5d501c2f6db16e3423b22385cc9,stinsonga/emacs-mirror,"Merge changes made in Gnus trunk.

gnus-sum.el: Avoid calling a hook function per summary line;
Call `gnus-summary-highlight-line' directly from all places that used to call it indirectly.

netrc.el (netrc-credentials): New conveniency function.

gnus-start.el (gnus-read-active-file-1): If gnus-agent isn't set, then do request scans from the backends.
"
ef75c3b56b8ff034eb47e0c69328227127cc93fa,stinsonga/emacs-mirror,"Optimize `file-equal-p' and `file-in-directory-p' in Tramp

* lisp/net/tramp.el (tramp-handle-file-equal-p)
(tramp-handle-file-in-directory-p): New defuns.  Suggested by
Harvey Chapman <hchapman@3gfp.com>

* lisp/net/tramp-adb.el (tramp-adb-file-name-handler-alist):
* lisp/net/tramp-gvfs.el (tramp-gvfs-file-name-handler-alist):
* lisp/net/tramp-sh.el (tramp-sh-file-name-handler-alist):
* lisp/net/tramp-smb.el (tramp-smb-file-name-handler-alist): Use them.
"
90c5c87753fb69dafd664615558fa3fdce3ba5b1,stinsonga/emacs-mirror,"Minor cleanups of str_collate fix.

* fns.c (str_collate): Move decl from here ...
* lisp.h (str_collate): ... to here.
* sysdep.c (str_collate): Prune away some of the forest of ifdefs.
Remove unnecessary casts.  Use SAFE_NALLOCA to avoid
potential problems with integer overflow.  Don't assume
setlocale succeeds.  Remove unnecessary test before restoring
locale via setlocale, and free the copied setlocale string
when done with it.

Fixes: debbugs:18051
"
644c6b414f39222890246d7fe155a369b1983246,stinsonga/emacs-mirror,"* lisp/font-lock.el (font-lock-beginning-of-syntax-function): Remove

(font-lock-fontify-block): Don't let-bind it.
(font-lock-compile-keywords): Don't use it.
(font-lock-set-defaults): Don't set it.  Allow the variable alist to
start one slot earlier, instead.

* lisp/emacs-lisp/syntax.el (font-lock-beginning-of-syntax-function):
Don't declare.
(syntax-ppss): Don't use it either.

* lisp/font-core.el (font-lock-defaults): Remove SYNTAX-BEGIN
from docstring.

* doc/emacs/display.texi (Font Lock): Don't mention
font-lock-beginning-of-syntax-function.

* doc/lispref/modes.texi (Font Lock Basics): Update description of
font-lock-defaults.
(Syntactic Font Lock): Remove font-lock-beginning-of-syntax-function.

* lisp/loadhist.el (unload-feature-special-hooks):
Remove font-lock-beginning-of-syntax-function.

* lisp/obsolete/lazy-lock.el (lazy-lock-fontify-region):
* lisp/emacs-lisp/lisp.el (beginning-of-defun-raw): Don't let-bind
font-lock-beginning-of-syntax-function.
"
e8df92674d0b73d4b32b467b9a1607e58b5f7a7d,stinsonga/emacs-mirror,"Minor adjustments to interning code.
* lisp.h (intern, intern_c_string): Redefine as static inline
wrappers for intern_1 and intern_c_string_1, respectively.
(intern_1, intern_c_string_1): Rename prototypes.
* lread.c (intern_1, intern_c_string_1): Simplify Vobarray checking.
* font.c (font_intern_prop): Likewise.  Adjust comment.
* w32font.c (intern_font_name): Likewise.
"
ca80ebc736346e196badd95ac524150b5c318683,stinsonga/emacs-mirror,"* lisp/emacs-lisp/eieio-core.el (eieio--class-constructor): Rename.

Fixes: debbugs:19620

(eieio--class-constructor): Rename from class-constructor, and make it an alias
for `identity'.  Update all callers.
"
c0342369acfbad2f0ea86b949a2f116304186353,stinsonga/emacs-mirror,"Update the GNUStep port so it works OK.  Redraw and sizing bugs remain.

* nextstep/templates/Info-gnustep.plist.in: Add NSDocumentClass EmacsDocument.

* src/nsfns.m (x_set_foreground_color, x_set_background_color): Use
EmacsCGFloat.
(ns_implicitly_set_icon_type, Fx_create_frame): Make static, remove
unused variables.
(Fns_read_file_name): Keep track if panel is for save.  Use
ns_filename_from_panel/ns_directory_from_panel.
(Fns_list_services): delegate only used for COCOA.
(Fns_convert_utf8_nfd_to_nfc): Remove warning for GNUStep.  Just
return the input if GNUStep.
(x_screen_planes): Remove.
(Fxw_color_values): Use EmacsCGFloat
(Fns_display_monitor_attributes_list): Only get screen number for
Cocoa.
(getDirectory, getFilename): Removed from EmacsOpenPanel and
EmacsSavePanel.
(EmacsOpenPanel:ok:): Use ns_filename_from_panel and
ns_directory_from_panel.

* src/nsfont.m (ns_attribute_fvalue, ns_spec_to_descriptor)
(ns_charset_covers, ns_get_covering_families, nsfont_open):
Use F suffix on floats.
(ns_char_width): Returns CGFloat.
(ns_ascii_average_width): w is CGFloat instead of float.
(nsfont_draw): cbuf and c are unsigned. Cast to char* in call to
DPSxshow.
(ns_glyph_metrics): CGFloat instead of float.

* src/nsimage.m (setXBMColor:, getPixelAtX:Y:): Use EmacsCGFloat.

* src/nsmenu.m (ns_update_menubar): Make static.
(x_activate_menubar): Surround with ifdef NS_IMPL_COCOA
(fillWithWidgetValue:): Add cast to SEL for setAction.
(addSubmenuWithTitle:forFrame:): Add cast to SEL for action.
(update_frame_tool_bar): Update code for GNUStep.
(clearAll): New method.
(addDisplayItemWithImage:idx:tag:helpText:enabled:): Handle new tag
argument. Call insertItemWithItemIdentifier when NS_IMPL_GNUSTEP. Move
identifierToItem setObject and activeIdentifiers addObject before
call to insertItemWithItemIdentifier.
(validateVisibleItems): Fix indentation.
(toolbarAllowedItemIdentifiers:): Return activeIdentifiers.
(initWithContentRect:styleMask:backing:defer:): Add ClosableWindow and
UtilityWindow to aStyle, remove call to setStyleMask.

* src/nsselect.m (ns_get_local_selection): Remove unused variable type.

* src/nsterm.h (EmacsCGFloat): Typedef for OSX and GNUStep when the size
of CGFloat differs.
(EmacsApp): New variable nextappdefined.  Declare sendFromMainThread
when NS_IMPL_GNUSTEP.
(EmacsDocument): Declare when NS_IMPL_GNUSTEP.
(EmacsView): Remove unlockFocusNeedsFlush, add windowDidMove.
(EmacsToolbar): Add clearAll.  Add tag argument to
addDisplayItemWithImage.
(EmacsSavePanel, EmacsOpenPanel): Remove getFilename and getDirectory.

* src/nsterm.m: Include src/process.h if NS_IMPL_GNUSTEP.
(ns_menu_bar_is_hidden, menu_will_open_state): Define only if
NS_IMPL_COCOA.
(x_set_cursor_type): Remove declaration.
(ns_update_begin): Only use r and bp if NS_IMPL_COCOA.
(ns_update_end, ns_focus, ns_unfocus): Remove GNUStep specific code.
(x_set_window_size): Remove 3 pixels from toolbar if NS_IMPL_GNUSTEP.
(ns_get_color): Use F suffix on float.
(ns_color_to_lisp, ns_query_color): Use EmacsCGFloat.
(ns_get_rgb_color): Remove.
(x_set_frame_alpha): Move view inside NS_IMPL_COCOA.
(note_mouse_movement): x and y are CGFloat.
(ns_draw_fringe_bitmap): Remove unused rowY.
Change #if to COCOA && >= 10_6.
(ns_draw_window_cursor): Remove unused overspill.
(ns_draw_underwave): width and x are EamcsCGFloat.
(ns_draw_box): thickness is CGFloat.
(ns_dumpglyphs_image): Change #if to COCOA && >= 10_6.
(ns_send_appdefined): When NS_IMPL_GNUSTEP, redirect to main thread
if not in main thread.
(ns_get_pending_menu_title, ns_check_menu_open)
(ns_check_pending_open_menu): Put inside #if COCOA && >= 10_5.
(ns_term_init): Call catch_child_signal if NS_IMPL_GNUSTEP && SIGCHLD.
(sendFromMainThread:): New method.
(changeFont:): size is CGFloat.
(keyDown:): Check for Delete when NS_IMPL_GNUSTEP.
Disable warning about permanent text.
(characterIndexForPoint:): Adjust return type depending on GNUStep
version.
(mouseDown:): delta is CGFloat.
(updateFrameSize): Remove unised variable f.
(initFrameFromEmacs): Move toggleButton inside NS_IMPL_COCOA.
Cast float to EmacsCGFloat.
(windowWillUseStandardFrame:defaultFrame:): Set maximized_height
also to -1 when restoring.
(windowDidExitFullScreen:): Put call to updateCollectionBehaviour
inside NS_IMPL_COCOA.
(toggleFullScreen:): Put call to toggleFullScreen inside
NS_IMPL_COCOA.  Cast float to EmacsCGFloat.
(setPosition:portion:whole:): por is CGFloat.
(getMouseMotionPart:window:x:y:): Add F suffix to float.
(mouseDown:): Use CGFloat.
(mouseDragged:): Remove unised variable edge.
(EmacsDocument): Implement for NS_IMPL_GNUSTEP.

* src/process.c (catch_child_signal): New function.
(init_process_emacs): Call it.

* src/process.h (catch_child_signal): Declare.
"
1c6d8c761fd19c6a277db1a183e65e16d4094421,stinsonga/emacs-mirror,"* lisp/pcomplete.el: Convert to lexical binding and fix bug#8819.
(pcomplete-suffix-list): Mark as obsolete.
(pcomplete-completions-at-point): Capture pcomplete-norm-func and
pcomplete-seen in the closure.
(pcomplete-comint-setup): Setup completion-at-point as well.
(pcomplete--entries): New function.
(pcomplete--env-regexp): New var.
(pcomplete-entries): Rewrite to work with partial-completion and
without relying on pcomplete-suffix-list.
(pcomplete-pare-list): Remove, unused.
* lisp/shell.el (shell-completion-vars): Set pcomplete-termination-string
according to comint-completion-addsuffix.
"
5f285722b63bc4a5f67c03a5bffb659ef65e7a14,stinsonga/emacs-mirror,"nnml.el, nnfolder.el, nntp.el (*-request-set-mark): Extend syntax with 'set.
nnheader.el, nntp.el, nnfolder.el, nnml.el (*-request-set-mark): Refactor out nnheader-update-marks-actions and use it throughout.
nnmaildir.el (nnmaildir-request-set-mark): Be explicit about 'set.
gnus-sum.el (gnus-summary-push-marks-to-backend): Use 'set instead of 'add and 'delete to set backend marks.
"
3d80c99f3817bf5eccd6acc6a79498a4fde979a4,stinsonga/emacs-mirror,"Rewrite sampler to use Elisp hash-tables.
* src/profiler.c: Remove filtering functionality.
(is_in_trace, Qgc): Remove vars.
(make_log, record_backtrace, Fsample_profiler_log):
Rewrite, using Elisp hash-tables.
(approximate_median, evict_lower_half): New functions.
(cpu_log): Rename from sample_log.
(cpu_gc_count): New var.
(Fsample_profiler_reset, Fmemory_profiler_reset): Remove.
(sigprof_handler): Add count to cpu_gc_count during GC, detected via
backtrace_list.
(block_sigprof, unblock_sigprof): Remove.
(gc_probe, mark_profiler): Remove functions.
(syms_of_profiler): Staticpro cpu_log and memory_log.

* lisp/profiler.el (profiler-sample-interval): Move before first use.
Change default to 1ms.
(profiler-entry=, profiler-backtrace-reverse, profiler-log-fixup-slot)
(profiler-calltree-elapsed<, profiler-calltree-elapsed>): Remove functions.
(profiler-entry-format): Don't use type-of.
(profiler-slot, profiler-log): Remove structs.
(profiler-log-timestamp, profiler-log-type, profiler-log-diff-p):
Redefine for new log representation.
(profiler-log-diff, profiler-log-fixup, profiler-calltree-build-1):
Rewrite for new log representation.
(profiler-calltree): Remove `elapsed' fields.
(profiler-calltree-count<, profiler-report-make-entry-part):
Remove gc special case.
(profiler-calltree-find): Use equal.
(profiler-calltree-walk): Remove `args'; rely on closures instead.
(profiler-calltree-compute-percentages-1): Remove; inlined.
(profiler-calltree-compute-percentages): Simplify.
(profiler-report-log, profiler-report-reversed)
(profiler-report-order): Use defvar-local.
(profiler-report-line-format): Remove `elapsed', do a bit of CSE.
(profiler-report-mode-map): Remove up/down bindings.
(profiler-report-make-buffer-name): Simplify by CSE.
(profiler-report-mode): Remove redundant code.
(profiler-report-expand-entry, profiler-report-collapse-entry):
Use inhibit-read-only.
(profiler-report-render-calltree-1): Simplify by CSE.
(profiler-reset): Rewrite for new subroutines.
(profiler--report-cpu): Rename from sample-profiler-report.
(profiler--report-memory): Rename from memory-profiler-report.

* src/alloc.c (Fgarbage_collect): Record itself in backtrace_list.
Don't set is_in_trace any more.  Don't call mark_profiler.
Only call gc_probe for the memory profiler.
(syms_of_alloc): Define Qautomatic_gc.

* src/lisp.h (SXHASH_COMBINE): Move back to...
* src/fns.c (SXHASH_COMBINE): ...here.

* src/xdisp.c (Qautomatic_redisplay): New constant.
(redisplay_internal): Record itself in backtrace_list.
(syms_of_xdisp): Define Qautomatic_redisplay.

* .dir-locals.el (indent-tabs-mode): Remove personal preference.
"
cb41b32a2325b0bd6e12d62cc82f2bc6dd00047a,stinsonga/emacs-mirror,"Fix some portability problems with 'inline'.

* dispextern.h (window_box, window_box_height, window_text_bottom_y)
(window_box_width, window_box_left, window_box_left_offset)
(window_box_right, window_box_right_offset): Declare extern.
Otherwise, these inline functions do not conform to C99 and
are miscompiled by Microsoft compilers.  Reported by Eli Zaretskii in
<http://lists.gnu.org/archive/html/emacs-devel/2011-11/msg00084.html>.
* intervals.c (adjust_intervals_for_insertion)
(adjust_intervals_for_deletion): Now extern, because otherwise the
extern inline functions 'offset_intervals' couldn't refer to it.
(static_offset_intervals): Remove.
(offset_intervals): Rewrite using the old contents of
static_offset_intervals.  The old version didn't conform to C99
because an extern inline function contained a reference to an
identifier with static linkage.
"
34dabdb7701594b83a5b35b034bba55855d256a5,stinsonga/emacs-mirror,"* lisp.h (set_char_table_extras): Rename from char_table_set_extras.

(set_char_table_contents): Rename from char_table_set_contents.
(set_sub_char_table_contents): Rename from sub_char_table_sub_contents.
All uses changed.  See the end of
<http://lists.gnu.org/archive/html/emacs-devel/2012-08/msg00549.html>.
"
65e8ee52931d3885fd75491a8f5b22ddc80c7208,stinsonga/emacs-mirror,"Remove unused macros from intervals.h.
* intervals.h (MERGE_INSERTIONS, DISPLAY_INVISIBLE_GLYPH): Remove.
* intervals.c: Adjust comment.
"
f4f7319875f9502424804f56e2a12cd620b51c12,stinsonga/emacs-mirror,"* emacs-lisp/lisp-mode.el (eval-defun-1): Update the documentation
of faces when `M-C-x'-ing their definitions.  Also
clean up the code slightly.

Fixes: debbugs:8378
"
d7f7fef1c1cdef206860a7075873de7d6c521d8d,stinsonga/emacs-mirror,"Allow user control on what starts and ends a paragraph for bidi

* src/buffer.h (struct buffer): New members
bidi_paragraph_separate_re_ and bidi_paragraph_start_re_.
* src/buffer.c (bset_bidi_paragraph_start_re)
(bset_bidi_paragraph_separate_re): New setters/
(Fbuffer_swap_text): Swap the values of bidi-paragraph-start-re and
bidi-paragraph-separate-re.
(init_buffer_once): Init the values of bidi-paragraph-start-re and
bidi-paragraph-separate-re.
(syms_of_buffer) <bidi-paragraph-start-re, bidi-paragraph-separate-re>:
New per-buffer variables.
* src/bidi.c (bidi_at_paragraph_end, bidi_find_paragraph_start):
Support bidi-paragraph-start-re and bidi-paragraph-separate-re.
(bidi_move_to_visually_next): Handle correctly the case when the
separator matches an empty string.  (Bug#27526)

* doc/emacs/mule.texi (Bidirectional Editing):
* doc/lispref/display.texi (Bidirectional Display): Document
bidi-paragraph-start-re and bidi-paragraph-separate-re.

* etc/NEWS: Mention bidi-paragraph-start-re and
bidi-paragraph-separate-re.
"
4265deabcbde795d4e6034f3000b4c269137a5f7,stinsonga/emacs-mirror,"* net/tramp.el (tramp-do-copy-or-rename-file-out-of-band): Set
variables for computing the prompt for reading password.
"
a215930cfe3c4f5ee7c4a9cde6486c41bcc0b45e,stinsonga/emacs-mirror,"Some package doc updates

* doc/emacs/help.texi (Package Keywords): Mention describe-package buttons.

* doc/emacs/package.texi (Package Menu): Mention package-menu-filter.

* lisp/emacs-lisp/package.el (package-menu-mode-map): Tweak menu.
(package-menu-filter): Rename from package-menu-filter-interactive.
Doc fix.

* etc/NEWS: Related edits.  Copyedit.
"
213bd7f2f126e8f69cbb9be274ea99581937f193,stinsonga/emacs-mirror,"* regex.c (re_iswctype): Remove some redundant boolean conversions.
"
85f7e5115f9f409126d355997e8103ea5126ada2,stinsonga/emacs-mirror,"elisp--xref-find-definitions handle cl-defstuct default constructor

* lisp/progmodes/elisp-mode.el (elisp-xref-find): Add FIXME.
(elisp--xref-format-extra): Rename from elisp--xref-format-cl-defmethod.
(elisp--xref-find-definitions): Handle cl-defstuct default constructor.

* test/automated/elisp-mode-tests.el (xref-elisp-test-run): Split out
from xref-elisp-test for ease of debugging.
(xref-elisp-deftest): Rename from xref-elisp-test.
(find-defs-constructor): New test.
(find-defs-defgeneric-el): Match batch test config.
(compile): Required for find-defs compilation-minor-mode test.
(find-defs-defvar-el): Match code change.
(find-defs-face-el): Match code change.

* lisp/progmodes/xref.el (xref-find-function, xref-find-definitions):
Improve doc string.
"
605a20a98823768578d6faed5f04cb00e57da2bb,stinsonga/emacs-mirror,"Improve handling of processes on remote hosts.

* eshell/esh-util.el (eshell-path-env): New defvar.
(eshell-parse-colon-path): New defun.
(eshell-file-attributes): Use `eshell-parse-colon-path'.

* eshell/esh-ext.el (eshell-search-path): Use
`eshell-parse-colon-path'.
(eshell-remote-command): Remove argument HANDLER.
(eshell-external-command): Check for FTP remote connection.

* eshell/esh-proc.el (eshell-gather-process-output): Use
`file-truename', in order to start also symlinked files. Apply
`start-file-process' instead of `start-process'. Shorten `command'
to the local file name part.

* eshell/em-cmpl.el (eshell-complete-commands-list): Use
`eshell-parse-colon-path'.

* eshell/em-unix.el (eshell/du): Check for FTP remote connection.

* net/tramp.el (tramp-eshell-directory-change): New defun.  Add it
to `eshell-directory-change-hook'.
"
04ec0963f662150746408ff3f9c085240f83bb54,stinsonga/emacs-mirror,"Fix finding revisions in for renamed files in vc-annotate.
* lisp/vc.el (vc-find-revision): Add an optional argument for
the VC backend.  Use it when non-nil.
* lisp/vc-annotate.el (vc-annotate-find-revision-at-line): Pass the VC
backend to vc-find-revision.  (Bug#6487)
"
77f3894962e3d21e41066c7baeb8cea4973e1e9e,stinsonga/emacs-mirror,"Remove directory-sep-char, obsolete since 21.1.

* lisp/subr.el (directory-sep-char): Remove obsolete variable.
* lisp/net/tramp-compat.el: Don't mess about with the byte-compiler unless
it is ""necessary"".

* doc/lispref/files.texi (File Name Components): Remove ignored
section about deleted variable directory-sep-char.

* etc/NEWS: Mention above change.
"
55577e7c020702f5bc8c2ff079baf8839fbccb9b,stinsonga/emacs-mirror,"* lisp/simple.el: Move all the prog-mode code to prog-mode.el.
* lisp/progmodes/prog-mode.el: New file.
* lisp/loadup.el:
* src/lisp.mk (lisp): Add prog-mode.el.
"
39693840dca6eeccd01ba4e42da05662e6f66d91,stinsonga/emacs-mirror,"(vc-deduce-fileset): Check if the buffer has a file.
(vc-register): Call the backend function only once, instead of
once for each file.
(vc-next-action): Update call to vc-register.
(vc-dir-register): Remove function.
(vc-dir): Bind vc-register instead of vc-dir-register.
"
f62bd846552a090f3ba5e136d6d9cdb4c07ed7be,stinsonga/emacs-mirror,"Grep related fixes.

* etc/grep.txt: Add `eval' to the Local Variables section that
emulates `grep-filter'.

* lisp/progmodes/grep.el (grep-filter): Avoid incomplete processing by
keeping point where processing of grep matches begins, and
continue to delete remaining escape sequences from the same point.
(grep-filter): Make leading zero optional in ""0?1;31m"" because
git-grep emits ""\033[1;31m"" escape sequences unlike expected
""\033[01;31m"" as GNU Grep does.
(grep-process-setup): Replace obsolete ""ml="" with newer ""sl="".

Fixes: debbugs:9408
"
edd74c35125983cbf822b15828886c7d2e50b275,stinsonga/emacs-mirror,"Separate read and write access to Lisp_Object slots of struct frame.
* frame.h (FGET, FSET): New macros similar to AREF and ASET.
* buffer.c, data.c, dispnew.c, dosfns.c, eval.c, fontset.c, frame.c:
* fringe.c, gtkutil.c, minibuf.c, msdos.c, nsfns.m, nsmenu.m, nsterm.m:
* print.c, term.c, w32fns.c, w32menu.c, w32term.c, window.c, window.h:
* xdisp.c, xfaces.c, xfns.c, xmenu.c, xterm.c: Adjust users.
"
09158997b552e31323410a8bfaa5a58a1a94b072,stinsonga/emacs-mirror,"Add special markup processing for commit logs.
* log-edit.el (log-edit-extra-flags): New variable.
(log-edit): Add new argument MODE.  Use that mode when non-nil
instead of the log-view-mode.
(log-view-process-buffer): New function.

* vc.el: Document that the checkin method takes optional
arguments.  Document new backend specific method: log-view-mode.
(vc-default-log-edit-mode): New function.
(vc-checkin): Use a backend specific log-view-mode.
Pass extra arguments to the checkin method.
(vc-modify-change-comment): Pass a dummy extra argument.

* vc-dispatcher.el (vc-log-edit): Add a mode argument, pass it to
log-edit.
(vc-start-logentry): Add a mode argument, pass it to vc-log-edit.
(vc-finish-logentry): Process the log buffer before passing it
down.  Pass log-edit-extra-flags.

* vc-bzr.el (vc-bzr-checkin): Pass extra arguments to the commit
command.
(log-edit-extra-flags, log-edit-before-checkin-process): New declarations.

* vc-hg.el (vc-hg-checkin): Pass extra arguments to the commit
command.
(log-edit-extra-flags, log-edit-before-checkin-process): New declarations.
(vc-hg-log-edit-mode): New derived mode.

* vc-arch.el (vc-arch-checkin):
* vc-cvs.el (vc-cvs-checkin):
* vc-git.el (vc-git-checkin):
* vc-mtn.el (vc-mtn-checkin):
* vc-rcs.el (vc-rcs-checkin):
* vc-sccs.el (vc-sccs-checkin):
* vc-svn.el (vc-svn-checkin): Add an optional ignored argument.
"
5fdb74689d393b76a7a5edff57205ff27fcd7bc1,stinsonga/emacs-mirror,"Remove unused Makefile variables STARTFLAGS.
* src/Makefile.in (temacs${EXEEXT}) [!NS_IMPL_GNUSTEP]:
Remove ${STARTFLAGS}, nothing ever sets it.
"
22a648b4d6cfcb369730b0c41232a047fd5616fb,stinsonga/emacs-mirror,"* xdisp.c (syms_of_xdisp): Remove duplicated definition of Qtext.
"
0ac26976f1da4921fd146851740a73b9185a054b,stinsonga/emacs-mirror,"* lisp/progmodes/subword.el: Fix boundary case.
(subword-forward-regexp): Make it a constant.  Wrap optional \\W in its
own group.
(subword-backward-regexp): Make it a constant.
(subword-forward-internal): Don't treat a trailing capital as the
beginning of a word.
* test/automated/subword-tests.el: New file.

Fixes: debbugs:13758
"
7d300d644cc3c1595d2ac67e37fde1d3d865af24,stinsonga/emacs-mirror,"A few porting etc. fixes for the new file monitor code.

See the thread containing
<http://lists.gnu.org/archive/html/emacs-devel/2013-06/msg00109.html>.
* gfilenotify.c (dir_monitor_callback, Fgfile_add_watch)
(Fgfile_rm_watch): Don't assume EMACS_INT is the same width as a pointer.
(dir_monitor_callback, Fgfile_rm_watch):
Use assq_no_quit instead of Fassoc, for speed.
(dir_monitor_callback, Fgfile_rm_watch):
eassert that the monitor is a fixnum.
(dir_monitor_callback): No need for CDR_SAFE.
Simplify building of lisp with alternative tails.
(Fgfile_add_watch, Fgfile_rm_watch):
Do not assume glib functions set errno reliably on failure.
(Fgfile_add_watch): Check that the monitor survives the XIL trick,
and signal an error otherwise.
(Fgfile_rm_watch): Prefer CONSP to !NILP.
Use Fdelq instead of Fdelete, for speed.
"
a41c2e6d330243fa7b5d1537d5efb211f1c0d30c,stinsonga/emacs-mirror,"Merge changes made in Gnus trunk.

shr.el: Rename the tag functions a bit, and add some new ones.
gnus-sum.el (gnus-summary-select-article-buffer): If the article buffer isn't shown, then select the current article first instead of bugging out.
gnus-sum.el (gnus-summary-select-article-buffer): Show both the article and summary buffers again.
shr.el (shr-tag-blockquote): Convert name.
shr.el (shr-rescale-image): Use the right image-size variant.
shr.el (shr-tag-p): Don't insert newlines at the start of the buffer.
shr.el: Implement indentation in blockquotes.
gnus-sum.el (gnus-summary-select-article-buffer): Really select the article buffer again.
shr.el (shr-ensure-paragraph): Don't insert newlines on empty tags at the beginning of the buffer.
gnus-ems.el, gnus-util.el, mm-decode.el, mm-view.el: Add resize for large images in mm.
gnus-html.el (gnus-html-put-image): Use gnus-rescale-image.
shr.el (shr-tag-p): Don't insert newlines on empty tags at the beginning of the buffer.
gnus-ems.el, gnus-html.el, gnus-util.el, mm-decode.el, mm-view.el: Support image resizing.
shr.el: Add headings.
shr.el (shr-ensure-paragraph): Actually work.
shr.el (shr-tag-li): Make <ul> prettier.
shr.el (shr-insert): Get white space at the beginning/end of elements right.
shr.el (shr-tag-li): Tweak <li> rendering.
shr.el (shr-tag-p): Collapse subsequent <p>s.
shr.el (shr-ensure-paragraph): Don't insert double line feeds after blank lines.
shr.el (shr-tag-h6): Add.
shr.el (shr-insert): \t is also space.
"
5bbdf7aab531a1027644aaed452a0cb6a068917a,stinsonga/emacs-mirror,"(make_terminal_frame): Remove redundant code and useless
block.
"
6ffab59298c30ce03d1f0858091b52c0a4aeda0e,stinsonga/emacs-mirror,"gnus-sum.el: Remove long obsoleted functions.
"
7d563e363c72828b9b1bbb0181be6a36643ce7af,stinsonga/emacs-mirror,"* dispnew.c (redraw_frame): Remove useless #ifdef because
FRAME_MSDOS_P is a compile-time zero everywhere except MS-DOS.
Also, move TTY fflush to...
* term.c (tty_update_end): ...this function.
"
c5958e82b755959e01a89f05b1b25bf223e7524a,stinsonga/emacs-mirror,"nt/cmdproxy.c (main): Use _snprintf instead of wsprintf (bug#6647).
"
34348bd4e5c89fa0e440e37efa20be2a00c8fd9c,stinsonga/emacs-mirror,"* coding.c (Fdefine_coding_system_internal): Use XCAR/XCDR instead
of Fcar/Fcdr if possible.
* font.c (check_otf_features): Likewise.
* fontset.c (Fnew_fontset): Likewise.
* gnutls.c (Fgnutls_boot): Likewise.
* minibuf.c (read_minibuf): Likewise.
* msdos.c (IT_set_frame_parameters): Likewise.
* xmenu.c (Fx_popup_dialog): Likewise.
* w32menu.c (Fx_popup_dialog): Likewise.
"
42997f4d4fb5614157f8f798286787c5d2976fb6,stinsonga/emacs-mirror,"* term.c (delete_tty): Remove redundant call to memset.
"
4c4c5b9121a550d006d1b57bc2ad97b0415cee9f,stinsonga/emacs-mirror,"Fix putenv race conditions with undefined behavior.

Do all putenv calls before Emacs creates any threads.
Use a safer way to modify the TZ environment variable in the
presence of multiple threads.  For further thread-safety,
prefer localtime_r and gmtime_r to localtime and gmtime,
and prefer struct tm's tm_gmtoff (if available) to calling
both localtime_r and gmtime_r.
* configure.ac (LOCALTIME_CACHE): Remove.
We needn't worry about SunOS 4 any more; Sun dropped support in 2003.
All uses of LOCALTIME_CACHE removed.  This simplifies the fix.
(tzalloc): Add check for this function.
* admin/merge-gnulib (GNULIB_MODULES): Add time_r, since Emacs now
calls localtime_r and gmtime_r directly.
* src/dbusbind.c (Fdbus__init_bus): Move xputenv call from here ...
(init_dbusbind): ... to this new function.
* src/emacs.c (main) [HAVE_DBUS]: Call it before creating threads.
* src/xterm.c (x_term_init): Move xputenv call from here ...
(init_xterm): ... to this new function.
* src/emacs.c (main) [USE_GTK]: Call it before creating threads.
* src/editfns.c (HAVE_TM_GMTOFF): Default to false.
(dump_tz_string): New constant.
(init_editfns): Use it.  This centralizes the dump_tz stuff.
Call set_time_zone_rule here, so that its xputenv is done
before Emacs goes multithreaded.
(mktime_z) [!HAVE_TZALLOC]: New function, which is typically
thread-safe enough for Emacs.
(format_time_string, Fdecode_time, Fcurrent_time_string)
(Fcurrent_time_zone):
Prefer localtime_r and gmtime_r, which are more thread-safe, to
localtime and gmtime.  Remove now-unnecessary calls to block_input.
(tm_gmtoff): New static function.
(Fdecode_time, Fcurrent_time_zone): Use it.
(Fencode_time): Use mktime_z, for better thread-safety.
(set_time_zone_rule): Now static.  Rewrite to be mostly thread-safe,
i.e., not quite thread-safe but good enough for Emacs typical usage.
Do not reclaim storage that is in the environment; let it leak.
Always call tzset, since localtime_r does not.
* src/emacs.c (dump_tz, Fdump_emacs) [HAVE_TZSET]: Remove dump_tz stuff.
This is now done in init_editfns.
* src/systime.h (mktime_z, timezone_t, tzalloc, tzfree) [!HAVE_TZALLOC]:
New macros and declarations, for platforms lacking tzalloc & friends.

Fixes: debbugs:8705
"
5d8ea1203d1e659bc77d953784a85a6e7da0ce95,stinsonga/emacs-mirror,"Hide implementation of `struct buffer'
	* composite.c (fill_gstring_header)
	(composition_compute_stop_pos, composition_adjust_point)
	(Ffind_composition_internal): Use B_.
	* intervals.c (set_point_both, get_local_map): Use B_.
	* callproc.c (Fcall_process, Fcall_process_region): Use B_.
	* process.c (get_process, list_processes_1, Fstart_process)
	(Fmake_serial_process, Fmake_network_process)
	(read_process_output, send_process, exec_sentinel)
	(status_notify, setup_process_coding_systems): Use B_.
	* bytecode.c (Fbyte_code): Use B_.
	* syntax.c (update_syntax_table, dec_bytepos, Fsyntax_table)
	(Fset_syntax_table, Fmodify_syntax_entry, skip_chars)
	(skip_syntaxes, scan_lists): Use B_.
	* lread.c (readchar, unreadchar, openp, readevalloop)
	(Feval_buffer, Feval_region): Use B_.
	* print.c (printchar, strout, print_string, PRINTDECLARE)
	(PRINTPREPARE, PRINTFINISH, temp_output_buffer_setup)
	(print_object): Use B_.
	* font.c (font_at): Use B_.
	* fns.c (Fbase64_encode_region, Fbase64_decode_region, Fmd5): Use
	B_.
	* callint.c (check_mark, Fcall_interactively): Use B_.
	* editfns.c (region_limit, Fmark_marker, save_excursion_save)
	(save_excursion_restore, Fprevious_char, Fchar_before)
	(general_insert_function, Finsert_char, Finsert_byte)
	(make_buffer_string_both, Finsert_buffer_substring)
	(Fcompare_buffer_substrings, subst_char_in_region_unwind)
	(subst_char_in_region_unwind_1, Fsubst_char_in_region)
	(Ftranslate_region_internal, save_restriction_restore)
	(Fchar_equal): Use B_.
	* data.c (swap_in_symval_forwarding, set_internal)
	(Fmake_local_variable, Fkill_local_variable, Flocal_variable_p):
	Use B_.
	* undo.c (record_point, record_insert, record_delete)
	(record_marker_adjustment, record_first_change)
	(record_property_change, Fundo_boundary, truncate_undo_list)
	(Fprimitive_undo): Use B_.
	* search.c (compile_pattern_1, compile_pattern, looking_at_1)
	(string_match_1, fast_looking_at, newline_cache_on_off)
	(search_command, search_buffer, simple_search, boyer_moore)
	(Freplace_match): Use B_.
	* indent.c (buffer_display_table, recompute_width_table)
	(width_run_cache_on_off, current_column, scan_for_column)
	(Findent_to, position_indentation, compute_motion, vmotion): Use
	B_.
	* casefiddle.c (casify_object, casify_region): Use B_.
	* casetab.c (Fcurrent_case_table, set_case_table): Use B_.
	* cmds.c (Fself_insert_command, internal_self_insert): Use B_.
	* fileio.c (Fexpand_file_name, Ffile_directory_p)
	(Ffile_regular_p, Ffile_selinux_context)
	(Fset_file_selinux_context, Ffile_modes, Fset_file_modes)
	(Fset_file_times, Ffile_newer_than_file_p, decide_coding_unwind)
	(Finsert_file_contents, choose_write_coding_system)
	(Fwrite_region, build_annotations, Fverify_visited_file_modtime)
	(Fset_visited_file_modtime, auto_save_error, auto_save_1)
	(Fdo_auto_save, Fset_buffer_auto_saved): Use B_.
	* minibuf.c (read_minibuf, get_minibuffer, Fread_buffer): Use B_.
	* marker.c (Fmarker_buffer, Fset_marker, set_marker_restricted)
	(set_marker_both, set_marker_restricted_both, unchain_marker): Use
	B_.
	* insdel.c (check_markers, insert_char, insert_1_both)
	(insert_from_string_1, insert_from_gap, insert_from_buffer_1)
	(adjust_after_replace, replace_range, del_range_2)
	(modify_region, prepare_to_modify_buffer)
	(Fcombine_after_change_execute): Use B_.
	* filelock.c (unlock_all_files, Flock_buffer, Funlock_buffer)
	(unlock_buffer): Use B_.
	* keymap.c (Flocal_key_binding, Fuse_local_map)
	(Fcurrent_local_map, push_key_description)
	(Fdescribe_buffer_bindings): Use B_.
	* keyboard.c (command_loop_1, read_char_minibuf_menu_prompt)
	(read_key_sequence): Use B_.
	* fringe.c (get_logical_cursor_bitmap)
	(get_logical_fringe_bitmap, update_window_fringes): Use B_.
	* xfns.c (x_create_tip_frame, Fx_show_tip): Use B_.
	* xfaces.c (compute_char_face): Use B_.
	* character.c (chars_in_text, Fget_byte): Use B_.
	* category.c (check_category_table, Fcategory_table)
	(Fset_category_table, char_category_set): Use B_.
	* coding.c (decode_coding, encode_coding)
	(make_conversion_work_buffer, decode_coding_gap)
	(decode_coding_object, encode_coding_object)
	(Fdetect_coding_region, Ffind_coding_systems_region_internal)
	(Funencodable_char_position, Fcheck_coding_systems_region): Use
	B_.
	* charset.c (Ffind_charset_region): Use B_.
	* window.c (window_display_table, unshow_buffer, window_loop)
	(window_min_size_2, set_window_buffer, Fset_window_buffer)
	(select_window, Fforce_window_update, temp_output_buffer_show)
	(Fset_window_configuration, save_window_save): Use B_.
	* xdisp.c (pos_visible_p, init_iterator, reseat_1)
	(message_dolog, update_echo_area, ensure_echo_area_buffers)
	(with_echo_area_buffer, setup_echo_area_for_printing)
	(set_message_1, update_menu_bar, update_tool_bar)
	(text_outside_line_unchanged_p, redisplay_internal)
	(try_scrolling, try_cursor_movement, redisplay_window)
	(try_window_reusing_current_matrix, row_containing_pos)
	(try_window_id, get_overlay_arrow_glyph_row, display_line)
	(Fcurrent_bidi_paragraph_direction, display_mode_lines)
	(decode_mode_spec_coding, decode_mode_spec, display_count_lines)
	(get_window_cursor_type, note_mouse_highlight): Use B_.
	* frame.c (make_frame_visible_1): Use B_.
	* dispnew.c (Fframe_or_buffer_changed_p): Use B_.
	* dispextern.h (WINDOW_WANTS_HEADER_LINE_P)
	(WINDOW_WANTS_MODELINE_P): Use B_.
	* syntax.h (Vstandard_syntax_table): Update.
	(CURRENT_SYNTAX_TABLE, SETUP_BUFFER_SYNTAX_TABLE): Use B_.
	* intervals.h (TEXT_PROP_MEANS_INVISIBLE): Update.
	(TEXT_PROP_MEANS_INVISIBLE): Use B_.
	* character.h (FETCH_CHAR_ADVANCE): Update.
	(INC_BOTH, ASCII_CHAR_WIDTH, DEC_BOTH): Use B_.
	* category.h (Vstandard_category_table): Update.
	* lisp.h (DEFVAR_BUFFER_DEFAULTS): Update for change to field
	names.
	(DOWNCASE_TABLE, UPCASE_TABLE): Use B_.
	* buffer.c (swapfield_): New macro.
	(Fbuffer_swap_text): Use swapfield_ where appropriate.
	(Fbuffer_live_p, Fget_file_buffer, get_truename_buffer)
	(Fget_buffer_create, clone_per_buffer_values)
	(Fmake_indirect_buffer, reset_buffer)
	(reset_buffer_local_variables, Fbuffer_name, Fbuffer_file_name)
	(Fbuffer_local_value, buffer_lisp_local_variables)
	(Fset_buffer_modified_p, Frestore_buffer_modified_p)
	(Frename_buffer, Fother_buffer, Fbuffer_enable_undo)
	(Fkill_buffer, Fset_buffer_major_mode, set_buffer_internal_1)
	(set_buffer_temp, Fset_buffer, set_buffer_if_live)
	(Fbarf_if_buffer_read_only, Fbury_buffer, Ferase_buffer)
	(Fbuffer_swap_text, Fset_buffer_multibyte)
	(swap_out_buffer_local_variables, record_overlay_string)
	(overlay_strings, init_buffer_once, init_buffer, syms_of_buffer):
	Use B_.
	* buffer.h (struct buffer): Rename all Lisp_Object fields.
	(BUFFER_INTERNAL_FIELD, B_): New macro.
	(FETCH_CHAR, FETCH_CHAR_AS_MULTIBYTE): Use B_.
"
0cdffd7dd407452c8d60931736a5be52cf9ed7b6,stinsonga/emacs-mirror,"Small speedbar-related clean-up

* lisp/dframe.el (x-sensitive-text-pointer-shape, x-pointer-shape):
Remove unnecessary declarations.
(dframe-message): Doc fix.

* lisp/info.el (dframe-select-attached-frame, dframe-current-frame):
Declare.

* lisp/speedbar.el (speedbar-message): Make it an obsolete alias.
Update all callers.
(speedbar-with-attached-buffer)
(speedbar-maybee-jump-to-attached-frame): Make these aliases obsolete.
(speedbar-with-writable): Use backquote.

* lisp/emacs-lisp/eieio-opt.el (eieio-describe-class-sb):

* lisp/emacs-lisp/eieio-speedbar.el (eieio-speedbar-handle-click):
Use dframe-with-attached-buffer, dframe-maybee-jump-to-attached-frame
rather than speedbar- aliases.

* lisp/mail/rmail.el: Load dframe rather than speedbar when compiling.
(speedbar-make-specialized-keymap, speedbar-insert-button)
(dframe-select-attached-frame, dframe-maybee-jump-to-attached-frame)
(speedbar-do-function-pointer): Declare.
(rmail-speedbar-button, rmail-speedbar-find-file)
(rmail-speedbar-move-message):
Use dframe-with-attached-buffer rather than speedbar- alias.

* lisp/progmodes/gud.el: Load dframe rather than speedbar when compiling.
(dframe-message, speedbar-make-specialized-keymap)
(speedbar-add-expansion-list, speedbar-mode-functions-list)
(speedbar-make-tag-line, speedbar-remove-localized-speedbar-support)
(speedbar-insert-button, dframe-select-attached-frame)
(dframe-maybee-jump-to-attached-frame)
(speedbar-change-initial-expansion-list)
(speedbar-previously-used-expansion-list-name): Declare.
(gud-speedbar-item-info, gud-gdb-goto-stackframe):
Use dframe-message, dframe-with-attached-buffer rather than
speedbar- aliases.
(gud-sentinel): Silence compiler.

* lisp/progmodes/vhdl-mode.el (speedbar-refresh)
(speedbar-do-function-pointer, speedbar-add-supported-extension)
(speedbar-add-mode-functions-list, speedbar-make-specialized-keymap)
(speedbar-change-initial-expansion-list, speedbar-add-expansion-list)
(speedbar-extension-list-to-regex, speedbar-directory-buttons)
(speedbar-file-lists, speedbar-make-tag-line)
(speedbar-line-directory, speedbar-goto-this-file)
(speedbar-center-buffer-smartly, speedbar-change-expand-button-char)
(speedbar-delete-subblock, speedbar-position-cursor-on-line)
(speedbar-make-button, speedbar-reset-scanners)
(speedbar-files-item-info, speedbar-line-text)
(speedbar-find-file-in-frame, speedbar-set-timer)
(dframe-maybee-jump-to-attached-frame, speedbar-line-file): Declare.
(speedbar-with-writable): Do not (re)define it.
(vhdl-speedbar-find-file): Use dframe-maybee-jump-to-attached-frame
rather than speedbar- alias.

* lisp/cedet/ede/speedbar.el (ede-file-find, ede-tag-find):
* lisp/cedet/semantic/sb.el (semantic-sb-token-jump):
Use dframe-maybee-jump-to-attached-frame rather than speedbar- alias.

* lisp/mh-e/mh-speed.el (mh-speed-view):
Use dframe-with-attached-buffer rather than speedbar- alias.
"
6c42fc3efbbf590fca00b866859fbfa13d34b70a,stinsonga/emacs-mirror,"* lisp/dired-x.el:
* lisp/net/ange-ftp.el:
* lisp/net/browse-url.el:
* lisp/net/dbus.el:
* lisp/net/eudc.el:
* lisp/net/eudcb-ldap.el:
* lisp/net/eww.el:
* lisp/net/imap.el:
* lisp/printing.el:
* lisp/vc/ediff-diff.el:
* lisp/vc/ediff-init.el:
* lisp/vc/ediff-merg.el:
* lisp/vc/ediff-mult.el:
* lisp/vc/ediff-util.el:
* lisp/vc/ediff-wind.el:
* lisp/vc/ediff.el:
* lisp/vc/emerge.el:
* lisp/vc/pcvs.el:
* vc/vc-annotate.el: Prefix unused arguments with `_' to silence
byte compiler.  Remove some unused let-bound variables.
"
cff45569feaaa96e13ae4db7b2488c2b57d1dcf0,thought-machine/please,"Fix for proto rules to separate C++ headers / sources
"
74d67a42c0fcb6f0e37feb41325f1df0ceb19537,thought-machine/please,"Optional pytest runner for python_test (#252)

* adding new wheels

* Nominal support in pex writer

* support in build rules and config and whatnot

* adding an example test

* need funcsigs as well (for python 2 presumably)

* minor cleanup: use importlib instead of __import__

* adding separated test runners

* fixing up including/excluding files

* make it actually do something

* need pkg_resources :(

* fix bug in pex_main :(

* interesting rethink / hack: make test srcs data files for pytest so it can discover them

* okay so previous plan doesn't work, back to drawing board

* Revert ""interesting rethink / hack: make test srcs data files for pytest so it can discover them""

This reverts commit 1385fe5297ec26f8cb9f5fa5e2b762f46015aede.

* think this scheme works, although it is not exactly beautiful

* Back to old scheme again...

* trying to do the same for unittest

* updated comment

* don't forget resources
"
46fe96564ec7e33fe1a0ce874d419fdc25c63753,tmobile/jazz-installer,"US273818: OSS - Installer - Simplify:: Remove cloud front logs from Install

Former-commit-id: 9c62f63bbbf8d2efe38e3409fd91bbf7b5733089"
a194294a30faaf4aa616ec140af7f6ad0316b87f,wazuh/wazuh-kibana-app,"Fix Discover directive. Improve performance. Friendly URLs. Fast switching tabs
"
c8070b95d11acc675b5d1ddb8c30a9a0fe9dba49,wazuh/wazuh-kibana-app,"Simplify dynamic visualizations loading schema
"
5935014e2829229142ffc7b94fa5e2b0fe47d915,wazuh/wazuh-kibana-app,"Using default filters instead of text query
"
8bbe0a91e33f68910aa5ba91a770729cfa360e9b,wazuh/wazuh-kibana-app,"Merge branch 'rename' into 3.5-6.3-internet-explorer
"
624e7df6889cd994b522deffd10a29e3a76b817c,wso2/carbon-device-mgt,"Improving HTTP status code handling and the resource implementations
"
c13975191e84441c6800da28eccafda872ab81a1,wso2/carbon-device-mgt,"Code cleanup
"
aeb4ad329528e34191378a1ea13e753c37e5d5d9,wso2/carbon-device-mgt,"Merging rest-api-improvements branch to master
"
aeec472805687f1f81b36aa7c286c8606a01e562,wso2/carbon-device-mgt,"Merge branch 'rest-api-improvements' of https://github.com/wso2/carbon-device-mgt into rest-api-improvements
"
ffaccbe371c9899f4a17ac2cdb7a922b45a1544f,wso2/carbon-device-mgt,"Refactored policy
"
b0a55a55c85bef19a0de68ef14d60179a8b0e5ed,wso2/carbon-device-mgt,"code clean up
"
587f847934e26cd37ce8738af73f0621b34fb2f8,wso2/carbon-device-mgt,"ui improvements to device cloud
"
eff3efb72c2d7a3eed1b0860f1fcb94763e634a7,wso2/carbon-device-mgt,"Refactoring
"
3032b1c55f0afc36c5fd3d34180838a120f4044f,wso2/carbon-device-mgt,"Adding policy components, renamed the evaluator as the complex policy decision point, added the PIP component and simple policy decision point, Add the interfaces related to policies
"
c161d7b65941c2afd6e24b80ba64f641d75f5351,wso2/carbon-device-mgt,"Adding indexes to improve performance of entity retrieval and fixing a sytax error in the SQL query used to retrieve activities
"
a46bd9194b580b1ca518bdc680f64d3f20286885,wso2/carbon-device-mgt,"Merge branch 'rest-api-improvements' of https://github.com/wso2/carbon-device-mgt into rest-api-improvements
"
adebf34ff25224ffd8b188594dbdfbbabe2b89d9,wso2/carbon-device-mgt,"Refactored the device id to integer.
Created method to convert dto.device to common.device
Created a bulk method for conversion
Implemented getAllDevices
"
5caa5750e052631c4503c6de1c87a569e42477ab,zeroDivisible/.emacs.d,"Rework the toggles of the mode-line

Now the symbol corresponds to the key binding.
The global version of the toggle when available is performed
with `control` modifier.
"
d587dd9db92308c1711d732394a52654b4658d0d,zeroDivisible/.emacs.d,"Use universal argument for auto-indent pasted text and add doc

Using the prefix argument does not work nicely with evil since it is
already used to paste several times. Instead we use the universal
argument. To make it work with the evil functions we have to do some
trick to hide the universal argument temporarily (see around advice).
"
29138818ac0462b6f8affa900d7d14975263f8c8,AllureOfTheStars/Allure,"Fix and refactor HP modification

Adding HP now does not, in effect, lower HP, if it's higher than max HP.
"
6a58b4d505bde59cfbb22cf258dc8abdd5db8c88,AllureOfTheStars/Allure,"Moved Actor type, rearranged some modules.

Heavily edited by Mikolaj for inclusion in master branch.
"
596fdfe1413e9c6787b9a74d58fadfdaede4b0eb,AllureOfTheStars/Allure,"rename components of ItemKind to match TileKind
"
86fd62079051aa37680494e419caf621d2286744,Bang3DEngine/BangEditor,"Improved visuals
"
26cd7785830a363d76e6edc0d67fb8f63978a710,CartoDB/CartoDB-SQL-API,"Improved param name
"
04e03b0d2ce0750a5c45ce0ee7d8b944035bc6ee,Clinical-Genomics/scout,"Refactor how external links are handeled
"
f688453e7e16deabfac7a3af1d9945f2cc438db5,Clinical-Genomics/scout,"Renamed commands and changed load case
"
4703de59db3d7bc0d89d3c57dfef2a5e8ddf422a,Clinical-Genomics/scout,"Merge pull request #354 from Clinical-Genomics/simplify-loading

rely on scout config for loading"
0a36dde1fc7f768abaca7961aa0b5a589edbc84f,CommandPost/CommandPost,"Updated Language File

- Moved scriptName into Language File
- Added some language items for CommandPost-App
"
93c74e31e1f63e48559945a1261b67881d71115c,Ensembl/ensembl-compara,"Renamed the method for clarity
"
49ace7e4abfc0e086a024377d24b68906fe61267,Ensembl/ensembl-webcode,"
Moved raw url selection to output module
"
ab9364454ac55b6c218e7eddce1dd62966123a71,RigsOfRods/rigs-of-rods,"Merge pull request #1158 from ulteq/minor-cleanup

[Cleanup] Minor cleanup in various places"
c8066e218caff159738fe1f39151c34b69cb42dc,RigsOfRods/rigs-of-rods,"Merge pull request #883 from ulteq/pthread-removal

[Cleanup] Replaced pthread threading with C++11"
cf567fd1f0e6c12852e516a113968aa9bade7e3f,RigsOfRods/rigs-of-rods,"[Codechange] Reimplemented the network code
"
539a800e8ae7d02095b5ef736054994170630fd0,WoWAnalyzer/WoWAnalyzer,"Rename maintainers to contributors & update spec card layout
"
a42899cb451a3fc4787bdb9fa518bf24e53133e1,WoWAnalyzer/WoWAnalyzer,"Move shared requirement types to Requirements folder
Replace enchants requirement with a shared version
Enchants requirement now has a visible max enchants count
"
46d812bdda19ad4eb06e7d372913835e926b6e1d,WoWAnalyzer/WoWAnalyzer,"Holy Paladin: Added a ""Use your supportive abilities"" rule
Added Lay on Hands to Abilities
Rename spells to abilities
"
8aac3af97db0e108a278b5c76196d6b0198af671,WoWAnalyzer/WoWAnalyzer,"Merge pull request #2543 from Dambroda/mage-cleanup

[Mage] Fix some capitalization and add missing ability buffids"
d77fecea51de5a5d476ccd9df95b25f317b7867d,WoWAnalyzer/WoWAnalyzer,"removed unused variables and freezing rain
"
84b79641d881d436f4f96cf3273a568f400601da,WoWAnalyzer/WoWAnalyzer,"Merge pull request #993 from Pewtro/tier21update

[Marksmanship] rework t21 + descriptions of items and spells"
55f7ad76732fa1cf2c6e3fe47193307a856c5ab1,WoWAnalyzer/WoWAnalyzer,"[frost mage] Reworked IcicleTracker into GlacialSpike, fixed bugs
"
074dfebeb60a183a1a166790f8c6b3a22b4dd2e4,WoWAnalyzer/WoWAnalyzer,"Extracted few things to a shared folder
"
d9ab9d3383a2d63778e0a57c23b58e0b21c10b76,WoWAnalyzer/WoWAnalyzer,"Merge remote-tracking branch 'upstream/master' into cast-efficiency-rework
"
289dcc932cf0ff499de2049949dd120abfd46bd4,WoWAnalyzer/WoWAnalyzer,"Removed some console.log in Coldheart. Reworked the suggestiontresholds in Apocalypse so that they work correctly. Added a new module that tracks the reapplication of Virulent Plague
"
6262ee6701d14c588d5e3f297c8878188b65fea8,WoWAnalyzer/WoWAnalyzer,"Merge pull request #1179 from kfinch/20180112-resto-druid-fixes

[resto druid] ToL rewrite + some minor fixes"
cfe82aac2aa777f9677d2ac6b97f75b131bdc5fb,angular/compiler-builds,"06a3398 build: rename angular_devkit dependency to angular_cli (#24842)
"
d70a3fb543bd5909f58c3de4ddaae3b951724a06,angular/compiler-builds,"41c8c30 chore(lint): remove unused imports (#11923)
"
9abea4a0af0d03dec5935cab9c3c445f326e630f,angular/compiler-builds,"aedebaf refactor(ivy): remove LNode.tNode (#25958)
"
e36ec0c55adbe11344a8e5870c29479ca43fdf4c,angular/compiler-builds,"6b02b80 fix(compiler): improve error message for undefined providers (#13546)
"
89a346dc78109aa1d9f8206971655c4557a41464,angular/compiler-builds,"0fb7484 refactor(aio): move content-specific images to `content/images/`
"
e1d91b99337df831ad0efcd0acbad99f816ae3d5,angular/compiler-builds,"abecf3e build(aio): move the `transforms` folder into the `tools` folder
"
840b06e37a6234422a6e37c538db38f2fedafa7c,angular/compiler-builds,"85d3b59 refactor(ivy): generate pipe names instead of defs (#23104)
"
728ccf173513dceed649276473f541197a99ee4a,angular/compiler-builds,"d4ddb60 refactor: format & lint
"
ecd2573b52d77abc83c4e77efda8b8b10cf1a7f5,angular/compiler-builds,"450a13d fix(upgrade): deprecate the dynamic version of `ngUpgrade`
"
83b64c58761c2871eac6dbed62b110545571e66c,angular/compiler-builds,"1e3460b refactor(ivy): remove obsolete types (#25767)
"
2eaa42a2a4a4355fecef9dec85efa80462c4983c,angular/compiler-builds,"79383ce refactor(compiler): never create CompileDirectiveMetadata with not loaded resources (#12788)
"
88b9b5d19ec7d9881b44d460135a5c1547aef763,angular/compiler-builds,"33c8948 refactor(animations): ensure animation data-structures are created only when used
"
e46c94acfe2bf16483fc9a78e6a7b18b8f30b985,angular/compiler-builds,"12959f4 refactor(router):remove unused parameter pathIndex (#13180)
"
bfedf9def8665d96ef25effaab557f33531a2274,angular/compiler-builds,"b5c4bf1 refactor(router): misc refactoring (#13330)
"
eb3cbc9c30991c4348d6722b3f2eed4c88377d95,bcvsolutions/CzechIdMng,"Refactor IdentityRoleDto and workflow definitions
"
a68722d6bdb2cb106ca9405a7dda594c6b58f7b5,bcvsolutions/CzechIdMng,"#537 redundant class info removed from logs
"
cc50e67a348a4acc1cf3c135f254fd06574fa6e1,bcvsolutions/CzechIdMng,"unify test helper api
"
3f281b85ceaf36bf723c72c6e0ae23cb4e72770f,bcvsolutions/CzechIdMng,"annotation IfEnabled renamed to Enabled
"
a0a1eb3dde4fe8b0ca57b79ee274b8d5f73e8e6b,bcvsolutions/CzechIdMng,"#504 FE - readem and locales cleanup
"
24c4616faa04319ee2303b5359fbcaebd3b5e369,bcvsolutions/CzechIdMng,"#789 improved messages in virtual systems
"
11e51af3b19e3e786693920d001a34603fcce328,gnu-mcu-eclipse/openocd,"Merge pull request #173 from riscv/warn_names

Use register names instead of numbers in warnings"
5b9899d6ea1e0cf763465c64c700f20eddd893f9,gnu-mcu-eclipse/openocd,"add more command_handler conversion macros

Add additional macros to allow command handling to be migrated easily:
CMD_CTX, CMD_ARGC, and CMD_ARGV.  Updates CMD_NAME to use CMD_ARGV.

In addition to making the remaining patches of this series cleaner,
this introduces easily sed-able symbols that could allow us to retire
these once the command handler infrastructure matures (i.e. pre-1.0).
"
d0809ac060b35a04e7f0bceb96e1868663bd18df,gnu-mcu-eclipse/openocd,"scan_field_t -> struct scan_field

Remove useless structure typedef.
"
17fa4de8541ac12fad2ce836aa61d22dbf1642c8,gnu-mcu-eclipse/openocd,"Add target_step wrapper:
- replaces all calls to target->type->step.


git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@1965 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
0f1163e823c6ca3c2a81fa296157f5dde0635fea,gnu-mcu-eclipse/openocd,"target_t -> struct target

Remove misleading typedef and redundant suffix from struct target.
"
696a20fea495b589305abe6cbd4cbfeb498a33a6,gnu-mcu-eclipse/openocd,"- remove unused objcopy from configure.in
- make sure bin2char is built before openocd
- add generated startup_tcl.c to clean list
- pass startup_tcl directly to Jim_Eval

git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@805 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
a916d204b9e4b13b2f5e95e2fb8c4f0acb586ee3,gnu-mcu-eclipse/openocd,"Optimize memory read.

Saves 8s on the full test suite.
"
ed12a6521f2ad26ab7140d346bc10250cbf869e1,gnu-mcu-eclipse/openocd,"flash: retire unused eCos flash driver

even the AT91EB40a's flash is covered by CFI and nobody ever submitted
any other drivers based on eCos code. It's just possible that this
idea was missing documentation and ""marketing"", but it's in git if
somebody wants to resurrect it.

Change-Id: I66449aa6e0997301f9d67f28098789bfc891d6e9
Signed-off-by: Øyvind Harboe <160ac0226b699d433502c3596d87a196058e5072@zylin.com>
Reviewed-on: http://openocd.zylin.com/502
Tested-by: jenkins
Reviewed-by: Øyvind Harboe <44894f0cebb203a22ba5c667822385540018961a@gmail.com>
"
6dc2c2ce970863a079f101d84a0c47b37b682c76,gnu-mcu-eclipse/openocd,"Encapsulate jtag_reset_config using accessors:
- Update handle_reset_config_command in tcl.c to use new helpers.
- Replace direct accesses in JTAG interface and target drivers.


git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@2161 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
a7f5cdf999cd3fb8d3a681bcb6d8f8880faf8a11,gnu-mcu-eclipse/openocd,"ARM11: switch to new ""arm"" base type

This will enable reusing many common ARM utilities, in
particular the ETM and ETB support.  The ARM11 support
can still be much simplified after this patch, though.

Note:  none of those common utilities kick in yet...

Signed-off-by: David Brownell <a0d09457d62acbdeb1fae1223575100ccbfffdf9@users.sourceforge.net>
"
aafb916bea1153b8d2f4706e4a62628f49741133,gnu-mcu-eclipse/openocd,"ARM7/ARM9: use shared examine() method

No point in having two identical examine methods for the
ARM7TDMI and ARM9TDMI drivers; move, rename, shrink, share.

Add a bit of doxygen; stop needlessly exporting a method.

Signed-off-by: David Brownell <a0d09457d62acbdeb1fae1223575100ccbfffdf9@users.sourceforge.net>
"
175867ea323137285a5389fc6a65105c06853651,gnu-mcu-eclipse/openocd,"Encapsulate the jtag_trst and jtag_srst variables:
- Add accessor functions to return their value.
- Use new SRST accessor in cortex_m3.c and mips_m4k.c


git-svn-id: 9342d66d65669805328cff97dc80921f9b0842c0@2157 b42882b7-edfa-0310-969c-e2dbd0fdcd60
"
af949b2531d2a8863d077025db40cbb170d13a63,gnu-mcu-eclipse/openocd,"armv4_5_common_t -> struct arm

Remove misleading typedef and just use struct arm.
"
14c0b638bd8adf2016481d93da8db41941541eb6,google/closure-compiler,"In ES6 mode, preventatively rename caught exception to avoid shadowing.

Factored out Es6RenameReferences.

Renamed Es6RewriteLetConst to Es6RewriteBlockScopedDeclaration.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=99757760
"
62d229a82235660214de930e8377126b41e38d62,google/closure-compiler,"Automated g4 rollback of changelist 159521316.

*** Reason for rollback ***

Breaks calendar.

*** Original change description ***

[NTI] Implement JSType#getSubTypes

Includes some minor changes to the semantics.  In particular, there's no reason to keep a class' subtypes separate form an interface's direct implementors: NTI does not make this distinction, and no callers distinguish (rather, they just end up asking for both).  So #getDirectImplementors has been folded into #getSubTypes.  Additionally, it no longer ever returns null: an empty list is returned instead, making it more ergonomic to use.

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159559082
"
cc05a011a002c52857335d9a72f826a96e3caf3a,google/closure-compiler,"Changes ClosureRewriteModule desugaring to allow inner class declaration before outer class. IE goog.module(""foo.bar.Outer.Inner""); before goog.module(""foo.bar.Outer"");

Some of the major implementation points:
- instead of creating a goog.scope() rename every top level name in a module with a module$contents$Foo_ prefix to guarrantee uniqueness
- for goog.module()s rename the exports object to module$exports$Foo for global uniqueness
- rewrite all goog.require()s that reference a goog.module() (even inside of legacy scripts) to pull in the relevant module$exports$Foo object.
- inline all type aliases (both from goog.require()s and goog.forwardDeclare()s) in goog.module() files because goog.scope() did this and other passes have come to depend on it
- if a goog.module() declares legacy namespace add a ""foo.Bar = module$exports$foo$Bar;"" binary name to legacy name bridge at the end so that legacy goog.require()s resolve
- for every legacy script add a ""var module$exports$foo$Bar = foo.Bar;"" legacy name to binary name bridge at the end so that all goog.require() statements inside of goog.module() files can be desugared with the assumption that there is a binary name out there for it to reference
- replace JsDoc type names in the entire program to turn fully qualified type names that reference types in goog.module() files into resolvable ""module$contents$Foo"" references, as well as to account for type alias inlining in goog.module() file.

Fixes https://github.com/google/closure-compiler/issues/1264
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=118622849
"
1a8bb56a4ba95d08a051533d4ed15a23b0fcd6b1,google/closure-compiler,"[NTI] Refactor CodingConvention.addSingletonGetter to share the same implementation for both OTI and NTI.

The main change is to introduce an ObjectTypeI.PropertyDeclarer interface that exposes a declareProperty method to add a property to a not-yet-frozen type.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=168755535
"
3040940548591296ca92b643f0b7de4c8df7d4c7,google/closure-compiler,"Adds a J2CL pass to rewrite output to be more compiler-friendly.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=109022150
"
227625182a4754c01565b4a6ca469f9c9daec42a,google/closure-compiler,"Fix three bugs in jsdoc creation/attachment in WizPass and enable jsdoc checking in the unit tests.

Public:
Misc cleanup
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106706732
"
8bf67e65c7ee2a202ac2dbf252727ae656642350,google/closure-compiler,"
Change on 2011-03-18 10:06:19-07:00 by nicksantos

	Allow suppression of duplicate property declarations when
	the property is in an object literal

	R=johnlenz
	DELTA=48  (47 added, 0 deleted, 1 changed)

Change on 2011-03-18 12:02:54-07:00 by nicksantos

	Allow the ""global this"" warning to be suppressed on a per-file basis

	R=johnlenz
	DELTA=82  (50 added, 22 deleted, 10 changed)


Revision created by MOE tool push_codebase.
MOE_MIGRATION=945


git-svn-id: 708380be11bb4c96db8d1bd19ea12a301575c487@909 b0f006be-c8cd-11de-a2e8-8d36a3108c74
"
3a0b893c1497893ecab413965d3d544dd45955e5,google/closure-compiler,"Automated g4 rollback of changelist 112488865.

*** Reason for rollback ***

Bug on typing for ALL_TYPE

*** Original change description ***

Make (?|undefined) properties optional in record types

Fixes https://github.com/google/closure-compiler/issues/1402

This is needed by CL 112188151, which generates optional untyped properties from Soy parameters.

Public:
Make (?|undefined) properties optional in record types

Fixes #1402

***
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=112593618
"
3a933b9e9ed0556a944fd918b3e8f0c36218a43d,google/closure-compiler,"[NEW TYPE INFERENCE] Fix bug to make generics invariant again.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92735745
"
641e5d0a7c3e8fa7a20e7db7435ccb08f7a2ee49,google/closure-compiler,"[NTI] Infer the type of local variables in GlobalTypeInfoCollector, to improve type information across scopes.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=174353929
"
ed3cf44ad62dda12b9b3ca9d31348c8c9cf91b3b,google/closure-compiler,"Make public classes final so that they don't get extended without us knowing.

-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89731791
"
69bac7c1901038759305e83877fdd6b6eb8d2998,google/closure-compiler,"Run ConstParamCheck before smart name removal, so that invalid calls to goog.string.Const are flagged in dead code too.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=132659344
"
5ab7494f4636b055e81c48b21912e05cdb295190,inspirehep/inspire-next,"global: force_list -> force_force_list

* Amends all uses of force_list to force_force_list.

Signed-off-by: Jacopo Notarstefano <9b2cfbb82b98c608f2c886ba9b6f43b79f78200a@gmail.com>
"
b1ea98bf68f79c84600403c772b7aa4dfff80ec0,inspirehep/inspire-next,"crossref: refactor module

Reorganizes the module in such a way that the core business logic lives
in `core.py` while the views are in `views.py` (closes #2257).

Signed-off-by: Iuliana Voinea <3cc36df3519c7ad24e77c7f913c08d45b7120a66@student.manchester.ac.uk>
"
8063d0bd03b511fb47f795244afd6695d4e8dbaa,inspirehep/inspire-next,"dojson: alternative_name -> alternative_names

Signed-off-by: Jacopo Notarstefano <9b2cfbb82b98c608f2c886ba9b6f43b79f78200a@cern.ch>
"
d86263e35fcc237f42f7498e9fdf071cbbfb2519,inspirehep/inspire-next,"predicter: renamed module from classifier

* Renames the INSPIRE classifier module for predictions to not clash
  with Invenio classifier module.

Signed-off-by: Jan Aage Lavik <8d55e006a1b29770f275a5c59a7341f17f8e69d5@cern.ch>
"
56c423dd525b5d20e99ac1ce77f160ce3d16266b,kbase/KBaseSearchEngine,"Add a couple of helper methods to the object queue.

Also extract NoSuchEventException for use elsewhere."
edd0bce194cba02a0670ced39b10e492f9e5b8ac,keyboardio/Kaleidoscope,"Merge pull request #57 from algernon/f/layer-rework

Layer rework"
0c2bd3bdfc1ca4c2526fd3dafe8308e5ab9e6824,laredoza/.NetScaffolder,"#40 Property rename
"
b79cdbc41624f0275d13733fa40a162898aac993,qutebrowser/qutebrowser,"Clean up Question objects correctly
"
034d727a2c6f91f1048bea0a979483f180961c0d,qutebrowser/qutebrowser,"Clean up configdata
"
6c3f90146f9742f3854faf7b096a3fb99d145d16,qutebrowser/qutebrowser,"Make qtutils.version_check strict by default

This also renames 'strict' to 'compiled' to be more descriptive.
It also fixes a crash when starting qutebrowser with an older compiled Qt
version which was introduced recently (calling setSpellCheckEnabled).
"
f230fd3abb8dff2f00c6309fc1cb2c2bfdc62a4e,qutebrowser/qutebrowser,"Rebuild requirement files
"
a940de3717d167cd7c13ce5429fd58d6b23d74d7,qutebrowser/qutebrowser,"Rename editing_finished to file_updated.

ExternalEditor now fires an event on save rather than on exit, so the
signal name should be updated to match the behavior.
"
c76473347256fc7737c5aabb2875d462a948c481,qutebrowser/qutebrowser,"Refactor QWebElement API, part 1
"
1fb12c1dd093c649727fac0520861dcf69dac6e3,robolectric/robolectric,"Use RuntimeEnvironment.getApiLevel() instead of Build.VERSION.SDK_INT, it's more stable.
"
feaff950a5ef20e5cacca4e1db3e48e35da878c9,robolectric/robolectric,"Merge pull request #3730 from robolectric/refactor-instrumentation-more

Refactor instrumentation even more."
454a3a8c01e3e3cc0fd76b04b2743b4c1426662e,robolectric/robolectric,"--

Add getResourceId() + getResName() methods to ResourceProvider. For now simply delegate to the contained ResourceIndex.
Update non org.robolectric.res references of ResourceIndex to go through methods of the same name on ResourceProvider.
Make ResourceIndex interface package private.

--

Encapulate ResourceIndex inside of ResourceProvider by removing ResourceProvider.getResourceIndex() and replacing it with getResourceId() and getResName() methods.
ResourceTable now has a getPackageIdentifier() method to mirror its getPackageName() method.
Remove RoutingResourceIndex since this is now no longer needed as RoutingResourceProvider routes to the correct ResourceTable that provides these lookups directly.

--

* Pull up PackageResourceIndex into ResourceIndex

--

* Further encapsulate ResourceIndex so the only way to access it is through the ResourceTable - this is a stepping stone to providing pluggable ResourceTableFactories
* ResourceExtractor now becomes ResourceTableFactory

--

Encapsulate ResourceIndex entirely within ResourceTable. ResourceIndexTest becomes ResourceTableTest (which didn't exist before)

--

* ResourceTableFactory now encapsulates the calls to ResourceParser. This gives a single entry point for building a ResourceTable meaning it will be easy to switch out ResourceTableFactories for different strategies of building ResourceTables.
"
a610b769cee24d752060c46feef98a586b361d81,robolectric/robolectric,"Remove testutil subproject (#3030)

* Remove testutil subproject

 Remove single class TemporaryFolder, prefer default JUnit rule and use Guava instead to write string contents to file.

* Fix tests to not create duplicate files (this is an error with the standard JUnit TemporaryFolder rule.

* Fixed test that was added later using old rule.
"
64542fc8035b71252dd7d8678dd82e1a910a76c4,roundcube/roundcubemail,"Drop support for IE6, move IE7/IE8 support to legacy_browser plugin, update to jQuery-2.1.0
"
6b2b2eca5fa48720c4e5b31b9aae200a185dfc0e,roundcube/roundcubemail,"Remove deprecated functions (these listed in bc.php file) usage
"
f1f17fa5a4284011bd4dbc00b33b61785fd5c645,roundcube/roundcubemail,"- fix collapsing of folders with plus sign in name (use urlencode instead of escape)


"
1c8cf824be0a0431c23cafaa681688e7eab91c95,roundcube/roundcubemail,"Small improvements
"
9082bf1cea518428dc786e96693b9a5246f382dc,roundcube/roundcubemail,"Fix handling of some HTML tags e.g. IMG (#1488471) - reworked fix for #1486812
"
b6da0b76afb5697685c35b8584631294cfc7b12f,roundcube/roundcubemail,"- Remove deprecated global $IMAP variable usage (#1488148)


"
51812b9c1c6b1b3195b240bda7ed669c228a8558,sitespeedio/browsertime,"Rename experimental and dump to chrome and collect (#291)

* rename experimental and dump to chrome and collect

* lint

* use Log instead of log and remove chrome

* Rename options for chrome trace collection.

* Events are named Tracing, not Trace, rename options to reflect that.
* Clarify description of tracing and perfLog cli options.
* Enable perflog collection if chrome.traceCategories or chrome.collectTracingEvents is set.

* Better description for chrome.collectTracingEvents

* Parse old names for renamed Chrome config.

Log a warning when any of
- experimental.dumpChromePerflog
- experimental.dumpChromeNetlog
- chrome.dumpTraceCategoriesLog
is used. The old names will still work, for now.

* Changelog, and remove unneeded option migration.

No need to add a migration of experimental.dumpChromeNetlog, since that was never included in a release.
"
8587f21bcfb2326f291c4fea22f2e5f6ed61aa58,smartdevicelink/sdl_ios,"Renamed SDLTextAlignment enums
"
dd05e5044ee245e26b132698f860bd534198705b,smartdevicelink/sdl_ios,"Replaced all defines with constant strings of the SDLName typedef. Also modified SDLFunctionID to use a static dictionary.
"
3c4b71f96bf25447fc357724fae7989797f31d94,smartdevicelink/sdl_ios,"Bunches of goodies for SDLManager!

* Fixed a bug where the implementation of the SDLProxyListener method attempted to typecast an SDLEnum to a notification
* Added a category to allow subscripting on SDLMapTable
* Added a bunch of generics
* Added nullability annotations
* Added nonatomic to public properties since we're assuming main thread only for now
* Added an error constants class for error domains and codes
* Moved SDLManager NSError creation to an NSError category in the same file
* Added typedefs for some NSNumbers to make it clearer what they should be in generics
* Added prefixes to private methods to make it clearer what is private and what is public
* Added `__kindof` where possible to remove upcasting requirements
"
bdea4bc149c9c13f73eb163f623ec3d9f627afc7,smartdevicelink/sdl_ios,"Renamed a bunch of stuff like SDLProxyBase

* enum now typedef NS_ENUM
* Removed #ifndef
* SDLManagerDelegate protocol methods is now optional
"
65ca44a6b13d32a01318fb3899ca86f41b375f88,smartdevicelink/sdl_ios,"Code cleanup - changed some public properties to copy type. Moved some methods to a protected header file. Renamed the new delegate header file. Still fixing nonatomic vs atomic properties.
"
38ee2eacd73fd151afae92ba90bf2194758d685e,smartdevicelink/sdl_ios,"FileManager tests around uploading

* Separate TestConnectionManager into its own class
* FileManager now sets the bytesAvailable in error states that still have a response
"
34df746c8622125a26647077919cc089a0526902,stephenegriffin/mfcmapi,"Convert cancel macros
"
a4507dd7cde3bb53a7280743868d3e1e8d748022,stephenegriffin/mfcmapi,"Move some mapi functions from importprocs to the mapi namespace
"
45d7829bba3313b712926ae3856494fbd938f4d3,tualatin/tailforwindows,"Rename Find stuff, working on shortcuts
"
024b4f0927cc07895d1067b7339ed65c2e7fbce8,tualatin/tailforwindows,"Improve find behavior
"
725ee661030c85d7c8db8e7634407350bac4f0b3,tualatin/tailforwindows,"Rename TailStorePath -> UserSettingsPath
"
80ec7ee66abe0ccc1775b6e69c953bb33e456a1c,tualatin/tailforwindows,"Working on LogWindow -> TailWindow
"
cc18956e882cad93a83121485f01847faebeb22d,ulaval/modul-components,"rename aspect by skin

"
34eaa9563757ce30a054a9b226857edaababb225,ulaval/modul-components,"Deleted m-table component, added .m-u--table as utility class

Renamed .m-u--list-header to .m-u--header and updated style to fit both list and table."
ffb2e9cdfaa6a7407019a155a874fef052b836ea,ulaval/modul-components,"Refactor of dialog, secondary dialog and panel-dialog.

dialog => modal
secondary-dialog => dialog
panel-dialog => sidebar

Removed the 'mode' props"
70a1ab308c2241a16f0c759be3f7a90fec6eb6b3,victorbrodsky/order-lab,"removed deprecated security.context to security.authorization_checker
"
8291598354c3294d9d4729164229ba4394c24b39,webrecorder/webrecorder,"cookie store: ensure session included in temp key, use /<user>/<coll>/$add_cookie path and make rec optional (to allow for use with collection replay), #79
"
4f7a193d46b798907eb181fb6c9b17b360d1a125,webrecorder/webrecorder,"collection level patching: 'patch' mode now applies to entire collection, eg. only resources not found elsewhere in the collection are recorded.
bookmarks: load count of bookmarks per collection, rather than per recording, add new collection level 'num_pages' api (until full renaming is done)
bookmarks: in patch mode, only add bookmark if 'is_live' is set (actually recording)
recorder: also record revisits (dupe entry) each time a page is recorded to avoid confusion
addresses #158
"
242d1e287e87c756582f2564520d25bebaf7a109,webrecorder/webrecorder,"upload system optimizations and progress reporting: (#297)

for uploads:
- upload with POST directly (first 50%)
- store indexing progress in redis key, poll for indexing progress (second 50%)

for standalone/indexing on player startup:
- store indexing progress in special init key, display progress bar until all WARCs are indexed
- show progress across indexing of all WARCs, redirect to player interface after indexing is done

- better tolerance for partially valid WARCs, index valid data, skip invalid remainder

- mounts: use regular form post instead of ajaxForm plugin
- cleanup: remove jquery ajaxForm plugin, no longer used
"
80f59d94c0f8c7deda0ff769e56c5f6833b6a0d5,webrecorder/webrecorder,"new_recording page: factor out common code, fix contentcontroller routes to ignore paths starting with '$'
to avoid conflicts
"
16eebb676f6532d67b00ed207515d674d6dcb0b8,yeastgenome/SGDFrontend,"remove dead code
"
a56bb3d1eb9384e7f95c4e1548ef9b5b89777c70,zstackio/zstack-utility,"Use cdrom config number instead of iso letters numbers to create cdroms

Signed-off-by: AlanJager <7ba0221af525cfcc7adbf94f7fc6b46fa1dcb7c9@outlook.com>
"
2e16a6d68c51a1c6bda2f278810219f5003f329d,Azure/azure-sdk-for-node,"Improving azure site --location option

Don't prompt for location when provided
Map provided location from matching display name to webspace name
"
b8e0b55e7223cf8be028ba1c7976fed15e89a384,Azure/azure-sdk-for-node,"Generated the graph.rbac client with latest spech changes and made it ready to publish under azure-extra module
"
c5eaa1488defd6140449853d3fc5d6f401303a5f,EmmyLua/IntelliJ-EmmyLua,"move files
"
8e2d3018031564eeb88719e15f16423e5c1bdc74,EmmyLua/IntelliJ-EmmyLua,"optimize getParams
"
c828b6c63a5befbfa909874f5cbb5361853adbbb,Graylog2/graylog2-server,"Refactoring inputs, the input registry and consuming classes
"
b49cf933c8e9f67696c4553ed4a1b26888081923,Graylog2/graylog2-server,"Reducing code duplication due to server vs. radio

Created submodule graylog2-shared which is supposed to hold code which
is not part of the plugin api but still used by server and radio modules
Introducing MetricsHost and ProcessingHost interfaces
Moving several classes to shared module and refactor references,
       partially generifying those classes to use interfaces instead of
       Core/Radio objects
"
eac328dc6ccb9286b1b60280e2eab6d12cc2a904,Graylog2/graylog2-server,"added journal command line group and initial show command

refactored bootstrap code into a minimal injector and config base class and a ""server bootstrap"" one which loads the generic bindings etc for radio and server nodes
this could be broken down further, but this should be the minimal amount needed to support simple commands
"
1d4426e3f3f1ae055011b8fff45e388aecd6d827,Graylog2/graylog2-server,"Remove unused configuration item messages_collection_size
"
64a4fb3098ad1ec1b6d5af9e3f5c66c8839825cf,Graylog2/graylog2-server,"Extracting sample message loader to module

Next: Refactor extractor creation page to use it
"
2e7e82092569d38cfed346b9ba1b97bbcc7e7f82,Graylog2/graylog2-server,"add dependency to google's guava libraries
use Maps and Lists utility methods instead of explicit news with lots of generics type crap"
7d4bbae75f9f8a011b0bb099473e7cf78555e3b9,Graylog2/graylog2-server,"route restructuring and first parts of node detail page. #258
"
7bd5af280c54d2c9b8812100a1b71a53820de32f,Graylog2/graylog2-server,"Make field graphs persistent

- Use a store to access the browser local storage
- All field graphs are pinned by default now, to get rid of them the
  user has to explicitly click a remove button (still not implemented)
- Ordering seems to work out of the box, although we need to ensure
  this (order in immutable-js maps is not guaranteed afaik)
- Removed lots of old code regarding ordering and pin/unpin graphs
"
11d8bda90e26df00d5d38f77c5b8343236142149,Implem/Implem.Pleasanter,"Refactored: モデルファイル内のクラスを別ファイルに分割。
"
dfd74b7c513a64a15846e78361c8c4387e266060,Implem/Implem.Pleasanter,"Refactored: クラス名の変更とファイル切り出し。（TitleUtility → Titles）

TitlesクラスはLibraries.Models名前空間に移動。
"
b8bcef051019f533381d89e0ca9c3b7f02cc5e33,Implem/Implem.Pleasanter,"Refactored: メソッド名の変更。（Displays.Up → Displays.MoveUp）（Displays.Down → Displays.MoveDown）
"
ca1fc1d544dd992c3b163b502cf0cbea1f4eee10,Implem/Implem.Pleasanter,"Refactored: 引数名を変更。（columnCollection → columns）
"
89c17d840eefae74e34ccdbe4943b6d1d4686376,Implem/Implem.Pleasanter,"Refactored: スタイルシートの名称を変更。（must-transport → always-send）
"
e071d5c17ffdcf7c6ac8d8bf819f36473988b90d,Implem/Implem.Pleasanter,"Refactored: 名称の変更。
"
34217d945ff2651897ceed8e0d619c0be36787f8,JetBrains/intellij-scala,"Combine project id and URI to use as module id, in order to guarantee uniqueness on multi module projects. #SCL-13600 fixed

Signed-off-by: Fernando Cappi <e4e1c0560512cba6ed2096a3d213d20257224c54@gmail.com>
"
044a92d16a8bea3ec341d430814314c28480894b,JetBrains/intellij-scala,"More stable version of Introduce Parameter refactoring.
Now needs testing.
"
75a56876b738caed5d97af850b0b6668d5221a68,JetBrains/intellij-scala,"improve reporting of unresolved methods fix #SCL-12093
"
1b5d670faa710db6c5052c261c0ec6a2da641b33,JetBrains/intellij-scala,"Improved performance.
"
38873d5f87b89b53397ecf9e0056fe059d68d2b0,JetBrains/intellij-scala,"UI for macro expansion & refactoring (path applied from https://github.com/scalameta/intellij-scala/tree/scaladays2014)
"
67bb757466f8a60e8bed5b1a8ddf53a000e33c74,JetBrains/intellij-scala,"std type refactored

Conflicts:
	src/org/jetbrains/plugins/scala/codeInspection/parameters/NameBooleanParametersInspectionBase.scala
	src/org/jetbrains/plugins/scala/lang/psi/api/expr/ScBlock.scala
	src/org/jetbrains/plugins/scala/lang/psi/impl/base/types/ScSimpleTypeElementImpl.scala
	src/org/jetbrains/plugins/scala/lang/psi/impl/expr/ScReferenceExpressionImpl.scala
	src/org/jetbrains/plugins/scala/lang/psi/implicits/ImplicitCollector.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/BaseTypes.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/Bounds.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/Conformance.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/ScExistentialType.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/ScProjectionType.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/ScSubstitutor.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/ScType.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/ScTypePresentation.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/ScTypePsiTypeBridge.scala
	src/org/jetbrains/plugins/scala/lang/psi/types/api/TypeVariable.scala
	src/org/jetbrains/plugins/scala/lang/resolve/processor/MostSpecificUtil.scala
"
cec363961594ca3d92b8bedf92088689578ab9aa,JetBrains/intellij-scala,"methodType and polymorphicType moved to a single place,
usages simplified
#SCL-13196
"
b491db7c0d8c1343793fdc6b7e594f3fec76b550,JetBrains/intellij-scala,"ScalaTokenTypes replaced with a companion object #SCL-14525
"
ebc8b908e2f7eefb7dd37b083922f6bf3f8575b9,JetBrains/intellij-scala,"Intention 'Remove redundant else' (for SCL-4227)
"
2bf26b1151a9be7e877bd10449410d1712271c1a,JetBrains/intellij-scala,"Worksheet: decode URL of the current jar as it can contain escape codes; code cleanup
"
2cb2d1691806e61fcffd8bce912be77ee88ad373,JetBrains/intellij-scala,"method signature simplified
"
a04565d1c2c0006871fcfaa925d4ea0792045641,JetBrains/intellij-scala,"replace occurrences available from companion object
"
acbfb8006705fb26d81ba447da4107380fa52fed,JetBrains/intellij-scala,"PsiElementFactory refactored
"
76f0749df7a3b9cc07edbb9fa6285c4e05120f9c,JetBrains/intellij-scala,"ImplicitParametersAnnotator: cleanup, some duplication removed
#SCL-12445
"
602145f7e2eac31f7f6761b4f4a99c343c7974d6,JetBrains/intellij-scala,"cleanup
OITest improvement

git-svn-id: ba81b6bd3dd9830eeafada3de57364a31f808d18@19495 59f64563-22e8-0310-8d2c-98a15e1539f2
"
9c669b51d8502480f22681e4d59cf8344daed607,JetBrains/intellij-scala,"cleanup

git-svn-id: ba81b6bd3dd9830eeafada3de57364a31f808d18@15276 59f64563-22e8-0310-8d2c-98a15e1539f2
"
b998c813158b3b498d11857bfd6e22beb40449e4,KhronosGroup/SPIRV-Tools,"Use typedef instead of using in libspirv.h.

The header file should be compatible with pre-C++11 code.
"
f980358b5017a3d980ca4fa65d1dbe79c66ccfde,ManiacalLabs/BiblioPixel,"Move cleanup functions into their own file
"
43ce63e724d3e1c08e705d5f20fbcbd493f4db92,ManifoldScholar/manifold,"[F] Refactor name parsing to concern
"
c30feb6b414021112724c729ddf8f2ebc77a2db4,ManifoldScholar/manifold,"[F] Upgrade routers and add section scrolling

Another day, another react-router and react-router-redux upgrade to
contend with. With this commit, we bump these to the most recent
versions, which brings breaking changes and refactoring, also addressed
in this commit.

That said, the react-router 2 API feels cleaner, and this commit adds a
basic but functional POC implementation of scrolling to URL fragments
in the reader section views, which is an important step forward.

Alas, this upgrade introduces a regression in the isomorphic rendering,
which causes react to discard the server side render and output a
warning. This ought to be fixed soon in a subsequent commit.
"
2b8317e59514a44f8bd06994606973312c2d3cb6,OpenBazaar/openbazaar-go,"Refactor contract pricing
"
6d4f8e89dd6821fb841178089deff1b330956b2f,OpenBazaar/openbazaar-go,"[#843] Rename CaseStore.GetByCaseID method and return DisputeCaseRecord
"
3900e00f5e1053ca714f6230f04d34b2f67e78da,OpenBazaar/openbazaar-go,"Refactor disputes.go to handle cases db changes
"
ad3271c0a7b677ba425f2c0ff8d7e4a6ef928318,OpenBazaar/openbazaar-go,"Refactor follow/moderatorAdd peer handling

Adds a new payload type to be used on FOLLOW, UNFOLLOW, MODERATOR_ADD, and
MODERATOR_REMOVE messages. The payload contains the public key and signature
of the sender and removes reliance on the transport level peer ID.

closes #240
"
872ff9fb03853a65e7f1df00a708541e055b2ce2,OpenBazaar/openbazaar-go,"Merge pull request #479 from OpenBazaar/guid

Refactor to replace guid with peerID"
9091688109b58be03bae8c0f4f25bf7c2a39aa0f,OpenLiberty/open-liberty,"Issue #5374 refactor to enable resource injection of ManagedExecutor and ThreadContext
"
435517529412930ea81a66aee8f54019a2388f8c,OpenLiberty/open-liberty,"Issue #1451 made changes requested in PR and added jsonify method that uses GenericData for GC events
"
8f94bf71ba78eaa5f296e5bd3b10c07a5bc4c813,OpenLiberty/open-liberty,"Separate internal and external maven locals
"
83c42506d3f183d6a04284ebbe9954d1cca08ca2,OpenLiberty/open-liberty,Improve the size of primitve object caching
b5660cbde9692c99bb8bde309efe54f9080269c3,adamtheturtle/vws-python,Merge branch 'master' into rewrite-assertions
a11b602f506e99712280ba4a8d6a6702bfac7216,beautify-web/js-beautify,"Make python shell return error codes

Return result 1 for error cases
Output usage on stderr in error cases

Related to #209
"
9709fd8b23f4c859531faa6203e9dc2e2fc9da2a,berkmancenter/mediacloud,"cleanup legacy bitly code that is not needed now that we are processing all controversies for bitly data; add facebook data to dumps
"
2bfebdee6a8cd8122d6b874903810c881505dca2,berkmancenter/mediacloud,"When skipping the ""split story into sentences, words and determine language"" part of the extraction, report that fact to STDERR
"
3165ea5ad12dddf63ccdb1c990d95a4a2a1a262b,berkmancenter/mediacloud,"Make MediaWords::Test::LocalServer an instance-based class (as in ""initialized with new()"") because users might want to start multiple servers, and also the class can then get to know when it's being deinitialized; save PID of a worker child and kill the child in ""sub DESTROY()"" because if the user (a unit test) fails somewhere between startup and killing the server, the child becomes a zombie process and the whole program hangs (and thus Vagrant test gets stuck and has to be killed manually)
"
869cbd59ee891e1b06d8591d2089891617375516,berkmancenter/mediacloud,"Rewrite ::DBI::Stories::process_extracted_story() to Python

Also reshuffle some stuff around to avoid cyclic dependency.
"
ed17ea0991fc515355cb20292e4826ec6ac89a8d,binary-com/binary-static,"remove unnecessary css
"
f1bbea94ec72178f0a86de7032158703f1dcab6d,binary-com/binary-static,"add delayer for contractinfo removal, refactoring and fixes
"
e96e42a536d079c5a98d4ac832b54ce377c080aa,binary-com/binary-static,"clean up reality check
"
8c58f1dc7e59139ed28539615bcfa5148f9a707e,binary-com/binary-static,"refactor lost password
"
c54e7f7cba87d1cd6f9aff9c429f81e5ef5ceec5,binary-com/binary-static,"indicative cell component, ""total"" string is moved to constants
"
9a7fc2ac73302304464dec6882dc675d70b33b7a,binary-com/binary-static,"Refactor local datetime tooltip
"
ccd0c4b54dfb9912daaa737aa560457cf82a609b,buddhi1980/mandelbulber2,"all refactoring scripts applied
"
f09ad99d730cb842091564109efafb73c80b2ef1,buddhi1980/mandelbulber2,Refactored C++ and OpenCL code for shaders
31400257946c2f665b16e169dc41eb6a2dae428a,buddhi1980/mandelbulber2,"Added spherical, cylidrical and cubic mappings for textures.
Renamed ""bumpmap"" to ""displacement"". Bumpmap will be separate effect."
12c5adc378812b5300ba3dab14d702f44899b822,buddhi1980/mandelbulber2,"Tidied up quaternions
"
39ed672572afa6fe5b9ff0a09ada6bfceda8d502,concord-consortium/rigse,"Remove duplicated WebMock config
"
7c13af4a276c54c5443e16be23460c9f55f2d1e3,flowable/flowable-engine,"Refactored bpmn parsing to new bpmn converter module
"
1ca3e595a4176482932e4f70622990a16e6dbe17,flowable/flowable-engine,"Merge branch 'master' of git://github.com/Activiti/Activiti

* 'master' of git://github.com/Activiti/Activiti:
  Refactored bpmn parsing to new bpmn converter module
  Refactored bpmn parsing to new bpmn converter module
  Actually using the isUpgradeNeeded() method now...
  Using SLF4J instead of java.util.logging + cleaned up logging
  Enhancing logging documentation and fixing a typo from 'Typo-Fred'
  Added docs for deployment cache config
  Using SLF4J instead of java.util.logging + cleaned up logging
  Javadoc fix for DeploymentBuilder
  ACT-1493: made some classes Serializable, as otherwise the process definitions are not storable in a distributed cache
"
378d4bc5fc8dda7bc504c2c8794fe3a9954f38c6,flowable/flowable-engine,"Replace catch-exception with assertj and update mockito to latest from 1.x (#838)

catch-exception was not compatible with latest 1.10.19 from mockito"
6e208d89f1c301bcba28b458f6f3a67856187f79,input-output-hk/daedalus,"Improve reactions for redirecting to main ui
"
13ffcfe7cb3ca46165174d8a2e8e5bdfca0d432d,input-output-hk/daedalus,"Merge branch 'fix/ddw-435-improve-cardano-node-stopping-procedure' of https://github.com/input-output-hk/daedalus into fix/ddw-435-improve-cardano-node-stopping-procedure
"
96074a23f2136a9e199ee44a0f2c2664919a6383,input-output-hk/daedalus,"Merge branch 'fix/ddw-423-finish-etc-code-cleanup' of https://github.com/input-output-hk/daedalus into fix/ddw-423-finish-etc-code-cleanup
"
185813112562ef8d3e77baf4351034378bba917e,input-output-hk/daedalus,"[DDW-256] Moves checking to main index for Cardano control
"
3f3eeeda4a39196b445bad6b38001202515cac69,input-output-hk/daedalus,"Remove unneeded imports and fix small code styling issues
"
7dae9aa4cb34d8fc726b80130e60011bf4515de3,input-output-hk/daedalus,"refactor wallet dialog state to wallets store
"
e6fc9b06243d9c401d2ae730c32248f5fc434427,mongodb/mongo-php-driver,"PHP-1142: Support upserted ids in WriteResult

Renamed getGeneratedIdsForUpsert() to getUpsertedIds().
"
a9f6e3bb09ee87f116d286acfbb361c1546dc6bf,mongodb/mongo-php-driver,"PHPC-1027: Introduce classes for deprecated BSON types (Symbol)
"
b3298a0efed3d0f10c71246b2482dd43f939f308,mongodb/mongo-php-driver,"PHPC-739: Rename ""javascript"" to ""code"" in Javascript BSON class

This changes behavior of var_dump(), var_export(), and serialization.

Additionally, this renames the internal struct fields to be consistent with the publicized property names.
"
aa8db7953cdfda280afb0fa88aef93ca9556ffc9,opennode/waldur-homeport,"Reimplement security groups as table with 4 columns (WAL-268)
"
a08507ec0cfac68db7fee7e046c4eedab782fcdc,opennode/waldur-homeport,"Tweak workspace selector toggle in user workspace (WAL-89).
Extract workspace selector to component in navigation module.
"
b785dd3490bdaf86f01621b9f4d573014650ac7a,opennode/waldur-homeport,"Modified find price item method (SAAS-968)

Removed unnecessary code from do choice method.
Added condition for showing price item name.
"
bf7f7ecd236c01f8f1c06eeb8dda1db1257dce64,opennode/waldur-homeport,"Refactor delayed rendering to fetch dependencies in controller (NC-1112)
"
130161245c63606d6cc85142955df00f8ba4c0fd,opennode/waldur-homeport,"Convert old ES5 functions with ES6 modules

- WAL-851
"
b3f45fcab2732f513662de1cca84d4a550630b14,opennode/waldur-homeport,"Improve date rendering for compact list (SAAS-1100)
"
47ab49aef9781e34375a61f56b30b70c6d7aeb7b,opennode/waldur-homeport,"* Add plus icon for create button.
* Fix style for details item in top menu.
* Remove unused code in side menu.
* Ellipsize long customer / project name is side menu.
* Don't extend top user menu if bottom side menu extended.
* In side menu use full-width border dividers.
* Remove unused code in side menu.
"
eb7917177e01ea715ae7fa64fbfa3e00a849a8c7,opennode/waldur-homeport,"Code review (SAAS-177)

Renamed UserAddToProject to UserAddToProjectController.
Add check length at user exist validate.
Made userForInvite.errors to array.
Set user project role to constant.
Renamed controller to UserAddToProject in add-user.html.
Upgrated user invited errors viewing.
Renamed controller to ProjectAdd in project create view.
Added test for not exist email validation.
"
d2d92a91c3725b84197a1610269f71bc1fb15b48,opennode/waldur-homeport,"Mixed content area results with ORG selector changes (SAAS-603)

Added timeout for all request. Added stop for spinner by timeout.
Added reset for checked projects in dashboard page.
Fixed selecting of current project by current customer update.
Moved handleSelectedProjects method from HeaderController to current-state-service.
Implemented handleSelectedProjects in MainController.
"
50667ded79d8a2ab462c4fe38b8b9c8d4c0ec23e,opennode/waldur-homeport,"Merge branch 'feature/SAAS-706' into 'develop'

feature/SAAS-706 Appstore has broken pricelist behaviour when selecting support component after plan (SAAS-706)

Added reset package after select category in App Store page and removes unnecessary top padding
from blocks/appstore.scss
http://localhost:8001/#/appstore/

See merge request !418
"
778477c0a3ab4b3f39dbe1aa15e3ad66b14bb7e9,opennode/waldur-homeport,"Refactor font-size mixin css (SAAS-401)

upgrade scss files for using only pixels
"
6fa845f307a1036767c64aff6fdb1c2d4f290bcb,opennode/waldur-homeport,"Merge branch 'feature/SAAS-622' into 'develop'

Make service creation form generic (SAAS-622).

* Support Amazon, Azure, Gitlab Oracle.
* Fetch fields from REST API using OPTIONS method.

See merge request !347
"
9f5f48d6e4c990a9e24f3a88b0fad0136061c47a,opennode/waldur-homeport,"Refactor general list UI: move pagination, add total result number (SAAS-411)
"
05ed2c248492759f9489f138f7bd9c8f45392a9f,opennode/waldur-homeport,"Merge branch 'feature/SAAS-252' into 'develop'

feature/SAAS-252 Lookup of connected users and resources is incorrect

Added to ProjectListController method for getting users and resources
by click. Cleaned projectsService from unused methods.
http://localhost:8001/#/projects/

See merge request !129
"
bde601aa652ed30e631d3a71c15f4d4a1e5b752d,opennode/waldur-homeport,"Refactor offerings module.
"
f852c2517b856ab286abd7f19b3544613b1e41f6,opennode/waldur-homeport,"Rename service endpoints (NC-792)
"
6c92897b2e0e4e05825be1c1f3f60a879f0641d2,opennode/waldur-homeport,"Merge branch 'feature/SAAS-872' into 'develop'

When invalid tab has been specified, empty view is displayed (SAAS-872)

Moved getActiveTab function to baseControllerDetailUpdateClass.
Modified getActiveTab function for getting tabs list from detailsViewOptions.
Implemented getActiveTab function project, organization and user controllers.

See merge request !530
"
cbc856fdab8d268cc6208a0da4ceee1fdf0844c1,opennode/waldur-homeport,"Extract table module [WAL-266]
"
331e43bb3952c796c03506b5e3c233372dd8d496,opennode/waldur-homeport,"Connect customer's services to project when project is created (SAAS-753)
Fix cancel button in ServiceAddController.
Remove deprecated services (cloudsService and projectCloudMembershipsService)
"
3341e10a40458254cc4f3817a776b43a2a8b120c,opensim-org/opensim-core,"Merge pull request #1523 from opensim-org/Component_getOwner

Rename Component::getParent to getOwner()."
668d20118009140452f19dde9cc4ba30ceaea693,opensim-org/opensim-core,"Major revision to Joint and subclasses to adapt to the new property system. Code reviewed by Ajay and Sherm and was revised according to review feedback. 

git-svn-id: 9e047e1e624cce0a2485e750063112e834f85522@7360 fc29be9c-2cb0-420d-b520-73dbd18add6e
"
89a13ead1dad05074b164f87a0b016494185e96c,opensim-org/opensim-core,"Addressing API inconsistency of when to call Super::connectToModel on derived ModelComponents. Now Super::extendConnectToModel() is ALWAYS called first. This was achieved by decoupling the base Component's connect() which provided the ""services"" of 1) wiping clearing existing connections. connectToModel() was made public and non-virtual and is called by extendConnect() of ModelComponent which is now marked final. A protected virtual extendConnectToModel() is now what derived ModelComponents must implement (not connect() or connecToModel()) to extend/specialize new ModelComponent types. Super::extendConnectToModel() is to legitimately give its Super a chance to finalize first without the side-effect of calling subcomponents. Component separately invokes connect() on each of its (sub)components after the Component. Component's connect() also marks the Component(Object)'s _objectIsUpToDate flag as true to reflect changes to connectors during the connection process.
"
920d6d74c6b5094bddf23bb4c8f77691d4053648,scalableminds/webknossos,"BF-208 Merge refactored Flycam into dev, dirty fix of camera position with new cube size
"
c1241e88a5109cea69de382570458ccc0b1986f4,scalableminds/webknossos,"Merge branch 'brave_new_world' into brave_new_frontend

* brave_new_world: (32 commits)
  Fix getDataValue (again) (#1895)
  fix api getDataValue for already requested buckets (#1893) (#1894)
  Add docs to .gitignore
  add public/test-bundle to .gitignore
  fix volume mode and trigger update action when creating a new cell (#1889)
  fix #1884 (#1885)
  applied PR feedback
  use an object from _.keyBy instead of repeated array.find to improve performance (#1857)
  re-add changes that shouldn't have been reverted (#1857)
  Revert ""add method that tests whether compacted update actions produce the same result as the original ones, fallback to original ones and send airbrake error (#1857)""
  Revert ""cannot use _.isEqual because array ordering should not be considered, use _.isMatch instead (#1857)""
  improve test-speed for development by factor 6
  set defaults for new task; fixes #1521
  fixed compilation error
  dance the flow dance, work the magic and fix all type errors (#1880)
  restored cache busting for vendor.js
  more cleanup
  cleanup; remove webpack-bundle-analyzer
  use import() for dynamic module imports
  extracted node_modules into separate chunk
  ...
"
a9f3e6fbf7eb63623b0045cfbe6592b984d53bde,scalableminds/webknossos,"OX-150 small refactoring
"
387445504ffcd3cdb124c789022dee8fb30e6242,scalableminds/webknossos,"Front end test coverage (#2847)

* test nyc coverage + coveralls

* pass COVERALLS_REPO_TOKEN through docker

* use babel-plugin-istanbul for tests to improve coverage report

* try to work around compilation error

* try a different fix for coverage-compilation error

* avoid destructuring for import

* fix istanbul conflict with babel-import-plugin

* disable nyc instrumentation

* fix syntax error in package.json

* ignore test files while determining code coverage

* fix syntax error in package.json

* default to latest api in api loader

* use default of api loader instead of defining an own in test helper
"
71b74e276c0f0cb41256780c3df6f820beef9164,scalableminds/webknossos,"Merge master -> dev, Need to do UserController.scala
"
9fe5460f235e971946d55fe84b785ea241d412f0,scalableminds/webknossos,"Merge branch 'refactoring' into voba
"
33ff95688d525d2866aaa20a9815d7adbe9144b4,scalableminds/webknossos,"Rewrite Diff schema script in node (#3135)

* script in js

* diff the content instead of the size

* fix error message if diff fails

* different exit-code

* updated the calls of the diff-schema script

* add linting and pretty to tools

* remove pg_migrate tools

* updated dependencies

* run diff_schema after all modules are installed

* concatenate names with map

* remove dir with js code

* PR feedback

* yarn pretty

* yarn pretty and lint

* yarn lock

* removed ORIGINAL_POSTGRES_URL

* yarn pretty
"
1dff1a0fe52846d64487268afe1f7ebc9b614f84,scalableminds/webknossos,"fix #1829 and clean up arbitrary mode
"
7889c52adff6d37ce8adf1367c3171aa8bc5a422,scalableminds/webknossos,"OX-182 refactored views & merged dev
"
13d20524a7a055968341aecebab1f73da3d8e3ce,scalableminds/webknossos,"Add support for groups of trees (#2546)

* introduce tree groups and show them in the tree tab view (#2514)

* simplify tree group handling, add possibility to rename/delete group, fix tree group drag/drop, fix tests, linter and flow (#2514)

* make it possible to submit new tree name using enter (#2514)

* distinguish correctly between group and groupId (#2514)

* renew snapshots after antd and react update (#2514)

* make react key for groups and trees truly unique, add groups to update actions, parse and serialize groups from NMLs, add tests (#2514)

* add more tests to test nml parser group errors (#2514)

* small fixes, autofocus, auto-save when editing groups (#2514)

* avoid constant rerender of save button

* use virtualized react-sortable-tree component instead of antd tree for performance reasons, update webpack, cleanup (#2546)

* store treegroups with skeletontracings, update with updateActions

* Write treegroups to nml in backend

* read + write tree groups to NML in backend

* backend: make groupId an Integer

* change groupId from string to number (#2546)

* use correct id for trees with no group (#2546)

* if updateaction treegroup id is null, set to None, rather than keeping the old

* rename groupId to id in nml group tags (#2546)

* incorporate PR feedback, enhance design of sortable-tree component (#2546)

* incorporate more PR feedback, add workaround for scrolling bug (#2546)
"
c74f183a8f35d664488779754117d73d53bda425,scalableminds/webknossos,"BF-186 fixed minor bugs caused by the major refactoring
"
d508bc1e9780875bb540e3bcf0535f37e75c8f0c,scalableminds/webknossos,"Merge branch 'dev' into view

* dev: (80 commits)
  fixed merge button in volume mode
  removed unused code
  proper annotation name implementation
  possible fix for dashboard bug #423
  scroll in tree-list; fixes #421
  pretending to work
  removed lorem ipsum from FAQ
  renamed dashboard tabs
  corrected message strings
  fixed click handlers not unbinding #65
  refactoring merging code
  In case of error send Failure to sender #65
  hotfix, merging works once again fine #65
  new modal footer checkbox text #65
  minor changes #65
  user factory helper method to craete not verified user #43
  removed useless map #43
  handle Fox[User] instead Option[User] in CompundAnnotations method #65
  merge method now can handle as much annotations as we want #65
  more cleaner solution to sign id to annotation #65
  ...

Conflicts:
	app/assets/javascripts/oxalis/model.coffee

app/assets/javascripts/oxalis/view/skeletontracing/skeletontracing_view.
coffee
	app/assets/stylesheets/trace_view/_right_menu.less
	app/models/user/UserService.scala
	bower.json
	conf/evolutions/9.js
	conf/routes
	package.json
"
761b2883677edc4addf28d31b9711bf4279f5c5c,scalableminds/webknossos,"Merge branch 'bravenewworldSkeletons' of github.com:scalableminds/webknossos into bravenewworldSkeletons

* 'bravenewworldSkeletons' of github.com:scalableminds/webknossos:
  re-implement task creation from file
  minor fixes for view mode refactoring (#1900)
  refactor view mode, the frontend no longer assumes that an annotation and a tracing always exist - fix tests, linter, flow (#1900)
"
3f35de88f27aa554ce1fce82121b8fce9d8b64c0,scalableminds/webknossos,"Dependency-Injecting DAOs and dependents (#3136)

* move insertInitialData to Startup (will require DIing DAOs)

* DI UserDAO

* [WIP] DI OrganizationDAO

* more DI Annotation

* more DI

* more DI

* more DI

* more DI

* more DI

* DI followup

* more DI followup

* more DI followup

* DI followup

* more DI followup

* more DI + followup

* more DI followup. TODO: resolve circular DI

* resolve cyclic injection with NmlWriter. two to go.

* resolve cyclic injection btw taskService and annotationService. one to go

* resolve final circular dependency injection

* use cache consistently. make sqlClient singleton

* use new NmlWriter signature in backend unit test

* remove some unsed play.current imports

* correctly use isTeamManagerOrAdminOf (with Fox.assertTrue)

* remove unused trait ProvidesSessionData

* rename method

* simplify signature of CredentialsProvider
"
38f611075d5ccffde2cc6943a88aca1656b163c0,scalableminds/webknossos,"refactored WS implementation, cleanup
"
d559ee3b7c65b3414deb2c0831802d167e3578c2,scalableminds/webknossos,"Separate DataStore and TracingStore  (#3281)

* [WIP] tracingstore module

* update schema to register datastores

* move towards tracing store module

* tracingstore gets its own config

* add a tracingstore to the test db

* provide volumetracing data route

* fix standalone tracingstore

* standalone tracingstore not enabled by default

* fix local tracingstore, sacrificing standalone-one for now

* use tracing store in front-end (not yet for volume tracings)

* refactor buffer slicing out of pullqueue and into wkstore adapter

* [WIP] set volume properties on upload

* in volume tracing upload, set fallback-layer dependent values

* rename some files, separate datastore/tracingstore wk communication clients

* fix token auth for tracing store

* implement segmentation fallback logic in front-end

* move proto files to tracingstore. update docker/circleci files

* remove obsolete route api/tracingstore since it is supplied in annotation info request

* fix proto path in test.sh

* fix lint

* update schema version in schema.sql

* update schema version in schema.sql

* update changelog + migration guide

* Tracingstore health (#3295)

re-add tracingstore listOne route for health check

* fix health check for tracing store

* update snapshots

* pretty code

* fix wk store adapter spec

* fix pullqueue spec

* post-merge fix for application.conf

* update evolution number

* make evolution numbers unique, fix variable unpacking in version_list.js

* fix schema version numbers

* update changelog + migrations.md

* incorporate PR feedback

* fix update action log route for volumes

* lint
"
57d8ff4b0208618da02a3d8f2eca329c66ad35f5,scalableminds/webknossos,Merge branch 'master' into consolidate-annotation-states
4ce43e227aeff7d6d06226a4a7b9f624a25787c8,scalableminds/webknossos,"api now sends dataset allowedteams with id. + some cleanup
"
3ed8d831ab3c654d9bcf933029b649970ec2eab8,scalableminds/webknossos,"Upgrade to Play 2.5 and Silhouette 4 (#3125)

* [WIP] play25 streaming migration

* use gluecode to use datastore with akka streams

* standalone datastore works with play 2.5.8

* use play 2.5.19. disable volume zip download for now. wK compiles but does not start

* readd zip stream in annotationIOController

* Play25 silhouette4 (#3160) + logging (#3168) + disposition (#3171)

* [WIP] use silhouette 4.0

* [WIP] adapt to silhouette 4

* access combinedAuthenticatorService via DI

* unify error handlers

* provide missing classes for silhouette (compiles but does not run)

* move request conversions to Controller trait again

* fix silhouette injection

* cleanup

* remove unused injected silhouette references

* unify usage of WkSilhouetteEnvironment to access combinedAuthenticatorService

* play25 logging (#3168)

* migrate logging to play25. convert akka bytestring to utf-8 for debug output

* activate colors for logging in dev mode

* delete obsolete second logback config file

* fix content-disposition and content-type for nml/zip downloads (#3171)

* use new name for cookies to avoid errors when reading old ones

* remove superfluous TODO comments

* further simplify logger config. update migrations.md

* in docker-compose, dont select custom logger for datastore
"
e67ea35cf9a7809808ee070843a65873732963d6,scalableminds/webknossos,"OX-744 rename 'route' to 'cellTracing'
"
0b9b3189b96fad1fc156796ab075e0a938e03dd1,scanner-research/scanner,"Make decoder client use new interface
"
4e5b0be6d218bd63184d057767a1f15556271899,scanner-research/scanner,"Make DecodeArgs proto type, fix memory leak
"
dda66ef1d4c6309be3be691fca74e6af41212d70,signumsoftware/framework,"Signum.Test -> Signum.Test.Enviroment
"
e531ed1eeb4f4eb42850fd917805123fb779cc60,signumsoftware/framework,"rename for initial commit

"
3b67367b8b096496953d795543ecf6d0babb0a1d,signumsoftware/framework,"ToDictionary -> ToDictionaryEx
"
5ba14b40e4b06625fa34d18dc91eb1c25cc4c69d,AmpersandTarski/ampersand,"Removed obsolete code of Poset
"
55c2e86303345b091fab582100e08f1faa4fbaf5,AmpersandTarski/ampersand,"Major refactoring of Concept, View classes. Introduction of Conjunct class
"
695788bd284643d06ccebccdeb2604c55e2fd55f,AmpersandTarski/ampersand,"No longer pass all concepts to client + bugfixes & cleanup

git-svn-id: 8ea8bdaa61cf645e26def3e8eda864b9d84c3b16@1063 80d59baa-9aef-c140-ba76-e18f3b6eea4d
"
053ba14188d800a4e836664b3176a8ebad6ef12e,AmpersandTarski/ampersand,"Add dependency injection container and refactor use of AngularApp, AmpersandApp and Database class

* mysql_plug:
  Update release notes
  Bugfixes
  Rename Database class to MysqlDB
  Update phpDoc and method signatures of Concept class
  Update phpDoc and make certain methods protected instead of private
  Remove singleton pattern for Database class, add to Pimple dependency injection container
  Make AngularApp class not static anymore. Add to Pimple dependency injection container
  Use Pimple container to get AmpersandApp instance
  Bugfix
  Add Pimple container as dependency container in AmpersandApp constructor
  Add Pimple dependency injection container library
  Bugfixes
  Extend class namespaces in phpDoc
  Cleanup use statements
  Import ampersand artefact definitions from AmpersandApp class
  Add database plug for Relation using setter dependency method
  Add database plug for Concept using setter dependency method
"
c2a848358708f20982550c6997b63720501f2ae8,AmpersandTarski/ampersand,"Cleaned up a bit.

git-svn-id: 8ea8bdaa61cf645e26def3e8eda864b9d84c3b16@510 80d59baa-9aef-c140-ba76-e18f3b6eea4d
"
92ecfc020ae4807215db410272fe4182b8d70bd8,AmpersandTarski/ampersand,"Improve some error reporting
"
ee58c3a521081e59f6bb23ee49dee3b4a86347be,AmpersandTarski/ampersand,"Remove unnecessary function in Rule class
"
db0fdfd1723689576865cf7cd0e75b05a0bbcc16,AmpersandTarski/ampersand,"Cleanup use statements
"
9790d3f0faa4fb8a5423316802d994046711cb80,AmpersandTarski/ampersand,"Cleaning up some obsolete stuff
"
db2b8bc8f0c349c7ec4c07101612400ff840283c,Aptoide/aptoide-client-v8,"[AN-1668] Renaming class.
"
1918b526e6734f82964a258838ae9a95e16a56b6,Aptoide/aptoide-client-v8,"Merge branch 'dev_v8' of https://github.com/Aptoide/aptoide-client-v8 into dev_v8

* 'dev_v8' of https://github.com/Aptoide/aptoide-client-v8: (22 commits)
  Aptoide now clears data when newer Nightly version is installed.
  automatically start download after app is purchased
  make sure billing interface is respected when paid app is processed
  avoid calling get app when all we want is payment information
  use correct paid apps url
  paid apps download url comes from different web service and should be called with access token
  Aptoide now clears data when newer Dev version is installed.
  [AN-683/AN-686] Appstimeline UI changes + FIX to the updates in the App Update card.
  AN-658 - changed images for internet connection error and the 503 error
  AN-658 - changed images for internet connection error and the 503 error
  [AN-670/Appview] - Share implementation
  old code style was deleted
  New strings
  [AN-664/Appview] - Appview options menu is now hided until the getAppRequest is done.
  [AN-683] Recommendation card -> 'similar to' is now 'based on'
  bug fix: annotation misplaced
  [AN-683] UI changes to apps timeline
  [AN-645] [Icon/Images] Check all images size, they are taking too much bandwidth
  [Rollback] - Corrected a bug where the rollback wasn't working on appview
  [DownloadManager] - Cache size was not being recognized correctly.
  ...

# Conflicts:
#	v8engine/src/main/java/cm/aptoide/pt/v8engine/view/recycler/widget/implementations/appView/AppViewInstallWidget.java
"
4e39691127be82c4b8de298eaef21c098f0c72d8,Aptoide/aptoide-client-v8,"[AN-2231] Merge remote-tracking branch 'origin/dev' into refactor/AN-2231-migrate-download-analytics
"
cb6415570a74082e231be708eeabb2bb5fc9ea0f,Aptoide/aptoide-client-v8,"Merge branch 'dev' into feature/AN-772_download_complete_not_visible

* dev: (40 commits)
  Renamed onViewDetached() to unbindView() in Widget.java.
  Removed onViewAttached() from Widget.java.
  Migrated onViewAttached code to bindView().
  [AN-857] [AppView] Aware Rank
  [Appview/AN-783 - AN-828 - AN-855] - Progress state(installation) is changed to done after download is done
  [Appview/AN-783 - AN-828 - AN-855] - Install button check database and install manager to get its state
  [Appview/AN-783 - AN-828 - AN-855] - Install button check database to get its state
  [installed repository] - added a method to get added and removed events to a specific app
  [DataBase] -  Added get item as list to database
  [Appview/AN-783 - AN-828 - AN-855] - Progress state(installation) is changed to done after download is done
  [Appview/AN-783 - AN-828 - AN-855] - Install button check database and install manager to get its state
  missing dependency due to merge
  [AN-859] Refresh Token is not being migrated from V7 to V8 fix: retrieving the refresh token as it is done in V7
  [AN-862] Updated Google Play Services dependencys
  app name was updated
  Delete unused files
  app name was updated
  Delete unused files
  [AN-858] Fix
  [AN-861] - Unable to reproduce error refactor: only using RxJava when there is the need for it.
  ...
"
4ebd4dd3b851589fed06764cce1cd6a246be7c58,Aptoide/aptoide-client-v8,"[AN-2094] Cleaned up unused code, Removed SearchPresenter dagger implementation due to consistency bugs, more AptoideAplication classes in dagger
"
ff47d1aae847a41bca359136fcb77ef78cd6436b,Aptoide/aptoide-client-v8,"added lifecycle events to the LifecycleShim interface and implementations, for further improved memory management

small documentation on methods / classes

using an improved latest version comparison mechanism

constant addition of vertical space when scrolling up and down in screenshots widget fixed
"
663ee889686ec5258dae856ccb95f05cd2702284,Aptoide/aptoide-client-v8,"Using Logger instead of Log
"
553aab69083a82584a67f86c19c5ac085cfea1f5,Aptoide/aptoide-client-v8,"Moved Type.java to upper level.
"
5507f5d8226f12005db524a04c181b64ec7fe658,DonJayamanne/pythonVSCode,"Refactor to move debugger files (#2850)

* Refactor to move files
* Fix references

* Fix imports

* Fix paths to imporst

* Fixed registrations

* Fix renames
"
f8ab552fd7d42d59bca14d410b5f316099b7e1ab,ExpediaDotCom/haystack-ui,"Refactor stub connector and haystack connector code to fix test environment
"
116e861b74ee6c703c8d4834a6c532c976180c6a,FriendsOfPHP/PHP-CS-Fixer,"Make some objects immutable
"
e948a164f541b8d010a5d9e9a9b98dbc1e907e4d,Normation/rudder-packages,"Make the regexp a little more precise for #2822. Refs #2822
"
5d2b234915d0e7e4ffcb9d36bed315d6b9181440,TravelModellingGroup/XTMF,"projectidisplay moving to updated lisview / different virtualizing panel
"
94b05755bc6b43a8c9b9260fe010aa70b25a688f,TravelModellingGroup/XTMF,"Updated style / code cleanup for several files.
"
f71249a33b91051f2a31cca6388a45d4dd00713b,UPDDI/mps-database-server,"Initial work to clean up Chip Results
"
a9f582dc9fb184ce330b84245c7d214ad697ebcc,UPDDI/mps-database-server,"Refactor studies; weigh benefits
"
282a10826adb1f9513efd55b0ed7d8c658125d16,Yubico/yubikey-manager-qt,"Split error_id 'blocked' into 'pin_blocked' and 'puk_blocked'
"
3706a5673643c921cadf60805214f9a0e7f1c162,Yubico/yubikey-manager-qt,"Improve OTP error handling
"
19d1de39064970af96483a00074203c0f590e3fd,autoserver-org/autoserver,"Make error handler a clearer middleware
"
0ee2622196274757e8de5ab8322bfec90b377cb4,autoserver-org/autoserver,"Upgrade ESLint 4.19.0 -> 4.19.1
"
0f5ff4a3caf871f8ef0700a4f394c0aa4215a96f,autoserver-org/autoserver,"Improve IDL validation layer
"
e868c2049a981dcd24807e435c05502639ac9ffa,autoserver-org/autoserver,"Upgrade link-check 4.3.4 -> 4.4.0
"
8b72e8dfd3703bc3eccd9149bab2e56e8750d7c5,autoserver-org/autoserver,"Upgrade iltorb 2.1.0 -> 2.2.0
"
5d81bf6170c477e15396c9fbc862805aecf1ee95,autoserver-org/autoserver,"Move files
"
3508415d809f87c3a6264e518b86e6747e5391e2,autoserver-org/autoserver,"Upgrade iconv-lite 0.4.23 -> 0.4.24
"
24dbcd29dda98354110115b3d6b667e04c232394,azdanov/azdanov.github.io,"feat(project): refactor index, about and other components to styled-components
"
aa4519ac308a3ffebad5e8582b1e22f0e4aeb570,btcpayserver/btcpayserver,"Big refactoring for supporting new type of payment
"
48772b28c9b7367f222b23aebf8f67834e606319,foodcoopshop/foodcoopshop,"Feature/issue 133 change obsolete dependency (#138)

* removed not used var

* replaced phpthumb with intervention image

* timestamp for images

* dependency ci badge

* updated changelog

* add name of new dependency

* wording

* wording

* correct pr id

* corrected link
"
f7205ca8f1e536b1b9386a267fad4c2aed396d9a,foodcoopshop/foodcoopshop,combined clean-db- and test-db structure for easier maintaining
7def6573d745699e1e7b5b53b7309b7157e1b59a,foodcoopshop/foodcoopshop,"Feature/several small features (#214)

* changed isQuantityMinFilter to < 3

* ignored some irrelevant email debug log patterns

* added password length info

* removed accidentally added duplicate css

* css fix

* layout fix
"
4fb7cf013e788287f911cc86fc8693e1b08cd230,iteratec/OpenSpeedMonitor,"Renamed dimple package to barchart
"
93b6dcec3861800433c562662ab12a5d109c852b,iteratec/OpenSpeedMonitor,"[IT-2250] Renamed job group to application in frontend
"
026c563724b2e7106462900deb0fc4476604182b,iteratec/OpenSpeedMonitor,"Refactoring, better initial card update
"
ad021a30510805a2d95477d764e4a74290929ec6,johnbillion/query-monitor,"Let's call it a logger instead of logging.
"
daa000dd755a7ea2e911f9f59b7721adf4620ab7,kriztan/Pix-Art-Messenger,"improved next encryption selection
"
cb1a36da7930aaa553ffd525fc9d2d07547d50b9,kriztan/Pix-Art-Messenger,"Merge pull request #642 from SamWhited/accountgetjid

Rework `Account.getJid()' to return full JIDs"
aa42eb544a1ebf99dc52d71c917b899d1fce628d,kriztan/Pix-Art-Messenger,"basic muc support. reworked contact list stuff
"
53718ff0fe3532e28a25503ac4c38d01e5dfea69,kriztan/Pix-Art-Messenger,"refactored sendMessage and merged with resendMessage
"
7e35c115c182692bf5063c773c5876bfb0ad8466,kriztan/Pix-Art-Messenger,"some UI improvements
"
dc0dba3fafc974e99d1f309b4ee00b84c2e87014,kriztan/Pix-Art-Messenger,"remove unused imports.
"
8f5c05dc8fcb4429568920e9a1a07f4eea9dc07f,lsst-sqre/jenkins-dm-jobs,"rename SKIP_DOCS -> BUILD_DOCS

As the normal case is not to build the docs, the doc build should be
treated as disabled by default rather than enabled.
"
d4d097fddb33f30954ec90bdb71822e5f7eec316,lsst-sqre/jenkins-dm-jobs,"Merge pull request #504 from jhoblitt/tickets/DM-16258-test-envs

cleanups/fixes related to end-to-end ci testing"
7c9d22d0702f5110e552b2206ad5ea8317eab060,midas-isg/digital-commons,"make entries public
"
02f4d107d7961521f26bbaa821b7217bcea349bf,midas-isg/digital-commons,"updates to consolidate edit tags
"
d3563557f0e55d310d7678085a13f1d06845f63e,mongodb/mongo-ruby-driver,"RUBY-494 rename all the things! standardizing class names across drivers

Mongo::Connection -> Mongo::MongoClient
Mongo::ReplSetConnection -> Mongo::MongoReplicaSetClient
Mongo::ShardedConnection -> Mongo::MongoShardedClient
"
f76182546264d0ecd64bbe86ffaaf8ab07d98f85,peachpiecompiler/peachpie,"Merge pull request #297 from peachpiecompiler/dev/semantic-transformations

Add support for semantic transformations, refactor visitor hierarchy"
09e542df8e0f27f2f4f0de5c277d3c895d46007d,peachpiecompiler/peachpie,"trait properties initialization

- cleanup
"
8336734e64c561cbf7baa9ce9094f8d79eabca39,reactioncommerce/reaction,"Merge branch 'release-1.14.0' into refactor-zenweasel-remove-taxjar
"
8fd4cbed5ef2270d853bb9d72e0c80c8e2bbfa58,reactioncommerce/reaction,"refactor: use immutability-helper module
"
ed3218d6f998e1abfd505e392c5b53645ef4740a,reactioncommerce/reaction,"refactor: Initial work to adjust Catalog collection schema
"
ea925e5d37541dcbed823c9de9ba1d823c07ff92,reactioncommerce/reaction,"refactor: run Node app in Meteor

This switches up the patterns, such that things like mutations, queries,
GraphQL schemas and resolvers,
startup functions, and other functions are
all injected using the well-known and
highly respected registerPackage function.

This is being done to maintain a comforting
sense of familiarity (and backward compatibility)
amongst the chaos of rewriting, splitting,
and de-Meteorizing a complicated app.

This is a more-or-less working first commit. A few commits will follow
to continue moving around some more files into this new pattern.
"
b04048a44c653ff52bfae1c697a1be88028960ec,reactioncommerce/reaction,"- `Edit Product` renamed to `Product Settings`;
- added translation to action bar;
"
34e178a7e98d5443b6dfb7f9e5b4871cf8526fb4,reactioncommerce/reaction,"Merge remote-tracking branch 'origin/pre-beta-refactor' into pre-beta-refactor

Conflicts:
	common/schemas/cart.js
	common/schemas/shipping.js
	server/methods/orders.js
"
4580eb5338f8a50d91583f84929a789a40b17c9c,reactioncommerce/reaction,"Improved UX of product grid multi-select

- Split product grid into smaller files
- Fixed issue where selection would remain after navigation away from
and back to a product grid
- Fixed various issue where selections would get out of sync
- ""gear"" button now properly selects only one product
- closing the action view now deselects all selected products
"
1c2b648645a7bee67f794c5674630b0d2a9f6140,reactioncommerce/reaction,"Revert ""(fix): split the tests""

This reverts commit 51bf01c509b1732bf16ed5f0dbd75de8cb113c43.
"
30f081c2f154230893184f1d8ef2d037d9e0ade5,reactioncommerce/reaction,"Merge pull request #4395 from reactioncommerce/refactor-brent-remove-shopify-connector

(refactor) Remove Shopify plugin"
7165ff41c7668233c88e1334be680a1018ff8786,reactioncommerce/reaction,"Merge remote-tracking branch 'origin/release-1.14.0' into refactor-zenweasel-remove-paypal
"
7ace124ae84c4bb5086ad76a31b045a368a03ccc,reactioncommerce/reaction,"i18n fixes and improvements (fixes #210)
"
6e9955349b9cb720d8096f81b12d45a8b70f304d,reactioncommerce/reaction,"Merge pull request #3625 from reactioncommerce/refactor-3548-willopez-remove-kadira-dochead-meteor-package

(refactor): remove kadira:dochead meteor package and add needed functions to a core plugin"
2f2abac38f574cdf03d9acda0579406d0211e27e,reactioncommerce/reaction,"refactor: share duplicated code between checkout payment components
"
ae6c678b076835915adefb8442b0b940c1dd6a13,reactioncommerce/reaction,"Group packages in dashboard

Cleanup of unused less files
Updated all registry entries with container for grouping.
"
7e6e95dc463ac2ea1f4d8dc2b376f7c6c0cc5066,reactioncommerce/reaction,"refactor: replaced Meteor.Error with ReactionError within account plugin server methods
"
fa03cb8580900eee09a74ba62af6d95e14b5200a,reactioncommerce/reaction,"Merge branch 'release-1.10.0' into refactor-3994-nnnnat-remove-media-hooks
"
25cce1ecd0eb1ccb727519c8a11d9544fa97e33f,reactioncommerce/reaction,Merge branch 'release-1.8.0' into refactor-3551-mm-jobcollection
bc8325bda2a2eda5b99c76177f8b146664e06967,reactioncommerce/reaction,"Merge branch 'release-1.10.0' into refactor-3994-nnnnat-remove-media-hooks
"
c9b1e6b8842122c0bd7cd183773c9f37ba04e5e6,reactioncommerce/reaction,"ReactionCore.Events -> ReactionCore.Log

- breaking change
- rename ReactionCore.Events to ReactionCore.Log to avoid confusion
with ‘normal’ events
"
a498ecaf50d1152bb500fe830213f82715fd5a30,reactioncommerce/reaction,"refactor: move catalog resolvers to catalog plugin
"
031559743a0592156745883e872c40caf57d9e62,reactioncommerce/reaction,"- moving from using `ReactionCore.sessionId` to real `sessionId`;
- **breaking changes** in `cart/createCart`: method
 now receives only `sessionId` arg;
I think this is redundant to send such type of data like userId to methods
- **breaking changes** in `cart/mergeCart`: method
 now receives additional `currentSessionId` arg;
- **breaking changes** in `cart/copyCartToOrder`: method
now receives additional `currentSessionId` arg;
- **breaking changes** in server `cart/submitPayment`: method
now receives additional `sessionId` arg;
- `ReactionCore.Schemas.Cart.sessionId` modified;
- fixed bug in `cart/submitPayment` hook;
"
d2df6e59f4bc3dc8bb4f68cd29b979eed37c9610,reactioncommerce/reaction,"1759 Publish controls in toolbar (#1767)

* Move publish bar back to toolbar

* Move publish controls to toolbar.

- Move PDP publish controls back to toolbar.
- Move Grid Settings publish controls to toolbar.
- Added default setting and workflow for homepage for product grid.

**Updated grid behavior.**
- Side panel no longer opened when clicking on main view for deselect
when in preview mode.
- Also does not open if you’re in edit mode and deselecting nothing.

* Darken default buttons for readability

* Fix return value not matching expected result

ReactionProduct.selectedProduct should return undefined if no product
is found. Was returning an array, causing PropType validation errors in
React components.

* Tweaked colors
"
0eea7550f73e408fd8ecf1ece73d1b16d560dc7f,reactioncommerce/reaction,"(perf): remove unused libphonenumber-js
"
282dcf31a27ba8dfc9d73fec9ce7f8ba7323d16c,reactioncommerce/reaction,"Merge branch 'release-1.10.0' into refactor-2053-nnnnat-address-book-react
"
5e3edbacae20453996cc09df795d2b6eeaa86627,reactioncommerce/reaction,"refactor: updated getSlug functions to force passed string to be lowercase before being passed to slugify
"
e6af94ba20334f0eede4fcfb10c2ad1dd98061b7,reactioncommerce/reaction,"refactor: setting shopId on insert of Shipping collections, removed shopIdAutoValue from Shipping schema
"
8735597c4a39401fd35c4dc475f421eed90962b5,reactioncommerce/reaction,"New inline details management + view

Refactored without x-editable
"
f8964503d759a169c96075eafeef337103b5377b,redhat-openstack/infrared,"Merge ""OSPd images cleanup"""
f14beb365efd8039dd33a1c79e80ee2da2f987ef,redhat-openstack/infrared,"move hardcoded organization name to a variable

Change-Id: Ie31ea37c414bc547f5518bd054c0f21f214a8c2e
"
cba85bd2d0914eb554645217b8b1364825897b2a,rubberduck-vba/Rubberduck,"Added concurrent implementation of IProjectManager and renamed the old one to SynchronousProjectManager
"
f42f866a5697472ab2ec4cd03f0d42c71c750512,rubberduck-vba/Rubberduck,"Remove dead code
"
35c43f1c0f5006c739172a31754b3e62a39e0005,rubberduck-vba/Rubberduck,"simplified Node API
"
0ea7de30b73d8abcbfa2d8ff6d7e8cae8e84b5bb,rubberduck-vba/Rubberduck,"Cleaned up using directives in Rubberduck project
"
b1871032fbe68135cec4e4699b7ba32dae64c9a6,rubberduck-vba/Rubberduck,"Introduced the SerializedProjectBuilder and made the SerializeDeclarationsCommand use it instead of serialized projects from the com collector.
"
c2af5095498e2370c4c19e045aae98dd60a00192,rubberduck-vba/Rubberduck,"Simplify Output Paths for Analyzers and Test assembly

Update path to TestAssemblies to not contain Configuration
"
877619e87dfbc3ed3193559dacd34da1c917e913,rubberduck-vba/Rubberduck,"Renamed folder and namespace
"
ea34c53358f3b705df48a972e3d34befb0951911,rubberduck-vba/Rubberduck,"Merge pull request #142 from retailcoder/config

Configuration and Settings Dialog Cleanup"
ec0d28d8b1e0ab3abff2397da8e6c9efe5b82ec6,rubberduck-vba/Rubberduck,"Extracted the details of resolving references from the ParseCoordinator into implementations of IReferenceResolveRunner. Also fixed some cancellation issues with reference resolving.
"
e40a9e4b3f12a25fc3fff567ba4e5bfb6ce9709c,rubberduck-vba/Rubberduck,"Renaming.  Add inspection message resources
"
c6ec3f3ca90395690f262bf605aa33bc467d2d6c,rubberduck-vba/Rubberduck,"Merge pull request #679 from ckuhn203/sourcecontrol

Sourcecontrol - Refactored the entry point into the subsystem"
037c73e9178e700892913cf30a2c28da7b420e0f,rubberduck-vba/Rubberduck,"Merge pull request #1302 from retailcoder/next

hotkey config fixes; added hotkeys to menu items; layout changes to ""refactor"" menu, too"
bf2e2ec2ea05f8e2687e6e043eefa56001072044,rubberduck-vba/Rubberduck,"renamed and moved NavigateCodeIssueEventArgs so it's more easily re-used: UI.NavigateCodeEventArgs
"
3fedf3d4aae71a1e30ba9454ba0241da41b9a4b9,rubberduck-vba/Rubberduck,"Incorporate Feedback,

Merge Prompt and Question on IMessageBox
Rename ConfirmYN to ConfirmYesNo
Add some left over Resource Strings
"
142de1a3282832e87020f428fe2cf66cb3932fad,rubberduck-vba/Rubberduck,"Move copy command (#1677)

* Move copy command

* Remove unused using directives
"
77badd95f0d1c1479b0632967dcfe5042006d4ed,rubberduck-vba/Rubberduck,"Added IRefactoring interface, and moved extract method logic from RefactorMenu into IRefactoring implementation ExtractMethodRefactoring.
"
8ac9f1d17e7f95963a9c148dc88033548d7224ee,rubberduck-vba/Rubberduck,"added VBProjectParseResult class to encapsulate IDictionary<QualifiedModuleName,IParseTree>.
"
1323394f4dfe3a0f045f98021a75b38568730bae,rubberduck-vba/Rubberduck,"Merge branch 'next' of https://github.com/rubberduck-vba/Rubberduck into ExtractMethod

# Conflicts:
#	Rubberduck.Refactorings/Rename/RenameRefactoring.cs
#	Rubberduck.Refactorings/ReorderParameters/ReorderParametersModel.cs
#	Rubberduck.Refactorings/ReorderParameters/ReorderParametersRefactoring.cs
"
a0c43a27168d3ae45b289fd3b4505c06706471aa,rubberduck-vba/Rubberduck,"Hotkey rewrite - step 1
"
c7a77d4626b701c1820ab5f89fdff1ae9bb4c2d4,signumsoftware/extensions,"EmailTemplates with where blocks (refactored to FilterValueConverter from Omnibox)
"
fb308feede299b8288de9e28325e4f0555567198,signumsoftware/extensions,"RealCommit -> PostRealCommit, fix en Transacciones

"
3638fdb3774f0d0571ac3955955fdc1285f98db1,signumsoftware/extensions,"remove _Type and convert Enum in string literal type
"
37fcf9285bb99039760f1d4438f2ba2dfae8aabb,signumsoftware/extensions,"ProcessDN -> ProcessAlgorithmDN. ProcessExecutionDN -> ProcessDN. Remove ..InProcess
"
3f537273957a78bcd7da566346d5afa597935538,suculent/thinx-device-api,"improved coverage by running some tests in async mode
"
5eede4f26baa05a3c9ea953ae8867a1f5112aff7,tinylabproductions/tlplib,"Added [UniqueValue], duplicate fields finder, tests
"
f2aa18903c9bb7cf8421d936285866ed691dc893,unitystation/unitystation,"Added SoundNetworkActions, Moved Weapon functions from PlayerNetworkActions, added Slicing soundFX for blade
"
854719e19393f3130ff2292605283b82eaf18869,unitystation/unitystation,"Reliable but strict prediction for CNT
(allows predictive push with zero move queue)
"
7475f1c69ef5b2937c7e019838d2f23fa79471cb,unitystation/unitystation,"removed perma-drunk (+1 squashed commit)
Squashed commits:
[0cc282e] Fucked up my own bugfix (+8 squashed commits)
Squashed commits:
[2b5cadf] Fixed all time update issues
[fe65523] Easier robust
[054343f] Make values public for use in other scripts
[5ca0287] fixed external calls too.
[54c210e] More advanved time update
[07db958] Some more little fixes
[d1053fe] removing debug
[5f1d52c] Fixing system messages
"
aca9f0c19b7628cb8db52c34a6e0f52bad9d0a43,unitystation/unitystation,"Merge pull request #1026 from krille90/develop

Moving TileTrigger to Root object"
3ce8ab76b746e937d90ede2acd906c6680c23dab,unitystation/unitystation,"* Removed redundant code from MapToPNG.cs
* Added RegisterTile script to item prefabs
* Made some textures active for read/write
"
e55c18b29722fab37d8d8ec22b0db924759ae2f1,unitystation/unitystation,"Cleaned up Medbay sections, added refresh data button to map editor
"
b2edc207066ed3f00255e0ebaca64c4eb603f611,unitystation/unitystation,"Merge pull request #1318 from unitystation/clothing/backpack

Adds backpacks, Drag and Drop UI actions and inventory system overhaul"
b5f9a35d2b7afe8602dfefe99cd8a96cb0a28ba0,unitystation/unitystation,"Merge pull request #124 from krille90/develop

map editor refactoring and improving"
103cf07087420137a23cdb8b79c6e2c63c577e7e,DarklightGames/DarkestHour,"Major refactor of vehicle classes:
Most functionality now in common parent DHVehicle class, including mounted cannons & all treads stuff - now also including damaged treads.
One major subclass and two minor ones:
Major subclass is DHArmoredVehicle, which mostly adds armour penetration calcs and extra damage effects, plus burning vehicle functionality.
Minor subclasses are DHATGun & the obscure DHBoatVehicle (currently HIggins only).
Many references & casts to DHArmoredVehicle now replaced with more generic DHVehicle, so a fair bit of doubled up class casting has been removed.

Half-tracks & bren carrier now have treads that can be damaged like an armoured vehicle, with associated HUD indicators, etc.

Added wider ranging, generic functionality to spawn vehicle attachments (VehicleAttachments array) simply by setting def props.
Includes various options, e.g. static mesh, attachment bone, offset, skin, has collision (not an actual col mesh actor, just a static mesh that has collision).
Random schurzen functionality changed into generic support for any random attachments (RandomAttachment for key properties, plus RandomAttachOptions for different meshes & chances).
Also added generic functionality for adding collision static mesh attachments in the same way (CollisionAttachments array).
This has allowed deletion of lots of variables & function overrides for a wide range of specific attachments from abstract & vehicle-specific subclasses.
All wrapped up in a new SpawnVehicleAttachments() function, called from PostNetBeginPlay().
Anything existing that is attachment related has been moved into that function to de-clutter BeginPlay() & other functions & to bring attachment functionality together.

DHVehicleDecoAttachment renamed to DHDecoAttachment for brevity & to make more generic (could be attached to anything, not just vehicle).
DHCollisonMeshActor.AttachCollisionMesh() function has added option to specify offset.
bAllowRiders variable deleted - not needed as is effectively replaced by FirstRiderPositionIndex (valid index position means vehicle has riders).
Spelling corrected in several former ROTreadCraft VehicleHudThreads_ variables (""Threads"" to ""Treads"").
DHShouldPenetrate() function in DHArmoredVehicle & DHVehicleCannon renamed to simply ShouldPenetrate(), as we are no longer copying an ROTreadCraft function with different function parameters, so we don't need to give it a different name.
"
8a76b685c9c373a0abe69db0f634119a0c044579,DarklightGames/DarkestHour,"Improvement & simplification of system for using collision static mesh actors (CSMA) attached to VehicleWeapons like tank turrets, which can be used to give them accurate hit detection, like a vehicle hull.
Remember a col static mesh added to a VW mesh in the editor doesn't work, because it doesn't rotate with the turret's yaw bone.
The main change - and simplification - is to make the CSMA an ordinary static mesh actor (extends StaticMeshActor).
Much easier and cleaner than original method, which required an 'empty', invisible skeletal mesh that used the col static mesh, which was then attached to the turret's yaw bone.
A static mesh actor can do precision, per triangle collision detection, and can 'pass on' any hit to the rear VW actor, the same as the old method.

There is no replication here - the CSMA is spawned independently on the server and clients.
Projectile's run their own hit detection calcs against local actors (the server is definitive only re any resulting damage).

As before, the VW removes all of its own collision if it spawns a CSMA, and the CSMA copies the collision of the real VW actor (in effect, it becomes its collision proxy).
Now added CSMA checks to the bullet pre-launch trace system, and also to the 2nd, verification trace that I recently added to DHBullet.
Another substantial simplification is that the need for separate subclasses for each vehicle's CSMA has been removed.
Instead of specifying a particular CSMA class, we now simply specify the col static mesh to use, i.e. a static mesh file and mesh name.
The system spawns the generic CSMA class and just sets its static mesh after it spawns.

New system also automatically adjusts the relative offset position of the CSMA to take account of the yaw bone's position, so need need to pre-calc offsets or adjust the col mesh model.
Also automatically hides the CSMA, so no need to skin it invisble and it can be seen in the editor, which is more user-friendly.
I have updated the notes on how to use a CSMA and it's shorter and easier now.

Added a useful debug exec 'ShowColMesh' to cannon and MG pawn, which 1st toggles shows the col mesh as a white shape alongside the VW, then to hide the VW mesh, then returns to normal.
Works in multi-player as it's only making visual changes on the client. Like most debug tools, it needs debug mode or single player to operate.

Have renamed the CSMA to DHCollisionStaticMeshActor instead of DHVehicleWeaponCollisionMeshActor, because it's shorter and because I can see potential use for things other than VehicleWeapons.

Have dusted down my old tiger turret collision mesh. Removed the commander, as not required with new vehicle occupant hit detection we're using now (actually gets in the way).
Also removed all concavity in the model by splitting it into separate, 'closed' mesh parts.
Made new col meshes for MGs with gunshields - CSMAs for German halftrack and StuG/StuH's remote MG.
Also made a col mesh for early StuG's fixed gunshield, but that one doesn't need to be a CSMA, as it doesn't rotate and so can use a normal col mesh set in the VW skeletal mesh in editor.
Will upload these separately, as they are linked to some other mesh file changes. Probably tomorrow.
"
dd226c7139c0c2b7d048340e101328833257ce44,DarklightGames/DarkestHour,"Deploy menu update:
* Improved menu optimization by avoiding a draw call that handled placing the map every tick.  Now it does it once, and if resolution is changed it does it again!
* Implemented system to handle placing the menu options on the right (in the extra space, if there is room), otherwise it'll use the button system like before
"
582f5088edf5d3f2fac0bc11fb3b594ccbaf0512,DarklightGames/DarkestHour,"Update to fix some MP deploy issues
Cleanup and optimize
Vehicle spawning still bugged, team change still bugged, and a few more issues
"
87b513f2a6aeac24f8f9c04ca020767764213112,DarklightGames/DarkestHour,"Moved the DebugSpawnBots exec function from DHPlayer to DHPawn.
It requires the player to be possessing a DHPawn for it to work, so it sits a little more naturally in DHPawn.
It also sits quite well alongside DHPawn's DebugSpawnVehicle() and SpawnDebugPawns() functions.
As it already has a DHGame reference, have replaced the dual checks on PRI.bAdmin or PRI.bSilentAdmin with DHGame's IsAdmin() function, that does the same thing.
"
b3e79ee36edede3109d5dfdeb50c886a48bcb7b6,DarklightGames/DarkestHour,"Just replace all tabs with spaces in DH_Vehicles classes.
"
8fe302787fd4577caa2ff5e53a67134afb127cc8,DarklightGames/DarkestHour,"Update to deploy menu
* Changed options button to be in panels (Role & Vehicle)
* Removed space at top
* Aligned margins & spacing of panels
* New style & classes for panel headers, so you can tell which panel you have selected
* What panel you were last on now works and fixed several bugs that having it like that caused
* Optimized some code & reduced code redundancy
* Removed unneeded self references in defaultproperties
* Made it so your role selection and actual role can't be different
"
e0f66d50775e43fea7d2218a1f95c066cc562f6a,GridProtectionAlliance/gsf,"(1) Added WAV demo projects.
(2) Updated data start time event for indexed data transmissions.
(3) Added command to allow client to rotate cipher keys.
(4) Optimized synchronized client subscription to only lock when processing measurement filter (i.e., when routing is disabled).

git-tfs-id: [https://tfs.codeplex.com/tfs/TFS07]$/TimeSeriesFramework/Main;C68514
"
6c47751099c64aed62aa7ba281ab9541a1a07504,axkr/symja_android_library,Refactored combinatorial functions
b9bf3cdbf8fa330ca5f7b4b1ed68398f755f2cee,axkr/symja_android_library,Improve numeric Solve()
5d8831070e1b19de664a731b49feedac381b784b,axkr/symja_android_library,IMprove Identity() and Composition() functions
de24c67f38e1c1922b76f18154f9ed83bea901b7,axkr/symja_android_library,Improve DiracDelta
abb50039d583c7990b80369fc9e87c2c0b3d3c5d,axkr/symja_android_library,"markdown FunctionExpand, clean up"
35bd2959e573e1b02c7f3f1bfc825049e646a6d9,axkr/symja_android_library,"#70 small improvement for loading performance by IInteger() function
specialiced to lhs Int() rules"
12f5b7f545bfee0bae8e10a5bd3a2e9b0d7a465b,axkr/symja_android_library,"clean up, improve code coverage"
dd3a9dca6132f3afe24bdf399bde7aaac1d555c1,espressif/ESP8266_RTOS_SDK,"fix(lib): move some functions to iram
"
7005ceeedee337fbc8c1261c7cbf88b8de8c16ef,espressif/ESP8266_RTOS_SDK,"Merge branch 'feature/refactor_wifi_promiscuous_mode' into 'master'

feat(esp8266): refactor wifi promiscuous mode api

See merge request sdk/ESP8266_RTOS_SDK!280"
40a821ffbad4638321f2e88b235cd63f34e91927,espressif/ESP8266_RTOS_SDK,"Merge branch 'feature/refactor_task_watch_dog' into 'master'

Refactor task watch dog

See merge request sdk/ESP8266_RTOS_SDK!478"
5eb0dc61e55fd6ec27ad4dfd21943ef6b360a217,heinrichschiller/heinerCMS,"update, refactoring code. part 1"
fb9885ce50fa19b6b13d65cab4ac45061870930e,input-output-hk/cardano-sl,"[CSL-875] Bring genesisVssKeyPairs out of DEV_MODE; add ""Dev"" everywhere

First of all, we do a bunch of renamings in Pos.Genesis:

  * genesisKeyPairs    -> genesisDevKeyPairs
  * genesisPublicKeys  -> genesisDevPublicKeys
  * genesisSecretKeys  -> genesisDevSecretKeys
  * genesisVssKeyPairs -> genesisDevVssKeyPairs

(These renamings lead to lots of changes elsewhere, which you can ignore.)

Then, there were some things (like 'genesisCertificates') which were defined
differently in development mode and in production mode. This commit moves
them out of DEV_MODE:

    before
    ==========

        #ifdef DEV_MODE
        foo = a
        #else
        foo = b
        #endif

    after
    ==========

        foo = if isDevelopment then a else b

Also this commit reindents 'createBambooPool' because c'mon.
"
ff58bea2bce9cf2fc467df96c99ce85540b474c1,input-output-hk/cardano-sl,"[CSL-295] Merge branch 'refactor/csl-242-lightweightcrypto' into refactor/csl295-serialization

This merge also refactors serialization of crypto types, and moves Pos.Crypto.SerTypes
to Pos.Binary.Crypto, and related functionality as well.
"
fd779b9dcfff0c031e3fc2e8caf27aa979c98d7c,input-output-hk/cardano-sl,"Merge branch 'master' of https://github.com/input-output-hk/pos-haskell-prototype into refactoring/cls783-txp-refactor
"
6de0b049789e904e636d0514b1297fce557e0ffd,input-output-hk/cardano-sl,"[CSL-1292] Make 'genesisUtxo' compute stakeholders, refactor some stuff

Now 'genesisUtxo' can calculate stakeholders' weights if it is not known.
It's computed proportional to their balances.
Also genesis utxo creation was refactored.
"
e1492bdbcdf4c1a0e33d813f408348548cd7f64d,input-output-hk/cardano-sl,"[CSL-875] Change lots of things about how configs are parsed

This all is needed for two reasons:
a) to remove DEV_MODE from various files
b) for general sanity

Here's the list of specific changes:

* We no longer use data-dir in .cabal – instead we use something like
  file-embed (which searches for ""cardano-sl.cabal"" specifically). We also
  don't search for the config file in parent dir anymore (because it's not
  needed).

* We don't use ""#ifdef DEV_MODE"" in .Constants files – instead, we get
  'cslConfig' (which is a YAML value) from Pos.Util.Config and parse
  everything else from there. 'cslConfig' is compiled into the file in
  production mode, and taken from .yaml file in project root dir in
  development mode.

* Various .Constants.Type modules are removed and ""*Constants"" types are
  moved into .Constants modules (because we no longer use TH lifting and
  there's no TH stage restriction).
"
fb460a7ed61b6d967d8e2492d4f2b180454d9f8d,input-output-hk/cardano-sl,"Corrections to wallet generation

The generator for 'Inductive' was generating invalid wallets. I've tightened
the tests to check for this; in particular to check that the 'pending'
transactions we submit are valid (use only inputs that are available to the
wallet). In this commit I make some corrections, and the tests now _sometimes_
pass, but not yet always. In this commit:

* Extend some of the debugging infrastructure; allow for additional error
  messages in 'Validated' and for comments in 'Transaction' in the DSL, so that
  we can insert some information about where tranasctions are coming from etc.
* Introduce a `walletBoot` function that ""boots up"" a wallet; this really
  just means initializing the wallet and then applying the genesis block.
  This is important because otherwise the wallet lacks context to interpret
  the rest of the chain.
* This is then accompanied by a change to 'Inductive': renamed
  'WalletEmpty' to 'WalletBoot', and added a transaction argument
  (the bootstrap transaction). Propagated this change throughout.
* The 'ours' that was created in the test was a placeholder only.
  Changed 'genFromBlockchainPickingAccounts' to return the addresses
  it picked, and generate 'ours' from that.

All of the above were fixes to the infrastructure and to the tests themselves; the following are fixes to the wallet generation proper:

* New pending transactions were inserted using `Map.insertWith (<>)`, but
  that inserts them _before_ the block, rather than after. Changed to
  `Map.insertWith (flip (<>))`.
* After the previous fix, pending transactions were inserted ""between"" the
  blocks in which their (last) inputs became available and the block in which
  they were confirmed; but this would break for transactions in which those two
  blocks happen to coincide (i.e., transactions that are confirmed in the same
  block as their inputs). This would lead to transactions being inserted in
  `(lo, hi - 1)`, for `lo == hi`, i.e., in `lo - 1`, which is not correct.  We
  now skip such transactions (which is the only thing we _can_ do; such
  transactions could never be pending from the point of view of this wallet).
* Also in the previous fix the generation of pending transactions was
  fixed to look for transactions _from_ addresses owned by the wallet rather
  than transactions _to_ these addresses, but it was only checking whether
  _some_ of the addresses of the transactions were owned by the wallet rather
  than _all_.

The 'Inductive' generation is still broken even with these fixes however. Since
there is no connection between the pending transactions inserted in the first
pass, and the ""never to be confirmed"" transactions in the second pass (in
'synthesizeTransactions'), the latter pass may be using inputs that are
unavailable because they are used by pending transactions inserted previously.
I will try to fix this next, as well as try to avoid the `O(N^2)` computations
this function currently does to recompute the ledger's UTxO over and over
again.
"
76f934d2cb3fdad795e36815ec97794cdbafaf88,input-output-hk/cardano-sl,"Merge pull request #1093 from input-output-hk/feature/csm332-optimize-txhistory-0.5-rc

[CSM-332] Rewrite tx history - version for 0.5 release"
21bcf26d444d848b8061f8c39a14daddf5c89c77,input-output-hk/cardano-sl,"Merge branch 'master' of https://github.com/input-output-hk/pos-haskell-prototype into feature/csl277-ssc-rework
"
f1e0dba8cbef2dca7f7925d19203bc78be4f838e,input-output-hk/cardano-sl,"[CSL-1165] Move BatchOp stuff to a separate module
"
d49e974338bd49db2b6d14d6f7d3797988b91ef4,input-output-hk/cardano-sl,"[CSM-502] Extract MonadKeysRead from MonadKeys
"
1912b300f5bc9f64016202186041b3ffadca31e9,input-output-hk/cardano-sl,"[CSL-437] Remove more obsolete stuff
"
dc397ce6335034ec22e7197c8486aa15cc3ae216,input-output-hk/cardano-sl,"Merge pull request #1472 from input-output-hk/gromak/csl1579-reporting-fatal

[CSL-1579] Revise 'reportingFatal'"
a980e4a305ba5bc1576d1f39a856128b400ab691,input-output-hk/cardano-sl,"Merge pull request #1774 from input-output-hk/avieth/csl1772

[CSL-1772] more efficient header fetching"
4704bedee56b8605ea38ca7cb715958b58a4e184,input-output-hk/cardano-sl,"Rename Block.Pure into Block.Logic.Integrity
"
0a574a8c63418d60f67fec5ee4a0df99ae0b197d,input-output-hk/cardano-sl,"[CSL-2276] Add a CLI flag for dumping runtime configuration (#2511)

* [CSL-2276] Add a CLI flag for dumping runtime configuration

It's needed for testing.

* Get rid of code duplication
"
325a917e82dc8538320e4a076c0647a9d6301e7e,input-output-hk/cardano-sl,"Merge pull request #135 from input-output-hk/feature/CSE-140-Simplify-paging

Feature/cse 140 simplify paging"
194ed94f73e591b8171f3465325cc13430dbca13,input-output-hk/cardano-sl,"Merge pull request #2111 from input-output-hk/gromak/csl2030-configurations-cleanup-master

[CSL-2030] Rework short epoch configuration "
9b9b2132f72c1ba87c4700474774faf28e0482c4,input-output-hk/cardano-sl,"Merge pull request #3056 from input-output-hk/ruhatch/CDEC-354

[CDEC-354] Refactor Pos.Core.Genesis module set"
ae7b0faa0ff82ed31354199bec2f0c74181ee732,input-output-hk/cardano-sl,"[POS-40] Move MPC workers to a class
"
93ea34b622a935b3632fe144c5131d3ebbe0a7e3,input-output-hk/cardano-sl,"Merge pull request #2146 from input-output-hk/avieth/csl-1.0-block-retrieval

[CSL-1869] Improve block(header) server performance"
56c781c26e71122c71882a5129f77e8caf90f1b1,input-output-hk/cardano-sl,"[CSL-1279] Split off Pos.Ssc.GState.BlockLogic
"
d47fc9fa9c18af0624b6ea53b9dfa0cc4ccba0cc,input-output-hk/cardano-sl,"Merge pull request #143 from input-output-hk/refactor/csl930

[CSL-930] Start moving Pos.Update.* into update/"
580bd4d308ebbe407b0b817443f32f67d97d7724,input-output-hk/cardano-sl,"[CSL-1279] Rename Pos.Ssc.Extra.Holder
"
bc71123bca8346f9f1237bed3a135d01d509edf9,input-output-hk/cardano-sl,"MPC refactoring after review

1. Code from Pos.Ssc.DynamicState.State is moved to Pos.State.State and Pos.Ssc.DynamicState.State is removed
2. announceSsc is created in Pos.Communication.Methods
3. data SscSend is removed, DSMessage is used instead of it
4. many foralls, TypeApplications, ScopedTypeVariables and RankTypes is removed
"
34900db6bc10725f0b8b66dc147884f5300ff9e0,input-output-hk/cardano-sl,"Merge pull request #2955 from input-output-hk/erikd/CDEC-317

Move binary test modules to a separate package (Part 1)"
61dd14bac5843ddd46487a33f4174b8da2a2a338,input-output-hk/cardano-sl,"[CSL-104] Created separate acidic storage for GodTossing secret

1. ensureOwnMpc was removed
2. sscProcessNewSlot was splited on sscProcessNewSlot and ssPrepareToNewSlot (in the GtSecretStorageClass)
3. main acidic storage in npDbPath/main and secret storage npDbPath/secret
"
fea15e82f09b6f9b0b85b1edfcfef960641aca8a,input-output-hk/cardano-sl,"[CSL-1205] Improve GenesisCoreData, adopt sl/lwallet
"
a44c7b0c58e380c0748bfd9c2c52f537ed9ec1c6,input-output-hk/cardano-sl,"[CDEC-505] Move txp types from core to chain
"
67ca15805da284272e0663fc7e626afc2cbdd49a,input-output-hk/cardano-sl,"Merge branch 'master' into refactor/csl869-txp-understandable
"
a845dd3723b7e6b9c6d33541453a1910e670b928,input-output-hk/cardano-sl,"Merge branch 'master' into refactor/csl909
"
b8989821cfb3046a45c4b09f0ae22498739b60cd,input-output-hk/cardano-sl,"Merge branch 'master' into feature/csl659-version-handshake-rework
"
8911fdf7c95d39cd2794a2a1cab44ef4463e205b,input-output-hk/cardano-sl,"[CDEC-268] Simplify the type for streamBlocks callback function

Hide the stream write queue inside streamBlocks.
Move StreamEntry inside Block.hs.
"
d1e048640cc414d625f57176008a0253b77873ef,input-output-hk/cardano-sl,"[CSL-447] Rename `NewWorkMode` -> `WorkMode`
"
b18da81ed0dc6aa8792e63435005b16f3c621853,input-output-hk/cardano-sl,"Merge pull request #3220 from input-output-hk/erikd/CDEC-426

CDEC-426: Move blockchain Worker modules up into lib"
96f69baf7622e76b32a56ee8d36e18752a6a2c9c,libopenstorage/openstorage,"update vendor and use govendor instead of godep
"
001ece03931f4d2d4ee8f968dc507987985a5af7,libopenstorage/openstorage,"Merge pull request #735 from lpabon/sdk-rest-rework

sdk: Rework all REST routes"
e7b559e0c8af40280accaddc01cdc574042ff719,mozilla/fxa-content-server,"refactor(styles): move fox logo
"
c4d2defe2a50500320a150a7591155d85d892dbc,mozilla/fxa-content-server,"chore(sass-lint): add sass linting (#3732) r=vladikoff,pdehaan

remove unused .scss-lint.yml file
add sasslint to grunt lint task"
b3cdb328104c880bbe6fa0f9e2dc3d7c754a740b,mozilla/fxa-content-server,"Pre-merge cleanup

* Ensure Url.removeParamFromSearchString works with an empty query string.
* Ensure `/settings?setting=avatar` or `/settings/?setting=avatar` is matched.
* Remove `setting` from the relier - it's not used anywhere.
"
9127f997ebd2f3723ae17bdf01452340e8d8f190,mozilla/fxa-content-server,"Merge pull request #3334 from mozilla/refactor-password-reset-into-account

refactor(client): Move some view based reset password logic to mixins/models.

r=@philbooth"
423029daea3ab0d8eab75cba3da131ba7d9210ac,mozilla/fxa-content-server,"Merge pull request #1208 from mozilla/issue-996-change-password-messaging

refactor(strings): add change password messaging"
d43219908acd99c9df38880fd0226170db2292e7,mozilla/fxa-content-server,"refactor(client): Better Account field sandboxing

* Only allow expected fields in the Accounts model
  * Unexpected fields cause a loud failure.
* Do not allow the password to be set on the Account to ensure it never leaks.
  * Instead pass the password into functions that require one.
* Convert the constructor to be called the Backbone way, with two parameters
  * The first parameter is the attributes, the second options.

issue #3366
"
7c5f3c016eaa6e0ef73fc8d57f52e95de307fa41,mozilla/fxa-content-server,"Removed unused footer tag.
"
1e81a8f916d4233c8965d951ec1583324b29599f,mozilla/fxa-content-server,"cleanup(css): Extract inline color values to _variables.scss

* cleanup for @pdehaan's comments in #1003

fixes #1009
"
6c113e11582b1f250d614851a14f2352c66f2a37,opensingular/singular-core,"Refactoring: infraestrutura para ter tratamento separado para apenas validação e processamento completo nos eventos ajax
"
ae37d5e2fbcfd0f33d395658e6f5be3c295991b9,opensingular/singular-core,"refactoring do Singular Injector
"
b68692e1fb55e396ac5bd36cc621b168bae5ae7c,opensingular/singular-core,"[FLOW] Renaming class and methods with the prefix ""ProcessXXXX"" to ""FlowXXXXX"". Also, renaming a bunch of methods and variable from portuguese to english.
"
a9d204a0174fcf6024b82cc9c3014db26724913a,opensingular/singular-core,"Refactoring dos componentes de seleção ( versão instavel )
"
63b602bc751d271f0ef811005ee5a015cff03fe8,opensingular/singular-core,"FileUploadServlet -> refactoring para permitir testes unitarios do FileUploadManager
"
a32223ee629f165459f410d8664f81b153d158f2,phetsims/equality-explorer,"reorg
"
1a768583b4630a60b2eb14cb6f5a480138220c53,phetsims/equality-explorer,"clean up assertion messages
"
43cc29221d20f8cc71915bade3326180f74fffef,phetsims/equality-explorer,"clean up initialization and naming of TermCreatorNode locations
"
4adc73ebe2cd933b5bc91af9d785f7ff10d666e5,platformio/platformio-core,"Improve removing of default build flags using `build_unflags` option // Resolve #1712
"
b7ee242cb2474785aa7837e13c64dc53c75aa316,samfun123/KtaneTwitchPlays,"Massive refactoring of elevator handling code
"
54a43915d2347cf06f3f311f2703841554b295cf,samfun123/KtaneTwitchPlays,"Remove unused using directives
"
563f3f2e6ae2fb633c8c4bf0f7186fe48a7d2df3,spacewalkproject/spacewalk,"480636 - simplifying the commands vs options into one real collection managed by hibernate vs 2 that both contained the same things
"
05892eb8f18cbf47c94ce986c3b54f663e5d09f4,spacewalkproject/spacewalk,"merged duplicated code for writing dumps
"
134f3b7b9d2f43444f50dbea6e54bbc1c39e145d,spacewalkproject/spacewalk,"rename ./logrotate/rhn_server_xp to logrotate/spacewalk-backend-xp

addressing rpmlint error:
spacewalk-backend-xp.noarch: E: incoherent-logrotate-file /etc/logrotate.d/rhn_server_xp
"
9c57dba595fd516e643a83058dc974d5dbc6ea28,spacewalkproject/spacewalk,"495946 - Rewrite of Cobbler Snippets.

Big commit related to fixing Cobbler Snippets.. Following changes have been made
1) A new spacewalk subdirectory was added to /var/lib/cobbler/snippets which will
host all the spacewalk specific snippets..
2) /var/lib/cobbler/snippets/org.id will host snippets specfic to that org.
3) A user without root access to the actual box will be only able to update scripts
or snippets listed under /var/lib/cobbler/snippets/org.id
4) All other snippets under /var/lib/cobbler/snippets will be readable to config admins
of all orgs... (readable through the UI that is...)
5) The snippets described under 4 will NOT be editable except the ones under
/var/lib/cobbler/snippets/org.id
6) The snippets are only one level deep.  as in /var/lib/cobbler/snippets/org.id/snippet_name
One cannot now generate snippets that look like /var/lib/cobbler/snippets/org.id/my_dir/snippet_name
This was done to prevent issues like /var/lib/cobbler/snippets/org.id/../../../../tmp/xyz...
leaving security holes like that..
7) Big refactor of Details, removed a bunch of commands..
"
2f1c14055a0fb38b3b38c60de4d175bec272a560,spacewalkproject/spacewalk,"build.py: Remove unused debug booleans.
"
c7abc29bb1c8ba32a13ea22a2f5b050db26178a3,spacewalkproject/spacewalk,"612581 - move python modules from /usr/share/rhn to python site-packages
"
d550ed775ad933419e73842ac1a1486693a3aa0c,tgstation/tgstation-server,"Cleans up some class definitions
"
3eedf2cb7f322a9d0e43b9b9037ac4fef873d1e4,tgstation/tgstation-server,"Merge pull request #586 from Cyberboss/MoreClientIssues

Cleanup some APIs"
b65b7efc1f2ff2098bff9678385052664ad2b941,westnordost/StreetComplete,"remove now unnecessary calls (and classes)
"
692c13695f0e5672b152a44163de6186f9b30d22,Bandwidth/shared-components,"Improvements to navigation layout
"
2455e6b535bfba5996fa52649dff87faabdb5737,Cognifide/gradle-aem-plugin,"Exception handling improved / detekt passing
"
d9e3272dcd550f33ee5f24cce635714b390ada3e,Cxbx-Reloaded/Cxbx-Reloaded,"Improved the D3DDevice_DrawVerticesUP/D3DDevice_KickOff/XFileCreateMediaObjectEx (4627-5028)
Source: Tenerezza, Turok - Evolution
"
128f27c8a38733853c85610615c730a9ff1ad749,Cxbx-Reloaded/Cxbx-Reloaded,"ConvertD3DTextureToARGB cleanup
"
7be9240a168f5cd15f661d15261c617520541870,Cxbx-Reloaded/Cxbx-Reloaded,"Enforce Coding Guideline

All this is done by hand with regex search built-in.

- Replaced all tabs to whitespaces
- Any single check process internal are included with brackets
- Corrected any misalign whitespaces
"
db449086db624ca1b1464352e4c29809416ce7ef,EBIBioSamples/biosamples-v4,"Moves to next SNAPSHOT version
"
41d93c4534488611495c585dcfc6d84456b20ed9,File-New-Project/EarTrumpet,"code cleanup
"
c82c2299e4fb76c8f4e37a1402a296dbf2f251ad,File-New-Project/EarTrumpet,"Cleanup: AppVolumeControl -> AppItemView
"
a39c18937914b3f6bf676ffbd55daaedb99143a2,Harrix/Harrix-Html-Template,"Modify. Convert css code into sass.
"
25e08358e9de1e35ec51c41f9ba767f7a873f2ac,Harrix/Harrix-Html-Template,"Delete unnecessary code
"
b9c8f23f81407c68ce4e4224da8fa2055f9ba1f4,Harrix/Harrix-Html-Template,"Rename z-index-fixed to z-index-navbar.
"
ee2e2c37ce58822d5ea68a436669318c59903c00,MyEtherWallet/MyEtherWallet,Merge branch 'develop' into devop/minor-cleanup
9dddec2c0ffc596ea4c2280ad2c7bb7170b00800,MyEtherWallet/MyEtherWallet,"clean-up
"
c7dd9e88b865c765c8ea2a6cd1a6c514d48bd0b2,MyEtherWallet/MyEtherWallet,"Some cleanup, send eth work, and notification setup
"
75ed797554632128a1c81944342c28dce426afee,angular/compiler-cli-builds,"51c26b8 test: remove deprecated Buffer usage in sourcemap test (#25805)
"
ab322ffe41a6725753e2bafd0d3f9c8fdceb78b1,angular/compiler-cli-builds,"263c1a1 refactor: remove unused imports of the deprecated Renderer
"
c5638df884aeb05c0db952f46a26da226531f502,angular/compiler-cli-builds,"22d58fc build(bazel): remove workaround no longer needed for module names for ngfactory & ngsummary files (#25604)
"
e82cb4d8ea6cfa72bfa31cef078e5ae3dad7a2c8,angular/compiler-cli-builds,"f795f64 refactor(aio): remove redundant styles
"
36b5e20d15e62b2209c4fb8fae4f051ee00cfd34,angular/compiler-cli-builds,"e69c1fb refactor(platform-browser): resolver merge conflict for tslint (#13601)
"
4110b8714a553b1502f1afb4e29de81ffe6d929d,angular/compiler-cli-builds,"2e14130 feat(aio): refactor DocViewer w/ services component builder (#14294)
"
92b08d6c6577b09fa03db4b7d32098630c76fa81,angular/compiler-cli-builds,"efe4633 refactor(empty.ts): typo (#8398)
"
22565458ce41418be49ae1e820a472ba5a92eca5,angular/compiler-cli-builds,"fae47d8 refactor(forms): move value accessor tests into own spec (#18356)
"
faa0d63b7ca55c8f122aa2cc50cd075b7bb6f6c8,angular/compiler-cli-builds,"90bd984 refactor(common): simplify closure-locale by removing imports (#18926)
"
7e98e1d32b52e9af94a1fd17885c0d82a0f12bf7,angular/compiler-cli-builds,"8d300ff fix(aio): header click should always toggle expand/collapse (#16439)
"
da6fc9bb49de0fc995b17754f04a92394a94356b,angular/compiler-cli-builds,"9ee6702 refactor(ivy): remove short instruction names as they provide no value (#25493)
"
8937b8f7d9966390a9e9b11dcf7bf9a8fdbddb6f,angular/compiler-cli-builds,"7ea5161 refactor(ivy): merge directives into LViewData (#26316)
"
67333ac279696616c0ce458565e0d3408d72eba1,apollographql/apollo-client,"Merge pull request #1202 from apollostack/refactor/loading-from-network-state

Refactor: calculate `loading` from `networkState`"
aa06fda7e3213b3fbba538fbe54dedcf35a99496,apollographql/apollo-client,"Merge pull request #1136 from apollostack/refactor/preserve-referential-equality

Preserve referential equality from previous result in the store"
1604be17f25aa2988e7f0ed068c0c1408efcbac9,apollographql/apollo-client,"Merge pull request #362 from apollostack/move-methods-to-observable

Move methods to observable (Issue #194)"
d9269e58b5da3b67aeeaa6ab961319bb8c56c2ee,apollographql/apollo-client,"Merge pull request #734 from apollostack/refactor-query-merging

Refactor network interface: move query merging to separate package"
5e619f02c09d1dbc85b148ee6b61e458ac33937e,apollographql/apollo-client,"Split out data actions
"
6274ebcb952f89a48dfa6d000d864940d727d9d3,apple/swift-package-manager,"Merge pull request #1070 from aciidb0mb3r/rename-to-target

Rename the ""module"" to ""target"""
c61b4a0ff718a2eeab8004475a5f9e654918c7ad,apple/swift-package-manager,"[Foundation] Use NSFileHandle instead of fopen

Instead of passing file descriptors, references to
NSFileHandle are passed around. `fclose` has been
replaced by `closeFile()`, however not strictly necessary
as NSFileHandle automatically closes the pointer on
deallocation.

Rationale for reading the whole file when enumerating the
lines:

* Iterating over a File instance would read using a buffer,
  however most usages would concatenate the chunks
  and work on the complete file (no memory savings).
* Files that are read are mostly small files, should not
  take lots of memory.
"
d8910db4d44c516b6361ebf734c0cad757461ac0,devtools-html/debugger.html,"[WIP] Move search state to redux (#2365)

* refactor search toggling reducer/action to move document search state to redux.

* Lift document search visiblity to redux

* Rework the search actions/reducers for clearer API.

* Rename SourceSearch to ProjectSearch to match its intended usage.

* Start moving the search modifier state to redux.

* Add test for search modifier toggle actions.

* Move the file search query state to redux.
"
d5285e022bf3412da8255bb733ca4bb969ddb14b,devtools-html/debugger.html,"Convert remaining of reducers to ES modules (#2739)

* Convert async-request reducer to ES modules

* Convert breakpoints reducer to es modules

* Convert coverage reducer to es modules

* Convert pause reducer to es modules

* Convert main reducer to es modules

* Convert ui reducer to es modules

* Export update function of reducers by default

* Set proper types for reducers' state argument

* Add flow type-checking to `test-all` command
"
6dc40c40a9d3147463bad78b52d51936a988a7e7,devtools-html/debugger.html,"Fix duplicate locale (#2454)

* Revert ""Fix duplicate locale (#2445)""

This reverts commit 58853fe0a7ebb36663b6871859c9e2bfc69d5519.

* Remove duplicate locale
"
6660e0ddd273fb09e8b8a725a299a6f601279482,devtools-html/debugger.html,"Upgrade flow (#4433)

* Upgrade Flow

* Use `static` properties for `defaultProps`

Flow uses the defaultProps static property to type the default props.

* Convert a set of components over to the new Flow syntax

* Remove a usage of 'createFactory'

* Convert another batch of components over to the new Flow syntax

* Convert yet another batch of components over to the new Flow syntax

* Remove unused file

This file was originally removed in 6ba9b0b55935bfab6683cddb7a89c00d17af5547. However, while merging in master in e60cedd78adae8496bdac2d8e67be04605a6ea77, I accidentally added the file back.

* Don't type check devtools-reps

* Update ref for the ConditionalPanel

Per the Flow docs (https://flow.org/en/docs/react/refs/), we need to explicitly set the type of the ref and ensure that it is nullable.

* Convert more files to the new Flow syntax

* Update the last items for the new Flow syntax

* Only ignore the object-inspector

So that we can still import its types.

* Change flow types to use primitive values
"
ce610b1f2baf6562b6e15f3872dbef1f2f1276bd,devtools-html/debugger.html,"Local development improvements

+ add a start-firefox command. uses the selenium web driver to start
firefox with a good profile.
+ add a ""not connected"" pane for telling people to connect firefox.
+ add openurl, for automatically opening the debugger when the local
server is started
+ cleaned up the readme getting started. Now just 3 commands!
+ added testing / linting commands to the readme.
"
d32d9a3c5c565e1adb9aff4d81f3a14d96d2e18b,dot-bob/Marlin-Duplicator-6,"Merge pull request #3672 from thinkyhead/rc_consolidate_probe_flags

Cleanup and consolidate probe conditionals for clarity"
48cf19151a628edc24ee608f124ac9f73a724abd,dot-bob/Marlin-Duplicator-6,"Improve M48 output; Add min, max, range, etc.
"
72ef508d55dbb379b46d13617569e81a8fd37977,dot-bob/Marlin-Duplicator-6,"Merge pull request #7962 from thinkyhead/bf2_ubl_remove_z_offset

[2.0.x] Remove obsolete UBL z_offset"
3ebad4e020a4f49f422a41d5504aafc8b0fac772,dot-bob/Marlin-Duplicator-6,"Moves all global enums to a central file
"
94d5cf872160cc77cb597fad7cba1d57a7f0f896,dot-bob/Marlin-Duplicator-6,"Merge pull request #4789 from thinkyhead/rc_better_leveling_etc

Various cleanups ahead of more…"
c3c50528e6b3911bfcb496ab626874a09e22e873,dot-bob/Marlin-Duplicator-6,"Merge pull request #1521 from thinkyhead/fixup_encoder_code

Encoder multiplier - revised code"
f1a4758cef4f4cae5bb6d171e5788685907a592f,dot-bob/Marlin-Duplicator-6,"use progmem instead of sram for mesh_index_to_x/ypos array;
fix maximum mesh_index_ array size at 16 (15+1);
"
04ce708031e3d9bb6dad89ec21048dd0424028e7,dot-bob/Marlin-Duplicator-6,"Merge pull request #1457 from AnHardt/bootsplash

Reworked bootsplash for DOGM displays another time - saved 1786 bytes"
870bfd08f5813da47adec09cbb43e626b38984de,dot-bob/Marlin-Duplicator-6,"usb and sdcard sharing improvements

* Add traceback after watchdog timeout

Add the cpability to perform a traceback following a watchdog timeout.

* Enhanced hardware SPI

Allow use of either SSP0 or SSP1.
Ensure that no data is left in I/O buffers after calls to enable sharing of SSP hardware.

* Make flash emulation of eeprom the default

Make use of flash for eeprom storage the default. This means that usage of eeprom will not cause USB drive mount/unmount operations.

* Allow sharing of SD card

SD card I/O operations from the USB stack take place in idle loop, rather than at interrupt time. Allowing sharing of the SPI bus.

New configuration options to allow usage of the SD card to be specified.

* Fix problem with hardware SPI pins
"
c86d092ef3cafb6d7e6454da04764a48ce294507,dot-bob/Marlin-Duplicator-6,"Merge pull request #3598 from esenapaj/patch1

Cleanup for language files"
bb4cb1b15aa351e5e97ba5757e5e8e55e4ee822e,dot-bob/Marlin-Duplicator-6,"Merge pull request #1606 from thinkyhead/cleanup_stepper

Cleanup of stepper.cpp"
0780913848eea5048947808dfcc9143131f094d3,dot-bob/Marlin-Duplicator-6,"IDEX Improvements (#11848)

"
e2d4919c018b225d001453fbecc309277641bda1,dot-bob/Marlin-Duplicator-6,"Merge pull request #3991 from thinkyhead/rc_axis_units

Rename some vars to clarify their relationship to acceleration"
d3c02410a84b369443654ef77f925562e9b87830,dot-bob/Marlin-Duplicator-6,"[2.0.x] Small assorted collection of fixes and improvements (#10911)

* Misc fixes and improvements

- Get rid of most critical sections on the Serial port drivers for AVR and DUE. Proper usage of FIFOs should allow interrupts to stay enabled without harm to queuing and dequeuing.
  Also, with 8-bit indices (for AVR) and up to 32-bit indices (for ARM), there is no need to protect reads and writes to those indices.
- Simplify the XON/XOFF logic quite a bit. Much cleaner now (both for AVR and ARM)
- Prevent a race condition (edge case) that could happen when estimating the proper value for the stepper timer (by reading it) and writing the calculated value for the time to the next ISR by disabling interrupts in those critical and small sections of the code - The problem could lead to lost steps.
- Fix dual endstops not properly homing bug (maybe).

* Set position immediately when possible
"
fc9919b7494ca7876246661b098965eed0169362,dot-bob/Marlin-Duplicator-6,"Merge pull request #6515 from thinkyhead/rc_cleanup_sunday

Some minor cleanups to code formatting"
90fa423737448feb75ee59a2afc88a8c891b19ea,dot-bob/Marlin-Duplicator-6,"Preliminary cleanup of #include structure (#9763)

"
93ea281061590ca5b222a44dab25e903ddb94401,dot-bob/Marlin-Duplicator-6,"Split up Conditionals.h into two files

Rather than include twice, which is tricky but may confuse
"
a10451ceed61e16a62d5395c27ad4ebe8ed06029,dot-bob/Marlin-Duplicator-6,"Move Volumetric methods to Planner
"
5ca6334fd20daf65bf83cab613fbfe847cd2ab43,dot-bob/Marlin-Duplicator-6,"Cleanup pins files, fixup analogtodigitalpin, etc.
"
9f77df25900c22181de1170c4c81f10b4c1b885e,dot-bob/Marlin-Duplicator-6,"Followup to menu refactor. TMC warnings, sanity. (#12288)

- Followup fixes for menu refactor
- Fix TMC sanity checks, unused var warnings
"
be949e0a0a2420205aaf80de514432a76596a854,openshift/openshift-ansible,"More toxification

- Move pylint tests to tox
- Move yamllint tests to tox
- Create separate tox config (and setup.py) for root
- bump ansible requirement
- unify pylint config
- add docs
- remove git directory containing old testing tools
- install python-six if not present for openshift-facts
- add python-six as a dependency for openshift-ansible-utils
"
00e0d272cdeacdb4bfd78a65b0d282de9ee821dc,openshift/openshift-ansible,"Cleanup various deprecation warnings.
"
457e0f80784820b9ff0fb6a7407c271731f5b1d9,openshift/openshift-ansible,"Merge pull request #5378 from mgugino-upstream-stage/cleanup-deployment-types

Automatic merge from submit-queue

Cleanup old deployment types

Previously, openshift-ansible supported various
types of deployments using the variable ""openshift_deployment_type""

Currently, openshift-ansible only supports two deployment types,
""origin"" and ""openshift-enterprise"".

This commit removes all logic and references to deprecated
deployment types."
d1fc1486e35b91293d69fe6d5da274ef7f5f67ea,openshift/openshift-ansible,"As per https://github.com/openshift/openshift-ansible/issues/1795#issuecomment-213873564, renamed openshift_node_dnsmasq to openshift_use_dnsmasq where applicable. Fixes 1795
"
f15d3a37b16e1ed3ebacbab29929d4c13ebfbc75,openshift/openshift-ansible,"Merge pull request #9119 from mgugino-upstream-stage/cleanup-todos

Fixup various TODO sections of code"
10d04c6718cb37e5142a3fe96b859ad515dd65ff,openshift/openshift-ansible,"Merge pull request #7786 from mgugino-upstream-stage/remove-unused-openshift-facts

Fix session secrets file and remove old facts"
ec9c22ca6a376b7d1139a384dcb78f3f5bb5b607,openshift/openshift-ansible,"Refactored to use Ansible systemd module

* Ansible systemd module used in place of service module
* Refactored command tasks which are no longer necessary
* Applying rules from openshift-ansible Best Practices Guide
"
f3741a05097f1848d2b3e9a01f03e76a33487e01,openshift/openshift-ansible,"Management Cleanup and Provider Integration

* Add container provider integration
* General cleanup
* Poll until service fully starts
* Add notes on multiple-provider additions
"
9bf361b5b96fede674640bb4b469616660608754,supercollider/supercollider,"Several improvements, optimizations, etc..
"
f5dc5bb9a48a54fb326279898fabdbb0c34794dc,supercollider/supercollider,"sc ide: server actions aesthetics

* Move the KillAll action in the menus
* Change all server actions to Title Case
* Clean whitespace
"
4649a84593a7bda091421000734fadd79330c185,supercollider/supercollider,"scide: move CodeEditor into separate file from GenericCodeEditor
"
ef3add6e3f4d04df4c1ff5b66fc951e990cc4139,supercollider/supercollider,"sc ide: refactor session management to close all splits on new session
"
a9d1f6d85e7fbb158ba3704f5f4d76bd7b3dc6d2,supercollider/supercollider,"libs: rename libs folder to external_libraries to match sc directory layout

Signed-off-by: Tim Blechmann <5ee0edb9e2229c0838f1959779f1949031de0123@klingt.org>
"
9fce71e5665d171900d46def6fccf1f13ae96603,thunderhoser/GewitterGefahr,"Cleaned up storm_images.py.  Still need to clean up calls to storm_images.py and any code that assumes storm-centered radar images have sea-level-relative height coord.
"
390d10189bf33fa58067254d8fcccb38f4a0c7b0,unixorn/awesome-zsh-plugins,"Merge pull request #396 from unixorn/add-razer-plugin

move razer plugin to plugins section"
f6e931eb39833e033b7ae3493939904dc641295b,AnalyticalGraphicsInc/cesium,"Test improvements.
"
e539ae059d6810e227d0d7df3bf9178091572d15,AnalyticalGraphicsInc/cesium,"Add a defineProperties helper method so the code still evaluates in IE.
"
e2f4c8f7a61b9b35be36f7c39c926393cbad1f32,AnalyticalGraphicsInc/cesium,"Merge branch 'master' into dynamic-updater-cleanup
"
c326e2d3ee16419efe521382cb732a40d498b4f8,AnalyticalGraphicsInc/cesium,"Break out mercator projection into a separate GLSL function.
"
b904c4ef22d670354e88dd067e9084643c07ea9d,AnalyticalGraphicsInc/cesium,"Added tests and cleanup.
"
afb6e9e3f06b6849cb1a1026bb5608b21a4d801e,AnalyticalGraphicsInc/cesium,"Misc test fixes

1. Add a `toThrowRuntimeError` to go along with `toThrowDeveloperError`
2. Remove all use of `toThrow` and use one of the above instead.
3. Overwrite `toThrow` so that it can no longer be  used (it spits out an error saying to use one of the above instead).
4. Fix bad tests and code that were passing because of hte use of `toThrow`.
"
ccf75b4ef03891a8d81365d9c172620b348486e7,AnalyticalGraphicsInc/cesium,"Allow changing of pick ids.

The visualizers rely on being able to repurpose primitive instances to visualize different dynamic objects.  Simply changing the `_id` property on the primitive is not sufficient, because the value is captured when the pick id is created.  The result is that in cases where dynamic objects are hidden and shown, picking frequently returns the wrong dynamic object, which causes the selection indicator to point at the wrong location.

These changes add the ability to update the object associated with a pick id, and add setters for the `id` property.

Along the way, I also renamed _pickIdThis to _pickPrimitive to better reflect its purpose, and also made an internal get/set property so that Labels can update the value, for the same reason as pick id.
"
fdcb9aefed63b1faf6c839025417942601825439,AnalyticalGraphicsInc/cesium,"cleanup, octencode extrudeDirection
"
5400a4aecdd619347d2819c26357e02984fa68fc,AnalyticalGraphicsInc/cesium,"Merge pull request #1354 from AnalyticalGraphicsInc/matrixfunctions

Optimized matrix functions"
696e1919de53a0274877cea8919d5cdd345827db,AnalyticalGraphicsInc/cesium,"Update to Draco 1.3.0, cleanup
"
aeb8de02d507fa9a620c6538998338076004f30d,AnalyticalGraphicsInc/cesium,"cleanup
"
c8fdf0c00ebd76a55aded5384918e29b396309df,AnalyticalGraphicsInc/cesium,"Merge pull request #1408 from AnalyticalGraphicsInc/fixAnimationSpecs

Fix failing specs by properly isolating and cleaning up animations."
84fbd37282e27d10da786f2ac5e309e252ed07c8,AnalyticalGraphicsInc/cesium,"Use ColorBlendMode instead of always Mix
"
f51bd5ebfec8b977a33f566f23dffb72954e4780,AnalyticalGraphicsInc/cesium,"Rename Sandcastle.html to index.html
"
47174b43b4a57d3252343df77f800ec537ed5676,AnalyticalGraphicsInc/cesium,"Add separate centered and off-center orthographic frustums.
"
b863d3b2693bd52ccd991f5006be53e0f038377c,AnalyticalGraphicsInc/cesium,"Renamed server to url
"
8734e3b1c385a5c45c142da446f86daaee11f688,AnalyticalGraphicsInc/cesium,"More DynamicScene cleanup to follow formatting conventions.
"
f2aec964a197c5f8e82af5927a9a52072cdd4c8a,AnalyticalGraphicsInc/cesium,"cleaning up some names
"
bb8de2e941d3d785426d8b1dc1db45a52e7b8329,AnalyticalGraphicsInc/cesium,"Prevent geometry flashing when re-batching primitives

When we need to rebatch ""static"" primitives, for example because an object has gone from solid to translucent or the data sources performed an update; the old primitives would be removed but the new primitives would not show up until they were ready.  This caused it to look like the data was flashing on/off as it was being processed.

This change simply keeps the old primitive around until the new one is ready.  It also needed to tweak `Primitive.show` in order to actually cause geometry to be created when the show was set to false.

Also use `Primitive.ready` where appropriate instead of the private variable.
"
f8ea08fb276b0f11f09c3bdb447f5a847e448697,AnalyticalGraphicsInc/cesium,"Merge pull request #2844 from AnalyticalGraphicsInc/deprecated-scene

Remove deprecated Scene.fxaaOrderIndependentTranslucency"
f31447f775a5bf200cafde18db281d5c607de48b,AnalyticalGraphicsInc/cesium,"Fix bugs introduced in refactor.
"
21aaa4c14889dd81fc38fc51d9555e92b6ed8572,AnalyticalGraphicsInc/cesium,"Deprecated camera tilt and heading setters. Deprecated tilt getter and replaced it with pitch. Added Camera.setView to set the camera position, heading, pitch, and roll.
"
c32a447fef424b9957c670eabcbc5eeda2a8d66a,AnalyticalGraphicsInc/cesium,"Initial refactoring to support imagery layers.

Not complete yet, work in progress.
"
157ecd4585b5934ce80b085af408db4b14ec2923,AnalyticalGraphicsInc/cesium,"First round of clean-up to JulianDate usage.

1. Remove temporarily work-arounds that manually converted to TAI to avoid UTC arithmetic slowness
2. Change JulianDate add methods to take a result object.
3. Make sure constructors don't create throw-away dates during construction.
"
4eb6e723e341af975142a172e856f39dc031c561,AnalyticalGraphicsInc/cesium,"Merge remote-tracking branch 'origin/master' into refactor-julianDate

Conflicts:
	Source/DynamicScene/SampledProperty.js
"
30043ff4d92a3ebc58d00ac4e750d9d6f0a26724,AnalyticalGraphicsInc/cesium,"Merge branch 'master' into dynamicScene-refactor
"
8baeef1a0dcb6dbfea1f4bb46ac21e79cd670d95,AnalyticalGraphicsInc/cesium,"Remove unused modules.

Found by running JSHint with ""unused"": ""strict"" in the Source directory.
"
6552144606716a6ba8a660a97eb35afa38483fc3,AnalyticalGraphicsInc/cesium,"Merge pull request #3121 from lilleyse/shader-source-cleanup

Cleanup and fixes forwarded from 3d-tiles branch"
7a738cf507f97f855ab25146827dc0047515ba6b,AnalyticalGraphicsInc/cesium,"fix IDL, code cleanup
"
d08aea78ddcd6639c5eacb3b3e84edd16fffabe9,AnalyticalGraphicsInc/cesium,"Specs for Color, other minor cleanup.
"
e9f9b2d3d1f442abe24dcf94d0a0ac22089b4636,AnalyticalGraphicsInc/cesium,"Rename Cartographic3 to Cartographic and CzmlCartographic3 to CzmlCartographic.
"
4f2992e80f8638daa82a6eb147941487e5aad382,AnalyticalGraphicsInc/cesium,"Merge pull request #1756 from AnalyticalGraphicsInc/fixRequires

Remove unnecessary `../` paths for modules."
d2b65c41e0f4ec63df64a5ed9e0ad12b4355a295,AnalyticalGraphicsInc/cesium,"Refactoring DynamicScene Material support.

CZML processing of some Materials is broken, but everything else is looking good.
"
417f97b8cea5ae29c3bb06f66f5d4b331650e4e2,GiovanniBussi/test-travis-ci,"cppheck

I cleaned up some of the (innocuous) warnings
"
2a18cfb17561650ba8977cd8343fa6baa698e22a,GiovanniBussi/test-travis-ci,"Squashed commit from fccubic

All commits listed above, with the execption of the ""while"" stuff on pbc

commit 3708ff55d9987803182a7703874d2bbb1d1a3e3e
Merge: fc5ca30 9cab511
Author: Michele Ceriotti <michele.ceriott@epfl.ch>
Date:   Fri Mar 13 16:45:04 2015 +0100

    Merge branch 'master' into fccubic

commit 9cab511f599db57cf462e72a0b81819f0cf4fd62
Merge: c77549c 76abc96
Author: Michele Ceriotti <michele.ceriott@epfl.ch>
Date:   Fri Mar 13 16:43:29 2015 +0100

    Merge branch 'master' of github.com:plumed/plumed2

    Conflicts:
    	src/core/Atoms.cpp
    	src/core/Atoms.h

commit c77549c7e87d6ddca8131cdd58e265100a83c3b7
Author: Michele Ceriotti <michele.ceriott@epfl.ch>
Date:   Fri Mar 13 16:27:39 2015 +0100

    Gareth fix for LAMMPS

commit fc5ca30d2b0dd2bed2ead4866317503576e46cd6
Author: Michele Ceriotti <michele.ceriotti@gmail.com>
Date:   Sat Feb 7 18:19:58 2015 +0100

    S**t wrong sign of displacement vector!!

commit 02fa9e6439eb33ac98c26bc46b7950583b3abaa5
Merge: 96c1481 100b3ef
Author: Michele Ceriotti <michele.ceriotti@gmail.com>
Date:   Sat Feb 7 17:17:10 2015 +0100

    Merge branch 'master' into fccubic

    Conflicts:
    	src/crystallization/Fccubic.cpp

commit 96c1481f410516ca7c019033d3c880fc5a5dc9c3
Author: Michele Ceriotti <michele.ceriotti@gmail.com>
Date:   Sat Feb 7 16:44:15 2015 +0100

    Finished messing around with optimizations.

commit aa772a4dde348459a9b61d7d23fa22527541abf2
Merge: b371043 52ed4a5
Author: Michele Ceriotti <michele.ceriotti@gmail.com>
Date:   Sat Feb 7 15:02:30 2015 +0100

    Further speedups...

    Merge branch 'master' into fccubic

    Conflicts:
    	src/multicolvar/BridgedMultiColvarFunction.cpp
    	src/tools/SwitchingFunction.cpp

commit b37104386b57c4e9291c63ee21149352c18792f9
Author: Michele Ceriotti <michele.ceriotti@gmail.com>
Date:   Sat Feb 7 14:01:41 2015 +0100

    Tried to shave off some time from the PBC evaluation

commit cfc2f9491261154cddf7cc0fdde5807f7b01199d
Author: BingqingCheng <tonicbq@gmail.com>
Date:   Tue Jan 6 18:43:55 2015 +0100

    Ouch...

commit 43f7df5c9f5c237002c5a325765947753340a13b
Author: BingqingCheng <tonicbq@gmail.com>
Date:   Tue Jan 6 18:11:35 2015 +0100

    Another mistake

commit 4980c617a8bfd1cff0840d296517c6255d505d92
Author: BingqingCheng <tonicbq@gmail.com>
Date:   Tue Jan 6 17:54:44 2015 +0100

    Made a mistake in the derivative

commit 7eaa00302a4432c5a2ad5bc8bbde77495c48283b
Author: BingqingCheng <tonicbq@gmail.com>
Date:   Tue Jan 6 17:35:09 2015 +0100

    Add orientation specification in FCCUBIC

commit 441bc44a5d901f076170c53d69081ba072b6863a
Author: BingqingCheng <tonicbq@gmail.com>
Date:   Fri Dec 5 13:55:08 2014 +0100

    add alpha to modify the fcc harmonic function

commit 0de35e6edfa8e8306d602154eefb8c573a43c5b8
Author: BingqingCheng <tonicbq@gmail.com>
Date:   Tue Nov 25 16:59:26 2014 +0100

    Modified FCCubic
"
02c6624b63be3af2ffd3c04adbb8369a609432a6,IBMStreams/streamsx.topology,"Merge pull request #655 from ddebrunner/opinit

Refactor code to reduce code gen & simplify splpy.h"
24dbe7b7b1fdf16b55ff1d454d862222ed4d82eb,alphagov/notifications-admin,"Add Redis cache between admin and API

Most of the time spent by the admin app to generate a page is spent
waiting for the API. This is slow for three reasons:

1. Talking to the API means going out to the internet, then through
   nginx, the Flask app, SQLAlchemy, down to the database, and then
   serialising the result to JSON and making it into a HTTP response
2. Each call to the API is synchronous, therefore if a page needs 3 API
   calls to render then the second API call won’t be made until the
   first has finished, and the third won’t start until the second has
   finished
3. Every request for a service page in the admin app makes a minimum
   of two requests to the API (`GET /service/…` and `GET /user/…`)

Hitting the database will always be the slowest part of an app like
Notify. But this slowness is exacerbated by 2. and 3. Conversely every
speedup made to 1. is multiplied by 2. and 3.

So this pull request aims to make 1. a _lot_ faster by taking nginx,
Flask, SQLAlchemy and the database out of the equation. It replaces them
with Redis, which as an in-memory key/value store is a lot faster than
Postgres. There is still the overhead of going across the network to
talk to Redis, but the net improvement is vast.

This commit only caches the `GET /service` response, but is written in
such a way that we can easily expand to caching other responses down the
line.

The tradeoff here is that our code is more complex, and we risk
introducing edge cases where a cache becomes stale. The mitigations
against this are:
- invalidating all caches after 24h so a stale cache doesn’t remain
  around indefinitely
- being careful when we add new stuff to the service response

---

Some indicative numbers, based on:
- `GET http://localhost:6012/services/<service_id>/template/<template_id>`
- with the admin app running locally
- talking to Redis running locally
- also talking to the API running locally, itself talking to a local
  Postgres instance
- times measured with Chrome web inspector, average of 10 requests

╲ | No cache | Cache service | Cache service and user | Cache service, user and template
-- | -- | -- | -- | --
**Request time** | 136ms | 97ms | 73ms | 37ms
**Improvement** | 0% | 41% | 88% | 265%

---

Estimates of how much storage this requires:

- Services: 1,942 on production × 2kb = 4Mb
- Users: 4,534 on production × 2kb = 9Mb
- Templates: 7,079 on production × 4kb = 28Mb
"
b249477953d0f115b2d39600474f81ccb5324564,alphagov/notifications-admin,"Simplified the config files for admin.
"
2f37e37278a10aa3bbf01692ec882a60fcb030ff,alphagov/notifications-admin,"rename choose_service to choose_account
"
fa01c1bc5c757e6e9a088b042688cfdf45347a27,alphagov/notifications-admin,"Make a macro for the AJAX update module

This is less repetitive than typing out the HTML with all its attributes
every time.

It also lets us wrap up the idea of ‘finished’ as a parameter, so the
AJAX code will only be initiated when it’s needed, eg if a job is still
processing.
"
50e0227480eef15afc2bf7d8d88beb7a64e56ffa,alphagov/notifications-admin,"Fairly large refactor of tests related to getting/viewing notifications
"
6193f049f530e8aacd6fa42905d7d689a92f3127,alphagov/notifications-admin,"Merge pull request #2242 from alphagov/colour-preview-refactor

Refactor hex colour preview Javascript"
c0550d2c611131dc0b40b22b3af355614a3d0ccc,alphagov/notifications-admin,"Refactor unit tests
"
73f20f41bde8589f9986d10ca5fe401326b0c9b4,avocado-framework/avocado-vt,"Python 3: To replace some modules and funtions with six

Module: Configparser, cPickle, Queue, BaseHTTPServer, SimpleHTTPServer
        urllib, urllib2
Function: raw_input, reduce, unichr

Signed-off-by: Junxiang Li <24eb2529d323c4bd2242ca196ff4d8ee90617048@redhat.com>
"
8d01bf68c94b383fa8d7123411660a15612fe2a8,avocado-framework/avocado-vt,"env_process: Try to find the best possible CPU model for qemu v2

When auto_cpu_model = yes, we'll try to find the best
CPU model to be used by qemu, the process being:

1) Find the host CPU model
2) Try to pass it to qemu

We used to ignore invalid CPU models passed to qemu
in qemu_vm code, but we had to change that to allow
negative CPU model testing. So the sanity check of
whether the CPU model is valid has to be made way
earlier in the code.

Therefore, introduce get_qemu_best_cpu_model, that
will find the host CPU model and then check this
value against the valid CPU models on qemu. In case
there's no such cpu model in qemu, chose a sensible
default value (default_cpu_model if it is defined
in the params dict, or 'qemu64').

The new functions introduced to utils_misc are:
 * get_host_cpu_models -> Rename of get_cpu_model
 * get_qemu_cpu_models
 * extract_qemu_cpu_models
 * get_qemu_best_cpu_model

Some of the functions were extracted from the
cpuid test. In the next patch, we make the
test to use the new functions.

Changes from v1:
 * Refactor code to get qemu cpu models to its
   own function on utils_misc
 * Make the code actually work, by making
   involved functions to return lists

CC: Eduardo Habkost <50373d7c08ceadf576dd7dca718012445b677ce6@redhat.com>
CC: Igor Mammedov <376726f239c919d31d97c9332191663ab16d47b5@redhat.com>
Signed-off-by: Lucas Meneghel Rodrigues <8ad3460456640ab580599f5440c5a8d925a620b9@redhat.com>
"
689799b1be58ca149da5a8ac5fbd5c442e62c611,deanoemcke/thegreatsuspender,"Move unsuspend on reload into initSuspendedTab function
"
7fc3d4cbbdc576f4159ce5624eb919ccadc77dde,deanoemcke/thegreatsuspender,"Bug fixes after refactor
"
3f26795ac65258c2f2361ab88bea95c09f84e6b0,deanoemcke/thegreatsuspender,"Refactor and improve crash recovery functionality
"
8dd37b293cd6496dccc75d2b4b8872c733f0dbe6,eaplatanios/tensorflow_scala,"Moved the input and output classes outside of the op class.
"
63f64e6ee6a80f3d76e15ee9e5563a0d5d7670e7,ghiscoding/Angular-Slickgrid,"Merge pull request #28 from ghiscoding/refactor/services-references

refactor(services): remove gridOptions and columnDefinitions references"
ed273147cf20bfb16f49e2fafc63b0fe7de56e2c,ghiscoding/Angular-Slickgrid,"refactor(extension): rename ControlAndPluginService to ExtensionService
"
bd8440b5d50ab8338b5b32e3d8a68643dda75d12,ghiscoding/Angular-Slickgrid,"refactor(editor): move all Editor params into editor
- instead of using the generic ""params"" to pass collection and other arguments, we will use the ""editor"" object
- doing this brings TS types and intellisense
"
ed7c079ab3935fdbdbc62e605c86f2bc16860e82,googleapis/google-cloud-ruby,"Rename Table#load and Dataset#load to #load_job

[refs #1720]
"
1b80f2071b6d125dd7be75ec22203d2d32048a00,googleapis/google-cloud-ruby,"Add ExtractJob::Updater for setting options.

Also move some shared conversion code to the Convert class.
"
1dcd80ebb65b1a4035ff0b319abcd863ae369a5f,googleapis/google-cloud-ruby,"Add Project#query

Add a new method to return query data without making users go
through the Job API. This calls jobs.query instead of jobs.insert.
Rename QueryData.from_response to QueryData.from_gapi to better
match the conventions in other classes.
"
9aa972043f704655d80594acb9ad186e39f98e4d,kubernetes/sample-controller,"Merge pull request #64122 from ixdy/update-rules_go-and-gazelle

Automatic merge from submit-queue (batch tested with PRs 64122, 64936, 65288, 65383). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.

Update to rules_go 0.12.1 and gazelle 0.12.0 and perform related cleanups

**What this PR does / why we need it**: my initial intent was to simply update to rules_go 0.12.1 and gazelle 0.12.0.

A few internal changes / deprecations meant that I finally needed to clean up some technical debt. This also fixes #64122.
I've attempted to keep the steps as separate commits to make it easier to review:

1. Disable gazelle proto rule generation; legacy proto rules are deprecated, and we don't (currently) build protos at build time anyway, instead generating them with `hack/update-generated-protobuf.sh` and then checking them in. We can revisit this in the future if we'd like.
2. Remove the legacy `go_default_library_protos` filegroups using [buildozer](https://github.com/bazelbuild/buildtools/tree/master/buildozer). We don't use these, anyway.
3. Update the rules_go bazel workspace dependency to 0.12.1.
4. Vendor gazelle 0.12.0 and update BUILD files with `hack/update-bazel.sh`. This causes a lot of diffs, because `select()`s are no longer used in `srcs` attributes, external tests are folded into non-external tests, and vendored targets get an `importmap` attribute.
5. Set `gazelle:prefix` on `staging/src/BUILD` to make gazelle treat these correctly(ish). This allows us to remove the sed rewrite hack in `hack/update-bazel.sh`.
6. Explicitly set `# gazelle:importmap_prefix k8s.io/kubernetes/vendor` on `vendor/`, so that all vendored dependencies get the right importmap. gazelle 0.12.0 uses the bazel workspace name + `vendor/` as a prefix, which doesn't work with native go. Newer gazelle will use the go prefix (https://github.com/bazelbuild/bazel-gazelle/pull/207), but it's not released yet. Setting this correctly now also fixes later `BUILD` churn.
7. Re-run `hack/update-bazel.sh`. This causes a bunch of diffs, since anything under `staging/src` now uses the `staging/src/` path instead of `vendor/`. (Both would work for bazel, but gazelle uses the former, since `vendor/` uses symlinks.) Also `importmap`s under `vendor/` are fixed.
8. Reformat a few files (using [buildifier](https://github.com/bazelbuild/buildtools/tree/master/buildifier)) to make later diffs easier to read.
9. Rework the `go_genrule` rules to use the new `go_genrule` from https://github.com/kubernetes/repo-infra/pull/72, which is more bazely, since it uses the rules_go `go_path` rule instead of lots of shell.
10. Remove the deprecated `go_prefix` rule from the root BUILD.bazel file.
11. Set `# gazelle:importmap_prefix k8s.io/kubernetes/vendor` on `staging/src` as well, which ensures that these repos are treated as vendored dependencies. (It's basically the bazel-y way of doing the `vendor/k8s.io` symlinks.)
12. Run `hack/update-bazel.sh` one last time to fix all of the `importmap`s under `staging/src`.

Note re: point 6 above - we're pretty much ignoring the `vendor/k8s.io` symlinks entirely now under bazel. Using the `gazelle:prefix` directive ensures these get mapped into the right go importpath, and the `go_path` rule installs these correctly now too.

**Special notes for your reviewer**: this should not be submitted before https://github.com/kubernetes/repo-infra/pull/72, obviously.

**Release note**:

```release-note
NONE
```

/assign @BenTheElder @fejta @thockin
cc @cblecker @jayconrod

Kubernetes-commit: 1ad1c8c7f80d99b9625924b2102a04a555162bfb
"
8245be0db0eb1c0451171f0713173796408e7944,marshmallow-code/marshmallow,"Move field updates from `Schema` to `Field`.

* Remove special-casing in `__set_field_attrs`.
* Attach parent schema and name to `List#container`.
"
076134b10dadb67b4fe17a0d91f4428349d9c6b4,marshmallow-code/marshmallow,"Refactor to remove import of core.py in fields.py

Also rename core.py -> serializer.py
"
7b3a66d5a42bb91dee3ae127e8719b60f80103dd,noms-digital-studio/licences,"Refactor

"
4d71607aafac9c14e5927064a4ab5864e8ef4a57,oat-sa/extension-tao-testqti,"Merge branch 'develop' into feature/TAO-5361-refactor-storage

 Conflicts:
	manifest.php
	scripts/update/Updater.php
"
2ccde1aa3df0718d4c6b3b74ab6e321f243f6be6,oat-sa/extension-tao-testqti,"Merge branch 'develop' into fix/remove-unused-containerconf
"
8a613ce1eafddc938aa5b74424295960a8a2fb4a,oat-sa/extension-tao-testqti,"Replaced update block to eliminate usage of old file class
"
8835413359ce8758cba10a9eaf4380f21615bbf1,oat-sa/extension-tao-testqti,"Merge branch 'develop' into cleanup/unused-function
"
a3377225e014a7f7fb991ebf3c92f61ece83beb2,oat-sa/extension-tao-testqti,"Merge pull request #827 from oat-sa/feature/TAO-4310_optimize-plugins

Feature/tao 4310 optimize plugins"
8754ca535cf64ff67653c78a870a923615b6ffca,oci-pronghorn/GreenLightning,"Interface cleanups for reading and writing streams

HTTP cleanups - removal of paramaterized types
"
76242158154ac037fc6310bc40e0c3ca46e90ccb,oci-pronghorn/GreenLightning,"update load tester for grouped parsers

clean up child class scanner to not scan the test classes

update load tester on % complete to simplify

added server and date and fixed header fields

added new slipstream example to support framework-test"
643b9f485ff74ca49342ffa00b369edd36f3d3bd,tuxbox-neutrino/gui-neutrino,"update: reworked update menu

-moved software_update.cpp/h to update_menue.cpp/h
-add new class CUpdateSettings into files update_settings.cpp/h
-using update settings in sub menus, so we've got only hotkeys
 and less menu items in update menu
-reworked some locales
"
dcf7d4378d4c047f86c798d65e30337803f413f4,tuxbox-neutrino/gui-neutrino,"locals: remove unused
"
da0142eb0d5f91dda1c6574505ec08f9665a235b,tuxbox-neutrino/gui-neutrino,"gui/pictureviewer_setup, gui/audioplayer_setup: use CMenuOptionNumberChooser instead of CStringInput
"
1ae424f06b37f0f1248b23d04b777f9542229388,wikimedia/integration-config,"Convert extensions to use generic phpunit job (H-I)

Change-Id: I160340c3f7d4f9794899f8ea31fc70f3c232a57e
"
96ae48de50590d04e3be537e5668c63a2c20af36,wikimedia/integration-config,"Remove commented out yamllint from translatewiki

T86194 asked yamllint to support linting multiple documents yaml file.
The job we have is rather lame and I am getting it phased out (T95890)
in favor of invoking an entry point and let developers handle it.

Remove the commented out yamllint job from translatewiki project.

Bug: T86194
Change-Id: I873abfd34ad4b1fbea3790fcb51516256bde1ae0
"
cdc6250bcbb266ea257392378a3eb5ea4be85276,wikimedia/integration-config,"Convert extensions to use generic phpunit job (J-L)

Change-Id: Ieb86b4f2260fe50a4adf305cbbc723f50eaecc09
"
8980231cd91fe2ecf0d36f0ddb95abafc5be3217,wireapp/wire-ios-sync-engine,"Fetch, create, delete the conversation link (#699)

* Add draft methods to create conversation links

* Update for data-model changes

* Change naming

* Change filename

* Adjust for new data-model API

* Added hotfix to refetch group conversations in teams (#694)

* Updated for the new API (#697)

* Updated for the new API

* Removed local data model

* Fixes for PR review

* Bump wire-ios-data-model to 93.0.1

* Temporarily removed unused code

* Added back link fetching code

* Removed part related to link generation

* Missing link generation code

* Delete link request

* Fixed InviteTests missing file

* Updated for the current API; Added comments

* Request tests

* Added tests

* Bump mocktransport

* Update link creation response http code

* Bump mocktransport to 69.2.1
"
9612f3cb77ae3e6d9e5dc6f4a1dde10d9b64a1e8,wireapp/wire-ios-sync-engine,"Fixing leaks  (#510)

* Tearing down more things in integration test

* Try to make some properties weak to mitigate memory issues

* WIP

* Tear down transport session

* View controller for investigation

* Moar frameworks!!

* Fix test compile

* Tweaked debug test controller

* Pin components

* Project updates

* Resetting storage in analytics

* Updated components

* Fixed build issue

* Tearing down more things

* Fixed base class issues

* More teardown

* Weakifying properties to avoid retain cycles

* Trying to clean up mocks

* More nice mocks gone

* One more nice mock gone

* Removed unused mock and stop mocking in more places

* One more unnecessary mock gone

* No need to mock self strategy

* Adding OCMock teardown

* OCMOCK FTW

* Bump components

* Removed all dependent projects

* Trying to break retain cycles

* Optionality changes

* Fix crash

* Nonexisting file

* Disabled malloc logging

* Stuff is not really optional

* Revert ""Optionality changes""

This reverts commit e3b1ac2201e2504885835d477c97e0a032b4f1e6.

* Make sure to still have the group when leaving

* Pin testing

* Fix build error

* Fix failing test

* More teardown

* Bump components

* Fixed user session tests

* Disable logging transport reqs

* Fixed failing tests

* Fix build errors

* Made clearing table synchronous to avoid triggering leak detection

* Removing traces of other frameworks

* Revert some debug changes

* Removing weird null

* Tearing down some more things

* Updated CI image

* Using different resources branch

* Using regular resources

* Making sure clear works synchronously

* We need to have someone to retain context

* Downgraded testing to version before leak checking

* Remove duplicate tear down

* Using older CircleCI image
"
a771bc33c5bd602ed6d5391cebcd159ead2ed6ff,wireapp/wire-ios-sync-engine,"Remove ZMVersion (moved to data-model) (#716)

* Remove ZMVersion (moved to data-model)

* Fix potentially comparing nil versions

* Bump components
"
5cf012cfbc7017b46912b9f59a9f76a2d4b870b3,DiligentGraphics/DiligentCore,"Reworked Common and Platform modules to break interdependenices;
Replaced static const->static constexpr where appropriate
"
632071a04ecb93ce1bf42579693c911b7bef0c70,DiligentGraphics/DiligentCore,"Removed unused CommandContext.cpp/h from Vulkan lib
"
7d8f5979a22038aac622a303be75e72bc3c0ec30,DiligentGraphics/DiligentCore,"Performance optimizations in Vulkan backend
"
7cf190803b1eee946e068d0c92d383d9e17e8e97,DiligentGraphics/DiligentCore,"Removed unnecessary conversion from m_pPipelineState to target implementation type in device context implementations
"
775b164f929aa06ee4723f72e51eaee9c8a16c09,DiligentGraphics/DiligentCore,"Reworked dynamic upload heap to be managed by every context and to release resources safely
"
b2b8bd2222e7764aac90a08fa8fb6b0412087168,MarxMustermann/OfMiceAndMechs,"renamed the container parameter to creator
"
f262ca180ec9dfa4fc76cac67379d674f8cf31c6,MarxMustermann/OfMiceAndMechs,"removed commented out code
"
aed1dbd8d3c975b0315867c0fb76eff028c26331,MineLittlePony/MineLittlePony,"Clean up and get rid of this weird split between textures and positions
"
2532daf4e1e8cf58274c0c845ec9b297cde369c7,chocolate-doom/chocolate-doom,"video: Remove useless command line arguments.

The -grabmouse, -novert and -nonovert command line arguments were added
in the early days of the project, before the setup tool existed. With
hindsight there do not appear to be clear use cases for them and it's
better that these are just configured through the config files.

The -nograbmouse argument is the one exception, which is useful for
debugging purposes as a temporary override. Change this to only be a
temporary override that does not have any permanent effect on the
config option, making it consistent with arguments found in vanilla
Doom (-nomouse, -noblit, -nosound, etc.).

This fixes #212.
"
f4cf30ff61f87032cf15b206616f99efce393298,fluentmigrator/fluentmigrator,Cleanup
24abe7b04f1e69ed458de9169547c84f6999520f,fluentmigrator/fluentmigrator,"Simplified exclusion

"
3c5d67d3dfc577d783ec7e66bf2359330a8f39d3,mattgodbolt/compiler-explorer,"Merge pull request #1086 from mattgodbolt/shortlinkjson

Short link info and generic goldenlayout for resetting layout after goldenlayout js exceptions"
b2fcbc99b3d3e67b2199484f60e0bf0acb5405b6,mattgodbolt/compiler-explorer,"Merge pull request #1144 from mattgodbolt/sourcetools

Add Clang-tidy and LLVM-Mca as tools"
5935a9b176cf905072d70a2213df808441631ccb,raster-foundry/raster-foundry,"Color scheme dropdown qualitative support

Fix categorical breakpoints appearing before selecting categorical color scheme
Save blending mode
Fix random lab initialization errors when reloading page
Adjust logic calling onChange function from dropdown: Only call when the number
of bins is changed on the current scheme, or when the scheme is changed.
Fix webpack lint error
Add Pastel color scheme

Use QUALITATIVE[#xxxxx] instead of CATEGORICAL for renderDef

 * There is a bug on the backend with displaying qualitative color schemes - see
   #2571 for details

Fix setting feature flags in dev
Feature flag blend mode in color scheme selector
"
517c1a9fd9ea10311e47d6f1a6f859b7f51893b2,raster-foundry/raster-foundry,"Rename Packages (#3924)

"
6ad1f87b2034498dfe01aa685a705b988472146e,researchstudio-sat/webofneeds,"refactor state manager to use URIs
"
43f494b6a16a6f2a982aa011e2bed1b3380d3f35,researchstudio-sat/webofneeds,"refactored/removed helper methods
"
4a34f32e2cc6c8818e687e764a8ad6a66f54e4c4,researchstudio-sat/webofneeds,"Extracted persona.
"
cfd735eddb388b302fd1f4b47f099f2b7aa076fa,researchstudio-sat/webofneeds,"renamed variable for the sake of clarity.
"
5c3861589460df122cc399105f1f18ed3c93c5f9,researchstudio-sat/webofneeds,"refactored solr tests
"
d403e1cb63f34f163e5e722a8435450c5dd12aaa,researchstudio-sat/webofneeds,"Rename HighlevelProtocol classes and service endpoints

* rename to AgreementProtocol
* Add WonProtocolException
* add messageconverter for generic java Object<->JSON conversions"
d35805d72a11c8303d74e0caa23e354f7ee905ee,researchstudio-sat/webofneeds,"minor draft improvements related to #189

add last saved timestamp to drafts and display this timestamp as date in postbox's drafts list
replace usage of need type strings such as ""SUPPLY"" etc. with won.WON variables like won.WON.BasicNeedTypeSupply etc., so that the need type icon can be displayed by the same function for both need and draft
"
581c8bdf197f0700400b462262ac0581c7173a47,researchstudio-sat/webofneeds,"Extract fetchOwnedInactiveUris, fetchOwnedInactiveUrisLoading, fetchOwnedActiveUris, fetchTheirUrisLoading, from curriedDispatch -> actionTypes.initalPageLoad, or actionTypes.login -> so we a finer Reducer granularity
"
53b0c445d5f3a77f6c37a67efd4f0757aa211e2d,researchstudio-sat/webofneeds,"rework of angular app, mainly linked data munging
"
47dc3ae8b0a0e7459a77515fca7cfd351c61199c,researchstudio-sat/webofneeds,"Merge pull request #431 from researchstudio-sat/feat-feed

simplified state and jspm update"
8b3e56a981be10ce068bbeebbc1601edf031967c,researchstudio-sat/webofneeds,"Restructured scss imports to make reasoning more straightforward.
"
db59d052883de2872f4a139295099aa6490b33ed,researchstudio-sat/webofneeds,"Improved skills array handling
"
b91781b715272c0248b766d4e92da812a3c203ee,KeldorKatarn/OpenTTD_PatchPack,"(svn r12629) -Codechange: Split VehicleNeedsService() into Vehicle::NeedsServicing() and Vehicle::NeedsAutomaticServicing().
-Fix (r11052): Disable servicing by service-interval if a vehicle has depot orders.
"
4a46a5cddaac140458d8cae738c4556260338e22,KeldorKatarn/OpenTTD_PatchPack,"(svn r13043) -Codechange: remove some duplicate variables from news_d.

"
804b40b48c537e36d64fa8f91e648b76208d947c,KeldorKatarn/OpenTTD_PatchPack,"(svn r17538) -Codechange: Rename STR_CONTENT_FILTER_(OSKTITLE|TOOLTIP) for more general usage.
"
873adde9087568df27dede537319c9ccb7a6e78a,KeldorKatarn/OpenTTD_PatchPack,"(svn r16825) -Codechange: unify dirtying when updating the viewport signs.

"
845c5d0a495e3ea0b05d1d223f9c569992de1e8a,KeldorKatarn/OpenTTD_PatchPack,"(svn r12644) -Codechange: rework the order gui a little to prepare it for some future changes.

"
1854c5efec4b12dab5931a3aad3e360a6bc35a01,KeldorKatarn/OpenTTD_PatchPack,"(svn r17530) -Codechange: use QSortT instead of qsort for sorting EngineIDs

"
f69d280f1419f371af29c239d1943d88993fca92,KeldorKatarn/OpenTTD_PatchPack,"(svn r21521) -Codechange: Unify some cached values that were present in both road vehicles and trains.

"
06caf4ff20f0042f76554ddc3775ec37640ea00e,KeldorKatarn/OpenTTD_PatchPack,"(svn r17619) -Fix: rename STR_TINT_GROUP to STR_TINY_GROUP
"
0e51dab6a6c9256110a1845e9dd7809a4c1b945d,KeldorKatarn/OpenTTD_PatchPack,"(svn r21924) -Codechange: Unify some parts of the articulated vehicle code.
-Cleanup: Avoid conversions to Train and RoadVehicle that are no longer required.

"
c51b81c24781faad386950578a1045c9dd038fc5,KeldorKatarn/OpenTTD_PatchPack,"(svn r12489) -Codechange: split station.h into station_base.h and station_func.h.

"
70241f804beac9dd92699e983ef888260df26319,KeldorKatarn/OpenTTD_PatchPack,"(svn r12081) -Codechange: Rename table/roadveh.h to table/roadveh_movment.h
It is more descriptive name and it will not upset the generate script anymore


"
9bbabadd29c19483e8a75bd8286f053f0c4fcdd9,KeldorKatarn/OpenTTD_PatchPack,"(svn r18842) -Codechange: Rename SPRITE_MODIFIER_USE_OFFSET to SPRITE_MODIFIER_CUSTOM_SPRITE, invert its meaning, and also use it for industry/house layouts instead of IS_CUSTOM_SPRITE().
"
b09f12f7ca8345df3734be7b863319e8e50121bd,KeldorKatarn/OpenTTD_PatchPack,"(svn r19140) -Codechange: Move variables closer to their first use.
"
42ba77bd11b3bac35752fb85307b8b03decbf62b,KeldorKatarn/OpenTTD_PatchPack,"(svn r23248) -Codechange: Rename everything related to the NewGRF 'readme' to 'textfile', so it is more generic.
"
3251e7cb3d0010f778a3d652c85f8aed4da1cd7a,QoboLtd/cakephp-csv-migrations,"Merge pull request #281 from QoboLtd/files-storage-task-3139

Files storage refactoring (task #3139)"
513e17213be908fb762f7a737769255cec305057,QoboLtd/cakephp-csv-migrations,"Merge branch 'master' into field-handlers-refactoring
"
bce2ade722c32286d167089f6f963c50b34b6952,QoboLtd/cakephp-csv-migrations,"Merge pull request #323 from QoboLtd/csv-reorganize-task-3206

CSV Reorganization (task #3206)"
c01e2a5d5abf6ba90cbd6ab42bff28e3ffdea1e1,QoboLtd/cakephp-csv-migrations,"Simplify loading of the Field Handler configuration (task #5061)

Eventually, `setConfig` method will become public and will allow
passing of the particular configuration to use.  For now, it is
protected and falls back on the default configuration class.
"
886de89a5860f8b48e030d81a7fce855d0b76b70,angular/platform-server-builds,"62e7b9d refactor(ivy): code simplification (#22082)
"
78bd551afeceaa4cf49e92ad8bfe258b11d7b754,angular/platform-server-builds,"fae47d8 refactor(forms): move value accessor tests into own spec (#18356)
"
5e18ed353943a4e535e654639d998537459f9079,angular/platform-server-builds,"7e51e52 perf(ivy): improve Uglify configuration in hello world integration test (#21985)
"
0162a281e3b2854e546b50453a41dc99136e6a29,angular/platform-server-builds,"532e536 refactor(router): get guards only one time and simplify guard operator signature (#26239)
"
9fcd2bfa4ddec1e72737b4ed872a7b521e630ae4,angular/platform-server-builds,"639d52f refactor: ensure all 'TODO's are consistent (#23252)
"
251f844f2db52c9ad4e5b03a0ee61c9514f8ab92,angular/platform-server-builds,"85d3b59 refactor(ivy): generate pipe names instead of defs (#23104)
"
133f331496fd66d8641db0745cc6fb5a1585b60c,angular/platform-server-builds,"05ff6c0 fix(compiler): make tsx file aot compatible
"
4c2194c699fe8d545adb74a05e68d310c8865ae1,angular/platform-server-builds,"9ee6702 refactor(ivy): remove short instruction names as they provide no value (#25493)
"
c87e83956a352f7011362016ef4dd84a15e3a44b,angular/platform-server-builds,"263c1a1 refactor: remove unused imports of the deprecated Renderer
"
a76f85535b94873656d3a3e6dac328befdf50719,angular/platform-server-builds,"fdb3f26 refactor(compiler): cleanup (#15960)
"
3caea31a2b374c006f8eb49e39b1f480b79ab858,angular/platform-server-builds,"679608d refactor(compiler-cli): use the transformer based compiler by default
"
6116a3cd3b8c8176fa1b91b2f5b47fdbdb9b09e1,angular/platform-server-builds,"8dff9d8 refactor(ivy): save check methods separately (#21795)
"
20d2bbe0ad3106d2875356ae3aee0b0551205a1b,angular/platform-server-builds,"481c9b3 refactor(compiler): allows synchronous retrieving of metadata (#12908)
"
6da1e994a257c783d03aed2f35e6cf8151def39d,angular/platform-server-builds,"cb65724 refactor(ivy): combine lifecycleStage with LViewFlags (#24263)
"
162ed74416d06ee6c39a543b774976a3e8481b26,angular/platform-server-builds,"3ecc5e5 fix(common): rename HttpXsrfModule to HttpClientXsrfModule
"
f266d86e9cc580238761ceb7fa04a15049542db2,angular/platform-server-builds,"fe8fcc8 refactor(ivy): remove dynamicParent from LNode (#24678)
"
3dc150d60baa6202c6774ea5e212df40c84b8156,angular/platform-server-builds,"e69c1fb refactor(platform-browser): resolver merge conflict for tslint (#13601)
"
16f0a54548a5412859387135c7cb64f1a14d5e90,angular/platform-server-builds,"5d9ddf3 Rename XHR to ResourceLoader
"
c92e3b1c81ac726d522ed51adc7deacd491b62fa,angular/platform-server-builds,"9c40375 refactor(ivy): misc minor fixes in the JIT compiler (#24308)
"
ddb31cd2f7c8c14ec7364b9576aad9d7e417ea48,angular/platform-server-builds,"735dfd3 refactor(ivy): replace LNode.dynamicLContainerNode with flat LContainers (#26407)
"
457f73cd7af3e7ad3485bab1829156599821d261,angular/platform-server-builds,"7ba0cb7 refactor(ivy): remove superfluous Array check (#25894)
"
62d9da010ed48ee8d6b93e260b354f1ab9ef2b77,angular/platform-server-builds,"81734cf refactor(compiler): add tracking comment for self-import detection
"
6fc1cae81b6e9668d4d31d9d9bb9b45b99ad3675,angular/platform-server-builds,"fcadbf4 perf: switch angular to use StaticInjector instead of ReflectiveInjector
"
1e301e829f580d01d5f4b018f9a20e517d5a3d21,angular/platform-server-builds,"6e40ef0 refactor: remove requestAnimationFrame from polyfills and platforms (#10528)
"
60857de59ca89d666d606a3d08208cc344cb00ac,angular/platform-server-builds,"6be9c04 refactor(core): split up interface files in render3 (#21433)
"
924fae030bea679ae2c1640c73f63294e6c8fbdf,cBioPortal/cbioportal-frontend,"rename/reorg folders for clarity

re name folders
"
52c097aef7f60c9c773d81e698f72dc66aba7428,cBioPortal/cbioportal-frontend,"Merge pull request #1007 from adamabeshouse/refac-coexp

Refactor co-expressions tab"
ef580bce08db9b8bf8e2b3dfd4906437b11f8ad0,cBioPortal/cbioportal-frontend,"removed unused imports and components
"
7565888fbf0a38920068081855c29ed5a796ad70,cBioPortal/cbioportal-frontend,"Always allow driver filtering in OQL, and make altered samples depend on driver-filtered alterations

Signed-off-by: Abeshouse, Adam A./Sloan Kettering Institute <e590f7f0a4deed7e88bd2eafd3d45712a7f2f919@mskcc.org>
"
2022a7b574d119e91dc87ecab42fa19b98731d73,cBioPortal/cbioportal-frontend,"Reorganize shared folder, add tests

- Subdivide shared folder, in: components, lib, api.
- Add tests for ObjectManipulation

Signed-off-by: Ino de Bruijn <f7dc43fb05ba7df7e769446605d0d8a8ab1011c4@ino.pm>
"
f543df8cf91ac5a004d8b7533671094a9b3f65ff,cBioPortal/cbioportal-frontend,"Merge remote-tracking branch 'cbio/rc' into study-view-refactoring

Conflicts:
	src/pages/studyView/StudyViewPageStore.ts
"
aa8c595a02afb8ebdb108db2284d0a5c56f5a2ac,ccomeaux/boardgamegeek4android,"Code clean up
"
8194b89c0e435c38ac519e0546cdf1e02e481ffc,ccomeaux/boardgamegeek4android,"Improve UI of trade card
"
81797ca863095db61a047efe0ef0d6d9eaa05134,ccomeaux/boardgamegeek4android,"Make the forum thread list fragmentized too; also remove some unused files.
"
31bd959ce0f06bf82ea7accdbf3568ed274ea67a,denispelli/NoiseDiscrimination,"now got data in a separate folder
"
c554c2c863cc74ffb250555ac2fa1ed4c83088ca,ebraminio/DroidPersianCalendar,"Move some functions out of Utils, more to come
"
4f74534ac438bdee73a82571d72ba2011e52ee67,mmz-srf/srf-frontend-framework,"Merge branch 'SRFCMS-5757-rewrite-buttons'
"
47d9c8abc084dff3be02395c52009e057ff2d019,mmz-srf/srf-frontend-framework,"Merge remote-tracking branch 'origin/SRFCMSAL-537-medium-refactoring-improvements-and-bugfixes' into SRFCMSAL-537-medium-refactoring-improvements-and-bugfixes
"
8e35333eb9a949c991c6f681635c97ea8fc7c63a,smcameron/space-nerds-in-space,"Factor out the gauge code
"
89ce2dd83d6ad6897ee46560ee26e8dd8215dc32,smcameron/space-nerds-in-space,"make lua get_object_location return nil if object not found

instead of having the silly status value.
"
6f181f2aa50807e3cbe8d75f724be96f455d184f,telldus/telldus-live-mobile-v3,"Schedule screens refactoring, new Poster and ScheduleScreen components
"
2baad36e410b23281f80f25734603a5313ae180e,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of https://github.com/wordpress-mobile/WordPress-iOS into issue/4538-refactor-analytics-add-blogid

Conflicts:
	WordPress/Classes/ViewRelated/Blog/BlogDetailsViewController.m
"
365d91c5912356e14bb4515c0357148a4a3232df,wordpress-mobile/WordPress-iOS,"Merge pull request #10414 from wordpress-mobile/issue/10402e-remove-obsolete-completion-handlers

Removed superfluous nil completion handlers"
decb42128cc44da1727af88e7e00fc387040a3ec,wordpress-mobile/WordPress-iOS,"Moves xibs to their class location. Removes obsolete xibs.
"
05b42a6e64a39a5ecbc9ddb2cc2a1e2bcc778144,wordpress-mobile/WordPress-iOS,"Start of major refactoring of Reader's detail view
"
99bc02b51492b5121db3d6fe239e8494d164fd39,wordpress-mobile/WordPress-iOS,"Add theme quick start tour and refactor nav watcher
"
5f12bb37278702b9a51fb42f287313892a79b96f,wordpress-mobile/WordPress-iOS,"Update Note with renames and API category

- Split out the API usage into a category for organization

- Rename confusing ‘sync’ method to `mergeNewNotes:` like other models
"
3faf353c84478560b22e6f5752b322bff2e5823a,wordpress-mobile/WordPress-iOS,"Fix sourceTag and cancel button code in refactored VCs
"
1be63e726ec1319839f2f564dc8c670008ff3935,wordpress-mobile/WordPress-iOS,adds the better image moving patch from r1347 to trunk
1b5e8949e2cf78813aacb94ace9d749cb0cf64cc,wordpress-mobile/WordPress-iOS,"Plans: Part 1 of refactoring the view layer.

Old store/purchasing related code is removed.
Controllers and views are updated to use the new models.
UI is mostly functional but not pretty.
"
3b92b5e90ce18f1c6617019337c71fd957af318c,wordpress-mobile/WordPress-iOS,"Refactor link actions to use new UI flow.
"
11c595bab162dd1a5725af0dc9c2b1dd09f4d038,wordpress-mobile/WordPress-iOS,"Renames WordPressSite > WordPressEndpoint
"
29c450287f1fb2ac7d549bca57c287bdc9f0cfa8,wordpress-mobile/WordPress-iOS,"Media: move thumbnail handling into it's own service class.

Removes the briefly added ThumbnailDownloader class and consolidates
the actual thumbnail handling with the exporter into a single class.
"
2a408993bd9536352b301472850428336fb9d364,wordpress-mobile/WordPress-iOS,"Improve label and hint for header button
"
52e7ea79a5578225975f8ccc5aa1bd512cc7ac93,wordpress-mobile/WordPress-iOS,"Clean up one-off posts with no topic, like those loaded via URL scheme

Minor code style tweak
Records error that was previously ignored.
"
6cc5d7e85c5bcb2dbaef8201f39c34da3795a05a,wordpress-mobile/WordPress-iOS,"Cleanup & fetch batch size on results controllers
"
cf94693f0c23f661055474f61a614dbb35afc68c,wordpress-mobile/WordPress-iOS,"Removed unused `likeComment` api method.

Set all actions to not require authentication as the Reply action will require unlock anyways.
"
769a9821cd171189c7b445762aa00c6dcc577501,wordpress-mobile/WordPress-iOS,Major code cleanup. Ran uncrustify over the code. Removed unused classes and NIBs.
72c35ba9fa78b85204f44f0c0641a2e07c6a46f8,wordpress-mobile/WordPress-iOS,"Constants Cleanup
"
0e0212e78c400d8e1a773a06b1e4c6806098289d,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into feature/sign-in-refactor
"
e9af11283eb897a00b8ae61ecef7a64a8172fc77,wordpress-mobile/WordPress-iOS,"Extract launching of new site creation flow to an extension of BlogListViewController, to make remove all objc from the actual launcher
"
4031f180a665b0b4bf36f22b0aec245c2b41f9c4,wordpress-mobile/WordPress-iOS,"Rename mediaUploading to mediaInProgress
"
2ee1234a450c6fcdf1c111549a29f9d562389705,wordpress-mobile/WordPress-iOS,"Use NSObjects instead of NSDictionaries to represent remote REST objects.

Gets ride of the NSDictionaries used to represent ReaderTopic and ReaderPost objects to the local services.
Instead uses plain objective c objects with properties.

Also cleans up a one sided relationship between ReaderPosts and Accounts that was missed in an earlier commit.
"
66166816ba552aec5bea5f787cbb5ddf8885ab49,wordpress-mobile/WordPress-iOS,"Move PlansFeaturesRemote to a separate file
"
ada45736299252eedee2eccf59b31a1e25b45e7e,wordpress-mobile/WordPress-iOS,"Updates MenuItem source methods for searching posts from refactored PostService.
"
812251171682315a0adbfeb58390f0371170a412,wordpress-mobile/WordPress-iOS,"Add method to encapsulate check for existence of media on remote site.
"
c20fb9545be767da0bf1997e5c288fb291cf1cda,wordpress-mobile/WordPress-iOS,"Improve the email NUX screen’s alt button display code
"
82a21d90448ad283c582333ac2d21285d60f0246,wordpress-mobile/WordPress-iOS,"Moving post geolocation files to Classes/ViewRelated/Post/Geolocation.
"
3afe1dedf46567fb5db886556bedcd1b2ce8c161,wordpress-mobile/WordPress-iOS,"Expose wordPressUserAgent and use it in non-UIWebView HTTP clients instead of currentUserAgent in order to be explicit about which particular UA is needed
"
0d33f9ab18bb164fde04a4c0a2e9f008bbec6b0b,wordpress-mobile/WordPress-iOS,"Merge pull request #4589 from wordpress-mobile/feature/immutable-me

Rewrite MeViewController using ImmuTable"
d6fbb74afab4cb1d053cac0975068d1756a5760c,wordpress-mobile/WordPress-iOS,"Optimize images instead of multiple resizing options

Unless the user selected 'Original' for image processing, scale images down to
2048x2048. I chose 2048 since it'll allow for full width retina images
on most themes. Those with the odd giant image themes can always switch
to full size images.

Simplified media processing:

- Avoid unnecessary CGImage <-> UIImage conversions
- WPMediaMetadataExtractor can be replaced by a much simpler
  `representation.metadata`
- Removed WPMediaSizing
- Deprecated media.orientation
- Moved media creation to a new MediaService

Note that iOS seems to be ignoring CompressionQuality, although I don't
know why yet

See #1685
"
5e6db49a50ba9d511d5ecf1f88548464fecaf856,wordpress-mobile/WordPress-iOS,"Merge pull request #1216 from ric2z/issue/1193-activity-logs-text

Simplified text for Activity Logs"
06ed0f74cce038bb4b905d525a7676b5cc1fe15a,wordpress-mobile/WordPress-iOS,"Remove old LoginViewController and rename LoginNewViewController to take its place
"
a1f9b7932fe10d1b533c19c7c3bb8e4e4c8ce572,wordpress-mobile/WordPress-iOS,"Rework the quick start core data model
"
351d919a8651ce032b59016edab3351ccfac2d96,wordpress-mobile/WordPress-iOS,"Renames UIDevice category
"
aabc11a144a3832a2b15f61fc4235343e919a25c,wordpress-mobile/WordPress-iOS,"Merge branch 'issue/4069-wpcom-api-cleanup' into issue/4069-notifications-manager-revamp
"
fd2673b330e3263471f2f1afd5c61cc0333c362a,wordpress-mobile/WordPress-iOS,"Refactor post post into its own storyboard
"
be479cf36f57a2dfbc567b72f6fa8f8b1f3f8608,wordpress-mobile/WordPress-iOS,"Merge branch 'develop' of github.com:wordpress-mobile/WordPress-iOS into issue/7320-7321-migrate-PostServiceRemote-to-wpkit

* 'develop' of github.com:wordpress-mobile/WordPress-iOS:
  Revert keyboard focus change
  Remove whitespace
  Remove needless `self`
  Removes commented code.
  Login: Wires up 'connect another' button on epilogue screen.
  Add ability to use safari saved passwords to login
"
dc88fcc64dc5bf08033d96b6c7aeab105e048875,wordpress-mobile/WordPress-iOS,"Improves scrolling performance. Improves autolayout reliability.
"
b97e30ae8977e81345b4ed7b8e248724315f0a82,wordpress-mobile/WordPress-iOS,"Renaming methods.
"
5efdee425dc5188a1ba875279ecd06f9318096f8,wordpress-mobile/WordPress-iOS,"Media: renaming MediaLibrary as MediaExpotService.
"
6677507e9effa28aca81eb37f30c3389511a4a24,wso2/carbon-identity-framework,"Merge pull request #1111 from mefarazath/identity-application-authentication-tests

Code improvements and unit tests for DefaultRequestPathBasedSequenceHandler"
e633ae0b99cd11ba73fb39e05060869480cfc279,MethodicalAcceleratorDesign/MAD,"use miserr instead of on the fly tricks
"
fb2e5d531576a0441f97d9642c0cef0a0ba78287,MethodicalAcceleratorDesign/MAD,"rename + add test
"
fc0679fec3068c6f09d2c41ab5bb8c53d78f4955,MethodicalAcceleratorDesign/MAD,"cleanup, add high level functions
"
f02d9c42882667171b3fff794f559075eb239239,MethodicalAcceleratorDesign/MAD,"use datablock instead od stdin for gnuplot data
"
90ae8d0ac07731f8a19847e3e0e9f32e42ec33fe,MethodicalAcceleratorDesign/MAD,"improved setkeys, added setidxs, clearkeys, clearidxs
"
9737ad812ad4debf658b3725801864d7efff962b,TechEmpower/FrameworkBenchmarks,"Sf3 improvments (#3000)

* Update Symfony to 3.3 (based on standard edition)

* Fix config

Create var folder

Update .gitignore

Fix credentials & console location

Add missing bin/ folder & fix hhvm setup

* Code cleanup & small improvements

* Code cleanup & small improvements

* CS Fix

* CS Fix

* Revert changes for HHVM support

* Code cleanup & small improvements

* CS Fix

* Revert changes for HHVM support

* rename symfony2 to symfony

* Change path symfony2 to symfony

* Remove fortune-raw tests (not usefull as twig is already compiled to php)

* Rename symfony2 to symfony

* Remove spaceless tag in base template

* Upgrade to Symfony 3.4.0

* Revert configuration

* Few more fixes

* Remove HHVM
"
5cac51bdbe165ecb5679de83d7572356ac8e0836,TechEmpower/FrameworkBenchmarks,"Merge pull request #969 from hamiltont/refactor_gather_tests

Refactor gather tests into static call"
67864f71f606113984d8b27a2305a0bd04e4136f,TechEmpower/FrameworkBenchmarks,"Merge branch 'master' into cleanup-metadata

Conflicts:
	frameworks/Java/rapidoid/benchmark_config.json
	frameworks/Java/sabina/benchmark_config.json
	frameworks/Python/web2py/benchmark_config.json
"
31abcf0864aec5fd5513e9bbb62f29512e717edb,ZeroK-RTS/Zero-K-Infrastructure,"DEPLOY_SITE
move nubs on split not pros (so that spectators enjoy higher skill game)
improved behavior for laggy connections 

svn path=/trunk/other/; revision=6654
"
32afb2fdbed6f87b7b4a70963c18cc1b3dae2417,ZeroK-RTS/Zero-K-Infrastructure,"downloader tab loses ability to download arbitrary map/mod (will be handled by map browser)
(Fixes issue 25)

tab renamed to rapid - enter ""rapid"" to address bar to access it

svn path=/trunk/other/; revision=597
"
7a01c2b522d32888bc0efc6851ed2cd5af3e0ed3,ZeroK-RTS/Zero-K-Infrastructure,"wip rewriting springieservice
"
215638867a369c0b4c39c4588a3da748f6e49292,ZeroK-RTS/Zero-K-Infrastructure,"refactor chobbyla download code for reuse
"
364ba33e6f78aa3aa6e7f5908f0246c069a49cb7,ZeroK-RTS/Zero-K-Infrastructure," * springie/tasclient make local binding IP selectable 
 * use [engineXXXX] prefix for picking engine  instead of just [xxxxx]
 * lobby 2.8.0.4 release

svn path=/trunk/other/; revision=1060
"
ace9fac4cf214665a2d101bdc14960e9c6f9ea40,ZeroK-RTS/Zero-K-Infrastructure,"TOPIC: Website Clan CustomClanPage
Background image now applies to the ""wrapper"" div, so as not to obliterate the fade image on the html body

TOPIC: Website Tooltips nicetitle
Completely rewrote tooltips to use jquery.qtip




svn path=/trunk/other/; revision=2688
"
13b551110f2e9e0a1857fd1b02f464fd787a8a6e,ZeroK-RTS/Zero-K-Infrastructure,"refactor to separate EF refernce from shared (Lobby) -> not needed there
"
df7a1b3e62a4d38a4a345479288a25dd8c0ed4f2,ZeroK-RTS/Zero-K-Infrastructure,"refactor of steam stuf - split to webapi and client
"
938603615f47807d0be6014da4806f6c51087835,ZeroK-RTS/Zero-K-Infrastructure,"move mission score upload out from spring class
"
4b888a74225db2819576379983996552b5f5803e,ZeroK-RTS/Zero-K-Infrastructure,"more battle events and cleanups
"
c87dc8ff3cc1f1acf88386f61c714c48d68fcf62,africanmathsinitiative/R-Instat,"updated convert method to allow override default behaviour for factors
"
efdf2657cefacb238c6dcebfb4f4dc7f9c1513f4,africanmathsinitiative/R-Instat,"dlg, sdg Windrose tidy up
"
e5743a2c3676724b30139a07655bdf573f95f14d,africanmathsinitiative/R-Instat,"General tidy up - position numbers, layout, etc
"
b9dc2d482a2f4652cc051626ccce05f5a4b5e8f6,africanmathsinitiative/R-Instat,"split text dialog with new implementation and tidying
"
fbd04018a015336b26243d26eb412d0538312df6,africanmathsinitiative/R-Instat,"cleaning up master
"
ffdbcc381c6fd7fba619ca030d103e5240f5918f,africanmathsinitiative/R-Instat,"Complete rewrite of the Polycarp's repo and the Main repo.
"
c02d7c4a0165f00d2f47096235595f9cbcc3abda,africanmathsinitiative/R-Instat,"Fixed replace values in data method and implement it in the replace dialogue
"
19e27ca7a6be7af578ff4e674325c9d33aebf9c3,angular/platform-browser-builds,"931e603 refactor(ivy): revert LNode.data into LViewData[HOST] (#26424)
"
848c54620247c9f763a76eb4ea7e69b1955f4d59,angular/platform-browser-builds,"90b0713 refactor(compiler): don’t write summaries for jit by default
"
dbbc143f5b697d3f1c6677f202b2ff940f82e46d,angular/platform-browser-builds,"609e6b9 refactor(ivy): move child from LNode to TNode (#24113)
"
6c8cb8864b47e5c3f07f00794f43c847eaef37b9,angular/platform-browser-builds,"7295a5e refactor: format and lint code
"
9e8d6cf72a1cf0c207d665145ff98a2c6ca1a029,angular/platform-browser-builds,"0a3f817 refactor(platform-browser): remove type assertion on console.profileEnd (#26303)
"
c753c1d427b09ce8b650616422cdd0b8a272a4a4,angular/platform-browser-builds,"2eca6e6 test(aio): add tests for renderAttributes helper
"
26e67515b99a974131564b12707b5255eaacc7b0,angular/platform-browser-builds,"ac316be build: remove unnecessary stability check (#23176)
"
2bd41f07048a95c5126d48fea73986a3943f9b66,angular/platform-browser-builds,"0e311e3 build(aio): improve accuracy of code auto-linking (#22494)
"
322f5f5996fc19e0bf390a90655bfe0636635a18,angular/platform-browser-builds,"4e26478 refactor(ivy): do not mention LViewData in public documentation (#25292)
"
d8c37c2e18c6b1d0cf36555448d257ff4b647fa5,angular/platform-browser-builds,"ddb792d build: remove unnecessary `internal-angular` karma reporter (#24803)
"
14e5239fd5512d14e2e3b7bbaea56a4323e98617,angular/platform-browser-builds,"1bd04e9 refactor: remove unused imports
"
c57000fa6c58289b5482a5eb88bc43416a3ecc24,edwardspec/mediawiki-moderation,"Revert ""(performance) Cache the results of isModerationBlocked() check""

This cache doesn't provide any noticeable benefit, because the check
is only called when saving the edit (which alone requires some queries
to DB_MASTER), and even if not cached,
it consists of one superfast well-indexed SQL query.

At the same time, this cache makes the code difficult to test,
and third-party command line scripts may have problems invalidating it
when $wgMainCacheType is CACHE_ACCEL or something.

This reverts commit 0c29cc3e36a3fc5352abcc9c2aa6c0aa9f6be75d.
"
05a54940552311492a4983bfcf6bfcc52024cb51,metasfresh/metasfresh-webui-api,"MAJOR: refactor JSONDocument

introduced: JSONDocumentBase and JSONDocumentView

https://github.com/metasfresh/metasfresh-webui-api/issues/269
"
bb08d95fe7da68688c3a0dd76e1525ddc2d0b05a,metasfresh/metasfresh-webui-api,"refactor

https://github.com/metasfresh/metasfresh/issues/4033
"
bd763f249ec368b8467fbe8ab5a92c889f105d1d,metasfresh/metasfresh-webui-api,"refactor; fixing terminology

https://github.com/metasfresh/metasfresh/issues/4033
"
8039aadcaf959632ed30ac8efcaa8ca443d89990,mpigsley/sectors-without-number,"Revert ""Code split the overview""

This reverts commit 2cbcef7c5be6e761f7fcc5ba14db7f85d3e8f6d2.
"
f626c3b9716d68203826aef975fb556db0512d6c,mpigsley/sectors-without-number,"Merge pull request #23 from mpigsley/system-move

Move Systems"
fe91ac763fe411e06c5cd713162bc64e27c5308c,powerblo/End-of-a-New-Beginning,"Taiwan State Update

Split Taiwan into 11 states
added 8 taiwanese tribal states
a quick fix for the Ottoman puppet types
"
6031a97b19d4f9c2cfca7ad07b6d951e4d1db827,powerblo/End-of-a-New-Beginning,"MASSIVE Sardinia Rework More to come soon

reworked up to the war with Austria and redid the focus tree
"
7873fe1e5265b6508b61daabad9c801f51c47c3b,silverstripe/silverstripe-admin,"Fix FormBuilderLoader calls initialize on redux-form after setting a new schema (#180)

Enhancement appleFormMiddleware now execute middleware for all forms with a matching name
Enhancement code clean up for schemaReducer"
ead6603f58fe168a33966be7c2c079a185a68461,silverstripe/silverstripe-admin,"Upgrade to webpack2 and cleanup config file (#82)

* Enhancement Upgrade to webpack2 and cleanup config file
Enhancement published webpack-config to npm as ""@silverstripe/webpack-config""
Enhancement changing babel to use native imports instead of commonjs in webpack build only

* remove webpack folder, ugrade to SS webpack package

* Add webpack to bin

* Version bump to new webpack-config
"
a7948e24db4e362d8b7749643afd77caae5c9c13,Azure/azure-quickstart-templates,"Merge pull request #704 from trentmswanson/esupdates

Refactoring and added support for premium storage"
95eb2b742b69ab39b560a035e0248022d3c97d5c,Azure/azure-quickstart-templates,"Clean up Spinnaker simple template

1. Use ssh key for simple template
2. Add comments for ssh config
3. Use azure-dev-ops repo for simple template
"
31e415ec07ff5c280d6df74b44c0aa44d1ba12bc,BjerknesClimateDataCentre/QuinCe,"Refactor file sets
"
0d5b0429525473fab0fe3488ea6b9a8e1bbac5b9,CZagrobelny/new_sanctuary_asylum,"refactor admin viewing upcoming and past activities
"
5d8702bdefbf0e836231484209db817a18637fd8,angular/schematics-update-builds,"5c5d392 refactor(@schematics/angular): `skipPackageJson` is optional for application schematic
"
f0f1364c77e983f1149a4d54ae468eb5de6f02b8,angular/schematics-update-builds,"465414a fix(@schematics/angular): remove unused karma config option
"
bb41ab608505c500a7af6261920c4a088111cedd,neos/neos-development-collection,"[FEATURE] Localized node routing and consistent use of context path

This change adds a LocalizedFrontendNodeRoutePartHandler that can be
configured for sites using localization. A new strategy for getting
the locales dimension values from a URI segement is added with
ContentDimensionPresetSourceInterface and a Settings based
implementation.

For consistent use of content dimensions in nodes, several parts of Neos
are updated to use the context path consistently.

Controllers and services in Neos are updated to use the new methods
in the ContextInterface instead of directly accessing the node data
through NodeDataRepository.

How to use
==========

In order to use the localized routing, the following needs to be inserted
to Objects.yaml::

    TYPO3\Neos\Routing\FrontendNodeRoutePartHandlerInterface:
      className: TYPO3\Neos\Routing\LocalizedFrontendNodeRoutePartHandler

Furthermore, a ""locale"" dimension must be configured, e.g. by using the
following Settings.yaml::

    TYPO3:
      TYPO3CR:
        contentDimensions:
          locales:
            default: mul_ZZ

After that, the site must be re-imported from XML.

This must be merged together with the corresponding changes in the TYPO3CR
package.

Change-Id: I497987d1926724cb91143b1009598abddb191f85
Releases: 1.1, master
Reviewed-on: https://review.typo3.org/27490
Reviewed-by: Christopher Hlubek
Tested-by: Christopher Hlubek
Reviewed-by: Sebastian Kurfuerst
Reviewed-by: Christian Mueller
Tested-by: Sebastian Kurfuerst
Original-Commit-Hash: e5f9ead20ba63294821eae05b1efacd2b6441b45
"
5e9f23ef85765e14f8c080e7a4b2983fbc9950a9,rubymonsters/diversity_ticketing,"cleans up typo in locales name
"
acc83fe3f5bea44af74f2859dda8992233e07b85,BoldGrid/boldgrid-theme-framework,"don\'t rename var
"
91cbec52d817b234f36f4dd07448aefc3fc34f18,EducationalTestingService/rsmtool,"Merge branch 'rsmtool-refactor' into parametrize-tests

# Conflicts:
#	tests/test_experiment_rsmcompare.py
#	tests/update_test_files.py
"
c39f4902e67c7c34bc1ae8287f7242b7cdbb7be5,OpenCollective/opencollective-api,"optimize query to fetch logged in user
"
1c5b75a256fa6865fbc768c9fb7b50b5bc4a6e78,RailsEventStore/rails_event_store,"Rename. Actually here rename all usages.
"
9dcf028e6b0be52e42d4993d651f0838d35c5994,angular/platform-webworker-builds,"ce40e85 refactor(common): update CLDR data to v33.0.0 (#23265) PR Close #23265
"
4fafa98d81bf7ced17119bbd897aa420465913ea,angular/platform-webworker-builds,"2e14130 feat(aio): refactor DocViewer w/ services component builder (#14294)
"
ba5b606d2092430ee145f5e226c741ed276191c2,angular/platform-webworker-builds,"6bae73c refactor(common): replace `Object.assign` with the spread operator (#17982)
"
9c3a0a22727dce89b42c9f15e767229c40ebbdc0,angular/platform-webworker-builds,"505ae75 docs(aio): update deprecated Http reference to HttpClientModule, remove Http reference because another context is used (#21984)
"
06fedf21b70b5fc10a378242382b1a67856df2fa,angular/platform-webworker-builds,"5c8340a refactor(ivy): misc refactoring (#23154)
"
ed2fae40fb0a2e51477720077d20633718d9c526,angular/platform-webworker-builds,"639d52f refactor: ensure all 'TODO's are consistent (#23252)
"
f33037b219ded176553e5c10c8c1455c03654be9,angular/platform-webworker-builds,"cb65724 refactor(ivy): combine lifecycleStage with LViewFlags (#24263)
"
b6b9ef34c5c2d6381839875c2776db6aed329b56,angular/platform-webworker-builds,"5b96fb9 build(aio): rename `src/content` to `src/generated`
"
7ca1c40daac7545b56756597082dda38872e49cb,angular/platform-webworker-builds,"f795f64 refactor(aio): remove redundant styles
"
83928801d06a666af0f3fe069af953ba265609d4,angular/platform-webworker-builds,"d1177c7 refactor: update CLDR data for closure locale & use a const for undefined (#23372) PR Close #23372
"
e5ade84a306251379726c35f9566710b9bab1e86,angular/platform-webworker-builds,"2c0c86e fix(compiler): improve the error when template is not a string
"
c38602746fcfaa575c3a2097f424fdec31e8620f,angular/platform-webworker-builds,"85d3b59 refactor(ivy): generate pipe names instead of defs (#23104)
"
dd587bc3f755776a230da2ec5c242edffc1e08a1,angular/platform-webworker-builds,"59d2b4c refactor(compiler): further minor fixes
"
bf0847c0c13f34fdd37b5d02268f6e361ecb840b,angular/platform-webworker-builds,"3ecc5e5 fix(common): rename HttpXsrfModule to HttpClientXsrfModule
"
712cc2bee26a2a7ba3352d92013624337c92e91c,angular/platform-webworker-builds,"55dfa1b test(forms): refactor integration tests to improve speed (#13500)
"
bbba279dfd29468821621e8913db9fe72ecee21d,angular/platform-webworker-builds,"5d4f543 refactor(router): don't run the change detection every time an outlet is activated
"
cbf7e333d8887a21b740cc5a45529cc97ef0fd93,angular/platform-webworker-builds,"7e3f8f7 refactor(ivy): replace LView.child with TView.childIndex lookup (#24211)
"
4b18c46f088de2de6178476435fb49769621f86c,dmtrKovalenko/material-ui-pickers,"Reimplement range countings for moment manually, remove moment-range dep
"
2c9ac1fdb7a7d423f0b1778b6da5ca756974018c,smithtimmytim/brightlycolored.org,"Fixing date and removing some unnecessary CSS.
"
9473cf6aa31661cfcbdc43154e9c48dc604d10ba,End-to-end-provenance/RDataTracker,"Refactoring

Moving functions out of RDataTracker.R"
49b5992a55a35bc0a813f8a79bffd213aecb0008,End-to-end-provenance/RDataTracker,"Improved console-test-1 test case, as well as added more detailed documentation. Cran-check now passes successfully
"
58a674b0b67e2c5748e8ecf2643327a2261b3e17,MassDistributionMedia/rc-ca-blinds,"refactor: WIP first pass at updateMediaMetadata function, commented out the media.before.update hook
"
eb551812f5328da96578b1b739bfaedf7fda4bc7,MassDistributionMedia/rc-ca-blinds,"updated bunyan-logger version and lint cleanup
"
d4b3fb0d15b3e2a41db1eb7e244f2c8fdb6c3350,MassDistributionMedia/rc-ca-blinds,"server/emailTemplates -> server/templates
"
25c7b6367653c77b20934aee830df24dc43c143c,MassDistributionMedia/rc-ca-blinds,"initial localization of pricing

Closes https://github.com/ongoworks/reaction/issues/113
Reference https://github.com/ongoworks/reaction/issues/176
Removes ConfigData collection, replaces with Shops collection
"
3f25ba0b8710df54b2bc81e6f895c688d1646492,MassDistributionMedia/rc-ca-blinds,"refactor app/fixture load, mail settings

- load mail settings if they exist, otherwise let meteor dump the mail
to logs for testing.
- move startup to app.coffee, reactionCore.init()
- add logging.coffee for bunyan setup
- if VELOCITY_CI = 1 use process.std.out instead of bunyan-format
"
4eb82fdf4433567ee98663e106ee9e9e6beff7b6,MassDistributionMedia/rc-ca-blinds,"Refactored Image Gallery (removed multiple drop panes) - working.
"
d72ff6ac1a761673d7aaacd9d89bdfb7cb288cc4,MassDistributionMedia/rc-ca-blinds,"refactor schema and collection

refactor schema, collections for cleaner organization
some cleanup of legacy code
"
4cd959f2df7180ec8fdb254361db451b4ef52a0b,MassDistributionMedia/rc-ca-blinds,"refactor: reated new addressbookcontainer and moved props and ruder methods to the continer and out of the blaze template, AddressBook now working on profile page, clean up still needed
"
8a1870ab91610feaef1708598ef04bca36a70fff,MassDistributionMedia/rc-ca-blinds,"Merge branch 'release-1.11.0' into schemas-to-npm

* release-1.11.0:
  refactor(GraphQL): move Group resolvers to account section
  tests(GraphQL): fix tests
  refactor(GraphQL): transform types using resolvers
  update Hooks imports
  migrate Hooks API to an npm package

# Conflicts:
#	package.json
"
6fd010c16f48f5fe7af3097de6f759c6721d92da,MassDistributionMedia/rc-ca-blinds,"refactor: WIP removing the media.before.insert hook
"
57d8ffe9534d613330966223b7587aee5c022d8b,MassDistributionMedia/rc-ca-blinds,"Merge branch 'release-1.12.0' into docs-aldeed-jsdoc-cleanup
"
ba25ce4eb96bfa6dafd72d3fb98d5a490dec964b,MassDistributionMedia/rc-ca-blinds,"refactor cart merge to use login events
"
46c1245259066780fadd6049806b3ef922d5b0b1,angular/angular-devkit-core-builds,"4ba67ee refactor: remove usage of Buffer constructor
"
bbab895dd8d07cee22e6577e9db393a536873aef,betaflight/betaflight-configurator,"Merge branch 'development' into serial-cleanup
"
f67a82ba7cb1703d17ef53a4a6290666b668a71c,betaflight/betaflight-configurator,"Merge pull request #29 from cleanflight/skaman82-GUI-rework

gui rework cleanups #2"
13d17e15283ec6b79badbd7173cdb8651e8cdcff,betaflight/betaflight-configurator,"stm32/stm32usbdfu parameters rework, removing UI options dependency
"
7dcd39986f51043c2ec39316863c1d9d39bf6b4a,openfoodfoundation/openfoodnetwork,"Refactoring StandingOrder validations and errors

Moving validations to StandingOrderForm
"
55f4415c0dbb665dc2d12cb97f76f4dbcfc11208,openfoodfoundation/openfoodnetwork,"Merge branch 'master' into cleanup

Conflicts:
	app/assets/javascripts/darkswarm/services/hubs.js.coffee
	app/views/home/_hubs.html.haml
	app/views/producers/_filters.html.haml
	app/views/producers/index.html.haml
"
a6ea0d79261a975279dab5ab71459ece5de45190,Brightspace/brightspace-integration,"Merge pull request #658 from Brightspace/native-performance

using native performance APIs instead of polyfill"
eb5e5b8cace05952b4df339e4dc58c25046a3b7f,CompassionCH/compassion-switzerland,"CO-2016 be more flexible with lang lookup (fr => fr_CH)
"
2f1f6202dd62e5cd839bf47cbdeaea3bab2868d3,aspnetboilerplate/aspnetboilerplate,"Replaced first code project link with the local one.
"
0ccb735822dba1ec061eee302795c21a17f48047,aspnetboilerplate/aspnetboilerplate,"Refactored
"
3c6a33c75529eb178064ddc2faaab6d84bd2e574,cynicaloptimist/improved-initiative,"Refactor settings visibility
"
4412f9c26306db652cbc84cfd3798aaecb42fee2,cleanflight/cleanflight-configurator,"default and initial setup renamed to landing and setup, including object adjustments
"
7703ef4632ba7a1cb9f55fb0e175b8ae5ff6e1e0,cleanflight/cleanflight-configurator,"Merge pull request #191 from KiteAnton/msp_cleanup_rebased

Some cleanup of MSP code"
ce9791f148b72b1aafee2d7b1638481f03787378,cleanflight/cleanflight-configurator,"Cleaned up show / hide PID code a bunch.
"
9aca72ae9424eea83f2ac182c47d7157d6c93b68,reasonml-editor/reasonml-idea-plugin,"grammar improvement (if/else)
"
7484ea888dbcb37db1005f95563dfb13e2ee90d7,reasonml-editor/reasonml-idea-plugin,"Refactoring bsb code
"
1547809832459c4ad171a680b402d70bb6a03d29,reasonml-editor/reasonml-idea-plugin,"Improve OCaml parser
"
da4587aa3feba867bcf5ff3d2d342129e7817aef,unicef/etools-partnership-management,"Refactor to use upload-started event
"
da6b79e55aba5a4ccd59d8a27a20ea4889553474,unicef/etools-partnership-management,"fix(hide-reports-pages):
- renamed flag
"
004a208bb93bb3535d2d6cfd726a4f463a51e4eb,unicef/etools-partnership-management,"Merge pull request #153 from unicef/feature--interventions-refactoring

interventions refactoring"
8bad1849341391853ae6b6d11bca2105c0bd54ec,unicef/etools-partnership-management,"Remove duplicate code from merge
"
b2f4c00a33d57f058a90837e1f64006e0eed95c0,wordpress-mobile/AztecEditor-Android,"renamed method
"
3e3825dce789cc49d7ffb05252c8a61e44ebafea,wordpress-mobile/AztecEditor-Android,"Name refactoring
"
38dd43b24c1d02d4acd51c6fa2f965885ec2b67c,sparkdesignsystem/spark-design-system,"moving polyfills out to another file, removing extraneous entries,
updated imports to use exports instead
"
f79225919caa071d852d681ddbb4c3671f41ab2e,sparkdesignsystem/spark-design-system,"Publish 12-19 (#953)

* change date picker description being for past date to future date

* change date, datepicker use case info per direction

* moving footer to default instead of blank, so it wont show on test pages

* setting up required inputs tests

* starting with phone

* edit per direction to be more explicit

* updated select and required binding / functions

* updated required situation for select / radio / checkbox

* tests passing

* fixed input coverage

* fixed masthead coverage

* moving polyfills out to another file, removing extraneous entries,
updated imports to use exports instead

* adding promise polyfill

* tests fixed

* added documentation to the inputs page

* started adding base

* added the rest

* feat(package): bump dom-slider

* updating for dom-slider

* add new optional var and modifier table to spark components

* add div surrounding heading for html code switcher

* add alerts var and modifier tables

* update settings var for alerts

* add var and modifier table to buttons

* add var table to cards

* add var/modifier tables to dictionary

* add vars to dividers

* add var/class table to dropdown

* add var/class table to highlight board

* add var/class table to icons

* add vars/class table to links

* add vars/class to lists

* add var/class table to masthead and remove unused var

* add vars/class table to modals

* add var/class table to pagination

* add vars/class table to promo, remove unused var

* add vars/class table to table component

* refactor tabbed nav to add more vars

* add vars/class table to Tabs

* add var table to toggle

* add vars to inputs, remove unused settings vars

* add vars/class table to inputs

* CR updates

* table doc updates

* input doc updates

* update color variables

* updating utilities classes

* removing gray tints

* new settings variables

* updating colors documentation

* adding dark green for button hover

* typo

* adding light gray for disabled buttons

* typo again

* adding page title

* added page title to test page

* typo

* add pr template

* update about

* update directions

* updating color docs

* updating color documentation for clarity

* updating color docs for clarity

* updated with new color values (#952)

* updated with new color values

* moved dark vars

* Color fix (#954)

* updated with new color values

* moved dark vars

* updated color values
"
979e4aa72d143c822f13d507158d283a03f2e5b4,sparkdesignsystem/spark-design-system,"combined code from forms and inputs, put it all under _inputs.scss,
updated the doc section to be called inputs
"
7dc1b94f53ed23f22c8ea30edd5dad3f24d77aa8,sparkdesignsystem/spark-design-system,"removed some unnecessary direct child selectors, added select and ability for input container to have icons
"
316fbcef7efb1772bac359afcb5e0cf03a55d5a3,AdaptiveConsulting/ReactiveTraderCloud,"Improve config to allow us to run under Kubernetes (prod mode) while still allowing all the services on localhost (dev mode) if needed
"
f3f95b7dc46908eb025b141b73fbbc26548c405d,AdaptiveConsulting/ReactiveTraderCloud,"#105 fixed pnl toggle, small styling cleanup changes
"
893aaa9220cc80f367e62dd106be9c8ef1f27ee4,AdaptiveConsulting/ReactiveTraderCloud,"Merge pull request #101 from AdaptiveConsulting/serviceLayerCleanup

Minor cleanup of service layer code based on feedback"
54e492baaa2268a47cff61e9a2cdb5d533cf468e,ministryofjustice/opg-digi-deps-client,"Merge pull request #891 from ministryofjustice/DDPB-839-ODR-NDR-rename

Ddpb 839 odr ndr rename"
57e57a3def125c81e9feab3c40dcc014c86d2a55,ministryofjustice/opg-digi-deps-client,"Merge pull request #107 from ministryofjustice/controller-namespaces-refactor

Controller namespaces refactor"
09628814718aa49353a18262ae4e4a5a7935742b,ministryofjustice/opg-digi-deps-client,"Added the contacts section to the report, refactored the markup to create a new class for report sections and updated the contacts component to allow it to conditionally include a title and edit links.
"
dde5cf0e2b5ec79563b753eb581fa58ebe4a9954,ministryofjustice/opg-digi-deps-client,"dd-377-debts yes/no auto expand/collapse depending on valid debts
"
ddc55f2c542dbbee6c95b26f654519fb450ab982,ministryofjustice/opg-digi-deps-client,"dd-1085 rewrote all the asset CRUD methods, and ADD now using separate page with dropdown to select title, form validated
"
c06fb2439c4e65ba840beabff74fa199ed074a19,ministryofjustice/opg-digi-deps-client,"DDPB-959 collapse ReportStatusService as status empty entity
"
a2baae3ccfdd3eb9fa08c7d3593087baad6fd5e2,wikimedia/operations-software-librenms,"Move convenience functions into common; d_echo no longer adds ""\n"" automatically
"
f491ec6580d99897c9e2a55125fead77d4717aeb,wikimedia/operations-software-librenms,"cleanups, add epson printer discovery, fix bar colour on device overview for unknown toner colours

git-svn-id: 739fc08bb31dd03cfeeb6a72c94f1ec9dd35058d@3036 61d68cd4-352d-0410-923a-c4978735b2b8
"
9a381cfd82e13fc749f14bf4f9989d9f89246d4a,wikimedia/operations-software-librenms,"rename os discovery files

git-svn-id: 739fc08bb31dd03cfeeb6a72c94f1ec9dd35058d@1427 61d68cd4-352d-0410-923a-c4978735b2b8
"
a8dc640e9621abe3f8f453b536e2ddda10845f21,wikimedia/operations-software-librenms,"newdevice: Improved HPE Procurve/OfficeConnect discovery (#5763)

This is needed as some of this detection will break with new HPE firmwares."
b18c41b1a9d286fa3e77075a1305043bf665e9af,wikimedia/operations-software-librenms,"refactor: Use the Config class includes/discovery (#7299)

* refactor: use the Config class includes/discovery

* fix issue with $config variable not accessible in include-dir.inc.php

* improved whitespace

* Tidy up discovery_by_ip
"
0b3451bd27161e110164b26054583bd5ef8db903,wikimedia/operations-software-librenms,"refactor: Updated some default disco/poller modules to be disabled/enabled (#5564)

"
620d2ed194e507f845bba419ee435d56e24868a1,wikimedia/operations-software-librenms,"Merge pull request #1069 from laf/issue-896

Added check if rename was successful"
9dbe073b16cea2ef7c7dae3f0f9c802f3edb55c4,Samourai-Wallet/samourai-wallet-android,"Refactor guid
"
a9d0e5ceb449b777cfdc9c05431d2c776fb0968d,ScorexFoundation/sigmastate-interpreter,"extract ConstantEmbedding (with inject/extract constants) from ErgoTreeSerializer;
remove synchronization (thread safety);
rename ErgoTreeSerializer.treeBytes
add constant placeholder swapping (with constant) on deserialization;
add ByteReader.payload;
swap TreeBuilding.ConstantProcessing with ConstantStore;
refine ConstantStore API:
move extractConstants to ConstantStore object;
fix build after rebase;
move type cast after tpe check;
extract ConstantStore;
relax ConstantStore.put to accept Constant (from ConstantNode);
add ConstantStore tests;
"
0aa2f61ee5812507dc41577708854d34c3d775db,ScorexFoundation/sigmastate-interpreter,"Switch the rest of the tests to the compileWithCosting (#317)

* switch EQ/NEQ test to compileWithCosting;

* switch DH tuple test to compileWithCosting;

* remove SigmaSpecializer pass in compileWithCosting;
add the handling of the missing Apply and Select in CompiletimeCosting;

* add collection methods IR nodes handling in CompiletimeCosting;
remove Apply/Select for Exists, ForAll and update BooleanTransformer case to handle missing variants and produce proper IR nodes in RuntimeCosting;
remove Apply/Select for Map handling in RuntimeCosting;

* add non Lambda/FuncValue mapper handling for MapCollection in RuntimeCosting;
add FuncValue handling and switch to acquiring lamdba function via evalNode for all case in RuntimeCosting;

* enable checks in ErgoTreeBuildingTest;
comments;

* add proveDHTuple handling in CompiletimeCosting;

* switch from .asRep to inlined asRep();

* finish switching CollectionOperationSpec to compileWithCosting;

* switch to compileWithCosting SigmaOr and SigmaAnd tests;

* switch to compileWithCosting another SigmaAnd test;

* switch to compileWithCosting another SigmaAnd test;

* assert positive verification by default in BasicOpsSpec tests;
add numeric cast tests;

* #294: refactor AtLeast to operate on SigmaProp values;
&& and || for SigmaProps makes SigmaAnd and SigmaOr;

* update expected tree;

* switch ContextEnrichingSpec to compileWithCosting;

* switch AVLTreeScriptsSpec to compileWithCosting;

* switch AtomicSwapExampleSpec to compileWithCosting;

* switch AssetAtomicExchangeSpec to compileWithCosting;

* switch DemurrageExampleSpec to compileWithCosting;

* add handling of the special.sigma.box in the environment;
add min and max handling in the TreeBuilding;
switch TestingInterpreterSpec to compileWithCosting;

* more tests in ErgoLikeInterpreterSpec switched to compileWithCosting;

* make implicit classes extend AnyVal;

* fix build after rebase;

* fix expected trees in tests;

* remove artificial size check on byte array const;

* switch CoinEmissionSpec to compileWithCosting;

* remove allocation on SNumericType.isCastMethod call;

* remove handling of CostingBox in RuntimeCosting;
rewrite array ops tests in TestingInterpreterSpec to not use box from env;

* fall back special/special.sigma to pre big int size check version (brakes OracleExampleSpec);

* restore array ops tests with box in env;

* update special/special.sigma to the latest snapshots from master;
"
3a4f42ceafd6ba492def7698603623a9b6fe093b,ScorexFoundation/sigmastate-interpreter,"make SBigInt constant type
"
5ce21c494165e470d1e0e6f2b41b7c9f66f0b3f3,ScorexFoundation/sigmastate-interpreter,"rename SigmaBuilder method to have `mk` prefix and import builders at call sites;
"
5e579eed0e6f1932928cd8d37a8459d94c9efa69,ScorexFoundation/sigmastate-interpreter,"some simplification in naming, oracle example script started
"
2ece8937a9c626aee7c1d7332ce0938e8ab019e5,angular/platform-browser-dynamic-builds,"02483a0 Revert: ""refactor(ivy): save check methods separately""
"
846a3b8c4ffa8f257544962557d30a591304d111,angular/platform-browser-dynamic-builds,"501b9fe Rename of XHR - Moving files
"
a734fd5ff86549802477b136e2dd8bdf984beeb3,angular/platform-browser-dynamic-builds,"f0b0762 fix(animations): always cleanup players after they have finished internally (#13334)
"
6c48709569a1e30092bd80545c32e1c0d5406b44,angular/platform-browser-dynamic-builds,"e76a570 refactor(ivy): remove LNode (#26426)
"
cf1882d6cae0a35055ac5fd06bf195d45b579dd8,angular/platform-browser-dynamic-builds,"68fadd9 refactor(ivy): replace LNode.nodeInjector with TNode.injectorIndex (#26177)
"
a597ebe09e1ee4cdc4a221ae36257800c16ef916,angular/platform-browser-dynamic-builds,"94bc277 fix(aio): tidy up embedded ToC styling (#22570)
"
bc391a0746974cb544d410052a593270e3c57519,angular/platform-browser-dynamic-builds,"6199ea5 fix(compiler-cli): shorten resolved module name in fileNameToModuleName to npm package name for typings (#23231)
"
20df076c7546950f3d4a0f9ffc77698a03fe2002,angular/platform-browser-dynamic-builds,"98dd609 docs(animations): remove duplicate word (#16508)
"
8dd1b859ae3c0eb4ea1ac8a4ffdbe5783cd0cc7c,angular/platform-browser-dynamic-builds,"b988733 test(aio): remove unnecessary hack from e2e tests (#14356)
"
5a8ff8d2057ddc8f7c53c494848527737f62181f,angular/platform-browser-dynamic-builds,"96d06f7 fix(upgrade): Prevent property renaming for $inject.
"
11e3885a1cec26f9fbd444a94a4ecdc75e84d89f,angular/platform-browser-dynamic-builds,"6bae73c refactor(common): replace `Object.assign` with the spread operator (#17982)
"
8d84d96d64005a450b627259579876e00460dbd6,angular/platform-browser-dynamic-builds,"f0e0925 refactor(compiler): don't print stack trace on template parse errors (#13390)
"
f03e34729190519a44d8b8d1ee9b0cc8e8dc64f6,angular/platform-browser-dynamic-builds,"5031adc refactor(facade): don't expect super() to return a new Error object in BaseError (#12600)
"
64f9b96571e27c603e3b01f83ef3079ed607612f,angular/platform-browser-dynamic-builds,"ccea372 refactor(aio): use one argument for `DocViewer` error reporting (#21293)
"
3a09dd0abc9b415ba809bb5c8cd97a1f9a9bbc74,phoronix-test-suite/phoronix-test-suite,"phodevi: Faster / more efficient reading of sysfs nodes
"
1180e121b7e89d66c03e739f76ef9fec7e03a5d5,phoronix-test-suite/phoronix-test-suite,"pts-core: Rework the pts_run_option interface to set options to run next
pts-core: Change benchmark option to using the revised pts_run_option
interface to avoid double pts-core initalization
"
88bf45d13719c039e7816891a04c4da1b30d4f3d,phoronix-test-suite/phoronix-test-suite,"pts-core: Add rename-result-file option
"
76ef9f317163b221774b641727dafa720fdfcef4,phoronix-test-suite/phoronix-test-suite,"pts-core: Few clean ups
"
09e1fd1328893f293a5d591a32e1c14da5cdae96,phoronix-test-suite/phoronix-test-suite,"\pts-core: Rename pts_batch_display_mode to pts_concise_display_mode
"
23061abebd8aec79a50de06c557a5e60b110bb0d,phoronix-test-suite/phoronix-test-suite,"system_monitor 1.1 module. Eliminate all pts_record_* sensor functions
from pts-core and move into system_monitor. Move PTS_START_TIME and
PTS_END_TIME into pts-functions, and other cleaning work.
"
3e4fdc6386f1fdc4bd920a8e981c35304836ee80,phoronix-test-suite/phoronix-test-suite,"pts-core: Begin reworking the code path for when running on an operating system without PTS external dependencies support
"
954cb4f1190a69248ba3986012a6ce494887775a,phoronix-test-suite/phoronix-test-suite,"pts-core: Start improving the preferences interface
"
873b012ac6abcee664b845be340040b05bc41b0c,predictive-technology-laboratory/sensus,"Use service helper for flash notification instead of Android native.
"
33edcdf2659d0eda529d90a90a9e317481e9a0a8,BelledonneCommunications/linphone-iphone,"Improve rotation
"
b915cdd9c6d99c8b7ef40563363067fa9f72c03f,BelledonneCommunications/linphone-iphone,"Rename classes ... split buttons enable/disable stuff
Add OrderedDictionary
"
59684d1f96eaf7faca9013edeef606db672c0f1a,WikiEducationFoundation/WikiEduDashboard,"Changed button style on submit cards and increased card padding for all question types
"
ab685871dc06edf15c5fb891eefa515fd794c1b7,WikiEducationFoundation/WikiEduDashboard,"Break up wizard panels to separate course dates, timeline (also closes #302)
"
59d48a12d2c2f1e7a42e44265c4a3a4c1c8651fd,cisco-system-traffic-generator/trex-core,"moved yaml files again ....
"
1f90e4ed08414c8aa423693c4ee8fa84e7675230,cisco-system-traffic-generator/trex-core,"some improvements to the console
"
9e535369eb7dfef24c844e90443b3c634d3c4bde,wordpress-mobile/WordPress-FluxC-Android,"Merge pull request #169 from wordpress-mobile/issue/update-gradlew

Update gradlew+android-gradle plugin and remove unused dependencies"
d93f078b61ca4c9c0bf6a230f8dc91b4a9cfd579,wordpress-mobile/WordPress-FluxC-Android,"Renaming: s/dotcom/wpcom/ and s/dotorg/selfhosted/
"
22b7f3e1e26ce340d7d539e7c44e56d5e37e5ed6,wordpress-mobile/WordPress-FluxC-Android,"Drop generic getPosts methods (that don't specify a site) from PostStore

- Added utility methods to unit and instrumentation tests to replace the generic PostStore methods
"
1b2dee4e9edaf46e404c44dc0011af790d55c31d,wordpress-mobile/WordPress-FluxC-Android,"Merge pull request #744 from wordpress-mobile/issue/579-inject-cleanup

Drop redundant constructor @Inject annotations"
729562cd3d5de646d9c81429d814611b440a3714,IntegratedAlarmSystem-Group/ias-webserver,"Refactor AlarmCollection
"
0db6f8b068225cd23d9dfbc860f38c719822aceb,angular/platform-webworker-dynamic-builds,"72c7b6e feat: deprecate @angular/http in favor of @angular/common/http (#18906)
"
a1d5d11b662d0c795068085c8910f23d32a4ab3e,angular/platform-webworker-dynamic-builds,"a589ca0 test(ivy): clean up canonical spec (#22188)
"
2d7505510b161e0562a1e6b8cd4d27ceddce8837,angular/platform-webworker-dynamic-builds,"b15d50a build(core): improve payload size failure message (#21346)
"
2436ce3f83254253a76fdb74ab57f89bade01df4,angular/platform-webworker-dynamic-builds,"77ff72f Revert ""style(animations): fix short param names (#23668)""
"
bf6f1f8632be7a7ccad002c518861817ceb00f3a,angular/platform-webworker-dynamic-builds,"6a797d5 refactor(ivy): `element` and `ElementStart` retuns `void` (#25173)
"
64385a8a077c10b8259ea5adf16ab00cde36758d,angular/platform-webworker-dynamic-builds,"532e536 refactor(router): get guards only one time and simplify guard operator signature (#26239)
"
f7d64f7fd3df01c08555a5d74eea363f4dd401bd,angular/platform-webworker-dynamic-builds,"e64b1e9 fix(compiler): make `.ngsummary.json` files idempotent (#21448)
"
a670d903aca677df551fcf1f7acad136fa686b22,angular/platform-webworker-dynamic-builds,"3db84c8220 (HEAD -> master, upstream/master) build: fix size limits for CLI to make CI green (#18849)
"
4e12a15f110c75dd8c3031a16e117de492e5995c,angular/platform-webworker-dynamic-builds,"02acb5e build(aio): improve `enum` API rendering (#23872)
"
f965e268c30938bfa7ecd186e9ca2d91a5923502,angular/platform-webworker-dynamic-builds,"c17b912 refactor: use object spread operator rather than merge (#15426)
"
46ebf1f9614ded23927647a6b802664f5ebda19c,angular/platform-webworker-dynamic-builds,"9523991 refactor(router): cleanup to navigation stream for readability and documentation (#25740)
"
b41b4cd02c4f234d6cf346f71e3ab6e1baac38b2,angular/platform-webworker-dynamic-builds,"0a3f817 refactor(platform-browser): remove type assertion on console.profileEnd (#26303)
"
0c879c3890feeff2ab8167e9f19211691187a1f6,angular/platform-webworker-dynamic-builds,"98dd609 docs(animations): remove duplicate word (#16508)
"
39d6c4db47ec90c0a43df4f0de22c24de07d8c7f,angular/platform-webworker-dynamic-builds,"eb031c6 refactor(core): tree-shake application_module providers (#23477)
"
5c444ff290ba00e154b432a47360f7afa1b1b4ed,angular/platform-webworker-dynamic-builds,"f370fd3 docs: ""TypeScript to JavaScript"" code tab renamed “ES6 + Decorators”
"
92d45688b2fb25ba9663481643ad253af89c040b,angular/platform-webworker-dynamic-builds,"ad3b44a RendererV2 -> Renderer2 rename (#14998)
"
e34bb7d60a85bd80312655c28ead160e8b2f72f6,angular/platform-webworker-dynamic-builds,"f58211d fix(aio): improve no-javascript screen
"
3433017a332e9d5c1916e2c3fbc1c26c5ea83b80,joomla-projects/media-manager-improvement," # [#21891] Refactoring Article Options. Thanks Bill.

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@18695 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
cafe3962772fc5f80abd458fe66abb6e546e3c4f,joomla-projects/media-manager-improvement,"$ Refactored error.php strings

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@16431 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
d3d989f9f19fddbdb0987c9cf38ab50e38504ea7,joomla-projects/media-manager-improvement,"Namespace Input and deprecate it in favor of the framework package (#16939)

* Apply patch #12532, move to the fw package classes

* Namespace input classes

* Change application classes

* Compile correct class name

* Restore unit test
"
cc931059c64376c2b2cb13ae4451133d83fe3598,joomla-projects/media-manager-improvement,"Replaced unnecessary double quotes in plugins (#13211)

* Replaced unnecessary double quotes in plugins

* spaces
"
cfd2fb99820641b1bd2c3402c6d1618590051b2c,joomla-projects/media-manager-improvement,"[lang] Use ""folder"" instead ""directory"" in language strings. Closes #7523
"
714ffa304bb676a9fc490a84765e01894d17dd18,joomla-projects/media-manager-improvement,"[4.0] Ensure the CMSApplications do always have an identity (#19766)

* Ensure the CMSApplications do always have an identity

* Run the code at the beginning of the execute function

* Add missing import

* Move to afterSessionStart

* Adapt imports

* Move to CMSApplication->afterSessionStart

* Simplify

* Call parent afterSessionStart and load the identity there
"
cc44251fbc52054955a8622cb7ce1c914393bc91,joomla-projects/media-manager-improvement,"$ Refactoring ini/keys in libraries/J/Installer/

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@16370 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
d90c5eb9a18c02107d30122e2770ede80b00df47,joomla-projects/media-manager-improvement,"$ Consolidated some strings.

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@17165 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
5cf854713e315ea467c117a78f318b885cbae7e9,joomla-projects/media-manager-improvement,"Replaced com_messages with its refactored version.

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@12621 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
fb323cfb2ebb189865a91a1ffb334bded6255ba7,joomla-projects/media-manager-improvement,"Table col width and align cleanup
"
7dade2965c9158cc67dfcc04cb29f7483be28b0d,joomla-projects/media-manager-improvement,"General improvements
"
bfd70e8d79744cb8451c511ddcd36350496fbaad,joomla-projects/media-manager-improvement,"Refactoring mod_wrapper ini/keys

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@14826 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
8263c8ad8703b23ce287c208c9cb39b11d644bd1,joomla-projects/media-manager-improvement,"Refactored com_languages ini/keys

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@14879 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
b982eece934793d64d72f9ab66b40ab823a44878,joomla-projects/media-manager-improvement,"[ACL] Improve panel, solve ajax problems and ACL bugs (#10793)

"
6d7b71788eae72bb857db3716ba6e29ce7035f60,joomla-projects/media-manager-improvement,"Various changes in modules (#13216)

* Simplify ternary operation with elvis operator

* Remove unnecessary parentheses

* Remove redundant variables

* Code formatting
"
4c374809a9d33e6be884a099e6eac8072d9ed15e,joomla-projects/media-manager-improvement,"Merge pull request #224 from ciar4n/column-widths

Table col width/alignment cleanup"
563d75f31e59a24304a7c5b6fbeaaac6dd142b42,joomla-projects/media-manager-improvement,"MVC refactoring and standardisation.

git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@16401 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
469d3127def2773effa40b65817179429bf4ccb0,joomla-projects/media-manager-improvement,"[Isis] Template.less refactoring (#14400)

* Isis template.less refactoring

* Structure & clean slate

* Move less to individual blocks
"
fcf3d14757555c57adaacc0aa1f1bafaf7a15612,joomla-projects/media-manager-improvement,"Make view/layout labels consistent and convert XML from params to fields.


git-svn-id: 18e04b58169eb5c65245ae16c7324e17a4d46a4c@12480 6f6e1ebd-4c2b-0410-823f-f34bde69bce9
"
9b2d653b579f684d42ce03289c30c0d7e9b16f54,tomastrajan/angular-ngrx-material-starter,"refactor(Examples): implement app state
"
37c3e50a3c985fdf0c8cd13637028a5c822d7e7f,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1017 in IFS/innovation-funding-service from bugfix/INFUND-6849-the-error-messages-don-t-have to development

* commit 'cfb59244019aa9d9ccdf263ad504ed0d498d6e01 [formerly 17055303d8bf4b6ddb9261e70012b81077ff56e6]': (27 commits)
  INFUND-6849 last unit test change.
  INFUND-6849 missed one unit test full stop
  INFUND-6849 fixing unit tests :| just because this ticket wasn't touching enough files as it is
  INFUND-6849 Added full stop in shibboleth
  INFUND-6849 fixes for acceptance tests
  INFUND-6849 changed message to include client side placeholders
  INFUND-6849 fixed missing finance section replacement found while acc tests
  INFUND-6849 fix for DOI and finance
  INFUND-6849 added required error messages
  INFUND-6849 fixed another wrong key
  INFUND-6849 fixed key in assessor
  INFUND-6849 added password must match
  INFUND-6849 updating the javascript defaults
  INFUND-6849 Adding fullstops to the robot tests
  INFUND-6849 validation message fixes
  INFUND-6849 error messages
  INFUND-6849 error messages from properties
  INFUND-6849 changed some bank details stuff back as there were already messages. Added messages for eligibility.
  INFUND-6849 error messages full stop refactor
  INFUND-6849 error messages full stop + properties
  ...


Former-commit-id: 76b2de9daf537f2c24f21416711d37f131ddd10c"
5d4fa2c30a5eae3966f02e2472ec2f8b2ca79618,InnovateUKGitHub/innovation-funding-service,"IFS-2778 Updates to existing code an clean up
"
6f7861bfeeed646b4de2b90a7b31ac48a34f10bb,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into bugfix/IFS-2054-review-and-refactor-competition-panel
"
3864f5542292173bb91910db23dc316e51d4ff82,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' into development
"
ad1349a1b063a50cb6ce0bf8987ff2059fa55215,InnovateUKGitHub/innovation-funding-service,"Merge pull request #923 in IFS/innovation-funding-service from feature/INFUND-6694-as-a-competitions-team-member to development

* commit 'a2703508bcf50bbc9f688898d139a7aecc7d2b8b [formerly 06159fc79377c9a26d555a85e8ef11f480987ff3]':
  INFUND-6694 More refactoring forms.
  INFUND-6694 fixing move file error.
  INFUND-6694 removing modified file.
  6694 Addressing review comments.
  INFUND-6694 Ready for review.


Former-commit-id: d41b635b8035467269b2c09e015ecb6c9109dc86"
7abed1b9f0b162be341a9d8540f5e22ad7edd48d,InnovateUKGitHub/innovation-funding-service,"INFUND-3559 add local email server and clean up docker-run-tests
"
ef6f6389fad9737bba74be97fb8172e96b9111e1,InnovateUKGitHub/innovation-funding-service,"Update Acc tests. Including small refactoring


Former-commit-id: e5ee44416ab1c3aa0833ca6e9c89d73eccd1a876"
154bb0b0e02b2edafe7480e0c97babffd25bbe3c,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into bugfix/IFS-3411-zdd-cleanup
"
d72dc491b40bdaacb599859baf6cbc801df1735e,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch


Former-commit-id: 8e5c9237eeac855033b960057bc9e26c06c0d786"
ad5ac97010b06f42a6dd70951364ab181686105b,InnovateUKGitHub/innovation-funding-service,"Merge pull request #693 in IFS/innovation-funding-service from feature/INFUND-5852 to development

* commit '8fc259523c46b8ba210826c7e08ad2949e8f859c [formerly 9b5cb20cfc1d134a9ff53d5d87e6ca4ebe289ce9]':
  Moving header generation code into util class
  INFUND-5852 Making sure titles match those specified in story and that empty address 4 is added to make copy pasting into target spreadsheet easier
  INFUND-5852 added 'all'
  INFUND-5852 lowercase
  INFUND-5852 added the link for the bank details download
  INFUND-5852 improved ascii docs data, more tests added
  INFUND-5852 Splitting export into smaller methods
  Adding a flag for template to show or not show link to export bank details depending on role
  Adding unit tests
  Adding data into csv instead of empty string array.  Changing request mapping to be consistent.
  Adding code for export of bank details


Former-commit-id: ce84a8e24528c12b76fb6ea047e4a6ad204f9b3b"
1abda48d309e5740060604cb02acbdddddc384ca,InnovateUKGitHub/innovation-funding-service,"Merge pull request #754 in IFS/innovation-funding-service from feature/INFUND-6040-as-an-assessor-i-want-to-see to development

* commit '0bcb404aa6253b42fb44a591340802f2182ca794 [formerly ab1f4aba85b0f092559904ee0bd14a9418b34efc]':
  INFUND-6040 Renaming flyway script.
  INFUND-6040 Sorting assessments by state.


Former-commit-id: 1419c4512d371fbc9a920e5700f25ca9032f3aa3"
2e5869b4e586ec715148c7c629a3ec971fbfcd63,InnovateUKGitHub/innovation-funding-service,"IFS-3417-Refactor-ProjectSetUp-DataLayer

ProjectUser Domain Refactor.

Change-Id: Ic8d4c3e58422f4e88517a71657554369a72d0f2e
"
36eef713436c7fbdf67b0e31a3219060055d7aac,InnovateUKGitHub/innovation-funding-service,"Merge pull request #3047 in IFS/innovation-funding-service from bugfix/IFS-1392-aj-internal-invite-new-assessor-click-on-assessor-name-leads-to-404 to development

IFS-1392, Issue fixed with others identified. Tickets to be raised for issues identified in testing.

* commit 'b1f93c8034415bae865e4e235a433264f372d192':
  IFS-1392 changes to getsuccessObjectOrThrowException()
  IFS-1392 code tidy
  IFS-1392 updated unit tess
  IFS-1392 updated unit tests and fixed errors
  IFS-1392 updated unit tests
  IFS-1392 fixed email field validation
  IFS-1392 Update to display user entered details when an error is detected
  IFS-1392 Update to fix error message reference
  IFS-1392 code tidy
  IFS-1392 code tidy
  IFS-1392 code tidy
  IFS-1392 can send multiple emails
  IFS-1392 cant invite already existing users fixed
  IFS-1392 fixed invite problems
"
de1771b65407d51d455102115ef1143a2e69c71e,InnovateUKGitHub/innovation-funding-service,"IFS-1013 - Refactored tests a bit to allow for organisation type selection in the create account keywords
"
0558e82fb39a177fb89440ae61e705474e82281a,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into feature/INFUND-2313-as-a-developer-i-want-to-have

* development:
  Changed the environment variable
  INFUND-1655: fixed the autosave
  Fixed some broken tests
  Content changed subject for invite
  Improving the test cases names
  Validation: Improved address template Validation: Added validationMessage for @notblank
  Fixing failing tests
  INFUND-2282 Better view application after submit INFUND-1655 Accessibility improvements for the wysiwyg editor
  INFUND-2157 && INFUND-1223 Fix for removing the organisation id in the registration flow, after user registration.
"
a8599bffb41f9c9c67d41044cbceb5d12323e466,InnovateUKGitHub/innovation-funding-service,"Merge pull request #3091 in IFS/innovation-funding-service from feature/IFS-2879-as-a-research-applicant-i-must-accept-the-grant-terms-and-conditions to development

* commit '23e9fd95a3ee0f7e227441395bcb43ec719f9649':
  IFS-2879 Added a check to select the checkbox in order to mark the finances as complete.
  IFS-2879 Added tests to cover the checkbox.
  IFS-2879 Added a check for the disabled mark as complete link.
  IFS-2879 Added a check for the checkbox.
  IFS-2879: Tidy up
  IFS-2879: Fix up unit tests
  IFS-2879: Add support for academic terms and conditions plus tidy up of existing code
  IFS-2879: Tidy up pre-existing code
  IFS-2879 Adding front end elements from existing fragment
"
609efa0a1936f2b5b4a9391c4ea294b7f2fafe20,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1469 in IFS/innovation-funding-service from feature/INFUND-4837-finance-changes to development

* commit '244f4bc5a4ac5e423b620549824a02ff19a1796e [formerly 8123c2974def1d6af1d2e941e3aec337a0b81dc0]': (28 commits)
  INFUND-4837 fix merge
  removing unnecessary line
  Increasing abstraction on the return value of getProjectOrganisationFinanceChanges in order to avoid the need of comments.
  Correcting issue caused by OrganisationJESFinance.getProjectOrganisationChanges() returning NotImplementedException
  Moving line closer to where it’s result is used,
  Removing unnecessary line
  Tidy up
  Addressing PR comments
  Adding testGetProjectOrganisationFinanceChanges, Todo, in OrganisationFinanceHandlerTest.java
  More complete testGetHandlerMatches
  Adding test to check if correct handler is found per Cost type.
  Adding testCostToCostItem test
  Adding testGetOrganisationFinanceTotals to OrganisationFinanceHandlerTest
  Correct OrganisationFinanceHandlerTest failing test after refactoring
  Cleaning up
  more code cleaning
  Some cleaning up in the OrganisationFinanceDefaultHandler.java
  Improving code readability and quality.
  Reduce columns with to be able to read the code.
  INFUND-4837 Adding unit tests
  ...


Former-commit-id: 92983c9e816da2e37c2e823656b3c56688765c9a"
55057ad1324cf56736d44f923191aef3b070902f,InnovateUKGitHub/innovation-funding-service,"Merge pull request #197 in IFS/innovation-funding-service from bugfix/IFS-3462-account-number-sort-code-should-only-allow-numerical-values to development

* commit '034cd460f6d4c333fd62e6cf2069346346f93c22':
  IFS-3462 - General restructure to inputs.
  IFS-3462 - Code restructure of account number and sortcode in bank-details.html.
  IFS-3462 - Pattern and input regex added to account number and sortcode in change bank details in Project Setup.
"
259516f8b80a5e702d8eee63d889e411260fba6c,InnovateUKGitHub/innovation-funding-service,"INFUND-6849 error messages full stop refactor


Former-commit-id: 90cfb626f23ee12c0ae0b402f9005e52c5382cf4"
bc19e0ad12829b3f2a1ce235660e3bed7b013f6a,InnovateUKGitHub/innovation-funding-service,"IFS-3380 reverted html and moved styling to modifiers sheet
"
227474228a3e69dad7c00ad35c6a6602d79634ba,InnovateUKGitHub/innovation-funding-service,"Merge remote-tracking branch 'origin/development' into feature/INFUND-4153-as-a-developer-split-project-setup-into-modules
"
dc07db1bc72e3ad80fedef295790add8702924e5,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' into development


Former-commit-id: 37b96fa2767432c307eb9f112cc683938dcdf767"
c42f7c2fd1632778f890ea185a635f835198f731,InnovateUKGitHub/innovation-funding-service,"IFS-2123 Refactoring the research category page to use th:field for the research category field and use the currently set research category from the form rather than the view model.
"
40dd628fae88b439a9083876191db8d6725f55a2,InnovateUKGitHub/innovation-funding-service,"IFS-3195 - Rename companyHouse in Organisation, Organisation Resource
"
93d1f1638275f0e0d4e989d3f1965b9c91bc737b,InnovateUKGitHub/innovation-funding-service,"INFUND-9039 - Moving method to assessor service.
"
77a1b8c9831bb502e40a5830ee89b7ee3047f399,InnovateUKGitHub/innovation-funding-service,"Merge pull request #311 in IFS/innovation-funding-service from feature/IFS-3577-adding-withdrawn-projects-to-webtest-data to development

* commit '99309f9c606ad470a68df6577ed5f684c5fef22d':
  IFS-3577 - final test script amends
  IFS-3577 - final test script amends
  IFS-3577 - fixing issues with ATs after new data added
  IFS-3577 Added comments for clarity.
  IFS-3577 Test case name fix.
  IFS-3577 Clarified a test case name.
  IFS-3577 Some refactoring and added in a test for ineligible applications in the previous list.
  IFS-3577 - upped patch level to conform to new release patch level
  IFS-3577 - upped patch level to conform to new release patch level
  IFS-3577 - added a new withdrawn project and ineligible application to help testing application search
  IFS-3577 - added amends to GTD script to allow correct testing on Bamboo
"
b1a336ae7eff2c59cc6dd8ee2e19b6b20fadf156,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into IFS-4014-zdd-cleanup-for-p2o
"
bf8321d2ff00fc5241787867a4e72a14e25fd3ca,InnovateUKGitHub/innovation-funding-service,"INFUND-5412 - Refactored acceptance test for performance and semantic reasons. Set two tests as pending waiting for QA issues to be resolved.


Former-commit-id: 0b35d5cef96149d6dac1c045d28bc46c76b5baca"
f902bc06f10eb28bd87b5d2050a0d891131083b6,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into IFS-3823-refactor-services-in-web-core

# Conflicts:
#	ifs-web-service/ifs-application-commons/src/main/java/org/innovateuk/ifs/application/populator/ApplicationCompletedModelPopulator.java
#	ifs-web-service/ifs-application-commons/src/main/java/org/innovateuk/ifs/application/populator/ApplicationSectionAndQuestionModelPopulator.java
#	ifs-web-service/ifs-application-commons/src/main/java/org/innovateuk/ifs/application/populator/section/FinanceOverviewSectionPopulator.java
#	ifs-web-service/ifs-application-service/src/main/java/org/innovateuk/ifs/application/forms/researchcategory/populator/ApplicationResearchCategoryModelPopulator.java
#	ifs-web-service/ifs-application-service/src/main/java/org/innovateuk/ifs/application/summary/populator/ApplicationSummaryViewModelPopulator.java
#	ifs-web-service/ifs-application-service/src/main/java/org/innovateuk/ifs/application/summary/viewmodel/ApplicationSummaryViewModel.java
#	ifs-web-service/ifs-application-service/src/test/java/org/innovateuk/ifs/application/forms/researchcategory/populator/ApplicationResearchCategoryModelPopulatorTest.java
"
c6aea5a637f45b33d3110082b72765dc5fc51a13,InnovateUKGitHub/innovation-funding-service,"INFUND-7790 interim checkin - re-factor into separate controllers/templates, store attachment file ID in cookie


Former-commit-id: 02c25b5fd2213a7c9868d97bd2ad31d0396c44ef"
879bc64eac333da15962437392029c383c3c8e7e,InnovateUKGitHub/innovation-funding-service,"IFS-3017 Package refactor for validators
"
b464e15503e50fffd4fbe2c570fd9bce3b28eae5,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/IFS-33-as-a-comp-exec-i-can-select-and-add' into bugfix/IFS-647-refactoring-of-fundingdecision-and
"
220d39be0002a155246478f80fba56864eaf02ca,InnovateUKGitHub/innovation-funding-service,"IFS-1517 rename back end methods to reflect underlying query as result of review
"
9038c39970c9e098aa24f21ad4e71972bf30b27d,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into bugfix/IFS-2186-aj-assessors-ats-refactoring
"
6e088ca318c2870fb6e29926512b3f94b8e78b04,InnovateUKGitHub/innovation-funding-service,"Merge remote-tracking branch 'origin/development' into
local_feature/INFUND-9189-Package-Refactoring-MO.

Conflicts:
	ifs-data-service/src/test/java/org/innovateuk/ifs/testdata/builders/BaseDataBuilder.java
"
bb442643f7d590cbed84f1b0c652858641656a28,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2240 in IFS/innovation-funding-service from feature/INFUND-8639-prod-performance-fix-to-development-2 to development

* commit '0607ec5d764223b173e73fa6fbd6ab46f2e05de0': (42 commits)
  INFUND-8639 - test update
  INFUND-8639 - fxing typo and upping patch level
  INFUND-8639 - responding to PR comments
  INFUND-8639 - test correction
  INFUND-8639 - test correction
  INFUND-8639 - upping patch level
  INFUND-8639 - making unsecured code from dev branch work temporarily
  IFS-13 - upping patch level
  INFUND-8639 - upped patch level following merge
  INFUND-8639 - removed trace of average permission checking code
  INFUND-8639 - added standard (non-averaging and sorting) permissions handler to have two comparable strategies against running on live data
  INFUND-8639 - updated comments
  INFUND-8639 - added additional comments to code, and removed duplicate alias class
  INFUND-8639 - updating patch level to development level
  INFUND-8639 - adding comments
  INFUND-8639 - added tests for the ordering of permission methods by average response times, and corrected bug that prevented cached permission methods to be reused.  Added additional cleardown in base test classes to ensure that cached mock permission methods are cleared down after use
  INFUND-8639 - fixed final unit tests
  INFUND-8639 - regenerated csvs to work with latest test data
  INFUND-8639 - amending tests to work with new optimised service calls
  INFUND-8639 - fixing up tests
  ...
"
b915b83b9e03832fe3eb5e7fcd870221fa10ab18,InnovateUKGitHub/innovation-funding-service,"IFS-2928 renamed to assessorFinanceView
"
a5d807f4185898cc2c552439674fe7543e3e0990,InnovateUKGitHub/innovation-funding-service,"Merge pull request #274 in IFS/innovation-funding-service from feature/INFUND-1821 to development

* commit 'fb56258d442ba188c20b162abdac1bcf787bd5e7': (39 commits)
  INFUND-1821 bumping flyway update versions
  INFUND-1821 bumping flyway update version numbers
  INFUND-1821 Moved the persisting [name] attributes to the repeating rows component.
  INFUND-1960: Fixed the failing academic finance test
  INFUND-1960: Fixed the failing finance summary test
  INFUND-1960: Updating the finance test tags
  INFUND-1821 fixing bug whereby for an existing cost, the fields not provided were being reset
  INFUND-1821 bumping flyway update version
  INFUND-1821 fixed textarea not working correctly in the capital usage section
  INFUND-1960: Fixing the finance tests
  INFUND-1821 fixed the remove buttons when working via ajax
  INFUND-1821 moved the  .trigger('updateSerializedFormState'); as it should fire on every instance not only in the repeating rows
  INFUND-1821 Javascript XHR calls are now firing sequential for each of the repeating rows to make sure everything runs well now
  INFUND-4078: Removed the pending tags from the tests
  INFUND-1821 fixing erroneous null check, and fixing a nasty bug regarding state in both the organisation finance handlers
  INFUND-1960: adjusting the finance web tests
  INFUND-1821 deactivating row until autosave is complete to avoid duplicate costs being created
  INFUND-1821 updating other funding validator to handle date update without funding source
  INFUND-1821 tidying - removing unused private method and making logger private
  INFUND-1821 bumping flyway script versions
  ...
"
e96205c069c991481593c1a72dc4f4029529452f,InnovateUKGitHub/innovation-funding-service,"Merge pull request #897 in IFS/innovation-funding-service from feature/INFUND-6741-as-the-service-delivery-manager to development

* commit '4f98a8514f9752de465a294f4e4689767271fad4 [formerly d595a6df206eca24bed6912153c0adcbd38a76df]':
  INFUND-6741: Adjusting acceptance tests for autogeneration of GOL
  Add test for re-instated method, revert gol address function, add validation message for gol error
  Re-instate spend profile approval generation of GOL accidentally removed in merge Review comment actions
  Update with review comments
  API renaming and tidy up - caused by merge
  Avoid generating file when uploading GOL
  Fix entity escaping lost in merge
  Merge missed update from dev branch
  Correct GOL upload (was generating file!)
  Correct GOL auto generation - swallow GOL state ‘failures’ in ifs-data (should not cause service to return an error) Fix bug with character entity escaping - PDF generation takes XML 1.0 not HTML 4 Remove interface for triggering generation of GOL
  Add method to ProjectGOLController to create GOL pdf if spend profiles approved and OtherDocuments approved


Former-commit-id: d5ac9e78e86e0733e8471807681391830690df34"
62c82a7319b961b210cd6326f41ed78a9c99566e,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of ssh://devops.innovateuk.org/ifs/innovation-funding-service into feature/INFUND-7227-rename-everything-related-to


Former-commit-id: 7eb3305d62c9c5d80ef891bbb8a41f2797dc7ef5"
c1142a8be4278533a9f5dd68c49f59de348f5ea8,InnovateUKGitHub/innovation-funding-service,"INFUND-6865 - Makes CategoryLink abstract and adds entity specific subclasses.
Adds innovation areas to User.


Former-commit-id: 4bdedf0559af9e0c3151c775f7cb84ce54fbaf29"
a182d360acad3cf491eef4dc6d9ac32940430d24,InnovateUKGitHub/innovation-funding-service,"IFS-3411: ZDD cleanup following IFS-3016
"
ea1d81eb17839003ac957ce3311240d33f64fef4,InnovateUKGitHub/innovation-funding-service,"INFUND-8962: Rename funding notification resource
"
94b664c28602ae3bed71d1ac25107d2dbf12d43e,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' into bugfix/INFUND-5412-acceptance-test-conflicts-of

# Conflicts:
#	robot-tests/IFS_acceptance_tests/tests/03__Assessor/03__Profile_Editing/01__Skills.robot


Former-commit-id: 301b27b1a3a8ba640bfb9b289bf4d21e4816ec1d"
5f4ace186f3dd1798cb1479cd6e319e765d3646a,InnovateUKGitHub/innovation-funding-service,"Merge branch 'bugfix/IFS-647-refactoring-of-fundingdecision-and' of ssh://devops.innovateuk.org/ifs/innovation-funding-service into bugfix/IFS-647-refactoring-of-fundingdecision-and
"
80b35e287613b7ed278f91f7fff14a20987814d3,InnovateUKGitHub/innovation-funding-service,"Merge pull request #714 in IFS/innovation-funding-service from feature/IFS-4569-as-an-applicant-i-am-able-to-input-a-no-uk-postcode-for-project-location to development

* commit 'afd45b7976658b985471c89f5952ea9b2cbee3fc':
  IFS-45694 Update from review comments
  IFS-45694 Update AT's
  IFS-4569 - Removes full-stop from 'There is a problem.'
  IFS-4569 - Adds ApplicationSectionControllerTest tests for project location validation.
  IFS-4569 - Renames ApplicationSectionControllerTest.java test methods.
  IFS-4569 - Changes min and max project location postcode length to 3 and 10.
  IFS-4569 - Changes 'There is a problem on this page' to 'There is a problem'
  IFS-4569 - Removes 'Please' from postcode validation error message.
"
51e7af04f5fd9a0b194a2bf387b68f1e32c7b6fe,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1045 in IFS/innovation-funding-service from bugfix/INFUND-7126 to development

* commit '7dcb79eb15de983f331699ab57b0a6be1461ab36 [formerly 798f7f17b3f48e3a3b04c9a4b931997c16fcef67]':
  INFUND-7354 - Make invite new user controller methods route through the #invite method
  INFUND-7126 - Adds further unit tests for checking form validation
  INFUND-7126 - Adds additional unit test check for single row being added to InviteNewAssessorsForm
  INFUND-7126 - Changes form to check on .isEmpty than size directly
  INFUND-7293 - Adjusts view template to have client side validation errors and adds additional required messages
  INFUND-7126 - Adds default empty row to form and adds correct validation message annotations


Former-commit-id: 07e8e274a9f6843c639d1d937206fdd14768abb3"
f3db0a7d38b9918332947122bbe94f65c6339c45,InnovateUKGitHub/innovation-funding-service,"Merge remote-tracking branch 'origin' into test-results

* origin: (24 commits)
  Minor change for a warning regarding multiple tests with same name
  fixing sql files
  updated script numbers
  INFUND-5832 fix test
  Lots of refactoring
  INFUND-8528 companies house manual address fixes
  INFUND-8982 fixing up content
  INFUND-8834 added tabindex to address skiplink bug in IE9--11
  INFUND-8532 Content change fix
  INFUND-8938 Adding guidance text to Public Content section.
  INFUND-8912 adding a colon for content
  INFUND-7844 Added organisation controller docs
  INFUND-6357 tidy up FC controller
  INFUND-6357 fix typo in comment
  INFUND-6357 - allow lower case enums for approval/rejection
  refactor attempt
  INFUND-8528 cleanup organisation search
  remove incorrect changes
  fixing broken webtest data
  bumped script
  ...


Former-commit-id: 074f86c0eadf1756b69fd55e356cf5a7ab0cc342"
db6c223ac10985e8f2236071d200b606bd287666,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch


Former-commit-id: a44a33d7bc9b4e59731ece161870e7edc28c73d0"
75b592219e76d3f1e005a0cb7421eb4a033155da,InnovateUKGitHub/innovation-funding-service,"IFS-3252 - Moves interview statistics endpoints to CompetitionStatisticsController

- Updates asciidoc
- Updates controller tests to use hyphen-style endpoint names
- Adds missing unit test for getInterviewInviteStatistics()
- Improves naming consistency of panel service methods
"
66549c9c232e8a64942e9d2adcd7125d0b5fef2b,InnovateUKGitHub/innovation-funding-service,"INFUND-631 remove embedded ProcessRole from ApplicationResource and some misc code cleanup
"
8ea262c67cdcf478bf7701126d915ea30875356d,InnovateUKGitHub/innovation-funding-service,"INFUND-4825 - cleaning up merge conflict


Former-commit-id: 11e8137b66119a9c206e09b479cb2cd98974dc26"
8987a0ebd89f394e8dd42db3a4fec2c6a0e92edd,InnovateUKGitHub/innovation-funding-service,"Merge pull request #4 in IFS/innovation-funding-service from feature/IFS-2875-part-2 to development

* commit 'fe34bea1b7e94b34626cbd7376302db90a043f20': (29 commits)
  IFS-2875: Formatting
  IFS-2875: Update formatting of parantheses
  IFS-2875: Fix tests to expect updated invite rejection message
  IFS-2875: Fix failling ATs
  IFS-2875: Re-add autowire lost in merge
  IFS-2875: Updates following merge of Role changes
  IFS-2875 - Removed unnecessary P annotation in ReviewInviteServiceSecurityTest
  IFS-2875 - Undo accidental renaming of `/checkExistingUser` endpoints in tests
  IFS-2875 - Rename `checkExistingUser` method to `checkUserExistsForInvite`
  IFS-2875 - Fix incorrect builder usages in Assessor* mapper tests
  IFS-2875 - Resolve additional merge conflicts due to renaming to AssessmentInvite
  IFS-2875 - Make parameter names more explicit in ApplicationInviteController
  IFS-2875 - Fix additional merge conflicts in mapper tests and InterviewInviteServiceImplTest
  IFS-2875 - Add class comments for new mappers
  IFS-2875 - Remove unnecessary P annotations
  IFS-2875 - Change `InviteService.checkExistingUser` back to protected visibility
  IFS-2875 - Cleanup AssessorCreatedInviteMapperTest imports
  IFS-2875 - Add test for AssessorInviteOverviewMapper
  IFS-2875 - Add additional mapper tests and simplify mapping methods to `mapToResource`
  IFS-2875 - Tidy and document InviteService
  ...
"
57649dde4c5f0c1c7868b76345e10aca500c2e3b,InnovateUKGitHub/innovation-funding-service,"INFUND-9174 - Fixes use of old ApplicationStatus in view templates.
Generally renames applicationStatus to applicationState
"
e2f6c69732f161938ce2166e90243e96c48803f7,InnovateUKGitHub/innovation-funding-service,"IFS-4539 Remove TODOs and commented out code
"
cd5eb0e0491adebd6e6d39257e6baa03e5cadc16,InnovateUKGitHub/innovation-funding-service,"Merge pull request #379 in IFS/innovation-funding-service from feature/INFUND-3530-as-a-potential-finance-contact to development

* commit '36b3f1c0b3de5215323e9087da9bd15afadf96e5 [formerly 3f18f8716388d4292a5e6229280e35134b519f5f]': (26 commits)
  INFUND-3530 tidy
  INFUND-3530 more tests
  INFUND-3530 more tests
  INFUND-3530 more tidy up
  INFUND-3530 more details on the project invite resource
  INFUND-5350 more integration with the project invite mechanism
  first part of integrating to the project invite instead of applicaiton invite
  INFUND-3530 test
  INFUND-3530 making sure of connection between user and organisation#
  INFUND-3530 fixing some of the project registration
  INFUND-3530
  INFUND-3530 refactor
  INFUND-3530 more tests
  INFUND-3530 some tests
  INFUND-3530 adding a partner
  INFUND-3530 service to add a partner
  INFUND-3530 refactor
  INFUND-3530 more templates
  INFUND-3530 adding some templates
  INFUND-3530 refactor
  ...


Former-commit-id: 976472b3e583bb738eb30d2d450c8dcf8a7a27dd"
0671a7be04406201ca1730dd43d38e944c800709,InnovateUKGitHub/innovation-funding-service,"Merge pull request #3053 in IFS/innovation-funding-service from bugfix/IFS-2745-remove-usage-of-objectnode to development

* commit '70f77930915937ddb2320f7ef35e0aa703363297':
  IFS-2745 - Addressing PR comment.
  IFS-2630 - Update: SQL script added to update process events.
  IFS-2630 - SQL script added to update process events.
  IFS-2745 - fixed expectations around async futures
  IFS-2593 - Content change to Grant Offer Letter text.
  IFS-2745 - Change to CompleteQuestionsPercentage unit test.
  IFS-2745 - Removal of redundant variable.
  IFS-2745 - Change to CompleteQuestionsPercentage unit test.
  IFS-2630 - Update ""gol-rejected"" and ""gol-approved"" process events to have ""signed-"" prefix.
  IFS-2745 - Import cleanup.
  IFS-2745 - Usage of objectnode removed from ApplicationRestServiceImpl.
  IFS-2745 - Import cleanup.
  IFS-2745 - Usage of JsonNode removed from ApplicationFinancesRestServiceImpl.
  IFS-2745 - Usage of ObjectNode removed from ApplicationFinanceController.
  Revert ""IFS-2745 - Removal of ObjectNode usage in ApplicationFinanceController.""
  IFS-1555 - Removal of ObjectNode usage in ApplicationFinanceController.
"
1f782bd4b2db1d3616a88951696f4eb47d9e2981,InnovateUKGitHub/innovation-funding-service,"INFUND-1138 - removing now-unused base64 encoding work
"
80ecbca07132cf3840ee6d50d53528ee36c35520,InnovateUKGitHub/innovation-funding-service,"IFS-3417-Refactor-ProjectSetUp-DataLayer

Domain PartnerOrganisation.

Change-Id: I8e67cc15ad7ae7ba4067df7842fb995862e7cf09
"
1f30c24904e0812683341ad5f28b5ba5a6cbe50b,InnovateUKGitHub/innovation-funding-service,"INFUND-6260 cleaning up imports


Former-commit-id: 6b2c956b968edc007568b3bbccea4e23947e8d10"
1b0066c0a7212faa0610d3da3143426352898a5e,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2345 in IFS/innovation-funding-service from feature/IFS-375-refactor-assessor-journey to development

* commit '48efc719783ebbdf388ce54de429a316175bccb3':
  IFS-375 delete defunc file
  IFS-375 Used vaiable for competition name
  INFUND-375 refactoring user names and passwords into variables
"
1d11dd13d141ca40ca9ed0d013a611c6c59c9b07,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into bugfix/INFUND-9190-bank-details-code-refactoring
"
5de74bdb97d5abbb8e484f0c39bb20cb0db41760,InnovateUKGitHub/innovation-funding-service,"IFS-335 - removed commented-out block of configuration for anonymised dump container, as it is not run as part of docker compose
"
fc65d8ed47c5b7cc40f3a1f9f22854aa01fa31a8,InnovateUKGitHub/innovation-funding-service,"INFUND-2882 - removing more duplication in controllers
"
e47a3cb6784d1192947a9a866fc3b6d41c3e7ae4,InnovateUKGitHub/innovation-funding-service,"Merge remote-tracking branch 'origin/development' into feature/IFS-141-front-door-microservice-data-refactor
"
30ded6b1e55b1a018c79fdff6658e438a6451efe,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2957 in IFS/innovation-funding-service from bugfix/IFS-2501-duplication-in-overheadfiledownloadercontroller to development

* commit '4d41fa874d657b84b3c4c60df6102ba62fa3d8e4':
  IFS-2501 - Addressing PR comments. Spring descriptions updated.
  SonarQube - InterruptedException removed and unused imports removed.
  IFS-2501 - Unused HttpServletRequest removed.
  IFS-2501 - Removal of duplicate controller and test. Permissions added for ifs administrator and project finance.
"
c8df19816e96a81e7fdf93855fefcc736af7c960,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into bugfix/IFS-4105-diversity-question-zdd-cleanup
"
a1aab3b6993b4e92449b46c825f4ed122c877549,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1387 in IFS/innovation-funding-service from feature/INFUND-7405-as-an-applicant-i-want-the-read to development

* commit '41f9ecb1542622ff8315506fa59436be18e939ba [formerly 1f8cacd845c7f1ab06cd091c9cf0a54c4d157628]':
  INFUND-7405 adressing review comments
  Revert: update selectors
  update selectors
  reverting change
  content change
  INFUND-7405 fixing more bugs
  INFUND-7405 fix acceptant test total costs
  INFUND-7405 redoing some of duncan's work
  INFUND-7405 th:insert caused small bugs in structure, replacing with th:blocks
  INFUND-7405 fix typo
  INFUND-7405 readonly other costs
  INFUND-7405 redoing Duncans refactor work again to escape merge hell
  INFUND-7405 redoing Duncans refactor work to escape from merge hell
  INFUND-7405 claim percentage
  INFUND-7405 fixes for acceptance tests
  INFUND-7405 Fixes in acceptance tests and bugs found during acceptance tests
  INFUND-7405 compiled css
  INFUND-7405 Readonly view for the finance overheads section
  INFUND-7405 readonly template for overheads , work in progress
  INFUND-7405 template work for text readonly sections in finance and application details


Former-commit-id: 31fc14def7e67ee933cdf6a173a6620342f40d36"
3ed7c7bee895bed0ea6b784b81983bd17f617423,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2545 in IFS/innovation-funding-service from optimizing-application-dashboard to development

* commit 'c20c9c616c6b8aa9a26b4934ba9477671cdca17b':
  Updated selector. Fix identation
  IFS-XXXX Adjusting competition adocumentation
  IFS-XXXX Correcting documentation
  IFS-XXXX Documentation updated
  IFS-XXXX Fixing unit test
  IFS-XXXX Added tests for the added functionality
  IFS-XXX Work in Progress to reduce calls to dataservices
"
102792e0573f2d9048e739ac474db30ea9cce966,InnovateUKGitHub/innovation-funding-service,"Merge pull request #246 in IFS/innovation-funding-service from feature/INFUND-3505-setting-up-a-system-for-having to development

* commit '79a5649dd1c05ba98865bc3b65865c20461f5f86':
  INFUND-3505 fixing autosave after refactor
  INFUND-3505 mistake found during acceptance tests
  INFUND-3505 Moved javascript to subfolders of there respective components, replace compass with libsass + compass. This removes the ruby dependency and is quicker to compile.
  INFUND-3505 System for compiling multiple gulp files
"
212d93efc5f40f1785958f1c2406d4cdb1aee124,InnovateUKGitHub/innovation-funding-service,"INFUND-844 cleaning up the finance validators
"
b76411e9556051e71632b7923181a2e758293ec0,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch


Former-commit-id: c46dac1fb167c085c4929f4ff38d4b9537ea13ad"
aa05c1a051d8c0329716d120527567f52bc2f91f,InnovateUKGitHub/innovation-funding-service,"Merge pull request #638 in IFS/innovation-funding-service from feature/IFS-4280-zdd-cleanup-for-ifs-3284 to development

* commit '2d61ee73cbd4ced0be749124fb50b263c75f538f':
  IFS-4280 ZDD cleanup related to IFS-3284 in preparation for removing database column competition.full_application_finance in IFS-4380.
"
ff0dd027f5f6c1447de5c05708cd90772b3aa6fc,InnovateUKGitHub/innovation-funding-service,"Merge remote-tracking branch 'origin/feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch


Former-commit-id: 5b146fcc22f650626d3b529595e71ab9ad97db77"
248f6a37000a559030b4f4ebb445e173fd1eb995,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into IFS-4768-refactoring-around-user-defined-keyword

# Conflicts:
#	robot-tests/IFS_acceptance_tests/tests/03__Competition_is_open/03__Update_competition.robot
#	robot-tests/IFS_acceptance_tests/tests/04__Applicant/01__Create_New_Application/08__ProjectGrowthTable_InnovationAreas.robot
#	robot-tests/IFS_acceptance_tests/tests/10__Project_setup/01__project_details.robot
#	robot-tests/IFS_acceptance_tests/tests/10__Project_setup/06__Finance_checks.robot
#	robot-tests/IFS_acceptance_tests/tests/10__Project_setup/07__Queries_notes.robot
#	robot-tests/IFS_acceptance_tests/tests/10__Project_setup/08__Spend_Profile.robot
#	robot-tests/IFS_acceptance_tests/tests/10__Project_setup/09__Grant_offer_letter.robot
"
5fec565b4568ebd62c6141e0525fd4b6f6fd4746,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch
"
d9b60bb89ba01e25a59ff3d767d8915fa4bd5f86,InnovateUKGitHub/innovation-funding-service,"Refactoring and fixing broken tests
"
cd7eeb701d0b894a64492b4b48e6cf24548d138d,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch
"
e07d9163aca4dd4417ad3c82c8b1ce810dcd47a8,InnovateUKGitHub/innovation-funding-service,"IFS-1223 fixing ACC tests and starting to rework finance.html
"
6a152ae379d846d88659fd845b553d71eb58923a,InnovateUKGitHub/innovation-funding-service,"IFS-778 Remove unnecessary checks
"
558c466e211afeadc7ce9a008105b4b229229d0d,InnovateUKGitHub/innovation-funding-service,"Merge pull request #2124 in IFS/innovation-funding-service from bugfix/INFUND-7293 to development

* commit '3c47e90136cb1747e5652e2754aa1dd6dd85e180':
  INFUND-7293 - Enables `spring.messages.always-use-message-format` - Removes (now) unneeded additional validation message for Assessor DOI form
"
4bf47f128961a4516a6744eb26576627ee0f7146,InnovateUKGitHub/innovation-funding-service,"Merge branch 'development' into feature/INFUND-2265-as-an-applicant-i-want-to-be

* development: (221 commits)
  Fixing failing tests
  INFUND-3115 comp dash
  Removed old defunct Service tests
  INFUND-2616 - resolving merge conflicts with development branch
  Refactoring tests to make use of our layer of IFS keywords
  Updating the upload test tags
  Updating the upload test tags
  Fixing previous commit to only check for valid uploads
  Adding an extra check to the upload test
  Adding extra wait validations
  INFUND-2702: Refactoring the Overview and summary tests to use a new application
  Final tag update
  Updating tags
  INFUND-2084 project status table
  INFUND-2936 Bugfix for when there is not a question status there yet.
  INFUND-3057
  INFUND-2700: Refactoring the upload tests
  Adding validations to logout URL test expectations
  INFUND-3237: Tidying up validation
  INFUND-3241 fixing issue with fixed columns in spend profile table
  ...

# Conflicts:
#	ifs-data-service/src/test/java/com/worth/ifs/competition/domain/CompetitionTest.java
"
d56b98846029bd5b1b494ca1db7ed74263bdf4fe,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1434 in IFS/innovation-funding-service from feature/INFUND-7610-refactoring-of-the-competition to robot-test-factory

* commit '15e4cd7cb265445a289d56d5ea4fb0eaa11b872a [formerly db2af9e4c8657a43b8213b0fe30f755301917453]':
  INFUND-7610 Changed the titles of the tests, removed some unnecessary checks.
  INFUND-7610 refactor update comp tests


Former-commit-id: 3e86ae92422d8afb7f72905ba19d95e8c409cb76"
851eb5454e51c7da6417bd4ff5777dd368d171c3,InnovateUKGitHub/innovation-funding-service,"Merge pull request #1572 in IFS/innovation-funding-service from bugfix/INFUND-5136-validation-issues-with-form-mark-up to development

* commit '9432399afd4c24aa0ca8ed375dac39656c7f5eab [formerly cf1eae2e9ac3e7908423403058056166e20b340b]':
  INFUND-5136 updated tests
  INFUND-5136 improve form markup and information structure


Former-commit-id: f425a2e57dcb9d342364b243cda7274bbd75a7eb"
c6f94dc01152becdba6abfe249d2d470609f0509,InnovateUKGitHub/innovation-funding-service,"Merge remote-tracking branch 'origin/development' into INF_publisher_jars_merging

* origin/development: (634 commits)
  Switched to snippets
  INFUND-5953 Removing unused imports
  INFUND-4497 Addressing PR comments
  Added adocs includes to ifs.adoc
  Adding unit tests
  remove unnecessary validator param
  INFUND-5257 - project setup/project/1
  Resolved directives and moved bank details to its own adoc
  INFUND-5490 - document upload non-user
  INFIND-5490 - document upload non-user
  INFUND-6017 feedback textareas
  INFUND-5767 - As a comp exec I want to be able to assign one innovation area to an assessor so invites accuratlely reflect their skill set
  Validation check added for empty post code
  INFUND-5691 Renamed permission rules as per review suggestion.
  INFUND-5052 internal dashboard updates
  INFUND-6029 Changing case of am/pm marker to lower case.
  INFUND-6018-Partner-Bank-Details-SetUp-And-TeamStatus
  INFUND-6029 Replacing midday (12.00pm) with formatted time using pattern hh:mma. See comment from Lisa on INFUND-6029.
  INFUND-5909 - As a comp exec i want to be able to edit and/or add innovation areas of an assessor
  INFUND-5810 - Create a new view for the application overview allowing the application to be removed
  ...

# Conflicts:
#	ifs-data-service/src/main/java/com/worth/ifs/bankdetails/service/BankDetailsRestService.java
#	ifs-data-service/src/main/java/com/worth/ifs/bankdetails/service/BankDetailsRestServiceImpl.java
#	ifs-data-service/src/main/java/com/worth/ifs/project/bankdetails/service/BankDetailsRestService.java
#	ifs-data-service/src/main/java/com/worth/ifs/project/bankdetails/service/BankDetailsRestServiceImpl.java
#	ifs-data-service/src/main/java/com/worth/ifs/user/controller/UserController.java
#	ifs-data-service/src/test/java/com/worth/ifs/assessment/builder/ProcessOutcomeBuilder.java
#	ifs-data-service/src/test/java/com/worth/ifs/assessment/security/AssessmentServiceSecurityTest.java
#	ifs-data-service/src/test/java/com/worth/ifs/bankdetails/service/BankDetailsRestServiceImplTest.java
#	ifs-data-service/src/test/java/com/worth/ifs/invite/builder/CompetitionParticipantResourceBuilderTest.java
#	ifs-data-service/src/test/java/com/worth/ifs/project/bankdetails/service/BankDetailsRestServiceImplTest.java
#	ifs-data-service/src/test/java/com/worth/ifs/user/controller/UserControllerIntegrationTest.java
#	ifs-rest-api-service/src/main/java/com/worth/ifs/assessment/service/AssessmentRestServiceImpl.java
#	ifs-rest-api-service/src/main/java/com/worth/ifs/bankdetails/service/BankDetailsRestService.java
#	ifs-rest-api-service/src/main/java/com/worth/ifs/bankdetails/service/BankDetailsRestServiceImpl.java
#	ifs-rest-api-service/src/test/java/com/worth/ifs/BaseRestServiceUnitTest.java
#	ifs-rest-api-service/src/test/java/com/worth/ifs/assessment/service/AssessmentRestServiceImplTest.java
#	ifs-rest-api-service/src/test/java/com/worth/ifs/bankdetails/service/BankDetailsRestServiceImplTest.java
#	ifs-rest-api-service/src/test/java/com/worth/ifs/user/service/UserRestServiceMocksTest.java
#	ifs-web-service/ifs-application-service/src/test/java/com/worth/ifs/application/ApplicationFormControllerTest.java
#	ifs-web-service/ifs-project-setup-mgt-service/src/test/java/com/worth/ifs/project/monitoringofficer/controller/BankDetailsManagementControllerTest.java
#	ifs-web-service/ifs-project-setup-service/src/test/java/com/worth/ifs/project/ProjectDetailsControllerSecurityTest.java
#	ifs-web-service/ifs-web-core/src/test/java/com/worth/ifs/BaseUnitTest.java


Former-commit-id: f1ad6426b94aa6af91f67114b6723b1d30768783"
7fbbd83588de38660685d3121ab921511e3c85cf,InnovateUKGitHub/innovation-funding-service,"Merge pull request #78 in IFS/innovation-funding-service from feature/IFS-3260-intermittent-failures-in-assessmentfeedbackcontrollertest-and to development

IFS-3260-Unit tests pass

* commit '5462f0cab2161009e1c77a62bee3cb9ba9c60422':
  IFS-2635 - Renames `now` variable to `twoHoursAgo`.
  IFS-2635 - Fixes intermittent failures on AssessmentSummaryControllerTest
  IFS-3260 - Sets 'now' in AssessmentFeedbackController to be a couple our hours in the past.
"
253a3eb9b926afb1e1f7fd13d4b7968f1ae1b8f7,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch
"
0c702b619a9f4bee19f37dfb3e3b4f4fd805171e,InnovateUKGitHub/innovation-funding-service,"Merge branch 'feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch' of https://devops.innovateuk.org/code-repository/scm/ifs/innovation-funding-service into feature/INFUND-2593-as-a-tester-i-want-to-be-able-to-create-acceptance-tests-on-a-separate-branch


Former-commit-id: ae2d9a72c8adeab69643b30ba419c3942f3fd55b"
7360e4575cbe6dce9275d083c22719bccd065f13,InnovateUKGitHub/innovation-funding-service,"INFUND-113   Style summary page + small bug fixes:

- clean up html
- made overlay clickable background show it with a cursor
- made the progress indicators and headers better match the prototype
"
1d8b19c186d7c61454ca1931527c0e9679ca791b,InnovateUKGitHub/innovation-funding-service,"IFS-1324 IFS-1325 - Reverted enum rename as it didn't fall in line with the other enum names
"
8861c6972b24d42bd069aa89b2c4edf5feed1e24,department-of-veterans-affairs/vets-website,"[SM] NoticeBox + MessageDetails (#3093)

* Message rows in folders link to threads.

* Fetch thread based on id from URL query param.

* Added NoticeBox component to Thread view.

* Removed note on top of thread view. Removed message count next to thread title.

* Un-bolded thread title. Removed styles for removed note at top of thread view.

* Combine Main, MainMobile components.

- Combined child paths of Main, MainMobile to be child paths of Main alone.
- Removed MainMobile component.
- Beginning mobile folder navigation styles.
- Closes department-of-veterans-affairs/messaging-fe#57

* Added message details and the button to display them. Currently always display by default.

* Created MessageDetails component and moved relevant code to it. Details now appear upon clicking button, but do not close yet unless opening another details.

* Click behavior around MessageDetails box. Closes when clicking outside of it.

* Changed use of componentWillMount for API requests to componentDidMount.

* Added clarifying comment and pared down validation for props that are necessary for MessageDetails.
"
7a1dd0af8a02ac1581b72f0eb3e63f66bc110c46,department-of-veterans-affairs/vets-website,"All claims updatable payments mg (#8726)

Changes all claims payments screen to be updatable. Old async fetch version goes back into Increase Form files."
521c40298363a51ecfdbfaf6c75f8d6c240cc260,department-of-veterans-affairs/vets-website,"Alerts component for Appeals v2. (#6834)

* Begin work on Alerts for Appeals v2.

* Refactor html into Alerts component, wire up data

* Refactor individual alert into own component

* Remove .only unit test restrictions

* Update Alert test with new props

* Add cssClass property to default case in getAlertContent helper

* Align alerts with Timeline
"
5cad38e35c86bbc234fc7973c7005b015a273ca8,department-of-veterans-affairs/vets-website,"Prescription list sorting for desktop and mobile (#4475)

* sorting component with dropdown for card view

* padding fix for direction links

* clean up variable assignments

* Update sorting component for History tab

* PR feedback
"
63ee80d4755d1a5c81050bd7b8de9f66f511b4dd,department-of-veterans-affairs/vets-website,"Bah 781 choice bug (#9150)

* Separated 781 and 781a upload choice form data

* Cleanup

* Removed unnecessary deconstruction in utils test
"
c7bd8c9672b5db2e4b78ee409f982fee773cb8f6,department-of-veterans-affairs/vets-website,"Make changes from code review
"
db1264163aaf5bbe5e40838077ebf3fc502807a6,department-of-veterans-affairs/vets-website,"Refactor styles
"
e1c26c1211a2245548deed9730db0d75d4e8e418,department-of-veterans-affairs/vets-website,"migrate design system components (#7495)

* migrate alert box

* initial component migration for testing

* remove modification for components that need to e updated in design system

* remove errorable text input

* update import;

* update yarn lock

* fix segmented progress bar

* fix typo in improt

* restore errorablecheckbox

* unmigrate loading indicator

* migrate Alert Box

* alertbox tests

* migrate OMBInfo imports

* migrate SegmentedProgressBar imports

* refactor SystemDownView imports

* remove SegmentedProgressBar

* migrate ExpandingGroup imports

* migrate ProgressButton imports

* refactor IconHelp imports

* Revert ""refactor SystemDownView imports""

This reverts commit f352153fa1987a2aa03b1e9babd82eb23005e703.

* remove unit tests

* finish reverting systemdownview migration
"
3edb9522658234a0243de97f80fe4e5988ac1a12,department-of-veterans-affairs/vets-website,"Renaming _health-care to _healthcare, updating URL config. (#2443)

* Renaming _health-care to _healthcare, updating URL config.

- Closes #2442
- Related to #2435

* Fixing healthcare URL

* Updating paths in entry.js

* CHanging paths in package.json, karma.conf.js

* Fixing paths in karma.conf.js package.json didn't work. Reverting.

* Updating paths in tests.

* Changing remaining instances of health-care to healthcare
"
21867581d6944b5d76bc8e9ba72c3f6abdd91901,department-of-veterans-affairs/vets-website,"All claims split training pay mg (#9093)

Splits training pay and waive training pay questions for 526 All Claims onto two separate pages."
17bc6f60aeae04c64985ea57bf31517b4a2af55c,wso2-extensions/identity-inbound-auth-oauth,"Refactored the OAuth2ScopeService without powermock
"
2e025e5ad8304faa9e1466ce600d455ee955a23e,wso2-extensions/identity-inbound-auth-oauth,"remove unnecessary files
"
34bc0ebcb5a2aaac4c59e8e5beb6718b0c780f30,wso2-extensions/identity-inbound-auth-oauth,"Merge remote-tracking branch 'wso2/master' into dao-refactoring
"
80b5740f6a826b40fb65ddd8a0b8fa037e6819b7,wikimedia/mediawiki-extensions-MobileFrontend,"build: Update eslint-config-wikimedia to 0.9.0

Move rules to .eslintshared.json so we can load them
after wikimedia/client in resources/.eslintrc.json, where
wikimedia/client needs to be loaded after the root
.eslintrc.json.

Drop eslint-plugin-qunit and eslint as these are now
dependencies of eslint-config-wikimedia.

New max-statements-per-line rule forces single line
functions to be split.

Change-Id: I0f5cd8c7a98118ec2af1885302518ccdd89a2f2e
"
f49554807e1de6d63b620ac5bfe7e7b11362e9c4,wikimedia/mediawiki-extensions-MobileFrontend,"Use WikidataPageBanner instead of MobileFrontend specific code from banners

Dependencies are merged and WikidataPageBanner has feature parity
and design parity with MobileFrontend's banner code.

It also gives you many bug fixes that are blocking T101108
With WikidataPageBanner installed but limited to Minerva it can
safely be installed on all wikis in the cluster and be blacklisted for
all skins over than mobile web. With the origin parameter editors can fix up
positioning issues for autogenerated images with {{PAGEBANNER:|origin=-.4,-.3}}

The future is here.

Bug: T101108
Change-Id: I12b10b1875c451e127ab5e39fd6b47f501502b6e
"
165dd6b1eb6acdfd39114b808650506323aadcd2,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Hygiene: Cleanup special page styles"""
be1d59603ef685bc25d4c5d12226b0bbf9fe3f8a,wikimedia/mediawiki-extensions-MobileFrontend,"Hygiene: Kill navigation.less

* Only apply background color to body tag
* Clean up background color on #mw-mf-page-center for clarity


Change-Id: I37c54023b0829cf97ea989cdc03ac0d6db6cdb71
"
30427e494e0445dde52cdf42e4a4bf7a4d8b9758,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Hygiene: collapse mobile.search.api into mobile.startup"""
03f2d08bb963047861b80ee123e1d5aa78bef23f,wikimedia/mediawiki-extensions-MobileFrontend,"Hygiene: rename InfiniteScroll to ScrollEndEmitter

Clarify responsibilities by renaming InfiniteScroll to ScrollEndEmitter.
There is nothing magical about ScrollEndEmitter and, perhaps, in the
future it will be initialized in a disabled state with all control
pushed onto the clients.

Bug: T191454
Change-Id: Ic89ae2458d51bd74c1ff6518fa464c929305e1b6
"
32bebcc64eff055141f20fb1ffa00f3dd42d44a0,wikimedia/mediawiki-extensions-MobileFrontend,"Migrate Overlay.test.js to tests/node-qunit/mobile.startup

Other notable changes:

* Replaces global jQuery references with calls to util.js
* Removes line/comment from MobileFrontend.hooks.php
* Removes usage of sandbox.useFakeTimers as it wasn't clear what its
purpose was and tests pass without it
* Replace mw.template.get call in the test with Hogan.compile
* window.scrollTo was stubbed otherwise jsdom would throw ""Not
implemented"" errors

Bug: T207341
Change-Id: I4c7b4971c6a520a67476c66d043e2e15067ef66b
"
36499b7e32f18348d3e2f23a34c100814ebcfdec,wikimedia/mediawiki-extensions-MobileFrontend,"Hygiene: Refactor PageActionOverlay as PointerOverlay

Changes:
* Document pointer overlay
* Allow appendToElement to be passed as an option (this will allow us in future
to append to things outside content)
* Now extends Overlay rather than ContentOverlay since we want to use pointers in
the left navigation menu

Change-Id: I4db95647d7d97d50f3d9afb48aaa0223feda2074
"
23d33d35874099c83d48383f46de8e3191c356b8,wikimedia/mediawiki-extensions-MobileFrontend,"Remove superfluous GetMobileNotice call.

* Currently, GetMobileNotice gets called twice instead of once.
* This change will make it so that GetMobileNotice is only called once, from the WML context. It also removes some effectively dead code in a template view.
* This change can be implemented independently.
* Change 69336 may result in GetMobileNotice becoming the definitive banner generation hook (instead of the current split between MinervaPreRender and GetMobileNotice), although to be functional it will need to give the callee full control over the banners array at the last possible moment (similar to MinervaPreRender). Discussion is underway on change 69336.

Change-Id: I151858a632fbd3456f38d2c28e512e959bd5a757
"
433655ecdea64dabed403b401d4f8669f1238c78,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Replace setting() with get/setConfig; update title on history change."""
619fb7e16984b2a0351bc3cc745b9721461eb625,wikimedia/mediawiki-extensions-MobileFrontend,"Load MediaWiki:Mobile.css as a render-blocking style

For consistency with MediaWiki:Common.css, which is also render-blocking.

Split MediaWiki:Mobile.css off into its own module (mobile.site.styles)
and load it using addModuleStyles(). The JS stays in mobile.site.

Bonus: respect $wgUseSiteJs and $wgUseSiteCss.

Bug: T190083
Change-Id: I404dfbc2ee377426fda8377437dcf7bb5e8a0c4f
"
d92e1920cda0aaa81d4428d70ffe1e143c2efb02,wikimedia/mediawiki-extensions-MobileFrontend,"Hygiene: The big skin cleanup

By exposing a way to add to template data in core
a lot of our skin code disappears magically

Note: Toggling does not work in the desktop version of
the Minerva skin. This is a known problem and being addressed
separately.

Change-Id: I43fc26bf334753b189e20921f142bade7658ac31
Dependency: I0a9a7f10ea6a2e9c90c2a83e7c5f7fa56fa0fb93
"
a52dfaa7025eb0efc8f383e8be9cc722878ff3f4,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Hygiene: Consolidate steps for visiting pages"""
89d1cd8a3c03d799ce8fb9bbd42de0d5d54ad2d2,wikimedia/mediawiki-extensions-MobileFrontend,"Hygiene: Kill SkinMobile

Let's stop confusing people. One skin to rule them all.
Although the isMobileMode conditions might seem hacky
I'm confident that they will not be needed too frequently.

Kill addPageClass method - not used anywhere.
Remove .mobile class in favour of .skin-minerva
Add documentation to existing methods
Update css rules to hide .printfooter that now leaks from core

Change-Id: If323ee54e831c8e6dd0c2e8e668a30767d86b8f7
"
de6eac2b96903af858a63326300b1d9689e9403a,wikimedia/mediawiki-extensions-MobileFrontend,"Add template partials support to View

This makes template inheritance possible and template reusability
easier. See Overlay.js and EditorOverlay.js for an example.

Change-Id: Ic36ec557cf9cc24f785a9a04642fccc7ab383936
"
df2f2e1ace788c3b5f3652ccf2228ebd0d9f5ebc,wikimedia/mediawiki-extensions-MobileFrontend,"Add template dependency to Mantle extension

Move all templating related code there.

Change-Id: Ia060b2295e011c136da17007df662cd98274f4e2
"
972eb2296a10add33db9d80fdb9e9bde300cc1b1,wikimedia/mediawiki-extensions-MobileFrontend,"Gruntfile cleanup

Change-Id: I43604998687200f046e2a74bfa205df77c164371
"
b44ca951a0808fefa1a0e241e252a364aff3195a,wikimedia/mediawiki-extensions-MobileFrontend,"Merge ""Refactor login hook into MobileFrontend.hooks.php"""
843cc7ff1b807f29cfd50def02ec7a1704edfed6,wikimedia/mediawiki-extensions-MobileFrontend,"Move progress-bar.js to modules/uploads/ProgressBar.js

Bug: 73247
Change-Id: I092f841798c4694dfff757bc4590bc5934ef11c9
"
3b2bd7fd614f502154ea340fa2420dc407404dde,wikimedia/mediawiki-extensions-MobileFrontend,"Improve Talk Overlay

* Fix ""close TalkOverlay when TalkSectionOverlay is closed"" by call .show()
after TalkSectionOverlay or TalkSectionAddOverlay is closed.

* Added header to TalkSectionOverlay and TalkSectionAddOverlay to show
back instead of close button.

* Show Title of Talk as Title (of Overlay) in TalkSectionOverlay instead of
a seperate line.

* Use named button in TalkSectionAddOverlay (like Editor) instead of image.

* Cursor for links in talk overlay should be a pointer.

* Fixed ""Uncaught TypeError: Cannot read property 'hide' of undefined"" after
adding a new discussion by remove the try to hide talkOverlay. Main problem addressed
in change I2a31a8b704adc2401e1b2c030cfe54a0eb7c771e

Bug: 64105
Change-Id: If76138eaa015607241bad2ec773d48cf2daf650a
"
4a0d0bc7ca7b58d89acfa9fb1d1e12c657aacc42,wikimedia/mediawiki-extensions-MobileFrontend,"Hygiene: Introduce util module

Stop making these globals and move them to a logical module

* M.query -> util.query
* M.escapeHash -> util.escapeHash

Change-Id: I75ffb96968b52592d17848ea2995ba71fb16a8a4
"
7431f5e52607029af43aac0acb8951a847b17458,wikimedia/mediawiki-extensions-MobileFrontend,"Alpha: Surface nearby articles

Create a reusable Nearby view
Note: currently for convenience putting all messages in
mobile.nearby module in anticipation of refactor

Moved mobile-frontend-nearby-link and
mobile-frontend-nearby-directions to correct module

Change-Id: I99eecdcd20eed8b4df88152f0eeecc6e730522cb
"
1b420ee4171ca681b888228a914d82e474c5f349,architecture-building-systems/CityEnergyAnalyst,"refactoring and documentation
"
397a976d16f42ccb1bc1c2ecc9dfa565f60bec39,architecture-building-systems/CityEnergyAnalyst,"delete redundant columns in output files
"
2faec70393a49b1fcd6c27b045029ebd7f13d4ac,architecture-building-systems/CityEnergyAnalyst,"refactored to SunProperties
"
f3b367c870fe323b3d38397fba837b540826c41f,architecture-building-systems/CityEnergyAnalyst,"refactor
"
7d062551c49e811dddad06215259574b1b894844,architecture-building-systems/CityEnergyAnalyst,"refactoring and write chiller_vcc outputs into dict
"
79c4193c4a55545d744b034e5e7826246229ea42,architecture-building-systems/CityEnergyAnalyst,"work on refactoring storage optimization
"
aa657f0323049cb460e8941917814f28208a9895,smallAreaHealthStatisticsUnit/rapidInquiryFacility,"More code refactor and design responsiveness
"
